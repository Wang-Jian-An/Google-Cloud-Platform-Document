{"title": "Compute Engine - Migrating from activity logs to audit logs", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Migrating from activity logs to audit logs\nIf you use [activity logs](/compute/docs/activity-logs) to view Compute Engine admin activity and system events, read this guide to understand how to find similar log entries using [audit logs](/compute/docs/audit-logging) instead.\nCompute Engine activity logs are deprecated. You can identify activity log entries based on their log name:\n```\nlogName: \"projects/PROJECT_ID/logs/compute.googleapis.com%2Factivity_log\"\n```\nCompute Engine audit logs contain the same information that is available through activity logs, and more. But audit logs present the information [differently](#differences_between_activity_logs_and_audit_logs) compared to activity logs. So you'll need to adjust your queries.\n", "content": "## How to migrate from activity logs to audit logs\nTo use audit logs instead of activity logs, adjust your [queries](/logging/docs/view/logs-explorer-interface) . Use the following steps.\n- Find your old queries. For example, you might have saved them in a saved search in the [Logs Explorer](https://console.cloud.google.com/logs/query) or created a script using the API or SDK. For more information about how you can monitor your resources, see the [Logging](/logging/docs) documentation.\n- Replace the activity log fields with appropriate audit log fields. Refer to the [table](#log_entry_field_mappings) to see how the fields map to each other.For example, if your legacy activity log query looked for a field named `jsonPayload.resource.name` , your new audit log query should look for `protoPayload.resourceName` instead.\n- Save and use your new audit log query. For example, [create a saved search](/logging/docs/view/building-queries#saved-queries) in Cloud Logging or update your scripts.\n### Examples\nHere are some examples of converted queries:\n**Querying for activity related to a specific resource**\n| Unnamed: 0   | Query example                                                                                                     |\n|:--------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Legacy activity log | gcloud logging read jsonPayload.resource.name=\"VM_NAME\"                                                                                          |\n| Audit log   | Use one of the following options gcloud logging read protoPayload.resourceName:\"VM_NAME\" gcloud logging read protoPayload.resourceName=\"projects/PROJECT_ID/zones/ZONE/instances/VM_NAME\" With option 1, the \"has\" (:) operator matches all resources in your project that have a name that includes VM_NAME. With option 2, the \"equals\" operator (=) matches only on a specific fully qualified resource with that name. |\n**Querying for recent admin activity log entries**\n| Unnamed: 0   | Query example                    |\n|:--------------------|:---------------------------------------------------------------------------------------------|\n| Legacy activity log | gcloud logging read logName=\"projects/PROJECT_ID/logs/compute.googleapis.com%2Factivity_log\" |\n| Audit log   | gcloud logging read logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" |\n**Querying for recent instance creation log entries**\n| Unnamed: 0   | Query example                                   |\n|:--------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Legacy activity log | gcloud logging read 'logName=\"projects/PROJECT_ID/logs/compute.googleapis.com%2Factivity_log\" AND jsonPayload.event_subtype=\"compute.instances.insert\"' |\n| Audit log   | gcloud logging read 'logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" AND protoPayload.methodName:\"compute.instances.insert\"' |\n**Querying for the start of all instance creation operations**\n| Unnamed: 0   | Query example                          |\n|:--------------------|:---------------------------------------------------------------------------------------------------------------------|\n| Legacy activity log | gcloud logging read 'jsonPayload.event_type=\"GCE_API_CALL\" AND jsonPayload.event_subtype=\"compute.instances.insert\"' |\n| Audit log   | gcloud logging read 'operation.first=\"true\" AND protoPayload.methodName:\"compute.instances.insert\"'     |\n**Querying for the completion of any operation**\n| Unnamed: 0   | Query example             |\n|:--------------------|:----------------------------------------------------------------|\n| Legacy activity log | gcloud logging read jsonPayload.event_type=\"GCE_OPERATION_DONE\" |\n| Audit log   | gcloud logging read operation.last=\"true\"      |\n## Differences between activity logs and audit logs\nRead this section to learn how audit logs are structured differently from activity logs. Keep these differences in mind as you convert legacy activity log queries into audit log queries. For example, in your queries, replace all legacy activity log field names with the corresponding audit log field names.\nWhile audit logging and activity logging both return [log entry](/logging/docs/reference/v2/rest/v2/LogEntry) objects, they have the following differences:\n- Different field names. See the [field name mapping](#log_entry_field_mappings) table for details.\n- Different field values, including:- Different [log names](#log_names) : Audit logs have log names that contain`cloudaudit.googleapis.com`.\n- Different [payloads](#payloads) : Audit logs return a`protoPayload`field instead of a`jsonPayload`.\n- Fully qualified [resource names](#resource_names) : Audit logs return resource names that include their path, for example:`projects/my-project/zones/us-east1-b/instances/my-instance-name`.\n- Versioned [method names](#method_names) : Audit logs return method names that include their version, for example,`v1`.Here is an example that shows differences in log names and payloads:\n| Unnamed: 0   | Log entry example                                                                                     |\n|:--------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Legacy activity log | { insertId: \"1x3bbhjg2wwvz1x\" jsonPayload: { event_subtype: \"compute.instances.stop\" ... resource: { id: \"12345678900123456789\" name: \"my-instance-name\" type: \"instance\" zone: \"us-east1-b\" } ... } labels: {\u2026} logName: \"projects/my-project/logs/compute.googleapis.com%2Factivity_log\" receiveTimestamp: \"2019-08-26T12:22:44.602794616Z\" ... } |\n| Audit log   | { insertId: \"-w6o499e22fwk\" logName: \"projects/my-project/logs/cloudaudit.googleapis.com%2Factivity\" protoPayload: { ... methodName: \"beta.compute.instances.stop\" ... resourceName: \"projects/my-project/zones/us-east1-b/instances/my-instance-name\" } receiveTimestamp: \"2019-08-26T12:22:46.881198276Z\" ... }           |\n## Mapping fields from activity logs to audit logs\nUse the following tables to map activity log fields to corresponding audit log fields in your queries.\n### Fields\nUse the following table to replace legacy activity log fields with audit log fields in your updated queries.\nFor example, if your legacy activity log query contained a [filter](/logging/docs/view/logs-explorer-interface) based on `jsonPayload.resource.type` , your new audit log query should filter on `resource.type` instead.\n| Legacy activity log field     | Audit log field                |\n|:--------------------------------------------|:-----------------------------------------------------------------------------|\n| insertId         | insertId                  |\n| jsonPayload.actor.user      | protoPayload.authenticationInfo.principalEmail        |\n| jsonPayload.event_subtype     | protoPayload.methodName              |\n| jsonPayload.event_timestamp_us    | timestamp                 |\n| jsonPayload.event_type=\"GCE_API_CALL\"  | operation.first=\"true\"              |\n| jsonPayload.event_type=\"GCE_OPERATION_DONE\" | operation.last=\"true\"              |\n| jsonPayload.request       | protoPayload.request               |\n| jsonPayload.operation      | operation                 |\n| jsonPayload.resource.id      | resource.labels.instance_id             |\n| jsonPayload.resource.name     | protoPayload.resourceName             |\n| jsonPayload.resource.type     | resource.type                |\n| jsonPayload.resource.zone     | resource.labels.zone               |\n| jsonPayload.trace_id      | operation.id                 |\n| jsonPayload.user_agent      | protoPayload.requestMetadata.callerSuppliedUserAgent       |\n| labels.compute.googleapis.com/resource_id | resource.labels.[RESOURCE_TYPE]_id           |\n| labels.compute.googleapis.com/resource_name | protoPayload.resourceName             |\n| labels.compute.googleapis.com/resource_type | resource.type                |\n| labels.compute.googleapis.com/resource_zone | One of: resource.labels.zone resource.labels.region resource.labels.location |\n| logName          | logName                  |\n| receiveTimestamp       | receiveTimestamp                |\n| resource.labels        | resource.labels                |\n| severity         | severity                  |\n| timestamp         | timestamp                 |\n### Field values\nUse the following tables to map legacy activity log field values to audit log field values. Compared to activity logs, audit logs have multiple [log name](#log_names) values and different [payload](#payloads) values. Audit log entries also return fully qualified resource names and versioned [method names](#method_names) .\nTo find an audit log entry, look for a `logName` that includes `cloudaudit.googleapis.com` .\n| Unnamed: 0   | Log name               | Log contents      |\n|:--------------------|:------------------------------------------------------------------|:----------------------------------|\n| Legacy activity log | projects/PROJECT_ID/logs/compute.googleapis.com%2Factivity_log | Admin activity and system events |\n| Audit log   | projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity  | Admin activity     |\n| Audit log   | projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Fsystem_event | System events      |\n| Audit log   | projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Fdata_access | Data access      |\nIn each audit log entry, look for a `protoPayload` instead of a `jsonPayload` .\n| Unnamed: 0   | Payload type | Payload example                                                                                                  |\n|:--------------------|:---------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Legacy activity log | jsonPayload | jsonPayload: { actor: {\u2026} event_subtype: \"compute.instances.start\" event_timestamp_us: \"1566404493487248\" event_type: \"GCE_API_CALL\" ip_address: \"\" operation: {\u2026} request: {\u2026} resource: {\u2026} trace_id: \"operation-1566404491560-590a2f74b4705-a1ae0686-d896d772\" user_agent: \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36\" version: \"1.2\" } |\n| Audit log   | protoPayload | protoPayload: { @type: \"type.googleapis.com/google.cloud.audit.AuditLog\" authenticationInfo: {\u2026} methodName: \"v1.compute.instances.start\" request: {\u2026} requestMetadata: {\u2026} resourceName: \"projects/my-project/zones/us-central1-a/instances/alert\" serviceName: \"compute.googleapis.com\" }                             |\nTo learn how these payloads relate to each other, and how to map legacy activity log fields to audit log fields, read [log entry field mappings](#log_entry_field_mappings) .\nIn audit logs, API resource names (in the `protoPayload.resourceName` field) are fully qualified, for example:\n```\nresourceName: \"projects/PROJECT_ID/zones/ZONE/instances/VM_NAME\"\n```\nYou can still use partial names but you must fix your query to use the \"has\" operator ( `:` ) instead of the \"equals\" operator.\nUse one of the following options in your audit log queries to filter on a specific resource:\n- ```\ngcloud logging read protoPayload.resourceName:\"VM_NAME\"\n```\n- ```\ngcloud logging read protoPayload.resourceName=\"projects/PROJECT_ID/zones/ZONE/instances/VM_NAME\"\n```In audit logs, API method names (in the `protoPayload.methodName` field) are prefixed with their version, like: `v1.compute.instances.delete` .\n| Unnamed: 0   | Field      | Value      | Query example                                     |\n|:--------------------|:--------------------------|:----------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Legacy activity log | jsonPayload.event_subtype | RESOURCE.METHOD    | jsonPayload.event_subtype=compute.instances.delete                            |\n| Audit log   | protoPayload.methodName | API_VERSION.RESOURCE.METHOD | protoPayload.methodName=v1.compute.instances.delete or protoPayload.methodName=beta.compute.instances.delete or protoPayload.methodName:compute.instances.delete |\nYou can still use unversioned method names in your audit log queries, but you must fix your query to use the \"has\" operator ( `:` ) instead of the \"equals\" operator ( `=` ). For example: `protoPayload.methodName:compute.instances.delete` returns all instance delete API calls, regardless of version. For more information about operators, see [comparisions](/logging/docs/view/advanced-queries#comparisons) .\n## What's next\n- Read the [quick start](/logging/docs/write-query-log-entries-gcloud) for using logging tools.\n- Learn more about [viewing log entries](/logging/docs/view/logs-explorer-interface) .\n- Learn about viewing logs with [advanced logging filters](/logging/docs/view/advanced-queries) .\n- Learn more about Compute Engine [Cloud Audit Logs](/compute/docs/audit-logging) .", "guide": "Compute Engine"}