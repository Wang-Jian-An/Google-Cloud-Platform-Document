{"title": "Vertex AI - \u5f9e JupyterLab \u67e5\u8a62 BigQuery \u4e2d\u7684\u6578\u64da", "url": "https://cloud.google.com/vertex-ai/docs/workbench/managed/bigquery?hl=zh-cn", "abstract": "# Vertex AI - \u5f9e JupyterLab \u67e5\u8a62 BigQuery \u4e2d\u7684\u6578\u64da\n# \u5f9e JupyterLab \u67e5\u8a62 BigQuery \u4e2d\u7684\u6578\u64da\nVertex AI Workbench \u8a17\u7ba1\u5f0f\u7b46\u8a18\u672c [\u5df2\u68c4\u7528](https://cloud.google.com/vertex-ai/docs/deprecations?hl=zh-cn) \u3002\u81ea 2025 \u5e74 1 \u6708 30 \u65e5\u8d77\uff0c\u6211\u5011\u5c07\u7d42\u6b62\u5c0d\u8a17\u7ba1\u5f0f\u7b46\u8a18\u672c\u7684\u652f\u6301\uff0c\u4e26\u4e14\u5c07\u4e0d\u518d\u652f\u6301\u5275\u5efa\u8a17\u7ba1\u5f0f\u7b46\u8a18\u672c\u5be6\u4f8b\u3002\u73fe\u6709\u5be6\u4f8b\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\uff0c\u4f46\u6211\u5011\u5c07\u4e0d\u518d\u63d0\u4f9b\u88dc\u4e01\u3001\u66f4\u65b0\u548c\u5347\u7d1a\u3002\u5982\u9700\u7e7c\u7e8c\u4f7f\u7528 Vertex AI Workbench\uff0c\u6211\u5011\u5efa\u8b70\u60a8 [\u5c07\u8a17\u7ba1\u5f0f\u7b46\u8a18\u672c\u5be6\u4f8b\u9077\u79fb\u5230 Vertex AI Workbench \u5be6\u4f8b](https://cloud.google.com/vertex-ai/docs/workbench/managed/migrate-to-instances?hl=zh-cn) \u3002\n\u672c\u9801\u9762\u4ecb\u7d39\u5982\u4f55\u5f9e Vertex AI Workbench \u4ee3\u7ba1\u5f0f\u7b46\u8a18\u672c\u5be6\u4f8b\u7684 JupyterLab \u754c\u9762\u67e5\u8a62\u5b58\u5132\u5728 BigQuery \u4e2d\u7684\u6578\u64da\u3002\n", "content": "## \u5728\u7b46\u8a18\u672c (IPYNB) \u6587\u4ef6\u4e2d\u67e5\u8a62 BigQuery \u6578\u64da\u7684\u65b9\u6cd5\n\u5982\u9700\u5f9e JupyterLab \u7b46\u8a18\u672c\u6587\u4ef6\u4e2d\u67e5\u8a62 BigQuery \u6578\u64da\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 `%%bigquery` \u9b54\u6cd5\u547d\u4ee4\u548c Python \u7248 BigQuery \u5ba2\u6236\u7aef\u5eab\u3002\n\u4ee3\u7ba1\u5f0f\u7b46\u8a18\u672c\u5be6\u4f8b\u9084\u5305\u542b BigQuery \u96c6\u6210\uff0c\u53ef\u8b93\u60a8\u5f9e JupyterLab \u754c\u9762\u700f\u89bd\u548c\u67e5\u8a62\u6578\u64da\u3002\n\u672c\u9801\u9762\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528\u9019\u4e9b\u65b9\u6cd5\u3002\n## \u6e96\u5099\u5de5\u4f5c\n[\u5275\u5efa\u4ee3\u7ba1\u5f0f\u7b46\u8a18\u672c\u5be6\u4f8b](https://cloud.google.com/vertex-ai/docs/workbench/managed/create-instance?hl=zh-cn#create) \uff08\u5982\u679c\u60a8\u5c1a\u672a\u5275\u5efa\uff09\u3002\n## \u6253\u958b JupyterLab\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u524d\u5f80 **\u4ee3\u7ba1\u5f0f\u7b46\u8a18\u672c** \u9801\u9762\u3002 [\u524d\u5f80\u201c\u4ee3\u7ba1\u5f0f\u7b46\u8a18\u672c\u201d](https://console.cloud.google.com/vertex-ai/workbench/managed?hl=zh-cn) \n- \u5728\u4ee3\u7ba1\u5f0f\u7b46\u8a18\u672c\u5be6\u4f8b\u7684\u540d\u7a31\u65c1\u908a\uff0c\u9ede\u64ca **\u6253\u958b JupyterLab** \u3002\u60a8\u7684\u4ee3\u7ba1\u5f0f\u7b46\u8a18\u672c\u5be6\u4f8b\u6703\u6253\u958b JupyterLab\u3002## \u700f\u89bd BigQuery \u8cc7\u6e90\nBigQuery \u96c6\u6210\u63d0\u4f9b\u4e86\u4e00\u500b\u7a97\u683c\uff0c\u4f9b\u60a8\u700f\u89bd\u60a8\u6709\u6b0a\u8a2a\u554f\u7684 BigQuery \u8cc7\u6e90\u3002\n- \u5728 JupyterLab \u5c0e\u822a\u83dc\u55ae\u4e2d\uff0c\u9ede\u64ca **\u7b46\u8a18\u672c\u4e2d\u7684 BigQuery** \u3002 **BigQuery** \u7a97\u683c\u5217\u51fa\u4e86\u53ef\u7528\u7684\u9805\u76ee\u548c\u6578\u64da\u96c6\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u57f7\u884c\u4ee5\u4e0b\u4efb\u52d9\uff1a- \u5982\u9700\u67e5\u770b\u6578\u64da\u96c6\u7684\u8aaa\u660e\uff0c\u8acb\u96d9\u64ca\u6578\u64da\u96c6\u540d\u7a31\u3002\n- \u8981\u986f\u793a\u6578\u64da\u96c6\u7684\u8868\u3001\u8996\u5716\u548c\u6a21\u578b\uff0c\u8acb\u5c55\u958b\u6578\u64da\u96c6\u3002\n- \u5982\u9700\u5728 JupyterLab \u4e2d\u4ee5\u6a19\u7c64\u9801\u7684\u5f62\u5f0f\u6253\u958b\u6458\u8981\u8aaa\u660e\uff0c\u8acb\u96d9\u64ca\u8868\u3001\u8996\u5716\u6216\u6a21\u578b\u3002\n **\u6ce8\u610f** \uff1a\u5728\u8868\u7684\u6458\u8981\u8aaa\u660e\u4e0a\uff0c\u9ede\u64ca **\u9810\u89bd** \u6a19\u7c64\u9801\u4ee5\u9810\u89bd\u8868\u7684\u6578\u64da\u3002\u4e0b\u5716\u986f\u793a\u4e86\u5728 `bigquery-public-data` \u9805\u76ee\u7684 `google_trends` \u6578\u64da\u96c6\u4e2d\u627e\u5230\u7684 [international_top_terms \u8868](https://console.cloud.google.com/bigquery?p=bigquery-public-data&%3Bd=google_trends&%3Bt=international_top_terms&%3Bpage=table&hl=zh-cn) \u7684\u9810\u89bd\uff1a ## \u4f7f\u7528 %%bigquery \u9b54\u6cd5\u547d\u4ee4\u67e5\u8a62\u6578\u64da\n\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u5728\u7b46\u8a18\u672c\u55ae\u5143\u4e2d\u5beb\u5165 SQL\uff0c\u4e26\u5c07 BigQuery \u4e2d\u7684\u6578\u64da\u8b80\u53d6\u5230 Python \u7b46\u8a18\u672c\u3002\n\u4f7f\u7528\u4e00\u500b\u6216\u5169\u500b\u767e\u5206\u6bd4\u5b57\u7b26\uff08 `%` \u6216 `%%` \uff09\u7684\u9b54\u6cd5\u547d\u4ee4\u53ef\u8b93\u60a8\u4f7f\u7528\u6700\u5c11\u7684\u8a9e\u6cd5\u5728\u7b46\u8a18\u672c\u4e2d\u8207 BigQuery \u9032\u884c\u4ea4\u4e92\u3002Python \u7248 BigQuery \u5ba2\u6236\u7aef\u5eab\u6703\u81ea\u52d5\u5b89\u88dd\u5728\u4ee3\u7ba1\u5f0f\u7b46\u8a18\u672c\u5be6\u4f8b\u4e2d\u3002\u5728\u5f8c\u81fa\uff0c `%%bigquery` \u9b54\u6cd5\u547d\u4ee4\u4f7f\u7528 Python \u7248 BigQuery \u5ba2\u6236\u7aef\u5eab\u904b\u884c\u7d66\u5b9a\u67e5\u8a62\uff0c\u5c07\u7d50\u679c\u8f49\u63db\u7232 Pandas DataFrame\uff0c\u4ee5\u53ca\u8996\u9700\u8981\u5c07\u7d50\u679c\u4fdd\u5b58\u5230\u8b8a\u91cf\u4e2d\uff0c\u7136\u5f8c\u986f\u793a\u7d50\u679c\u3002\n**\u6ce8\u610f** \uff1a\u5f9e `google-cloud-bigquery` Python \u8edf\u4ef6\u5305 1.26.0 \u7248\u958b\u59cb\uff0c\u9ed8\u8a8d\u4f7f\u7528 [BigQuery Storage API](https://cloud.google.com/bigquery/docs/reference/storage?hl=zh-cn) \u5f9e `%%bigquery` \u9b54\u6cd5\u547d\u4ee4\u4e0b\u8f09\u7d50\u679c\u3002\n- \u5982\u9700\u6253\u958b\u7b46\u8a18\u672c\u6587\u4ef6\uff0c\u8acb\u9078\u64c7 **\u6587\u4ef6 > \u65b0\u5efa > \u7b46\u8a18\u672c** \u3002\n- \u5728 **\u9078\u64c7\u5167\u6838** \u5c0d\u8a71\u6846\u4e2d\uff0c\u9078\u64c7 **Python\uff08\u672c\u5730\uff09** \uff0c\u7136\u5f8c\u9ede\u64ca **\u9078\u64c7** \u3002\u7cfb\u7d71\u6703\u6253\u958b\u60a8\u7684\u65b0 IPYNB \u6587\u4ef6\u3002\n- \u5982\u9700\u7372\u53d6 `international_top_terms` \u6578\u64da\u96c6\u4e2d\u570b\u5bb6/\u5730\u5340\u7684\u5340\u57df\u6578\uff0c\u8acb\u8f38\u5165\u4ee5\u4e0b\u8a9e\u53e5\uff1a```\n%%bigquerySELECT\u00a0 country_code,\u00a0 country_name,\u00a0 COUNT(DISTINCT region_code) AS num_regionsFROM\u00a0 `bigquery-public-data.google_trends.international_top_terms`WHERE\u00a0 refresh_date = DATE_SUB(CURRENT_DATE, INTERVAL 1 DAY)GROUP BY\u00a0 country_code,\u00a0 country_nameORDER BY\u00a0 num_regions DESC;\n```\n- \u9ede\u64ca play_circle_filled **\u904b\u884c\u55ae\u5143** \u3002\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nQuery complete after 0.07s: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 4/4 [00:00<00:00, 1440.60query/s]\nDownloading: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 41/41 [00:02><00:00, 20.21rows/s]\n... country_code country_name num_regions 0 TR Turkey 81 1 TH Thailand 77 2 VN Vietnam 63 3 JP Japan 47 4 RO Romania 42 5 NG Nigeria 37 6 IN India 36 7 ID Indonesia 34 8 CO Colombia 33 9 MX Mexico 32 10 BR Brazil 27 11 EG Egypt 27 12 UA Ukraine 27 13 CH Switzerland 26 14 AR Argentina 24 15 FR France 22 16 SE Sweden 21 17 HU Hungary 20 18 IT Italy 20 19 PT Portugal 20 20 NO Norway 19 21 FI Finland 18 22 NZ New Zealand 17 23 PH Philippines 17>\n``` **\u6ce8\u610f** \uff1a\u60a8\u7684\u7d50\u679c\u53ef\u80fd\u8207\u4e0a\u9762\u7684\u7d50\u679c\u4e0d\u540c\uff0c\u56e0\u7232\u6b63\u5728\u67e5\u8a62\u7684 `google_trends` \u6578\u64da\u96c6\u6703\u4e0d\u65b7\u96a8\u7740\u65b0\u6578\u64da\u800c\u5237\u65b0\u3002\n- \u5728\u4e0b\u4e00\u500b\u55ae\u5143\uff08\u5728\u4e0a\u4e00\u500b\u55ae\u5143\u7684\u8f38\u51fa\u4e0b\u65b9\uff09\u4e2d\uff0c\u8f38\u5165\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u904b\u884c\u76f8\u540c\u67e5\u8a62\uff0c\u4f46\u9019\u6b21\u6703\u5c07\u7d50\u679c\u4fdd\u5b58\u5230\u540d\u7232 `regions_by_country` \u7684\u65b0 Pandas DataFrame \u4e2d\u3002\u60a8\u901a\u904e\u5728 `%%bigquery` \u9b54\u6cd5\u547d\u4ee4\u4e2d\u4f7f\u7528\u53c3\u6578\u4f86\u63d0\u4f9b\u8a72\u540d\u7a31\u3002```\n%%bigquery regions_by_countrySELECT\u00a0 country_code,\u00a0 country_name,\u00a0 COUNT(DISTINCT region_code) AS num_regionsFROM\u00a0 `bigquery-public-data.google_trends.international_top_terms`WHERE\u00a0 refresh_date = DATE_SUB(CURRENT_DATE, INTERVAL 1 DAY)GROUP BY\u00a0 country_code, country_nameORDER BY\u00a0 num_regions DESC;\n``` **\u6ce8\u610f** \uff1a\u5982\u9700\u8a73\u7d30\u77ad\u89e3 `%%bigquery` \u547d\u4ee4\u7684\u53ef\u7528\u53c3\u6578\uff0c\u8acb\u53c3\u95b1 [\u5ba2\u6236\u7aef\u5eab\u9b54\u6cd5\u547d\u4ee4\u6587\u6a94](https://cloud.google.com/python/docs/reference/bigquery/latest/magics?hl=zh-cn) \u3002\n- \u9ede\u64ca play_circle_filled **\u904b\u884c\u55ae\u5143** \u3002\n- \u5728\u4e0b\u4e00\u500b\u55ae\u5143\u4e2d\uff0c\u8f38\u5165\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u67e5\u770b\u60a8\u525b\u525b\u8b80\u53d6\u7684\u67e5\u8a62\u7d50\u679c\u7684\u524d\u5e7e\u884c\uff1a```\nregions_by_country.head()\n```\n- \u9ede\u64ca play_circle_filled **\u904b\u884c\u55ae\u5143** \u3002Pandas DataFrame `regions_by_country` \u5df2\u6e96\u5099\u597d\u7e6a\u88fd\u5716\u8868\u3002## \u76f4\u63a5\u4f7f\u7528 BigQuery \u5ba2\u6236\u7aef\u5eab\u67e5\u8a62\u6578\u64da\n\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 Python \u7248 BigQuery \u5ba2\u6236\u7aef\u5eab\u76f4\u63a5\u8b80\u53d6\u6578\u64da\u5230 Python \u7b46\u8a18\u672c\u4e2d\u3002\n\u8a72\u5ba2\u6236\u7aef\u5eab\u53ef\u8b93\u60a8\u66f4\u597d\u5730\u63a7\u5236\u67e5\u8a62\uff0c\u4e26\u53ef\u8b93\u60a8\u4f7f\u7528\u66f4\u5fa9\u96dc\u7684\u67e5\u8a62\u548c\u4f5c\u696d\u914d\u7f6e\u3002\u85c9\u52a9\u8a72\u5eab\u8207 Pandas \u7684\u96c6\u6210\uff0c\u60a8\u53ef\u4ee5\u7d50\u5408\u8072\u660e\u6027 SQL \u8207\u547d\u4ee4\u5f0f\u4ee3\u78bc (Python) \u7684\u5f37\u5927\u529f\u80fd\uff0c\u4f86\u5206\u6790\u3001\u76f4\u89c0\u5448\u73fe\u548c\u8f49\u63db\u6578\u64da\u3002\n**\u6ce8\u610f** \uff1a\u6709\u8a31\u591a Python \u6578\u64da\u5206\u6790\u3001\u6578\u64da\u6574\u7406\u548c\u53ef\u8996\u5316\u5eab\uff08\u4f8b\u5982 `numpy` \u3001 `pandas` \u3001 `matplotlib` \u7b49\uff09\u53ef\u4f9b\u60a8\u4f7f\u7528\u3002\u5176\u4e2d\u4e00\u4e9b\u5eab\u662f\u4ee5 DataFrame \u5c0d\u8c61\u7232\u57fa\u790e\u800c\u69cb\u5efa\u7684\u3002\n- \u5728\u4e0b\u4e00\u500b\u55ae\u5143\u4e2d\uff0c\u8f38\u5165\u4ee5\u4e0b Python \u4ee3\u78bc\u4ee5\u5c0e\u5165 Python \u7248 BigQuery \u5ba2\u6236\u7aef\u5eab\u4e26\u521d\u59cb\u5316\u5ba2\u6236\u7aef\uff1a```\nfrom google.cloud import bigqueryclient = bigquery.Client()\n```BigQuery \u5ba2\u6236\u7aef\u7528\u65bc\u901a\u904e BigQuery API \u6536\u767c\u6d88\u606f\u3002\n- \u9ede\u64ca play_circle_filled **\u904b\u884c\u55ae\u5143** \u3002\n- \u5728\u4e0b\u4e00\u500b\u55ae\u5143\u4e2d\uff0c\u8f38\u5165\u4ee5\u4e0b\u4ee3\u78bc\u4ee5\u6aa2\u7d22\u7f8e\u570b [top_terms](https://console.cloud.google.com/bigquery?p=bigquery-public-data&%3Bd=google_trends&%3Bt=top_terms&%3Bpage=table&hl=zh-cn) \u5728\u67d0\u500b\u6642\u9593\u6bb5\u5167\u4ee5\u67d0\u500b\u5929\u6578\u7232\u6642\u9593\u55ae\u4f4d\u800c\u91cd\u758a\u7684\u6bcf\u65e5\u71b1\u9580\u5b57\u8a5e\u7684\u767e\u5206\u6bd4\u3002\u6b64\u8655\u7684\u601d\u8def\u662f\u67e5\u770b\u6bcf\u5929\u7684\u71b1\u9580\u5b57\u8a5e\uff0c\u4e26\u67e5\u770b\u5b83\u5011\u8207\u524d\u4e00\u5929\u3001\u524d 2 \u5929\u3001\u524d 3 \u5929\u7b49\u6642\u9593\u55ae\u4f4d\uff08\u5927\u6982\u4e00\u500b\u6708\u7bc4\u570d\u5167\u6240\u6709\u65e5\u671f\u5c0d\uff09\u4e2d\u71b1\u9580\u5b57\u8a5e\u7684\u91cd\u758a\u767e\u5206\u6bd4\u3002```\nsql = \"\"\"WITH\u00a0 TopTermsByDate AS (\u00a0 \u00a0 SELECT DISTINCT refresh_date AS date, term\u00a0 \u00a0 FROM `bigquery-public-data.google_trends.top_terms`\u00a0 ),\u00a0 DistinctDates AS (\u00a0 \u00a0 SELECT DISTINCT date\u00a0 \u00a0 FROM TopTermsByDate\u00a0 )SELECT\u00a0 DATE_DIFF(Dates2.date, Date1Terms.date, DAY)\u00a0 \u00a0 AS days_apart,\u00a0 COUNT(DISTINCT (Dates2.date || Date1Terms.date))\u00a0 \u00a0 AS num_date_pairs,\u00a0 COUNT(Date1Terms.term) AS num_date1_terms,\u00a0 SUM(IF(Date2Terms.term IS NOT NULL, 1, 0))\u00a0 \u00a0 AS overlap_terms,\u00a0 SAFE_DIVIDE(\u00a0 \u00a0 SUM(IF(Date2Terms.term IS NOT NULL, 1, 0)),\u00a0 \u00a0 COUNT(Date1Terms.term)\u00a0 \u00a0 ) AS pct_overlap_termsFROM\u00a0 TopTermsByDate AS Date1TermsCROSS JOIN\u00a0 DistinctDates AS Dates2LEFT JOIN\u00a0 TopTermsByDate AS Date2Terms\u00a0 ON\u00a0 \u00a0 Dates2.date = Date2Terms.date\u00a0 \u00a0 AND Date1Terms.term = Date2Terms.termWHERE\u00a0 Date1Terms.date <= Dates2.dateGROUP BY\u00a0 days_apartORDER BY\u00a0 days_apart;\"\"\"pct_overlap_terms_by_days_apart = client.query(sql).to_dataframe()pct_overlap_terms_by_days_apart.head()\n```\u6b63\u5728\u4f7f\u7528\u7684 SQL \u88ab\u5c01\u88dd\u5728 Python \u5b57\u7b26\u4e32\u4e2d\uff0c\u7136\u5f8c\u50b3\u905e\u7d66 [query() \u65b9\u6cd5](https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client?hl=zh-cn#google_cloud_bigquery_client_Client_query) \u4ee5\u904b\u884c\u67e5\u8a62\u3002 [to_dataframe \u65b9\u6cd5](https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.job.QueryJob?hl=zh-cn#google_cloud_bigquery_job_QueryJob_to_dataframe) \u7b49\u5f85\u67e5\u8a62\u5b8c\u6210\uff0c\u4e26\u4f7f\u7528 BigQuery Storage API \u5c07\u7d50\u679c\u4e0b\u8f09\u5230 Pandas DataFrame\u3002\n- \u9ede\u64ca play_circle_filled **\u904b\u884c\u55ae\u5143** \u3002\u524d\u5e7e\u884c\u67e5\u8a62\u7d50\u679c\u6703\u986f\u793a\u5728\u4ee3\u78bc\u55ae\u5143\u4e0b\u65b9\u3002```\n days_apart num_date_pairs num_date1_terms overlap_terms pct_overlap_terms\n 0   0    32    800   800   1.000000\n 1   1    31    775   203   0.261935\n 2   2    30    750    73   0.097333\n 3   3    29    725    31   0.042759\n 4   4    28    700    23   0.032857\n``` **\u6ce8\u610f** \uff1a\u60a8\u7684\u7d50\u679c\u53ef\u80fd\u8207\u4e0a\u9762\u7684\u7d50\u679c\u4e0d\u540c\uff0c\u56e0\u7232\u6b63\u5728\u67e5\u8a62\u7684 `google_trends` \u6578\u64da\u96c6\u6703\u4e0d\u65b7\u96a8\u7740\u65b0\u6578\u64da\u800c\u5237\u65b0\u3002\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u4f7f\u7528 BigQuery \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=zh-cn) \u5feb\u901f\u5165\u9580\u3002\n## \u5728\u4ee3\u7ba1\u5f0f\u7b46\u8a18\u672c\u4e2d\u4f7f\u7528 BigQuery \u96c6\u6210\u4f86\u67e5\u8a62\u6578\u64da\nBigQuery \u96c6\u6210\u63d0\u4f9b\u4e86\u53e6\u5916\u5169\u7a2e\u67e5\u8a62\u6578\u64da\u7684\u65b9\u6cd5\u3002\u9019\u4e9b\u65b9\u6cd5\u8207\u4f7f\u7528 `%%bigquery` \u9b54\u6cd5\u547d\u4ee4\u4e0d\u540c\u3002\n- **\u55ae\u5143\u5167\u67e5\u8a62\u7de8\u8f2f\u5668** \u662f\u53ef\u5728\u7b46\u8a18\u672c\u6587\u4ef6\u4e2d\u4f7f\u7528\u7684\u55ae\u5143\u985e\u578b\u3002\n- **\u7368\u7acb\u67e5\u8a62\u7de8\u8f2f\u5668** \u6703\u5728 JupyterLab \u4e2d\u4f5c\u7232\u55ae\u7368\u7684\u6a19\u7c64\u9801\u6253\u958b\u3002\n\u5982\u9700\u4f7f\u7528\u55ae\u5143\u5167\u67e5\u8a62\u7de8\u8f2f\u5668\u67e5\u8a62 BigQuery \u8868\u4e2d\u7684\u6578\u64da\uff0c\u8acb\u5b8c\u6210\u4ee5\u4e0b\u6b65\u9a5f\uff1a- \u5728 JupyterLab \u4e2d\uff0c\u6253\u958b\u7b46\u8a18\u672c (IPYNB) \u6587\u4ef6\u6216 [\u65b0\u5efa\u7b46\u8a18\u672c\u6587\u4ef6](https://cloud.google.com/vertex-ai/docs/workbench/managed/create-managed-notebooks-instance?hl=zh-cn#open-a-new-notebook-file) \u3002\n- \u5982\u9700\u5275\u5efa\u55ae\u5143\u5167\u67e5\u8a62\u7de8\u8f2f\u5668\uff0c\u8acb\u9ede\u64ca\u55ae\u5143\uff0c\u7136\u5f8c\u9ede\u64ca\u55ae\u5143\u53f3\u5074\u7684 **BigQuery \u96c6\u6210** \u6309\u9215\u3002\u6216\u8005\uff0c\u5728 Markdown \u55ae\u5143\u4e2d\uff0c\u8f38\u5165 `#@BigQuery` \u3002BigQuery \u96c6\u6210\u6703\u5c07\u8a72\u55ae\u5143\u8f49\u63db\u7232\u55ae\u5143\u5167\u67e5\u8a62\u7de8\u8f2f\u5668\u3002\n- \u5728 `#@BigQuery` \u4e0b\u7684\u65b0\u884c\u4e2d\uff0c\u4f7f\u7528 [BigQuery \u652f\u6301\u7684\u8a9e\u53e5\u548c SQL \u65b9\u8a00](https://cloud.google.com/bigquery/docs/reference/standard-sql/introduction?hl=zh-cn) \u7de8\u5beb\u67e5\u8a62\u3002\u5982\u679c\u5728\u67e5\u8a62\u4e2d\u6aa2\u6e2c\u5230\u932f\u8aa4\uff0c\u67e5\u8a62\u7de8\u8f2f\u5668\u7684\u53f3\u4e0a\u89d2\u6703\u986f\u793a\u932f\u8aa4\u6d88\u606f\u3002\u5982\u679c\u67e5\u8a62\u6709\u6548\uff0c\u5247\u986f\u793a\u9810\u4f30\u7684\u5f85\u8655\u7406\u5b57\u7bc0\u6578\u3002\n- \u9ede\u64ca **\u63d0\u4ea4\u67e5\u8a62** \u5f8c\uff0c\u67e5\u8a62\u7d50\u679c\u5c07\u6703\u986f\u793a\u3002\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u67e5\u8a62\u7d50\u679c\u6309\u6bcf\u9801 100 \u884c\u5206\u9801\uff0c\u4e26\u4e14\u7e3d\u5171\u4e0d\u8d85\u904e 1000 \u884c\uff0c\u4f46\u60a8\u53ef\u4ee5\u5728\u7d50\u679c\u8868\u7684\u5e95\u90e8\u66f4\u6539\u9019\u4e9b\u8a2d\u7f6e\u3002\u5728\u67e5\u8a62\u7de8\u8f2f\u5668\u4e2d\uff0c\u5c07\u67e5\u8a62\u9650\u5236\u7232\u9a57\u8b49\u67e5\u8a62\u6240\u9700\u7684\u6578\u64da\u3002\u60a8\u5c07\u5728\u7b46\u8a18\u672c\u55ae\u5143\u4e2d\u518d\u6b21\u904b\u884c\u6b64\u67e5\u8a62\uff0c\u60a8\u53ef\u4ee5\u6839\u64da\u9700\u8981\u8abf\u6574\u8a72\u9650\u5236\u4ee5\u6aa2\u7d22\u5b8c\u6574\u7d50\u679c\u96c6\u3002 **\u6ce8\u610f** \uff1a\u67e5\u8a62\u6587\u672c\u548c\u7d50\u679c\u5728\u95dc\u9589\u4e26\u91cd\u65b0\u6253\u958b\u7b46\u8a18\u672c\u6587\u4ef6\u5f8c\u4ecd\u7136\u5b58\u5728\u3002\n- \u60a8\u53ef\u4ee5\u9ede\u64ca **Query and load as DataFrame** \uff08\u67e5\u8a62\u4e26\u52a0\u8f09\u7232 DataFrame\uff09\u4ee5\u81ea\u52d5\u6dfb\u52a0\u4e00\u500b\u5305\u542b\u4ee3\u78bc\u6bb5\u7684\u65b0\u55ae\u5143\uff0c\u8a72\u4ee3\u78bc\u6bb5\u6703\u5c0e\u5165 Python \u7248 BigQuery \u5ba2\u6236\u7aef\u5eab\uff0c\u5728\u7b46\u8a18\u672c\u55ae\u5143\u4e2d\u904b\u884c\u67e5\u8a62\uff0c\u4e26\u5c07\u7d50\u679c\u5b58\u5132\u5728\u540d\u7232 `df` \u7684 Pandas DataFrame \u4e2d\u3002\n\u5982\u9700\u4f7f\u7528\u7368\u7acb\u67e5\u8a62\u7de8\u8f2f\u5668\u67e5\u8a62 BigQuery \u8868\u4e2d\u7684\u6578\u64da\uff0c\u8acb\u5b8c\u6210\u4ee5\u4e0b\u6b65\u9a5f\uff1a- \u5728 JupyterLab \u7684 **BigQuery in Notebooks** \uff08\u7b46\u8a18\u672c\u4e2d\u7684 BigQuery\uff09\u7a97\u683c\u4e2d\uff0c\u53f3\u9375\u9ede\u64ca\u67d0\u500b\u8868\uff0c\u7136\u5f8c\u9078\u64c7 **Query table** \uff08\u67e5\u8a62\u8868\uff09\uff0c\u6216\u8005\u96d9\u64ca\u8868\u4ee5\u5728\u65b0\u7684\u6a19\u7c64\u9801\u4e2d\u6253\u958b\u8aaa\u660e\uff0c\u7136\u5f8c\u9ede\u64ca **Query table** \uff08\u67e5\u8a62\u8868\uff09\u93c8\u63a5\u3002\n- \u4f7f\u7528 [BigQuery \u652f\u6301\u7684\u8a9e\u53e5\u548c SQL \u65b9\u8a00](https://cloud.google.com/bigquery/docs/reference/standard-sql/introduction?hl=zh-cn) \u7de8\u5beb\u67e5\u8a62\u3002\u5982\u679c\u5728\u67e5\u8a62\u4e2d\u6aa2\u6e2c\u5230\u932f\u8aa4\uff0c\u67e5\u8a62\u7de8\u8f2f\u5668\u7684\u53f3\u4e0a\u89d2\u6703\u986f\u793a\u932f\u8aa4\u6d88\u606f\u3002\u5982\u679c\u67e5\u8a62\u6709\u6548\uff0c\u5247\u986f\u793a\u9810\u4f30\u7684\u5f85\u8655\u7406\u5b57\u7bc0\u6578\u3002\n- \u9ede\u64ca **\u63d0\u4ea4\u67e5\u8a62** \u5f8c\uff0c\u67e5\u8a62\u7d50\u679c\u5c07\u6703\u986f\u793a\u3002\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u67e5\u8a62\u7d50\u679c\u6309\u6bcf\u9801 100 \u884c\u5206\u9801\uff0c\u4e26\u4e14\u7e3d\u5171\u4e0d\u8d85\u904e 1000 \u884c\uff0c\u4f46\u60a8\u53ef\u4ee5\u5728\u7d50\u679c\u8868\u7684\u5e95\u90e8\u66f4\u6539\u9019\u4e9b\u8a2d\u7f6e\u3002\u5728\u67e5\u8a62\u7de8\u8f2f\u5668\u4e2d\uff0c\u5c07\u67e5\u8a62\u9650\u5236\u7232\u9a57\u8b49\u67e5\u8a62\u6240\u9700\u7684\u6578\u64da\u3002\u60a8\u5c07\u5728\u7b46\u8a18\u672c\u55ae\u5143\u4e2d\u518d\u6b21\u904b\u884c\u6b64\u67e5\u8a62\uff0c\u60a8\u53ef\u4ee5\u6839\u64da\u9700\u8981\u8abf\u6574\u8a72\u9650\u5236\u4ee5\u6aa2\u7d22\u5b8c\u6574\u7d50\u679c\u96c6\u3002\n- \u60a8\u53ef\u4ee5\u9ede\u64ca **Copy code for DataFrame** \uff08\u7232 DataFrame \u8907\u88fd\u4ee3\u78bc\uff09\u4ee5\u8907\u88fd\u4ee3\u78bc\u6bb5\uff0c\u8a72\u4ee3\u78bc\u6bb5\u6703\u5c0e\u5165 Python \u7248 BigQuery \u5ba2\u6236\u7aef\u5eab\uff0c\u5728\u7b46\u8a18\u672c\u55ae\u5143\u4e2d\u904b\u884c\u67e5\u8a62\uff0c\u4e26\u5c07\u7d50\u679c\u5b58\u5132\u5728\u540d\u7232 `df` \u7684 Pandas DataFrame \u4e2d\u3002\u5c07\u6b64\u4ee3\u78bc\u7c98\u8cbc\u5230\u8981\u904b\u884c\u5b83\u7684\u7b46\u8a18\u672c\u55ae\u5143\u4e2d\u3002## \u67e5\u770b\u67e5\u8a62\u6b77\u53f2\u8a18\u9304\u4e26\u91cd\u5fa9\u4f7f\u7528\u67e5\u8a62\n\u5982\u9700\u5728 JupyterLab \u7684\u6a19\u7c64\u9801\u4e2d\u67e5\u770b\u67e5\u8a62\u6b77\u53f2\u8a18\u9304\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u6b65\u9a5f\uff1a\n- \u5728 JupyterLab \u5c0e\u822a\u83dc\u55ae\u4e2d\uff0c\u9ede\u64ca **\u7b46\u8a18\u672c\u4e2d\u7684 BigQuery** \u4ee5\u6253\u958b **BigQuery** \u7a97\u683c\u3002\n- \u5728 **BigQuery** \u7a97\u683c\u4e2d\uff0c\u5411\u4e0b\u6efe\u52d5\uff0c\u7136\u5f8c\u9ede\u64ca **\u67e5\u8a62\u8a18\u9304** \u3002 \u7cfb\u7d71\u6703\u5728\u65b0\u6a19\u7c64\u9801\u4e2d\u6253\u958b\u60a8\u7684\u67e5\u8a62\u5217\u8868\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u57f7\u884c\u5982\u4e0b\u4efb\u52d9\uff1a- \u5982\u9700\u67e5\u770b\u67e5\u8a62\u7684\u8a73\u7d30\u4fe1\u606f\uff0c\u4f8b\u5982\u5176\u4f5c\u696d ID\u3001\u67e5\u8a62\u904b\u884c\u6642\u9593\u4ee5\u53ca\u6642\u9577\uff0c\u8acb\u9ede\u64ca\u8a72\u67e5\u8a62\u3002\n- \u5982\u9700\u4fee\u6539\u67e5\u8a62\uff0c\u8acb\u518d\u6b21\u904b\u884c\u67e5\u8a62\uff0c\u6216\u5c07\u5176\u8907\u88fd\u5230\u7b46\u8a18\u672c\u4e2d\u4ee5\u5099\u5c07\u4f86\u4f7f\u7528\uff0c\u7136\u5f8c\u9ede\u64ca **\u5728\u7de8\u8f2f\u5668\u4e2d\u6253\u958b\u67e5\u8a62** \u3002**\u6ce8\u610f** \uff1a\u5982\u679c\u60a8\u5728\u6253\u958b\u6b64\u6a19\u7c64\u9801\u5f8c\u904b\u884c\u67e5\u8a62\uff0c\u8acb\u9ede\u64ca refresh **\u5237\u65b0** \u4ee5\u986f\u793a\u6700\u65b0\u67e5\u8a62\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u5982\u9700\u67e5\u770b\u6709\u95dc\u5982\u4f55\u76f4\u89c0\u5448\u73fe BigQuery \u8868\u4e2d\u7684\u6578\u64da\u7684\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 [\u5728 JupyterLab \u4e2d\u63a2\u7d22\u4e26\u76f4\u89c0\u5448\u73fe BigQuery \u4e2d\u7684\u6578\u64da](https://cloud.google.com/vertex-ai/docs/workbench/managed/visualize-data-bigquery?hl=zh-cn) \u3002\n- \u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u7232 BigQuery \u7de8\u5beb\u67e5\u8a62\uff0c\u8acb\u53c3\u95b1 [\u904b\u884c\u4ea4\u4e92\u5f0f\u67e5\u8a62\u4f5c\u696d\u548c\u6279\u91cf\u67e5\u8a62\u4f5c\u696d](https://cloud.google.com/bigquery/docs/running-queries?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u63a7\u5236\u5c0d BigQuery \u6578\u64da\u96c6\u7684\u8a2a\u554f\u6b0a\u9650](https://cloud.google.com/bigquery/docs/control-access-to-resources-iam?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u5f9e JupyterLab \u8a2a\u554f Cloud Storage \u5b58\u5132\u6876\u548c\u6587\u4ef6](https://cloud.google.com/vertex-ai/docs/workbench/managed/cloud-storage?hl=zh-cn) \u3002", "guide": "Vertex AI"}