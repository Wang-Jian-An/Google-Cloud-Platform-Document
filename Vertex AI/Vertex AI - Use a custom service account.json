{"title": "Vertex AI - Use a custom service account", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Use a custom service account\nThis guide describes how to configure Vertex AI to use a custom service account in the following scenarios:\n- When you perform [custom training](/vertex-ai/docs/training/overview) , you can configure Vertex AI to use a custom service account in the training container, whether it is a [prebuilt container](/vertex-ai/docs/training/pre-built-containers) or a [customcontainer](/vertex-ai/docs/training/containers-overview) .\n- When you [deploy a custom-trained Model resource to an Endpointresource](/vertex-ai/docs/predictions/deploy-model-api) to serve online predictions, you can configure Vertex AI to use a custom service account in the container that serves predictions, whether it is a [prebuilt container](/vertex-ai/docs/predictions/pre-built-containers) or a [customcontainer](/vertex-ai/docs/predictions/custom-container-requirements) .", "content": "## When to use a custom service account\nWhen Vertex AI runs, it generally acts with the permissions of one of several [service accounts](/iam/docs/service-accounts) that Google creates and manages for your Google Cloud project. To grant Vertex AI increased access to other Google Cloud services in certain contexts, you can [add specific roles toVertex AI's serviceagents](/vertex-ai/docs/general/access-control#grant_service_agents_access_to_other_resources) .\nHowever, customizing the permissions of service agents might not provide the fine-grained access control that you want. Some common use cases include:\n- Allowing fewer permissions to Vertex AI jobs and models. The default Vertex AI service agent has access to BigQuery and Cloud Storage.\n- Allowing different jobs access to different resources. You might want to allow many users to launch jobs in a single project, but grant each user's jobs access only to a certain BigQuery table or Cloud Storage bucket.\nFor example, you might want to individually customize every [custom trainingjob](/vertex-ai/docs/training/create-custom-job) that you run to have access to different Google Cloud resources outside of your project.\nMoreover, customizing the permissions of service agents does not change the permissions available to a container that serves predictions from a custom-trained `Model` .\nTo customize access each time you perform custom training or to customize the permissions of a custom-trained `Model` 's prediction container, you must use a custom service account.\n## Default access\nThis section describes the default access available to custom training containers and the prediction containers of custom-trained `Model` resources. When you use a custom service account, you override this access for a specific `CustomJob` , `HyperparameterTuningJob` , `TrainingPipeline` , or `DeployedModel` resource.\n### Training containers\nWhen you create a `CustomJob` , `HyperparameterTuningJob` , or a custom `TrainingPipeline` , the [trainingcontainer](/vertex-ai/docs/training/configure-container-settings) runs using your Google Cloud project's Vertex AI Custom Code Service Agent by default.\nLearn more about the [Vertex AI Custom Code Service Agent](/vertex-ai/docs/general/access-control#service-agents) , including how to give it access to additional Google Cloud resources.\n### Prediction containers\nWhen you deploy a custom-trained `Model` to an `Endpoint` , the prediction container runs using a service account managed by Vertex AI. This service account is different from the [Vertex AI serviceagents](/vertex-ai/docs/general/access-control#service-agents) .\nThe service account that the prediction container uses by default has permission to [read model artifacts](/vertex-ai/docs/predictions/custom-container-requirements#artifacts) that Vertex AI makes available at a URI stored in the [AIP_STORAGE_URI environmentvariable](/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) . Do not rely on the service account to have any other permissions. You can't customize the permissions of the service account.\n## Configure a custom service account\nThe following sections describe how to set up a custom service account to use with Vertex AI and how to configure a `CustomJob` , `HyperparameterTuningJob` , `TrainingPipeline` , or `DeployedModel` to use the service account. Note that you can't configure a custom service account to pull images from Artifact Registry. Vertex AI uses the default service account to pull images.\n### Set up a custom service account\nTo set up a custom service account, do the following:\n- [Create a user-managed serviceaccount.](/iam/docs/creating-managing-service-accounts#creating) The user-managed service account can be in the same project as your Vertex AI resources or in a different project.\n- [Grant your new service account IAMroles](/iam/docs/granting-roles-to-service-accounts) that provide access to the Google Cloud services and resources that you want Vertex AI to be able to use during custom training or prediction.\n- **Optional** : If the user-managed service account is in a different project than your training jobs, [configure the user-managed service account](/iam/docs/attach-service-accounts#attaching-different-project) so you can attach it to your training jobs.\n- **Optional** : If you also plan to use the user-managed service account for predictions, then you must grant the Service Account Admin role ( `roles/iam.serviceAccountAdmin` ) to the Vertex AI Service Agent of the project where you're using Vertex AI:```\ngcloud iam service-accounts add-iam-policy-binding \\\u00a0 --role=roles/iam.serviceAccountAdmin \\\u00a0 --member=serviceAccount:AI_PLATFORM_SERVICE_AGENT \\\u00a0 CUSTOM_SERVICE_ACCOUNT\n```Replace the following:- : The email address of your project's Vertex AI Service Agent, which has the following format:`service-` `` `@gcp-sa-aiplatform.iam.gserviceaccount.com`To find the Vertex AI Service Agent, go to the **IAM** page in the Google Cloud console. [Go to IAM](https://console.cloud.google.com/iam-admin/iam) \n- : The email address of the new user-managed service account that you created in the first step of this section.\n **Note:** This command grants your project's Vertex AI Service Agent the Service Account Admin role for your custom service account resource, not for the whole project. Learn more about [granting permissions at theresource level versus the project level](/iam/docs/overview#resource) .\n### Specify a custom service account for Vertex AI resources\nThe process of configuring Vertex AI to use a specific service account for a resource is called [attaching the service account to theresource](/iam/docs/attach-service-accounts#attaching-to-resources) . The following sections describe how to attach the [service account that you createdin the previous section](#setup) to several Vertex AI resources.\n**Note:** To attach the service account, you must have the `iam.serviceAccounts.actAs` permission for the service account. If you successfully completed the previous section of this guide, then you likely already have this permission. If you don't have the permission, ask a project administrator to give you access by granting you the [Service Account User role(roles/iam.serviceAccountUser)](/iam/docs/service-account-permissions#user-role) for the custom service account.\nTo configure Vertex AI to use your [new service account](#setup) during custom training, specify the service account's email address in the `serviceAccount` field of a [CustomJobSpec](/vertex-ai/docs/reference/rest/v1/CustomJobSpec) message when you start custom training. Depending on [which type of custom trainingresource](/vertex-ai/docs/training/custom-training-methods) you are creating, the placement of this field in your API request differs:\n**Note:** You can't specify a service account for custom training when you use the Google Cloud console to perform custom training.\n- **If you are creating a CustomJob** , specify the service account's email address in `CustomJob.jobSpec.serviceAccount` .Learn more about [creating a CustomJob](/vertex-ai/docs/training/create-custom-job) .\n- **If you are creating a HyperparameterTuningJob** , specify the service account's email address in `HyperparameterTuningJob.trialJobSpec.serviceAccount` .Learn more about [creating aHyperparameterTuningJob](/vertex-ai/docs/training/using-hyperparameter-tuning) .\n- **If you are creating a custom TrainingPipeline without hyperparametertuning** , specify the service account's email address in `TrainingPipeline.trainingTaskInputs.serviceAccount` .\n- **If you are creating a custom TrainingPipeline with hyperparametertuning** , specify the service account's email address in `TrainingPipeline.trainingTaskInputs.trialJobSpec.serviceAccount` .To configure a custom-trained `Model` 's prediction container to use your [newservice account](#setup) , specify the service account's email address when you deploy the `Model` to an `Endpoint` :\nFollow [Deploying a model using theGoogle Cloud console](/vertex-ai/docs/predictions/deploy-model-console) . When you specify model settings, select the service account in the **Serviceaccount** drop-down list.\nFollow [Deploying a model using theVertex AI API](/vertex-ai/docs/predictions/deploy-model-api) . When you run the `gcloud ai endpoints deploy-model` command, use the `--service-account` flag to specify your service account's email address.\nBefore using any of the command data below, make the following replacements:- : The ID for the endpoint.\n- : The region where you are using Vertex AI.\n- : The ID for the model to be deployed.\n- : A name for the`DeployedModel`. You can use the display name of the`Model`for the`DeployedModel`as well.\n- : Optional. The machine resources used for each node of this deployment. Its default setting is`n1-standard-2`. [Learn more about machine types.](/vertex-ai/docs/predictions/configure-compute) \n- : The minimum number of nodes for this deployment. The node count can be increased or decreased as required by the prediction load, up to the maximum number of nodes and never fewer than this number of nodes.\n- : The maximum number of nodes for this deployment. The node count can be increased or decreased as required by the prediction load, up to this number of nodes and never fewer than the minimum number of nodes.\n- : The service account's email  address. For example:`` `@` `` `.iam.gserviceaccount.com`.\nExecute the [gcloud ai endpoints deploy-model](/sdk/gcloud/reference/ai/endpoints/deploy-model) command:Follow [Deploying a model using theVertex AI API](/vertex-ai/docs/predictions/deploy-model-api) . When you send the [projects.locations.endpoints.deployModelrequest](/vertex-ai/docs/reference/rest/v1/projects.locations.endpoints/deployModel) , set the [deployedModel.serviceAccountfield](/vertex-ai/docs/reference/rest/v1/projects.locations.endpoints#DeployedModel.FIELDS.service_account) to the service account's email address.\n## Access Google Cloud services in your code\nIf you configure Vertex AI to use a custom service account by following the instructions in preceding sections, then your training container or your prediction container can access any Google Cloud services and resources that the service account has access to.\nTo access Google Cloud services, write your [trainingcode](/vertex-ai/docs/training/code-requirements) or your [prediction-servingcode](/vertex-ai/docs/predictions/custom-container-requirements) to use [Application DefaultCredentials (ADC)](/docs/authentication#adc) and explicitly specify the project ID or project number of the resource you want to access. Learn more about [writing your code to access other Google Cloudservices](/vertex-ai/docs/training/code-requirements#other-services) .\n## What's next\n- Learn more about [Access control](/vertex-ai/docs/general/access-control) for Vertex AI.\n- Learn about specific [IAM permissions](/vertex-ai/docs/general/iam-permissions) and the operations they support.", "guide": "Vertex AI"}