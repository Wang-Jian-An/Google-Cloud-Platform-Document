{"title": "Vertex AI - Customer-managed encryption keys (CMEK)", "url": "https://cloud.google.com/vertex-ai/docs/general/cmek", "abstract": "# Vertex AI - Customer-managed encryption keys (CMEK)\nBy default, Google Cloud automatically [encrypts data when it is atrest](/security/encryption/default-encryption) using encryption keys managed by Google. If you have specific compliance or regulatory requirements related to the keys that protect your data, you can use customer-managed encryption keys (CMEK) for your resources.\nYou can read more about the specific benefits of using CMEK with Vertex AI resources in the following section of this guide. For more information about CMEK in general, including when and why to enable it, see the [Cloud Key Management Servicedocumentation](/kms/docs/cmek) .\nThis guide describes some benefits of using CMEK for Vertex AI resources and walks through how to configure a training job to use CMEK.\n", "content": "## CMEK for Vertex AI resources\nThe following sections describe basic information about CMEK for Vertex AI resources that you must understand before configuring CMEK for your jobs.\n### Benefits of CMEK\nIn general, CMEK is most useful if you need full control over the keys used to encrypt your data. With CMEK, you can manage your keys within Cloud KMS. For example, you can rotate or disable a key or you can set up a rotation schedule using the Cloud KMS API. For more information about CMEK in general, including when and why to enable it, see the [Cloud KMS documentation](/kms/docs/cmek) .\nWhen you run an [AutoML](/vertex-ai/docs/training/training) or [custom](/vertex-ai/docs/training/overview)  **training** job, your code runs on one or more virtual machine (VM) instances managed by Vertex AI. When you enable CMEK for Vertex AI resources, the key that you designate, rather than a key managed by Google, is used to encrypt data on the boot disks of these VMs. The CMEK key encrypts the following kinds of data:\n- The copy of your code on the VMs.\n- Any data that gets loaded by your code.\n- Any temporary data that gets saved to the local disk by your code.\n- Automl-trained models.\n- Media files (data) uploaded into media datasets.\nIn general, the CMEK key does encrypt metadata associated with your operation, like the job's name and region, or a dataset's display name. Metadata associated with operations is always encrypted using Google's default encryption mechanism.\nFor **datasets** , when a user imports data into dataset, the data items and annotations are CMEK-encrypted. The dataset display name is not CMEK-encrypted.\nFor **models** , the models stored in the storage system (for example, disk) are CMEK-encrypted. All the model evaluation results are CMEK-encrypted.\nFor **endpoints** , all model files used for the model deployment under the endpoint are CMEK-encrypted. This does not include any in-memory data.\nFor **batch prediction** , any temporary files (such as model files, logs, VM disks) used to execute the batch prediction job are CMEK-encrypted. Batch prediction results are stored in the user provided destination. Consequently, Vertex AI respects the default value of the destination's encryption config. Otherwise, results will also be encrypted with CMEK.\nFor **data labeling** , any input files (image, text, video, tabular), temporary discussion (for example, questions, feedback) and output (labeling result) are CMEK-encrypted. The annotation spec display names are not CMEK-encrypted.\n### External keys\nYou can use [Cloud External Key Manager (Cloud EKM)](/kms/docs/ekm) to create external keys, that you manage, to encrypt data within Google Cloud.\nWhen you use a Cloud EKM key, Google has no control over the availability of your externally-managed key. If you request access to a resource encrypted with an externally-managed key, and the key is unavailable, then Vertex AI will reject the request. There can be a delay of up to 10 minutes before you can access the resource once the key becomes available.\nFor more considerations when using external keys, see [Cloud External Key Manager](/kms/docs/ekm#considerations) .\n### Use CMEK with other Google Cloud products\nConfiguring CMEK for Vertex AI resources does automatically configure CMEK for other Google Cloud products that you use together with Vertex AI. To use CMEK to encrypt data in other Google Cloud products, additional configuration is required. For example:\n- **Cloud Storage** : When you perform custom training, Vertex AI usually loads your data from Cloud Storage. When you [use a Pythontraining application and a prebuilt container fortraining](/vertex-ai/docs/training/create-python-pre-built-container) , Vertex AI also loads your code from a Cloud Storage bucket. In addition, some training jobs export trained model artifacts (for example, a TensorFlow SaveModel directory) to a Cloud Storage bucket as part of their output.To ensure that your data in Cloud Storage is encrypted with CMEK, read the [Cloud Storage guide to using customer-managed encryptionkeys](/storage/docs/encryption/using-customer-managed-keys) . You can set your encryption key as the default key for the Cloud Storage bucket(s) that you use with Vertex AI, or you can use it to encrypt specific objects. [Learn more about how Cloud Storage usesCMEK.](/storage/docs/encryption/customer-managed-keys) \n- **Artifact Registry** : When you [use a custom container fortraining](/vertex-ai/docs/training/containers-overview) , you can configure Vertex AI to load your container image from Artifact Registry.To ensure that your container image is encrypted with CMEK, read the [Artifact Registry guide to CMEK](/artifact-registry/docs/cmek) .\n- **Cloud Logging** : When you run a training job, Vertex AI training saves logs to [Logging](/logging/docs) . These logs are not encrypted with CMEK. However, if you use the [Log Router](/logging/docs/routing/overview) , then you can [configure CMEK for certain temporary files that the Log Routercreates](/logging/docs/routing/managed-encryption) .\n### Current CMEK-supported resources\nThe current Vertex AI resources covered by CMEK are as follows. CMEK support for Preview features is in Preview status as well.\n| Resource              | Material encrypted                                                                            | Documentation links                                                    |\n|:----------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Dataset               | All user imported data (for example, text content or videos) for DataItems and Annotations. User created content such as AnnotationSpecs, ColumnSpecs.                                          | Create a dataset for training classification and regression models Create a dataset for training forecast models                             |\n| Model               | Uploaded model files. Evaluation results of the trained model.                                                                 | Train a classification or regression model Train a forecast model Train an AutoML Edge model using the Cloud console Train an AutoML Edge model using the Vertex AI API Creating training pipelines Importing models to Vertex AI |\n| Endpoint              | All model files used for the model deployment under the endpoint. This does not include any in-memory data, but the model will be auto-undeployed if the key is disabled.                                      | Deploying a model using the Cloud console Deploying a model using the Vertex AI API                                    |\n| CustomJob (excludes resources that use a TPU VM)    | The copy of your code on the VMs used to run the operation. Any data that gets loaded by your code. Any temporary data that gets saved to the local disk by your code.                                       | Creating custom training jobs Creating training pipelines                                           |\n| HyperparameterTuningJob (excludes resources that use a TPU VM) | The copy of your code on the VMs used to run the operation. Any data that gets loaded by your code. Any temporary data that gets saved to the local disk by your code.                                       | Using hyperparameter tuning                                                  |\n| TrainingPipeline (excludes resources that use a TPU VM)  | The copy of your code on the VMs used to run the operation. Any data that gets loaded by your code. Any temporary data that gets saved to the local disk by your code. AutoML-trained models.                                 | Train a classification or regression model Train a forecast model Train an AutoML Edge model using the Cloud console Train an AutoML Edge model using the Vertex AI API Creating training pipelines        |\n| BatchPredictionJob (excludes AutoML image batchPrediction)  | Any temporary files (for example, model files, logs, VM disks) used in the job to proceed the batch prediction job. If the written results of the BatchPrediction are stored in the user provided destination, it will respect the encryption config of its default value. Otherwise, it will also be encrypted with CMEK. | Get batch predictions and explanations for a classification or regression model Get predictions for a forecast model                            |\n| ModelDeploymentMonitoringJob         | Any temporary files (for example, training dataset files, logs, VM disks) used in the job to process the model deployment monitoring job. Any data used for detection monitoring anomalies. If the key is disabled, the model deployment monitoring job will be paused.              | Setting up model monitoring                                                  |\n| PipelineJob              | The pipeline job and all of its sub-resources.                                                                     | Running a pipeline                                                    |\n| MetadataStore             | All content in the metadata store.                                                                        | Configuring your project's metadata store                                               |\n| TensorBoard              | All data from the uploaded TensorBoard logs including scalars, histograms, graph defs, images, and text.                                                       | Using Vertex AI TensorBoard                                                  |\n| Featurestore             | The featurestore and all content in the featurestore.                                                                   | Managing featurestores                                                   |\n### CMEK support for Generative AI tuning pipelines\nCMEK support is provided in the tuning pipeline of the following models:\n- `text-bison for PaLM 2`(GPU)\n- `BERT`\n- `T5`\n- `image-generation (GPU)`\n### Limitations\nCMEK support isn't provided in the following:\n- AutoML image model batch prediction (`BatchPredictionJob`)\n- TPU tuning## Configure CMEK for your resources\nThe following sections describe how to create a key ring and key in Cloud Key Management Service, grant Vertex AI encrypter and decrypter permissions for your key, and create resources that uses CMEK.\n### Before you begin\nThis guide assumes that you use two separate Google Cloud projects to configure CMEK for Vertex AI data:\n- A project for managing your encryption key (referred to as the \"Cloud KMS project\").\n- A project for accessing Vertex AI data or output in Cloud Storage, and interacting with any other Google Cloud products that you need for your use case (referred to as the \"AI Platform project\").\nThis recommended setup supports a [separation ofduties](/kms/docs/separation-of-duties) .\nAlternatively, you can use a single Google Cloud project for the whole guide. To do so, use the same project for all of the following tasks that refer to the Cloud KMS project and the tasks that refer to the AI Platform project.\n[Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n```\ngcloud init\n```\n**Note:** You can run the gcloud CLI in  the Google Cloud console without installing the Google Cloud CLI. To run the  gcloud CLI in the Google Cloud console, [use  Cloud Shell](https://console.cloud.google.com/?cloudshell=true) .### Create a key ring and key\nFollow the [Cloud KMS guide to creating symmetrickeys](/kms/docs/creating-keys) to create a key ring and a key. When you create your key ring, specify [a region that supportsVertex AI operations](/vertex-ai/docs/general/locations) as [the key ring's location](/kms/docs/locations) . Vertex AI training only supports CMEK when your resource and key use the same region. You must not specify a dual-regional, multi-regional, or global location for your key ring.\nMake sure to create your key ring and key in your Cloud KMS project.\n### Grant Vertex AI permissions\nTo use CMEK for your resources, you must grant Vertex AI permission to encrypt and decrypt data using your key. Vertex AI uses a [Google-managed service agent](/vertex-ai/docs/general/access-control#service-agents) to run operations using your resources. This service account is identified by an email address with the following format:\n```\nservice-PROJECT_NUMBER@gcp-sa-aiplatform.iam.gserviceaccount.com\n```\nTo find the appropriate service account for your AI Platform project, go to the **IAM** page in the Google Cloud console and find the member that matches this email address format, with the [projectnumber](/resource-manager/docs/cloud-platform-resource-hierarchy#projects) for your AI Platform project replacing the variable. The service account also has the name `Vertex AI Service Agent` .\n[Go to the IAMpage](https://console.cloud.google.com/iam-admin/iam)\nMake note of the email address for this service account, and use it in the following steps to grant it permission to encrypt and decrypt data using your key. You can grant permission by using the Google Cloud console or by using the Google Cloud CLI:\n- In the Google Cloud console, **Click Security** and select **Key Management** . This will take you to **Cryptographic Keys** page and select your Cloud KMS project. [Go to the Cryptographic Keyspage](https://console.cloud.google.com/security/kms?project=_) \n- Click on the name of the key ring that you created in [a preceding sectionof this guide](#creating-key-ring-and-key) to go to the **Key ringdetails** page.\n- Select the checkbox for the key that you created in [a preceding section ofthis guide](#creating-key-ring-and-key) . If an info panel labeled with the name of your key is not already open, click **Show info panel** .\n- In the info panel, click **person_addAdd member** to open the **Add membersto \"KEY_NAME\"** dialog. In this dialog, do the following:- In the **New members** box, enter the service account email address that you made a note of in the preceding section:`service-` `` `@gcp-sa-aiplatform.iam.gserviceaccount.com`\n- In the **Select a role** drop-down list, click **Cloud KMS** and then select the **Cloud KMS CryptoKey Encrypter/Decrypter** role.\n- Click **Save** .\nRun the following command:\n```\ngcloud kms keys add-iam-policy-binding KEY_NAME \\\u00a0 --keyring=KEY_RING_NAME \\\u00a0 --location=REGION \\\u00a0 --project=KMS_PROJECT_ID \\\u00a0 --member=serviceAccount:service-AI_PLATFORM_PROJECT_NUMBER@gcp-sa-aiplatform.iam.gserviceaccount.com \\\u00a0 --role=roles/cloudkms.cryptoKeyEncrypterDecrypter\n```\nIn this command, replace the following placeholders:- : The name of the key that you created in [a precedingsection of this guide](#creating-key-ring-and-key) .\n- : The key ring that you created in [a precedingsection of this guide](#creating-key-ring-and-key) .\n- : The region where you created your key ring.\n- : The ID of your Cloud KMS project.\n- : The project number of your AI Platform project, which you noted in the preceding section as part of a service account email address.\n### Create resources with the KMS key\nWhen you create a new [CMEK-supported resource](#resource-list) you can specify your key as one of the create parameters.\nWhen you create a new [CMEK-supported resource](#resource-list) in the [Vertex AI section of theGoogle Cloud console](https://console.cloud.google.com/vertex-ai/) , you can select your key in the general or advanced option section:\n \nWhen you create a [supported resource](#resource-list) , add an [encryptionSpec](/vertex-ai/docs/reference/rest/v1/EncryptionSpec) object to your request and set the `encryptionSpec.kmsKeyName` field to point to your key resource.\nFor example, when [creating a dataset](/vertex-ai/docs/training-overview) resource you would specify your key in the request body:\n```\n\u00a0{\u00a0 \u00a0\"displayName\": DATASET_NAME,\u00a0 \u00a0\"metadataSchemaUri\": METADATA_URI,\u00a0 \u00a0\"encryptionSpec\": {\u00a0 \u00a0 \u00a0\"kmsKeyName\": \"projects/PROJECT_ID/locations/LOCATION_ID/keyRings/KEY_RING_NAME/cryptoKeys/KEY_NAME\"\u00a0 \u00a0}\u00a0}\n```\nWhen you create a supported resource, set the `EncryptionSpec` to point to your key resource. See the [Vertex AI client library for Java](/java/docs/reference/google-cloud-aiplatform/latest/overview) documentation for more information.\nWhen you create a supported resource, set the `encryptionSpec` parameter to point to your key resource. See the [Vertex AI client library for Node.js](/nodejs/docs/reference/aiplatform/latest) documentation for more information.\nWhen you create a supported resource, set the `encryption_spec` parameter to point to your key resource. See the [Python Client for Cloud AI Platform](/python/docs/reference/aiplatform/latest) documentation for more information.\n## What's next\n- Learn more about [CMEK on Google Cloud](/kms/docs/cmek) .\n- Learn [how to use CMEK with other Google Cloudproducts](/kms/docs/use-keys-google-cloud) .", "guide": "Vertex AI"}