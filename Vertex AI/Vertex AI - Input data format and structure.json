{"title": "Vertex AI - Input data format and structure", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Input data format and structure\nTo build a new index or update an existing index, provide vectors to Vector Search in the format and structure described in the following sections.\n", "content": "## Input data storage and file organization\n### Prerequisite\nStore your input data in a [Cloud Storage bucket](/storage/docs/creating-buckets) , in your Google Cloud project.\nInput data files should be organized as follows:\n- Each batch of input data files should be under a single Cloud Storage directory.\n- Data files should be placed directly under`batch_root`and named with the following suffixes:`.csv`,`.json`, and`.avro`.\n- There is a limit of 5000 objects (files) in the batch root directory.\n- Each data file is interpreted as a set of records. The format of the record is determined by the suffix of the filename and those format requirements are described. See [Data file formats](#data-file-formats) .\n- Each record should have an`id`, a feature vector, and your optional fields supported by Vertex AI Feature Store, like restricts and crowding.\n- A subdirectory named`delete`may be present. Each file directly under`batch_root`/`delete`is taken as a text file of`id`records with one`id`in each line.\n- All other directories and files are ignored.\n### Input data processing\n- All records from all data files, including those under`delete`, consist of a single batch of input.\n- The relative ordering of records within a data file is not important.\n- A single ID should only appear once in a batch. If there is a duplicate with the same ID, it displays as one vector count.\n- An ID cannot appear both in a regular data file and a delete data file.\n- All IDs from a data file under delete causes it to be removed from the next index version.\n- Records from regular data files is included in the next version, overwriting a value in an older index version.\nHere is a JSON example:\n```\n{\"id\": \"1\", \"embedding\": [1,1,1]}{\"id\": \"2\", \"embedding\": [2,2,2]}\n```\nThe following is an example of a valid input data file organization:\n```\nbatch_root/\u00a0 feature_file_1.csv\u00a0 feature_file_2.csv\u00a0 delete/\u00a0 \u00a0 delete_file.txt\n```\nThe `feature_file_1.csv` and `feature_file_2.csv` files contain records in CSV format. The `delete_file.txt` file contains a list of record IDs to be deleted from the next index version.\n### Data file formats\n- Encode the JSON file using UTF-8.\n- Each line of the JSON file will be interpreted as a separate JSON object.\n- Each record must contain an`id`field to specify the ID of the vector.\n- Each record must contain an`embedding`field that is an array of`N`floating point numbers that represents the feature vector, where`N`is the dimension of the feature vector that was configured when the index was created.\n- An optional`restricts`field can be included that specifies an array of`TokenNamespace`objects in restricts. For each object:- Specify a`namespace`field that is the`TokenNamespace.namespace`.\n- An optional`allow`field can be set to an array of strings which are the list of`TokenNamespace.string_tokens`.\n- An optional`deny`field can be set to an array of strings which are the list of`TokenNamespace.string_blacklist_tokens`.\n- The value of the field`crowding_tag`, if present, must be a string.\n- An optional`numeric_restricts`field can be included that specifies an array of`NumericRestrictNamespace`. For each object:- Specify a`namespace`field that is the`NumericRestrictNamespace.namespace`.\n- One of the value fields`value_int`,`value_float`, and`value_double`.\n- It must not have a field named op. This field is only for queries.- Use a valid [Avro](https://avro.apache.org/docs/1.2.0/) file.\n- Make records that conform to the following schema:```\n{\u00a0 \"type\": \"record\",\u00a0 \"name\": \"FeatureVector\",\u00a0 \"fields\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"name\": \"id\",\u00a0 \u00a0 \u00a0 \"type\": \"string\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"name\": \"embedding\",\u00a0 \u00a0 \u00a0 \"type\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \u00a0 \"items\": \"float\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"name\": \"restricts\",\u00a0 \u00a0 \u00a0 \"type\": [\u00a0 \u00a0 \u00a0 \u00a0 \"null\",\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"items\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"record\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"Restrict\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"namespace\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"allow\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"null\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"items\": \"string\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"deny\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"null\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"items\": \"string\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"name\": \"numeric_restricts\",\u00a0 \u00a0 \u00a0 \"type\": [\u00a0 \u00a0 \u00a0 \u00a0 \"null\",\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"items\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"NumericRestrict\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"record\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"namespace\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"value_int\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": [ \"null\", \"int\" ],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"default\": null\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"value_float\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": [ \"null\", \"float\" ],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"default\": null\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"value_double\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": [ \"null\", \"double\" ],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"default\": null\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"default\": null\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"name\": \"crowding_tag\",\u00a0 \u00a0 \u00a0 \"type\": [\u00a0 \u00a0 \u00a0 \u00a0 \"null\",\u00a0 \u00a0 \u00a0 \u00a0 \"string\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 }\u00a0 ]}\n```\n- Encode the CSV file using UTF-8.\n- Each line of the CSV must contain exactly one record.\n- The first value in each line must be the vector ID, which must be a valid UTF-8 string.\n- Following the ID, the next`N`values represent the feature vector, where`N`is the dimension of the feature vector that was configured when the index was created.\n- Feature vector values must be floating point literals as defined in the [Java language spec](https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.10.2) .\n- Additional values may be in the form`name=value`.\n- The name`crowding_tag`is interpreted as the crowding tag and may only appear once in the record.\n- All other `name=value` pairs are interpreted as token namespace restricts. The same name may be repeated if there are multiple values in a namespace.For example, `color=red,color=blue` represents this `TokenNamespace` :```\n{\u00a0 \"namespace\": \"color\"\u00a0 \"string_tokens\": [\"red\", \"blue\"]}\n```\n- If value starts with `!` , the rest of the string is interpreted as an excluded value.For example, `color=!red` represents this `TokenNamespace` :```\n{\u00a0 \"namespace\": \"color\"\u00a0 \"string_blacklist_tokens\": [\"red\"]}\n```\n- `#name=numericValue` pairs with number type suffix is interpreted as numeric namespace restricts. Number type suffix is `i` for int, `f` for float, and `d` for double. The same name shouldn't be repeated as there should be a single value associated per namespace.For example, `#size=3i` represents this `NumericRestrictNamespace` :```\n{\u00a0 \"namespace\": \"size\"\u00a0 \"value_int\": 3}\n````#ratio=0.1f` represents this `NumericRestrictNamespace` :```\n{\u00a0 \"namespace\": \"ratio\"\u00a0 \"value_float\": 0.1}\n````#weight=0.3d` represents this `NumericRestriction` :```\n{\u00a0 \"namespace\": \"weight\"\u00a0 \"value_double\": 0.3}\n```## What's next\n- Learn how to [Create and manage your index](/vertex-ai/docs/vector-search/create-manage-index)", "guide": "Vertex AI"}