{"title": "Vertex AI - Upgrade the environment of a user-managed notebooks instance", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Upgrade the environment of a user-managed notebooks instance\n# Upgrade the environment of a user-managed notebooks instance\nVertex AI Workbench user-managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  user-managed notebooks will end and the ability to create user-managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your user-managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/user-managed/migrate-to-instances) .\nVertex AI Workbench user-managed notebooks instances are [Deep Learning VM Images](/deep-learning-vm/docs/introduction) instances with JupyterLab notebook environments enabled and ready for use. This page describes how to upgrade the environment of a user-managed notebooks instance.\n", "content": "## Reasons to upgrade\nYou might want to upgrade the environment of your user-managed notebooks instance for any of the following reasons:\n- To use new capabilities that are only available in a newer version of your environment.\n- To benefit from framework updates, package updates, and bug fixes that have been implemented in a newer version of your environment.## Upgrade methods\nThere are two ways to upgrade a user-managed notebooks instance:\n- **Automatic upgrade** : Enable auto upgrade when you create a user-managed notebooks instance. During a recurring time period that you specify, Vertex AI Workbench checks whether your instance can be upgraded, and if so, Vertex AI Workbench upgrades your instance.\n- **Manual upgrade** : If an existing user-managed notebooks instance meets the [requirements](#requirements) for upgrading, you can upgrade the instance manually.## Requirements and limitations\nBackward compatibility with your user-managed notebooks isn't guaranteed. [Make a copy ofyour data](/vertex-ai/docs/general/troubleshooting-workbench#copy-user-data) before upgrading a user-managed notebooks instance.\nTo determine whether you can upgrade a specific user-managed notebooks instance, see the following requirements and limitations:\n- The Notebooks API must be [enabled in the instance'sGoogle Cloud project](https://console.cloud.google.com/apis/library/notebooks.googleapis.com) . For more information, see [List enabled services](/service-usage/docs/list-services#enabled) and [Enable an API](/endpoints/docs/openapi/enable-api#enabling_an_api) .\n- The user-managed notebooks instance's [environment version](#environment_versions) must be M54 or higher.\n- The user-managed notebooks instance must have been created using the Notebooks API or must have been [registered with theNotebooks API](/vertex-ai/docs/workbench/user-managed/registering-legacy-notebooks) .\n- If your user-managed notebooks instance is container-based, Vertex AI Workbench upgrades the OS. The image version depends on the specific image pulled by your Dockerfile.To help make sure the upgrade uses the most recent version of the image, consider using the `latest` tag in your Dockerfile.\nIf upgrading your instance is not an option for you, consider [migrating your data toa new user-managed notebooks instance](/vertex-ai/docs/workbench/user-managed/migrate) .\n## How the upgrade works\nUser-managed notebooks instances that can be upgraded are dual-disk, with one boot disk and one data disk. The upgrade process upgrades the boot disk to a new image while preserving your data on the data disk.\n### Which components are upgraded or preserved?\nThe following table shows which components of your user-managed notebooks instance are upgraded and which are preserved.\n| Component         | Upgrade result             |\n|:-------------------------------------------|:----------------------------------------------------------------|\n| Machine learning frameworks    | Upgraded              |\n| Machine learning data      | Preserved              |\n| Preinstalled dependencies     | Upgraded              |\n| User-installed libraries     | By default, must be reinstalled (see User-installed libraries) |\n| Local files in the /home/jupyter directory | Preserved              |\n| Local files in any other /home/ directory | Not preserved             |\n| Preinstalled operating system packages  | Upgraded              |\n| User-installed operating system packages | Not preserved             |\n| GPU drivers        | Upgraded              |\n| Notebooks         | Preserved              |\n| User configurations      | Preserved              |\nBy default, user-managed notebooks instances store pip and Conda libraries in the boot disk, which is replaced during an upgrade. When you install pip libraries, you can include the `--user` flag to install them in the `/home/jupyter/` directory, where they are preserved during an upgrade.\nBy default, if you install pip or Conda libraries in a kernel created from a custom container, the libraries only persist while the kernel is running. Each time the kernel is restarted, those libraries will need to be reinstalled. To install persistent libraries in a custom container, include the library installations in your Dockerfile. When installing pip libraries in a kernel created from a custom container, you can include the `--user` flag so that the libraries will persist until instance restart.\n### Environment versions\nVertex AI Workbench updates environments regularly ( [see theDeep Learning VM releasenotes](/deep-learning-vm/docs/release-notes) ), but with each released version, not all of the [environments](/vertex-ai/docs/workbench/user-managed/images) are updated. Vertex AI Workbench only upgrades an instance if there is a newer environment version for the VM image that your instance is based on.\nFor information about how to use a specific version to create a user-managed notebooks instance, see [Create a specific version of a user-managed notebooksinstance](/vertex-ai/docs/workbench/user-managed/create-specific-version) .\n## Before you upgrade\nBefore you upgrade, complete the following steps.\n- Check the [release notes](/vertex-ai/docs/release-notes) to learn about updates to newer versions.\n- [Make a copy ofyour data](/vertex-ai/docs/general/troubleshooting-workbench#copy-user-data) as a backup.## Automatic upgrade\nVertex AI Workbench can automatically upgrade instances that are running. If your instance is stopped, it doesn't automatically upgrade your instance, even if you enabled auto upgrade when you created it.\nWhen you enable automatic environment upgrades, you specify a recurring time period in which Vertex AI Workbench checks whether the instance can be upgraded, and if it can be, upgrades the instance.\nThe time period you specify is stored as a `notebook-upgrade-schedule` metadata entry, in [unix-cronformat](https://man7.org/linux/man-pages/man5/crontab.5.html) , Greenwich Mean Time (GMT).\nTo check whether an instance can be upgraded, Vertex AI Workbench uses the API method [isUpgradeable](/vertex-ai/docs/workbench/reference/rest/v1/projects.locations.instances/isUpgradeable) . This method checks for a newer version of the image on the instance's boot disk.\nIf the instance can be upgraded, Vertex AI Workbench uses an internal upgrade method to upgrade the instance.\n### Create a user-managed notebooks instance with auto upgrade enabled\nTo create a user-managed notebooks instance with auto upgrade enabled, select the **Enable environment auto-upgrade** checkbox and set a schedule when you create the instance.\nYou can specify auto-upgrade by using either the Google Cloud console or the Google Cloud CLI.- If you plan to use GPUs with your user-managed notebooks instance, [check the quotas page in the Google Cloud console](https://console.cloud.google.com/quotas) to ensure that you have enough GPUs available in your project. If GPUs are not listed on the quotas page, or you require additional GPU quota, you can request a quota increase. See [Requesting an increase in quota](/compute/quotas#requesting_additional_quota) on the Compute Engine [Resource quotas](/compute/quotas) page.### Required roles\nIf you created the project, you have the Owner ( `roles/owner` ) IAM role on the project, which includes all required permissions. Skip this section and start creating your user-managed notebooks instance. If you didn't create the project yourself, continue in this section.\nTo ensure that your user account has the necessary  permissions to create a Vertex AI Workbench user-managed notebooks instance,   ask your administrator to grant your user account the  following IAM roles on the project:\n- Notebooks Admin ( [roles/notebooks.admin](/vertex-ai/docs/workbench/user-managed/iam#notebooks.admin) )\n- Service Account User ( [roles/iam.serviceAccountUser](/iam/docs/understanding-roles#iam.serviceAccountUser) )\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYour administrator might also be able to give your user account  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .- In the Google Cloud console, go to the **User-managed notebooks** page. Or go to [notebook.new](https://notebook.new) (https://notebook.new) and skip the next step. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- Click add_box **New notebook** , and then select **Customize** .\n- On the **Create a user-managed notebook** page, in the **Details** section, provide the following information for your new instance:- **Name** : a name for your new instance\n- **Region** and **Zone** : Select a region and zone for the new instance. For best network performance, select the region that is geographically closest to you. See the available [user-managed notebookslocations](/vertex-ai/docs/general/locations#user-managed-notebooks-locations) .\n- In the **System health** section, select **Environment auto-upgrade** .\n- Choose whether to upgrade your notebook **Weekly** or **Monthly** .\n- In the **Weekday** field, select the option that you want.\n- In the **Hour** field, choose an hour of the day.\n- Complete the rest of the instance creation dialog, and then click **Create** .\n- From [Cloud Shell](/shell/docs/starting-cloud-shell) or any environment where the [Google Cloud CLI](/sdk/docs) is installed, enter the following [Google Cloud CLI](/sdk/gcloud) command:```\ngcloud notebooks instances create INSTANCE_NAME\u00a0 \u00a0 --metadata=notebook-upgrade-schedule=SCHEDULE\u00a0 \u00a0 --vm-image-project=deeplearning-platform-release\u00a0 \u00a0 --vm-image-family=VM_IMAGE_FAMILY\u00a0 \u00a0 --machine-type=MACHINE_TYPE\u00a0 \u00a0 --location=LOCATION\n```Replace the following:- ``: the name of your new instance\n- ``: the weekly or monthly schedule that you set, in [unix-cronformat](https://man7.org/linux/man-pages/man5/crontab.5.html) ; for example, \"00 19 * * MON\" means weekly on Monday, at 1900 hours Greenwich Mean Time (GMT)\n- ``: the [image familyname](/vertex-ai/docs/workbench/user-managed/images#deciding) that you want to use to create your instance\n- ``: the [machinetype](/compute/docs/machine-types) of your instance's VM\n- ``: the Google Cloud location where you want your new instance to be\n- Access your instance from the [Google Cloud console](https://console.cloud.google.com/vertex-ai/workbench/user-managed) .\n### Edit the auto upgrade schedule\nTo edit the auto upgrade schedule after you have created your user-managed notebooks instance, complete the following steps:\n- In the Google Cloud console, go to the **User-managed notebooks** page. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- Click the instance name that needs the schedule change.\n- On the **Notebook details** page, in the **Environment auto-upgrade** section, edit the schedule.\n- Click **Submit** to save your changes.## Manual upgrade\nYou can manually upgrade user-managed notebooks instances that meet the [requirements](#requirements) .\n### Check for a newer version of your instance's environment\nTo check whether a newer version of your instance's environment is available, access your instance from the Google Cloud console.\n- In the Google Cloud console, go to the **User-managed notebooks** page. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- If your instance isn't running, [start theinstance](/vertex-ai/docs/workbench/user-managed/create-user-managed-notebooks-instance-console-quickstart#start_your_instance) . Vertex AI Workbench can only upgrade instances when they're running.\n- Click the instance name that you want to check for availability of a newer environment version.\n- On the **Notebook details** page, next to **VM details** , click **View in Compute Engine** .If a newer version of the environment is available, a \"This instance needs to be upgraded\" message appears.\n### Upgrade your instance's environment to a newer version\nYou can manually upgrade a user-managed notebooks instance in the Google Cloud console or by using the Google Cloud CLI.\n**Note:** Upgrades can affect user operations that are running.\n- In the Google Cloud console, go to the **User-managed notebooks** page. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- If your instance isn't running, [start theinstance](/vertex-ai/docs/workbench/user-managed/create-user-managed-notebooks-instance-console-quickstart#start_your_instance) . Vertex AI Workbench can only upgrade instances when they're running.\n- Click the instance name that you want to upgrade.\n- On the **Notebook details** page, click **Upgrade** .\n- Make sure you have [made a copy of the data on yourinstance](/vertex-ai/docs/general/troubleshooting-workbench#copy-user-data) before continuing.\n- After your data is backed up, click **Upgrade** . Vertex AI Workbench upgrades and starts your instance.\n- To check whether an instance can be upgraded, use the API method [isUpgradeable](/vertex-ai/docs/workbench/reference/rest/v1/projects.locations.instances/isUpgradeable) . This method checks for a newer version of the image on the instance's boot disk.```\ngcloud notebooks instances is-upgradeable INSTANCE_NAME \\\n --location=LOCATION\n```Replace the following:- ``: the name of your instance\n- ``: the Google Cloud location where your instance is located\nIf the instance is upgradable, the response is `true` . If the response is `false` , the instance cannot be upgraded, but you can still try to [migrate your data to a newinstance](/vertex-ai/docs/workbench/user-managed/registering-legacy-notebooks#migrate-to-new-instance) .\n- If your instance isn't running, [start theinstance](/vertex-ai/docs/workbench/user-managed/create-user-managed-notebooks-instance-console-quickstart#start_your_instance) . Vertex AI Workbench can only upgrade instances when they're running.\n- Make sure you have [made a copy of the data on yourinstance](/vertex-ai/docs/general/troubleshooting-workbench#copy-user-data) before continuing.\n- If the instance is upgradable, use the API method [upgrade](/vertex-ai/docs/workbench/reference/rest/v1/projects.locations.instances/upgrade) to upgrade the instance:```\ngcloud notebooks instances upgrade INSTANCE_NAME \\\u00a0 \u00a0 --location=LOCATION\n```Vertex AI Workbench upgrades the instance.## Roll back an upgrade\nTo roll back an upgrade, complete the following steps:\n- In the Google Cloud console, go to the **User-managed notebooks** page. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- Click the instance name that you would like to roll back.\n- On the **Notebook details** page, under **Upgrade history** , click **Rollback** .\n- Vertex AI Workbench rolls your instance back to the previous version.", "guide": "Vertex AI"}