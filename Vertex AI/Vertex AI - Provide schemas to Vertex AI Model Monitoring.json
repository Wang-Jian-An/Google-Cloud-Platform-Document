{"title": "Vertex AI - Provide schemas to Vertex AI Model Monitoring", "url": "https://cloud.google.com/vertex-ai/docs/model-monitoring/schemas", "abstract": "# Vertex AI - Provide schemas to Vertex AI Model Monitoring\nTo start a monitoring job, Model Monitoring needs to know the schema of your tabular dataset in order to correctly parse the input payload.\n- For AutoML models, Model Monitoring automatically parses the schema because Vertex AI already has access to your training data.\n- For custom-trained models:- Model Monitoring can automatically parse schemas for models that use a standard key-value input format.\n- For custom-trained models that don't use a key-value input format, you may need to provide a schema when [creating your monitoringjob](/vertex-ai/docs/model-monitoring/using-model-monitoring) .\nSchema generation varies based on whether you are enabling Model Monitoring for an online prediction endpoint or batch predictions.", "content": "## Schema parsing for online prediction endpoints\nFor online prediction endpoints, you can let Model Monitoring parse the schema automatically or upload a schema when you create a monitoring job.\n### Automatic schema parsing\nAfter you enable skew or drift detection for an online endpoint, Model Monitoring can usually automatically parse the input schema. For automatic schema parsing, Model Monitoring analyzes the first 1,000 input requests to determine the schema.\nAutomatic schema parsing works best when the input requests are formatted as key-value pairs, where `\"` `` `\"` is the name of the feature and `\"` `` `\"` is the value of the feature. For example:\n```\n\"key\":\"value\"\n```\n```\n{\"TenYearCHD\":\"0\", \"glucose\":\"5.4\", \"heartRate\":\"1\", \"age\":\"30\",\n\"prevalentStroke\":\"0\", \"gender\":\"f\", \"ethnicity\":\"latin american\"}\n```\nIf the inputs are not in `\"` `` `\":\"` `` `\"` format, Model Monitoring tries to identify the data type of each feature, and automatically assigns a default feature name for each input.\n### Custom instance schemas\nYou can provide your own input schema when you [create aModel Monitoring job](/vertex-ai/docs/model-monitoring/using-model-monitoring) to guarantee that Model Monitoring correctly parses your model's inputs.\nThis schema is called the . The schema file specifies the format of the input payload, the names of each feature, and the type of each feature.\nThe schema must be written as a YAML file in the [Open API](https://swagger.io/specification/#schema) format. The following example is for a prediction request with the `object` format:\n```\ntype: objectproperties:\u00a0 age:\u00a0 \u00a0 type: string\u00a0 BMI:\u00a0 \u00a0 type: number\u00a0 TenYearCHD:\u00a0 \u00a0 type: string\u00a0 cigsPerDay:\u00a0 \u00a0 type: array\u00a0 \u00a0 items:\u00a0 \u00a0 \u00a0 type: string\u00a0 BPMeds:\u00a0 \u00a0 type: stringrequired:- age- BMI- TenYearCHD- cigsPerDay- BPMeds\n```\n- `type` indicates whether your prediction request is one of the following formats:- `object`: key-value pairs\n- `array`: array-like\n- `string`: csv-string\n- `properties` indicates the type of each individual feature.\n- If the request is in array or csv-string format, specify the order in which the features are listed in each request under the `required` field.\nIf your prediction request is in array or csv-string format, represent any missing features as null values. For example, consider a prediction request with five features:\n`[feature_a, feature_b, feature_c, feature_d, feature_e]`\nIf `feature_c` allows missing values, a sample request missing `feature_c` would be: `{[1, 2, , 4, 6]}` . The list length is still 5, with one null value in the middle.\n## Schema parsing for batch predictions\nFor batch predictions, you can let Model Monitoring parse the schema automatically or upload a schema when you create a monitoring job.\n### Automatic schema parsing\nIf you don't provide a schema during monitoring job creation, Model Monitoring infers the data types of your features and generates your schema based on your training data.\nModel Monitoring also needs to know which feature is the target column, which is the feature being predicted. The target column is excluded from the schema and feature skew metric. You can specify the target column while creating a monitoring job.\nIf you don't specify the target column while creating a monitoring job, Model Monitoring labels the last feature name in your training data as the target column.\nFor example, Model Monitoring labels `column_c` in this CSV training data as the target column because `column_c` is at the end of the first row:\n```\ncolumn_a, column_b, column_d, column_c1,\"a\", 2, \"c\"2,\"b\", 342, \"d\"\n```\nSimilarly, Model Monitoring labels `column_c` in this JSONL file as the target column because `column_c` is at the end of the first row:\n```\n{\"column_a\": 1, \"column_b\": \"a\", \"column_d\": 2, \"column_c\": \"c\" }{\"column_a\": 2, \"column_b\": \"b\", \"column_c\": \"d\", \u00a0\"column_d\": 342}\n```\nIn both examples, the final schema only contains `column_a` , `column_b` , and `column_d` .\n### Custom schemas\nYour custom schema specifies the format of the input payload, the names of each feature, and the type of each feature.\nThe schema must be written as a YAML file with [Open API](https://swagger.io/docs/specification/data-models/data-types/#object) syntax. The following example is for a prediction request with the `object` format:\n```\ntype: objectproperties:\u00a0 age:\u00a0 \u00a0 type: string\u00a0 BMI:\u00a0 \u00a0 type: number\u00a0 TenYearCHD:\u00a0 \u00a0 type: string\u00a0 cigsPerDay:\u00a0 \u00a0 type: array\u00a0 \u00a0 items:\u00a0 \u00a0 \u00a0 type: string\u00a0 BPMeds:\u00a0 \u00a0 type: stringrequired:- age- BMI- TenYearCHD- cigsPerDay- BPMeds\n```\nModel Monitoring calculates feature skew based on the JSON Lines [batch prediction output](/vertex-ai/docs/predictions/get-batch-predictions#input_data_requirements) . If your data type contains an array, the length of the array in the input data must be equal to the number of features specified in the yaml file. Otherwise Model Monitoring excludes the prediction instance with the incorrect array length from feature skew calculation.\nFor example, the arrays in the following data types contain two features:\n- Array: `{[[1, 2]]}`\n- \"Key\"/\"Value\": `{\"key\": 0, \"values\": [[1, 2]]}`\nThe corresponding schema must also specify two features:\n```\ntype: objectproperties:\u00a0 name:\u00a0 \u00a0 type: string\u00a0 age:\u00a0 \u00a0 type: numberrequired:- name- age\n```\n## What's next\n- [Enable skew and drift detection](/vertex-ai/docs/model-monitoring/using-model-monitoring) for your models.\n- Try the example notebook [in Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/model_monitoring/model_monitoring.ipynb) or [view it on GitHub](https://www.github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/model_monitoring/model_monitoring.ipynb) .", "guide": "Vertex AI"}