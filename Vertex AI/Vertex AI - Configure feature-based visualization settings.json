{"title": "Vertex AI - Configure feature-based visualization settings", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Configure feature-based visualization settings\nVertex Explainable AI provides built-in visualization capabilities for your image data. You can configure visualizations for custom-trained image models.\nWhen you request an explanation on an image classification model, you get the predicted class along with an image overlay showing which pixels (integrated gradients) or regions (integrated gradients or XRAI) contributed to the prediction.\nThe following images show visualizations on a husky image. The left visualization uses the integrated gradients method and highlights areas of positive attribution. The right visualization uses an XRAI method with a color gradient indicating areas of lesser (blue) and greater (yellow) influence in making a positive prediction.The type of data you're working with can influence whether you use an integrated gradients or XRAI approach to visualizing your explanations.\n- XRAI tends to be better with natural images and provides a better high-level summary of insights, like showing that positive attribution is related to the shape of a dog's face.\n- Integrated gradients (IG) tends to provide details at the pixel level and is useful for uncovering more granular attributions.\nLearn more about the attribution methods in the Vertex Explainable AI [Overview page](/vertex-ai/docs/explainable-ai/overview) .\n", "content": "## Get started\nConfigure visualization when you [create a Model resource that supportsVertex Explainable AI](/vertex-ai/docs/explainable-ai/configuring-explanations) , or when you [overridethe Model'sExplanationSpec](/vertex-ai/docs/explainable-ai/configuring-explanations#override) .\nTo configure visualization for your model, populate the `visualization` field of the [InputMetadata message](/vertex-ai/docs/reference/rest/v1/ExplanationSpec#inputmetadata) corresponding to the feature that you want to visualize. In this configuration message, you can include options such as the type of overlay used, which attributions are highlighted, color, and more. All settings are optional.\n## Visualization options\nThe default and recommended settings depend on the attribution method (integrated gradients or XRAI). The following list describes configuration options and how you might use them. For a full list of options, see the [API reference for the Visualization message](/vertex-ai/docs/reference/rest/v1/ExplanationSpec#visualization) .\n- `type` : The type of visualization used: `OUTLINES` or `PIXELS` . Only specify this field if you are using integrated gradients; you can't specify it if you are using XRAI.For integrated gradients, the field defaults to `OUTLINES` , which shows regions of attribution. To show per-pixel attribution, set the field to `PIXELS` .\n- `polarity` : The directionality of the highlighted attributions. `positive` is set by default, which highlights areas with the highest positive attributions. This means highlighting pixels that were most influential to the model's positive prediction. Setting polarity to `negative` highlights areas that lead the model to not predicting the positive class. Using a negative polarity can be useful for debugging your model by identifying false negative regions. You can also set polarity to `both` which shows positive and negative attributions.\n- `clip_percent_upperbound` : Excludes attributions above the specified percentile from the highlighted areas. Using the clip parameters together can be useful for filtering out noise and making it easier to see areas of strong attribution.\n- `clip_percent_lowerbound` : Excludes attributions below the specified percentile from the highlighted areas.\n- `color_map` : The color scheme used for the highlighted areas. Default is `pink_green` for integrated gradients, which shows positive attributions in green and negative in pink. For XRAI visualizations, the color map is a gradient. The XRAI default is `viridis` which highlights the most influential regions in yellow and the least influential in blue.For a full list of possible values, see the [API reference for theVisualization message](/vertex-ai/docs/reference/rest/v1/ExplanationSpec#visualization) .\n- `overlay_type` : How the original image is displayed in the visualization. Adjusting the overlay can help increase visual clarity if the original image makes it difficult to view the visualization.For a full list of possible values, see the [API reference for theVisualization message](/vertex-ai/docs/reference/rest/v1/ExplanationSpec#visualization) .## Example configurations\nTo get started, below are sample `Visualization` configurations that you can use as a starting point and images that show a range of settings applied.\n### Integrated gradients\nFor integrated gradients, you may need to adjust the clip values if the attribution areas are too noisy.\n```\nvisualization: {\u00a0 \"type\": \"OUTLINES\",\u00a0 \"polarity\": \"positive\",\u00a0 \"clip_percent_lowerbound\": 70,\u00a0 \"clip_percent_upperbound\": 99.9,\u00a0 \"color_map\": \"pink_green\",\u00a0 \"overlay_type\": \"grayscale\"}\n```\nBelow are two visualizations using both the `outlines` and `pixels` types. The columns labeled \"Highly predictive only,\" \"Moderately predictive,\" and \"Almost all\" are examples of clipping at different levels that can help focus your visualization.\n### XRAI\nFor XRAI visualizations, we recommend starting with no clip values for XRAI because the overlay uses a gradient to show areas of high and low attribution.\n```\nvisualization: {\u00a0 \"type\": \"PIXELS\",\u00a0 \"polarity\": \"positive\",\u00a0 \"clip_percent_lowerbound\": 0,\u00a0 \"clip_percent_upperbound\": 100,\u00a0 \"color_map\": \"viridis\",\u00a0 \"overlay_type\": \"grayscale\"}\n```\nThe image below is an XRAI visualization using the default viridis color map and a range of overlay types. The areas in yellow indicate the most influential regions that contributed positively to the prediction.\n## What's next\n- For details about other Vertex Explainable AI configuration options, read [Configuringexplanations for custom-trained models](/vertex-ai/docs/explainable-ai/configuring-explanations) .", "guide": "Vertex AI"}