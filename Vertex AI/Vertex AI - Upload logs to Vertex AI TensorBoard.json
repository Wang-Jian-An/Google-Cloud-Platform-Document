{"title": "Vertex AI - Upload logs to Vertex AI TensorBoard", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Upload logs to Vertex AI TensorBoard\nYou can upload existing logs to your Vertex AI TensorBoard instance that were created by training locally, training outside of Vertex AI, created by a colleague, are example logs, or were created using a different Vertex AI TensorBoard instance. Logs can be shared among multiple Vertex AI TensorBoard instances.\nVertex AI TensorBoard offers Google Cloud CLI and Vertex AI SDK for Python for uploading TensorBoard logs. You can upload logs from any environment that can connect to Google Cloud.\nFor continuous monitoring call `aiplatform.start_upload_tb_log` at the beginning  of the training.  The SDK opens a new thread for uploading. This thread monitors for new data in the  directory, and uploads it to your Vertex AI TensorBoard experiment.  When training completes, call `end_upload_tb_log` to end the uploader thread.\nNote that after calling `start_upload_tb_log()` your thread will kept alive even if  an exception is thrown. To ensure the thread gets shut down, put any code after `start_upload_tb_log()` and before `end_upload_tb_log()` in a `try` statement, and call `end_upload_tb_log()` in `finally` .#", "content": "## Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/upload_tensorboard_log_continuously_sample.py) \n```\ndef upload_tensorboard_log_continuously_sample(\u00a0 \u00a0 tensorboard_experiment_name: str,\u00a0 \u00a0 logdir: str,\u00a0 \u00a0 tensorboard_id: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 experiment_display_name: Optional[str] = None,\u00a0 \u00a0 run_name_prefix: Optional[str] = None,\u00a0 \u00a0 description: Optional[str] = None,) -> None:\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 # Continuous monitoring\u00a0 \u00a0 aiplatform.start_upload_tb_log(\u00a0 \u00a0 \u00a0 \u00a0 tensorboard_id=tensorboard_id,\u00a0 \u00a0 \u00a0 \u00a0 tensorboard_experiment_name=tensorboard_experiment_name,\u00a0 \u00a0 \u00a0 \u00a0 logdir=logdir,\u00a0 \u00a0 \u00a0 \u00a0 experiment_display_name=experiment_display_name,\u00a0 \u00a0 \u00a0 \u00a0 run_name_prefix=run_name_prefix,\u00a0 \u00a0 \u00a0 \u00a0 description=description,\u00a0 \u00a0 )\u00a0 \u00a0 try:\u00a0 \u00a0 \u00a0 \u00a0 print(\"Insert your code here\")\u00a0 \u00a0 finally:\u00a0 \u00a0 \u00a0 \u00a0 aiplatform.end_upload_tb_log()\n```\n- `tensorboard_experiment_name`: The name of the TensorBoard experiment to upload to.\n- `logdir`: The directory location to check for TensorBoard logs.\n- `tensorboard_id`: The [TensorBoard instance ID](/vertex-ai/docs/experiments/tensorboard-setup#tensorboard_id) .   If not set, the`tensorboard_id`in`aiplatform.init`is used.\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find you Project ID in the   Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: The region where your TensorBoard instance is located.\n- `experiment_display_name`: The display name of the experiment.\n- `run_name_prefix`: If present, all runs created by this invocation will   have their name prefixed by this value.\n- `description`: A string description to assign to the experiment.Call `aiplatform.upload_tb_log` to perform a one-time upload of TensorBoard logs. This uploads existing data in the logdir and then returns immediately.### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/upload_tensorboard_log_one_time_sample.py) \n```\ndef upload_tensorboard_log_one_time_sample(\u00a0 \u00a0 tensorboard_experiment_name: str,\u00a0 \u00a0 logdir: str,\u00a0 \u00a0 tensorboard_id: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 experiment_display_name: Optional[str] = None,\u00a0 \u00a0 run_name_prefix: Optional[str] = None,\u00a0 \u00a0 description: Optional[str] = None,\u00a0 \u00a0 verbosity: Optional[int] = 1,) -> None:\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 # one time upload\u00a0 \u00a0 aiplatform.upload_tb_log(\u00a0 \u00a0 \u00a0 \u00a0 tensorboard_id=tensorboard_id,\u00a0 \u00a0 \u00a0 \u00a0 tensorboard_experiment_name=tensorboard_experiment_name,\u00a0 \u00a0 \u00a0 \u00a0 logdir=logdir,\u00a0 \u00a0 \u00a0 \u00a0 experiment_display_name=experiment_display_name,\u00a0 \u00a0 \u00a0 \u00a0 run_name_prefix=run_name_prefix,\u00a0 \u00a0 \u00a0 \u00a0 description=description,\u00a0 \u00a0 )\n```\n- `tensorboard_experiment_name`: The name of the TensorBoard experiment.\n- `logdir`: The directory location to check for TensorBoard logs.\n- `tensorboard_id`: The [TensorBoard instance ID](/vertex-ai/docs/experiments/tensorboard-setup#tensorboard_id) .   If not set, the`tensorboard_id`in`aiplatform.init`is used.\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these Project IDs in the   Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: The region where your TensorBoard instance is located.\n- `experiment_display_name`: The display name of the experiment.\n- `run_name_prefix`: If present, all runs created by this invocation will   have their name prefixed by this value.\n- `description`: A string description to assign to the experiment.\n- `verbosity`: Level of statistics verbosity, an integer. Supported   values: 0 - No upload statistics are printed. 1 - Print upload statistics   while uploading data (default).\nCall `aiplatform.upload_tb_log` to upload TensorBoard profile logs to an experiment.### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/upload_tensorboard_profile_logs_to_experiment_sample.py) \n```\ndef upload_tensorboard_profile_logs_to_experiment_sample(\u00a0 \u00a0 experiment_name: str,\u00a0 \u00a0 logdir: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 run_name_prefix: str,\u00a0 \u00a0 allowed_plugins: FrozenSet[str] = [\"profile\"],) -> None:\u00a0 \u00a0 aiplatform.init(project=project, location=location, experiment=experiment_name)\u00a0 \u00a0 # one time upload\u00a0 \u00a0 aiplatform.upload_tb_log(\u00a0 \u00a0 \u00a0 \u00a0 tensorboard_experiment_name=experiment_name,\u00a0 \u00a0 \u00a0 \u00a0 logdir=logdir,\u00a0 \u00a0 \u00a0 \u00a0 run_name_prefix=run_name_prefix,\u00a0 \u00a0 \u00a0 \u00a0 allowed_plugins=allowed_plugins,\u00a0 \u00a0 )\n```\n- `experiment_name`: The name of the TensorBoard experiment.\n- `logdir`: The directory location to check for TensorBoard logs.\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these Project IDs in the Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: The region where your TensorBoard instance is located.\n- `run_name_prefix`: For profile data, this is the run prefix. The directory format within LOG_DIR should match the following:\n- `/RUN_NAME_PREFIX/plugins/profile/YYYY_MM_DD_HH_SS/`- `allowed_plugins`: A list of additional plugins to allow. For uploading profile data, this should include`\"profile\"`\n- (Optional) Create a dedicated virtual environment to install the Vertex AI TensorBoard  uploader Python CLI.```\npython3 -m venv PATH/TO/VIRTUAL/ENVIRONMENTsource PATH/TO/VIRTUAL/ENVIRONMENT/bin/activate\n```- ``: your dedicated virtual environment.\n- Install the Vertex AI TensorBoard package through Vertex AI SDK.```\npip install -U pippip install google-cloud-aiplatform[tensorboard]\n```\n- Upload TensorBoard logs- Time Series and Blob Data```\ntb-gcp-uploader --tensorboard_resource_name \\TENSORBOARD_RESOURCE_NAME \\--logdir=LOG_DIR \\--experiment_name=TB_EXPERIMENT_NAME --one_shot=True\n```\n- Profile Data```\ntb-gcp-uploader \\--tensorboard_resource_name TENSORBOARD_RESOURCE_NAME \\--logdir=LOG_DIR --experiment_name=TB_EXPERIMENT_NAME \\--allowed_plugins=\"profile\" --run_name_prefix=RUN_NAME_PREFIX \\--one_shot=True\n```\n- ``: The [TensorBoard Resource name](/vertex-ai/docs/experiments/tensorboard-setup#tensorboard_resource_name) used to fully identify the Vertex AI TensorBoard instance.\n- ``: The location of the event logs that resides   either in the local file system or Cloud Storage\n- ``: The name of the TensorBoard experiment,   for example`test-experiment`.\n- ``: For profile data, this is the run prefix. The directory   format within``should match the following:\n- `/RUN_NAME_PREFIX/plugins/profile/YYYY_MM_DD_HH_SS/`\nThe uploader CLI by default runs indefinitely, monitoring changes in the `LOG_DIR` , and uploads newly added logs. `--one_shot=True` disables the behavior. Run `tb-gcp-uploader --help` for more information.", "guide": "Vertex AI"}