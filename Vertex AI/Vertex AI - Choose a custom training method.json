{"title": "Vertex AI - Choose a custom training method", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Choose a custom training method\nIf you're writing your own training code instead of using AutoML, there are several ways of doing custom training to consider. This topic provides a brief overview and comparison of the different ways you can run custom training.\n", "content": "## Custom training resources on Vertex AI\nThere are three types of Vertex AI resources you can create to train custom models on Vertex AI:\n- [Custom jobs](/vertex-ai/docs/training/create-custom-job) \n- [Hyperparameter tuning jobs](/vertex-ai/docs/training/using-hyperparameter-tuning) \n- [Training pipelines](/vertex-ai/docs/training/create-training-pipeline) \nWhen you create a , you specify settings that Vertex AI needs to run your training code, including:\n- One worker pool for single-node training ( [WorkerPoolSpec](/vertex-ai/docs/reference/rest/v1/CustomJobSpec#workerpoolspec) ), or multiple worker pools for distributed training\n- Optional settings for configuring job scheduling ( [Scheduling](/vertex-ai/docs/reference/rest/v1/CustomJobSpec#scheduling) ), [settingcertain environment variables for your trainingcode](/vertex-ai/docs/training/code-requirements#environment-variables) , [using a customservice account](/vertex-ai/docs/general/custom-service-account) , and [using VPC NetworkPeering](/vertex-ai/docs/general/vpc-peering) \nWithin the worker pool(s), you can specify the following settings:\n- [Machine types and accelerators](/vertex-ai/docs/training/configure-compute) \n- [Configuration of what type of training code the worker poolruns](/vertex-ai/docs/training/configure-container-settings) : either a Python training application ( [PythonPackageSpec](/vertex-ai/docs/reference/rest/v1/CustomJobSpec#pythonpackagespec) ) or a custom container ( [ContainerSpec](/vertex-ai/docs/reference/rest/v1/CustomJobSpec#containerspec) )\n[Hyperparameter tuning jobs](/vertex-ai/docs/training/using-hyperparameter-tuning) have additional settings to configure, such as the metric. Learn more about [hyperparameter tuning](/vertex-ai/docs/training/hyperparameter-tuning-overview) .\nA orchestrates custom training jobs or hyperparameter tuning jobs with additional steps, such as loading a dataset or uploading the model to Vertex AI after the training job is successfully completed.\n### Custom training resources\nTo view existing training pipelines in your project, go to the **TrainingPipelines** page in the **Vertex AI** section of the Google Cloud console.\n[Go to Training pipelines](https://console.cloud.google.com/vertex-ai/training/training-pipelines)\n**Note:** The **Training pipelines** page shows AutoML training pipelines, in addition to custom training pipelines. You can use the **Model type** column to distinguish between the two.\nTo view existing custom jobs in your project, go to the **Custom jobs** page.\n[Go to Custom jobs](https://console.cloud.google.com/vertex-ai/training/custom-jobs)\nTo view existing hyperparameter tuning jobs in your project, go to the **Hyperparameter tuning** page.\n[Go to Hyperparameter tuning](https://console.cloud.google.com/vertex-ai/training/hyperparameter-tuning-jobs)\n## Prebuilt and custom containers\nBefore you submit a custom training job, hyperparameter tuning job, or a training pipeline to Vertex AI, you need to create a [Pythontraining application](/vertex-ai/docs/training/create-python-pre-built-container) or a [custom container](/vertex-ai/docs/training/create-custom-container) to define the training code and dependencies you want to run on Vertex AI. If you create a Python training application using TensorFlow, PyTorch, scikit-learn, or XGBoost, you can use our prebuilt containers to run your code. If you're not sure which of these options to choose, refer to the [training code requirements](/vertex-ai/docs/training/code-requirements) to learn more.\n## Distributed training\nYou can configure a custom training job, hyperparameter tuning job, or a training pipeline for distributed training by specifying multiple worker pools:\n- Use your first worker pool to configure your primary replica, and set the replica count to 1.\n- Add more worker pools to configure worker replicas, parameter server replicas, or evaluator replicas, if your machine learning framework supports these additional cluster tasks for distributed training.\nLearn more about [using distributed training](/vertex-ai/docs/training/distributed-training) .\n## What's next\n- Learn how to [create a persistent resource](/vertex-ai/docs/training/persistent-resource-create) to run custom training jobs.\n- See [Create custom training jobs](/vertex-ai/docs/training/create-custom-job) to learn how to create custom training jobs to run your custom training applications on Vertex AI.\n- See [Create training pipelines](/vertex-ai/docs/training/create-training-pipeline) to learn how to create training pipelines to run custom training applications on Vertex AI.\n- See [Use hyperparameter tuning](/vertex-ai/docs/training/using-hyperparameter-tuning) to learn about Hyperparameter tuning searches.", "guide": "Vertex AI"}