{"title": "Vertex AI - How to use model version aliases", "url": "https://cloud.google.com/vertex-ai/docs/model-registry/model-alias", "abstract": "# Vertex AI - How to use model version aliases\nA model alias is a mutable, named reference to a model version unique within a model resource. An alias is \"mutable\" because aliases can be moved from one model version to another and \"named\" because they are user-defined, arbitrary strings. Model aliases are helpful for fetching or deploying a particular model version by reference without needing to know the specific version's ID. In this way, they operate similarly to Docker Tags or Branch references in Git.\nWhen you create a new model in Model Registry, the first version automatically gets assigned the alias. The default alias references the model version that is used if a user runs a command on a model without specifying a particular version. One version of a model is required to carry the default alias at all times. Otherwise, the default alias behaves as any other user-defined alias.\nFrom the Google Cloud console the alias marker can help stakeholders understand at a glance which model is the stable version ready for deployment. In addition to the default alias, you can create and assign your own custom aliases to models in the Model Registry.\nIn Model Registry, you can see at a glance which model version has the default alias by looking at the alias column.\nIf you decide you want to reassign the alias to a different model version, you can easily move aliases to a different version.\n**Note:** The required format of the version alias is `[a-z][a-zA-Z0-9-]{0,126}[a-z0-9]` to distinguish from `version_id` . A default version alias will be created for the first version of the model, and there must be exactly one default version alias for a model.\nSome considerations for using aliases:\n- Your version aliases should be unique; and an alias can only be assigned to a single version, by model, at a time.\n- Version aliases must be non-numerical.\n- If you don't specify a model version for production, the default model is used.\n- An alias is different from a label. [Learn more about model labels here](/vertex-ai/docs/model-registry/model-labels) .\n- If you apply an existing alias that is used in another model version, the alias is removed from that version.", "content": "## Set a model version as default\n- In the Google Cloud console, go to the Vertex AI **Model Registry** page. [Go to the Model Registry page](https://console.cloud.google.com/vertex-ai/models) \n- From the Model Registry, select the name of the model you want to edit. The model details window opens. All of the model versions are listed. One of the model versions has the **default** alias.\n- Select the **Actions** button for the model version you want to assign the default version.\n- Click **Set as default** .## Add an alias to a model version\n- In the Google Cloud console, go to the Vertex AI **Model Registry** page. [Go to the Model Registry page](https://console.cloud.google.com/vertex-ai/models) \n- From the Model Registry, select the name of the model you want to edit. The model details window opens.\n- From the details page, select the model version you want and click **More** .\n- Click **Edit alias** . Select **Add New.** \n- **Edit alias:** Click **Add alias** and enter the name of the alias you want to add to the model version.\n- Click **Save.** ## Upload a new aliased model version\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/model_registry/upload_new_aliased_model_version_sample.py) \n```\nfrom typing import Listfrom google.cloud import aiplatformdef upload_new_aliased_model_version_sample(\u00a0 \u00a0 parent_name: str,\u00a0 \u00a0 artifact_uri: str,\u00a0 \u00a0 serving_container_image: str,\u00a0 \u00a0 is_default_version: bool,\u00a0 \u00a0 version_aliases: List[str],\u00a0 \u00a0 version_description: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 Uploads a new aliased version of a model with ID 'model_id'.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 parent_name: The parent resource name of an existing model.\u00a0 \u00a0 \u00a0 \u00a0 artifact_uri: The URI of the model artifact to upload.\u00a0 \u00a0 \u00a0 \u00a0 serving_container_image: The name of the serving container image to use.\u00a0 \u00a0 \u00a0 \u00a0 is_default_version: Whether this version is the default version of the model.\u00a0 \u00a0 \u00a0 \u00a0 version_aliases: The aliases of the model version.\u00a0 \u00a0 \u00a0 \u00a0 version_description: The description of the model version.\u00a0 \u00a0 \u00a0 \u00a0 project: The project ID.\u00a0 \u00a0 \u00a0 \u00a0 location: The region name.\u00a0 \u00a0 Returns:\u00a0 \u00a0 \u00a0 \u00a0 The new version of the model.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 # Initialize the client.\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 # Upload a new aliased version of the Model resource with the ID 'model_id'. The parent_name of Model resource can be also\u00a0 \u00a0 # 'projects/<your-project-id>/locations/<your-region>/models/<your-model-id>'\u00a0 \u00a0 model = aiplatform.Model.upload(\u00a0 \u00a0 \u00a0 \u00a0 artifact_uri=artifact_uri,\u00a0 \u00a0 \u00a0 \u00a0 serving_container_image=serving_container_image,\u00a0 \u00a0 \u00a0 \u00a0 parent_name=parent_name,\u00a0 \u00a0 \u00a0 \u00a0 is_default_version=is_default_version,\u00a0 \u00a0 \u00a0 \u00a0 version_aliases=version_aliases,\u00a0 \u00a0 \u00a0 \u00a0 version_description=version_description,\u00a0 \u00a0 )\u00a0 \u00a0 return model\n```\n**Note:** If you don't see the Alias column, you might need to click the **Column display options** button to make sure the Alias column item is selected for display.\n## Delete a model alias\nWhen you delete a model version assigned the default alias, the alias is automatically assigned to the next most recent version.\n- In the Google Cloud console, go to the Vertex AI **Model Registry** page. [Go to the Model Registry page](https://console.cloud.google.com/vertex-ai/models) \n- From the Model Registry, select the name of the model you want to edit. The model details window opens.\n- From the details page click the **Actions** button on the model version.\n- Click **Edit alias** .\n- A list of the aliases attached to the model version displays. Hover your cursor to the right of the Alias textbox for the label to display the delete icon.\n- Click the delete icon for the alias you want to delete.\n- Click **Save** .\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/model_registry/delete_aliases_model_version_sample.py) \n```\nfrom typing import Listfrom google.cloud import aiplatformdef delete_aliases_model_version_sample(\u00a0 \u00a0 model_id: str,\u00a0 \u00a0 version_aliases: List[str],\u00a0 \u00a0 version_id: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 Delete aliases to a model version.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 model_id: The ID of the model.\u00a0 \u00a0 \u00a0 \u00a0 version_aliases: The version aliases to assign.\u00a0 \u00a0 \u00a0 \u00a0 version_id: The version ID of the model to assign the aliases to.\u00a0 \u00a0 \u00a0 \u00a0 project: The project ID.\u00a0 \u00a0 \u00a0 \u00a0 location: The region name.\u00a0 \u00a0 Returns\u00a0 \u00a0 \u00a0 \u00a0 None.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 # Initialize the client.\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 # Initialize the Model Registry resource with the ID 'model_id'.The parent_name of Model resource can be also\u00a0 \u00a0 # 'projects/<your-project-id>/locations/<your-region>/models/<your-model-id>'\u00a0 \u00a0 model_registry = aiplatform.models.ModelRegistry(model=model_id)\u00a0 \u00a0 # Remove the version aliases to the model version with the version 'version'.\u00a0 \u00a0 model_registry.remove_version_aliases(\u00a0 \u00a0 \u00a0 \u00a0 target_aliases=version_aliases, version=version_id\u00a0 \u00a0 )\n```", "guide": "Vertex AI"}