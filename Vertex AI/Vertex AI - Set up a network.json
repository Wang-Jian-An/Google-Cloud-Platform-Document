{"title": "Vertex AI - Set up a network", "url": "https://cloud.google.com/vertex-ai/docs/workbench/managed/networking", "abstract": "# Vertex AI - Set up a network\n# Set up a network\nVertex AI Workbench managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  managed notebooks will end and the ability to create managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/managed/migrate-to-instances) .\nThis page describes networking options for Vertex AI Workbench managed notebooks instances and shows you how to set up a network.\nThis guide is recommended for networking administrators who are already familiar with Google Cloud networking concepts.\n", "content": "## Overview\nThis guide describes how to configure each of the following network options:\n- [Google-managed network](#google-managed) \n- [VPC network in the same project as your managed notebooks instance](#vpc) \n- [Shared VPC network](#shared-vpc) \nBy default, your managed notebooks instance uses a Google-managed network. If you want to, you can instead specify a Virtual Private Cloud network located within your project or a Shared VPC network that you have access to. If you specify a VPC or Shared VPC network, the network requires a [private servicesaccess](/vpc/docs/private-services-access) connection.\n## Supported feature comparison\nThe following table describes which common features are supported for each networking option.\n| Feature           | Google-managed network | VPC network in your instance's project | Shared VPC network |\n|:--------------------------------------------------|:-------------------------|:-----------------------------------------|:---------------------|\n| External IP          | Supported    | Supported        | Supported   |\n| Internal IP          | Supported    | Supported        | Supported   |\n| Private Google Access        | Not supported   | Supported        | Supported   |\n| VPC            | Supported    | Supported        | Supported   |\n| VPC Network Peering (requires Service Networking) | Not supported   | Supported        | Supported   |\n**Note:** Because VPC Network Peering is not supported when using the default Google-managed network, an external IP address is required in order to download additional resources such as Python or Conda packages.\n## Use the default Google-managed network\nThe default network is Google-managed and requires no additional setup to configure.\nWhen you create a managed notebooks instance with the default Google-managed network, the instance is deployed in a [tenant project](/service-infrastructure/docs/manage-tenant-projects) and uses a default VPC and subnet.\nTo download additional resources such as Python or Conda packages, a managed notebooks instance using the default Google-managed network requires an external IP address.\n## Connect your instance to a VPC network in the same project\nTo connect a managed notebooks instance to a VPC network in the same project as your managed notebooks instance, complete the following steps.\nThis option requires you to configure [private services access](/vpc/docs/private-services-access) .\n### Before you begin\n- Select or [create a Google Cloudproject](/resource-manager/docs/creating-managing-projects) where your managed notebooks instance will be. [Go to project selector](https://console.cloud.google.com/projectselector2/home/dashboard) \n- [Make sure that billing is enabled for your Google Cloud project](/billing/docs/how-to/verify-billing-enabled#console) .\n- Enable the Compute Engine, Notebooks, and Service Networking APIs. [Enable the APIs](https://console.cloud.google.com/flows/enableapi?apiid=compute.googleapis.com,notebooks.googleapis.com,servicenetworking.googleapis.com) \n- Install the [gcloud CLI](/sdk/docs) to run the `gcloud` command-line examples in this guide.\n### Set up private services access for your VPC\nWhen you set up private services access, you establish a private connection between your network and a network owned by Google or a third party service ( ). In this case, your managed notebooks instance is a service producer. To [set upprivate services access](/vpc/docs/configure-private-services-access) , you [reserve an IP range](#reserve-ip-range) for the service producer, and then [createa peering connection](#peering-connection) with your managed notebooks instance.\nTo configure your project ID, use the following command.\n```\ngcloud config set project PROJECT_ID\n```\n[project ID](/resource-manager/docs/creating-managing-projects#identifying_projects)\n[enabled the required APIs](#before-you-begin)\n- Create or select an existing VPC in a [supportedmanaged notebooks region](/vertex-ai/docs/general/locations#managed-notebooks-locations) to use with your managed notebooks instance.If you already have a VPC with private services access configured, and you want to use that VPC to peer with your managed notebooks instance, skip to [Create a managed notebooks instance](#create) .If you need to create a new VPC, run the following gcloud CLI commands:```\ngcloud compute networks create VPC_NAME \\\u00a0 \u00a0 --project=PROJECT_ID --subnet-mode=auto \\\u00a0 \u00a0 --mtu=1460 --bgp-routing-mode=regionalgcloud compute firewall-rules create VPC_NAME-allow-icmp \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --network=projects/PROJECT_ID/global/networks/VPC_NAME \\\u00a0 \u00a0 --description=Allows\\ ICMP\\ connections\\ from\\ any\\ source\\ to\\ any\\ instance\\ on\\ the\\ network. \\\u00a0 \u00a0 --direction=INGRESS --priority=65534 --source-ranges=0.0.0.0/0 \\\u00a0 \u00a0 --action=ALLOW --rules=icmpgcloud compute firewall-rules create VPC_NAME-allow-internal \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --network=projects/PROJECT_ID/global/networks/VPC_NAME \\\u00a0 \u00a0 --description=Allows\\ connections\\ from\\ any\\ source\\ in\\ the\\ network\\ IP\\ range\\ to\\ any\\ instance\\ on\\ the\\ network\\ using\\ all\\ protocols. \\\u00a0 \u00a0 --direction=INGRESS --priority=65534 --source-ranges=10.128.0.0/9 \\\u00a0 \u00a0 --action=ALLOW --rules=allgcloud compute firewall-rules create VPC_NAME-allow-rdp \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --network=projects/PROJECT_ID/global/networks/VPC_NAME \\\u00a0 \u00a0 --description=Allows\\ RDP\\ connections\\ from\\ any\\ source\\ to\\ any\\ instance\\ on\\ the\\ network\\ using\\ port\\ 3389. \\\u00a0 \u00a0 --direction=INGRESS --priority=65534 --source-ranges=0.0.0.0/0 \\\u00a0 \u00a0 --action=ALLOW --rules=tcp:3389gcloud compute firewall-rules create VPC_NAME-allow-ssh \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --network=projects/PROJECT_ID/global/networks/VPC_NAME \\\u00a0 \u00a0 --description=Allows\\ TCP\\ connections\\ from\\ any\\ source\\ to\\ any\\ instance\\ on\\ the\\ network\\ using\\ port\\ 22. \\\u00a0 \u00a0 --direction=INGRESS --priority=65534 --source-ranges=0.0.0.0/0 \\\u00a0 \u00a0 --action=ALLOW --rules=tcp:22\n```Replace `` with a name for your VPC.Vertex AI Workbench managed notebooks instances use several domains that a Virtual Private Cloud network doesn't handle by default. To ensure that your VPC network correctly handles requests sent to those domains, use Cloud DNS to add DNS records. For more information about VPC routes, see [Routes overview](/vpc/docs/routes) .\nTo create a [managed zone](/dns/zones) for a domain, add a DNS entry that will route the request, and execute the transaction, complete the following steps. Repeat these steps for each of [several domains](#domains) that you need to handle requests for, starting with `*.notebooks.googleapis.com` .\nIn [Cloud Shell](https://console.cloud.google.com?cloudshell=true) or any environment where the [Google Cloud CLI](/sdk/docs) is installed, enter the following [Google Cloud CLI](/sdk/gcloud) commands.\n- To create a private managed zone  for one of the domains that your  VPC network needs to handle:```\n gcloud dns managed-zones create ZONE_NAME \\\n  --visibility=private \\\n  --networks=https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/networks/NETWORK_NAME \\\n  --dns-name=DNS_NAME \\\n  --description=\"Description of your managed zone\"\n \n```Replace the following:- ``: a name for the zone to create.   You must use a separate zone for each domain. This zone name is used in   each of the following steps.\n- ``: the ID of the project that hosts your   VPC network\n- ``: the name of the VPC   network that you created earlier\n- ``: the part of the domain name that comes   after the`*.`, with a period on the end.   For example,`*.notebooks.googleapis.com`has a``of`notebooks.googleapis.com.`\n- Start a transaction.```\n gcloud dns record-sets transaction start --zone=ZONE_NAME\n \n```\n- Add the following DNS A record. This reroutes traffic to  Google's restricted IP addresses.```\n gcloud dns record-sets transaction add \\\n  --name=DNS_NAME. \\\n  --type=A 199.36.153.4 199.36.153.5 199.36.153.6 199.36.153.7 \\\n  --zone=ZONE_NAME \\\n  --ttl=300\n \n```\n- Add the following DNS CNAME record to point to the A record  that you just added. This redirects all traffic matching the  domain to the IP addresses listed in the previous step.```\n gcloud dns record-sets transaction add \\\n  --name=\\*.DNS_NAME. \\\n  --type=CNAME DNS_NAME. \\\n  --zone=ZONE_NAME \\\n  --ttl=300\n \n```\n- Execute the transaction.```\n gcloud dns record-sets transaction execute --zone=ZONE_NAME\n \n```\n- Repeat these steps for each of the following domains. For each  repetition, change and to the appropriate values for that  domain. Keep and the same each time. You already  completed these steps for `*.notebooks.googleapis.com` .- `*.notebooks.googleapis.com`\n- `*.notebooks.cloud.google.com`\n- `*.notebooks.googleusercontent.com`\nWhen you reserve an IP range for service producers, the range can be used by your managed notebooks instance and other services. If you plan to connect with other service producers using the same range, you might want to allocate a larger range to accommodate them, to avoid IP exhaustion.\nUse the following command to set a reserved range using [gcloud compute addresses create](/sdk/gcloud/reference/compute/addresses/create) .\n```\ngcloud compute addresses create PEERING_RANGE_NAME \\\u00a0 \u00a0 --global \\\u00a0 \u00a0 --prefix-length=16 \\\u00a0 \u00a0 --description=\"Managed notebooks range\" \\\u00a0 \u00a0 --network=NETWORK_NAME \u00a0\\\u00a0 \u00a0 --purpose=VPC_PEERING\n```\nReplace the following:\n- ``: the name of your range\n- ``: the name of your network\nA `prefix-length` value of `16` means that a CIDR block with a subnet mask of `/16` will be reserved for use by Google Cloud services such as Vertex AI Workbench managed notebooks.\nTo avoid an invalid service networking configuration, use a subnet mask of `/24` or lower.\nUse the following command to verify the addresses.\n```\ngcloud compute addresses list\n```\nEstablish a peering connection between your VPC host project and Google's Service Networking, using [gcloud services vpc-peerings connect](/sdk/gcloud/reference/services/vpc-peerings/connect) .\n```\ngcloud services vpc-peerings connect \\\u00a0 \u00a0 --service=servicenetworking.googleapis.com \\\u00a0 \u00a0 --network=NETWORK_NAME \\\u00a0 \u00a0 --ranges=PEERING_RANGE_NAME \\\u00a0 \u00a0 --project=PROJECT_ID\n```\n**Note:** The `--ranges` flag accepts a list of ranges so that you can specify multiple ranges if necessary.\nTo list the\n```\ngcloud services vpc-peerings list --network=NETWORK_NAME\n```\n### Create a managed notebooks instance\nBefore using any of the request data, make the following replacements:\n- : The user account in the form of an email address.\n- : The [machine type](/compute/docs/machine-types) ,  for example`n1-standard-1`.\n- : The project ID of your managed notebooks instance.\n- : The VPC network name.\n- : The region of your VPC network.\n- : The name of your managed notebooks instance.\n- : The subnet name for your VPC network.\n- : Optional. The name of the peering range  if you want to specify one.\nHTTP method and URL:\n```\nPOST https://notebooks.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/runtimes?runtimeId=NOTEBOOK_NAME\n```\nRequest JSON body:\n```\n{\n \"access_config\": {\n \"access_type\": \"SINGLE_USER\",\n \"runtime_owner\": \"USER_ACCOUNT\"\n },\n \"virtual_machine\": {\n \"virtual_machine_config\": {\n  \"machine_type\": \"MACHINE_TYPE\",\n  \"network\": \"projects/PROJECT_ID/global/networks/NETWORK_NAME\",\n  \"subnet\": \"projects/PROJECT_ID/regions/LOCATION/subnetworks/SUBNET_NAME\",\n  \"internal_ip_only\": true,\n  \"reserved_ip_range\": \"PEERING_RANGE_NAME\" # Optional\n }\n }\n}\n```\nTo send your request, choose one of these options:\n**Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://notebooks.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/runtimes?runtimeId=NOTEBOOK_NAME\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://notebooks.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/runtimes?runtimeId=NOTEBOOK_NAME\" | Select-Object -Expand Content\n```\n### Verify connectivity\nTo verify that your managed notebooks instance is connected to the VPC network, complete these steps.\n- In the Google Cloud console, go to the **VPC network peering** page. [Go to VPC network peering](https://console.cloud.google.com/networking/peering/list) \n- On the **VPC network peering** page, find your connection.\n### Export custom routes\nIf you use custom routes, you need to export them so that Vertex AI Workbench managed notebooks can import them.\nTo export custom routes, you [updatethe peering connection](/vpc/docs/using-vpc-peering#update-peer-connection) in your VPC. Exporting custom routes sends all [eligiblestatic and dynamic routes](/vpc/docs/vpc-peering#considerations) that are in your VPC network, such as routes to your on-premises network, to service producers' networks (in this case, managed notebooks). This establishes the necessary connections and lets managed notebooks instances send traffic back to your on-premises network.\nTo list the name of the peering connection to update, use the following command. If you have multiple peering connections, omit the `--format` flag.\n```\ngcloud services vpc-peerings list \\\u00a0 \u00a0 --network=NETWORK_NAME \\\u00a0 \u00a0 --service=servicenetworking.googleapis.com \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --format \"value(peering)\"\n```\nTo update the peering connection to export custom routes, use the following command.\n```\ngcloud compute networks peerings update PEERING_NAME \\\u00a0 \u00a0 --network=NETWORK_NAME \\\u00a0 \u00a0 --export-custom-routes \\\u00a0 \u00a0 --project=PROJECT_ID\n```\nReplace with the name of your peering connection.\n### Check the state of your peering connections\nTo check whether your peering connections are active, you can list them using the following command.\n```\ngcloud compute networks peerings list --network NETWORK_NAME\n```\nVerify that the state of the peering connection that you just created is `ACTIVE` . Learn more about [activepeering connections](/vpc/docs/using-vpc-peering#step_3_becomes_active) .\n## Connect your instance to a Shared VPC network\nTo connect a managed notebooks instance to a Shared VPC network that you have access to, complete the following steps.\nThis option requires you to configure [private services access](/vpc/docs/private-services-access) .\n### Before you begin\n- Select or [create a Google Cloudproject](/resource-manager/docs/creating-managing-projects) where your managed notebooks instance will be. [Go to project selector](https://console.cloud.google.com/projectselector2/home/dashboard) \n- [Make sure that billing is enabled for your Google Cloud project](/billing/docs/how-to/verify-billing-enabled#console) .\n- Enable the Compute Engine, Notebooks, and Service Networking APIs. [Enable the APIs](https://console.cloud.google.com/flows/enableapi?apiid=compute.googleapis.com,notebooks.googleapis.com,servicenetworking.googleapis.com) \n- When you use [Shared VPC](/vpc/docs/shared-vpc) , you run your managed notebooks instance in a separate Google Cloud project than your VPC host project. Repeat the previous steps to enable the Compute Engine, Notebooks, and Service Networking APIs in your VPC host project. Learn more about how to [provision Shared VPC](/vpc/docs/provisioning-shared-vpc) .\n- Install the [gcloud CLI](/sdk/docs) to run the `gcloud` command-line examples in this guide.\n### Set up private services access for your VPC\nWhen you set up private services access, you establish a private connection between your network and a network owned by Google or a third party service ( ). In this case, your managed notebooks instance is a service producer. To [set upprivate services access](/vpc/docs/configure-private-services-access) , you [reserve an IP range](#reserve-ip-range) for the service producer, and then [createa peering connection](#peering-connection) with your managed notebooks instance.\nTo configure your project ID, use the following command.\n```\ngcloud config set project PROJECT_ID\n```\n[project ID](/resource-manager/docs/creating-managing-projects#identifying_projects)\n[enabled the required APIs](#before-you-begin)\n- Create or select an existing VPC in a [supportedmanaged notebooks region](/vertex-ai/docs/general/locations#managed-notebooks-locations) to use with your managed notebooks instance.If you already have a VPC with private services access configured, and you want to use that VPC to peer with your managed notebooks instance, skip to [Create a managed notebooks instance](#create) .If you need to create a new VPC, run the following gcloud CLI commands:```\ngcloud compute networks create VPC_NAME \\\u00a0 \u00a0 --project=PROJECT_ID --subnet-mode=auto \\\u00a0 \u00a0 --mtu=1460 --bgp-routing-mode=regionalgcloud compute firewall-rules create VPC_NAME-allow-icmp \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --network=projects/PROJECT_ID/global/networks/VPC_NAME \\\u00a0 \u00a0 --description=Allows\\ ICMP\\ connections\\ from\\ any\\ source\\ to\\ any\\ instance\\ on\\ the\\ network. \\\u00a0 \u00a0 --direction=INGRESS --priority=65534 --source-ranges=0.0.0.0/0 \\\u00a0 \u00a0 --action=ALLOW --rules=icmpgcloud compute firewall-rules create VPC_NAME-allow-internal \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --network=projects/PROJECT_ID/global/networks/VPC_NAME \\\u00a0 \u00a0 --description=Allows\\ connections\\ from\\ any\\ source\\ in\\ the\\ network\\ IP\\ range\\ to\\ any\\ instance\\ on\\ the\\ network\\ using\\ all\\ protocols. \\\u00a0 \u00a0 --direction=INGRESS --priority=65534 --source-ranges=10.128.0.0/9 \\\u00a0 \u00a0 --action=ALLOW --rules=allgcloud compute firewall-rules create VPC_NAME-allow-rdp \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --network=projects/PROJECT_ID/global/networks/VPC_NAME \\\u00a0 \u00a0 --description=Allows\\ RDP\\ connections\\ from\\ any\\ source\\ to\\ any\\ instance\\ on\\ the\\ network\\ using\\ port\\ 3389. \\\u00a0 \u00a0 --direction=INGRESS --priority=65534 --source-ranges=0.0.0.0/0 \\\u00a0 \u00a0 --action=ALLOW --rules=tcp:3389gcloud compute firewall-rules create VPC_NAME-allow-ssh \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --network=projects/PROJECT_ID/global/networks/VPC_NAME \\\u00a0 \u00a0 --description=Allows\\ TCP\\ connections\\ from\\ any\\ source\\ to\\ any\\ instance\\ on\\ the\\ network\\ using\\ port\\ 22. \\\u00a0 \u00a0 --direction=INGRESS --priority=65534 --source-ranges=0.0.0.0/0 \\\u00a0 \u00a0 --action=ALLOW --rules=tcp:22\n```Replace `` with a name for your VPC.Vertex AI Workbench managed notebooks instances use several domains that a Virtual Private Cloud network doesn't handle by default. To ensure that your VPC network correctly handles requests sent to those domains, use Cloud DNS to add DNS records. For more information about VPC routes, see [Routes overview](/vpc/docs/routes) .\nTo create a [managed zone](/dns/zones) for a domain, add a DNS entry that will route the request, and execute the transaction, complete the following steps. Repeat these steps for each of [several domains](#domains) that you need to handle requests for, starting with `*.notebooks.googleapis.com` .\nIn [Cloud Shell](https://console.cloud.google.com?cloudshell=true) or any environment where the [Google Cloud CLI](/sdk/docs) is installed, enter the following [Google Cloud CLI](/sdk/gcloud) commands.\n- To create a private managed zone  for one of the domains that your  VPC network needs to handle:```\n gcloud dns managed-zones create ZONE_NAME \\\n  --visibility=private \\\n  --networks=https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/networks/NETWORK_NAME \\\n  --dns-name=DNS_NAME \\\n  --description=\"Description of your managed zone\"\n \n```Replace the following:- ``: a name for the zone to create.   You must use a separate zone for each domain. This zone name is used in   each of the following steps.\n- ``: the ID of the project that hosts your   VPC network\n- ``: the name of the VPC   network that you created earlier\n- ``: the part of the domain name that comes   after the`*.`, with a period on the end.   For example,`*.notebooks.googleapis.com`has a``of`notebooks.googleapis.com.`\n- Start a transaction.```\n gcloud dns record-sets transaction start --zone=ZONE_NAME\n \n```\n- Add the following DNS A record. This reroutes traffic to  Google's restricted IP addresses.```\n gcloud dns record-sets transaction add \\\n  --name=DNS_NAME. \\\n  --type=A 199.36.153.4 199.36.153.5 199.36.153.6 199.36.153.7 \\\n  --zone=ZONE_NAME \\\n  --ttl=300\n \n```\n- Add the following DNS CNAME record to point to the A record  that you just added. This redirects all traffic matching the  domain to the IP addresses listed in the previous step.```\n gcloud dns record-sets transaction add \\\n  --name=\\*.DNS_NAME. \\\n  --type=CNAME DNS_NAME. \\\n  --zone=ZONE_NAME \\\n  --ttl=300\n \n```\n- Execute the transaction.```\n gcloud dns record-sets transaction execute --zone=ZONE_NAME\n \n```\n- Repeat these steps for each of the following domains. For each  repetition, change and to the appropriate values for that  domain. Keep and the same each time. You already  completed these steps for `*.notebooks.googleapis.com` .- `*.notebooks.googleapis.com`\n- `*.notebooks.cloud.google.com`\n- `*.notebooks.googleusercontent.com`\nWhen you reserve an IP range for service producers, the range can be used by your managed notebooks instance and other services. If you plan to connect with other service producers using the same range, you might want to allocate a larger range to accommodate them, to avoid IP exhaustion.\nUse the following command to set a reserved range using [gcloud compute addresses create](/sdk/gcloud/reference/compute/addresses/create) .\n```\ngcloud compute addresses create PEERING_RANGE_NAME \\\u00a0 \u00a0 --global \\\u00a0 \u00a0 --prefix-length=16 \\\u00a0 \u00a0 --description=\"Managed notebooks range\" \\\u00a0 \u00a0 --network=NETWORK_NAME \u00a0\\\u00a0 \u00a0 --purpose=VPC_PEERING\n```\nReplace the following:\n- ``: the name of your range\n- ``: the name of your network\nA `prefix-length` value of `16` means that a CIDR block with a subnet mask of `/16` will be reserved for use by Google Cloud services such as Vertex AI Workbench managed notebooks.\nTo avoid an invalid service networking configuration, use a subnet mask of `/24` or lower.\nUse the following command to verify the addresses.\n```\ngcloud compute addresses list\n```\nEstablish a peering connection between your VPC host project and Google's Service Networking, using [gcloud services vpc-peerings connect](/sdk/gcloud/reference/services/vpc-peerings/connect) .\n```\ngcloud services vpc-peerings connect \\\u00a0 \u00a0 --service=servicenetworking.googleapis.com \\\u00a0 \u00a0 --network=NETWORK_NAME \\\u00a0 \u00a0 --ranges=PEERING_RANGE_NAME \\\u00a0 \u00a0 --project=PROJECT_ID\n```\n**Note:** The `--ranges` flag accepts a list of ranges so that you can specify multiple ranges if necessary.\nTo list the\n```\ngcloud services vpc-peerings list --network=NETWORK_NAME\n```\n### Create a managed notebooks instance\nBefore using any of the request data, make the following replacements:\n- : The user account in the form of an email address.\n- : The [machine type](/compute/docs/machine-types) ,  for example`n1-standard-1`.\n- : The project ID of your managed notebooks instance.\n- : The VPC network name.\n- : The region of your VPC network.\n- : The name of your managed notebooks instance.\n- : The subnet name for your VPC network.\n- : Optional. The name of the peering range  if you want to specify one.\nHTTP method and URL:\n```\nPOST https://notebooks.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/runtimes?runtimeId=NOTEBOOK_NAME\n```\nRequest JSON body:\n```\n{\n \"access_config\": {\n \"access_type\": \"SINGLE_USER\",\n \"runtime_owner\": \"USER_ACCOUNT\"\n },\n \"virtual_machine\": {\n \"virtual_machine_config\": {\n  \"machine_type\": \"MACHINE_TYPE\",\n  \"network\": \"projects/PROJECT_ID/global/networks/NETWORK_NAME\",\n  \"subnet\": \"projects/PROJECT_ID/regions/LOCATION/subnetworks/SUBNET_NAME\",\n  \"internal_ip_only\": true,\n  \"reserved_ip_range\": \"PEERING_RANGE_NAME\" # Optional\n }\n }\n}\n```\nTo send your request, choose one of these options:\n**Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://notebooks.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/runtimes?runtimeId=NOTEBOOK_NAME\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://notebooks.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/runtimes?runtimeId=NOTEBOOK_NAME\" | Select-Object -Expand Content\n```\n### Verify connectivity\nTo verify that your managed notebooks instance is connected to the Shared VPC network, complete these steps.\n- In the Google Cloud console, go to the **VPC network peering** page. [Go to VPC network peering](https://console.cloud.google.com/networking/peering/list) \n- On the **VPC network peering** page, find your connection.\n### Export custom routes\nIf you use custom routes, you need to export them so that Vertex AI Workbench managed notebooks can import them.\nTo export custom routes, you [updatethe peering connection](/vpc/docs/using-vpc-peering#update-peer-connection) in your VPC. Exporting custom routes sends all [eligiblestatic and dynamic routes](/vpc/docs/vpc-peering#considerations) that are in your VPC network, such as routes to your on-premises network, to service producers' networks (in this case, managed notebooks). This establishes the necessary connections and lets managed notebooks instances send traffic back to your on-premises network.\nTo list the name of the peering connection to update, use the following command. If you have multiple peering connections, omit the `--format` flag.\n```\ngcloud services vpc-peerings list \\\u00a0 \u00a0 --network=NETWORK_NAME \\\u00a0 \u00a0 --service=servicenetworking.googleapis.com \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --format \"value(peering)\"\n```\nTo update the peering connection to export custom routes, use the following command.\n```\ngcloud compute networks peerings update PEERING_NAME \\\u00a0 \u00a0 --network=NETWORK_NAME \\\u00a0 \u00a0 --export-custom-routes \\\u00a0 \u00a0 --project=PROJECT_ID\n```\nReplace with the name of your peering connection.\n### Check the state of your peering connections\nTo check whether your peering connections are active, you can list them using the following command.\n```\ngcloud compute networks peerings list --network NETWORK_NAME\n```\nVerify that the state of the peering connection that you just created is `ACTIVE` . Learn more about [activepeering connections](/vpc/docs/using-vpc-peering#step_3_becomes_active) .\n## What's next\n- Learn more about [VPC Network Peering](/vpc/docs/vpc-peering) .\n- See [reference architectures andbest practices](/solutions/best-practices-vpc-design) for VPC design.", "guide": "Vertex AI"}