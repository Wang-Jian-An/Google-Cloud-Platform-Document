{"title": "Vertex AI - Choose a virtual machine image", "url": "https://cloud.google.com/vertex-ai/docs/workbench/user-managed/images", "abstract": "# Vertex AI - Choose a virtual machine image\n# Choose a virtual machine image\nVertex AI Workbench user-managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  user-managed notebooks will end and the ability to create user-managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your user-managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/user-managed/migrate-to-instances) .\nUser-managed notebooks instances are [Deep Learning VM Images](/deep-learning-vm/docs/introduction) instances with JupyterLab notebook environments that are enabled and ready to use. Specific user-managed notebooks images are available to suit your choice of framework and processor. To find the image that you want, see the following table.\n", "content": "## Decide on an image family\nTo ensure that your instance uses a supported image family, create an instance by referencing an image family with `-notebooks` in the name. The following table lists the default versions of image families, organized by framework type. If you need a specific framework version that isn't shown here, see [Supported framework versions](#supported-frameworks) .\n| Framework    | Processor   | Image family names                   |\n|:----------------------|:-------------------|:--------------------------------------------------------------------------------------------|\n| Base     | GPU    | common-cu110-notebooks common-cu113-notebooks common-cu118-notebooks common-cu121-notebooks |\n| Base     | CPU    | common-cpu-notebooks                  |\n| TensorFlow Enterprise | GPU    | tf-ent-2-13-cu113-notebooks                 |\n| PyTorch    | GPU    | pytorch-2-2-cu121-notebooks                 |\n| R      | CPU (experimental) | r-4-1-cpu-experimental-notebooks               |\n### Choose an operating system\nDebian 11 is the default OS for most frameworks. Ubuntu 20.04 images are available for some frameworks. Ubuntu 20.04 images are denoted by the `-ubuntu-2004` suffixes in the image family name (see [List all availableversions](#listing-versions) ). Debian 10 and Debian 9 images are deprecated.\nPyTorch and TensorFlow Enterprise image families support A100 GPU accelerators.\n### TensorFlow Enterprise images\nTensorFlow Enterprise image families provide a Google Cloud optimized distribution of TensorFlow. For more information about TensorFlow Enterprise including which versions are supported, see [TensorFlow Enterprise overview](/tensorflow-enterprise/docs/overview) .\n### Experimental images\nThe [table of image families](#deciding) shows the user-managed notebooks image families that are experimental. Experimental images are supported on a best-effort basis and might not receive refreshes on each new release of the framework.\n## Specify an image version\nWhen you use an to create a user-managed notebooks instance, you get the most recent image of that version of the framework. For example, if you create a user-managed notebooks instance based on the family name `tf-ent-2-13-cu113-notebooks` , the specific image name might look like `tf-ent-2-13-cu113-notebooks-v20230716` .\nTo create multiple user-managed notebooks instances based on the exact same image, use the instead of the image family name.\nTo determine the exact name of the most recent image, run the following command by using the [Google Cloud CLI](/sdk/gcloud) in your preferred terminal or in [Cloud Shell](/shell/docs/using-cloud-shell) . Replace with the image family name for which you want the most recent version number.\n```\ngcloud compute images describe-from-family IMAGE_FAMILY \\\n --project deeplearning-platform-release\n```\nIn the output, look for the `name` field, and use that image name when you create instances.\n## Supported framework versions\nVertex AI supports each framework version based on a schedule to minimize security vulnerabilities. Review the [Vertex AI frameworksupport policy](/vertex-ai/docs/framework-support-policy) to understand the implications of the end-of-support and end-of-availability dates.\nIf you need a specific framework or CUDA version, see the following tables. To find a specific `` for an image, see [Listing the availableversions](/vertex-ai/docs/workbench/user-managed/images#listing-versions) .\n### Base versions\n| ML framework version    | Current patch version | Supported accelerators | End of patch and support date | End of availability date | Image family name       |\n|:-----------------------------------|:------------------------|:-------------------------|:--------------------------------|:---------------------------|:------------------------------------------|\n| Base-CPU (Python 3.10 / Debian 11) | Not applicable (N/A) | CPU only     | Jul 1, 2024      | Jul 1, 2025    | common-cpu-VERSION_DATE-debian-11   |\n| Base-cu121 (Python 3.10)   | CUDA 12.1    | GPU (CUDA 12.1)   | Feb 28, 2024     | Feb 28, 2025    | common-cu121-VERSION_DATE-debian-11-py310 |\n| Base-cu118 (Python 3.10)   | CUDA 11.8    | GPU (CUDA 11.8)   | >Jul 1, 2024     | >Jul 1, 2025    | common-cu118-VERSION_DATE-debian-11-py310 |\n| Base-cu113 (Python 3.10)   | CUDA 11.3    | GPU (CUDA 11.3)   | Jan 1, 2024      | Jan 1, 2025    | common-cu113-VERSION_DATE-debian-11-py310 |\n| Base-cu113 (Python 3.7)   | CUDA 11.3    | GPU (CUDA 11.3)   | Sep 18, 2023     | Sep 18, 2024    | common-cu113-VERSION_DATE-py37   |\n| Base-cu110 (Python 3.7)   | CUDA 11.0    | GPU (CUDA 11.0)   | Sep 18, 2023     | Sep 18, 2024    | common-cu110-VERSION_DATE-py37   |\n| Base-CPU (Python 3.7)    | Not applicable (N/A) | CPU only     | Sep 18, 2023     | Sep 18, 2024    | common-cpu-VERSION_DATE-debian-10   |\n### TensorFlow versions\n| ML framework version | Current patch version | Supported accelerators | End of patch and support date | End of availability date | Image family name    |\n|:-----------------------|:------------------------|:-------------------------|:--------------------------------|:---------------------------|:---------------------------------|\n| 2.15 (Python 3.10)  | 2.15.0     | CPU only     | Nov 14, 2024     | Nov 14, 2025    | tf-2-15-cpu-VERSION_DATE-py310 |\n| 2.15 (Python 3.10)  | 2.15.0     | GPU (CUDA 12.1)   | Nov 14, 2024     | Nov 14, 2025    | tf-2-15-cu121-VERSION_DATE-py310 |\n| 2.14 (Python 3.10)  | 2.14.0     | CPU only     | Sep 26, 2024     | Sep 26, 2025    | tf-2-14-cpu-VERSION_DATE-py310 |\n| 2.14 (Python 3.10)  | 2.14.0     | GPU (CUDA 11.8)   | Sep 26, 2024     | Sep 26, 2025    | tf-2-14-cu118-VERSION_DATE-py310 |\n| 2.13 (Python 3.10)  | 2.13.0     | CPU only     | Jul 5, 2024      | Jul 5, 2025    | tf-2-13-cpu-VERSION_DATE-py310 |\n| 2.13 (Python 3.10)  | 2.13.0     | GPU (CUDA 11.8)   | Jul 5, 2024      | Jul 5, 2025    | tf-2-13-cu118-VERSION_DATE-py310 |\n| 2.12 (Python 3.10)  | 2.12.0     | CPU only     | June 30, 2024     | June 30, 2025    | tf-2-12-cpu-VERSION_DATE-py310 |\n| 2.12 (Python 3.10)  | 2.12.0     | GPU (CUDA 11.8)   | Jan 18, 2024     | Jan 18, 2025    | tf-2-12-cu113-VERSION_DATE-py310 |\n| 2.11 (Python 3.10)  | 2.11.0     | CPU only     | Nov 15, 2023     | Nov 15, 2024    | tf-2-11-cpu-VERSION_DATE-py310 |\n| 2.11 (Python 3.10)  | 2.11.0     | GPU (CUDA 11.3)   | Nov 15, 2023     | Nov 15, 2024    | tf-2-11-cu113-VERSION_DATE-py310 |\n| 2.11     | 2.11.0     | CPU only     | Nov 15, 2023     | Nov 15, 2024    | tf-2-11-cpu-VERSION_DATE-py37 |\n| 2.11     | 2.11.0     | GPU (CUDA 11.3)   | Nov 15, 2023     | Nov 15, 2024    | tf-2-11-cu113-VERSION_DATE-py37 |\n| 2.10     | 2.10.1     | CPU only     | Nov 15, 2023     | Nov 15, 2024    | tf-2-10-cpu-VERSION_DATE-py37 |\n| 2.10     | 2.10.1     | GPU (CUDA 11.3)   | Nov 15, 2023     | Nov 15, 2024    | tf-2-10-cu113-VERSION_DATE-py37 |\n| 2.9     | 2.9.3     | CPU only     | Nov 15, 2023     | Nov 15, 2024    | tf-2-9-cpu-VERSION_DATE-py37  |\n| 2.9     | 2.9.3     | GPU (CUDA 11.3)   | Nov 15, 2023     | Nov 15, 2024    | tf-2-9-cu113-VERSION_DATE-py37 |\n| 2.8     | 2.8.4     | CPU only     | Nov 15, 2023     | Nov 15, 2024    | tf-2-8-cpu-VERSION_DATE-py37  |\n| 2.8     | 2.8.4     | GPU (CUDA 11.3)   | Nov 15, 2023     | Nov 15, 2024    | tf-2-8-cu113-VERSION_DATE-py37 |\n| 2.6 (py39)    | 2.6.5     | CPU only     | Aug 10, 2024     | Aug 10, 2025    | tf-2-6-cpu-VERSION_DATE-py39  |\n| 2.6 (py39)    | 2.6.5     | GPU (CUDA 11.3)   | Aug 10, 2024     | Aug 10, 2025    | tf-2-6-cu110-VERSION_DATE-py39 |\n| 2.6 (py37)    | 2.6.5     | CPU only     | Sep 18, 2023     | Sep 18, 2024    | tf-2-6-cpu-VERSION_DATE-py37  |\n| 2.6 (py37)    | 2.6.5     | GPU (CUDA 11.3)   | Sep 18, 2023     | Sep 18, 2024    | tf-2-6-cu110-VERSION_DATE-py37 |\n| 2.3     | 2.3.4     | CPU only     | Sep 1, 2023      | Sep 1, 2024    | tf-2-3-cpu      |\n| 2.3     | 2.3.4     | GPU (CUDA 11.3)   | Sep 1, 2023      | Sep 1, 2024    | tf-2-3-cu110-VERSION_DATE  |\n### PyTorch versions\n| ML framework version | Current patch version | Supported accelerators | End of patch and support date | End of availability date | Image family name    |\n|:-----------------------|:------------------------|:-------------------------|:--------------------------------|:---------------------------|:--------------------------------|\n| 2.2 (Python 3.10)  | 2.2.0     | CUDA 12.1    | Jan 30, 2025     | Jan 30, 2026    | pytorch-2-2-VERSION_DATE-py310 |\n| 2.1 (Python 3.10)  | 2.1.0     | CUDA 12.1    | Oct 4, 2024      | Oct 4, 2025    | pytorch-2-1-VERSION_DATE-py310 |\n| 2.0 (Python 3.10)  | 2.0.0     | CUDA 11.8    | Mar 15, 2024     | Mar 15, 2025    | pytorch-2-0-VERSION_DATE-py310 |\n| 1.13 (Python 3.10)  | 1.13.1     | CUDA 11.3    | Dec 8, 2023      | Dec 8, 2024    | pytorch-1-13-VERSION_DATE-py310 |\n| 1.13     | 1.13.1     | CUDA 11.3    | Dec 8, 2023      | Dec 8, 2024    | pytorch-1-13-VERSION_DATE-py37 |\n| 1.12     | 1.12.1     | CUDA 11.3    | Sep 1, 2023      | Sep 1, 2024    | pytorch-1-12-VERSION_DATE-py310 |\n## List all available versions using gcloud CLI\nYou can also list all available Vertex AI images using the following [gcloud CLI](/sdk/gcloud) command:\n```\ngcloud compute images list \\\n --project deeplearning-platform-release | grep notebooks\n```\nImage family names are listed in the following format:\n`` `-` `` `-` `` `(-experimental)-notebooks`\n- ``: the target library\n- ``: the framework version\n- ``: the version of the CUDA stack, if present.\nFor example, an image from the family `tf-ent-2-13-cu113-notebooks` has TensorFlow Enterprise 2.13 and CUDA 11.3.\n## What's next\n- Use the Google Cloud console to [Create a user-managed notebooks instance withdefault properties](/vertex-ai/docs/workbench/user-managed/create-new#create_a_instance_with_default_properties) \n- Use the Google Cloud CLI to [Create a user-managed notebooks instance](/vertex-ai/docs/workbench/user-managed/create-new#create-command-line) \n- Learn more about [Deep Learning VM](/deep-learning-vm/docs) instances", "guide": "Vertex AI"}