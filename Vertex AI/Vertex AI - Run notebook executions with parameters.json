{"title": "Vertex AI - Run notebook executions with parameters", "url": "https://cloud.google.com/vertex-ai/docs/workbench/managed/executor-parameters", "abstract": "# Vertex AI - Run notebook executions with parameters\n# Run notebook executions with parameters\nVertex AI Workbench managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  managed notebooks will end and the ability to create managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/managed/migrate-to-instances) .\nVertex AI Workbench managed notebooks instances let you use parameter values in your notebook executions to specify differences in how your notebook file's code runs. This page describes how to set up your notebook file to use parameters and how to run executions that specify different values for your notebook parameters.\n", "content": "## Use parameters to run different iterations of your notebook file\nYou can use notebook parameter values in your executions to run the same notebook code while specifying differences like the following:\n- Specify a different dataset to use, or a different sample size of the dataset.\n- Specify different model configurations such as learning rate or optimizer type.\n- Run different models, or run different versions of the same model.## How to use parameters in a notebook execution\nThe process for executing a notebook with parameters has two main steps:\n- [Add the parameters tag to one of your notebook file's cells](#add-tag) . While this isn't a technical requirement, this cell typically contains code that assigns values to your parameter variables, though this is not a technical requirement. If you don't assign different parameter values in your execution, the execution uses the parameter values in your notebook file as default values.\n- [Create an execution for your notebook file that includesnew values for your parameters](#provide-values) . Use the following pattern to format your parameters and their values: `parameter1=value1,parameter2=value2` . The format requires commas between parameter-value pairs, no spaces, and no quotation marks. When your execution runs, the executor adds a cell to the notebook that updates the values of your parameters directly following the cell that is tagged `parameters` .## Before you begin\n- If you haven't already, [create a managed notebooks instance](/vertex-ai/docs/workbench/managed/create-instance#create) .\n### Required roles\nTo ensure that your instance's service account has the necessary  permissions to interact with the Vertex AI Workbench executor,   ask your administrator to grant your instance's service account the  following IAM roles on the project:\n- Notebooks Viewer ( [roles/notebooks.viewer](/vertex-ai/docs/workbench/instances/iam#notebooks.viewer) )\n- Vertex AI User ( [roles/aiplatform.user](/vertex-ai/docs/general/access-control#aiplatform.user) )\n- Storage Admin ( [roles/storage.admin](/storage/docs/access-control/iam-roles#standard-roles) )\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYour administrator might also be able to give your instance's service account  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .\n## Open JupyterLab\nTo open JupyterLab and prepare a notebook file to run, complete the following steps.\n- [Open JupyterLab](/vertex-ai/docs/workbench/managed/create-managed-notebooks-instance-console-quickstart#open-jupyterlab) .\n- Upload a notebook (ipynb) file, open an existing file, or [open a new notebookfile](/vertex-ai/docs/workbench/managed/create-managed-notebooks-instance-console-quickstart#open-a-new-notebook-file) and add the code that you want to run to the new notebook.\n- Make sure your notebook file's code meets the [requirementsfor using the executor](/vertex-ai/docs/workbench/managed/executor#requirements) .## Add the parameters tag to a notebook cell\n- In your managed notebooks instance's JupyterLab user interface, open the notebook file that you want to run.\n- Write code in one cell that assigns values to your parameter variables. These are the values your notebook file uses if you don't assign different parameter values in your execution.\n- Make sure your parameters cell is still selected, and then in the right sidebar, click the **Property inspector** .\n- In the property inspector, in the **Cell Tags** section, click **Add Tag** , enter `parameters` , and then press `Enter` . **Note:** If you tag more than one cell with `parameters` , the executor adds only one parameters cell directly following the first cell with the `parameters` tag.## Provide parameter values for your execution\n- In your managed notebooks instance's JupyterLab user interface, click the **Executor** button.\n- In the **Submit notebooks to Executor** dialog, enter a name for your execution in the **Execution name** field.\n- Select a **Machine type** and **Accelerator type** .\n- Select an **Environment** .\n- In the **Type** field, select **One-time execution** , or select **Schedule-based recurring executions** , and complete the dialog for scheduling executions.\n- In **Advanced options** , select the **Region** where you want to run your notebook.\n- In the **Cloud Storage bucket** field, select an available Cloud Storage bucket or enter a name for a new bucket and click **Create and select** . The executor stores your notebook output in this Cloud Storage bucket.\n- In the **Notebook parameterization** section and the **Input parameters** text box, add notebook parameters separated by commas, for example `optimizer=SGD,learning_rate=0.01` . The format requires that there are no spaces and no quotation marks.\n- Configure the rest of your execution, and then click **Submit** .## Notebook\nTo see an example of how to use parameters in a notebook execution as part of a more comprehensive workflow,  run the \"Train a multi-class classification model for ads-targeting\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/workbench/ads_targetting/training-multi-class-classification-model-for-ads-targeting-usecase.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fworkbench%2Fads_targetting%2Ftraining-multi-class-classification-model-for-ads-targeting-usecase.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/workbench/ads_targetting/training-multi-class-classification-model-for-ads-targeting-usecase.ipynb)\n## What's next\n- Learn more about [how to run notebook code inthe executor](/vertex-ai/docs/workbench/managed/executor) .", "guide": "Vertex AI"}