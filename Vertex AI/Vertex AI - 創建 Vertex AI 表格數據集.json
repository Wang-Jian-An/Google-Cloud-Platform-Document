{"title": "Vertex AI - \u5275\u5efa Vertex AI \u8868\u683c\u6578\u64da\u96c6", "url": "https://cloud.google.com/vertex-ai/docs/tutorials/tabular-bq-prediction/create-dataset?hl=zh-cn", "abstract": "# Vertex AI - \u5275\u5efa Vertex AI \u8868\u683c\u6578\u64da\u96c6\n- `island`- \u767c\u73fe\u67d0\u500b\u4f01\u9d5d\u7269\u7a2e\u7684\u5cf6\u5dbc\u3002\n- `culmen_length_mm`- \u4f01\u9d5d\u5599\u9802\u90e8\u810a\u7684\u9577\u5ea6\u3002\n- `culmen_depth_mm`- \u4f01\u9d5d\u5599\u7684\u9ad8\u5ea6\u3002\n- `flipper_length_mm`- \u4f01\u9d5d\u9c2d\u72c0\u7fc5\u8180\u7684\u9577\u5ea6\u3002\n- `body_mass_g`- \u4f01\u9d5d\u7684\u9ad4\u91cd\u3002\n- `sex`- \u4f01\u9d5d\u7684\u6027\u5225\u3002", "content": "## \u4e0b\u8f09\u3001\u9810\u8655\u7406\u548c\u62c6\u5206\u6578\u64da\n\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u4e0b\u8f09\u516c\u958b\u63d0\u4f9b\u7684 BigQuery \u6578\u64da\u96c6\u4e26\u6e96\u5099\u5176\u6578\u64da\u3002\u5982\u9700\u6e96\u5099\u6578\u64da\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u5c07\u5206\u985e\u7279\u5fb5\uff08\u4f7f\u7528\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u6578\u5b57\u4f86\u63cf\u8ff0\u7684\u7279\u5fb5\uff09\u8f49\u63db\u7232\u6578\u5b57\u6578\u64da\u3002\u4f8b\u5982\uff0c\u5c07\u4e09\u7a2e\u4f01\u9d5d\u985e\u578b\u7684\u540d\u7a31\u8f49\u63db\u7232\u6578\u503c `0` \u3001 `1` \u548c `2` \u3002\n- \u79fb\u9664\u6578\u64da\u96c6\u4e2d\u672a\u4f7f\u7528\u7684\u6240\u6709\u5217\u3002\n- \u79fb\u9664\u6240\u6709\u7121\u6cd5\u4f7f\u7528\u7684\u884c\u3002\n- \u5c07\u6578\u64da\u62c6\u5206\u7232\u5169\u7d44\u4e0d\u540c\u7684\u6578\u64da\u3002\u6bcf\u7d44\u6578\u64da\u90fd\u5b58\u5132\u5728\u4e00\u500b [\u718a\u8c93 DataFrame](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html) \u5c0d\u8c61\u4e2d\u3002- `df_train` `DataFrame` \u5305\u542b\u7528\u65bc\u8a13\u7df4\u6a21\u578b\u7684\u6578\u64da\u3002\n- `df_for_prediction` `DataFrame` \u5305\u542b\u7528\u65bc\u751f\u6210\u9810\u6e2c\u7684\u6578\u64da\u3002\u8655\u7406\u5b8c\u6578\u64da\u5f8c\uff0c\u4ee3\u78bc\u6703\u5c07\u4e09\u500b\u5206\u985e\u5217\u7684\u6578\u503c\u6620\u5c04\u5230\u5176\u5b57\u7b26\u4e32\u503c\uff0c\u7136\u5f8c\u8f38\u51fa\u9019\u4e9b\u503c\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u67e5\u770b\u6578\u64da\u7684\u5f62\u5f0f\u3002\n\u5982\u9700\u4e0b\u8f09\u548c\u8655\u7406\u6578\u64da\uff0c\u8acb\u5728\u7b46\u8a18\u672c\u4e2d\u904b\u884c\u4ee5\u4e0b\u4ee3\u78bc\uff1a\n```\nimport numpy as npimport pandas as pdLABEL_COLUMN = \"species\"# Define the BigQuery source datasetBQ_SOURCE = \"bigquery-public-data.ml_datasets.penguins\"# Define NA valuesNA_VALUES = [\"NA\", \".\"]# Download a tabletable = bq_client.get_table(BQ_SOURCE)df = bq_client.list_rows(table).to_dataframe()# Drop unusable rowsdf = df.replace(to_replace=NA_VALUES, value=np.NaN).dropna()# Convert categorical columns to numericdf[\"island\"], island_values = pd.factorize(df[\"island\"])df[\"species\"], species_values = pd.factorize(df[\"species\"])df[\"sex\"], sex_values = pd.factorize(df[\"sex\"])# Split into a training and holdout datasetdf_train = df.sample(frac=0.8, random_state=100)df_for_prediction = df[~df.index.isin(df_train.index)]# Map numeric values to string valuesindex_to_island = dict(enumerate(island_values))index_to_species = dict(enumerate(species_values))index_to_sex = dict(enumerate(sex_values))# View the mapped island, species, and sex dataprint(index_to_island)print(index_to_species)print(index_to_sex)\n```\n\u4ee5\u4e0b\u662f\u91dd\u5c0d\u975e\u6578\u5b57\u7279\u5fb5\u8f38\u51fa\u7684\u6620\u5c04\u503c\uff1a\n```\n{0: 'Dream', 1: 'Biscoe', 2: 'Torgersen'}\n{0: 'Adelie Penguin (Pygoscelis adeliae)', 1: 'Chinstrap penguin (Pygoscelis antarctica)', 2: 'Gentoo penguin (Pygoscelis papua)'}\n{0: 'FEMALE', 1: 'MALE'}\n```\n\u524d\u4e09\u500b\u503c\u662f\u4f01\u9d5d\u5c45\u4f4f\u7684\u5cf6\u5dbc\u3002\u63a5\u4e0b\u4f86\u7684\u4e09\u500b\u503c\u5f88\u91cd\u8981\uff0c\u56e0\u7232\u5b83\u5011\u6620\u5c04\u5230\u60a8\u5728\u672c\u6559\u7a0b\u7d50\u675f\u6642\u6536\u5230\u7684\u9810\u6e2c\u3002\u7b2c\u4e09\u884c\u986f\u793a `FEMALE` \u6027\u5225\u7279\u5fb5\u6620\u5c04\u5230 `0` \uff0c\u800c `MALE` \u6027\u5225\u7279\u5fb5\u6620\u5c04\u5230 `1` \u3002\n## \u5275\u5efa\u7528\u65bc\u8a13\u7df4\u6a21\u578b\u7684\u8868\u683c\u6578\u64da\u96c6\n\u5728\u4e0a\u4e00\u6b65\uff0c\u60a8\u4e0b\u8f09\u4e26\u8655\u7406\u4e86\u6578\u64da\u3002\u5728\u6b64\u6b65\u9a5f\u4e2d\uff0c\u60a8\u9700\u8981\u5c07\u5b58\u5132\u5728 `df_train` `DataFrame` \u4e2d\u7684\u6578\u64da\u52a0\u8f09\u5230 BigQuery \u6578\u64da\u96c6\u4e2d\u3002\u7136\u5f8c\uff0c\u4f7f\u7528 BigQuery \u6578\u64da\u96c6\u5275\u5efa Vertex AI \u8868\u683c\u6578\u64da\u96c6\u3002\u6b64\u8868\u683c\u6578\u64da\u96c6\u7528\u65bc\u8a13\u7df4\u6a21\u578b\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528\u8a17\u7ba1\u5f0f\u6578\u64da\u96c6](https://cloud.google.com/vertex-ai/docs/training/using-managed-datasets?hl=zh-cn) \u3002\n### \u5275\u5efa BigQuery \u6578\u64da\u96c6\n\u5982\u9700\u5275\u5efa\u7528\u65bc\u5275\u5efa Vertex AI \u6578\u64da\u96c6\u7684 BigQuery \u6578\u64da\u96c6\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u4ee3\u78bc\u3002 [create_dataset](https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client?hl=zh-cn#google_cloud_bigquery_client_Client_create_dataset) \u547d\u4ee4\u6703\u8fd4\u56de\u4e00\u500b\u65b0\u7684 BigQuery [DataSet](https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.dataset.Dataset?hl=zh-cn) \u3002\n```\n# Create a BigQuery datasetbq_dataset_id = f\"{project_id}.dataset_id_unique\"bq_dataset = bigquery.Dataset(bq_dataset_id)bq_client.create_dataset(bq_dataset, exists_ok=True)\n```\n### \u5275\u5efa Vertex AI \u8868\u683c\u6578\u64da\u96c6\n\u5982\u9700\u5c07 BigQuery \u6578\u64da\u96c6\u8f49\u63db\u7232 Vertex AI \u8868\u683c\u6578\u64da\u96c6\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u4ee3\u78bc\u3002\u60a8\u53ef\u4ee5\u5ffd\u7565\u6709\u95dc\u4f7f\u7528\u8868\u683c\u6578\u64da\u8a13\u7df4\u6240\u9700\u884c\u6578\u7684\u8b66\u544a\u3002\u7531\u65bc\u672c\u6559\u7a0b\u7684\u76ee\u7684\u662f\u5feb\u901f\u5411\u60a8\u5c55\u793a\u5982\u4f55\u7372\u53d6\u9810\u6e2c\u7d50\u679c\uff0c\u56e0\u6b64\u4f7f\u7528\u76f8\u5c0d\u8f03\u5c11\u7684\u6578\u64da\u96c6\u4f86\u5411\u60a8\u5c55\u793a\u5982\u4f55\u751f\u6210\u9810\u6e2c\u3002\u5728\u5be6\u969b\u4f7f\u7528\u5834\u666f\u4e2d\uff0c\u8868\u683c\u6578\u64da\u96c6\u4e2d\u81f3\u5c11\u8981\u6709 1000 \u884c\u3002 [create_from_dataframe](https://cloud.google.com/python/docs/reference/aiplatform/latest/google.cloud.aiplatform.TabularDataset?hl=zh-cn#google_cloud_aiplatform_TabularDataset_create_from_dataframe) \u547d\u4ee4\u6703\u8fd4\u56de Vertex AI [TabularDataset](https://cloud.google.com/python/docs/reference/aiplatform/latest/google.cloud.aiplatform.TabularDataset?hl=zh-cn#google_cloud_aiplatform_TabularDataset) \u3002\n```\n# Create a Vertex AI tabular datasetdataset = aiplatform.TabularDataset.create_from_dataframe(\u00a0 \u00a0 df_source=df_train,\u00a0 \u00a0 staging_path=f\"bq://{bq_dataset_id}.table-unique\",\u00a0 \u00a0 display_name=\"sample-penguins\",)\n```\n\u73fe\u5728\uff0c\u60a8\u5df2\u64c1\u6709\u7528\u65bc\u8a13\u7df4\u6a21\u578b\u7684 Vertex AI \u8868\u683c\u6578\u64da\u96c6\u3002\n## \uff08\u53ef\u9078\uff09\u5728 BigQuery \u4e2d\u67e5\u770b\u516c\u5171\u6578\u64da\u96c6\n\u5982\u679c\u8981\u67e5\u770b\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u516c\u5171\u6578\u64da\uff0c\u53ef\u4ee5\u5728 BigQuery \u4e2d\u6253\u958b\u9019\u4e9b\u6578\u64da\u3002\n- \u5728 Google Cloud \u7684 **\u641c\u7d22** \u4e2d\uff0c\u8f38\u5165 BigQuery\uff0c\u7136\u5f8c\u6309\u56de\u8eca\u9375\u3002\n- \u5728\u641c\u7d22\u7d50\u679c\u4e2d\uff0c\u9ede\u64ca BigQuery\n- \u5728 **\u63a2\u7d22\u5668** \u7a97\u53e3\u4e2d\uff0c\u5c55\u958b **bigquery-public-data** \u3002\n- \u5728 **bigquery-public-data** \u4e0b\uff0c\u5c55\u958b **ml_datasets** \uff0c\u7136\u5f8c\u9ede\u64ca **\u4f01\u9d5d** \u3002\n- \u9ede\u64ca **\u5b57\u6bb5\u540d\u7a31** \u4e0b\u7684\u4efb\u610f\u540d\u7a31\u4ee5\u67e5\u770b\u8a72\u5b57\u6bb5\u7684\u6578\u64da\u3002", "guide": "Vertex AI"}