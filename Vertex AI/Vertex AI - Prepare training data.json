{"title": "Vertex AI - Prepare training data", "url": "https://cloud.google.com/vertex-ai/docs/tabular-data/forecasting/prepare-data", "abstract": "# Vertex AI - Prepare training data\nThe following topics are covered:\n- [Data structure requirements](#data-structure) \n- [Prepare your import source](#import-source) \n- [Add weights to your training data](#weight) \nBy default, Vertex AI uses a [chronological split](/vertex-ai/docs/tabular-data/data-splits#forecasting-default) algorithm to separate your forecasting data into three data splits. Alternatively, you can use a [manual split](/vertex-ai/docs/tabular-data/data-splits#forecasting-manual) , but this requires you to prepare a data split column. [Learn more](/vertex-ai/docs/tabular-data/data-splits) about data splits.\n", "content": "## Data structure requirements\nFor forecasting models, your training data must conform to the following basic requirements:\n| Requirement Type    | Requirement                                                                                                                                                                                              |\n|:------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Size       | The dataset must be 100 GB or smaller.                                                                                                                                                                                       |\n| # of columns     | The dataset must have at least 3 and no more than 100 columns. Each of the observations in the dataset must have a target and a time, both of which act as features. Furthermore, each observation must have a time series ID, which identifies the time series that the observation is part of. Ideally, your training data has many more than 3 columns. The maximum number of columns includes both feature and non-feature columns.                                                                                       |\n| Target column     | You must specify a target column. The target column lets Vertex AI associate the training data with the desired result. It must not contain null values and must be Numerical.                                                                                                                                                     |\n| Time column     | You must specify a time column and it must have a value for every row. The time column indicates the time at which a given observation was made.                                                                                                                                                             |\n| Time series identifier column | You must specify a time series identifier column and it must have a value for every row. Forecasting training data usually includes multiple time series, and the identifier tells Vertex AI which time series a given observation in the training data is part of. All of the rows in a given time series have the same value in the time series identifier column. Some common time series identifiers might be the product ID, a store ID, or a region. It is possible to train a forecasting model on a single time series, with an identical value for all rows in the time series identifier column. However, Vertex AI is a better fit for training data that contains two or more time series. For best results, use at least 10 time series for every column you use to train the model. |\n| Column name format   | The column name can include any alphanumeric character or an underscore (_). The column name cannot begin with an underscore.                                                                                                                                                                  |\n| # of rows      | The dataset must have at least 1,000 and no more than 100,000,000 rows. Depending on how many features your dataset has, 1,000 rows might not be enough to train a high-performing model. Learn more.                                                                                                                                                |\n| Data format     | Use narrow (sometimes called long) data format. In narrow format, each row represents the item specified by the time series identifier for a specific point in time, along with all of the data for that item at that point in time. Learn how to choose the data format.                                                                                                                               |\n| Interval between rows   | The interval between your training rows must be consistent. This is your data granularity; it will affect how the model is trained and the frequency of prediction results. Learn how to choose the data granularity.                                                                                                                                            |\n| Time series length   | The length of a time series must not exceed 3000 time steps.                                                                                                                                                                                  |\n## Prepare your import source\nYou can provide model training data to Vertex AI in two formats:\n- BigQuery tables\n- Comma-separated values (CSV)\nWhich source you use depends on how your data is stored, and the size and complexity of your data. If your dataset is small, and you don't need more complex data types, CSV might be easier. For larger datasets that include arrays and structs, you must use BigQuery.\nYour BigQuery table or view must conform to the [BigQuery location requirements](/vertex-ai/docs/general/locations#bq-locations) .\nIf your BigQuery table or view is in a different project than the project where you are creating your Vertex AI dataset, or your BigQuery table or view is backed by an external data source, you might need to add one or more roles to the Vertex AI Service Agent. See [Role addition requirements for BigQuery](/vertex-ai/docs/general/access-control#bq-roles) .\nYou do not need to specify a schema for your BigQuery table. Vertex AI automatically infers the schema for your table when you import your data.\nYour BigQuery uri (specifying the location of your training data) must conform to the following format:\n```\nbq://<project_id>.<dataset_id>.<table_id>\n```\nThe uri cannot contain any other special characters.\nFor information about BigQuery data types and how they map into Vertex AI, see [BigQuery tables](/vertex-ai/docs/datasets/data-types-tabular#bq) . For more information about using BigQuery external data sources, see [Introduction to external data sources](/bigquery/external-data-sources) .\nCSV files can be in Cloud Storage, or on your local computer. They must conform to the following requirements:- The first line of the first file must be a header, containing the names of the columns. If the first row of a subsequent file is the same as the header, then it is also treated as a header, otherwise it will be treated as data.\n- Column names can include any alphanumeric character or an underscore (_). The column name cannot begin with an underscore.\n- Each file must not be larger than 10 GB.You can include multiple files, up to a maximum amount of 100 GB.\n- The delimiter must be a comma (\",\").\nYou do not need to specify a schema for your CSV data. Vertex AI automatically infers the schema for your table when you import your data, and uses the header row for column names.\nFor more information about CSV file format and data types, see [CSV files](/vertex-ai/docs/datasets/data-types-tabular#csv) .\nIf you are importing your data from Cloud Storage, it must be in a bucket that meets the following requirements:- It conforms to the [Vertex AI bucket requirements](/vertex-ai/docs/general/locations#buckets) .\n- If the bucket is not in the same project as Vertex AI, you need to add one or more roles to the Vertex AI Service Agent. See [Role addition requirements for Cloud Storage](/vertex-ai/docs/general/access-control#storage-roles) .\nIf you are importing your data from your local computer, you must have a Cloud Storage bucket that meets the following requirements:- It conforms to the [Vertex AI bucket requirements](/vertex-ai/docs/general/locations#buckets) .\n- If the bucket is not in the same project as Vertex AI, you need to add one or more roles to the Vertex AI Service Agent. See [Role addition requirements for Cloud Storage](/vertex-ai/docs/general/access-control#storage-roles) .Vertex AI uses this bucket as a staging area before importing your data.## Add weights to your training data\nBy default, Vertex AI weighs each row of your training data equally. For training purposes, no row is considered more important than another.\nSometimes, you might want some rows to have more importance for training. For example, if you are using spending data, you might want the data associated with higher spenders to have a larger impact on the model. If missing a specific outcome is something you particularly want to avoid, then you can weight rows with that outcome more heavily.\nYou give rows a relative weight by adding a weight column to your dataset. The weight column must be a numeric column. The weight value can be 0\u201110,000. Higher values indicate that the row is more important when training the model. A weight of 0 causes the row to be ignored. If you include a weight column, it must contain a value for every row.\nLater, when you train your model, you specify this column as the `Weight` column.\nCustom weighting schemes are used only for training the model; they do not affect the test set used for model evaluation.\n## What's next\n- [Create your dataset](/vertex-ai/docs/tabular-data/forecasting/create-dataset) .\n- Learn about [best practices for creating tabular training data](/vertex-ai/docs/tabular-data/bp-tabular) .\n- Learn how [Vertex AI works with different types of tabular data](/vertex-ai/docs/datasets/data-types-tabular) .", "guide": "Vertex AI"}