{"title": "Vertex AI - Schedule a notebook run", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Schedule a notebook run\n# Schedule a notebook run\nThis page shows you how to use the Vertex AI Workbench executor to run a Python notebook file on an hourly schedule.", "content": "## Before you begin\n### Required rolesTo ensure that your instance's service account has the necessary  permissions to interact with the Vertex AI Workbench executor,   ask your administrator to grant your instance's service account the   Notebooks Viewer ( [roles/notebooks.viewer](/vertex-ai/docs/workbench/instances/iam#notebooks.viewer) ) IAM role on the project.    For more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nThis predefined role contains     the permissions required to interact with the Vertex AI Workbench executor. To see the exact permissions that are   required, expand the **Required permissions** section:Your administrator might also be able to give your instance's service account   these permissions  with [custom roles](/iam/docs/creating-custom-roles) or  other [predefined roles](/iam/docs/understanding-roles) .## Create an instance and example notebook file\n- [Create aninstance](/vertex-ai/docs/workbench/instances/create-console-quickstart#create-instance) .\n- [Open JupyterLab](/vertex-ai/docs/workbench/instances/create-console-quickstart#open-jupyterlab) .\n- [Open a new notebook file](/vertex-ai/docs/workbench/instances/create-console-quickstart#open-a-new-notebook-file) .\n- In the first cell of the notebook file, enter the following:```\n# Import datetime\nimport datetime\n# Get the time and print it\ndatetime.datetime.now()\nprint(datetime.datetime.now())\n```\n- To make sure your notebook file is saved, select **File\u00a0> Save Notebook** .\n## Schedule a run\n- In the Google Cloud console, go to the **Instances** page. [Go to Instances](https://console.cloud.google.com/vertex-ai/workbench/instances) \n- Next to your instance's name, click **Open JupyterLab** .Your Vertex AI Workbench instance opens JupyterLab.\n- In the folder **File Browser** , double-click the example notebook file to open it.\n- Click the **Execute** button.\n- In the **Submit notebooks to Executor** dialog, in the **Type** field, select **Schedule-based recurring executions** .By default, the executor runs your notebook file every hour at the `00` minute of the hour.\n- In **Advanced options** , enter a name for your bucket in the **Cloud Storage bucket** field, and then click **Create and select** . The executor stores your notebook output in the Cloud Storage bucket.\n- Click **Submit** .Your notebook file runs automatically on the schedule that you set.\n **Note:** If your instance is shut down, the executor still runs your notebook file on schedule.\nWhen you finish the tasks that are described in this document, you can avoid continued billing by deleting the resources that you created. For more information, see [Clean up](#clean-up) .## View, share, and import an executed notebook fileBy using your instance's JupyterLab interface, you can view your notebook output, share the results with others, and import the executed notebook file into JupyterLab.\n **Note:** To use the Google Cloud console to view and share execution results, on the [Executions](https://console.cloud.google.com/vertex-ai/workbench/executions) page, click **View result** .\n### View the execution results\n- In JupyterLab's navigation menu, click the **Notebook Executor** button.\n- Click the **Executions** tab.\n- Under the execution that you want to view, click **View result** .The executor opens your result in a new browser tab.\n### Share the execution results\n- In your instance's JupyterLab user interface, in the navigation menu, click the **Notebook Executor** button.\n- Click the **Executions** tab.\n- Next to the execution that you want to share, click the more_vert options menu, and select **Share execution result** .\n- Follow the directions in the dialog to grant users access to the execution result.\n### Import the executed notebook into JupyterLab\n- In your instance's JupyterLab user interface, in the navigation menu, click the **Notebook Executor** button.\n- Click the **Executions** tab.\n- Next to the execution that you want to import, click the more_vert options menu, and select **Import executed notebook** .\n- If the **Select Kernel** dialog appears, select the kernel that you want to open the notebook.The executor opens the executed notebook file in JupyterLab, and stores this notebook file in the JupyterLab File Browser in a folder named **imported_notebook_jobs** .\n## View or delete a scheduleYou can view and delete schedules by using either the Google Cloud console or your instance's JupyterLab user interface.\n### View a scheduleView a schedule to see the frequency settings of the schedule or to view the five most recent results of the notebook file execution.\n- In the Google Cloud console, go to the **Schedules** page. [Go to Schedules](https://console.cloud.google.com/vertex-ai/workbench/schedules) \n- For the schedule that you want to view, click its schedule name.On the **Schedule details** page, you can view the schedule's last five executions.\n- Next to an execution name, click **View result** to open the executed notebook file.The executor opens your result in a new browser tab.\n- In your instance's JupyterLab user interface, in the navigation menu, click the **Notebook Executor** button.\n- Click the **Schedules** tab.\n- Under the execution that you want to view, click **View latestexecution result** .The executor opens your result in a new browser tab.### Delete a scheduleDeleting a schedule doesn't delete the executions that were generated from that schedule.\n- In the Google Cloud console, go to the **Schedules** page. [Go to Schedules](https://console.cloud.google.com/vertex-ai/workbench/schedules) \n- Select the schedule that you want to delete.\n- Click delete **Delete** .\n- In your instance's JupyterLab user interface, in the navigation menu, click the **Notebook Executor** button.\n- Click the **Schedules** tab.\n- Click the schedule name. The **Schedule details** page for that schedule opens in the Google Cloud console.\n- Click delete **Delete** .\n## Clean upTo avoid incurring charges to your Google Cloud account for   the resources used on this page, follow these steps.\n### Delete the instance\n- In the Google Cloud console, go to the **Instances** page. [Go to Instances](https://console.cloud.google.com/vertex-ai/workbench/instances) \n- Select the instance that you want to delete.\n- Click delete **Delete** .\n### Delete the projectIf you used resources outside of your Vertex AI Workbench instance, such as the Cloud Storage bucket required for creating a schedule, you might want to delete your project to avoid incurring additional charges.- **Caution** : Deleting a project has the following effects:- **Everything in the project is deleted.** If you used an existing project for  the tasks in this document, when you delete it, you also delete any other work you've  done in the project.\n- **Custom project IDs are lost.** When you created this project, you might have created a custom project ID that you want to use in  the future. To preserve the URLs that use the project ID, such as an`appspot.com`URL, delete selected resources inside the project instead of deleting the whole project.\nIf you plan to explore multiple architectures, tutorials, or quickstarts, reusing projects  can help you avoid exceeding project quota limits.\n- In the Google Cloud console, go to the **Manage resources** page. [Go to Manage resources](https://console.cloud.google.com/iam-admin/projects) \n- In the project list, select the project that you  want to delete, and then click **Delete** .\n- In the dialog, type the project ID, and then click **Shut down** to delete the project.\n## What's nextTo see an example of how to schedule a notebooks run as part of a more comprehensive workflow,  run the \"Train a multi-class classification model for ads-targeting\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/workbench/ads_targetting/training-multi-class-classification-model-for-ads-targeting-usecase.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fworkbench%2Fads_targetting%2Ftraining-multi-class-classification-model-for-ads-targeting-usecase.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/workbench/ads_targetting/training-multi-class-classification-model-for-ads-targeting-usecase.ipynb)", "guide": "Vertex AI"}