{"title": "Vertex AI - \u7372\u53d6\u5ee3\u5ea6\u548c\u6df1\u5ea6\u5728\u7dda\u9810\u6e2c\u7d50\u679c", "url": "https://cloud.google.com/vertex-ai/docs/tabular-data/tabular-workflows/wide-and-deep-online-predictions?hl=zh-cn", "abstract": "# Vertex AI - \u7372\u53d6\u5ee3\u5ea6\u548c\u6df1\u5ea6\u5728\u7dda\u9810\u6e2c\u7d50\u679c\n\u672c\u9801\u9762\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u6216 Vertex AI API \u5f9e\u8868\u683c\u5206\u985e\u6216\u8ff4\u6b78\u6a21\u578b\u7372\u53d6\u5728\u7dda\uff08\u5be6\u6642\uff09\u9810\u6e2c\u7d50\u679c\u548c\u8aaa\u660e\u3002\n\u5728\u7dda\u9810\u6e2c\u662f\u540c\u6b65\u8acb\u6c42\uff0c\u8207\u4e4b\u76f8\u5c0d\u7684\u662f [\u6279\u91cf\u9810\u6e2c](https://cloud.google.com/vertex-ai/docs/tabular-data/tabular-workflows/wide-and-deep-batch-predictions?hl=zh-cn) \uff0c\u5373\u7570\u6b65\u8acb\u6c42\u3002\u5982\u679c\u60a8\u8981\u767c\u51fa\u8acb\u6c42\u4ee5\u97ff\u61c9\u61c9\u7528\u8f38\u5165\uff0c\u6216\u8005\u5728\u5176\u4ed6\u9700\u8981\u53ca\u6642\u63a8\u65b7\u7684\u60c5\u6cc1\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u5728\u7dda\u9810\u6e2c\u3002\n\u60a8\u5fc5\u9808\u5148 [\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u7aef\u9ede](#deploy-model) \uff0c\u7136\u5f8c\u624d\u80fd\u4f7f\u7528\u8a72\u6a21\u578b\u57f7\u884c\u5728\u7dda\u9810\u6e2c\u3002\u90e8\u7f72\u6a21\u578b\u6703\u5c07\u7269\u7406\u8cc7\u6e90\u8207\u6a21\u578b\u76f8\u95dc\u806f\uff0c\u4ee5\u4fbf\u4ee5\u4f4e\u5ef6\u9072\u65b9\u5f0f\u57f7\u884c\u5728\u7dda\u9810\u6e2c\u3002\n\u6db5\u84cb\u7684\u4e3b\u984c\u5982\u4e0b\uff1a\n- [\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u7aef\u9ede](#deploy-model) \n- \u4f7f\u7528\u5df2\u90e8\u7f72\u7684\u6a21\u578b\u7372\u53d6 [\u5728\u7dda\u9810\u6e2c](#online-prediction) ", "content": "## \u6e96\u5099\u5de5\u4f5c\n\u60a8\u5fc5\u9808\u5148 [\u8a13\u7df4](https://cloud.google.com/vertex-ai/docs/tabular-data/tabular-workflows/wide-and-deep-train?hl=zh-cn) \u6a21\u578b\uff0c\u7136\u5f8c\u624d\u80fd\u7372\u53d6\u5728\u7dda\u9810\u6e2c\u7d50\u679c\u3002\n## \u5c07\u6a21\u578b\u90e8\u7f72\u5230\u7aef\u9ede\n\u60a8\u53ef\u4ee5\u5c07\u591a\u500b\u6a21\u578b\u90e8\u7f72\u5230\u4e00\u500b\u7aef\u9ede\uff0c\u4e5f\u53ef\u4ee5\u5c07\u4e00\u500b\u6a21\u578b\u90e8\u7f72\u5230\u591a\u500b\u7aef\u9ede\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u90e8\u7f72\u6a21\u578b\u7684\u65b9\u6cd5\u548c\u4f7f\u7528\u5834\u666f\uff0c\u8acb\u53c3\u95b1 [\u90e8\u7f72\u6a21\u578b\u7c21\u4ecb](https://cloud.google.com/vertex-ai/docs/general/deployment?hl=zh-cn) \u3002\n\u8acb\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u4e4b\u4e00\u90e8\u7f72\u6a21\u578b\uff1a\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684 Vertex AI \u90e8\u5206\u4e2d\uff0c\u8f49\u5230 **\u6a21\u578b** \u9801\u9762\u3002 [\u8f49\u5230\u201c\u6a21\u578b\u201d\u9801\u9762](https://console.cloud.google.com/vertex-ai/models?hl=zh-cn) \n- \u9ede\u64ca\u8981\u90e8\u7f72\u7684\u6a21\u578b\u540d\u7a31\u4ee5\u6253\u958b\u5176\u8a73\u60c5\u9801\u9762\u3002\n- \u9078\u64c7 **\u90e8\u7f72\u548c\u6e2c\u8a66** \u6a19\u7c64\u9801\u3002\u5982\u679c\u6a21\u578b\u5df2\u90e8\u7f72\u5230\u4efb\u4f55\u7aef\u9ede\uff0c **\u90e8\u7f72\u6a21\u578b** (Deploy your model) \u90e8\u5206\u4e2d\u6703\u5217\u51fa\u9019\u4e9b\u7aef\u9ede\u3002\n- \u9ede\u64ca **\u90e8\u7f72\u5230\u7aef\u9ede** \u3002\n- \u5728 **\u5b9a\u7fa9\u7aef\u9ede** \u9801\u9762\u4e2d\uff0c\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a- \u60a8\u53ef\u4ee5\u9078\u64c7\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u65b0\u7aef\u9ede\u6216\u73fe\u6709\u7aef\u9ede\u3002- \u5982\u9700\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u65b0\u7684\u7aef\u9ede\uff0c\u8acb\u9078\u64c7radio_button_checked **\u5275\u5efa\u65b0\u7aef\u9ede** \u4f75\u7232\u65b0\u7aef\u9ede\u63d0\u4f9b\u540d\u7a31\u3002\n- \u5982\u9700\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u73fe\u6709\u7aef\u9ede\uff0c\u8acb\u9078\u64c7radio_button_checked **\u6dfb\u52a0\u5230\u73fe\u6709\u7aef\u9ede** \uff0c\u7136\u5f8c\u5f9e\u4e0b\u62c9\u5217\u8868\u4e2d\u9078\u64c7\u7aef\u9ede\u3002\n- \u60a8\u53ef\u4ee5\u5c07\u591a\u500b\u6a21\u578b\u6dfb\u52a0\u5230\u4e00\u500b\u7aef\u9ede\uff0c\u4e5f\u53ef\u4ee5\u5c07\u4e00\u500b\u6a21\u578b\u6dfb\u52a0\u5230\u591a\u500b\u7aef\u9ede\u3002 [\u77ad\u89e3\u8a73\u60c5](https://cloud.google.com/vertex-ai/docs/general/deployment?hl=zh-cn) \u3002\n- \u9ede\u64ca **\u7e7c\u7e8c** \u3002\n- \u5728 **\u6a21\u578b\u8a2d\u7f6e** \u9801\u9762\u4e2d\uff0c\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a- \u5982\u679c\u60a8\u8981\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u65b0\u7aef\u9ede\uff0c\u8acb\u63a5\u53d7 100 \u7684 **\u6d41\u91cf\u62c6\u5206** \u503c\u3002\u5982\u679c\u60a8\u8981\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u5df2\u90e8\u7f72\u6709\u4e00\u500b\u6216\u591a\u500b\u6a21\u578b\u7684\u73fe\u6709\u7aef\u9ede\uff0c\u5247\u5fc5\u9808\u7232\u8981\u90e8\u7f72\u7684\u6a21\u578b\u548c\u5df2\u90e8\u7f72\u6a21\u578b\u66f4\u65b0 **\u6d41\u91cf\u62c6\u5206** \u767e\u5206\u6bd4\uff0c\u4ee5\u4f7f\u6240\u6709\u767e\u5206\u6bd4\u7684\u7e3d\u548c\u7232 100%\u3002\n- \u8f38\u5165\u8981\u7232\u6a21\u578b\u63d0\u4f9b\u7684 **\u8a08\u7b97\u7bc0\u9ede\u6578\u4e0b\u9650** \u3002\u9019\u662f\u6b64\u6a21\u578b\u59cb\u7d42\u53ef\u7528\u7684\u7bc0\u9ede\u6578\u3002   \u60a8\u9700\u8981\u7232\u4f7f\u7528\u7684\u7bc0\u9ede\uff08\u7121\u8ad6\u662f\u8655\u7406\u9810\u6e2c\u8ca0\u8f09\u9084\u662f\u5099\u7528 [\u6700\u5c11] \u7bc0\u9ede\uff09\u4ed8\u8cbb\uff0c\u5373\u4f7f\u6c92\u6709\u9810\u6e2c\u6d41\u91cf\u4e5f\u662f\u5982\u6b64\u3002\u8acb\u53c3\u95b1 [\u50f9\u683c\u9801\u9762](https://cloud.google.com/vertex-ai/pricing?hl=zh-cn) \u3002\n- \u9078\u64c7 **\u6a5f\u5668\u985e\u578b** \u3002\u8f03\u5927\u7684\u6a5f\u5668\u8cc7\u6e90\u6703\u63d0\u9ad8\u9810\u6e2c\u6027\u80fd\u4e26\u589e\u52a0\u8cbb\u7528\u3002\n- \u77ad\u89e3\u5982\u4f55 [\u66f4\u6539\u9810\u6e2c\u65e5\u8a8c\u8a18\u9304\u7684\u9ed8\u8a8d\u8a2d\u7f6e](https://cloud.google.com/vertex-ai/docs/predictions/online-prediction-logging?hl=zh-cn#enabling-and-disabling) \u3002\n- \u9ede\u64ca **\u7e7c\u7e8c** \n- \u5728 **\u6a21\u578b\u76e3\u63a7** \u9801\u9762\u4e2d\uff0c\u9ede\u64ca **\u7e7c\u7e8c** \u3002\n- \u5728 **\u76e3\u63a7\u76ee\u6a19** \u9801\u9762\u4e2d\uff0c\u6309\u5982\u4e0b\u65b9\u5f0f\u914d\u7f6e\uff1a- \u8f38\u5165\u8a13\u7df4\u6578\u64da\u7684\u4f4d\u7f6e\u3002\n- \u8f38\u5165\u76ee\u6a19\u5217\u7684\u540d\u7a31\u3002\n- \u9ede\u64ca **\u90e8\u7f72** \uff0c\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u7aef\u9ede\u3002\n\u4f7f\u7528 Vertex AI API \u90e8\u7f72\u6a21\u578b\u6642\uff0c\u8acb\u5b8c\u6210\u4ee5\u4e0b\u6b65\u9a5f\uff1a- \u6839\u64da\u9700\u8981\u5275\u5efa\u7aef\u9ede\u3002\n- \u7372\u53d6\u7aef\u9ede ID\u3002\n- \u5c07\u6a21\u578b\u90e8\u7f72\u5230\u7aef\u9ede\u3002\n### \u5275\u5efa\u7aef\u9ede\n\u5982\u679c\u8981\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u73fe\u6709\u7aef\u9ede\uff0c\u60a8\u53ef\u4ee5\u8df3\u904e\u6b64\u6b65\u9a5f\u3002\n\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528 [gcloud ai endpoints create \u547d\u4ee4](https://cloud.google.com/sdk/gcloud/reference/ai/endpoints/create?hl=zh-cn) \uff1a\n```\n\u00a0 gcloud ai endpoints create \\\u00a0 \u00a0 --region=LOCATION \\\u00a0 \u00a0 --display-name=ENDPOINT_NAME\n```\n\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1a\u7aef\u9ede\u7684\u986f\u793a\u540d\u7a31\u3002Google Cloud CLI \u5de5\u5177\u53ef\u80fd\u9700\u8981\u5e7e\u79d2\u9418\u624d\u80fd\u5275\u5efa\u7aef\u9ede\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684\u5340\u57df\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u7aef\u9ede\u7684\u986f\u793a\u540d\u7a31\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"display_name\": \"ENDPOINT_NAME\"\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION_ID/endpoints/ENDPOINT_ID/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.CreateEndpointOperationMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2020-11-05T17:45:42.812656Z\",\n  \"updateTime\": \"2020-11-05T17:45:42.812656Z\"\n }\n }\n}\n```\n\u60a8\u53ef\u4ee5\u8f2a\u8a62\u64cd\u4f5c\u72c0\u614b\uff0c\u76f4\u5230\u97ff\u61c9\u5305\u542b\n`\"done\": true`\n\u3002\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/CreateEndpointSample.java) \n```\nimport com.google.api.gax.longrunning.OperationFuture;import com.google.cloud.aiplatform.v1.CreateEndpointOperationMetadata;import com.google.cloud.aiplatform.v1.Endpoint;import com.google.cloud.aiplatform.v1.EndpointServiceClient;import com.google.cloud.aiplatform.v1.EndpointServiceSettings;import com.google.cloud.aiplatform.v1.LocationName;import java.io.IOException;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class CreateEndpointSample {\u00a0 public static void main(String[] args)\u00a0 \u00a0 \u00a0 throws IOException, InterruptedException, ExecutionException, TimeoutException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String endpointDisplayName = \"YOUR_ENDPOINT_DISPLAY_NAME\";\u00a0 \u00a0 createEndpointSample(project, endpointDisplayName);\u00a0 }\u00a0 static void createEndpointSample(String project, String endpointDisplayName)\u00a0 \u00a0 \u00a0 throws IOException, InterruptedException, ExecutionException, TimeoutException {\u00a0 \u00a0 EndpointServiceSettings endpointServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 EndpointServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (EndpointServiceClient endpointServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 EndpointServiceClient.create(endpointServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 LocationName locationName = LocationName.of(project, location);\u00a0 \u00a0 \u00a0 Endpoint endpoint = Endpoint.newBuilder().setDisplayName(endpointDisplayName).build();\u00a0 \u00a0 \u00a0 OperationFuture<Endpoint, CreateEndpointOperationMetadata> endpointFuture =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 endpointServiceClient.createEndpointAsync(locationName, endpoint);\u00a0 \u00a0 \u00a0 System.out.format(\"Operation name: %s\\n\", endpointFuture.getInitialFuture().get().getName());\u00a0 \u00a0 \u00a0 System.out.println(\"Waiting for operation to finish...\");\u00a0 \u00a0 \u00a0 Endpoint endpointResponse = endpointFuture.get(300, TimeUnit.SECONDS);\u00a0 \u00a0 \u00a0 System.out.println(\"Create Endpoint Response\");\u00a0 \u00a0 \u00a0 System.out.format(\"Name: %s\\n\", endpointResponse.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"Display Name: %s\\n\", endpointResponse.getDisplayName());\u00a0 \u00a0 \u00a0 System.out.format(\"Description: %s\\n\", endpointResponse.getDescription());\u00a0 \u00a0 \u00a0 System.out.format(\"Labels: %s\\n\", endpointResponse.getLabelsMap());\u00a0 \u00a0 \u00a0 System.out.format(\"Create Time: %s\\n\", endpointResponse.getCreateTime());\u00a0 \u00a0 \u00a0 System.out.format(\"Update Time: %s\\n\", endpointResponse.getUpdateTime());\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/create-endpoint.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const endpointDisplayName = 'YOUR_ENDPOINT_DISPLAY_NAME';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';// Imports the Google Cloud Endpoint Service Client libraryconst {EndpointServiceClient} = require('@google-cloud/aiplatform');// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst endpointServiceClient = new EndpointServiceClient(clientOptions);async function createEndpoint() {\u00a0 // Configure the parent resource\u00a0 const parent = `projects/${project}/locations/${location}`;\u00a0 const endpoint = {\u00a0 \u00a0 displayName: endpointDisplayName,\u00a0 };\u00a0 const request = {\u00a0 \u00a0 parent,\u00a0 \u00a0 endpoint,\u00a0 };\u00a0 // Get and print out a list of all the endpoints for this resource\u00a0 const [response] = await endpointServiceClient.createEndpoint(request);\u00a0 console.log(`Long running operation : ${response.name}`);\u00a0 // Wait for operation to complete\u00a0 await response.promise();\u00a0 const result = response.result;\u00a0 console.log('Create endpoint response');\u00a0 console.log(`\\tName : ${result.name}`);\u00a0 console.log(`\\tDisplay name : ${result.displayName}`);\u00a0 console.log(`\\tDescription : ${result.description}`);\u00a0 console.log(`\\tLabels : ${JSON.stringify(result.labels)}`);\u00a0 console.log(`\\tCreate time : ${JSON.stringify(result.createTime)}`);\u00a0 console.log(`\\tUpdate time : ${JSON.stringify(result.updateTime)}`);}createEndpoint();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/create_endpoint_sample.py) \n```\ndef create_endpoint_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 display_name: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 endpoint = aiplatform.Endpoint.create(\u00a0 \u00a0 \u00a0 \u00a0 display_name=display_name,\u00a0 \u00a0 \u00a0 \u00a0 project=project,\u00a0 \u00a0 \u00a0 \u00a0 location=location,\u00a0 \u00a0 )\u00a0 \u00a0 print(endpoint.display_name)\u00a0 \u00a0 print(endpoint.resource_name)\u00a0 \u00a0 return endpoint\n```\n### \u6aa2\u7d22\u7aef\u9ede ID\n\u60a8\u9700\u8981\u7aef\u9ede ID \u624d\u80fd\u90e8\u7f72\u6a21\u578b\u3002\n\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528 [gcloud ai endpoints list \u547d\u4ee4](https://cloud.google.com/sdk/gcloud/reference/ai/endpoints/list?hl=zh-cn) \uff1a\n```\n\u00a0 gcloud ai endpoints list \\\u00a0 \u00a0 --region=LOCATION \\\u00a0 \u00a0 --filter=display_name=ENDPOINT_NAME\n```\n\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1a\u7aef\u9ede\u7684\u986f\u793a\u540d\u7a31\u3002\u8acb\u6ce8\u610f `ENDPOINT_ID` \u5217\u4e2d\u986f\u793a\u7684\u6578\u5b57\u3002\u8acb\u5728\u4ee5\u4e0b\u6b65\u9a5f\u4e2d\u4f7f\u7528\u6b64 ID\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u7aef\u9ede\u7684\u986f\u793a\u540d\u7a31\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints?filter=display_name=ENDPOINT_NAME\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"endpoints\": [ {\n  \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION_ID/endpoints/ENDPOINT_ID\",\n  \"displayName\": \"ENDPOINT_NAME\",\n  \"etag\": \"AMEw9yPz5pf4PwBHbRWOGh0PcAxUdjbdX2Jm3QO_amguy3DbZGP5Oi_YUKRywIE-BtLx\",\n  \"createTime\": \"2020-04-17T18:31:11.585169Z\",\n  \"updateTime\": \"2020-04-17T18:35:08.568959Z\"\n }\n ]\n}\n```\n\u8acb\u8a18\u4e0b\n\u3002### \u90e8\u7f72\u6a21\u578b\u5728\u4e0b\u9762\u9078\u64c7\u60a8\u7684\u8a9e\u8a00\u6216\u74b0\u5883\u5c0d\u61c9\u7684\u6a19\u7c64\u9801\uff1a\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528 [gcloud ai endpoints deploy-model \u547d\u4ee4](https://cloud.google.com/sdk/gcloud/reference/ai/endpoints/deploy-model?hl=zh-cn) \u3002\n\u4ee5\u4e0b\u793a\u4f8b\u5c07 `Model` \u90e8\u7f72\u5230 `Endpoint` \uff0c\u4f46\u4e0d\u4f7f\u7528 GPU \u4f86\u52a0\u5feb\u9810\u6e2c\u670d\u52d9\u901f\u5ea6\uff0c\u800c\u4e14\u672a\u5728\u591a\u500b `DeployedModel` \u8cc7\u6e90\u4e4b\u9593\u62c6\u5206\u6d41\u91cf\uff1a\n\u5728\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u7aef\u9ede\u7684 ID\u3002\n- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1a\u8981\u90e8\u7f72\u7684\u6a21\u578b\u7684 ID\u3002\n- \uff1a`DeployedModel`\u7684\u540d\u7a31\u3002\u60a8\u9084\u53ef\u4ee5\u5c07`Model`\u7684\u986f\u793a\u540d\u7528\u65bc`DeployedModel`\u3002\n- \uff1a\u53ef\u9078\u3002\u7528\u65bc\u6b64\u90e8\u7f72\u7684\u6bcf\u500b\u7bc0\u9ede\u7684\u6a5f\u5668\u8cc7\u6e90\u3002\u5176\u9ed8\u8a8d\u8a2d\u7f6e\u7232`n1-standard-2`\u3002 [\u8a73\u7d30\u77ad\u89e3\u6a5f\u5668\u985e\u578b\u3002](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute?hl=zh-cn) \n- \uff1a\u6b64\u90e8\u7f72\u7684\u6700\u5c0f\u7bc0\u9ede\u6578\u3002 \u7bc0\u9ede\u6578\u53ef\u6839\u64da\u9810\u6e2c\u8ca0\u8f09\u7684\u9700\u8981\u800c\u589e\u52a0\u6216\u6e1b\u5c11\uff0c\u76f4\u81f3\u9054\u5230\u7bc0\u9ede\u6578\u4e0a\u9650\u4e26\u4e14\u7d55\u4e0d\u6703\u5c11\u65bc\u6b64\u7bc0\u9ede\u6578\u3002\u6b64\u503c\u5fc5\u9808\u5927\u65bc\u6216\u7b49\u65bc 1\u3002\u5982\u679c\u7701\u7565`--min-replica-count`\u6a19\u8a8c\uff0c\u5247\u8a72\u503c\u9ed8\u8a8d\u7232 1\u3002\n- \uff1a\u6b64\u90e8\u7f72\u7684\u7bc0\u9ede\u6578\u4e0a\u9650\u3002 \u7bc0\u9ede\u6578\u53ef\u6839\u64da\u9810\u6e2c\u8ca0\u8f09\u7684\u9700\u8981\u800c\u589e\u52a0\u6216\u6e1b\u5c11\uff0c\u76f4\u81f3\u9054\u5230\u6b64\u7bc0\u9ede\u6578\u4e26\u4e14\u7d55\u4e0d\u6703\u5c11\u65bc\u7bc0\u9ede\u6578\u4e0b\u9650\u3002\u5982\u679c\u60a8\u7701\u7565`--max-replica-count`\u6a19\u8a8c\uff0c\u5247\u7bc0\u9ede\u6578\u4e0a\u9650\u5c07\u8a2d\u7f6e\u7232`--min-replica-count`\u7684\u503c\u3002\n\u57f7\u884c [gcloud ai endpoints deploy-model](https://cloud.google.com/sdk/gcloud/reference/ai/endpoints/deploy-model?hl=zh-cn) \u547d\u4ee4\uff1a\u4e0a\u8ff0\u793a\u4f8b\u4e2d\u7684 `--traffic-split=0=100` \u6a19\u8a8c\u6703\u5c07 `Endpoint` \u63a5\u6536\u7684 100% \u9810\u6e2c\u6d41\u91cf\u767c\u9001\u5230\u65b0 `DeployedModel` \uff08\u4f7f\u7528\u81e8\u6642 ID `0` \u8868\u793a\uff09\u3002\u5982\u679c\u60a8\u7684 `Endpoint` \u5df2\u6709\u5176\u4ed6 `DeployedModel` \u8cc7\u6e90\uff0c\u90a3\u9ebc\u60a8\u53ef\u4ee5\u5728\u65b0 `DeployedModel` \u548c\u820a\u8cc7\u6e90\u4e4b\u9593\u62c6\u5206\u6d41\u91cf\u3002\u4f8b\u5982\uff0c\u5982\u9700\u5c07 20% \u7684\u6d41\u91cf\u767c\u9001\u5230\u65b0 `DeployedModel` \uff0c\u5c07 80% \u767c\u9001\u5230\u820a\u7248\u672c\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n\u5728\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u73fe\u6709`DeployedModel`\u7684 ID\u3002\n\u57f7\u884c [gcloud ai endpoints deploy-model](https://cloud.google.com/sdk/gcloud/reference/ai/endpoints/deploy-model?hl=zh-cn) \u547d\u4ee4\uff1a\u60a8\u53ef\u4ee5\u4f7f\u7528 [endpoints.predict](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.endpoints/predict?hl=zh-cn) \u65b9\u6cd5\u8acb\u6c42\u5728\u7dda\u9810\u6e2c\u3002\n\u90e8\u7f72\u6b64\u6a21\u578b\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u7aef\u9ede\u7684 ID\u3002\n- \uff1a\u8981\u90e8\u7f72\u7684\u6a21\u578b\u7684 ID\u3002\n- \uff1a`DeployedModel`\u7684\u540d\u7a31\u3002\u60a8\u9084\u53ef\u4ee5\u5c07`Model`\u7684\u986f\u793a\u540d\u7528\u65bc`DeployedModel`\u3002\n- \uff1a\u53ef\u9078\u3002\u7528\u65bc\u6b64\u90e8\u7f72\u7684\u6bcf\u500b\u7bc0\u9ede\u7684\u6a5f\u5668\u8cc7\u6e90\u3002\u5176\u9ed8\u8a8d\u8a2d\u7f6e\u7232`n1-standard-2`\u3002 [\u8a73\u7d30\u77ad\u89e3\u6a5f\u5668\u985e\u578b\u3002](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute?hl=zh-cn) \n- \uff1a\u8981\u639b\u63a5\u5230\u6a5f\u5668\u7684\u52a0\u901f\u5668\u985e\u578b\u3002\u5982\u679c\u672a\u6307\u5b9a\u6216\u7232\u96f6\uff0c\u5247\u53ef\u9078\u3002\u5efa\u8b70\u4e0d\u8981\u7528\u65bc\u4f7f\u7528\u975e GPU \u6620\u50cf\u7684 AutoML \u6a21\u578b\u6216\u81ea\u5b9a\u7fa9\u8a13\u7df4\u6a21\u578b\u3002 [\u77ad\u89e3\u8a73\u60c5](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute?hl=zh-cn#gpus) \u3002\n- \uff1a\u6bcf\u500b\u526f\u672c\u8981\u4f7f\u7528\u7684\u52a0\u901f\u5668\u6578\u91cf\u3002\u53ef\u9078\u3002\u5c0d\u65bc\u4f7f\u7528\u975e GPU \u6620\u50cf\u7684 AutoML \u6a21\u578b\u6216\u81ea\u5b9a\u7fa9\u6a21\u578b\uff0c\u61c9\u8a72\u7232\u96f6\u6216\u672a\u6307\u5b9a\u3002\n- \uff1a\u6b64\u90e8\u7f72\u7684\u6700\u5c0f\u7bc0\u9ede\u6578\u3002 \u7bc0\u9ede\u6578\u53ef\u6839\u64da\u9810\u6e2c\u8ca0\u8f09\u7684\u9700\u8981\u800c\u589e\u52a0\u6216\u6e1b\u5c11\uff0c\u76f4\u81f3\u9054\u5230\u7bc0\u9ede\u6578\u4e0a\u9650\u4e26\u4e14\u7d55\u4e0d\u6703\u5c11\u65bc\u6b64\u7bc0\u9ede\u6578\u3002\u6b64\u503c\u5fc5\u9808\u5927\u65bc\u6216\u7b49\u65bc 1\u3002\n- \uff1a\u6b64\u90e8\u7f72\u7684\u7bc0\u9ede\u6578\u4e0a\u9650\u3002 \u7bc0\u9ede\u6578\u53ef\u6839\u64da\u9810\u6e2c\u8ca0\u8f09\u7684\u9700\u8981\u800c\u589e\u52a0\u6216\u6e1b\u5c11\uff0c\u76f4\u81f3\u9054\u5230\u6b64\u7bc0\u9ede\u6578\u4e26\u4e14\u7d55\u4e0d\u6703\u5c11\u65bc\u7bc0\u9ede\u6578\u4e0b\u9650\u3002\n- \uff1a\u6d41\u5411\u6b64\u7aef\u9ede\u7684\u8981\u8def\u7531\u5230\u4f7f\u7528\u6b64\u64cd\u4f5c\u90e8\u7f72\u7684\u6a21\u578b\u7684\u9810\u6e2c\u6d41\u91cf\u767e\u5206\u6bd4\u3002\u9ed8\u8a8d\u503c\u7232 100\u3002\u6240\u6709\u6d41\u91cf\u767e\u5206\u6bd4\u4e4b\u548c\u5fc5\u9808\u7232 100\u3002 [\u8a73\u7d30\u77ad\u89e3\u6d41\u91cf\u62c6\u5206](https://cloud.google.com/vertex-ai/docs/general/deployment?hl=zh-cn#models-endpoint) \u3002\n- \uff1a\u53ef\u9078\u3002\u5982\u679c\u5c07\u5176\u4ed6\u6a21\u578b\u90e8\u7f72\u5230\u6b64\u7aef\u9ede\uff0c\u60a8\u5fc5\u9808\u66f4\u65b0\u5176\u6d41\u91cf\u62c6\u5206\u767e\u5206\u6bd4\uff0c\u4ee5\u4fbf\u6240\u6709\u767e\u5206\u6bd4\u4e4b\u548c\u7b49\u65bc 100\u3002\n- \uff1a\u5df2\u90e8\u7f72\u6a21\u578b ID \u5bc6\u9470\u7684\u6d41\u91cf\u62c6\u5206\u767e\u5206\u6bd4\u503c\u3002\n- \uff1a\u81ea\u52d5\u751f\u6210\u7684 [\u9805\u76ee\u7de8\u865f](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:deployModel\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"deployedModel\": {\n \"model\": \"projects/PROJECT/locations/us-central1/models/MODEL_ID\",\n \"displayName\": \"DEPLOYED_MODEL_NAME\",\n \"dedicatedResources\": {\n  \"machineSpec\": {\n   \"machineType\": \"MACHINE_TYPE\",\n   \"acceleratorType\": \"ACCELERATOR_TYPE\",\n   \"acceleratorCount\": \"ACCELERATOR_COUNT\"\n  },\n  \"minReplicaCount\": MIN_REPLICA_COUNT,\n  \"maxReplicaCount\": MAX_REPLICA_COUNT\n  },\n },\n \"trafficSplit\": {\n \"0\": TRAFFIC_SPLIT_THIS_MODEL,\n \"DEPLOYED_MODEL_ID_1\": TRAFFIC_SPLIT_MODEL_1,\n \"DEPLOYED_MODEL_ID_2\": TRAFFIC_SPLIT_MODEL_2\n },\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION/endpoints/ENDPOINT_ID/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.DeployModelOperationMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2020-10-19T17:53:16.502088Z\",\n  \"updateTime\": \"2020-10-19T17:53:16.502088Z\"\n }\n }\n}\n```\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/DeployModelCustomTrainedModelSample.java) \n```\nimport com.google.api.gax.longrunning.OperationFuture;import com.google.cloud.aiplatform.v1.DedicatedResources;import com.google.cloud.aiplatform.v1.DeployModelOperationMetadata;import com.google.cloud.aiplatform.v1.DeployModelResponse;import com.google.cloud.aiplatform.v1.DeployedModel;import com.google.cloud.aiplatform.v1.EndpointName;import com.google.cloud.aiplatform.v1.EndpointServiceClient;import com.google.cloud.aiplatform.v1.EndpointServiceSettings;import com.google.cloud.aiplatform.v1.MachineSpec;import com.google.cloud.aiplatform.v1.ModelName;import java.io.IOException;import java.util.HashMap;import java.util.Map;import java.util.concurrent.ExecutionException;public class DeployModelCustomTrainedModelSample {\u00a0 public static void main(String[] args)\u00a0 \u00a0 \u00a0 throws IOException, ExecutionException, InterruptedException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String project = \"PROJECT\";\u00a0 \u00a0 String endpointId = \"ENDPOINT_ID\";\u00a0 \u00a0 String modelName = \"MODEL_NAME\";\u00a0 \u00a0 String deployedModelDisplayName = \"DEPLOYED_MODEL_DISPLAY_NAME\";\u00a0 \u00a0 deployModelCustomTrainedModelSample(project, endpointId, modelName, deployedModelDisplayName);\u00a0 }\u00a0 static void deployModelCustomTrainedModelSample(\u00a0 \u00a0 \u00a0 String project, String endpointId, String model, String deployedModelDisplayName)\u00a0 \u00a0 \u00a0 throws IOException, ExecutionException, InterruptedException {\u00a0 \u00a0 EndpointServiceSettings settings =\u00a0 \u00a0 \u00a0 \u00a0 EndpointServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (EndpointServiceClient client = EndpointServiceClient.create(settings)) {\u00a0 \u00a0 \u00a0 MachineSpec machineSpec = MachineSpec.newBuilder().setMachineType(\"n1-standard-2\").build();\u00a0 \u00a0 \u00a0 DedicatedResources dedicatedResources =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DedicatedResources.newBuilder().setMinReplicaCount(1).setMachineSpec(machineSpec).build();\u00a0 \u00a0 \u00a0 String modelName = ModelName.of(project, location, model).toString();\u00a0 \u00a0 \u00a0 DeployedModel deployedModel =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeployedModel.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setModel(modelName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDisplayName(deployedModelDisplayName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // `dedicated_resources` must be used for non-AutoML models\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDedicatedResources(dedicatedResources)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 // key '0' assigns traffic for the newly deployed model\u00a0 \u00a0 \u00a0 // Traffic percentage values must add up to 100\u00a0 \u00a0 \u00a0 // Leave dictionary empty if endpoint should not accept any traffic\u00a0 \u00a0 \u00a0 Map<String, Integer> trafficSplit = new HashMap<>();\u00a0 \u00a0 \u00a0 trafficSplit.put(\"0\", 100);\u00a0 \u00a0 \u00a0 EndpointName endpoint = EndpointName.of(project, location, endpointId);\u00a0 \u00a0 \u00a0 OperationFuture<DeployModelResponse, DeployModelOperationMetadata> response =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 client.deployModelAsync(endpoint, deployedModel, trafficSplit);\u00a0 \u00a0 \u00a0 // You can use OperationFuture.getInitialFuture to get a future representing the initial\u00a0 \u00a0 \u00a0 // response to the request, which contains information while the operation is in progress.\u00a0 \u00a0 \u00a0 System.out.format(\"Operation name: %s\\n\", response.getInitialFuture().get().getName());\u00a0 \u00a0 \u00a0 // OperationFuture.get() will block until the operation is finished.\u00a0 \u00a0 \u00a0 DeployModelResponse deployModelResponse = response.get();\u00a0 \u00a0 \u00a0 System.out.format(\"deployModelResponse: %s\\n\", deployModelResponse);\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/deploy_model_with_dedicated_resources_sample.py) \n```\ndef deploy_model_with_dedicated_resources_sample(\u00a0 \u00a0 project,\u00a0 \u00a0 location,\u00a0 \u00a0 model_name: str,\u00a0 \u00a0 machine_type: str,\u00a0 \u00a0 endpoint: Optional[aiplatform.Endpoint] = None,\u00a0 \u00a0 deployed_model_display_name: Optional[str] = None,\u00a0 \u00a0 traffic_percentage: Optional[int] = 0,\u00a0 \u00a0 traffic_split: Optional[Dict[str, int]] = None,\u00a0 \u00a0 min_replica_count: int = 1,\u00a0 \u00a0 max_replica_count: int = 1,\u00a0 \u00a0 accelerator_type: Optional[str] = None,\u00a0 \u00a0 accelerator_count: Optional[int] = None,\u00a0 \u00a0 explanation_metadata: Optional[explain.ExplanationMetadata] = None,\u00a0 \u00a0 explanation_parameters: Optional[explain.ExplanationParameters] = None,\u00a0 \u00a0 metadata: Optional[Sequence[Tuple[str, str]]] = (),\u00a0 \u00a0 sync: bool = True,):\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 model_name: A fully-qualified model resource name or model ID.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Example: \"projects/123/locations/us-central1/models/456\" or\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"456\" when project and location are initialized or passed.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 model = aiplatform.Model(model_name=model_name)\u00a0 \u00a0 # The explanation_metadata and explanation_parameters should only be\u00a0 \u00a0 # provided for a custom trained model and not an AutoML model.\u00a0 \u00a0 model.deploy(\u00a0 \u00a0 \u00a0 \u00a0 endpoint=endpoint,\u00a0 \u00a0 \u00a0 \u00a0 deployed_model_display_name=deployed_model_display_name,\u00a0 \u00a0 \u00a0 \u00a0 traffic_percentage=traffic_percentage,\u00a0 \u00a0 \u00a0 \u00a0 traffic_split=traffic_split,\u00a0 \u00a0 \u00a0 \u00a0 machine_type=machine_type,\u00a0 \u00a0 \u00a0 \u00a0 min_replica_count=min_replica_count,\u00a0 \u00a0 \u00a0 \u00a0 max_replica_count=max_replica_count,\u00a0 \u00a0 \u00a0 \u00a0 accelerator_type=accelerator_type,\u00a0 \u00a0 \u00a0 \u00a0 accelerator_count=accelerator_count,\u00a0 \u00a0 \u00a0 \u00a0 explanation_metadata=explanation_metadata,\u00a0 \u00a0 \u00a0 \u00a0 explanation_parameters=explanation_parameters,\u00a0 \u00a0 \u00a0 \u00a0 metadata=metadata,\u00a0 \u00a0 \u00a0 \u00a0 sync=sync,\u00a0 \u00a0 )\u00a0 \u00a0 model.wait()\u00a0 \u00a0 print(model.display_name)\u00a0 \u00a0 print(model.resource_name)\u00a0 \u00a0 return model\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/automl/tables/create-model.v1beta1.js) \n```\nconst automl = require('@google-cloud/automl');const client = new automl.v1beta1.AutoMlClient();/**\u00a0* Demonstrates using the AutoML client to create a model.\u00a0* TODO(developer): Uncomment the following lines before running the sample.\u00a0*/// const projectId = '[PROJECT_ID]' e.g., \"my-gcloud-project\";// const computeRegion = '[REGION_NAME]' e.g., \"us-central1\";// const datasetId = '[DATASET_ID]' e.g., \"TBL2246891593778855936\";// const tableId = '[TABLE_ID]' e.g., \"1991013247762825216\";// const columnId = '[COLUMN_ID]' e.g., \"773141392279994368\";// const modelName = '[MODEL_NAME]' e.g., \"testModel\";// const trainBudget = '[TRAIN_BUDGET]' e.g., \"1000\",// `Train budget in milli node hours`;// A resource that represents Google Cloud Platform location.const projectLocation = client.locationPath(projectId, computeRegion);// Get the full path of the column.const columnSpecId = client.columnSpecPath(\u00a0 projectId,\u00a0 computeRegion,\u00a0 datasetId,\u00a0 tableId,\u00a0 columnId);// Set target column to train the model.const targetColumnSpec = {name: columnSpecId};// Set tables model metadata.const tablesModelMetadata = {\u00a0 targetColumnSpec: targetColumnSpec,\u00a0 trainBudgetMilliNodeHours: trainBudget,};// Set datasetId, model name and model metadata for the dataset.const myModel = {\u00a0 datasetId: datasetId,\u00a0 displayName: modelName,\u00a0 tablesModelMetadata: tablesModelMetadata,};// Create a model with the model metadata in the region.client\u00a0 .createModel({parent: projectLocation, model: myModel})\u00a0 .then(responses => {\u00a0 \u00a0 const initialApiResponse = responses[1];\u00a0 \u00a0 console.log(`Training operation name: ${initialApiResponse.name}`);\u00a0 \u00a0 console.log('Training started...');\u00a0 })\u00a0 .catch(err => {\u00a0 \u00a0 console.error(err);\u00a0 });\n```\n\u77ad\u89e3\u5982\u4f55 [\u66f4\u6539\u9810\u6e2c\u65e5\u8a8c\u8a18\u9304\u7684\u9ed8\u8a8d\u8a2d\u7f6e](https://cloud.google.com/vertex-ai/docs/predictions/online-prediction-logging?hl=zh-cn#enabling-and-disabling) \u3002\n### \u7372\u53d6\u64cd\u4f5c\u72c0\u614b\n\u67d0\u4e9b\u8acb\u6c42\u6703\u5553\u52d5\u9700\u8981\u4e00\u4e9b\u6642\u9593\u624d\u80fd\u5b8c\u6210\u7684\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u3002\u9019\u4e9b\u8acb\u6c42\u6703\u8fd4\u56de\u64cd\u4f5c\u540d\u7a31\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8a72\u540d\u7a31\u67e5\u770b\u64cd\u4f5c\u72c0\u614b\u6216\u53d6\u6d88\u64cd\u4f5c\u3002Vertex AI \u63d0\u4f9b\u8f14\u52a9\u65b9\u6cd5\u4f86\u8abf\u7528\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c](https://cloud.google.com/vertex-ai/docs/general/long-running-operations?hl=zh-cn) \u3002\n## \u4f7f\u7528\u5df2\u90e8\u7f72\u7684\u6a21\u578b\u7372\u53d6\u5728\u7dda\u9810\u6e2c\n\u5982\u9700\u9032\u884c\u5728\u7dda\u9810\u6e2c\uff0c\u8acb\u5411\u6a21\u578b\u63d0\u4ea4\u4e00\u500b\u6216\u591a\u500b\u6e2c\u8a66\u9805\u9032\u884c\u5206\u6790\uff0c\u6a21\u578b\u6703\u8fd4\u56de\u57fa\u65bc\u6a21\u578b\u76ee\u6a19\u7684\u7d50\u679c\u3002\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u6216 Vertex AI API \u8acb\u6c42\u5728\u7dda\u9810\u6e2c\u3002\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684 Vertex AI \u90e8\u5206\u4e2d\uff0c\u8f49\u5230 **\u6a21\u578b** \u9801\u9762\u3002 [\u8f49\u5230\u201c\u6a21\u578b\u201d\u9801\u9762](https://console.cloud.google.com/vertex-ai/models?hl=zh-cn) \n- \u5f9e\u6a21\u578b\u5217\u8868\u4e2d\uff0c\u9ede\u64ca\u8981\u5411\u5176\u8acb\u6c42\u9810\u6e2c\u7684\u6a21\u578b\u7684\u540d\u7a31\u3002\n- \u9078\u64c7 **\u90e8\u7f72\u548c\u6e2c\u8a66** \u6a19\u7c64\u9801\u3002\n- \u5728 **\u6e2c\u8a66\u6a21\u578b** \u90e8\u5206\u4e0b\uff0c\u6dfb\u52a0\u6e2c\u8a66\u9805\u4ee5\u8acb\u6c42\u9810\u6e2c\u3002\u7cfb\u7d71\u6703\u7232\u60a8\u586b\u5145\u57fa\u6e96\u9810\u6e2c\u6578\u64da\uff0c\u60a8\u4e5f\u53ef\u4ee5\u8f38\u5165\u81ea\u5df1\u7684\u9810\u6e2c\u6578\u64da\u4e26\u9ede\u64ca **\u9810\u6e2c** \u3002\u9810\u6e2c\u5b8c\u6210\u5f8c\uff0cVertex AI \u6703\u5728\u63a7\u5236\u6aaf\u4e2d\u8fd4\u56de\u7d50\u679c\u3002\n- \u5275\u5efa\u540d\u7232 `request.json` \u4e14\u5305\u542b\u4ee5\u4e0b\u5167\u5bb9\u7684\u6587\u4ef6\uff1a```\n  {\n \"instances\": [ {\n  PREDICTION_DATA_ROW\n }\n ]\n}\n \n```\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u4e00\u500b JSON \u5c0d\u8c61\uff0c\u4f7f\u7528\u9375\u4f5c\u7232\u7279\u5fb5\u540d\u7a31\uff0c\u503c\u4f5c\u7232\u76f8\u61c9\u7684\u7279\u5fb5\u503c\u3002\u4f8b\u5982\uff0c\u5c0d\u65bc\u5305\u542b\u6578\u5b57\u3001\u5b57\u7b26\u4e32\u6578\u7d44\u548c\u985e\u5225\u7684\u6578\u64da\u96c6\uff0c\u6578\u64da\u884c\u53ef\u80fd\u985e\u4f3c\u65bc\u4ee5\u4e0b\u793a\u4f8b\u8acb\u6c42\uff1a```\n\"length\":3.6,\n\"material\":\"cotton\",\n\"tag_array\": [\"abc\",\"def\"]\n```\u5fc5\u9808\u7232\u8a13\u7df4\u4e2d\u5305\u542b\u7684\u6bcf\u500b\u7279\u5fb5\u63d0\u4f9b\u4e00\u500b\u503c\u3002\u7528\u65bc\u9810\u6e2c\u7684\u6578\u64da\u683c\u5f0f\u5fc5\u9808\u8207\u7528\u65bc\u8a13\u7df4\u7684\u683c\u5f0f\u5339\u914d\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u9810\u6e2c\u7684\u6578\u64da\u683c\u5f0f](https://cloud.google.com/vertex-ai/docs/datasets/data-types-tabular?hl=zh-cn#format-for-prediction) \u3002\n- \u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud ai endpoints predict ENDPOINT_ID \\\u00a0 --region=LOCATION_ID \\\u00a0 --json-request=request.json\n```\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u7aef\u9ede\u7684 ID\u3002\n- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 [endpoints.predict](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.endpoints/predict?hl=zh-cn) \u65b9\u6cd5\u8acb\u6c42\u5728\u7dda\u9810\u6e2c\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u7aef\u9ede\u6240\u5728\u7684\u5340\u57df\u3002\u4f8b\u5982`us-central1`\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u7aef\u9ede\u7684 ID\u3002\n- \uff1a\u4e00\u500b JSON \u5c0d\u8c61\uff0c\u4f7f\u7528\u9375\u4f5c\u7232\u7279\u5fb5\u540d\u7a31\uff0c\u503c\u4f5c\u7232\u76f8\u61c9\u7684\u7279\u5fb5\u503c\u3002\u4f8b\u5982\uff0c\u5c0d\u65bc\u5305\u542b\u6578\u5b57\u3001\u5b57\u7b26\u4e32\u6578\u7d44\u548c\u985e\u5225\u7684\u6578\u64da\u96c6\uff0c\u6578\u64da\u884c\u53ef\u80fd\u985e\u4f3c\u65bc\u4ee5\u4e0b\u793a\u4f8b\u8acb\u6c42\uff1a```\n\"length\":3.6,\n\"material\":\"cotton\",\n\"tag_array\": [\"abc\",\"def\"]\n```\u5fc5\u9808\u7232\u8a13\u7df4\u4e2d\u5305\u542b\u7684\u6bcf\u500b\u7279\u5fb5\u63d0\u4f9b\u4e00\u500b\u503c\u3002\u7528\u65bc\u9810\u6e2c\u7684\u6578\u64da\u683c\u5f0f\u5fc5\u9808\u8207\u7528\u65bc\u8a13\u7df4\u7684\u683c\u5f0f\u5339\u914d\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u9810\u6e2c\u7684\u6578\u64da\u683c\u5f0f](https://cloud.google.com/vertex-ai/docs/datasets/data-types-tabular?hl=zh-cn#format-for-prediction) \u3002\n- \uff1a\u7531`predict`\u65b9\u6cd5\u8f38\u51fa\u3002\u7528\u65bc\u751f\u6210\u9810\u6e2c\u7d50\u679c\u7684\u6a21\u578b\u7684 ID\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:predict\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"instances\": [ {\n  PREDICTION_DATA_ROW\n }\n ]\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:predict\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:predict\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n {\n  \"predictions\": [  {\n   \"scores\": [   0.96771615743637085,\n   0.032283786684274673\n   ],\n   \"classes\": [   \"0\",\n   \"1\"\n   ]\n  }\n  ]\n  \"deployedModelId\": \"2429510197\"\n }\n \n```\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/PredictTabularClassificationSample.java) \n```\nimport com.google.cloud.aiplatform.util.ValueConverter;import com.google.cloud.aiplatform.v1.EndpointName;import com.google.cloud.aiplatform.v1.PredictResponse;import com.google.cloud.aiplatform.v1.PredictionServiceClient;import com.google.cloud.aiplatform.v1.PredictionServiceSettings;import com.google.cloud.aiplatform.v1.schema.predict.prediction.TabularClassificationPredictionResult;import com.google.protobuf.ListValue;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.List;public class PredictTabularClassificationSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String instance = \"[{ \u201cfeature_column_a\u201d: \u201cvalue\u201d, \u201cfeature_column_b\u201d: \u201cvalue\u201d}]\";\u00a0 \u00a0 String endpointId = \"YOUR_ENDPOINT_ID\";\u00a0 \u00a0 predictTabularClassification(instance, project, endpointId);\u00a0 }\u00a0 static void predictTabularClassification(String instance, String project, String endpointId)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 PredictionServiceSettings predictionServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (PredictionServiceClient predictionServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceClient.create(predictionServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 EndpointName endpointName = EndpointName.of(project, location, endpointId);\u00a0 \u00a0 \u00a0 ListValue.Builder listValue = ListValue.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(instance, listValue);\u00a0 \u00a0 \u00a0 List<Value> instanceList = listValue.getValuesList();\u00a0 \u00a0 \u00a0 Value parameters = Value.newBuilder().setListValue(listValue).build();\u00a0 \u00a0 \u00a0 PredictResponse predictResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predictionServiceClient.predict(endpointName, instanceList, parameters);\u00a0 \u00a0 \u00a0 System.out.println(\"Predict Tabular Classification Response\");\u00a0 \u00a0 \u00a0 System.out.format(\"\\tDeployed Model Id: %s\\n\", predictResponse.getDeployedModelId());\u00a0 \u00a0 \u00a0 System.out.println(\"Predictions\");\u00a0 \u00a0 \u00a0 for (Value prediction : predictResponse.getPredictionsList()) {\u00a0 \u00a0 \u00a0 \u00a0 TabularClassificationPredictionResult.Builder resultBuilder =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TabularClassificationPredictionResult.newBuilder();\u00a0 \u00a0 \u00a0 \u00a0 TabularClassificationPredictionResult result =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (TabularClassificationPredictionResult)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ValueConverter.fromValue(resultBuilder, prediction);\u00a0 \u00a0 \u00a0 \u00a0 for (int i = 0; i < result.getClassesCount(); i++) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 System.out.printf(\"\\tClass: %s\", result.getClasses(i));\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 System.out.printf(\"\\tScore: %f\", result.getScores(i));\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/predict-tabular-classification.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const endpointId = 'YOUR_ENDPOINT_ID';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const aiplatform = require('@google-cloud/aiplatform');const {prediction} =\u00a0 aiplatform.protos.google.cloud.aiplatform.v1.schema.predict;// Imports the Google Cloud Prediction service clientconst {PredictionServiceClient} = aiplatform.v1;// Import the helper module for converting arbitrary protobuf.Value objects.const {helpers} = aiplatform;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst predictionServiceClient = new PredictionServiceClient(clientOptions);async function predictTablesClassification() {\u00a0 // Configure the endpoint resource\u00a0 const endpoint = `projects/${project}/locations/${location}/endpoints/${endpointId}`;\u00a0 const parameters = helpers.toValue({});\u00a0 const instance = helpers.toValue({\u00a0 \u00a0 petal_length: '1.4',\u00a0 \u00a0 petal_width: '1.3',\u00a0 \u00a0 sepal_length: '5.1',\u00a0 \u00a0 sepal_width: '2.8',\u00a0 });\u00a0 const instances = [instance];\u00a0 const request = {\u00a0 \u00a0 endpoint,\u00a0 \u00a0 instances,\u00a0 \u00a0 parameters,\u00a0 };\u00a0 // Predict request\u00a0 const [response] = await predictionServiceClient.predict(request);\u00a0 console.log('Predict tabular classification response');\u00a0 console.log(`\\tDeployed model id : ${response.deployedModelId}\\n`);\u00a0 const predictions = response.predictions;\u00a0 console.log('Predictions :');\u00a0 for (const predictionResultVal of predictions) {\u00a0 \u00a0 const predictionResultObj =\u00a0 \u00a0 \u00a0 prediction.TabularClassificationPredictionResult.fromValue(\u00a0 \u00a0 \u00a0 \u00a0 predictionResultVal\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 for (const [i, class_] of predictionResultObj.classes.entries()) {\u00a0 \u00a0 \u00a0 console.log(`\\tClass: ${class_}`);\u00a0 \u00a0 \u00a0 console.log(`\\tScore: ${predictionResultObj.scores[i]}\\n\\n`);\u00a0 \u00a0 }\u00a0 }}predictTablesClassification();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/predict_tabular_classification_sample.py) \n```\ndef predict_tabular_classification_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 endpoint_name: str,\u00a0 \u00a0 instances: List[Dict],):\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 Args\u00a0 \u00a0 \u00a0 \u00a0 project: Your project ID or project number.\u00a0 \u00a0 \u00a0 \u00a0 location: Region where Endpoint is located. For example, 'us-central1'.\u00a0 \u00a0 \u00a0 \u00a0 endpoint_name: A fully qualified endpoint name or endpoint ID. Example: \"projects/123/locations/us-central1/endpoints/456\" or\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"456\" when project and location are initialized or passed.\u00a0 \u00a0 \u00a0 \u00a0 instances: A list of one or more instances (examples) to return a prediction for.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 endpoint = aiplatform.Endpoint(endpoint_name)\u00a0 \u00a0 response = endpoint.predict(instances=instances)\u00a0 \u00a0 for prediction_ in response.predictions:\u00a0 \u00a0 \u00a0 \u00a0 print(prediction_)\n```\n- \u5275\u5efa\u4e00\u500b\u540d\u7232\u201crequest.json\u201d\u4e14\u5305\u542b\u4ee5\u4e0b\u5167\u5bb9\u7684\u6587\u4ef6\uff1a```\n  {\n \"instances\": [ {\n  PREDICTION_DATA_ROW\n }\n ]\n}\n \n```\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u4e00\u500b JSON \u5c0d\u8c61\uff0c\u4f7f\u7528\u9375\u4f5c\u7232\u7279\u5fb5\u540d\u7a31\uff0c\u503c\u4f5c\u7232\u76f8\u61c9\u7684\u7279\u5fb5\u503c\u3002\u4f8b\u5982\uff0c\u5c0d\u65bc\u5305\u542b\u6578\u5b57\u3001\u6578\u5b57\u6578\u7d44\u548c\u985e\u5225\u7684\u6578\u64da\u96c6\uff0c\u6578\u64da\u884c\u53ef\u80fd\u985e\u4f3c\u65bc\u4ee5\u4e0b\u793a\u4f8b\u8acb\u6c42\uff1a```\n\"age\":3.6,\n\"sq_ft\":5392,\n\"code\": \"90331\"\n```\u5fc5\u9808\u7232\u8a13\u7df4\u4e2d\u5305\u542b\u7684\u6bcf\u500b\u7279\u5fb5\u63d0\u4f9b\u4e00\u500b\u503c\u3002\u7528\u65bc\u9810\u6e2c\u7684\u6578\u64da\u683c\u5f0f\u5fc5\u9808\u8207\u7528\u65bc\u8a13\u7df4\u7684\u683c\u5f0f\u5339\u914d\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u9810\u6e2c\u7684\u6578\u64da\u683c\u5f0f](https://cloud.google.com/vertex-ai/docs/datasets/data-types-tabular?hl=zh-cn#format-for-prediction) \u3002\n- \u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud ai endpoints predict ENDPOINT_ID \\\u00a0 --region=LOCATION_ID \\\u00a0 --json-request=request.json\n```\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u7aef\u9ede\u7684 ID\u3002\n- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 [endpoints.predict](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.endpoints/predict?hl=zh-cn) \u65b9\u6cd5\u8acb\u6c42\u5728\u7dda\u9810\u6e2c\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u7aef\u9ede\u6240\u5728\u7684\u5340\u57df\u3002\u4f8b\u5982`us-central1`\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u7aef\u9ede\u7684 ID\u3002\n- \uff1a\u4e00\u500b JSON \u5c0d\u8c61\uff0c\u4f7f\u7528\u9375\u4f5c\u7232\u7279\u5fb5\u540d\u7a31\uff0c\u503c\u4f5c\u7232\u76f8\u61c9\u7684\u7279\u5fb5\u503c\u3002\u4f8b\u5982\uff0c\u5c0d\u65bc\u5305\u542b\u6578\u5b57\u3001\u6578\u5b57\u6578\u7d44\u548c\u985e\u5225\u7684\u6578\u64da\u96c6\uff0c\u6578\u64da\u884c\u53ef\u80fd\u985e\u4f3c\u65bc\u4ee5\u4e0b\u793a\u4f8b\u8acb\u6c42\uff1a```\n\"age\":3.6,\n\"sq_ft\":5392,\n\"code\": \"90331\"\n```\u5fc5\u9808\u7232\u8a13\u7df4\u4e2d\u5305\u542b\u7684\u6bcf\u500b\u7279\u5fb5\u63d0\u4f9b\u4e00\u500b\u503c\u3002\u7528\u65bc\u9810\u6e2c\u7684\u6578\u64da\u683c\u5f0f\u5fc5\u9808\u8207\u7528\u65bc\u8a13\u7df4\u7684\u683c\u5f0f\u5339\u914d\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u9810\u6e2c\u7684\u6578\u64da\u683c\u5f0f](https://cloud.google.com/vertex-ai/docs/datasets/data-types-tabular?hl=zh-cn#format-for-prediction) \u3002\n- \uff1a\u7531`predict`\u65b9\u6cd5\u8f38\u51fa\u3002\u7528\u65bc\u751f\u6210\u9810\u6e2c\u7d50\u679c\u7684\u6a21\u578b\u7684 ID\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:predict\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"instances\": [ {\n  PREDICTION_DATA_ROW\n }\n ]\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:predict\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:predict\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"predictions\": [ [  {\n  \"value\": 65.14233\n  }\n ]\n ],\n \"deployedModelId\": \"DEPLOYED_MODEL_ID\"\n}\n```\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/PredictTabularRegressionSample.java) \n```\nimport com.google.cloud.aiplatform.util.ValueConverter;import com.google.cloud.aiplatform.v1.EndpointName;import com.google.cloud.aiplatform.v1.PredictResponse;import com.google.cloud.aiplatform.v1.PredictionServiceClient;import com.google.cloud.aiplatform.v1.PredictionServiceSettings;import com.google.cloud.aiplatform.v1.schema.predict.prediction.TabularRegressionPredictionResult;import com.google.protobuf.ListValue;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.List;public class PredictTabularRegressionSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String instance = \"[{ \u201cfeature_column_a\u201d: \u201cvalue\u201d, \u201cfeature_column_b\u201d: \u201cvalue\u201d}]\";\u00a0 \u00a0 String endpointId = \"YOUR_ENDPOINT_ID\";\u00a0 \u00a0 predictTabularRegression(instance, project, endpointId);\u00a0 }\u00a0 static void predictTabularRegression(String instance, String project, String endpointId)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 PredictionServiceSettings predictionServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (PredictionServiceClient predictionServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceClient.create(predictionServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 EndpointName endpointName = EndpointName.of(project, location, endpointId);\u00a0 \u00a0 \u00a0 ListValue.Builder listValue = ListValue.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(instance, listValue);\u00a0 \u00a0 \u00a0 List<Value> instanceList = listValue.getValuesList();\u00a0 \u00a0 \u00a0 Value parameters = Value.newBuilder().setListValue(listValue).build();\u00a0 \u00a0 \u00a0 PredictResponse predictResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predictionServiceClient.predict(endpointName, instanceList, parameters);\u00a0 \u00a0 \u00a0 System.out.println(\"Predict Tabular Regression Response\");\u00a0 \u00a0 \u00a0 System.out.format(\"\\tDisplay Model Id: %s\\n\", predictResponse.getDeployedModelId());\u00a0 \u00a0 \u00a0 System.out.println(\"Predictions\");\u00a0 \u00a0 \u00a0 for (Value prediction : predictResponse.getPredictionsList()) {\u00a0 \u00a0 \u00a0 \u00a0 TabularRegressionPredictionResult.Builder resultBuilder =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TabularRegressionPredictionResult.newBuilder();\u00a0 \u00a0 \u00a0 \u00a0 TabularRegressionPredictionResult result =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (TabularRegressionPredictionResult) ValueConverter.fromValue(resultBuilder, prediction);\u00a0 \u00a0 \u00a0 \u00a0 System.out.printf(\"\\tUpper bound: %f\\n\", result.getUpperBound());\u00a0 \u00a0 \u00a0 \u00a0 System.out.printf(\"\\tLower bound: %f\\n\", result.getLowerBound());\u00a0 \u00a0 \u00a0 \u00a0 System.out.printf(\"\\tValue: %f\\n\", result.getValue());\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/predict-tabular-regression.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const endpointId = 'YOUR_ENDPOINT_ID';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const aiplatform = require('@google-cloud/aiplatform');const {prediction} =\u00a0 aiplatform.protos.google.cloud.aiplatform.v1.schema.predict;// Imports the Google Cloud Prediction service clientconst {PredictionServiceClient} = aiplatform.v1;// Import the helper module for converting arbitrary protobuf.Value objects.const {helpers} = aiplatform;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst predictionServiceClient = new PredictionServiceClient(clientOptions);async function predictTablesRegression() {\u00a0 // Configure the endpoint resource\u00a0 const endpoint = `projects/${project}/locations/${location}/endpoints/${endpointId}`;\u00a0 const parameters = helpers.toValue({});\u00a0 // TODO (erschmid): Make this less painful\u00a0 const instance = helpers.toValue({\u00a0 \u00a0 BOOLEAN_2unique_NULLABLE: false,\u00a0 \u00a0 DATETIME_1unique_NULLABLE: '2019-01-01 00:00:00',\u00a0 \u00a0 DATE_1unique_NULLABLE: '2019-01-01',\u00a0 \u00a0 FLOAT_5000unique_NULLABLE: 1611,\u00a0 \u00a0 FLOAT_5000unique_REPEATED: [2320, 1192],\u00a0 \u00a0 INTEGER_5000unique_NULLABLE: '8',\u00a0 \u00a0 NUMERIC_5000unique_NULLABLE: 16,\u00a0 \u00a0 STRING_5000unique_NULLABLE: 'str-2',\u00a0 \u00a0 STRUCT_NULLABLE: {\u00a0 \u00a0 \u00a0 BOOLEAN_2unique_NULLABLE: false,\u00a0 \u00a0 \u00a0 DATE_1unique_NULLABLE: '2019-01-01',\u00a0 \u00a0 \u00a0 DATETIME_1unique_NULLABLE: '2019-01-01 00:00:00',\u00a0 \u00a0 \u00a0 FLOAT_5000unique_NULLABLE: 1308,\u00a0 \u00a0 \u00a0 FLOAT_5000unique_REPEATED: [2323, 1178],\u00a0 \u00a0 \u00a0 FLOAT_5000unique_REQUIRED: 3089,\u00a0 \u00a0 \u00a0 INTEGER_5000unique_NULLABLE: '1777',\u00a0 \u00a0 \u00a0 NUMERIC_5000unique_NULLABLE: 3323,\u00a0 \u00a0 \u00a0 TIME_1unique_NULLABLE: '23:59:59.999999',\u00a0 \u00a0 \u00a0 STRING_5000unique_NULLABLE: 'str-49',\u00a0 \u00a0 \u00a0 TIMESTAMP_1unique_NULLABLE: '1546387199999999',\u00a0 \u00a0 },\u00a0 \u00a0 TIMESTAMP_1unique_NULLABLE: '1546387199999999',\u00a0 \u00a0 TIME_1unique_NULLABLE: '23:59:59.999999',\u00a0 });\u00a0 const instances = [instance];\u00a0 const request = {\u00a0 \u00a0 endpoint,\u00a0 \u00a0 instances,\u00a0 \u00a0 parameters,\u00a0 };\u00a0 // Predict request\u00a0 const [response] = await predictionServiceClient.predict(request);\u00a0 console.log('Predict tabular regression response');\u00a0 console.log(`\\tDeployed model id : ${response.deployedModelId}`);\u00a0 const predictions = response.predictions;\u00a0 console.log('\\tPredictions :');\u00a0 for (const predictionResultVal of predictions) {\u00a0 \u00a0 const predictionResultObj =\u00a0 \u00a0 \u00a0 prediction.TabularRegressionPredictionResult.fromValue(\u00a0 \u00a0 \u00a0 \u00a0 predictionResultVal\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 console.log(`\\tUpper bound: ${predictionResultObj.upper_bound}`);\u00a0 \u00a0 console.log(`\\tLower bound: ${predictionResultObj.lower_bound}`);\u00a0 \u00a0 console.log(`\\tLower bound: ${predictionResultObj.value}`);\u00a0 }}predictTablesRegression();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/predict_tabular_regression_sample.py) \n```\ndef predict_tabular_regression_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 endpoint_name: str,\u00a0 \u00a0 instances: List[Dict],):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 endpoint = aiplatform.Endpoint(endpoint_name)\u00a0 \u00a0 response = endpoint.predict(instances=instances)\u00a0 \u00a0 for prediction_ in response.predictions:\u00a0 \u00a0 \u00a0 \u00a0 print(prediction_)\n```\n## \u89e3\u8b80\u9810\u6e2c\u7d50\u679c\n\u5206\u985e\u6a21\u578b\u6703\u8fd4\u56de\u7f6e\u4fe1\u5ea6\u5206\u6578\u3002\n\u7f6e\u4fe1\u5ea6\u5206\u6578\u50b3\u9054\u4e86\u6a21\u578b\u5c07\u6bcf\u500b\u985e\u5217\u6216\u6a19\u7c64\u8207\u6e2c\u8a66\u9805\u76f8\u95dc\u806f\u7684\u5f37\u5ea6\u3002\u8a72\u6578\u503c\u8d8a\u9ad8\uff0c\u6a21\u578b\u61c9\u7528\u65bc\u8a72\u9805\u7684\u7f6e\u4fe1\u5ea6\u5c31\u8d8a\u9ad8\u3002\u60a8\u53ef\u4ee5\u6c7a\u5b9a\u63a5\u53d7\u6a21\u578b\u7684\u7f6e\u4fe1\u5ea6\u5206\u6578\u7232\u591a\u9ad8\u3002\u8ff4\u6b78\u6a21\u578b\u6703\u8fd4\u56de\u9810\u6e2c\u503c\u3002\n\u5982\u679c\u6a21\u578b\u4f7f\u7528\u6982\u7387\u63a8\u7406\uff0c\u5247 `value` \u5b57\u6bb5\u5305\u542b\u512a\u5316\u76ee\u6a19\u7684\u6700\u5c0f\u5316\u5668\u3002\u4f8b\u5982\uff0c\u5982\u679c\u512a\u5316\u76ee\u6a19\u7232 `minimize-rmse` \uff0c\u5247 `value` \u5b57\u6bb5\u5305\u542b\u5e73\u5747\u503c\u3002\u5982\u679c\u512a\u5316\u76ee\u6a19\u7232 `minimize-mae` \uff0c\u5247 `value` \u5b57\u6bb5\u5305\u542b\u4e2d\u4f4d\u6578\u503c\u3002\n\u5982\u679c\u6a21\u578b\u5c07\u6982\u7387\u63a8\u7406\u8207\u5206\u4f4d\u6578\u7d50\u5408\u4f7f\u7528\uff0c\u5247\u9664\u4e86\u512a\u5316\u76ee\u6a19\u7684\u6700\u5c0f\u5316\u5668\u4e4b\u5916\uff0cVertex AI \u9084\u63d0\u4f9b\u5206\u4f4d\u6578\u503c\u548c\u9810\u6e2c\u3002\u5206\u4f4d\u6578\u503c\u662f\u5728\u6a21\u578b\u8a13\u7df4\u671f\u9593\u8a2d\u7f6e\u7684\u3002\u5206\u4f4d\u6578\u9810\u6e2c\u662f\u8207\u5206\u4f4d\u6578\u503c\u95dc\u806f\u7684\u9810\u6e2c\u503c\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u77ad\u89e3\u5982\u4f55 [\u5c0e\u51fa\u6a21\u578b](https://cloud.google.com/vertex-ai/docs/export/export-model-tabular?hl=zh-cn) \u3002\n- \u77ad\u89e3 [\u5728\u7dda\u9810\u6e2c\u7684\u50f9\u683c](https://cloud.google.com/vertex-ai/docs/tabular-data/tabular-workflows/pricing?hl=zh-cn) \u3002", "guide": "Vertex AI"}