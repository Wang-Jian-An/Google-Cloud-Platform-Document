{"title": "Vertex AI - Upgrade the environment of an instance", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Upgrade the environment of an instance\n# Upgrade the environment of an instance\nVertex AI Workbench instances are [Deep Learning VM Images](/ai-platform/deep-learning-vm/docs/introduction) instances with JupyterLab notebook environments enabled and ready for use. This page describes how to upgrade the environment of a Vertex AI Workbench instance.\n", "content": "## Reasons to upgrade\nYou might want to upgrade the environment of your Vertex AI Workbench instance for any of the following reasons:\n- To use new capabilities that are only available in a newer version of your environment.\n- To benefit from framework updates, package updates, and bug fixes that have been implemented in a newer version of your environment.## Upgrade methods\nThere are two ways to upgrade a Vertex AI Workbench instance:\n- **Automatic upgrade** : Enable auto upgrade when you create a Vertex AI Workbench instance. During a recurring time period that you specify, Vertex AI Workbench checks whether your instance can be upgraded, and if so, Vertex AI Workbench upgrades your instance.\n- **Manual upgrade** : If an existing Vertex AI Workbench instance meets the [requirements](#requirements) for upgrading, you can upgrade the instance manually.## Requirements and limitations\nBackward compatibility with your Vertex AI Workbench isn't guaranteed. [Make a copy ofyour data](/vertex-ai/docs/general/troubleshooting-workbench#copy-user-data) before upgrading a Vertex AI Workbench instance.\nTo determine whether you can upgrade a specific Vertex AI Workbench instance, see the following requirements and limitations:\n- The Notebooks API must be [enabled in the instance'sGoogle Cloud project](https://console.cloud.google.com/apis/library/notebooks.googleapis.com) . For more information, see [List enabled services](/service-usage/docs/list-services#enabled) and [Enable an API](/endpoints/docs/openapi/enable-api#enabling_an_api) .\n- If your Vertex AI Workbench instance is container-based, Vertex AI Workbench upgrades the OS. The image version depends on the specific image pulled by your Dockerfile.To help make sure the upgrade uses the most recent version of the image, consider using the `latest` tag in your Dockerfile.\nIf upgrading your instance is not an option for you, consider [migrating your data toa new Vertex AI Workbench instance](/vertex-ai/docs/workbench/instances/migrate) .\n## How the upgrade works\nVertex AI Workbench instances that can be upgraded are dual-disk, with one boot disk and one data disk. The upgrade process upgrades the boot disk to a new image while preserving your data on the data disk.\n### Which components are upgraded or preserved?\nThe following table shows which components of your Vertex AI Workbench instance are upgraded and which are preserved.\n| Component         | Upgrade result             |\n|:-------------------------------------------|:----------------------------------------------------------------|\n| Machine learning frameworks    | Upgraded              |\n| Machine learning data      | Preserved              |\n| Preinstalled dependencies     | Upgraded              |\n| User-installed libraries     | By default, must be reinstalled (see User-installed libraries) |\n| Local files in the /home/jupyter directory | Preserved              |\n| Local files in any other /home/ directory | Not preserved             |\n| Preinstalled operating system packages  | Upgraded              |\n| User-installed operating system packages | Not preserved             |\n| GPU drivers        | Upgraded              |\n| Notebooks         | Preserved              |\n| User configurations      | Preserved              |\nBy default, Vertex AI Workbench instances store pip and Conda libraries in the boot disk, which is replaced during an upgrade. When you install pip libraries, you can include the `--user` flag to install them in the `/home/jupyter/` directory, where they are preserved during an upgrade.\nBy default, if you install pip or Conda libraries in a kernel created from a custom container, the libraries only persist while the kernel is running. Each time the kernel is restarted, those libraries will need to be reinstalled. To install persistent libraries in a custom container, include the library installations in your Dockerfile. When installing pip libraries in a kernel created from a custom container, you can include the `--user` flag so that the libraries will persist until instance restart.\n**Note:** The use of custom containers with Vertex AI Workbench instances  is possible but isn't a supported feature. Instead, [add a conda environment](/vertex-ai/docs/workbench/instances/add-environment) to your instance.\n### Environment versions\nYour Vertex AI Workbench instance has an environment version number that you can verify:\n- In the Google Cloud console, go to the **Instances** page. [Go to Instances](https://console.cloud.google.com/vertex-ai/workbench/instances) \n- In the list of instances, find the version number of your instance's environment in the **Version** column.\nVertex AI Workbench updates environments regularly ( [see theDeep Learning VM releasenotes](/deep-learning-vm/docs/release-notes) ), but with each released version, not all of the environments are updated. Vertex AI Workbench only upgrades an instance if there is a newer environment version for the VM image that your instance is based on.\nFor information about how to use a specific version to create a Vertex AI Workbench instance, see [Create a specific version ofa Vertex AI Workbench instance](/vertex-ai/docs/workbench/instances/create-specific-version) .\n## Before you begin\nBefore you upgrade, complete the following steps.\n- Check the [release notes](/vertex-ai/docs/release-notes) to learn about updates to newer versions.\n- [Make a copy ofyour data](/vertex-ai/docs/general/troubleshooting-workbench#copy-user-data) as a backup.## Automatic upgrade\nVertex AI Workbench can automatically upgrade instances that are running. If your instance is stopped, it doesn't automatically upgrade your instance, even if you enabled auto upgrade when you created it.\nWhen you enable automatic environment upgrades, you specify a recurring time period in which Vertex AI Workbench checks whether the instance can be upgraded, and if it can be, upgrades the instance.\nThe time period you specify is stored as a `notebook-upgrade-schedule` metadata entry, in [unix-cronformat](https://man7.org/linux/man-pages/man5/crontab.5.html) , Greenwich Mean Time (GMT).\nTo check whether an instance can be upgraded, Vertex AI Workbench uses the API method [checkUpgradability](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/checkUpgradability) . This method checks for a newer version of the image on the instance's boot disk.\nIf the instance can be upgraded, Vertex AI Workbench uses an internal upgrade method to upgrade the instance.\n### Create a Vertex AI Workbench instance with auto upgrade enabled\nTo create a Vertex AI Workbench instance with auto upgrade enabled, select the **Enable environment auto-upgrade** checkbox and set a schedule when you create the instance.\nYou can specify auto-upgrade by using the Google Cloud console.\n- In the Google Cloud console, go to the **Instances** page. [Go to Instances](https://console.cloud.google.com/vertex-ai/workbench/instances) \n- Click add_box **Create new** .\n- In the **New instance** dialog, click **Advanced options** .\n- In the **Create instance** dialog, in the **Details** section, provide the following information for your new instance:- **Name** : Provide a name for your new instance.\n- **Region** and **Zone** : Select a region and zone for the new instance. For best network performance, select the region that is geographically closest to you. See the available [Vertex AI Workbench locations](/vertex-ai/docs/general/locations#instances) .\n- In the **System health** section, select **Environment auto-upgrade** .\n- Choose whether to upgrade your notebook **Weekly** or **Monthly** .\n- In the **Weekday** field, select the option that you want.\n- In the **Hour** field, choose an hour of the day.\n- Complete the rest of the instance creation dialog, and then click **Create** .\n### Edit the auto upgrade schedule\nTo edit the auto upgrade schedule after you have created your Vertex AI Workbench instance, complete the following steps:\n- In the Google Cloud console, go to the **Instances** page. [Go to Instances](https://console.cloud.google.com/vertex-ai/workbench/instances) \n- Click the instance name that needs the schedule change.\n- On the **Instance details** page, in the **Environment auto-upgrade** section, edit the schedule.\n- Click **Submit** to save your changes.## Manual upgrade\nYou can manually upgrade Vertex AI Workbench instances that meet the [requirements](#requirements) .\n### Check for a newer version of your instance's environment\nTo check whether a newer version of your instance's environment is available, access your instance from the Google Cloud console.\n- In the Google Cloud console, go to the **Instances** page. [Go to Instances](https://console.cloud.google.com/vertex-ai/workbench/instances) \n- Click the instance name that you want to check for availability of a newer environment version.\n- On the **Instance details** page, next to **VM details** , click **View in Compute Engine** .If a newer version of the environment is available, a \"This instance needs to be upgraded\" message appears.\n### Upgrade your instance's environment to a newer version\nYou can manually upgrade a Vertex AI Workbench instance in the Google Cloud console.\n**Note:** Upgrades can affect user operations that are running.\n- In the Google Cloud console, go to the **Instances** page. [Go to Instances](https://console.cloud.google.com/vertex-ai/workbench/instances) \n- If your instance isn't running, [start theinstance](/vertex-ai/docs/workbench/instances/create-console-quickstart#start_your_instance) . Vertex AI Workbench can only upgrade instances when they're running.\n- Click the instance name that you want to upgrade.\n- On the **Instance details** page, click **Upgrade** .\n- Make sure you have [made a copy of the data on yourinstance](/vertex-ai/docs/general/troubleshooting-workbench#copy-user-data) before continuing.\n- After your data is backed up, click **Upgrade** . Vertex AI Workbench upgrades and starts your instance.## Roll back an upgrade\nTo roll back an upgrade, complete the following steps:\n- In the Google Cloud console, go to the **Instances** page. [Go to Instances](https://console.cloud.google.com/vertex-ai/workbench/instances) \n- Click the instance name that you would like to roll back.\n- On the **Instance details** page, under **Upgrade history** , click **Rollback** .\n- Vertex AI Workbench rolls your instance back to the previous version.", "guide": "Vertex AI"}