{"title": "Vertex AI - Configure email notifications", "url": "https://cloud.google.com/vertex-ai/docs/pipelines/email-notifications", "abstract": "# Vertex AI - Configure email notifications\nVertex AI Pipelines can notify you of the success or failure of a pipeline run. When the pipeline exits, Google Cloud sends a final status notification email to the email addresses that you specify.\nThis guide shows how to configure email notifications from a pipeline by using the [Email notification component](/vertex-ai/docs/pipelines/email-notification-component) in the Google Cloud Pipeline Components SDK.\n**Note:** Google retains the email addresses that you send notifications to for up to 14 days for debugging purposes and 30 days for analytics purposes.\n", "content": "## Before you begin\nBefore you build a pipeline that sends notifications, use the following instructions to set up your Google Cloud project and development environment.\n- To get your Google Cloud project ready to run ML pipelines, follow the instructions in the guide to [configuring yourGoogle Cloud project](/vertex-ai/docs/pipelines/configure-project) .\n- Install v1.8 or later of the [Kubeflow Pipelines SDK](https://www.kubeflow.org/docs/components/pipelines/sdk/install-sdk/) . (Optional) Before installing, run the following command to see which version of the [Kubeflow Pipelines SDK](https://www.kubeflow.org/docs/components/pipelines/sdk/install-sdk/) is currently installed:```\n\u00a0 pip freeze | grep kfp\n``` **Note:** To upgrade to the latest version of the [Kubeflow Pipelines SDK](https://www.kubeflow.org/docs/components/pipelines/sdk/install-sdk/) , run the following command: `pip install kfp --upgrade` If an updated version is available, running this command uninstalls your currently installed version and installs the latest version.\n- To use Vertex AI Python client in your pipelines, [install theVertex AI client libraries v1.7 or later](https://github.com/googleapis/python-aiplatform) .\n- To use Vertex AI services in your pipelines, [install theGoogle Cloud Pipeline Components](https://github.com/kubeflow/pipelines/tree/master/components/google-cloud#installation) .## Send a notification from a pipeline\nThe following example shows how to configure email notifications by defining an email notification task ( `notify_email_task` ) and adding it to the pipeline's exit handler ( `dsl.ExitHandler` ). This notification task invokes the `VertexNotificationEmailOp` operator in the email notification component when the pipeline exits.\n```\nfrom kfp import dslfrom kfp import compilerfrom google_cloud_pipeline_components.v1.vertex_notification_email import VertexNotificationEmailOp@dsl.pipeline(\u00a0 \u00a0 name='PIPELINE_NAME',\u00a0 \u00a0 pipeline_root=PIPELINE_ROOT_PATH,)def TASK_NAME():\u00a0 \u00a0 notify_email_task = VertexNotificationEmailOp(recipients=RECIPIENTS_LIST)\u00a0 \u00a0 with dsl.ExitHandler(notify_email_task):\u00a0 \u00a0 \u00a0 \u00a0 # Add your pipeline tasks here.compiler.Compiler().compile(pipeline_func=notification_email_pipeline,\u00a0 \u00a0 \u00a0 \u00a0 package_path='notification_email_pipeline.yaml')\n```\nReplace the following:\n- : The name of the pipeline.\n- : Specify a Cloud Storage URI that your [pipelines service account can access](/vertex-ai/docs/pipelines/configure-project#service-account) . The artifacts of your pipeline runs are stored within the pipeline root.The pipeline root can be set as an argument of the `@kfp.dsl.pipeline` annotation on the pipeline function, or it can be set when you call `create_run_from_job_spec` to create a pipeline run.\n- : The name of the pipeline task for which you're configuring email notifications.\n- : A comma-separated list of up to three email addresses to send the notification email to.\nAdd your pipeline tasks in the body of the `dsl.ExitHandler` exit handler function. By wrapping the tasks in the exit handler function in this way, you specify that the notification email component should report the status of these tasks when the pipeline exits. For example, if a task within the exit handler's contents fails, then the notification reports the status as failed.\n## Example of a notification email\nIf you configure email notifications for a pipeline using the code sample in [Send a notification from a pipeline](#sending-notification-from-pipeline) , Vertex AI sends an email notification similar to the following when the pipeline exits:\nIn this example:\n- `{status}`represents the final state of the task, which can be`SUCCEEDED`,`FAILED`, or`CANCELLED`.\n- `{project}`is the project name.\n- `{pipeline_job_id}`is the unique pipeline job ID.\n- `{start_time}`represents the start time for the pipeline.\n- `{console_link}`is a hyperlink to the pipeline job in the Google Cloud console.", "guide": "Vertex AI"}