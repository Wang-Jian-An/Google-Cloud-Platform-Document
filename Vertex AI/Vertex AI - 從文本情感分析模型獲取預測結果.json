{"title": "Vertex AI - \u5f9e\u6587\u672c\u60c5\u611f\u5206\u6790\u6a21\u578b\u7372\u53d6\u9810\u6e2c\u7d50\u679c", "url": "https://cloud.google.com/vertex-ai/docs/text-data/sentiment-analysis/get-predictions?hl=zh-cn", "abstract": "# Vertex AI - \u5f9e\u6587\u672c\u60c5\u611f\u5206\u6790\u6a21\u578b\u7372\u53d6\u9810\u6e2c\u7d50\u679c\n", "content": "## \u5728\u7dda\u9810\u6e2c\u8207\u6279\u91cf\u9810\u6e2c\u4e4b\u9593\u7684\u5340\u5225\n\u5728\u7dda\u9810\u6e2c\u662f\u5411\u6a21\u578b\u7aef\u9ede\u767c\u51fa\u7684\u540c\u6b65\u8acb\u6c42\u3002\u5982\u679c\u60a8\u8981\u767c\u51fa\u8acb\u6c42\u4ee5\u97ff\u61c9\u61c9\u7528\u8f38\u5165\uff0c\u6216\u8005\u5728\u5176\u4ed6\u9700\u8981\u53ca\u6642\u63a8\u7406\u7684\u60c5\u6cc1\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u5728\u7dda\u9810\u6e2c\u3002\n\u6279\u91cf\u9810\u6e2c\u662f\u7570\u6b65\u8acb\u6c42\u3002\u60a8\u53ef\u4ee5\u76f4\u63a5\u5f9e\u6a21\u578b\u8cc7\u6e90\u8acb\u6c42\u6279\u91cf\u9810\u6e2c\uff0c\u800c\u7121\u9700\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u7aef\u9ede\u3002\u5c0d\u65bc\u6587\u672c\u6578\u64da\uff0c\u5982\u679c\u60a8\u4e0d\u9700\u8981\u7372\u5f97\u5373\u6642\u97ff\u61c9\u4e26\u4e14\u5e0c\u671b\u901a\u904e\u4e00\u500b\u8acb\u6c42\u8655\u7406\u7d2f\u7a4d\u6578\u64da\uff0c\u5247\u53ef\u4ee5\u4f7f\u7528\u6279\u91cf\u9810\u6e2c\u3002\n## \u7372\u53d6\u5728\u7dda\u9810\u6e2c\u7d50\u679c\n### \u5c07\u6a21\u578b\u90e8\u7f72\u5230\u7aef\u9ede\n\u60a8\u5fc5\u9808\u5148\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u7aef\u9ede\uff0c\u7136\u5f8c\u624d\u80fd\u4f7f\u7528\u8a72\u6a21\u578b\u57f7\u884c\u5728\u7dda\u9810\u6e2c\u3002\u90e8\u7f72\u6a21\u578b\u6703\u5c07\u7269\u7406\u8cc7\u6e90\u8207\u6a21\u578b\u76f8\u95dc\u806f\uff0c\u4ee5\u4fbf\u4ee5\u4f4e\u5ef6\u9072\u65b9\u5f0f\u57f7\u884c\u5728\u7dda\u9810\u6e2c\u3002\n\u60a8\u53ef\u4ee5\u5c07\u591a\u500b\u6a21\u578b\u90e8\u7f72\u5230\u4e00\u500b\u7aef\u9ede\uff0c\u4e5f\u53ef\u4ee5\u5c07\u4e00\u500b\u6a21\u578b\u90e8\u7f72\u5230\u591a\u500b\u7aef\u9ede\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u90e8\u7f72\u6a21\u578b\u7684\u65b9\u6cd5\u548c\u4f7f\u7528\u5834\u666f\uff0c\u8acb\u53c3\u95b1 [\u90e8\u7f72\u6a21\u578b\u7c21\u4ecb](https://cloud.google.com/vertex-ai/docs/general/deployment?hl=zh-cn) \u3002\n\u8acb\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u4e4b\u4e00\u90e8\u7f72\u6a21\u578b\uff1a\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684 Vertex AI \u90e8\u5206\u4e2d\uff0c\u8f49\u5230 **\u6a21\u578b** \u9801\u9762\u3002 [\u8f49\u5230\u201c\u6a21\u578b\u201d\u9801\u9762](https://console.cloud.google.com/vertex-ai/models?hl=zh-cn) \n- \u9ede\u64ca\u8981\u90e8\u7f72\u7684\u6a21\u578b\u540d\u7a31\u4ee5\u6253\u958b\u5176\u8a73\u60c5\u9801\u9762\u3002\n- \u9078\u64c7 **\u90e8\u7f72\u548c\u6e2c\u8a66** \u6a19\u7c64\u9801\u3002\u5982\u679c\u6a21\u578b\u5df2\u90e8\u7f72\u5230\u4efb\u4f55\u7aef\u9ede\uff0c **\u90e8\u7f72\u6a21\u578b** (Deploy your model) \u90e8\u5206\u4e2d\u6703\u5217\u51fa\u9019\u4e9b\u7aef\u9ede\u3002\n- \u9ede\u64ca **\u90e8\u7f72\u5230\u7aef\u9ede** \u3002\n- \u5982\u9700\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u65b0\u7684\u7aef\u9ede\uff0c\u8acb\u9078\u64c7 radio_button_checked **\u5275\u5efa\u65b0\u7aef\u9ede** \u4f75\u7232\u65b0\u7aef\u9ede\u63d0\u4f9b\u540d\u7a31\u3002\u5982\u9700\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u73fe\u6709\u7aef\u9ede\uff0c\u8acb\u9078\u64c7 radio_button_checked **\u6dfb\u52a0\u5230\u73fe\u6709\u7aef\u9ede** \uff0c\u7136\u5f8c\u5f9e\u4e0b\u62c9\u5217\u8868\u4e2d\u9078\u64c7\u7aef\u9ede\u3002\u60a8\u53ef\u4ee5\u5c07\u591a\u500b\u6a21\u578b\u6dfb\u52a0\u5230\u4e00\u500b\u7aef\u9ede\uff0c\u4e5f\u53ef\u4ee5\u5c07\u4e00\u500b\u6a21\u578b\u6dfb\u52a0\u5230\u591a\u500b\u7aef\u9ede\u3002 [\u77ad\u89e3\u8a73\u60c5](https://cloud.google.com/vertex-ai/docs/general/deployment?hl=zh-cn) \u3002\n- \u5982\u679c\u60a8\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u5df2\u90e8\u7f72\u6709\u4e00\u500b\u6216\u591a\u500b\u6a21\u578b\u7684\u73fe\u6709\u7aef\u9ede\uff0c\u5247\u5fc5\u9808\u7232\u8981\u90e8\u7f72\u7684\u6a21\u578b\u548c\u5df2\u90e8\u7f72\u6a21\u578b\u66f4\u65b0 **\u6d41\u91cf\u62c6\u5206** \uff0c\u4ee5\u4f7f\u6240\u6709\u767e\u5206\u6bd4\u7684\u7e3d\u548c\u7232 100%\u3002\n- \u9078\u64c7 **AutoML \u6587\u672c** \uff0c\u7136\u5f8c\u6309\u5982\u4e0b\u65b9\u5f0f\u9032\u884c\u914d\u7f6e\uff1a- \u5982\u679c\u60a8\u8981\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u65b0\u7aef\u9ede\uff0c\u8acb\u63a5\u53d7 100 \u7684 **\u6d41\u91cf\u62c6\u5206** \u503c\u3002\u5426\u5247\uff0c\u8acb\u7232\u7aef\u9ede\u4e0a\u6240\u6709\u6a21\u578b\u8abf\u6574\u6d41\u91cf\u62c6\u5206\u503c\uff0c\u4f7f\u5b83\u5011\u7684\u7e3d\u548c\u7232 100\u3002\n- \u7232\u6a21\u578b\u9ede\u64ca **\u5b8c\u6210** \uff0c\u7576\u6240\u6709 **\u6d41\u91cf\u5206\u914d** \u767e\u5206\u6bd4\u5747\u6b63\u78ba\u7121\u8aa4\u6642\uff0c\u9ede\u64ca **\u7e7c\u7e8c** \u3002\u96a8\u5373\u5c07\u986f\u793a\u5728\u5176\u4e2d\u90e8\u7f72\u6a21\u578b\u7684\u5340\u57df\u3002\u6b64\u5340\u57df\u5fc5\u9808\u662f\u60a8\u5728\u5176\u4e2d\u5275\u5efa\u6a21\u578b\u7684\u5340\u57df\u3002\n- \u9ede\u64ca **\u90e8\u7f72** \uff0c\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u7aef\u9ede\u3002\n\u4f7f\u7528 Vertex AI API \u90e8\u7f72\u6a21\u578b\u6642\uff0c\u8acb\u5b8c\u6210\u4ee5\u4e0b\u6b65\u9a5f\uff1a- \u6839\u64da\u9700\u8981\u5275\u5efa\u7aef\u9ede\u3002\n- \u7372\u53d6\u7aef\u9ede ID\u3002\n- \u5c07\u6a21\u578b\u90e8\u7f72\u5230\u7aef\u9ede\u3002\n### \u5275\u5efa\u7aef\u9ede\u5982\u679c\u8981\u5c07\u6a21\u578b\u90e8\u7f72\u5230\u73fe\u6709\u7aef\u9ede\uff0c\u60a8\u53ef\u4ee5\u8df3\u904e\u6b64\u6b65\u9a5f\u3002\n\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528 [gcloud ai endpoints create \u547d\u4ee4](https://cloud.google.com/sdk/gcloud/reference/ai/endpoints/create?hl=zh-cn) \uff1a\n```\ngcloud ai endpoints create \\\u00a0 --region=LOCATION \\\u00a0 --display-name=ENDPOINT_NAME\n```\n\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1a\u7aef\u9ede\u7684\u986f\u793a\u540d\u7a31\u3002\nGoogle Cloud CLI \u5de5\u5177\u53ef\u80fd\u9700\u8981\u5e7e\u79d2\u9418\u624d\u80fd\u5275\u5efa\u7aef\u9ede\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684\u5340\u57df\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u7aef\u9ede\u7684\u986f\u793a\u540d\u7a31\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"display_name\": \"ENDPOINT_NAME\"\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION_ID/endpoints/ENDPOINT_ID/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.CreateEndpointOperationMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2020-11-05T17:45:42.812656Z\",\n  \"updateTime\": \"2020-11-05T17:45:42.812656Z\"\n }\n }\n}\n```\n\u60a8\u53ef\u4ee5\u8f2a\u8a62\u64cd\u4f5c\u72c0\u614b\uff0c\u76f4\u5230\u97ff\u61c9\u5305\u542b\n`\"done\": true`\n\u3002\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/CreateEndpointSample.java) \n```\nimport com.google.api.gax.longrunning.OperationFuture;import com.google.cloud.aiplatform.v1.CreateEndpointOperationMetadata;import com.google.cloud.aiplatform.v1.Endpoint;import com.google.cloud.aiplatform.v1.EndpointServiceClient;import com.google.cloud.aiplatform.v1.EndpointServiceSettings;import com.google.cloud.aiplatform.v1.LocationName;import java.io.IOException;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class CreateEndpointSample {\u00a0 public static void main(String[] args)\u00a0 \u00a0 \u00a0 throws IOException, InterruptedException, ExecutionException, TimeoutException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String endpointDisplayName = \"YOUR_ENDPOINT_DISPLAY_NAME\";\u00a0 \u00a0 createEndpointSample(project, endpointDisplayName);\u00a0 }\u00a0 static void createEndpointSample(String project, String endpointDisplayName)\u00a0 \u00a0 \u00a0 throws IOException, InterruptedException, ExecutionException, TimeoutException {\u00a0 \u00a0 EndpointServiceSettings endpointServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 EndpointServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (EndpointServiceClient endpointServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 EndpointServiceClient.create(endpointServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 LocationName locationName = LocationName.of(project, location);\u00a0 \u00a0 \u00a0 Endpoint endpoint = Endpoint.newBuilder().setDisplayName(endpointDisplayName).build();\u00a0 \u00a0 \u00a0 OperationFuture<Endpoint, CreateEndpointOperationMetadata> endpointFuture =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 endpointServiceClient.createEndpointAsync(locationName, endpoint);\u00a0 \u00a0 \u00a0 System.out.format(\"Operation name: %s\\n\", endpointFuture.getInitialFuture().get().getName());\u00a0 \u00a0 \u00a0 System.out.println(\"Waiting for operation to finish...\");\u00a0 \u00a0 \u00a0 Endpoint endpointResponse = endpointFuture.get(300, TimeUnit.SECONDS);\u00a0 \u00a0 \u00a0 System.out.println(\"Create Endpoint Response\");\u00a0 \u00a0 \u00a0 System.out.format(\"Name: %s\\n\", endpointResponse.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"Display Name: %s\\n\", endpointResponse.getDisplayName());\u00a0 \u00a0 \u00a0 System.out.format(\"Description: %s\\n\", endpointResponse.getDescription());\u00a0 \u00a0 \u00a0 System.out.format(\"Labels: %s\\n\", endpointResponse.getLabelsMap());\u00a0 \u00a0 \u00a0 System.out.format(\"Create Time: %s\\n\", endpointResponse.getCreateTime());\u00a0 \u00a0 \u00a0 System.out.format(\"Update Time: %s\\n\", endpointResponse.getUpdateTime());\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/create-endpoint.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const endpointDisplayName = 'YOUR_ENDPOINT_DISPLAY_NAME';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';// Imports the Google Cloud Endpoint Service Client libraryconst {EndpointServiceClient} = require('@google-cloud/aiplatform');// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst endpointServiceClient = new EndpointServiceClient(clientOptions);async function createEndpoint() {\u00a0 // Configure the parent resource\u00a0 const parent = `projects/${project}/locations/${location}`;\u00a0 const endpoint = {\u00a0 \u00a0 displayName: endpointDisplayName,\u00a0 };\u00a0 const request = {\u00a0 \u00a0 parent,\u00a0 \u00a0 endpoint,\u00a0 };\u00a0 // Get and print out a list of all the endpoints for this resource\u00a0 const [response] = await endpointServiceClient.createEndpoint(request);\u00a0 console.log(`Long running operation : ${response.name}`);\u00a0 // Wait for operation to complete\u00a0 await response.promise();\u00a0 const result = response.result;\u00a0 console.log('Create endpoint response');\u00a0 console.log(`\\tName : ${result.name}`);\u00a0 console.log(`\\tDisplay name : ${result.displayName}`);\u00a0 console.log(`\\tDescription : ${result.description}`);\u00a0 console.log(`\\tLabels : ${JSON.stringify(result.labels)}`);\u00a0 console.log(`\\tCreate time : ${JSON.stringify(result.createTime)}`);\u00a0 console.log(`\\tUpdate time : ${JSON.stringify(result.updateTime)}`);}createEndpoint();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/create_endpoint_sample.py) \n```\ndef create_endpoint_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 display_name: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 endpoint = aiplatform.Endpoint.create(\u00a0 \u00a0 \u00a0 \u00a0 display_name=display_name,\u00a0 \u00a0 \u00a0 \u00a0 project=project,\u00a0 \u00a0 \u00a0 \u00a0 location=location,\u00a0 \u00a0 )\u00a0 \u00a0 print(endpoint.display_name)\u00a0 \u00a0 print(endpoint.resource_name)\u00a0 \u00a0 return endpoint\n```\n### \u6aa2\u7d22\u7aef\u9ede ID\u60a8\u9700\u8981\u7aef\u9ede ID \u624d\u80fd\u90e8\u7f72\u6a21\u578b\u3002\n\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528 [gcloud ai endpoints list \u547d\u4ee4](https://cloud.google.com/sdk/gcloud/reference/ai/endpoints/list?hl=zh-cn) \uff1a\n```\ngcloud ai endpoints list \\\u00a0 --region=LOCATION \\\u00a0 --filter=display_name=ENDPOINT_NAME\n```\n\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1a\u7aef\u9ede\u7684\u986f\u793a\u540d\u7a31\u3002\n\u8acb\u6ce8\u610f `ENDPOINT_ID` \u5217\u4e2d\u986f\u793a\u7684\u6578\u5b57\u3002\u8acb\u5728\u4ee5\u4e0b\u6b65\u9a5f\u4e2d\u4f7f\u7528\u6b64 ID\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u7aef\u9ede\u7684\u986f\u793a\u540d\u7a31\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints?filter=display_name=ENDPOINT_NAME\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"endpoints\": [ {\n  \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION_ID/endpoints/ENDPOINT_ID\",\n  \"displayName\": \"ENDPOINT_NAME\",\n  \"etag\": \"AMEw9yPz5pf4PwBHbRWOGh0PcAxUdjbdX2Jm3QO_amguy3DbZGP5Oi_YUKRywIE-BtLx\",\n  \"createTime\": \"2020-04-17T18:31:11.585169Z\",\n  \"updateTime\": \"2020-04-17T18:35:08.568959Z\"\n }\n ]\n}\n```\n\u8acb\u8a18\u4e0b\n\u3002### \u90e8\u7f72\u6a21\u578b\u5728\u4e0b\u9762\u9078\u64c7\u60a8\u7684\u8a9e\u8a00\u6216\u74b0\u5883\u5c0d\u61c9\u7684\u6a19\u7c64\u9801\uff1a\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528 [gcloud ai endpoints deploy-model \u547d\u4ee4](https://cloud.google.com/sdk/gcloud/reference/ai/endpoints/deploy-model?hl=zh-cn) \u3002\n\u4ee5\u4e0b\u793a\u4f8b\u5c07 `Model` \u90e8\u7f72\u5230 `Endpoint` \uff0c\u4f46\u6c92\u6709\u5728\u591a\u500b `DeployedModel` \u8cc7\u6e90\u4e4b\u9593\u62c6\u5206\u6d41\u91cf\uff1a\n\u5728\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u7aef\u9ede\u7684 ID\u3002\n- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1a\u8981\u90e8\u7f72\u7684\u6a21\u578b\u7684 ID\u3002\n- \uff1a`DeployedModel`\u7684\u540d\u7a31\u3002\u60a8\u9084\u53ef\u4ee5\u5c07`Model`\u7684\u986f\u793a\u540d\u7528\u65bc`DeployedModel`\u3002\n- \uff1a\u6b64\u90e8\u7f72\u7684\u6700\u5c0f\u7bc0\u9ede\u6578\u3002 \u7bc0\u9ede\u6578\u53ef\u6839\u64da\u9810\u6e2c\u8ca0\u8f09\u7684\u9700\u8981\u800c\u589e\u52a0\u6216\u6e1b\u5c11\uff0c\u76f4\u81f3\u9054\u5230\u7bc0\u9ede\u6578\u4e0a\u9650\u4e26\u4e14\u7d55\u4e0d\u6703\u5c11\u65bc\u6b64\u7bc0\u9ede\u6578\u3002\n- \uff1a\u6b64\u90e8\u7f72\u7684\u7bc0\u9ede\u6578\u4e0a\u9650\u3002 \u7bc0\u9ede\u6578\u53ef\u6839\u64da\u9810\u6e2c\u8ca0\u8f09\u7684\u9700\u8981\u800c\u589e\u52a0\u6216\u6e1b\u5c11\uff0c\u76f4\u81f3\u9054\u5230\u6b64\u7bc0\u9ede\u6578\u4e26\u4e14\u7d55\u4e0d\u6703\u5c11\u65bc\u7bc0\u9ede\u6578\u4e0b\u9650\u3002\u5982\u679c\u60a8\u7701\u7565`--max-replica-count`\u6a19\u8a8c\uff0c\u5247\u7bc0\u9ede\u6578\u4e0a\u9650\u5c07\u8a2d\u7f6e\u7232`--min-replica-count`\u7684\u503c\u3002\n\u57f7\u884c [gcloud ai endpoints deploy-model](https://cloud.google.com/sdk/gcloud/reference/ai/endpoints/deploy-model?hl=zh-cn) \u547d\u4ee4\uff1a\u4e0a\u8ff0\u793a\u4f8b\u4e2d\u7684 `--traffic-split=0=100` \u6a19\u8a8c\u6703\u5c07 `Endpoint` \u63a5\u6536\u7684 100% \u9810\u6e2c\u6d41\u91cf\u767c\u9001\u5230\u65b0 `DeployedModel` \uff08\u4f7f\u7528\u81e8\u6642 ID `0` \u8868\u793a\uff09\u3002\u5982\u679c\u60a8\u7684 `Endpoint` \u5df2\u6709\u5176\u4ed6 `DeployedModel` \u8cc7\u6e90\uff0c\u90a3\u9ebc\u60a8\u53ef\u4ee5\u5728\u65b0 `DeployedModel` \u548c\u820a\u8cc7\u6e90\u4e4b\u9593\u62c6\u5206\u6d41\u91cf\u3002\u4f8b\u5982\uff0c\u5982\u9700\u5c07 20% \u7684\u6d41\u91cf\u767c\u9001\u5230\u65b0 `DeployedModel` \uff0c\u5c07 80% \u767c\u9001\u5230\u820a\u7248\u672c\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n\u5728\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u73fe\u6709`DeployedModel`\u7684 ID\u3002\n\u57f7\u884c [gcloud ai endpoints deploy-model](https://cloud.google.com/sdk/gcloud/reference/ai/endpoints/deploy-model?hl=zh-cn) \u547d\u4ee4\uff1a\u90e8\u7f72\u6b64\u6a21\u578b\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u7aef\u9ede\u7684 ID\u3002\n- \uff1a\u8981\u90e8\u7f72\u7684\u6a21\u578b\u7684 ID\u3002\n- \uff1a`DeployedModel`\u7684\u540d\u7a31\u3002\u60a8\u9084\u53ef\u4ee5\u5c07`Model`\u7684\u986f\u793a\u540d\u7528\u65bc`DeployedModel`\u3002\n- \uff1a\u6d41\u5411\u6b64\u7aef\u9ede\u7684\u8981\u8def\u7531\u5230\u4f7f\u7528\u6b64\u64cd\u4f5c\u90e8\u7f72\u7684\u6a21\u578b\u7684\u9810\u6e2c\u6d41\u91cf\u767e\u5206\u6bd4\u3002\u9ed8\u8a8d\u503c\u7232 100\u3002\u6240\u6709\u6d41\u91cf\u767e\u5206\u6bd4\u4e4b\u548c\u5fc5\u9808\u7232 100\u3002 [\u8a73\u7d30\u77ad\u89e3\u6d41\u91cf\u62c6\u5206](https://cloud.google.com/vertex-ai/docs/general/deployment?hl=zh-cn#models-endpoint) \u3002\n- \uff1a\u53ef\u9078\u3002\u5982\u679c\u5c07\u5176\u4ed6\u6a21\u578b\u90e8\u7f72\u5230\u6b64\u7aef\u9ede\uff0c\u60a8\u5fc5\u9808\u66f4\u65b0\u5176\u6d41\u91cf\u62c6\u5206\u767e\u5206\u6bd4\uff0c\u4ee5\u4fbf\u6240\u6709\u767e\u5206\u6bd4\u4e4b\u548c\u7b49\u65bc 100\u3002\n- \uff1a\u5df2\u90e8\u7f72\u6a21\u578b ID \u5bc6\u9470\u7684\u6d41\u91cf\u62c6\u5206\u767e\u5206\u6bd4\u503c\u3002\n- \uff1a\u81ea\u52d5\u751f\u6210\u7684 [\u9805\u76ee\u7de8\u865f](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:deployModel\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"deployedModel\": {\n \"model\": \"projects/PROJECT_ID/locations/us-central1/models/MODEL_ID\",\n \"displayName\": \"DEPLOYED_MODEL_NAME\",\n \"automaticResources\": {\n  }\n },\n \"trafficSplit\": {\n \"0\": TRAFFIC_SPLIT_THIS_MODEL,\n \"DEPLOYED_MODEL_ID_1\": TRAFFIC_SPLIT_MODEL_1,\n \"DEPLOYED_MODEL_ID_2\": TRAFFIC_SPLIT_MODEL_2\n },\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.DeployModelOperationMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2020-10-19T17:53:16.502088Z\",\n  \"updateTime\": \"2020-10-19T17:53:16.502088Z\"\n }\n }\n}\n```\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728\u7de8\u8f2f\u5668\u4e2d\u6253\u958b](https://ide.cloud.google.com/?git_repo=https%3A%2F%2Fgithub.com%2FGoogleCloudPlatform%2Fjava-docs-samples&page=editor&cloudshell_workspace=aiplatform%2Fsrc%2Fmain%2Fjava%2Faiplatform&cloudshell_open_in_editor=DeployModelSample.java&hl=zh-cn) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/DeployModelSample.java) \n```\nimport com.google.api.gax.longrunning.OperationFuture;import com.google.api.gax.longrunning.OperationTimedPollAlgorithm;import com.google.api.gax.retrying.RetrySettings;import com.google.cloud.aiplatform.v1.AutomaticResources;import com.google.cloud.aiplatform.v1.DedicatedResources;import com.google.cloud.aiplatform.v1.DeployModelOperationMetadata;import com.google.cloud.aiplatform.v1.DeployModelResponse;import com.google.cloud.aiplatform.v1.DeployedModel;import com.google.cloud.aiplatform.v1.EndpointName;import com.google.cloud.aiplatform.v1.EndpointServiceClient;import com.google.cloud.aiplatform.v1.EndpointServiceSettings;import com.google.cloud.aiplatform.v1.MachineSpec;import com.google.cloud.aiplatform.v1.ModelName;import com.google.cloud.aiplatform.v1.stub.EndpointServiceStubSettings;import java.io.IOException;import java.util.HashMap;import java.util.Map;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;import org.threeten.bp.Duration;public class DeployModelSample {\u00a0 public static void main(String[] args)\u00a0 \u00a0 \u00a0 throws IOException, InterruptedException, ExecutionException, TimeoutException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String deployedModelDisplayName = \"YOUR_DEPLOYED_MODEL_DISPLAY_NAME\";\u00a0 \u00a0 String endpointId = \"YOUR_ENDPOINT_NAME\";\u00a0 \u00a0 String modelId = \"YOUR_MODEL_ID\";\u00a0 \u00a0 int timeout = 900;\u00a0 \u00a0 deployModelSample(project, deployedModelDisplayName, endpointId, modelId, timeout);\u00a0 }\u00a0 static void deployModelSample(\u00a0 \u00a0 \u00a0 String project,\u00a0 \u00a0 \u00a0 String deployedModelDisplayName,\u00a0 \u00a0 \u00a0 String endpointId,\u00a0 \u00a0 \u00a0 String modelId,\u00a0 \u00a0 \u00a0 int timeout)\u00a0 \u00a0 \u00a0 throws IOException, InterruptedException, ExecutionException, TimeoutException {\u00a0 \u00a0 // Set long-running operations (LROs) timeout\u00a0 \u00a0 final OperationTimedPollAlgorithm operationTimedPollAlgorithm =\u00a0 \u00a0 \u00a0 \u00a0 OperationTimedPollAlgorithm.create(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 RetrySettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setInitialRetryDelay(Duration.ofMillis(5000L))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setRetryDelayMultiplier(1.5)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setMaxRetryDelay(Duration.ofMillis(45000L))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setInitialRpcTimeout(Duration.ZERO)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setRpcTimeoutMultiplier(1.0)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setMaxRpcTimeout(Duration.ZERO)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setTotalTimeout(Duration.ofSeconds(timeout))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build());\u00a0 \u00a0 EndpointServiceStubSettings.Builder endpointServiceStubSettingsBuilder =\u00a0 \u00a0 \u00a0 \u00a0 EndpointServiceStubSettings.newBuilder();\u00a0 \u00a0 endpointServiceStubSettingsBuilder\u00a0 \u00a0 \u00a0 \u00a0 .deployModelOperationSettings()\u00a0 \u00a0 \u00a0 \u00a0 .setPollingAlgorithm(operationTimedPollAlgorithm);\u00a0 \u00a0 EndpointServiceStubSettings endpointStubSettings = endpointServiceStubSettingsBuilder.build();\u00a0 \u00a0 EndpointServiceSettings endpointServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 EndpointServiceSettings.create(endpointStubSettings);\u00a0 \u00a0 endpointServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 endpointServiceSettings.toBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (EndpointServiceClient endpointServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 EndpointServiceClient.create(endpointServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 EndpointName endpointName = EndpointName.of(project, location, endpointId);\u00a0 \u00a0 \u00a0 // key '0' assigns traffic for the newly deployed model\u00a0 \u00a0 \u00a0 // Traffic percentage values must add up to 100\u00a0 \u00a0 \u00a0 // Leave dictionary empty if endpoint should not accept any traffic\u00a0 \u00a0 \u00a0 Map<String, Integer> trafficSplit = new HashMap<>();\u00a0 \u00a0 \u00a0 trafficSplit.put(\"0\", 100);\u00a0 \u00a0 \u00a0 ModelName modelName = ModelName.of(project, location, modelId);\u00a0 \u00a0 \u00a0 AutomaticResources automaticResourcesInput =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AutomaticResources.newBuilder().setMinReplicaCount(1).setMaxReplicaCount(1).build();\u00a0 \u00a0 \u00a0 DeployedModel deployedModelInput =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeployedModel.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setModel(modelName.toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDisplayName(deployedModelDisplayName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setAutomaticResources(automaticResourcesInput)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 OperationFuture<DeployModelResponse, DeployModelOperationMetadata> deployModelResponseFuture =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 endpointServiceClient.deployModelAsync(endpointName, deployedModelInput, trafficSplit);\u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Operation name: %s\\n\", deployModelResponseFuture.getInitialFuture().get().getName());\u00a0 \u00a0 \u00a0 System.out.println(\"Waiting for operation to finish...\");\u00a0 \u00a0 \u00a0 DeployModelResponse deployModelResponse = deployModelResponseFuture.get(20, TimeUnit.MINUTES);\u00a0 \u00a0 \u00a0 System.out.println(\"Deploy Model Response\");\u00a0 \u00a0 \u00a0 DeployedModel deployedModel = deployModelResponse.getDeployedModel();\u00a0 \u00a0 \u00a0 System.out.println(\"\\tDeployed Model\");\u00a0 \u00a0 \u00a0 System.out.format(\"\\t\\tid: %s\\n\", deployedModel.getId());\u00a0 \u00a0 \u00a0 System.out.format(\"\\t\\tmodel: %s\\n\", deployedModel.getModel());\u00a0 \u00a0 \u00a0 System.out.format(\"\\t\\tDisplay Name: %s\\n\", deployedModel.getDisplayName());\u00a0 \u00a0 \u00a0 System.out.format(\"\\t\\tCreate Time: %s\\n\", deployedModel.getCreateTime());\u00a0 \u00a0 \u00a0 DedicatedResources dedicatedResources = deployedModel.getDedicatedResources();\u00a0 \u00a0 \u00a0 System.out.println(\"\\t\\tDedicated Resources\");\u00a0 \u00a0 \u00a0 System.out.format(\"\\t\\t\\tMin Replica Count: %s\\n\", dedicatedResources.getMinReplicaCount());\u00a0 \u00a0 \u00a0 MachineSpec machineSpec = dedicatedResources.getMachineSpec();\u00a0 \u00a0 \u00a0 System.out.println(\"\\t\\t\\tMachine Spec\");\u00a0 \u00a0 \u00a0 System.out.format(\"\\t\\t\\t\\tMachine Type: %s\\n\", machineSpec.getMachineType());\u00a0 \u00a0 \u00a0 System.out.format(\"\\t\\t\\t\\tAccelerator Type: %s\\n\", machineSpec.getAcceleratorType());\u00a0 \u00a0 \u00a0 System.out.format(\"\\t\\t\\t\\tAccelerator Count: %s\\n\", machineSpec.getAcceleratorCount());\u00a0 \u00a0 \u00a0 AutomaticResources automaticResources = deployedModel.getAutomaticResources();\u00a0 \u00a0 \u00a0 System.out.println(\"\\t\\tAutomatic Resources\");\u00a0 \u00a0 \u00a0 System.out.format(\"\\t\\t\\tMin Replica Count: %s\\n\", automaticResources.getMinReplicaCount());\u00a0 \u00a0 \u00a0 System.out.format(\"\\t\\t\\tMax Replica Count: %s\\n\", automaticResources.getMaxReplicaCount());\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/deploy-model.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const modelId = \"YOUR_MODEL_ID\";// const endpointId = 'YOUR_ENDPOINT_ID';// const deployedModelDisplayName = 'YOUR_DEPLOYED_MODEL_DISPLAY_NAME';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const modelName = `projects/${project}/locations/${location}/models/${modelId}`;const endpoint = `projects/${project}/locations/${location}/endpoints/${endpointId}`;// Imports the Google Cloud Endpoint Service Client libraryconst {EndpointServiceClient} = require('@google-cloud/aiplatform');// Specifies the location of the api endpoint:const clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst endpointServiceClient = new EndpointServiceClient(clientOptions);async function deployModel() {\u00a0 // Configure the parent resource\u00a0 // key '0' assigns traffic for the newly deployed model\u00a0 // Traffic percentage values must add up to 100\u00a0 // Leave dictionary empty if endpoint should not accept any traffic\u00a0 const trafficSplit = {0: 100};\u00a0 const deployedModel = {\u00a0 \u00a0 // format: 'projects/{project}/locations/{location}/models/{model}'\u00a0 \u00a0 model: modelName,\u00a0 \u00a0 displayName: deployedModelDisplayName,\u00a0 \u00a0 // AutoML Vision models require `automatic_resources` field\u00a0 \u00a0 // Other model types may require `dedicated_resources` field instead\u00a0 \u00a0 automaticResources: {minReplicaCount: 1, maxReplicaCount: 1},\u00a0 };\u00a0 const request = {\u00a0 \u00a0 endpoint,\u00a0 \u00a0 deployedModel,\u00a0 \u00a0 trafficSplit,\u00a0 };\u00a0 // Get and print out a list of all the endpoints for this resource\u00a0 const [response] = await endpointServiceClient.deployModel(request);\u00a0 console.log(`Long running operation : ${response.name}`);\u00a0 // Wait for operation to complete\u00a0 await response.promise();\u00a0 const result = response.result;\u00a0 console.log('Deploy model response');\u00a0 const modelDeployed = result.deployedModel;\u00a0 console.log('\\tDeployed model');\u00a0 if (!modelDeployed) {\u00a0 \u00a0 console.log('\\t\\tId : {}');\u00a0 \u00a0 console.log('\\t\\tModel : {}');\u00a0 \u00a0 console.log('\\t\\tDisplay name : {}');\u00a0 \u00a0 console.log('\\t\\tCreate time : {}');\u00a0 \u00a0 console.log('\\t\\tDedicated resources');\u00a0 \u00a0 console.log('\\t\\t\\tMin replica count : {}');\u00a0 \u00a0 console.log('\\t\\t\\tMachine spec {}');\u00a0 \u00a0 console.log('\\t\\t\\t\\tMachine type : {}');\u00a0 \u00a0 console.log('\\t\\t\\t\\tAccelerator type : {}');\u00a0 \u00a0 console.log('\\t\\t\\t\\tAccelerator count : {}');\u00a0 \u00a0 console.log('\\t\\tAutomatic resources');\u00a0 \u00a0 console.log('\\t\\t\\tMin replica count : {}');\u00a0 \u00a0 console.log('\\t\\t\\tMax replica count : {}');\u00a0 } else {\u00a0 \u00a0 console.log(`\\t\\tId : ${modelDeployed.id}`);\u00a0 \u00a0 console.log(`\\t\\tModel : ${modelDeployed.model}`);\u00a0 \u00a0 console.log(`\\t\\tDisplay name : ${modelDeployed.displayName}`);\u00a0 \u00a0 console.log(`\\t\\tCreate time : ${modelDeployed.createTime}`);\u00a0 \u00a0 const dedicatedResources = modelDeployed.dedicatedResources;\u00a0 \u00a0 console.log('\\t\\tDedicated resources');\u00a0 \u00a0 if (!dedicatedResources) {\u00a0 \u00a0 \u00a0 console.log('\\t\\t\\tMin replica count : {}');\u00a0 \u00a0 \u00a0 console.log('\\t\\t\\tMachine spec {}');\u00a0 \u00a0 \u00a0 console.log('\\t\\t\\t\\tMachine type : {}');\u00a0 \u00a0 \u00a0 console.log('\\t\\t\\t\\tAccelerator type : {}');\u00a0 \u00a0 \u00a0 console.log('\\t\\t\\t\\tAccelerator count : {}');\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tMin replica count : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${dedicatedResources.minReplicaCount}`\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 const machineSpec = dedicatedResources.machineSpec;\u00a0 \u00a0 \u00a0 console.log('\\t\\t\\tMachine spec');\u00a0 \u00a0 \u00a0 console.log(`\\t\\t\\t\\tMachine type : ${machineSpec.machineType}`);\u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\t\\tAccelerator type : ${machineSpec.acceleratorType}`\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\t\\tAccelerator count : ${machineSpec.acceleratorCount}`\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 }\u00a0 \u00a0 const automaticResources = modelDeployed.automaticResources;\u00a0 \u00a0 console.log('\\t\\tAutomatic resources');\u00a0 \u00a0 if (!automaticResources) {\u00a0 \u00a0 \u00a0 console.log('\\t\\t\\tMin replica count : {}');\u00a0 \u00a0 \u00a0 console.log('\\t\\t\\tMax replica count : {}');\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tMin replica count : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${automaticResources.minReplicaCount}`\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tMax replica count : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${automaticResources.maxReplicaCount}`\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 }\u00a0 }}deployModel();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728\u7de8\u8f2f\u5668\u4e2d\u6253\u958b](https://ide.cloud.google.com/?git_repo=https%3A%2F%2Fgithub.com%2Fgoogleapis%2Fpython-aiplatform&page=editor&cloudshell_workspace=samples%2Fmodel-builder&cloudshell_open_in_editor=deploy_model_with_automatic_resources_sample.py&hl=zh-cn) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/deploy_model_with_automatic_resources_sample.py) \n```\ndef deploy_model_with_automatic_resources_sample(\u00a0 \u00a0 project,\u00a0 \u00a0 location,\u00a0 \u00a0 model_name: str,\u00a0 \u00a0 endpoint: Optional[aiplatform.Endpoint] = None,\u00a0 \u00a0 deployed_model_display_name: Optional[str] = None,\u00a0 \u00a0 traffic_percentage: Optional[int] = 0,\u00a0 \u00a0 traffic_split: Optional[Dict[str, int]] = None,\u00a0 \u00a0 min_replica_count: int = 1,\u00a0 \u00a0 max_replica_count: int = 1,\u00a0 \u00a0 metadata: Optional[Sequence[Tuple[str, str]]] = (),\u00a0 \u00a0 sync: bool = True,):\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 model_name: A fully-qualified model resource name or model ID.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Example: \"projects/123/locations/us-central1/models/456\" or\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"456\" when project and location are initialized or passed.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 model = aiplatform.Model(model_name=model_name)\u00a0 \u00a0 model.deploy(\u00a0 \u00a0 \u00a0 \u00a0 endpoint=endpoint,\u00a0 \u00a0 \u00a0 \u00a0 deployed_model_display_name=deployed_model_display_name,\u00a0 \u00a0 \u00a0 \u00a0 traffic_percentage=traffic_percentage,\u00a0 \u00a0 \u00a0 \u00a0 traffic_split=traffic_split,\u00a0 \u00a0 \u00a0 \u00a0 min_replica_count=min_replica_count,\u00a0 \u00a0 \u00a0 \u00a0 max_replica_count=max_replica_count,\u00a0 \u00a0 \u00a0 \u00a0 metadata=metadata,\u00a0 \u00a0 \u00a0 \u00a0 sync=sync,\u00a0 \u00a0 )\u00a0 \u00a0 model.wait()\u00a0 \u00a0 print(model.display_name)\u00a0 \u00a0 print(model.resource_name)\u00a0 \u00a0 return model\n```\n## \u7372\u53d6\u64cd\u4f5c\u72c0\u614b\n\u67d0\u4e9b\u8acb\u6c42\u6703\u5553\u52d5\u9700\u8981\u4e00\u4e9b\u6642\u9593\u624d\u80fd\u5b8c\u6210\u7684\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u3002\u9019\u4e9b\u8acb\u6c42\u6703\u8fd4\u56de\u64cd\u4f5c\u540d\u7a31\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8a72\u540d\u7a31\u67e5\u770b\u64cd\u4f5c\u72c0\u614b\u6216\u53d6\u6d88\u64cd\u4f5c\u3002Vertex AI \u63d0\u4f9b\u8f14\u52a9\u65b9\u6cd5\u4f86\u8abf\u7528\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c](https://cloud.google.com/vertex-ai/docs/general/long-running-operations?hl=zh-cn) \u3002\n### \u4f7f\u7528\u5df2\u90e8\u7f72\u7684\u6a21\u578b\u9032\u884c\u5728\u7dda\u9810\u6e2c\n\u5982\u9700\u9032\u884c\u5728\u7dda\u9810\u6e2c\uff0c\u8acb\u5411\u6a21\u578b\u63d0\u4ea4\u4e00\u500b\u6216\u591a\u500b\u6e2c\u8a66\u9805\u9032\u884c\u5206\u6790\uff0c\u6a21\u578b\u6703\u8fd4\u56de\u57fa\u65bc\u6a21\u578b\u76ee\u6a19\u7684\u7d50\u679c\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u9810\u6e2c\u7d50\u679c\uff0c\u8acb\u53c3\u95b1 [\u89e3\u8b80\u7d50\u679c](https://cloud.google.com/vertex-ai/docs/predictions/interpreting-results-automl?hl=zh-cn) \u9801\u9762\u3002\n\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u8acb\u6c42\u5728\u7dda\u9810\u6e2c\u3002\u60a8\u7684\u6a21\u578b\u5fc5\u9808\u90e8\u7f72\u5230\u7aef\u9ede\u3002- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684 Vertex AI \u90e8\u5206\u4e2d\uff0c\u8f49\u5230 **\u6a21\u578b** \u9801\u9762\u3002 [\u8f49\u5230\u201c\u6a21\u578b\u201d\u9801\u9762](https://console.cloud.google.com/vertex-ai/models?hl=zh-cn) \n- \u5f9e\u6a21\u578b\u5217\u8868\u4e2d\uff0c\u9ede\u64ca\u8981\u5411\u5176\u8acb\u6c42\u9810\u6e2c\u7684\u6a21\u578b\u7684\u540d\u7a31\u3002\n- \u9078\u64c7 **\u90e8\u7f72\u548c\u6e2c\u8a66** \u6a19\u7c64\u9801\u3002\n- \u5728 **\u6e2c\u8a66\u6a21\u578b** \u90e8\u5206\u4e0b\uff0c\u6dfb\u52a0\u6e2c\u8a66\u9805\u4ee5\u8acb\u6c42\u9810\u6e2c\u3002\u7528\u65bc\u6587\u672c\u76ee\u6a19\u7684 AutoML \u6a21\u578b\u8981\u6c42\u60a8\u5728\u6587\u672c\u5b57\u6bb5\u4e2d\u8f38\u5165\u5167\u5bb9\uff0c\u7136\u5f8c\u9ede\u64ca **\u9810\u6e2c** \u3002\u5982\u9700\u77ad\u89e3\u5c40\u90e8\u7279\u5fb5\u91cd\u8981\u6027\uff0c\u8acb\u53c3\u95b1 [\u7372\u53d6\u8aaa\u660e](#explanations-api) \u3002\u9810\u6e2c\u5b8c\u6210\u5f8c\uff0cVertex AI \u6703\u5728\u63a7\u5236\u6aaf\u4e2d\u8fd4\u56de\u7d50\u679c\u3002\n\u4f7f\u7528 Vertex AI API \u4f86\u8acb\u6c42\u5728\u7dda\u9810\u6e2c\u3002\u60a8\u7684\u6a21\u578b\u5fc5\u9808\u90e8\u7f72\u5230\u7aef\u9ede\u3002- \u5275\u5efa\u540d\u7232 `request.json` \u4e14\u5305\u542b\u4ee5\u4e0b\u5167\u5bb9\u7684\u6587\u4ef6\uff1a```\n{\u00a0 \"instances\": [{\u00a0 \u00a0 \"mimeType\": \"text/plain\",\u00a0 \u00a0 \"content\": \"CONTENT\"\u00a0 }]}\n```\u8acb\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u7528\u65bc\u9032\u884c\u9810\u6e2c\u7684\u6587\u672c\u7247\u6bb5\u3002\n- \u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud ai endpoints predict ENDPOINT_ID \\\u00a0 --region=LOCATION_ID \\\u00a0 --json-request=request.json\n```\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u7aef\u9ede\u7684 ID\u3002\n- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u7aef\u9ede\u6240\u5728\u7684\u5340\u57df\u3002\u4f8b\u5982`us-central1`\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \n- \uff1a\u7aef\u9ede\u7684 ID\n- \uff1a\u7528\u65bc\u9032\u884c\u9810\u6e2c\u7684\u6587\u672c\u7247\u6bb5\u3002\n- \uff1a\u7528\u65bc\u9032\u884c\u9810\u6e2c\u7684\u5df2\u90e8\u7f72\u6a21\u578b\u7684 ID\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:predict\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"instances\": [{\n \"mimeType\": \"text/plain\",\n \"content\": \"CONTENT\"\n }]\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:predict\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:predict\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"prediction\":\n {\n  sentiment\": 8\n },\n \"deployedModelId\": \"1234567890123456789\"\n}\n```\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/PredictTextSentimentAnalysisSample.java) \n```\nimport com.google.cloud.aiplatform.v1.EndpointName;import com.google.cloud.aiplatform.v1.PredictResponse;import com.google.cloud.aiplatform.v1.PredictionServiceClient;import com.google.cloud.aiplatform.v1.PredictionServiceSettings;import com.google.gson.JsonObject;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.ArrayList;import java.util.List;public class PredictTextSentimentAnalysisSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String content = \"YOUR_TEXT_CONTENT\";\u00a0 \u00a0 String endpointId = \"YOUR_ENDPOINT_ID\";\u00a0 \u00a0 predictTextSentimentAnalysis(project, content, endpointId);\u00a0 }\u00a0 static void predictTextSentimentAnalysis(String project, String content, String endpointId)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 PredictionServiceSettings predictionServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (PredictionServiceClient predictionServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceClient.create(predictionServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 // Use JsonObject to ensure safe serialization of the content; handles characters like `\"`.\u00a0 \u00a0 \u00a0 JsonObject contentJsonObject = new JsonObject();\u00a0 \u00a0 \u00a0 contentJsonObject.addProperty(\"content\", content);\u00a0 \u00a0 \u00a0 EndpointName endpointName = EndpointName.of(project, location, endpointId);\u00a0 \u00a0 \u00a0 Value parameter = Value.newBuilder().setNumberValue(0).setNumberValue(5).build();\u00a0 \u00a0 \u00a0 Value.Builder instance = Value.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(contentJsonObject.toString(), instance);\u00a0 \u00a0 \u00a0 List<Value> instances = new ArrayList<>();\u00a0 \u00a0 \u00a0 instances.add(instance.build());\u00a0 \u00a0 \u00a0 PredictResponse predictResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predictionServiceClient.predict(endpointName, instances, parameter);\u00a0 \u00a0 \u00a0 System.out.println(\"Predict Text Sentiment Analysis Response\");\u00a0 \u00a0 \u00a0 System.out.format(\"\\tDeployed Model Id: %s\\n\", predictResponse.getDeployedModelId());\u00a0 \u00a0 \u00a0 System.out.println(\"Predictions\");\u00a0 \u00a0 \u00a0 for (Value prediction : predictResponse.getPredictionsList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"\\tPrediction: %s\\n\", prediction);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/predict-text-sentiment-analysis.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const text = \"YOUR_PREDICTION_TEXT\";// const endpointId = \"YOUR_ENDPOINT_ID\";// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const aiplatform = require('@google-cloud/aiplatform');const {instance, prediction} =\u00a0 aiplatform.protos.google.cloud.aiplatform.v1.schema.predict;// Imports the Google Cloud Model Service Client libraryconst {PredictionServiceClient} = aiplatform.v1;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst predictionServiceClient = new PredictionServiceClient(clientOptions);async function predictTextSentimentAnalysis() {\u00a0 // Configure the endpoint resource\u00a0 const endpoint = `projects/${project}/locations/${location}/endpoints/${endpointId}`;\u00a0 const instanceObj = new instance.TextSentimentPredictionInstance({\u00a0 \u00a0 content: text,\u00a0 });\u00a0 const instanceVal = instanceObj.toValue();\u00a0 const instances = [instanceVal];\u00a0 const request = {\u00a0 \u00a0 endpoint,\u00a0 \u00a0 instances,\u00a0 };\u00a0 // Predict request\u00a0 const [response] = await predictionServiceClient.predict(request);\u00a0 console.log('Predict text sentiment analysis response:');\u00a0 console.log(`\\tDeployed model id : ${response.deployedModelId}`);\u00a0 console.log('\\nPredictions :');\u00a0 for (const predictionResultValue of response.predictions) {\u00a0 \u00a0 const predictionResult =\u00a0 \u00a0 \u00a0 prediction.TextSentimentPredictionResult.fromValue(\u00a0 \u00a0 \u00a0 \u00a0 predictionResultValue\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 console.log(`\\tSentiment measure: ${predictionResult.sentiment}`);\u00a0 }}predictTextSentimentAnalysis();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/predict_text_sentiment_analysis_sample.py) \n```\ndef predict_text_sentiment_analysis_sample(project, location, endpoint_id, content):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 endpoint = aiplatform.Endpoint(endpoint_id)\u00a0 \u00a0 response = endpoint.predict(instances=[{\"content\": content}], parameters={})\u00a0 \u00a0 for prediction_ in response.predictions:\u00a0 \u00a0 \u00a0 \u00a0 print(prediction_)\n```\n## \u5f9e\u6587\u672c\u60c5\u611f\u5206\u6790\u6a21\u578b\u7372\u53d6\u6279\u91cf\u9810\u6e2c\u7d50\u679c\n\u5982\u9700\u767c\u51fa\u6279\u91cf\u9810\u6e2c\u8acb\u6c42\uff0c\u8acb\u6307\u5b9a [\u8f38\u5165\u6e90](#input_data) \u548c Vertex AI \u5b58\u5132\u9810\u6e2c\u7d50\u679c\u6240\u63a1\u7528\u7684 [\u8f38\u51fa\u683c\u5f0f](#output_format) \u3002\n**\u6ce8\u610f** \uff1a\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u5275\u5efa\u6279\u91cf\u9810\u6e2c\u6642\uff0c\u7232\u4e86\u6700\u5927\u9650\u5ea6\u5730\u6e1b\u5c11\u8655\u7406\u6642\u9593\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u9078\u64c7\u7684\u8f38\u5165\u548c\u8f38\u51fa\u4f4d\u7f6e\u8207\u6a21\u578b\u4f4d\u65bc\u540c\u4e00\u5340\u57df\u3002\u5982\u679c\u4f7f\u7528 API \u5275\u5efa\u6279\u91cf\u9810\u6e2c\uff0c\u8acb\u5411\u4f4d\u65bc\u8f38\u5165\u548c\u8f38\u51fa\u4f4d\u7f6e\u6240\u5728\u5340\u57df\u6216\u5728\u5730\u7406\u4f4d\u7f6e\u4e0a\u9760\u8fd1\u8f38\u5165\u548c\u8f38\u51fa\u4f4d\u7f6e\u7684\u670d\u52d9\u7aef\u9ede\uff08\u4f8b\u5982 `https://us-central1-aiplatform.googleapis.com` \uff09\u767c\u9001\u8acb\u6c42\u3002\n### \u8f38\u5165\u6578\u64da\u8981\u6c42\n\u6279\u91cf\u8acb\u6c42\u7684\u8f38\u5165\u6307\u5b9a\u8981\u767c\u9001\u5230\u6a21\u578b\u9032\u884c\u9810\u6e2c\u7684\u5167\u5bb9\u3002\u5c0d\u65bc\u6587\u672c\u60c5\u611f\u5206\u6790\u6a21\u578b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 JSON \u884c\u6587\u4ef6\u6307\u5b9a\u7528\u65bc\u9032\u884c\u9810\u6e2c\u7684\u6587\u6a94\u5217\u8868\uff0c\u7136\u5f8c\u5c07 JSON \u884c\u6587\u4ef6\u5b58\u5132\u5728 Cloud Storage \u5b58\u5132\u6876\u4e2d\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u8f38\u5165 JSON \u884c\u6587\u4ef6\u4e2d\u7684\u4e00\u884c\u3002\n```\n{\"content\": \"gs://sourcebucket/datasets/texts/source_text.txt\", \"mimeType\": \"text/plain\"}\n```\n### \u8acb\u6c42\u6279\u91cf\u9810\u6e2c\n\u5c0d\u65bc\u6279\u91cf\u9810\u6e2c\u8acb\u6c42\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u6216 Vertex AI API\u3002\u6279\u91cf\u9810\u6e2c\u4efb\u52d9\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u6642\u9593\u624d\u80fd\u5b8c\u6210\uff0c\u5177\u9ad4\u53d6\u6c7a\u65bc\u63d0\u4ea4\u7684\u8f38\u5165\u6578\u64da\u9805\u6578\u91cf\u3002\n\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u8acb\u6c42\u6279\u91cf\u9810\u6e2c\u3002- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684 Vertex AI \u90e8\u5206\u4e2d\uff0c\u524d\u5f80 **\u6279\u91cf\u9810\u6e2c** \u9801\u9762\u3002 [\u524d\u5f80\u201c\u6279\u91cf\u9810\u6e2c\u201d\u9801\u9762](https://console.cloud.google.com/vertex-ai/batch-predictions?hl=zh-cn) \n- \u9ede\u64ca **\u5275\u5efa** \u4ee5\u6253\u958b **\u65b0\u5efa\u6279\u91cf\u9810\u6e2c** \u7a97\u53e3\uff0c\u5b8c\u6210\u4ee5\u4e0b\u6b65\u9a5f\uff1a- \u8f38\u5165\u6279\u91cf\u9810\u6e2c\u7684\u540d\u7a31\u3002\n- \u5c0d\u65bc **\u6a21\u578b\u540d\u7a31** \uff0c\u9078\u64c7\u8981\u7528\u65bc\u6b64\u6279\u91cf\u9810\u6e2c\u7684\u6a21\u578b\u7684\u540d\u7a31\u3002\n- \u5c0d\u65bc **\u4f86\u6e90\u8def\u5f91** \uff0c\u6307\u5b9a JSON \u884c\u8f38\u5165\u6587\u4ef6\u6240\u5728\u7684 Cloud Storage \u4f4d\u7f6e\u3002\n- \u5c0d\u65bc **\u76ee\u6a19\u8def\u5f91** \uff0c\u6307\u5b9a\u5b58\u5132\u6279\u91cf\u9810\u6e2c\u7d50\u679c\u7684 Cloud Storage \u4f4d\u7f6e\u3002 **\u8f38\u51fa** \u683c\u5f0f\u53d6\u6c7a\u65bc\u6a21\u578b\u7684\u76ee\u6a19\u3002\u7528\u65bc\u6587\u672c\u76ee\u6a19\u7684 AutoML \u6a21\u578b\u6703\u8f38\u51fa JSON \u884c\u6587\u4ef6\u3002\n\u4f7f\u7528 Vertex AI API \u767c\u9001\u6279\u91cf\u9810\u6e2c\u8acb\u6c42\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u5b58\u5132\u6a21\u578b\u548c\u57f7\u884c\u6279\u91cf\u9810\u6e2c\u4f5c\u696d\u7684\u5340\u57df\u3002\u4f8b\u5982`us-central1`\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \n- \uff1a\u6279\u8655\u7406\u4f5c\u696d\u7684\u986f\u793a\u540d\n- \uff1a\u7528\u65bc\u57f7\u884c\u9810\u6e2c\u7684\u6a21\u578b\u7684 ID\n- \uff1a\u8f38\u5165 JSON \u884c\u6587\u4ef6\u6240\u5728\u7684 Cloud Storage URI\u3002\n- \uff1a\u60a8\u7684 Cloud Storage \u5b58\u5132\u6876\n- \uff1a\u81ea\u52d5\u751f\u6210\u7684 [\u9805\u76ee\u7de8\u865f](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/batchPredictionJobs\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"displayName\": \"BATCH_JOB_NAME\",\n \"model\": \"projects/PROJECT_ID/locations/LOCATION_ID/models/MODEL_ID\",\n \"inputConfig\": {\n  \"instancesFormat\": \"jsonl\",\n  \"gcsSource\": {\n   \"uris\": [\"URI\"]\n  }\n },\n \"outputConfig\": {\n  \"predictionsFormat\": \"jsonl\",\n  \"gcsDestination\": {\n   \"outputUriPrefix\": \"OUTPUT_BUCKET\"\n  }\n }\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/batchPredictionJobs\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/batchPredictionJobs\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/batchPredictionJobs/BATCH_JOB_ID\",\n \"displayName\": \"BATCH_JOB_NAME\",\n \"model\": \"projects/PROJECT_NUMBER/locations/LOCATION/models/MODEL_ID\",\n \"inputConfig\": {\n \"instancesFormat\": \"jsonl\",\n \"gcsSource\": {\n  \"uris\": [  \"CONTENT\"\n  ]\n }\n },\n \"outputConfig\": {\n \"predictionsFormat\": \"jsonl\",\n \"gcsDestination\": {\n  \"outputUriPrefix\": \"BUCKET\"\n }\n },\n \"state\": \"JOB_STATE_PENDING\",\n \"completionStats\": {\n \"incompleteCount\": \"-1\"\n },\n \"createTime\": \"2022-12-19T20:33:48.906074Z\",\n \"updateTime\": \"2022-12-19T20:33:48.906074Z\",\n \"modelVersionId\": \"1\"\n}\n```\n\u60a8\u53ef\u4ee5\u4f7f\u7528 \u8f2a\u8a62\u6279\u91cf\u4f5c\u696d\u7684\u72c0\u614b\uff0c\u76f4\u5230\u4f5c\u696d `state` \u7232 `JOB_STATE_SUCCEEDED` \u3002\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/CreateBatchPredictionJobTextSentimentAnalysisSample.java) \n```\nimport com.google.api.gax.rpc.ApiException;import com.google.cloud.aiplatform.v1.BatchPredictionJob;import com.google.cloud.aiplatform.v1.GcsDestination;import com.google.cloud.aiplatform.v1.GcsSource;import com.google.cloud.aiplatform.v1.JobServiceClient;import com.google.cloud.aiplatform.v1.JobServiceSettings;import com.google.cloud.aiplatform.v1.LocationName;import com.google.cloud.aiplatform.v1.ModelName;import java.io.IOException;public class CreateBatchPredictionJobTextSentimentAnalysisSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String project = \"PROJECT\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String displayName = \"DISPLAY_NAME\";\u00a0 \u00a0 String modelId = \"MODEL_ID\";\u00a0 \u00a0 String gcsSourceUri = \"GCS_SOURCE_URI\";\u00a0 \u00a0 String gcsDestinationOutputUriPrefix = \"GCS_DESTINATION_OUTPUT_URI_PREFIX\";\u00a0 \u00a0 createBatchPredictionJobTextSentimentAnalysisSample(\u00a0 \u00a0 \u00a0 \u00a0 project, location, displayName, modelId, gcsSourceUri, gcsDestinationOutputUriPrefix);\u00a0 }\u00a0 static void createBatchPredictionJobTextSentimentAnalysisSample(\u00a0 \u00a0 \u00a0 String project,\u00a0 \u00a0 \u00a0 String location,\u00a0 \u00a0 \u00a0 String displayName,\u00a0 \u00a0 \u00a0 String modelId,\u00a0 \u00a0 \u00a0 String gcsSourceUri,\u00a0 \u00a0 \u00a0 String gcsDestinationOutputUriPrefix)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 // The AI Platform services require regional API endpoints.\u00a0 \u00a0 JobServiceSettings settings =\u00a0 \u00a0 \u00a0 \u00a0 JobServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (JobServiceClient client = JobServiceClient.create(settings)) {\u00a0 \u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 \u00a0 String modelName = ModelName.of(project, location, modelId).toString();\u00a0 \u00a0 \u00a0 \u00a0 GcsSource gcsSource = GcsSource.newBuilder().addUris(gcsSourceUri).build();\u00a0 \u00a0 \u00a0 \u00a0 BatchPredictionJob.InputConfig inputConfig =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 BatchPredictionJob.InputConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setInstancesFormat(\"jsonl\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setGcsSource(gcsSource)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 \u00a0 GcsDestination gcsDestination =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GcsDestination.newBuilder().setOutputUriPrefix(gcsDestinationOutputUriPrefix).build();\u00a0 \u00a0 \u00a0 \u00a0 BatchPredictionJob.OutputConfig outputConfig =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 BatchPredictionJob.OutputConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setPredictionsFormat(\"jsonl\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setGcsDestination(gcsDestination)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 \u00a0 BatchPredictionJob batchPredictionJob =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 BatchPredictionJob.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDisplayName(displayName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setModel(modelName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setInputConfig(inputConfig)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setOutputConfig(outputConfig)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 \u00a0 LocationName parent = LocationName.of(project, location);\u00a0 \u00a0 \u00a0 \u00a0 BatchPredictionJob response = client.createBatchPredictionJob(parent, batchPredictionJob);\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"response: %s\\n\", response);\u00a0 \u00a0 \u00a0 } catch (ApiException ex) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Exception: %s\\n\", ex.getLocalizedMessage());\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/create-batch-prediction-job-text-sentiment-analysis.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const batchPredictionDisplayName = 'YOUR_BATCH_PREDICTION_DISPLAY_NAME';// const modelId = 'YOUR_MODEL_ID';// const gcsSourceUri = 'YOUR_GCS_SOURCE_URI';// const gcsDestinationOutputUriPrefix = 'YOUR_GCS_DEST_OUTPUT_URI_PREFIX';// \u00a0 \u00a0eg. \"gs://<your-gcs-bucket>/destination_path\"// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';// Imports the Google Cloud Job Service Client libraryconst {JobServiceClient} = require('@google-cloud/aiplatform').v1;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst jobServiceClient = new JobServiceClient(clientOptions);async function createBatchPredictionJobTextSentimentAnalysis() {\u00a0 // Configure the parent resource\u00a0 const parent = `projects/${project}/locations/${location}`;\u00a0 const modelName = `projects/${project}/locations/${location}/models/${modelId}`;\u00a0 const inputConfig = {\u00a0 \u00a0 instancesFormat: 'jsonl',\u00a0 \u00a0 gcsSource: {uris: [gcsSourceUri]},\u00a0 };\u00a0 const outputConfig = {\u00a0 \u00a0 predictionsFormat: 'jsonl',\u00a0 \u00a0 gcsDestination: {outputUriPrefix: gcsDestinationOutputUriPrefix},\u00a0 };\u00a0 const batchPredictionJob = {\u00a0 \u00a0 displayName: batchPredictionDisplayName,\u00a0 \u00a0 model: modelName,\u00a0 \u00a0 inputConfig,\u00a0 \u00a0 outputConfig,\u00a0 };\u00a0 const request = {\u00a0 \u00a0 parent,\u00a0 \u00a0 batchPredictionJob,\u00a0 };\u00a0 // Create batch prediction job request\u00a0 const [response] = await jobServiceClient.createBatchPredictionJob(request);\u00a0 console.log('Create batch prediction job text sentiment analysis response');\u00a0 console.log(`Name : ${response.name}`);\u00a0 console.log('Raw response:');\u00a0 console.log(JSON.stringify(response, null, 2));}createBatchPredictionJobTextSentimentAnalysis();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/create_batch_prediction_job_sample.py) \n```\ndef create_batch_prediction_job_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 model_resource_name: str,\u00a0 \u00a0 job_display_name: str,\u00a0 \u00a0 gcs_source: Union[str, Sequence[str]],\u00a0 \u00a0 gcs_destination: str,\u00a0 \u00a0 sync: bool = True,):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 my_model = aiplatform.Model(model_resource_name)\u00a0 \u00a0 batch_prediction_job = my_model.batch_predict(\u00a0 \u00a0 \u00a0 \u00a0 job_display_name=job_display_name,\u00a0 \u00a0 \u00a0 \u00a0 gcs_source=gcs_source,\u00a0 \u00a0 \u00a0 \u00a0 gcs_destination_prefix=gcs_destination,\u00a0 \u00a0 \u00a0 \u00a0 sync=sync,\u00a0 \u00a0 )\u00a0 \u00a0 batch_prediction_job.wait()\u00a0 \u00a0 print(batch_prediction_job.display_name)\u00a0 \u00a0 print(batch_prediction_job.resource_name)\u00a0 \u00a0 print(batch_prediction_job.state)\u00a0 \u00a0 return batch_prediction_job\n```\n### \u6aa2\u7d22\u6279\u91cf\u9810\u6e2c\u7d50\u679c\n\u6279\u91cf\u9810\u6e2c\u4efb\u52d9\u5b8c\u6210\u5f8c\uff0c\u9810\u6e2c\u7684\u8f38\u51fa\u5b58\u5132\u5728\u60a8\u5728\u8acb\u6c42\u4e2d\u6307\u5b9a\u7684 Cloud Storage \u5b58\u5132\u6876\u4e2d\u3002\n### \u6279\u91cf\u9810\u6e2c\u7d50\u679c\u793a\u4f8b\n\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u4f86\u81ea\u6587\u672c\u60c5\u611f\u5206\u6790\u6a21\u578b\u7684\u6279\u91cf\u9810\u6e2c\u7d50\u679c\u3002\n```\n{\n \"instance\": {\"content\": \"gs://bucket/text.txt\", \"mimeType\": \"text/plain\"},\n \"prediction\": {\"sentiment\": 8}\n}\n```", "guide": "Vertex AI"}