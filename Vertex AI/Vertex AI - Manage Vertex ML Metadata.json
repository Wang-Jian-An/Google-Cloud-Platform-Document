{"title": "Vertex AI - Manage Vertex ML Metadata", "url": "https://cloud.google.com/vertex-ai/docs/ml-metadata/managing-metadata", "abstract": "# Vertex AI - Manage Vertex ML Metadata\nThis guide demonstrates how to manage your Vertex ML Metadata.\n", "content": "## Before you begin\nThe first time that you use Vertex ML Metadata in a Google Cloud project, Vertex AI creates your project's metadata store.\nIf you want your metadata encrypted using a customer-managed encryption key (CMEK), you must create your metadata store using a CMEK before you use Vertex ML Metadata to track or analyze metadata. Use the [create ametadata store that uses a CMEK](/vertex-ai/docs/ml-metadata/configure) instructions to configure your project's metadata store.\n## Artifact management\n### Create an artifact\nUse either REST or the Vertex AI SDK for Python to create an artifact.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The metadata store ID where the artifact is created. The default metadata store is named`default`.\n- : (Optional) The ID of the artifact record. If the artifact ID is not specified, Vertex ML Metadata creates a unique identifier for this artifact.\n- : (Optional) The user-defined name of the artifact.\n- : (Optional) The location where the artifact is stored\n- : (Optional) A value from the [State enumeration](/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores.artifacts#Artifact.State) that represents the current state of the artifact. This field is managed by client applications. Vertex ML Metadata does not check the validity of state transitions.\n- : The title of the schema that describes the metadata field. The title of the schema must meet the format `\n- : (Optional) The version of the schema that describes the metadata field.`schema_version`must be a string of three numbers separated by periods, for example, 1.0.0, 1.0.1. This format helps order and compare versions.\n- : (Optional.) Properties that describe the artifact, such as the type of dataset.\n- : (Optional) A human readable string, that describes the purpose of the execution to be created.\n- :Optional. User-defined metadata for organizing your artifacts.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/artifacts?artifactId=ARTIFACT_ID\n```\nRequest JSON body:\n```\n{\n \"displayName\": \"DISPLAY_NAME\",\n \"uri\": \"URI\",\n \"state\": \"ARTIFACT_STATE\",\n \"schemaTitle\": \"METADATA_SCHEMA_TITLE\",\n \"schemaVersion\": \"METADATA_SCHEMA_VERSION\",\n \"metadata\": {\n METADATA\n },\n \"labels\": {\"LABEL_1\":\"LABEL_2\"},\n \"description\": \"DESCRIPTION\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/default/artifacts/ARTIFACT_ID\",\n \"displayName\": \"Example artifact\",\n \"uri\": \"gs://your_bucket_name/artifacts/dataset.csv\",\n \"etag\": \"67891011\",\n \"labels\": {\n \"test_label\": \"test_label_value\"\n },\n \"createTime\": \"2021-05-18T00:29:24.344Z\",\n \"updateTime\": \"2021-05-18T00:29:24.344Z\",\n \"state\": \"LIVE\",\n \"schemaTitle\": \"system.Dataset\",\n \"schemaVersion\": \"0.0.1\",\n \"metadata\": {\n \"payload_format\": \"CSV\"\n },\n \"description\": \"Description of the example artifact.\"\n}\n```\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/create_artifact_with_sdk_sample.py) \n```\ndef create_artifact_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 uri: Optional[str] = None,\u00a0 \u00a0 artifact_id: Optional[str] = None,\u00a0 \u00a0 display_name: Optional[str] = None,\u00a0 \u00a0 schema_version: Optional[str] = None,\u00a0 \u00a0 description: Optional[str] = None,\u00a0 \u00a0 metadata: Optional[Dict] = None,):\u00a0 \u00a0 system_artifact_schema = artifact_schema.Artifact(\u00a0 \u00a0 \u00a0 \u00a0 uri=uri,\u00a0 \u00a0 \u00a0 \u00a0 artifact_id=artifact_id,\u00a0 \u00a0 \u00a0 \u00a0 display_name=display_name,\u00a0 \u00a0 \u00a0 \u00a0 schema_version=schema_version,\u00a0 \u00a0 \u00a0 \u00a0 description=description,\u00a0 \u00a0 \u00a0 \u00a0 metadata=metadata,\u00a0 \u00a0 )\u00a0 \u00a0 return system_artifact_schema.create(project=project, location=location,)\n```\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these IDs in the Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: See [List of available   locations](/vertex-ai/docs/general/locations) .\n- `uri`: (Optional) The Uniform Resource Identifier for the artifact file if one exists. May be empty if there is no actual artifact file.\n- `artifact_id`: (Optional) The ID of the artifact record. If the artifact ID is not specified, Vertex ML Metadata creates a unique identifier for this artifact.\n- `display_name`: (Optional) The user-defined name of the artifact.\n- `schema_version`: The version of the schema that describes the metadata field.\n- `description`: (Optional) A human readable string, that describes the purpose of the artifact to be created.\n- `metadata`: Properties that describe the artifact, such as the artifact parameters.\n### Look up an existing artifact\nArtifacts represent data used or produced by your ML workflow, such as datasets and models. To look-up an existing artifact, use either REST or the Vertex AI SDK for Python.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The metadata store ID where the artifact is created. The default metadata store is named`default`.\n- : (Optional) The maximum number of artifacts to return. If this value is not specified, the service returns a maximum of 100 records.\n- : (Optional) A page token from a previous [MetadataService.ListArtifacts](/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores.artifacts/list) call. Specify this token to get the next page of results.\n- : Specifies the conditions required to include an artifact in the result set.\nHTTP method and URL:\n```\nGET https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/artifacts?pageSize=PAGE_SIZE&pageToken=PAGE_TOKEN&filter=FILTER\n```\nTo send your request, expand one of these options:You should see output similar to the following. is the ID of the artifact record.\n```\n{\n \"artifacts\": [ {\n  \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/default/artifacts/ARTIFACT_ID\",\n  \"displayName\": \"Example artifact\",\n  \"uri\": \"gs://your_bucket_name/artifacts/dataset.csv\",\n  \"etag\": \"67891011\",\n  \"createTime\": \"2021-05-18T00:33:13.833Z\",\n  \"updateTime\": \"2021-05-18T00:33:13.833Z\",\n  \"state\": \"LIVE\",\n  \"schemaTitle\": \"system.Dataset\",\n  \"schemaVersion\": \"0.0.1\",\n  \"metadata\": {\n  \"payload_format\": \"CSV\"\n  },\n  \"description\": \"Description of the example artifact.\"\n },\n {\n  \"name\": \"projects/PROJECT_ID/locations/LOCATION/metadataStores/METADATA_STORE/artifacts/ARTIFACT_ID\",\n  \"displayName\": \"Another example artifact\",\n  \"uri\": \"gs://your_bucket_name/artifacts/dataset-2.csv\",\n  \"etag\": \"67891012\",\n  \"createTime\": \"2021-05-18T00:29:24.344Z\",\n  \"updateTime\": \"2021-05-18T00:29:24.344Z\",\n  \"state\": \"LIVE\",\n  \"schemaTitle\": \"system.Dataset\",\n  \"schemaVersion\": \"0.0.1\",\n  \"metadata\": {\n  \"payload_format\": \"CSV\"\n  },\n  \"description\": \"Description of the other example artifact.\"\n }\n ]\n}\n```\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/list_artifact_sample.py) \n```\ndef list_artifact_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 display_name_filter: Optional[str] = \"display_name=\\\"my_model_*\\\"\",\u00a0 \u00a0 create_date_filter: Optional[str] = \"create_time>\\\"2022-06-11\\\"\",\u00a0 \u00a0 order_by: Optional[str] = None,):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 combined_filters = f\"{display_name_filter} AND {create_date_filter}\"\u00a0 \u00a0 return aiplatform.Artifact.list(\u00a0 \u00a0 \u00a0 \u00a0 filter=combined_filters,\u00a0 \u00a0 \u00a0 \u00a0 order_by=order_by,\u00a0 \u00a0 )\n```\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these IDs in the Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: See [List of available   locations](/vertex-ai/docs/general/locations) .\n- `display_name_filter`: Filter to be applied to display name while listing the resources with the format \"display_name=\\\"my_filter\\\"\" .\n- `create_date_filter`: Filter to be applied to create_date name while listing the resources with the format \"create_time>\\\"2022-06-11T12:30:00-08:00\\\"\",.\n### Delete an existing artifact\nUse either REST or the Vertex AI SDK for Python to delete an artifact.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The metadata store ID where the artifact is created. The default metadata store is named`default`.\n- : The ID of the artifact record to delete.\nHTTP method and URL:\n```\nDELETE https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/artifacts/ARTIFACT_ID\n```\nTo send your request, expand one of these options:You should see output similar to the following. You can use the in the response to [get the status](/vertex-ai/docs/general/long-running-operations) of the operation.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/artifacts/ARTIFACT_ID/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.DeleteOperationMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2021-07-21T20:05:30.179713Z\",\n  \"updateTime\": \"2021-07-21T20:05:30.179713Z\"\n }\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.protobuf.Empty\"\n }\n}\n```\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/delete_artifact_sample.py) \n```\ndef delete_artifact_sample(\u00a0 \u00a0 artifact_id: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 artifact = aiplatform.Artifact.get(\u00a0 \u00a0 \u00a0 \u00a0 resource_id=artifact_id, project=project, location=location\u00a0 \u00a0 )\u00a0 \u00a0 artifact.delete()\n```\n- `artifact_id`: The ID of the execution record.\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these IDs in the Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: See [List of available   locations](/vertex-ai/docs/general/locations) .\n### Purge artifacts\nUse the following instructions to delete multiple artifacts based on a filter condition.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The metadata store ID where the artifact is created. The default metadata store is named`default`.\n- : Specifies the conditions required by the artifacts to be deleted. For example:- Filters for all artifacts that contain **example** in the display   name:`\"display_name = \\\"*example*\\\"\"`.\n- Filters for all artifacts created before 2020-11-19T11:30:00-04:00:`\"create_time < \\\"2020-11-19T11:30:00-04:00\\\"\"`.\n- : Indicates whether to perform the actual purge or not. If the flag is set to false, the method will return a sample of artifact names that would be deleted.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/artifacts:purge\n```\nRequest JSON body:\n```\n{\n \"filter\": \"FILTER\",\n \"force\": FORCE\n}\n```\nTo send your request, expand one of these options:You should see output similar to the following. You can use the in the response to [get the status](/vertex-ai/docs/general/long-running-operations) of the operation.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.PurgeArtifactsMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2021-07-21T21:02:33.757991Z\",\n  \"updateTime\": \"2021-07-21T21:02:33.757991Z\"\n }\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.PurgeArtifactsResponse\",\n \"purgeCount\": \"15\"\n }\n}\n```\n## Execution management\n### Create an execution\nExecutions represent a step in your ML workflow. Use either REST or the Vertex AI SDK for Python to create an execution.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The metadata store ID where the execution is created. The default metadata store is named`default`.\n- : The ID of the execution record. If the execution ID is not specified, Vertex ML Metadata creates a unique identifier for this execution.\n- : The execution's display name. This field may contain up to 128 Unicode characters.\n- : (Optional) A value from the [State enumeration](/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores.executions#Execution.State) that represents the current state of the execution. This field is managed by client applications. Vertex ML Metadata does not check the validity of state transitions.\n- : The title of the schema that describes the metadata field. The title of the schema must meet the format `\n- : (Optional) The version of the schema that describes the metadata field.`schema_version`must be a string of three numbers separated by periods, for example, 1.0.0, 1.0.1. This format helps order and compare versions.\n- : (Optional) Properties that describe the execution, such as the execution parameters.\n- : (Optional) A human readable string, that describes the purpose of the execution to be created..\n- : Optional. User-defined metadata for organizing your executions.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/executions?executionId=EXECUTION_ID\n```\nRequest JSON body:\n```\n{\n \"displayName\": \"DISPLAY_NAME\",\n \"state\": \"EXECUTION_STATE\",\n \"schemaTitle\": \"METADATA_SCHEMA_TITLE\",\n \"schemaVersion\": \"METADATA_SCHEMA_VERSION\",\n \"metadata\": {\n METADATA\n },\n \"labels\": {\"LABEL_1\":\"LABEL_2\"},\n \"description\": \"DESCRIPTION\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/executions/EXECUTION_ID\",\n \"displayName\": \"Example Execution\",\n \"etag\": \"67891011\",\n \"labels\": {\n \"test_label\": \"test_label_value\"\n },\n \"createTime\": \"2021-05-18T00:04:49.659Z\",\n \"updateTime\": \"2021-05-18T00:04:49.659Z\",\n \"schemaTitle\": \"system.Run\",\n \"schemaVersion\": \"0.0.1\",\n \"metadata\": {},\n \"description\": \"Description of the example execution.\"\n}\n```\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/create_execution_with_sdk_sample.py) \n```\ndef create_execution_sample(\u00a0 \u00a0 display_name: str,\u00a0 \u00a0 input_artifacts: List[aiplatform.Artifact],\u00a0 \u00a0 output_artifacts: List[aiplatform.Artifact],\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 execution_id: Optional[str] = None,\u00a0 \u00a0 metadata: Optional[Dict[str, Any]] = None,\u00a0 \u00a0 schema_version: Optional[str] = None,\u00a0 \u00a0 description: Optional[str] = None,):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 with execution_schema.ContainerExecution(\u00a0 \u00a0 \u00a0 \u00a0 display_name=display_name,\u00a0 \u00a0 \u00a0 \u00a0 execution_id=execution_id,\u00a0 \u00a0 \u00a0 \u00a0 metadata=metadata,\u00a0 \u00a0 \u00a0 \u00a0 schema_version=schema_version,\u00a0 \u00a0 \u00a0 \u00a0 description=description,\u00a0 \u00a0 ).create() as execution:\u00a0 \u00a0 \u00a0 \u00a0 execution.assign_input_artifacts(input_artifacts)\u00a0 \u00a0 \u00a0 \u00a0 execution.assign_output_artifacts(output_artifacts)\u00a0 \u00a0 \u00a0 \u00a0 return execution\n```\n- `display_name`: The execution's display name. This field may contain up to 128 Unicode characters.\n- `input_artifacts`: A list of one or more instances of aiplatform.Artifact representing an input artifact.\n- `output_artifacts`: A list of one or more instances of aiplatform.Artifact representing an output Artifact.\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these IDs in the Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: See [List of available   locations](/vertex-ai/docs/general/locations) .\n- `execution_id`: The ID of the execution record. If the execution ID is not specified, Vertex ML Metadata creates a unique identifier for this execution.\n- `metadata`: Properties that describe the execution, such as the execution parameters.\n- `schema_version`:The version of the schema that describes the metadata field.\n- `description`: (Optional) A human readable string, that describes the purpose of the execution to be created.\n### Look up an existing execution\nUse either REST or the Vertex AI SDK for Python to look-up an existing execution.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The metadata store ID where the execution is created. The default metadata store is named`default`.\n- : (Optional) The maximum number of artifacts to return. If this value is not specified, the service returns a maximum of 100 records.\n- : (Optional) A page token from a previous [MetadataService.ListArtifacts](/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores.artifacts/list) call. Specify this token to get the next page of results.\n- : Specifies the conditions required to include an execution in the result set.\nHTTP method and URL:\n```\nGET https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/executions?pageSize=PAGE_SIZE&pageToken=PAGE_TOKEN&filter=FILTER\n```\nTo send your request, expand one of these options:You should see output similar to the following. is the ID of the execution record.\n```\n{\n \"executions\": [ {\n  \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/executions/EXECUTION_ID\",\n  \"displayName\": \"Example execution 1\",\n  \"etag\": \"67891011\",\n  \"createTime\": \"2021-05-18T00:06:56.177Z\",\n  \"updateTime\": \"2021-05-18T00:06:56.177Z\",\n  \"schemaTitle\": \"system.Run\",\n  \"schemaVersion\": \"0.0.1\",\n  \"metadata\": {},\n  \"description\": \"Description of the example execution.\"\n },\n {\n  \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/executions/EXECUTION_ID\",\n  \"displayName\": \"Example execution 2\",\n  \"etag\": \"67891011\",\n  \"createTime\": \"2021-05-18T00:04:49.659Z\",\n  \"updateTime\": \"2021-05-18T00:04:49.659Z\",\n  \"schemaTitle\": \"system.Run\",\n  \"schemaVersion\": \"0.0.1\",\n  \"metadata\": {},\n  \"description\": \"Description of the example execution.\"\n }\n ]\n}\n```\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/get_execution_sample.py) \n```\ndef get_execution_sample(\u00a0 \u00a0 execution_id: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 execution = aiplatform.Execution.get(\u00a0 \u00a0 \u00a0 \u00a0 resource_id=execution_id, project=project, location=location\u00a0 \u00a0 )\u00a0 \u00a0 return execution\n```\n- `execution_id`: The ID of the execution record.\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these IDs in the Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: See [List of available   locations](/vertex-ai/docs/general/locations) .\n### Delete an existing execution\nUse either REST or the Vertex AI SDK for Python to delete an execution.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The metadata store ID where the execution is created. The default metadata store is named`default`.\n- : The ID of the execution record to delete.\nHTTP method and URL:\n```\nDELETE https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/executions/EXECUTION_ID\n```\nTo send your request, expand one of these options:You should see output similar to the following. You can use the in the response to [get the status](/vertex-ai/docs/general/long-running-operations) of the operation.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/executions/EXECUTION_ID/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.DeleteOperationMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2021-07-21T20:05:30.179713Z\",\n  \"updateTime\": \"2021-07-21T20:05:30.179713Z\"\n }\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.protobuf.Empty\"\n }\n}\n```\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/delete_execution_sample.py) \n```\ndef delete_execution_sample(\u00a0 \u00a0 execution_id: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 execution = aiplatform.Execution.get(\u00a0 \u00a0 \u00a0 \u00a0 resource_id=execution_id, project=project, location=location\u00a0 \u00a0 )\u00a0 \u00a0 execution.delete()\n```\n- `execution_id`: The ID of the execution record.\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these IDs in the Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: See [List of available   locations](/vertex-ai/docs/general/locations) .\n### Purge executions\nTo delete multiple executions based on a filter, use the following instructions.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The metadata store ID where the execution is created. The default metadata store is named`default`.\n- : Specifies the conditions required by the executions to be deleted. For example:- Filters for all executions that contain **example** in the display   name:`\"display_name = \\\"*example*\\\"\"`.\n- Filters for all executions created before 2020-11-19T11:30:00-04:00:`\"create_time < \\\"2020-11-19T11:30:00-04:00\\\"\"`.\n- : Indicates whether to perform the actual purge or not. If the flag is set to false, the method will return a sample of artifact names that would be deleted.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/executions:purge\n```\nRequest JSON body:\n```\n{\n \"filter\": \"FILTER\",\n \"force\": FORCE\n}\n```\nTo send your request, expand one of these options:You should see output similar to the following. You can use the in the response to [get the status](/vertex-ai/docs/general/long-running-operations) of the operation.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.PurgeExecutionsMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2021-07-21T21:02:45.757991Z\",\n  \"updateTime\": \"2021-07-21T21:02:45.757991Z\"\n }\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.PurgeExecutionsResponse\",\n \"purgeCount\": \"2\"\n }\n}\n```\n## Context management\n### Create a context\nContexts let you group sets of artifacts and executions together. Use either REST or the Vertex AI SDK for Python to create a context.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- :The metadata store ID where the execution is created. The default metadata store is named`default`.\n- : (Optional) The ID of the context record. If the context ID is not specified,  Vertex ML Metadata created a unique identifier for this context\n- : The context's display name. This field may contain up to 128 Unicode characters.\n- : Specify the resource name for any parent contexts. A context can not have more than 10 parent contexts.\n- : The title of the schema that describes the metadata field. The title of the schema must meet the format `\n- : (Optional) The version of the schema that describes the metadata field.`schema_version`must be a string of three numbers separated by periods, for example, 1.0.0, 1.0.1. This format helps order and compare versions.\n- : Properties that describe the context, such as the context parameters..\n- :(Optional) A human readable string, that describes the purpose of the execution to be created.\n- : Optional. User-defined metadata for organizing your contexts.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/contexts?contextId=CONTEXT_ID\n```\nRequest JSON body:\n```\n{\n \"displayName\": \"DISPLAY_NAME:\",\n \"parentContexts\": [ \"PARENT_CONTEXT_1\",\n \"PARENT_CONTEXT_2\"\n ],\n \"schemaTitle\": \"METADATA_SCHEMA_TITLE\",\n \"schemaVersion\": \"METADATA_SCHEMA_VERSION\",\n \"metadata\": {\n METADATA\n },\n \"labels\": {\"LABEL_1\":\"LABEL_2\"},\n \"description\": \"DESCRIPTION\"\n}\n```\nTo send your request, expand one of these options:You should see output similar to the following. is the ID of the context record.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/contexts/CONTEXT_ID\",\n \"displayName\": \"Example context:\",\n \"etag\": \"67891011\",\n \"labels\": {\n \"test_label\": \"test_label_value\"\n },\n \"createTime\": \"2021-05-18T01:52:51.642Z\",\n \"updateTime\": \"2021-05-18T01:52:51.642Z\",\n \"schemaTitle\": \"system.Experiment\",\n \"schemaVersion\": \"0.0.1\",\n \"metadata\": {},\n \"description\": \"Description of the example context.\"\n}\n```\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/create_context_with_sdk_sample.py) \n```\ndef create_context_sample(\u00a0 \u00a0 display_name: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 context_id: Optional[str] = None,\u00a0 \u00a0 metadata: Optional[Dict[str, Any]] = None,\u00a0 \u00a0 schema_version: Optional[str] = None,\u00a0 \u00a0 description: Optional[str] = None,):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 return context_schema.Experiment(\u00a0 \u00a0 \u00a0 \u00a0 display_name=display_name,\u00a0 \u00a0 \u00a0 \u00a0 context_id=context_id,\u00a0 \u00a0 \u00a0 \u00a0 metadata=metadata,\u00a0 \u00a0 \u00a0 \u00a0 schema_version=schema_version,\u00a0 \u00a0 \u00a0 \u00a0 description=description,\u00a0 \u00a0 ).create()\n```\n- `display_name`: The context's display name. This field may contain up to 128 Unicode characters.\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these IDs in the Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: See [List of available   locations](/vertex-ai/docs/general/locations) .\n- `context_id`: (Optional) The ID of the context record.\n- `metadata`: Properties that describe the context, such as the context parameters.\n- `schema_version`: The version of the schema that describes the metadata field.\n- `description`: (Optional) A human readable string, that describes the purpose of the context to be created.\n### Look up an existing context\nUse either REST or the Vertex AI SDK for Python to look-up an existing context.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The metadata store ID where the context is created. The default metadata store is named`default`.\n- : (Optional) The maximum number of artifacts to return. If this value is not specified, the service returns a maximum of 100 records.\n- : (Optional) A page token from a previous [MetadataService.ListArtifacts](/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores.artifacts/list) call. Specify this token to get the next page of results.\n- : Specifies the conditions required to include a context in the result set.\nHTTP method and URL:\n```\nGET https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/contexts?pageSize=PAGE_SIZE&pageToken=PAGE_TOKEN&filter=FILTER\n```\nTo send your request, expand one of these options:You should see output similar to the following. is the ID of the context record.\n```\n{\n \"contexts\": [ {\n  \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/contexts/CONTEXT_ID\",\n  \"displayName\": \"Experiment 1\",\n  \"etag\": \"67891011\",\n  \"createTime\": \"2021-05-18T22:36:02.153Z\",\n  \"updateTime\": \"2021-05-18T22:36:02.153Z\",\n  \"parentContexts\": [],\n  \"schemaTitle\": \"system.Experiment\",\n  \"schemaVersion\": \"0.0.1\",\n  \"metadata\": {}\n },\n {\n  \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/contexts/CONTEXT_ID\",\n  \"displayName\": \"Pipeline run 1\",\n  \"etag\": \"67891011\",\n  \"createTime\": \"2021-05-18T22:35:02.600Z\",\n  \"updateTime\": \"2021-05-18T22:35:02.600Z\",\n  \"parentContexts\": [],\n  \"schemaTitle\": \"system.PipelineRun\",\n  \"schemaVersion\": \"0.0.1\",\n  \"metadata\": {}\n }\n ]\n}\n```\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/get_context_sample.py) \n```\ndef get_context_sample(\u00a0 \u00a0 context_id: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 context = aiplatform.Context.get(\u00a0 \u00a0 \u00a0 \u00a0 resource_id=context_id, project=project, location=location)\u00a0 \u00a0 return context\n```\n- `context_id:`: The ID of the context record.\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these IDs in the Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: See [List of available   locations](/vertex-ai/docs/general/locations) .\n### Delete an existing context\nUse either REST or the Vertex AI SDK for Python to delete a context.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The metadata store ID where the context is created. The default metadata store is named`default`.\n- : (Optional) The ID of the context record.\nHTTP method and URL:\n```\nDELETE https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/contexts/CONTEXT_ID\n```\nTo send your request, expand one of these options:You should see output similar to the following. You can use the in the response to [get the status](/vertex-ai/docs/general/long-running-operations) of the operation.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/contexts/CONTEXT_ID/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.DeleteOperationMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2021-07-21T20:05:30.179713Z\",\n  \"updateTime\": \"2021-07-21T20:05:30.179713Z\"\n }\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.protobuf.Empty\"\n }\n}\n```\n### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/delete_context_sample.py) \n```\ndef delete_context_sample(\u00a0 \u00a0 context_id: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 context = aiplatform.Context.get(\u00a0 \u00a0 \u00a0 \u00a0 resource_id=context_id, project=project, location=location\u00a0 \u00a0 )\u00a0 \u00a0 context.delete()\n```\n- `context_id:`: The ID of the context record.\n- `project`: Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) . You can find these IDs in the Google Cloud console [welcome](https://console.cloud.google.com/welcome) page.\n- `location`: See [List of available   locations](/vertex-ai/docs/general/locations) .\n### Purge contexts\nUse the following instructions to delete multiple contexts based on a filter condition.\nBefore using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- :The metadata store ID where the context is created. The default metadata store is named`default`.\n- : Specifies the conditions required by the contexts to be deleted. For example:- Filters for all contexts that contain **example** in the display   name:`\"display_name = \\\"*example*\\\"\"`.\n- Filters for all contexts created before 2020-11-19T11:30:00-04:00:`\"create_time < \\\"2020-11-19T11:30:00-04:00\\\"\"`.\n- : Indicates whether to perform the actual purge or not. If the flag is set  to false, the method will return a sample of context names that would be deleted.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/contexts:purge\n```\nRequest JSON body:\n```\n{\n \"filter\": \"FILTER\",\n \"force\": FORCE\n}\n```\nTo send your request, expand one of these options:You should see output similar to the following. You can use the in the response to [get the status](/vertex-ai/docs/general/long-running-operations) of the operation.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/metadataStores/METADATA_STORE/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.PurgeContextsMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2021-07-21T21:02:40.757991Z\",\n  \"updateTime\": \"2021-07-21T21:02:40.757991Z\"\n }\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.PurgeContextsResponse\",\n \"purgeCount\": \"5\"\n }\n}\n```\n## What's next\n- [Get started tracking your Vertex ML Metadata](/vertex-ai/docs/ml-metadata/tracking) .\n- [Get started analyzing your Vertex ML Metadata](/vertex-ai/docs/ml-metadata/analyzing) .", "guide": "Vertex AI"}