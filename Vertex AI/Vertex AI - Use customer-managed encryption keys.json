{"title": "Vertex AI - Use customer-managed encryption keys", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Use customer-managed encryption keys\nVertex AI Workbench managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  managed notebooks will end and the ability to create managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/managed/migrate-to-instances) .\nBy default, Google Cloud automatically [encrypts data when it is atrest](/security/encryption/default-encryption) using encryption keys managed by Google. If you have specific compliance or regulatory requirements related to the keys that protect your data, you can use [customer-managedencryption keys (CMEK)](/kms/docs/cmek) for your Vertex AI Workbench managed notebooks instances.\nThis page describes some specific benefits and limitations of using CMEK with managed notebooks and shows how to configure a new managed notebooks instance to use CMEK.\nFor information about CMEK in general, including when and why to enable it, see [Customer-managed encryption keys](/kms/docs/cmek) .\n", "content": "## Benefits of CMEK\nIn general, CMEK is most useful if you need full control over the keys used to encrypt your data. With CMEK, you can manage your keys within Cloud Key Management Service. For example, you can rotate or disable a key or you can set up a rotation schedule by using the Cloud KMS API.\nWhen you run a managed notebooks instance, your instance runs in a compute infrastructure managed by Google. When you enable CMEK for a managed notebooks instance, Vertex AI Workbench uses the key that you designate, rather than a key managed by Google, to encrypt your user data.\nThe CMEK key encrypt metadata, like the instance's name and region, associated with your managed notebooks instance. Metadata associated with managed notebooks instances is always encrypted using Google's default encryption mechanism.\n## Limitations of CMEK\nTo decrease latency and to prevent cases where resources depend on services that are spread across multiple failure domains, Google recommends that you protect regional managed notebooks instances with keys in the same location.\n- You can encrypt regional managed notebooks instances by using keys in the same location or in the global location. For example, you can encrypt user data in region`us-west1`by using a key in`us-west1`or`global`.\n- [](None) Configuring CMEK for managed notebooksautomatically configure CMEK for other Google Cloud products that you use. To use CMEK to encrypt data in other Google Cloud products, you must complete additional configuration.## Configure CMEK for your managed notebooks instance\nThe following sections describe how to create a key ring and key in Cloud Key Management Service, grant the service account encrypter and decrypter permissions for your key, and create a managed notebooks instance that uses CMEK.\n### Before you begin\nWe recommend using a setup that supports a [separation ofduties](/kms/docs/separation-of-duties) . To configure CMEK for managed notebooks, you can use two separate Google Cloud projects:\n- A Cloud KMS project: a project for managing your encryption key\n- A managed notebooks project: a project for accessing managed notebooks instances and interacting with any other Google Cloud products that you need for your use case\nAlternatively, you can use a single Google Cloud project. To do so, use the same project for all of the following tasks.\n[Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n```\ngcloud init\n```\n**Note:** You can run the gcloud CLI in  the Google Cloud console without installing the Google Cloud CLI. To run the  gcloud CLI in the Google Cloud console, [use  Cloud Shell](https://console.cloud.google.com/?cloudshell=true) .### Create a key ring and key\nWhen you create a key ring and key, keep the following requirements in mind:\n- When you choose your key ring's location, use either `global` or the location where your managed notebooks instance will be.\n- Make sure to create your key ring and key in your Cloud KMS project.\nTo create a key ring and a key, see [Create symmetric encryption keys](/kms/docs/creating-keys) .\n### Grant managed notebooks permissions\nIf you set up your instance with [single useraccess](/vertex-ai/docs/workbench/managed/manage-access-jupyterlab#single-user-only) , you must grant your managed notebooks instance's project permission to encrypt and decrypt data using your key. You grant this permission to your project's [service agent](/iam/docs/service-agents) . This service agent's email address looks like:\n```\nservice-NOTEBOOKS_PROJECT_NUMBER@gcp-sa-notebooks.iam.gserviceaccount.com\n```\nReplace `` with the [project number](/resource-manager/docs/cloud-platform-resource-hierarchy#projects) for your managed notebooks instance's project.\nMake note of the email address for your service agent. You will use it in the following steps to grant your managed notebooks instance's project permission to encrypt and decrypt data using your key. You can grant permission by using the Google Cloud console or by using the Google Cloud CLI.\n**Note:** If you set up your instance with [service account  access](/vertex-ai/docs/workbench/managed/manage-access-jupyterlab#service-account) ,  you don't need to grant any further permissions.\n- In the Google Cloud console, go to the **Cryptographic keys** page. [Go to Cryptographic keys](https://console.cloud.google.com/security/kms?project=_) \n- Select your Cloud KMS project.\n- Click the name of the key ring that you created in [Create a key ring and key](#creating-key-ring-and-key) . The **Key ring details** page opens.\n- Select the checkbox for the key that you created in [Create a key ring and key](#creating-key-ring-and-key) . If an info panel labeled with the name of your key isn't already open, click **Show info panel** .\n- In the info panel, click person_add **Add member** . The **Add members to \"KEY_NAME\"** dialog opens. In this dialog, do the following:- In the **New members** field, enter the service agent email address that you made a note of in the preceding section.\n- In the **Select a role** list, click **Cloud KMS** and then select the **Cloud KMS CryptoKey Encrypter/Decrypter** role.\n- Click **Save** .- Run the following command to grant the service agent permission to encrypt and decrypt data using your key:```\ngcloud kms keys add-iam-policy-binding KEY_NAME \\\u00a0 \u00a0 --keyring=KEY_RING_NAME \\\u00a0 \u00a0 --location=REGION \\\u00a0 \u00a0 --project=KMS_PROJECT_ID \\\u00a0 \u00a0 --member=serviceAccount:EMAIL_ADDRESS \\\u00a0 \u00a0 --role=roles/cloudkms.cryptoKeyEncrypterDecrypter\n```Replace the following:- ``: the name of the key that you created in [Create a key ring and key](#creating-key-ring-and-key) \n- ``: the key ring that you created in [Create a key ring and key](#creating-key-ring-and-key) \n- ``: the region where you created your key ring\n- ``: the ID of your Cloud KMS project\n- ``: the email address of the service agent that you made note of in the previous section\n### Create a managed notebooks instance with CMEK\nAfter you have granted your managed notebooks instance permission to encrypt and decrypt data using your key, you can create a managed notebooks instance that encrypts data using this key. Use the following steps:\n- In the Google Cloud console, go to the **Managed notebooks** page. [Go to Managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/managed) \n- Click add_box **New notebook** .\n- In the **Notebook name** field, enter a name for your instance.\n- Click the **Region** list, and select a region for your instance.\n- Click **Advanced settings** .\n- In the **Disk encryption** section, select **Customer-managed encryption key (CMEK)** .\n- Click **Select a customer-managed key** .- If the customer-managed key that you want to use is in the list, select it.\n- If the customer-managed key that you want to use isn't in the list, enter the resource ID for your customer-managed key. The resource ID for your customer-managed key looks like this:```\n projects/NOTEBOOKS_PROJECT_NUMBER/locations/global/keyRings/KEY_RING_NAME/cryptoKeys/KEY_NAME\n```Replace the following:- ``: the ID of your managed notebooks project\n- ``: the key ring that you created in [Create a key ring and key](#creating-key-ring-and-key) \n- ``: the name of the key that you created in [Create a key ring and key](#creating-key-ring-and-key) \n- Complete the rest of the **Create a managed notebook** dialog according to your needs.\n- Click **Create** .\n- Vertex AI Workbench creates a managed notebooks instance based on your specified properties and automatically starts the instance. When the instance is ready to use, Vertex AI Workbench activates an **Open JupyterLab** link.## What's next\n- Learn more about [CMEK on Google Cloud](/kms/docs/cmek) \n- Learn [how to use CMEK with other Google Cloudproducts](/kms/docs/using-other-products)", "guide": "Vertex AI"}