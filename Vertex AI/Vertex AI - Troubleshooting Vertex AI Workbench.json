{"title": "Vertex AI - Troubleshooting Vertex AI Workbench", "url": "https://cloud.google.com/vertex-ai/docs/general/troubleshooting-workbench#managed-notebooks", "abstract": "# Vertex AI - Troubleshooting Vertex AI Workbench\nThis page describes troubleshooting steps that you might find helpful if you run into problems when you use Vertex AI Workbench.\nSee also [Troubleshooting Vertex AI](/vertex-ai/docs/general/troubleshooting) for help using other components of Vertex AI.\nThis page is divided into the following sections:\n- [Vertex AI Workbench instances](#instances) \n- [Managed notebooks](#managed-notebooks) \n- [User-managed notebooks](#user-managed-notebooks) \n- [Helpful procedures](#helpful-procedures) ", "content": "## Vertex AI Workbench instances\nThis section describes troubleshooting steps for Vertex AI Workbench instances.\n### Connecting to and opening JupyterLab\nThis section describes troubleshooting steps for connecting to and opening JupyterLab.\n**Issue**\nWhen you click **Open JupyterLab** , nothing happens.\n**Solution**\nVerify that your browser doesn't block new tabs from opening automatically. JupyterLab opens in a new browser tab.\n**Issue**\nIf you're unable to access the terminal or can't find the terminal window in the launcher, it could be because your Vertex AI Workbench instance doesn't have terminal access enabled.\n**Solution**\nYou must create a new Vertex AI Workbench instance with the **Terminal access** option enabled. This option can't be changed after instance creation.\n**Issue**\nA 502 error might mean that your Vertex AI Workbench instance isn't ready yet.\n**Solution**\nWait a few minutes, refresh the Google Cloud console browser tab, and try again.\n**Issue**\nYour Vertex AI Workbench instance isn't running cells or appears to be frozen.\n**Solution**\nFirst try restarting the kernel by clicking **Kernel** from the top menu and then **Restart Kernel** . If that doesn't work, you can try the following:\n- Refresh the JupyterLab browser page. Unsaved cell output doesn't persist, so you must run those cells again to regenerate the output.\n- [Reset your instance](/vertex-ai/docs/workbench/instances/create-console-quickstart#reset_your_instance) .\n### Unable to connect with Vertex AI Workbench instance using SSH\n**Issue**\nYou're unable to connect to your instance by using SSH through a terminal window.\nVertex AI Workbench instances use [OS Login](/compute/docs/oslogin) to enable SSH access. When you create an instance, Vertex AI Workbench enables OS Login by default by setting the metadata key `enable-oslogin` to `TRUE` . If you're unable to use SSH to connect to your instance, this metadata key might need to be set to `TRUE` .\n**Solution**\nConnecting to a Vertex AI Workbench instance by using the Google Cloud console isn't supported. If you're unable to connect to your instance by using SSH through a terminal window, see the following:\nTo set the metadata key `enable-oslogin` to `TRUE` , use the [projects.locations.instances.patch](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/patch) method in the Notebooks API or the [gcloud workbench instances update](/sdk/gcloud/reference/workbench/instances/update) command in the Google Cloud SDK.\n### GPU quota has been exceeded\n**Issue**\nYou're unable to create a Vertex AI Workbench instance with GPUs.\n**Solution**\nDetermine the number of GPUs available in your project by [checking the quotas page](https://console.cloud.google.com/quotas) . If GPUs aren't listed on the quotas page, or you require additional GPU quota, you can request a quota increase. See [Request a higher quota limit](/docs/quota_detail/view_manage#requesting_higher_quota) .\n### Creating Vertex AI Workbench instances\nThis section describes how to troubleshoot issues related to creating Vertex AI Workbench instances.\n**Issue**\nAttempting to create an instance within a Shared VPC network results in an error message like the following:\n```\nRequired 'compute.subnetworks.use' permission for\n'projects/network-administration/regions/us-central1/subnetworks/v'\n```\n**Solution**\nThe issue is that the [Notebooks Service Account](/iam/docs/service-agents#cloud-ai-platform-notebooks-service-account) is attempting to create the instance without the correct permissions.\nTo ensure that the Notebooks Service Account has the necessary  permissions to ensure that the Notebooks Service Account can create a Vertex AI Workbench instance within a Shared VPC network,   ask your administrator to grant the Notebooks Service Account the   Compute Network User role ( ` [roles/compute.networkUser](/compute/docs/access/iam#compute.networkUser) ` ) IAM role on the host project.    For more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nThis predefined role contains     the permissions required to ensure that the Notebooks Service Account can create a Vertex AI Workbench instance within a Shared VPC network. To see the exact permissions that are   required, expand the **Required permissions** section:\nYour administrator might also be able to give the Notebooks Service Account   these permissions  with [custom roles](/iam/docs/creating-custom-roles) or  other [predefined roles](/iam/docs/understanding-roles) .\n**Issue**\nThere isn't an option to use a custom container when creating a Vertex AI Workbench instance.\nAdding a custom container to your Vertex AI Workbench instance by using the Google Cloud console isn't supported.\n**Solution**\n[Adding a conda environment](/vertex-ai/docs/workbench/instances/add-environment) is recommended instead of using a custom container. If you must add a custom container to a Vertex AI Workbench instance, create the instance by using the [NotebooksAPI](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/create) .\n### Unable to install third-party JupyterLab extension\n**Issue**\nAttempting to install a third-party JupyterLab extension results in an `Error: 500` message.\n**Solution**\nThird-party JupyterLab extensions aren't supported in Vertex AI Workbench instances.\n### Unable to edit underlying virtual machine\n**Issue**\nWhen you try to edit the underlying virtual machine (VM) of a Vertex AI Workbench instance, you might get an error message similar to the following:\n```\nCurrent principal doesn't have permission to mutate this resource.\n```\n**Solution**\nThis error occurs because you can't edit the underlying VM of an instance by using the Google Cloud console or the Compute Engine API.\nTo edit a Vertex AI Workbench instance's underlying VM, use the [projects.locations.instances.patch](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/patch) method in the Notebooks API or the [gcloud workbench instances update](/sdk/gcloud/reference/workbench/instances/update) command in the Google Cloud SDK\n### pip packages aren't available after adding conda environment\n**Issue**\nYour `pip` packages aren't available after you add a conda-based kernel.\n**Solution**\nTo resolve the issue, see [Add a conda environment](/vertex-ai/docs/workbench/instances/add-environment) and try the following:\n- Check that you used the `DL_ANACONDA_ENV_HOME` variable and that it contains the name of your environment.\n- Check that `pip` is located in a path similar to `opt/conda/envs/` `` `/bin/pip` . You can run the `which pip` command to get the path.\n### Unable to access or copy data of an instance with single user access\n**Issue**\nThe data on an instance with single user access is inaccessible.\nFor Vertex AI Workbench instances that are set up with single user access, only the specified single user (the owner) can access the data on the instance.\n**Solution**\nTo access or copy the data when you aren't the owner of the instance, open a support case.\n### Unexpected shutdown\n**Issue**\nYour Vertex AI Workbench instance shuts down unexpectedly.\n**Solution**\nIf your instance shuts down unexpectedly, this could be because [idle shutdown](/vertex-ai/docs/workbench/instances/idle-shutdown) was initiated.\nIf you enabled idle shutdown, your instance shuts down when there is no kernel activity for the specified time period. For example, running a cell or new output printing to a notebook is activity that resets the idle timeout timer. CPU usage doesn't reset the idle timeout timer.\n## Managed notebooks\nVertex AI Workbench managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  managed notebooks will end and the ability to create managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/managed/migrate-to-instances) .\nThis section describes troubleshooting steps for managed notebooks.\n### Connecting to and opening JupyterLab\nThis section describes troubleshooting issues with connecting to and opening JupyterLab.\n**Issue**\nWhen you click **Open JupyterLab** , nothing happens.\n**Solution**\nVerify that your browser doesn't block new tabs from opening automatically. JupyterLab opens in a new browser tab.\n**Issue**\nThere isn't an option to connect with managed notebooks instances by using SSH.\n**Solution**\nSSH access to managed notebooks instances isn't available.\n**Issue**\nIf you're unable to access the terminal or can't find the terminal window in the launcher, it could be because your managed notebooks instance doesn't have terminal access enabled.\n**Solution**\nYou must create a new managed notebooks instance with the **Terminal access** option enabled. This option can't be changed after instance creation.\n**Issue**\nA 502 error might mean that your managed notebooks instance isn't ready yet.\n**Solution**\nWait a few minutes, refresh the Google Cloud console browser tab, and try again.\n**Issue**\nA 524 error is usually an indication that the Inverting Proxy agent isn't connecting to the Inverting Proxy server or the requests are taking too long on the backend server side (Jupyter). Common causes of this error include networking issues, the Inverting Proxy agent isn't running, or the Jupyter service isn't running.\n**Solution**\nVerify that your managed notebooks instance is started.\n**Issue**\nmanaged notebooks instance isn't running cells or appears to be frozen.\n**Solution**\nFirst try restarting the kernel by clicking **Kernel** from the top menu and then **Restart Kernel** . If that doesn't work, you can try the following:\n- Refresh the JupyterLab browser page. Unsaved cell output doesn't persist, so you must run those cells again to regenerate the output.\n- [Reset your instance](/vertex-ai/docs/workbench/managed/create-managed-notebooks-instance-console-quickstart#reset_your_instance) .\n### Migrating to Vertex AI Workbench instances\nThis section describes methods for diagnosing and resolving issues with migrating from a managed notebooks instance to a Vertex AI Workbench instance.\n**Issue**\nA kernel that was in your managed notebooks instance doesn't appear in the Vertex AI Workbench instance that you migrated to.\nCustom containers appear as kernels in managed notebooks. The Vertex AI Workbench migration tool doesn't support custom container migration.\n**Solution**\nTo resolve this issue, [add a conda environment](/vertex-ai/docs/workbench/instances/add-environment) to your Vertex AI Workbench instance.\n**Issue**\nA framework that was in your managed notebooks instance was a different version than the one in the Vertex AI Workbench instance that you migrated to.\nVertex AI Workbench instances provide a default set of framework versions. The migration tool doesn't add framework versions from your original managed notebooks instance. See [default migration toolbehaviors](/vertex-ai/docs/workbench/managed/migrate-to-instances#defaults) .\n**Solution**\nTo add a specific version of a framework, [add a conda environment](/vertex-ai/docs/workbench/instances/add-environment) to your Vertex AI Workbench instance.\n**Issue**\nGPUs that were in your managed notebooks instance aren't in the Vertex AI Workbench instance that you migrated to.\nVertex AI Workbench instances support a default set of GPUs. If the GPUs in your original managed notebooks instance aren't available, your instance is migrated without any GPUs.\n**Solution**\nAfter migration, you can add GPUs to your Vertex AI Workbench instance by using the [projects.locations.instances.patch](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/patch) method in the Notebooks API or the [gcloud workbench instances update](/sdk/gcloud/reference/workbench/instances/update) command in the Google Cloud SDK.\n**Issue**\nThe machine type of your managed notebooks instance is different from the Vertex AI Workbench instance that you migrated to.\nVertex AI Workbench instances don't support all machine types. If the machine type in your original managed notebooks instance isn't available, your instance is migrated to the `e2-standard-4` machine type.\n**Solution**\nAfter migration, you can change the machine type of your Vertex AI Workbench instance by using the [projects.locations.instances.patch](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/patch) method in the Notebooks API or the [gcloud workbench instances update](/sdk/gcloud/reference/workbench/instances/update) command in the Google Cloud SDK.\n### GPU quota has been exceeded\n**Issue**\nYou are unable to create a managed notebooks instance with GPUs.\n**Solution**\nDetermine the number of GPUs available in your project by [checking the quotas page](https://console.cloud.google.com/quotas) . If GPUs aren't listed on the quotas page, or you require additional GPU quota, you can request a quota increase. See [Request a higher quota limit](/docs/quota_detail/view_manage#requesting_higher_quota) .\n### Using container images\nThis section describes troubleshooting issues with using container images.\n**Issue**\nContainer images that don't have a valid kernelspec don't successfully load as kernels in JupyterLab.\n**Solution**\nMake sure that your container meets our requirements. For more information, see the [custom container requirements](/vertex-ai/docs/workbench/managed/custom-container#requirements) .\n### Notebook disconnects on long-running job\n**Issue**\nIf you see the following error message when running a job in a notebook, it might be caused by the request taking too long to load, or the CPU or memory utilization is high, which can make the Jupyter Service unresponsive.\n```\n{\"log\":\"2021/06/29 18:10:33 failure fetching a VM ID: compute: Received 500\n`internal error`\\n\",\"stream\":\"stderr\",\"time\":\"2021-06-29T18:10:33.383650241Z\"}\n{\"log\":\"2021/06/29 18:38:26 Websocket failure: failed to read a websocket\nmessage from the server: read tcp [::1]:40168-\\u003e[::1]:8080: use of closed\nnetwork connection\\n\",\"stream\":\"stderr\",\"time\":\"2021-06-29T18:38:26.057622824Z\"}\n```\n**Solution**\nThis issue is caused by running a long-running job within a notebook. To run a job that might take a long time to complete, it's recommended to use [the executor](/vertex-ai/docs/workbench/managed/executor) .\n### Using the executor\nThis section describes troubleshooting issues with using executor.\n**Note:** Make sure that your Virtual Private Cloud allows access to PyPI and  VPC Service Controls, and that your organization policy doesn't  block access.\n**Issue**\nThe executor runs your notebook code in a separate environment from the kernel where you run your notebook file's code. Because of this, some of the packages you installed might not be available in the executor's environment.\n**Solution**\nTo resolve this issue, see [Ensure package installations are available tothe executor](/vertex-ai/docs/workbench/managed/executor#ensure_package_installations_are_available_to_the_executor) .\n**Issue**\nA 401 or 403 error when you run the executor can mean that the executor isn't able to access resources.\n**Solution**\nSee the following for possible causes:\n- The executor runs your notebook code in a [tenant project](/service-infrastructure/docs/manage-tenant-projects) separate from your managed notebooks instance's project. Therefore, when you access resources through code run by the executor, the executor might not connect to the correct Google Cloud project by default. To resolve this issue, [use explicit projectselection](/vertex-ai/docs/workbench/managed/executor#explicit-project-selection) .\n- By default, your managed notebooks instance can have access to resources that exist in the same project, and therefore, when you run your notebook file's code manually, these resources don't need additional authentication. However, because the executor runs in a separate tenant project, it does not have the same default access. To resolve this issue, [authenticate access using service accounts](/vertex-ai/docs/workbench/managed/executor#authenticate_access_using_service_accounts) .\n- The executor can't use end-user credentials to authenticate access to resources, for example, the [gcloud auth login command](/sdk/gcloud/reference/auth/login) . To resolve this issue, [authenticate access using service accounts](/vertex-ai/docs/workbench/managed/executor#authenticate_access_using_service_accounts) .**Issue**\nAn `exited with a non-zero status of 127` error, or \"command not found\" error, can happen when you use the executor to run code on a custom container that doesn't have the `nbexecutor` extension installed.\n**Solution**\nTo ensure that your custom container has the `nbexecutor` extension, you can [create a derivative container image from a Deep Learning Containers image](/deep-learning-containers/docs/derivative-container) . Deep Learning Containers images include the `nbexecutor` extension.\n### Invalid service networking configuration error message\n**Issue**\nThis error might look like the following:\n```\nInvalid Service Networking configuration. Couldn't find free blocks in allocated IP ranges.\nPlease use a valid range using: /24 mask or below (/23,/22, etc).\n```\nThis means that no free blocks were found in the allocated IP ranges of your network.\n**Solution**\nUse a subnet mask of `/24` or lower. [Create a bigger allocatedIP address range](/vpc/docs/configure-private-services-access#procedure) and attach this range by [modifying theprivate service connection](/vpc/docs/configure-private-services-access#modifying-connection) for `servicenetworking-googleapis-com` .\nFor more information, see [Set up a network](/vertex-ai/docs/workbench/managed/networking) .\n### Unable to install third-party JupyterLab extension\n**Issue**\nAttempting to install a third-party JupyterLab extension results in an `Error: 500` message.\n**Solution**\nThird-party JupyterLab extensions aren't supported in managed notebooks instances.\n### Unable to access or copy data of an instance with single user access\n**Issue**\nThe data on an instance with single user access is inaccessible.\n**Solution**\nFor managed notebooks instances that are set up with single user access, only the specified single user (the owner) can access the data on the instance.\nTo access or copy the data when you aren't the owner of the instance, open a support case.\n### Unexpected shutdown\n**Issue**\nYour Vertex AI Workbench instance shuts down unexpectedly.\n**Solution**\nIf your instance shuts down unexpectedly, this could be because [idle shutdown](/vertex-ai/docs/workbench/managed/idle-shutdown) was initiated.\nIf you enabled idle shutdown, your instance shuts down when there is no kernel activity for the specified time period. For example, running a cell or new output printing to a notebook is activity that resets the idle timeout timer. CPU usage doesn't reset the idle timeout timer.\n### Restore instance\n**Issue**\nRestoring a managed notebooks instance after it's been deleted isn't supported.\n**Solution**\nTo back up the data on your instance, you can [save your notebooks to GitHub](/vertex-ai/docs/workbench/managed/save-to-github) .\n### Recover data from an instance\n**Issue**\nRecovering data from a managed notebooks instance after it's been deleted isn't supported.\n**Solution**\nTo back up the data on your instance, you can [save your notebooks to GitHub](/vertex-ai/docs/workbench/managed/save-to-github) .\n### Creating managed notebooks instances\nThis section describes troubleshooting issues with creating managed notebooks instances.\n**Issue**\nYou encounter this error while creating an instance:\n```\nWe encountered a problem while creating a connection.\nService 'servicenetworking.googleapis.com' requires at least\none allocated range to have minimal size; please make sure\nat least one allocated range will have prefix length at most '24'.\n```\n**Solution**\n[Create an allocated IP range](/vpc/docs/configure-private-services-access#procedure) bigger than `/24` and attach this range by [modifying the private serviceconnection](/vpc/docs/configure-private-services-access#modifying-connection) for the `servicenetworking-googleapis-com` connection.\n### Creating an instance results in a resource availability error\n**Issue**\nYou're unable to create an instance because of a resource availability error.\nThis error can look like the following:\n```\nCreating notebook INSTANCE_NAME: ZONE does not have\nenough resources available to fulfill the request.\nRetry later or try another zone in your configurations.\n```\nResource errors occur when you request new resources in a zone that can't accommodate your request due to the current unavailability of Compute Engine resources, such as GPUs or CPUs.\nResource errors only apply to new resource requests in the zone and don't affect existing resources. Resource errors aren't related to your Compute Engine quota. Resource errors are temporary and can change frequently based on fluctuating demand.\n**Solution**\nTo proceed, try the following:\n- Create an instance with a different machine type.\n- Create the instance in a different zone.\n- Attempt the request again later.\n- Reduce the amount of resources that you're requesting. For example, try to create an instance with less GPUs, disks, vCPUs, or memory.\n### Starting an instance results in a resource availability error\n**Issue**\nYou're unable to start an instance because of a resource availability error.\nThis error can look like the following:\n```\nThe zone ZONE_NAME doesn't have enough resources available to fulfill\nthe request. '(resource type:compute)'.\n```\nResource errors occur when you try to start an instance in a zone that can't accommodate your request due to the current unavailability of Compute Engine resources, such as GPUs or CPUs.\nResource errors only apply to the resources you specified in your request at the time you sent the request, not to all resources in the zone. Resource errors aren't related to your Compute Engine quota. Resource errors are temporary and can change frequently based on fluctuating demand.\n**Solution**\nTo proceed, try the following:\n- Change the machine type of your instance.\n- Migrate your files and data to an instance in a different zone.\n- Attempt the request again later.\n- Reduce the amount of resources that you're requesting. For example, start a different instance with less GPUs, disks, vCPUs, or memory.## User-managed notebooks\nVertex AI Workbench user-managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  user-managed notebooks will end and the ability to create user-managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your user-managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/user-managed/migrate-to-instances) .\nThis section describes troubleshooting steps for user-managed notebooks.\n### Connecting to and opening JupyterLab\nThis section describes troubleshooting issues with connecting to and opening JupyterLab.\n**Issue**\nWhen you click **Open JupyterLab** , nothing happens.\n**Solution**\nVerify that your browser doesn't block new tabs from opening automatically. JupyterLab opens in a new browser tab.\n**Issue**\nYou are unable to access JupyterLab.\nVertex AI Workbench uses a Google internal Inverting Proxy server to provide access to JupyterLab. User-managed notebooks instance settings, network configuration, and other factors can prevent access to JupyterLab.\n**Solution**\n[Use SSH to connect to JupyterLab and learn more about why you might not haveaccess through the Inverting Proxy](/vertex-ai/docs/workbench/user-managed/ssh-access) .\n**Issue**\nYou're unable to connect to your instance by using SSH through a terminal window.\nUser-managed notebooks instances use [OS Login](/compute/docs/oslogin) to enable SSH access. When you create an instance, Vertex AI Workbench enables OS Login by default by setting the metadata key `enable-oslogin` to `TRUE` . If you're unable to use SSH to connect to your instance, this metadata key might need to be set to `TRUE` .\n**Solution**\nTo enable SSH access for user-managed notebooks for users, complete the [steps for configuring OS Login roles on user accounts](/compute/docs/oslogin/set-up-oslogin) .\n**Issue**\nA `403 (Forbidden)` error when opening a user-managed notebooks instance often means that there is an access issue.\n**Solution**\nTo troubleshoot access issues, consider the three ways that access can be granted to a user-managed notebooks instance:\n- Single user\n- Service account\n- Project editors\nThe access mode is configured during user-managed notebooks instance creation and it is defined in the notebook metadata:\n- Single user:`proxy-mode=mail, proxy-user-mail=user@domain.com`\n- Service account:`proxy-mode=service_account`\n- Project editors:`proxy-mode=project_editors`\n**Caution:** Changing the access mode metadata isn't supported and can make the JupyterLab user interface inaccessible.\nIf you can't access a notebook when you click **Open JupyterLab** , try the following:\n- [Verify that the proxy-mode metadata entry iscorrect.](/vertex-ai/docs/workbench/user-managed/ssh-access#your_jupyterlab_instances_proxy-mode_metadata_setting_is_incorrect) \n- Verify that the user accessing the instance has the [iam.serviceAccounts.ActAs](/iam/docs/service-account-permissions#attaching) permission for the defined service account. The service account on the instance provides access to other Google Cloud services. You can use any service account within the same project, but you must have the Service Account User permission ( `iam.serviceAccounts.actAs` ) to access the instance. If not specified, the Compute Engine default service account is used and this permission is required as well.\n- If your instance uses single user access with a specified service account as the single user, see [No JupyterLab access, single user modeenabled](#single-user-with-service-account) .\nThe following example shows how to specify a service account when you create an instance:\n```\ngcloud notebooks instances create nb-1 \\\n --vm-image-family=tf-latest-cpu \\\n --metadata=proxy-mode=mail,proxy-user-mail=user@domain.com \\\n --service-account=your_service_account@project_id.iam.gserviceaccount.com \\\n --location=us-west1-a\n```\nWhen you click **Open JupyterLab** to open a notebook, the notebook opens in a new browser tab. If you are signed in to more than one Google Account, the new tab opens with your default Google Account. If you didn't create your user-managed notebooks instance with your default Google Account, the new browser tab will show a `403 (Forbidden)` error.\n**Issue**\nYou are unable to access JupyterLab.\n**Solution**\nIf a user is unable to access JupyterLab and the instance's access to JupyterLab is set to `Single user only` , try the following:\n- On the [User-managed notebooks page ofthe Google Cloud console](https://console.cloud.google.com/vertex-ai/workbench/user-managed) , click the name of your instance to open the **Notebook details** page.\n- Next to **View VM details** , click **View in Compute Engine** .\n- On the VM details page, click **Edit** .\n- In the **Metadata** section, verify that the `proxy-mode` metadata entry is set to `mail` .\n- Verify that the `proxy-user-mail` metadata entry is set to a valid user email address, not a service account.\n- Click **Save** .\n- On the [User-managed notebooks page ofthe Google Cloud console](https://console.cloud.google.com/vertex-ai/workbench/user-managed) , initialize the updated metadata by [stopping your instance](/vertex-ai/docs/workbench/user-managed/create-user-managed-notebooks-instance-console-quickstart#stop_your_instance) and [starting the instance](/vertex-ai/docs/workbench/user-managed/create-user-managed-notebooks-instance-console-quickstart#start_your_instance) back up again.**Issue**\nThis is an indication of an internal proxy timeout or a backend server (Jupyter) timeout. This can be seen when:\n- The request never reached the internal Inverting Proxy server\n- Backend (Jupyter) returns a 504 error.\n**Solution**\nOpen a Google support case.\n**Issue**\nThe internal Inverting Proxy server hasn't received a response from the Inverting Proxy agent for the request within the timeout period. Inverting Proxy agent runs inside your user-managed notebooks instance as a Docker container. A 524 error is usually an indication that the Inverting Proxy agent isn't connecting to the Inverting Proxy server or the requests are taking too long on the backend server side (Jupyter). A typical case for this error is on the user side (for example, a networking issue, or the Inverting Proxy agent service isn't running).\n**Solution**\nIf you can't access a notebook, verify that your user-managed notebooks instance is started and try the following:\n**Option 1** : Run the [diagnostictool](/vertex-ai/docs/workbench/user-managed/monitor-health#diagnostic-tool) to automatically check and repair user-managed notebooks core services, verify available storage, and generate useful log files. To run the tool in your instance, perform the following steps:\n- Make sure that your instance is on version M58 or newer.\n- [Connect to your Deep Learning VM Images instance usingSSH](/compute/docs/instances/connecting-to-instance) .\n- Run the following command:```\nsudo /opt/deeplearning/bin/diagnostic_tool.sh [--repair] [--bucket=$BUCKET]\n```Note that the `--repair` flag and `--bucket` flags are optional. The `--repair` flag will attempt to fix common core service errors, and the `--bucket` flag will let you specify a Cloud Storage bucket to store the created log files.The output of this command will display useful status messages for user-managed notebooks core services and will export log files of its findings.\n**Option 2** : Use the following steps to check specific user-managed notebooks requirements individually.\n- Verify that the user-managed notebooks instance disk isn't out of space.- [Connect to your Deep Learning VM Images instance usingSSH](/compute/docs/instances/connecting-to-instance) .\n- Run the following command:```\ndf -h -T /home/jupyter\n```If the **Use%** is more than `85%` , you need to manually delete files from `/home/jupyter` . As a first step, you can empty the trash with the following command:```\nsudo rm -rf \u00a0/home/jupyter/.local/share/Trash/*\n```\n- [Verify that the Docker service is started](#verify-docker-service) .\n- [Verify that the Inverting Proxy agent is running](#verify-inverting-proxy-agent) . If the agent is started, try restarting it.\n- [Make sure the Jupyter service is running](#verify-jupyter-service) . If it is, try [restarting it](#restart-jupyter-service) .\n- Verify memory utilization in the user-managed notebooks instance.- [Connect to your Deep Learning VM instance usingSSH](/compute/docs/instances/connecting-to-instance) .\n- Run the following command:```\nfree -t -h\n```If the **used** memory is more than `85%` of the **total** , you should consider [changing themachine type](/vertex-ai/docs/workbench/user-managed/manage-hardware-accelerators) .\n- You can [install Cloud Monitoringagent](https://cloud.google.com/monitoring/agent/installation#joint-install) to monitor if there is high memory usage in your user-managed notebooks instance. See [pricing information](/stackdriver/pricing#monitoring-costs) .\n- Verify that you are using [Deep Learning VM versionM55](/deep-learning-vm/docs/release-notes) or later. To learn more about upgrading, see [Upgrade the environment ofa user-managed notebooks instance](/vertex-ai/docs/workbench/user-managed/upgrade) .**Issue**\nThe Inverting Proxy server hasn't heard from the Inverting Proxy agent at all for more than 10 minutes. This is a strong indication of an Inverting Proxy agent issue.\n**Solution**\nIf you can't access a notebook, try the following:\n- Verify that your user-managed notebooks instance is started.\n- [Verify that the Docker service is started](#verify-docker-service) .\n- [Verify that the Inverting Proxy agent is running](#verify-inverting-proxy-agent) . If the agent is started, try restarting it.\n- [Make sure the Jupyter service is running](#verify-jupyter-service) . If it is, try [restarting it](#restart-jupyter-service) .\n- Verify that you are using [Deep Learning VM versionM55](/deep-learning-vm/docs/release-notes) or later. To learn more about upgrading, see [Upgrade the environment ofa user-managed notebooks instance](/vertex-ai/docs/workbench/user-managed/upgrade) .**Issue**\nYour user-managed notebooks instance isn't running cells or appears to be frozen.\n**Solution**\nFirst try restarting the kernel by clicking **Kernel** from the top menu and then **Restart Kernel** . If that doesn't work, you can try the following:\n- Refresh the JupyterLab browser page. Any unsaved cell output doesn't persist, so you must run those cells again to regenerate the output.\n- From a terminal session in the notebook, run the command`top`to see if there are processes consuming the CPU.\n- From the terminal, check the amount of free disk space using the command`df`, or check the available RAM using the command`free`.\n- Shut your instance down by selecting it from the [User-managed notebooks page](https://console.cloud.google.com/vertex-ai/workbench/user-managed) and clicking **Stop** . After it has stopped completely, select it and click **Start** .\n### Migrating to Vertex AI Workbench instances\nThis section describes methods for diagnosing and resolving issues with migrating from a user-managed notebooks instance to a Vertex AI Workbench instance.\n**Issue**\nA kernel that was in your user-managed notebooks instance doesn't appear in the Vertex AI Workbench instance that you migrated to.\nSome kernels, such as the R and Beam kernels, aren't available in Vertex AI Workbench instances by default. Migration of those kernels isn't supported.\n**Solution**\nTo resolve this issue, [add a conda environment](/vertex-ai/docs/workbench/instances/add-environment) to your Vertex AI Workbench instance.\n**Issue**\nDataproc Hub isn't supported in Vertex AI Workbench instances.\n**Solution**\nContinue to use Dataproc Hub in user-managed notebooks instances.\n**Issue**\nA framework that was in your user-managed notebooks instance was a different version than the one in the Vertex AI Workbench instance that you migrated to.\nVertex AI Workbench instances provide a default set of framework versions. The migration tool doesn't add framework versions from your original user-managed notebooks instance. See [default migration toolbehaviors](/vertex-ai/docs/workbench/user-managed/migrate-to-instances#defaults) .\n**Solution**\nTo add a specific version of a framework, [add a conda environment](/vertex-ai/docs/workbench/instances/add-environment) to your Vertex AI Workbench instance.\n**Issue**\nGPUs that were in your user-managed notebooks instance aren't in the Vertex AI Workbench instance that you migrated to.\nVertex AI Workbench instances support a default set of GPUs. If the GPUs in your original user-managed notebooks instance aren't available, your instance is migrated without any GPUs.\n**Solution**\nAfter migration, you can add GPUs to your Vertex AI Workbench instance by using the [projects.locations.instances.patch](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/patch) method in the Notebooks API or the [gcloud workbench instances update](/sdk/gcloud/reference/workbench/instances/update) command in the Google Cloud SDK.\n**Issue**\nThe machine type of your user-managed notebooks instance is different from the Vertex AI Workbench instance that you migrated to.\nVertex AI Workbench instances don't support all machine types. If the machine type in your original user-managed notebooks instance isn't available, your instance is migrated to the `e2-standard-4` machine type.\n**Solution**\nAfter migration, you can change the machine type of your Vertex AI Workbench instance by using the [projects.locations.instances.patch](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/patch) method in the Notebooks API or the [gcloud workbench instances update](/sdk/gcloud/reference/workbench/instances/update) command in the Google Cloud SDK.\n### Working with files\nThis section describes troubleshooting issues with files for user-managed notebooks instances.\n**Issue**\nFor Dataproc Hub user-managed notebooks instances, disabling file downloading from the JupyterLab user interface isn't supported. User-managed notebooks instances that use the Dataproc Hub framework permit file downloading even if you don't select **Enable file downloading from JupyterLab UI** when you create the instance.\n**Solution**\nDataproc Hub user-managed notebooks instances don't support restricting file downloads.\n**Issue**\nWhen you download files from your user-managed notebooks instance, a timeout setting on the proxy-forwarding agent limits the connection time for the download to complete. If the download takes too long, this can truncate your downloaded file or prevent it from being downloaded.\n**Solution**\nTo download the file, [copy your file toCloud Storage](/storage/docs/uploading-objects#upload-object-cli) , and then download the file from Cloud Storage.\nConsider [migrating your files and data](/vertex-ai/docs/workbench/user-managed/migrate) to a new user-managed notebooks instance.\n**Issue**\nSometimes after restarting a user-managed notebooks instance, local files can't be referenced from within a notebook terminal.\n**Solution**\nThis is a known issue. To reference your local files from within a notebook terminal, first re-establish your current working directory using the following command:\n```\ncd PWD\n```\nIn this command, replace with your current working directory. For example, if your current working directory was `/home/jupyter/` , use the command `cd /home/jupyter/` .\nAfter re-establishing your current working directory, your local files can be referenced from within the notebook terminal.\n### Creating user-managed notebooks instances\nThis section describes troubleshooting issues with creating user-managed notebooks instances.\n### GPU quota has been exceeded\n**Issue**\nYou are unable to create a user-managed notebooks instance with GPUs.\n**Solution**\nDetermine the number of GPUs available in your project by [checking the quotas page](https://console.cloud.google.com/quotas) . If GPUs aren't listed on the quotas page, or you require additional GPU quota, you can request a quota increase. See [Request a higher quota limit](/docs/quota_detail/view_manage#requesting_higher_quota) .\n**Issue**\nIt usually takes about a minute to create a user-managed notebooks instance. If your new user-managed notebooks instance remains in the `pending` state indefinitely, it might be because the service account used to start the user-managed notebooks instance doesn't have the required **Editor** permission in your Google Cloud project.\nYou can start a user-managed notebooks instance with a custom service account that you create or in single-user mode with a userid. If you start a user-managed notebooks instance in single-user mode, then your user-managed notebooks instance begins the boot process using Compute Engine default service account before turning control over to your user ID.\n**Solution**\nTo verify that a service account has the appropriate permissions, follow these steps:\n- Open the IAM page in the Google Cloud console. [Open the IAM page](https://console.cloud.google.com/iam-admin/iam) \n- Determine the service account used with your user-managed notebooks instance, which is one of the following:- A custom service account that you specified when you created your user-managed notebooks instance.\n- The Compute Engine default service account for your Google Cloud project, which is used when you start your user-managed notebooks instance in single-user mode. The Compute Engine default service account for your Google Cloud project is named `` `-compute@developer.gserviceaccount.com` . For example: `113377992299-compute@developer.gserviceaccount.com` .\n- Verify that your service account is in the **Editor** role.\n- If not, edit the service account and add it to the **Editor** role.\nFor more information, see [Granting, changing, and revoking access to resources](/iam/docs/granting-changing-revoking-access) in the IAM documentation.- If you haven't already, install the [Google Cloud CLI](/compute/docs/gcloud-compute) .\n- Get the name and project number for your Google Cloud project with the following command. Replace with the project ID for your Google Cloud project.```\ngcloud projects describe PROJECT_ID\n```You should see output similar to the following, which displays the name ( `name:` ) and project number ( `projectNumber:` ) for your project.```\ncreateTime: '2018-10-18T21:03:31.408Z'\nlifecycleState: ACTIVE\nname: my-project-name\nparent:\n id: '396521612403'\n type: folder\nprojectId: my-project-id-1234\nprojectNumber: '113377992299'\n```\n- Determine the service account used with your user-managed notebooks instance, which is one of the following:- A custom service account that you specified when you created your user-managed notebooks instance.\n- The Compute Engine default service account for your Google Cloud project, which is used when you start your user-managed notebooks instance in single-user mode. The Compute Engine default service account for your Google Cloud project is named `` `-compute@developer.gserviceaccount.com` . For example: `113377992299-compute@developer.gserviceaccount.com` .\n- Add the `roles/editor` role to the service account with the following command. Replace with the name of your project, and replace with the service account ID for your user-managed notebooks instance.```\ngcloud projects add-iam-policy-binding project-name \\\n --member serviceAccount:service-account-id \\\n --role roles/editor\n```**Issue**\nThe service account on the instance provides access to other Google Cloud services. You can use any service account within the same project, but you must have the Service Account User permission ( `iam.serviceAccounts.actAs` ) to create the instance. If not specified, the Compute Engine default service account is used.\n**Solution**\nWhen creating an instance, verify that the user creating the instance has the [iam.serviceAccounts.ActAs](/iam/docs/service-account-permissions#attaching) permission for the defined service account.\nThe following example shows how to specify a service account when you create an instance:\n```\ngcloud notebooks instances create nb-1 \\\n --vm-image-family=tf-latest-cpu \\\n --service-account=your_service_account@project_id.iam.gserviceaccount.com \\\n --location=us-west1-a\n```\nTo grant the Service Account User role, see [Manage access to service accounts](/iam/docs/manage-access-service-accounts) .\n**Issue**\nWhen creating an instance, verify that a user-managed notebooks instance with the same name wasn't deleted previously by Compute Engine and still exists in the Notebooks API database.\n**Solution**\nThe following example shows how to list instances using the Notebooks API and verify their state.\n```\ngcloud notebooks instances list --location=LOCATION\n```\nIf an instance's state is `DELETED` , run the following command to delete it permanently.\n```\ngcloud notebooks instances delete INSTANCE_NAME --location=LOCATION\n```\n**Issue**\nYou're unable to create an instance in a Shared VPC.\n**Solution**\nIf you are using [Shared VPC](/vpc/docs/shared-vpc) , you must add the host and the service projects to the service perimeter. In the host project, you must also grant the [Compute Network User role](/iam/docs/understanding-roles#compute-engine-roles) ( `roles/compute.networkUser` ) to the [Notebooks Service Agent](/iam/docs/service-agents#cloud-ai-platform-notebooks-service-account) from the service project. For more information, see [Managingservice perimeters](/vpc-service-controls/docs/manage-service-perimeters) .\n**Issue**\nYou're unable to create an instance because of a resource availability error.\nThis error can look like the following:\n```\nCreating notebook INSTANCE_NAME: ZONE does not have enough\nresources available to fulfill the request. Retry later or try another zone in\nyour configurations.\n```\nResource errors occur when you request new resources in a zone that can't accommodate your request due to the current unavailability of Compute Engine resources, such as GPUs or CPUs.\nResource errors only apply to new resource requests in the zone and don't affect existing resources. Resource errors aren't related to your Compute Engine quota. Resource errors are temporary and can change frequently based on fluctuating demand.\n**Solution**\nTo proceed, you can try the following:\n- Create an instance with a different machine type.\n- Create the instance in a different zone.\n- Attempt the request again later.\n- Reduce the amount of resources that you're requesting. For example, try to create an instance with less GPUs, disks, vCPUs, or memory.\n### Starting an instance results in a resource availability error\n**Issue**\nYou're unable to start an instance because of a resource availability error.\nThis error can look like the following:\n```\nThe zone ZONE_NAME doesn't have enough resources available to fulfill\nthe request. '(resource type:compute)'.\n```\nResource errors occur when you try to start an instance in a zone that can't accommodate your request due to the current unavailability of Compute Engine resources, such as GPUs or CPUs.\nResource errors only apply to the resources you specified in your request at the time you sent the request, not to all resources in the zone. Resource errors aren't related to your Compute Engine quota. Resource errors are temporary and can change frequently based on fluctuating demand.\n**Solution**\nTo proceed, you can try the following:\n- Change the machine type of your instance.\n- Migrate your files and data to an instance in a different zone.\n- Attempt the request again later.\n- Reduce the amount of resources that you're requesting. For example, start a different instance with less GPUs, disks, vCPUs, or memory.\n### Upgrading user-managed notebooks instances\nThis section describes troubleshooting issues with upgrading user-managed notebooks instances.\n**Issue**\nUpgrade isn't supported for single-disk user-managed notebooks instances.\n**Solution**\nYou might want to [migrate your user data to a new user-managed notebooksinstance](/vertex-ai/docs/workbench/user-managed/migrate) .\n**Issue**\nVertex AI Workbench depends on UEFI compatibility to complete an upgrade.\nUser-managed notebooks instances created from some older images are not UEFI compatible, and therefore can't be upgraded.\n**Solution**\nTo verify that your instance is UEFI compatible, type the following command in either [Cloud Shell](https://console.cloud.google.com?cloudshell=true) or any environment where the [Google Cloud CLI](/sdk/docs) is installed.\n```\ngcloud compute instances describe INSTANCE_NAME \\\u00a0 --zone=ZONE | grep type\n```\nReplace the following:\n- ``: the name of your instance\n- ``: the zone where your instance is located\nTo verify that the image that you used to create your instance is UEFI compatible, use the following command:\n```\ngcloud compute images describe VM_IMAGE_FAMILY \\\u00a0 --project deeplearning-platform-release | grep type\n```\nReplace `` with the [imagefamily name](/vertex-ai/docs/workbench/user-managed/images) that you used to create your instance.\nIf you determine that either your instance or image isn't UEFI compatible, you can attempt to migrate your user data to a new user-managed notebooks instance. To do so, complete the following steps:\n- Verify that the image that you want to use to create your new instance is UEFI compatible. To do so, type the following command in either [Cloud Shell](https://console.cloud.google.com?cloudshell=true) or any environment where the [Google Cloud CLI](/sdk/docs) is installed.```\ngcloud compute images describe VM_IMAGE_FAMILY \\\u00a0 --project deeplearning-platform-release --format=json | grep type\n```Replace `` with the image family name that you want to use to create your instance.\n- [Migrate your user data to a new user-managed notebooksinstance](/vertex-ai/docs/workbench/user-managed/migrate) .**Issue**\nIf the user-managed notebooks instance isn't accessible after an upgrade, there might have been a failure during the replacement of the boot disk image.\nUser-managed notebooks instances that can be upgraded are dual-disk, with one boot disk and one data disk. The upgrade process upgrades the boot disk to a new image while preserving your data on the data disk.\n**Solution**\nComplete the following steps to attach a new valid image to the boot disk.\n- To store values you'll use to complete this procedure, type the following command in either [Cloud Shell](https://console.cloud.google.com?cloudshell=true) or any environment where the [Google Cloud CLI](/sdk/docs) is installed.```\nexport INSTANCE_NAME=MY_INSTANCE_NAMEexport PROJECT_ID=MY_PROJECT_IDexport ZONE=MY_ZONE\n```Replace the following:- ``: the name of your instance\n- ``: your project ID\n- ``: the zone where your instance is located\n- Use the following command to stop the instance:```\ngcloud compute instances stop $INSTANCE_NAME \\\u00a0 --project=$PROJECT_ID --zone=$ZONE\n```\n- Detach the data disk from the instance.```\ngcloud compute instances detach-disk $INSTANCE_NAME --device-name=data \\\u00a0 --project=$PROJECT_ID --zone=$ZONE\n```\n- Delete the instance's VM.```\ngcloud compute instances delete $INSTANCE_NAME --keep-disks=all --quiet \\\u00a0 --project=$PROJECT_ID --zone=$ZONE\n```\n- Use the Notebooks API to delete the user-managed notebooks instance.```\ngcloud notebooks instances delete $INSTANCE_NAME \\\u00a0 --project=$PROJECT_ID --location=$ZONE\n```\n- Create a user-managed notebooks instance using the same name as your previous instance.```\ngcloud notebooks instances create $INSTANCE_NAME \\\u00a0 --vm-image-project=\"deeplearning-platform-release\" \\\u00a0 --vm-image-family=MY_VM_IMAGE_FAMILY \\\u00a0 --instance-owners=MY_INSTANCE_OWNER \\\u00a0 --machine-type=MY_MACHINE_TYPE \\\u00a0 --service-account=MY_SERVICE_ACCOUNT \\\u00a0 --accelerator-type=MY_ACCELERATOR_TYPE \\\u00a0 --accelerator-core-count=MY_ACCELERATOR_CORE_COUNT \\\u00a0 --install-gpu-driver \\\u00a0 --project=$PROJECT_ID \\\u00a0 --location=$ZONE\n```Replace the following:- ``: the [image familyname](/vertex-ai/docs/workbench/user-managed/images#deciding) \n- ``: your instance owner\n- ``: the [machinetype](/compute/docs/machine-types) of your instance's VM\n- ``: the service account to use with this instance, or use`\"default\"`\n- ``: the accelerator type; for example,`\"NVIDIA_TESLA_K80\"`\n- ``: the core count; for example,`1`\n### Monitoring health status of user-managed notebooks instances\nThis section describes how to troubleshoot issues with monitoring health status errors.\nFollow these steps after a `docker-proxy-agent` status failure:\n- [Verify that the Inverting Proxy agent is running.](#verify-inverting-proxy-agent) If not, go to step 3.\n- [Restart the Inverting Proxy agent.](#restart-inverting-proxy-agent) \n- [Re-register with the Inverting Proxy server.](#re-register-inverting-proxy-server) Follow these steps after a `docker-service` status failure:\n- [Verify that the Docker service is running.](#verify-docker-service) \n- [Restart the Docker service.](#restart-docker) Follow these steps after a `jupyter-service` status failure:\n- [Verify that the Jupyter service is running.](#verify-jupyter-service) \n- [Restart the Jupyter service.](#restart-jupyter-service) Follow these steps after a `jupyter-api` status failure:\n- [Verify that the Jupyter internal API is active.](#verify-jupyter-internal-api) \n- [Restart the Jupyter service.](#restart-jupyter-service) The boot disk space status is unhealthy if the disk space is greater than 85% full.\nIf your boot disk space status is unhealthy, try the following:\n- From a terminal session in the user-managed notebooks instance or [using ssh to connect](#ssh-connect) , check the amount of free disk space using the command `df -H` .\n- Use the command `find . -type d -size +100M` to help you find large files that you might be able to delete, but don't delete them unless you are sure you can safely do so. If you aren't sure, you can [get help from support](/vertex-ai/docs/support/getting-support) .\n- If the previous steps don't solve your problem, [get support](/vertex-ai/docs/support/getting-support) .The data disk space status is unhealthy if the disk space is greater than 85% full.\nIf your data disk space status is unhealthy, try the following:\n- From a terminal session in the user-managed notebooks instance or [using ssh to connect](#ssh-connect) , check the amount of free disk space using the command `df -h -T /home/jupyter` .\n- Delete large files to increase the available disk space. Use the command `find . -type d -size +100M` to help you find large files.\n- If the previous steps don't solve your problem, [get support](/vertex-ai/docs/support/getting-support) .\n### Unable to install third-party JupyterLab extension\n**Issue**\nAttempting to install a third-party JupyterLab extension results in an `Error: 500` message.\n**Solution**\nThird-party JupyterLab extensions aren't supported in user-managed notebooks instances.\n### Restore instance\n**Issue**\nRestoring a user-managed notebooks instance after it's been deleted isn't supported.\n**Solution**\nTo back up the data on your instance, you can [save your notebooks to GitHub](/vertex-ai/docs/workbench/user-managed/save-to-github) or make a [snapshot of the disk](/vertex-ai/docs/workbench/user-managed/backup-snapshot) .\n### Recover data from an instance\n**Issue**\nRecovering data from a user-managed notebooks instance after it's been deleted isn't supported.\n**Solution**\nTo back up the data on your instance, you can [save your notebooks to GitHub](/vertex-ai/docs/workbench/user-managed/save-to-github) or make a [snapshot of the disk](/vertex-ai/docs/workbench/user-managed/backup-snapshot)\n### Unable to increase shared memory\n**Issue**\nYou can't increase shared memory on an existing user-managed notebooks instance.\n**Solution**\nHowever, you can specify a shared memory size when you create a user-managed notebooks instance by using the `container-custom-params` metadata key, with a value like the following:\n```\n--shm-size=SHARED_MEMORY_SIZE gb\n```\nReplace `` with the size that you want in GB.\n## Helpful procedures\nThis section describes procedures that you might find helpful.\n### Use SSH to connect to your user-managed notebooks instance\nUse ssh to connect to your instance by typing the following command in either [Cloud Shell](https://console.cloud.google.com?cloudshell=true) or any environment where the [Google Cloud CLI](/sdk/docs) is installed.\n```\ngcloud compute ssh --project PROJECT_ID \\\u00a0 --zone ZONE \\\u00a0 INSTANCE_NAME -- -L 8080:localhost:8080\n```\nReplace the following:\n- ``: Your project ID\n- ``: The Google Cloud zone where your instance is located\n- ``: The name of your instance\n### Re-register with the Inverting Proxy server\nTo re-register the user-managed notebooks instance with the internal Inverting Proxy server, you can stop and start the VM from the [User-managed notebooks page](https://console.cloud.google.com/vertex-ai/workbench/user-managed) or you can [use ssh to connect toyour user-managed notebooks instance](#ssh-connect) and enter:\n```\ncd /opt/deeplearning/bin\nsudo ./attempt-register-vm-on-proxy.sh\n```\n### Verify the Docker service status\nTo verify the Docker service status you can [use ssh to connect to youruser-managed notebooks instance](#ssh-connect) and enter:\n```\nsudo service docker status\n```\n### Verify that the Inverting Proxy agent is running\nTo verify if the notebook Inverting Proxy agent is running, [use ssh to connect toyour user-managed notebooks instance](#ssh-connect) and enter:\n```\n# Confirm Inverting Proxy agent Docker container is running (proxy-agent)\nsudo docker ps\n# Verify State.Status is running and State.Running is true.\nsudo docker inspect proxy-agent\n# Grab logs\nsudo docker logs proxy-agent\n```\n### Verify the Jupyter service status and collect logs\nTo verify the Jupyter service status you can [use ssh toconnect toyour user-managed notebooks instance](#ssh-connect) and enter:\n```\nsudo service jupyter status\n```\nTo collect Jupyter service logs:\n```\nsudo journalctl -u jupyter.service --no-pager\n```\n### Verify that the Jupyter internal API is active\nTo verify that the Jupyter internal API is active you can [use sshto connect toyour user-managed notebooks instance](#ssh-connect) and enter:\n```\ncurl http://127.0.0.1:8080/api/kernelspecs\n```\n### Restart the Docker service\nTo restart the Docker service, you can stop and start the VM from the [User-managed notebooks page](https://console.cloud.google.com/vertex-ai/workbench/user-managed) or you can [use ssh to connect toyour user-managed notebooks instance](#ssh-connect) and enter:\n```\nsudo service docker restart\n```\n### Restart the Inverting Proxy agent\nTo restart the Inverting Proxy agent, you can stop and start the VM from the [User-managed notebooks page](https://console.cloud.google.com/vertex-ai/workbench/user-managed) or you can [use ssh to connect toyour user-managed notebooks instance](#ssh-connect) and enter:\n```\nsudo docker restart proxy-agent\n```\n### Restart the Jupyter service\nTo restart the Jupyter service, you can stop and start the VM from the [User-managed notebooks page](https://console.cloud.google.com/vertex-ai/workbench/user-managed) or you can [use ssh to connect toyour user-managed notebooks instance](#ssh-connect) and enter:\n```\nsudo service jupyter restart\n```\n### Make a copy of the user data on an instance\nTo store a copy of an instance's user data in Cloud Storage, complete the following steps.\n**Note:** You must have terminal access to your instance. Terminal access is manually set when you create an instance. The terminal access setting can't be changed after the instance is created.\nIn the same project where your instance is located, create a Cloud Storage bucket where you can store your user data. If you already have a Cloud Storage bucket, skip this step.\n- Create a Cloud Storage bucket:```\ngcloud storage buckets create gs://BUCKET_NAME\n```Replace``with a bucket name  that meets the [bucket naming requirements](/storage/docs/buckets#naming) .\n- In your instance's JupyterLab interface, select **File\u00a0>New\u00a0> Terminal** to open a terminal window. For user-managed notebooks instances, you can instead connect to your instance's terminal by [using SSH](/vertex-ai/docs/workbench/user-managed/ssh-access) .\n- Use the [gsutil tool](/storage/docs/gsutil) to copy your user data to a Cloud Storage bucket. The following example command copies all of the files from your instance's `/home/jupyter/` directory to a directory in a Cloud Storage bucket.```\ngsutil cp -R /home/jupyter/* gs://BUCKET_NAMEPATH\n```Replace the following:- ``: the name of your Cloud Storage bucket\n- ``: the path to the directory where you want to copy your files, for example:`/copy/jupyter/`", "guide": "Vertex AI"}