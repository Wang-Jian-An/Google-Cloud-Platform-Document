{"title": "Vertex AI - \u8a55\u4f30 AutoML \u5206\u985e\u548c\u8ff4\u6b78\u6a21\u578b", "url": "https://cloud.google.com/vertex-ai/docs/tabular-data/classification-regression/evaluate-model?hl=zh-cn", "abstract": "# Vertex AI - \u8a55\u4f30 AutoML \u5206\u985e\u548c\u8ff4\u6b78\u6a21\u578b\n\u672c\u9801\u9762\u4ecb\u7d39\u77ad\u5982\u4f55\u8a55\u4f30 AutoML \u5206\u985e\u548c\u8ff4\u6b78\u6a21\u578b\u3002\nVertex AI \u63d0\u4f9b\u4e86\u6a21\u578b\u8a55\u4f30\u6307\u6a19\uff0c\u53ef\u5e6b\u52a9\u60a8\u78ba\u5b9a\u6a21\u578b\u7684\u6027\u80fd\uff0c\u4f8b\u5982\u7cbe\u78ba\u7387\u548c\u53ec\u56de\u7387\u6307\u6a19\u3002Vertex AI \u4f7f\u7528 [\u6e2c\u8a66\u96c6](https://cloud.google.com/vertex-ai/docs/tabular-data/data-splits?hl=zh-cn) \u4f86\u8a08\u7b97\u8a55\u4f30\u6307\u6a19\u3002\n", "content": "## \u6e96\u5099\u5de5\u4f5c\n\u5728\u8a55\u4f30\u6a21\u578b\u4e4b\u524d\uff0c\u5fc5\u9808\u5148 [\u8a13\u7df4\u6a21\u578b](https://cloud.google.com/vertex-ai/docs/tabular-data/classification-regression/train-model?hl=zh-cn) \u3002\n## \u5982\u4f55\u4f7f\u7528\u6a21\u578b\u8a55\u4f30\u6307\u6a19\n\u6a21\u578b\u8a55\u4f30\u6307\u6a19\u63d0\u4f9b\u6a21\u578b\u5728\u6e2c\u8a66\u96c6\u4e0a\u7684\u8868\u73fe\u7684\u91cf\u5316\u6e2c\u91cf\u7d50\u679c\u3002\u5982\u4f55\u89e3\u8b80\u548c\u4f7f\u7528\u9019\u4e9b\u6307\u6a19\u53d6\u6c7a\u65bc\u60a8\u7684\u696d\u52d9\u9700\u6c42\u548c\u6a21\u578b\u8a13\u7df4\u6240\u8981\u89e3\u6c7a\u7684\u554f\u984c\u3002\u4f8b\u5982\uff0c\u5047\u6b63\u4f8b\u7684\u5bb9\u5fcd\u5ea6\u53ef\u80fd\u4f4e\u65bc\u5047\u8ca0\u4f8b\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u9019\u4e9b\u554f\u984c\u6703\u5f71\u97ff\u60a8\u91cd\u9ede\u95dc\u6ce8\u7684\u6307\u6a19\u3002\n## \u7372\u53d6\u8a55\u4f30\u6307\u6a19\n\u60a8\u53ef\u4ee5\u7372\u53d6\u6a21\u578b\u7684\u4e00\u7d44\u7e3d\u9ad4 [\u8a55\u4f30\u6307\u6a19](#metrics) \uff0c\u4ee5\u53ca\u91dd\u5c0d\u7279\u5b9a\u985e\u6216\u6a19\u7c64\u7684\u8a55\u4f30\u6307\u6a19\u3002\u7279\u5b9a\u985e\u6216\u6a19\u7c64\u7684\u8a55\u4f30\u6307\u6a19\u4e5f\u7a31\u7232\u8a55\u4f30\u5207\u7247 \u3002\u4ee5\u4e0b\u5167\u5bb9\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u6216 API \u7372\u53d6\u7e3d\u9ad4\u8a55\u4f30\u6307\u6a19\u548c\u8a55\u4f30\u5207\u7247\u3002\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684 Vertex AI \u90e8\u5206\u4e2d\uff0c\u8f49\u5230 **\u6a21\u578b** \u9801\u9762\u3002 [\u6253\u958b\u201c\u6a21\u578b\u201d\u9801\u9762](https://console.cloud.google.com/vertex-ai/models?hl=zh-cn) \n- \u5728 **\u5340\u57df** \u4e0b\u62c9\u5217\u8868\u4e2d\uff0c\u9078\u64c7\u60a8\u7684\u6a21\u578b\u6240\u5728\u7684\u5340\u57df\u3002\n- \u5728\u6a21\u578b\u5217\u8868\u4e2d\uff0c\u9ede\u64ca\u60a8\u7684\u6a21\u578b\u4ee5\u6253\u958b\u6a21\u578b\u7684 **\u8a55\u4f30** \u6a19\u7c64\u9801\u3002\u5728 **\u8a55\u4f30** \u6a19\u7c64\u9801\u4e2d\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u6a21\u578b\u7684\u7e3d\u9ad4\u8a55\u4f30\u6307\u6a19\uff0c\u4f8b\u5982 **\u5e73\u5747\u7cbe\u78ba\u7387** \u548c **\u53ec\u56de\u7387** \u3002\u5982\u679c\u6a21\u578b\u76ee\u6a19\u5177\u6709\u8a55\u4f30\u5207\u7247\uff0c\u5247\u63a7\u5236\u6aaf\u6703\u986f\u793a\u6a19\u7c64\u5217\u8868\u3002\u60a8\u53ef\u4ee5\u9ede\u64ca\u6a19\u7c64\u4f86\u67e5\u770b\u8a72\u6a19\u7c64\u7684\u8a55\u4f30\u6307\u6a19\uff0c\u5982\u4ee5\u4e0b\u793a\u4f8b\u6240\u793a\uff1a\n\u5c0d\u65bc\u6bcf\u7a2e\u6578\u64da\u985e\u578b\u548c\u76ee\u6a19\uff0c\u7372\u53d6\u8a55\u4f30\u6307\u6a19\u7684 API \u8acb\u6c42\u662f\u76f8\u540c\u7684\uff0c\u4f46\u8f38\u51fa\u6709\u6240\u4e0d\u540c\u3002\u4ee5\u4e0b\u793a\u4f8b\u986f\u793a\u4e86\u76f8\u540c\u7684\u8acb\u6c42\u548c\u4e0d\u540c\u7684\u97ff\u61c9\u3002\u5f59\u7e3d\u6a21\u578b\u8a55\u4f30\u6307\u6a19\u63d0\u4f9b\u6709\u95dc\u6574\u500b\u6a21\u578b\u7684\u4fe1\u606f\u3002\u5982\u9700\u67e5\u770b\u6709\u95dc\u7279\u5b9a\u5207\u7247\u7684\u4fe1\u606f\uff0c\u8acb\u5217\u51fa [\u6a21\u578b\u8a55\u4f30\u5207\u7247](#list-slices) \u3002\n\u5982\u9700\u67e5\u770b\u7e3d\u9ad4\u6a21\u578b\u8a55\u4f30\u6307\u6a19\uff0c\u8acb\u4f7f\u7528 [projects.locations.models.evaluations.get](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models.evaluations?hl=zh-cn) \u65b9\u6cd5\u3002\n\u5728\u4e0b\u9762\u9078\u64c7\u60a8\u7684\u76ee\u6a19\u5c0d\u61c9\u7684\u6a19\u7c64\u9801\uff1aVertex AI \u6703\u8fd4\u56de\u4e00\u7d44\u7f6e\u4fe1\u5ea6\u6307\u6a19\u3002\u6bcf\u500b\u5143\u7d20\u986f\u793a\u4e0d\u540c `confidenceThreshold` \u503c\u7684\u8a55\u4f30\u6307\u6a19\uff08\u5f9e 0 \u958b\u59cb\uff0c\u4e00\u76f4\u5230 1\uff09\u3002\u901a\u904e\u67e5\u770b\u4e0d\u540c\u7684\u95be\u503c\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u95be\u503c\u5982\u4f55\u5f71\u97ff\u5176\u4ed6\u6307\u6a19\uff0c\u4f8b\u5982\u7cbe\u78ba\u7387\u548c\u53ec\u56de\u7387\u3002\n\u9078\u64c7\u8207\u60a8\u7684\u8a9e\u8a00\u6216\u74b0\u5883\u5c0d\u61c9\u7684\u6a19\u7c64\u9801\uff1a\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u5b58\u5132\u6a21\u578b\u7684\u5340\u57df\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u7684 ID\u3002\n- \uff1a\u81ea\u52d5\u751f\u6210\u7684 [\u9805\u76ee\u7de8\u865f](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u6a21\u578b\u8a55\u4f30\u7684 ID\uff08\u986f\u793a\u5728\u97ff\u61c9\u4e2d\uff09\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X GET \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method GET ` -Headers $headers ` -Uri \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/GetModelEvaluationTabularClassificationSample.java) \n```\nimport com.google.cloud.aiplatform.v1.ModelEvaluation;import com.google.cloud.aiplatform.v1.ModelEvaluationName;import com.google.cloud.aiplatform.v1.ModelServiceClient;import com.google.cloud.aiplatform.v1.ModelServiceSettings;import java.io.IOException;public class GetModelEvaluationTabularClassificationSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // To obtain evaluationId run the code block below after setting modelServiceSettings.\u00a0 \u00a0 //\u00a0 \u00a0 // try (ModelServiceClient modelServiceClient = ModelServiceClient.create(modelServiceSettings))\u00a0 \u00a0 // {\u00a0 \u00a0 // \u00a0 String location = \"us-central1\";\u00a0 \u00a0 // \u00a0 ModelName modelFullId = ModelName.of(project, location, modelId);\u00a0 \u00a0 // \u00a0 ListModelEvaluationsRequest modelEvaluationsrequest =\u00a0 \u00a0 // \u00a0 ListModelEvaluationsRequest.newBuilder().setParent(modelFullId.toString()).build();\u00a0 \u00a0 // \u00a0 for (ModelEvaluation modelEvaluation :\u00a0 \u00a0 // \u00a0 \u00a0 modelServiceClient.listModelEvaluations(modelEvaluationsrequest).iterateAll()) {\u00a0 \u00a0 // \u00a0 \u00a0 \u00a0 System.out.format(\"Model Evaluation Name: %s%n\", modelEvaluation.getName());\u00a0 \u00a0 // \u00a0 }\u00a0 \u00a0 // }\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String modelId = \"YOUR_MODEL_ID\";\u00a0 \u00a0 String evaluationId = \"YOUR_EVALUATION_ID\";\u00a0 \u00a0 getModelEvaluationTabularClassification(project, modelId, evaluationId);\u00a0 }\u00a0 static void getModelEvaluationTabularClassification(\u00a0 \u00a0 \u00a0 String project, String modelId, String evaluationId) throws IOException {\u00a0 \u00a0 ModelServiceSettings modelServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 ModelServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (ModelServiceClient modelServiceClient = ModelServiceClient.create(modelServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 ModelEvaluationName modelEvaluationName =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ModelEvaluationName.of(project, location, modelId, evaluationId);\u00a0 \u00a0 \u00a0 ModelEvaluation modelEvaluation = modelServiceClient.getModelEvaluation(modelEvaluationName);\u00a0 \u00a0 \u00a0 System.out.println(\"Get Model Evaluation Tabular Classification Response\");\u00a0 \u00a0 \u00a0 System.out.format(\"\\tName: %s\\n\", modelEvaluation.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"\\tMetrics Schema Uri: %s\\n\", modelEvaluation.getMetricsSchemaUri());\u00a0 \u00a0 \u00a0 System.out.format(\"\\tMetrics: %s\\n\", modelEvaluation.getMetrics());\u00a0 \u00a0 \u00a0 System.out.format(\"\\tCreate Time: %s\\n\", modelEvaluation.getCreateTime());\u00a0 \u00a0 \u00a0 System.out.format(\"\\tSlice Dimensions: %s\\n\", modelEvaluation.getSliceDimensionsList());\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/get-model-evaluation-tabular-classification.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample\u00a0* (not necessary if passing values as arguments). To obtain evaluationId,\u00a0* instantiate the client and run the following the commands.\u00a0*/// const parentName = `projects/${project}/locations/${location}/models/${modelId}`;// const evalRequest = {// \u00a0 parent: parentName// };// const [evalResponse] = await modelServiceClient.listModelEvaluations(evalRequest);// console.log(evalResponse);// const modelId = 'YOUR_MODEL_ID';// const evaluationId = 'YOUR_EVALUATION_ID';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';// Imports the Google Cloud Model Service Client libraryconst {ModelServiceClient} = require('@google-cloud/aiplatform');// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst modelServiceClient = new ModelServiceClient(clientOptions);async function getModelEvaluationTabularClassification() {\u00a0 // Configure the parent resources\u00a0 const name = `projects/${project}/locations/${location}/models/${modelId}/evaluations/${evaluationId}`;\u00a0 const request = {\u00a0 \u00a0 name,\u00a0 };\u00a0 // Get model evaluation request\u00a0 const [response] = await modelServiceClient.getModelEvaluation(request);\u00a0 console.log('Get model evaluation tabular classification response');\u00a0 console.log(`\\tName : ${response.name}`);\u00a0 console.log(`\\tMetrics schema uri : ${response.metricsSchemaUri}`);\u00a0 console.log(`\\tMetrics : ${JSON.stringify(response.metrics)}`);\u00a0 console.log(`\\tCreate time : ${JSON.stringify(response.createTime)}`);\u00a0 console.log(`\\tSlice dimensions : ${response.sliceDimensions}`);\u00a0 const modelExplanation = response.modelExplanation;\u00a0 console.log('\\tModel explanation');\u00a0 if (!modelExplanation) {\u00a0 \u00a0 console.log('\\t\\t{}');\u00a0 } else {\u00a0 \u00a0 const meanAttributions = modelExplanation.meanAttributions;\u00a0 \u00a0 if (!meanAttributions) {\u00a0 \u00a0 \u00a0 console.log('\\t\\t\\t []');\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 for (const meanAttribution of meanAttributions) {\u00a0 \u00a0 \u00a0 \u00a0 console.log('\\t\\tMean attribution');\u00a0 \u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tBaseline output value : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${meanAttribution.baselineOutputValue}`\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tInstance output value : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${meanAttribution.instanceOutputValue}`\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tFeature attributions : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${JSON.stringify(meanAttribution.featureAttributions)}`\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 console.log(`\\t\\t\\tOutput index : ${meanAttribution.outputIndex}`);\u00a0 \u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tOutput display name : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${meanAttribution.outputDisplayName}`\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tApproximation error : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${meanAttribution.approximationError}`\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}getModelEvaluationTabularClassification();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/snippets/model_service/get_model_evaluation_tabular_classification_sample.py) \n```\nfrom google.cloud import aiplatformdef get_model_evaluation_tabular_classification_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 model_id: str,\u00a0 \u00a0 evaluation_id: str,\u00a0 \u00a0 location: str = \"us-central1\",\u00a0 \u00a0 api_endpoint: str = \"us-central1-aiplatform.googleapis.com\",):\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 To obtain evaluation_id run the following commands where LOCATION\u00a0 \u00a0 is the region where the model is stored, PROJECT is the project ID,\u00a0 \u00a0 and MODEL_ID is the ID of your model.\u00a0 \u00a0 model_client = aiplatform.gapic.ModelServiceClient(\u00a0 \u00a0 \u00a0 \u00a0 client_options={\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'api_endpoint':'LOCATION-aiplatform.googleapis.com'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 evaluations = model_client.list_model_evaluations(parent='projects/PROJECT/locations/LOCATION/models/MODEL_ID')\u00a0 \u00a0 print(\"evaluations:\", evaluations)\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 # The AI Platform services require regional API endpoints.\u00a0 \u00a0 client_options = {\"api_endpoint\": api_endpoint}\u00a0 \u00a0 # Initialize client that will be used to create and send requests.\u00a0 \u00a0 # This client only needs to be created once, and can be reused for multiple requests.\u00a0 \u00a0 client = aiplatform.gapic.ModelServiceClient(client_options=client_options)\u00a0 \u00a0 name = client.model_evaluation_path(\u00a0 \u00a0 \u00a0 \u00a0 project=project, location=location, model=model_id, evaluation=evaluation_id\u00a0 \u00a0 )\u00a0 \u00a0 response = client.get_model_evaluation(name=name)\u00a0 \u00a0 print(\"response:\", response)\n```\n\u9078\u64c7\u8207\u60a8\u7684\u8a9e\u8a00\u6216\u74b0\u5883\u5c0d\u61c9\u7684\u6a19\u7c64\u9801\uff1a\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u5b58\u5132\u6a21\u578b\u7684\u5340\u57df\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u7684 ID\u3002\n- \uff1a\u81ea\u52d5\u751f\u6210\u7684 [\u9805\u76ee\u7de8\u865f](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u6a21\u578b\u8a55\u4f30\u7684 ID\uff08\u986f\u793a\u5728\u97ff\u61c9\u4e2d\uff09\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X GET \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method GET ` -Headers $headers ` -Uri \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/GetModelEvaluationTabularRegressionSample.java) \n```\nimport com.google.cloud.aiplatform.v1.ModelEvaluation;import com.google.cloud.aiplatform.v1.ModelEvaluationName;import com.google.cloud.aiplatform.v1.ModelServiceClient;import com.google.cloud.aiplatform.v1.ModelServiceSettings;import java.io.IOException;public class GetModelEvaluationTabularRegressionSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // To obtain evaluationId run the code block below after setting modelServiceSettings.\u00a0 \u00a0 //\u00a0 \u00a0 // try (ModelServiceClient modelServiceClient = ModelServiceClient.create(modelServiceSettings))\u00a0 \u00a0 // {\u00a0 \u00a0 // \u00a0 String location = \"us-central1\";\u00a0 \u00a0 // \u00a0 ModelName modelFullId = ModelName.of(project, location, modelId);\u00a0 \u00a0 // \u00a0 ListModelEvaluationsRequest modelEvaluationsrequest =\u00a0 \u00a0 // \u00a0 ListModelEvaluationsRequest.newBuilder().setParent(modelFullId.toString()).build();\u00a0 \u00a0 // \u00a0 for (ModelEvaluation modelEvaluation :\u00a0 \u00a0 // \u00a0 \u00a0 modelServiceClient.listModelEvaluations(modelEvaluationsrequest).iterateAll()) {\u00a0 \u00a0 // \u00a0 \u00a0 \u00a0 System.out.format(\"Model Evaluation Name: %s%n\", modelEvaluation.getName());\u00a0 \u00a0 // \u00a0 }\u00a0 \u00a0 // }\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String modelId = \"YOUR_MODEL_ID\";\u00a0 \u00a0 String evaluationId = \"YOUR_EVALUATION_ID\";\u00a0 \u00a0 getModelEvaluationTabularRegression(project, modelId, evaluationId);\u00a0 }\u00a0 static void getModelEvaluationTabularRegression(\u00a0 \u00a0 \u00a0 String project, String modelId, String evaluationId) throws IOException {\u00a0 \u00a0 ModelServiceSettings modelServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 ModelServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (ModelServiceClient modelServiceClient = ModelServiceClient.create(modelServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 ModelEvaluationName modelEvaluationName =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ModelEvaluationName.of(project, location, modelId, evaluationId);\u00a0 \u00a0 \u00a0 ModelEvaluation modelEvaluation = modelServiceClient.getModelEvaluation(modelEvaluationName);\u00a0 \u00a0 \u00a0 System.out.println(\"Get Model Evaluation Tabular Regression Response\");\u00a0 \u00a0 \u00a0 System.out.format(\"\\tName: %s\\n\", modelEvaluation.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"\\tMetrics Schema Uri: %s\\n\", modelEvaluation.getMetricsSchemaUri());\u00a0 \u00a0 \u00a0 System.out.format(\"\\tMetrics: %s\\n\", modelEvaluation.getMetrics());\u00a0 \u00a0 \u00a0 System.out.format(\"\\tCreate Time: %s\\n\", modelEvaluation.getCreateTime());\u00a0 \u00a0 \u00a0 System.out.format(\"\\tSlice Dimensions: %s\\n\", modelEvaluation.getSliceDimensionsList());\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/get-model-evaluation-tabular-regression.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample\u00a0* (not necessary if passing values as arguments). To obtain evaluationId,\u00a0* instantiate the client and run the following the commands.\u00a0*/// const parentName = `projects/${project}/locations/${location}/models/${modelId}`;// const evalRequest = {// \u00a0 parent: parentName// };// const [evalResponse] = await modelServiceClient.listModelEvaluations(evalRequest);// console.log(evalResponse);// const modelId = 'YOUR_MODEL_ID';// const evaluationId = 'YOUR_EVALUATION_ID';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';// Imports the Google Cloud Model Service Client libraryconst {ModelServiceClient} = require('@google-cloud/aiplatform');// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst modelServiceClient = new ModelServiceClient(clientOptions);async function getModelEvaluationTabularRegression() {\u00a0 // Configure the parent resources\u00a0 const name = `projects/${project}/locations/${location}/models/${modelId}/evaluations/${evaluationId}`;\u00a0 const request = {\u00a0 \u00a0 name,\u00a0 };\u00a0 // Get model evaluation request\u00a0 const [response] = await modelServiceClient.getModelEvaluation(request);\u00a0 console.log('Get model evaluation tabular regression response');\u00a0 console.log(`\\tName : ${response.name}`);\u00a0 console.log(`\\tMetrics schema uri : ${response.metricsSchemaUri}`);\u00a0 console.log(`\\tMetrics : ${JSON.stringify(response.metrics)}`);\u00a0 console.log(`\\tCreate time : ${JSON.stringify(response.createTime)}`);\u00a0 console.log(`\\tSlice dimensions : ${response.sliceDimensions}`);\u00a0 const modelExplanation = response.modelExplanation;\u00a0 console.log('\\tModel explanation');\u00a0 if (!modelExplanation) {\u00a0 \u00a0 console.log('\\t\\t{}');\u00a0 } else {\u00a0 \u00a0 const meanAttributions = modelExplanation.meanAttributions;\u00a0 \u00a0 if (!meanAttributions) {\u00a0 \u00a0 \u00a0 console.log('\\t\\t\\t []');\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 for (const meanAttribution of meanAttributions) {\u00a0 \u00a0 \u00a0 \u00a0 console.log('\\t\\tMean attribution');\u00a0 \u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tBaseline output value : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${meanAttribution.baselineOutputValue}`\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tInstance output value : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${meanAttribution.instanceOutputValue}`\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tFeature attributions : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${JSON.stringify(meanAttribution.featureAttributions)}`\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 console.log(`\\t\\t\\tOutput index : ${meanAttribution.outputIndex}`);\u00a0 \u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tOutput display name : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${meanAttribution.outputDisplayName}`\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 `\\t\\t\\tApproximation error : \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ${meanAttribution.approximationError}`\u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}getModelEvaluationTabularRegression();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/snippets/model_service/get_model_evaluation_tabular_regression_sample.py) \n```\nfrom google.cloud import aiplatformdef get_model_evaluation_tabular_regression_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 model_id: str,\u00a0 \u00a0 evaluation_id: str,\u00a0 \u00a0 location: str = \"us-central1\",\u00a0 \u00a0 api_endpoint: str = \"us-central1-aiplatform.googleapis.com\",):\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 To obtain evaluation_id run the following commands where LOCATION\u00a0 \u00a0 is the region where the model is stored, PROJECT is the project ID,\u00a0 \u00a0 and MODEL_ID is the ID of your model.\u00a0 \u00a0 model_client = aiplatform.gapic.ModelServiceClient(\u00a0 \u00a0 \u00a0 \u00a0 client_options={\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'api_endpoint':'LOCATION-aiplatform.googleapis.com'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 evaluations = model_client.list_model_evaluations(parent='projects/PROJECT/locations/LOCATION/models/MODEL_ID')\u00a0 \u00a0 print(\"evaluations:\", evaluations)\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 # The AI Platform services require regional API endpoints.\u00a0 \u00a0 client_options = {\"api_endpoint\": api_endpoint}\u00a0 \u00a0 # Initialize client that will be used to create and send requests.\u00a0 \u00a0 # This client only needs to be created once, and can be reused for multiple requests.\u00a0 \u00a0 client = aiplatform.gapic.ModelServiceClient(client_options=client_options)\u00a0 \u00a0 name = client.model_evaluation_path(\u00a0 \u00a0 \u00a0 \u00a0 project=project, location=location, model=model_id, evaluation=evaluation_id\u00a0 \u00a0 )\u00a0 \u00a0 response = client.get_model_evaluation(name=name)\u00a0 \u00a0 print(\"response:\", response)\n``` [projects.locations.models.evaluations.slices.list](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models.evaluations.slices/list?hl=zh-cn) \u65b9\u6cd5\u53ef\u5217\u51fa\u60a8\u7684\u6a21\u578b\u7684\u6240\u6709\u8a55\u4f30\u5207\u7247\u3002\u60a8\u5fc5\u9808\u6709\u6a21\u578b\u7684\u8a55\u4f30 ID\uff0c\u6b64 ID \u53ef\u4ee5\u5728 [\u67e5\u770b\u5f59\u7e3d\u8a55\u4f30\u6307\u6a19](#aggregate) \u6642\u7372\u5f97\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u6a21\u578b\u8a55\u4f30\u5207\u7247\u4f86\u78ba\u5b9a\u6a21\u578b\u5728\u7279\u5b9a\u6a19\u7c64\u4e0a\u7684\u8868\u73fe\u3002 `value` \u5b57\u6bb5\u6307\u793a\u8207\u6307\u6a19\u5c0d\u61c9\u7684\u6a19\u7c64\u3002\nVertex AI \u6703\u8fd4\u56de\u4e00\u7d44\u7f6e\u4fe1\u5ea6\u6307\u6a19\u3002\u6bcf\u500b\u5143\u7d20\u986f\u793a\u4e0d\u540c `confidenceThreshold` \u503c\u7684\u8a55\u4f30\u6307\u6a19\uff08\u5f9e 0 \u958b\u59cb\uff0c\u4e00\u76f4\u5230 1\uff09\u3002\u901a\u904e\u67e5\u770b\u4e0d\u540c\u7684\u95be\u503c\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u95be\u503c\u5982\u4f55\u5f71\u97ff\u5176\u4ed6\u6307\u6a19\uff0c\u4f8b\u5982\u7cbe\u78ba\u7387\u548c\u53ec\u56de\u7387\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u6a21\u578b\u6240\u5728\u7684\u5340\u57df\u3002\u4f8b\u5982`us-central1`\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u60a8\u7684\u6a21\u578b\u7684 ID\u3002\n- \uff1a\u5305\u542b\u8981\u5217\u51fa\u8a55\u4f30\u5207\u7247\u7684\u6a21\u578b\u8a55\u4f30\u7684 ID\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations/EVALUATION_ID/slices\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X GET \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations/EVALUATION_ID/slices\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method GET ` -Headers $headers ` -Uri \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations/EVALUATION_ID/slices\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/ListModelEvaluationSliceSample.java) \n```\nimport com.google.cloud.aiplatform.v1.ModelEvaluationName;import com.google.cloud.aiplatform.v1.ModelEvaluationSlice;import com.google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice;import com.google.cloud.aiplatform.v1.ModelServiceClient;import com.google.cloud.aiplatform.v1.ModelServiceSettings;import java.io.IOException;public class ListModelEvaluationSliceSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // To obtain evaluationId run the code block below after setting modelServiceSettings.\u00a0 \u00a0 //\u00a0 \u00a0 // try (ModelServiceClient modelServiceClient = ModelServiceClient.create(modelServiceSettings))\u00a0 \u00a0 // {\u00a0 \u00a0 // \u00a0 String location = \"us-central1\";\u00a0 \u00a0 // \u00a0 ModelName modelFullId = ModelName.of(project, location, modelId);\u00a0 \u00a0 // \u00a0 ListModelEvaluationsRequest modelEvaluationsrequest =\u00a0 \u00a0 // \u00a0 ListModelEvaluationsRequest.newBuilder().setParent(modelFullId.toString()).build();\u00a0 \u00a0 // \u00a0 for (ModelEvaluation modelEvaluation :\u00a0 \u00a0 // \u00a0 \u00a0 modelServiceClient.listModelEvaluations(modelEvaluationsrequest).iterateAll()) {\u00a0 \u00a0 // \u00a0 \u00a0 \u00a0 System.out.format(\"Model Evaluation Name: %s%n\", modelEvaluation.getName());\u00a0 \u00a0 // \u00a0 }\u00a0 \u00a0 // }\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String modelId = \"YOUR_MODEL_ID\";\u00a0 \u00a0 String evaluationId = \"YOUR_EVALUATION_ID\";\u00a0 \u00a0 listModelEvaluationSliceSample(project, modelId, evaluationId);\u00a0 }\u00a0 static void listModelEvaluationSliceSample(String project, String modelId, String evaluationId)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 ModelServiceSettings modelServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 ModelServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (ModelServiceClient modelServiceClient = ModelServiceClient.create(modelServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 ModelEvaluationName modelEvaluationName =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ModelEvaluationName.of(project, location, modelId, evaluationId);\u00a0 \u00a0 \u00a0 for (ModelEvaluationSlice modelEvaluationSlice :\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 modelServiceClient.listModelEvaluationSlices(modelEvaluationName).iterateAll()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Model Evaluation Slice Name: %s\\n\", modelEvaluationSlice.getName());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Metrics Schema Uri: %s\\n\", modelEvaluationSlice.getMetricsSchemaUri());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Metrics: %s\\n\", modelEvaluationSlice.getMetrics());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Create Time: %s\\n\", modelEvaluationSlice.getCreateTime());\u00a0 \u00a0 \u00a0 \u00a0 Slice slice = modelEvaluationSlice.getSlice();\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Slice Dimensions: %s\\n\", slice.getDimension());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Slice Value: %s\\n\\n\", slice.getValue());\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/list-model-evaluation-slices.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample\u00a0* (not necessary if passing values as arguments). To obtain evaluationId,\u00a0* instantiate the client and run the following the commands.\u00a0*/// const parentName = `projects/${project}/locations/${location}/models/${modelId}`;// const evalRequest = {// \u00a0 parent: parentName// };// const [evalResponse] = await modelServiceClient.listModelEvaluations(evalRequest);// console.log(evalResponse);// const modelId = 'YOUR_MODEL_ID';// const evaluationId = 'YOUR_EVALUATION_ID';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';// Imports the Google Cloud Model Service Client libraryconst {ModelServiceClient} = require('@google-cloud/aiplatform');// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst modelServiceClient = new ModelServiceClient(clientOptions);async function listModelEvaluationSlices() {\u00a0 // Configure the parent resources\u00a0 const parent = `projects/${project}/locations/${location}/models/${modelId}/evaluations/${evaluationId}`;\u00a0 const request = {\u00a0 \u00a0 parent,\u00a0 };\u00a0 // Get and print out a list of all the evaluation slices for this resource\u00a0 const [response] =\u00a0 \u00a0 await modelServiceClient.listModelEvaluationSlices(request);\u00a0 console.log('List model evaluation response', response);\u00a0 console.log(response);}listModelEvaluationSlices();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/snippets/model_service/list_model_evaluation_slices_sample.py) \n```\nfrom google.cloud import aiplatformdef list_model_evaluation_slices_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 model_id: str,\u00a0 \u00a0 evaluation_id: str,\u00a0 \u00a0 location: str = \"us-central1\",\u00a0 \u00a0 api_endpoint: str = \"us-central1-aiplatform.googleapis.com\",):\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 To obtain evaluation_id run the following commands where LOCATION\u00a0 \u00a0 is the region where the model is stored, PROJECT is the project ID,\u00a0 \u00a0 and MODEL_ID is the ID of your model.\u00a0 \u00a0 model_client = aiplatform.gapic.ModelServiceClient(\u00a0 \u00a0 \u00a0 \u00a0 client_options={\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'api_endpoint':'LOCATION-aiplatform.googleapis.com'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 evaluations = model_client.list_model_evaluations(parent='projects/PROJECT/locations/LOCATION/models/MODEL_ID')\u00a0 \u00a0 print(\"evaluations:\", evaluations)\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 # The AI Platform services require regional API endpoints.\u00a0 \u00a0 client_options = {\"api_endpoint\": api_endpoint}\u00a0 \u00a0 # Initialize client that will be used to create and send requests.\u00a0 \u00a0 # This client only needs to be created once, and can be reused for multiple requests.\u00a0 \u00a0 client = aiplatform.gapic.ModelServiceClient(client_options=client_options)\u00a0 \u00a0 parent = client.model_evaluation_path(\u00a0 \u00a0 \u00a0 \u00a0 project=project, location=location, model=model_id, evaluation=evaluation_id\u00a0 \u00a0 )\u00a0 \u00a0 response = client.list_model_evaluation_slices(parent=parent)\u00a0 \u00a0 for model_evaluation_slice in response:\u00a0 \u00a0 \u00a0 \u00a0 print(\"model_evaluation_slice:\", model_evaluation_slice)\n```\n\u5982\u9700\u67e5\u770b\u55ae\u500b\u5207\u7247\u7684\u8a55\u4f30\u6307\u6a19\uff0c\u8acb\u4f7f\u7528 [projects.locations.models.evaluations.slices.get](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models.evaluations.slices/get?hl=zh-cn) \u65b9\u6cd5\u3002\u60a8\u5fc5\u9808\u64c1\u6709\u5207\u7247 ID\uff08\u8a72 ID \u6703\u5728\u60a8 [\u5217\u51fa\u6240\u6709\u5207\u7247](#list-slices) \u6642\u63d0\u4f9b\uff09\u3002\u4ee5\u4e0b\u793a\u4f8b\u9069\u7528\u65bc\u6240\u6709\u6578\u64da\u985e\u578b\u548c\u76ee\u6a19\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u6a21\u578b\u6240\u5728\u7684\u5340\u57df\u3002\u4f8b\u5982 us-central1\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u60a8\u7684\u6a21\u578b\u7684 ID\u3002\n- \uff1a\u5305\u542b\u8981\u6aa2\u7d22\u7684\u8a55\u4f30\u5207\u7247\u7684\u6a21\u578b\u8a55\u4f30 ID\u3002\n- \uff1a\u8981\u7372\u53d6\u7684\u8a55\u4f30\u5207\u7247\u7684 ID\u3002\n- \uff1a\u81ea\u52d5\u751f\u6210\u7684 [\u9805\u76ee\u7de8\u865f](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u5b9a\u7fa9\u8981\u8fd4\u56de\u7684\u8a55\u4f30\u6307\u6a19\u7684\u67b6\u69cb\u6587\u4ef6\u540d\u7a31\uff0c\u4f8b\u5982`classification_metrics_1.0.0`\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations/EVALUATION_ID/slices/SLICE_ID\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X GET \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations/EVALUATION_ID/slices/SLICE_ID\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method GET ` -Headers $headers ` -Uri \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/models/MODEL_ID/evaluations/EVALUATION_ID/slices/SLICE_ID\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/GetModelEvaluationSliceSample.java) \n```\nimport com.google.cloud.aiplatform.v1.ModelEvaluationSlice;import com.google.cloud.aiplatform.v1.ModelEvaluationSlice.Slice;import com.google.cloud.aiplatform.v1.ModelEvaluationSliceName;import com.google.cloud.aiplatform.v1.ModelServiceClient;import com.google.cloud.aiplatform.v1.ModelServiceSettings;import java.io.IOException;public class GetModelEvaluationSliceSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // To obtain evaluationId run the code block below after setting modelServiceSettings.\u00a0 \u00a0 //\u00a0 \u00a0 // try (ModelServiceClient modelServiceClient = ModelServiceClient.create(modelServiceSettings))\u00a0 \u00a0 // {\u00a0 \u00a0 // \u00a0 String location = \"us-central1\";\u00a0 \u00a0 // \u00a0 ModelName modelFullId = ModelName.of(project, location, modelId);\u00a0 \u00a0 // \u00a0 ListModelEvaluationsRequest modelEvaluationsrequest =\u00a0 \u00a0 // \u00a0 ListModelEvaluationsRequest.newBuilder().setParent(modelFullId.toString()).build();\u00a0 \u00a0 // \u00a0 for (ModelEvaluation modelEvaluation :\u00a0 \u00a0 // \u00a0 \u00a0 modelServiceClient.listModelEvaluations(modelEvaluationsrequest).iterateAll()) {\u00a0 \u00a0 // \u00a0 \u00a0 \u00a0 System.out.format(\"Model Evaluation Name: %s%n\", modelEvaluation.getName());\u00a0 \u00a0 // \u00a0 }\u00a0 \u00a0 // }\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String modelId = \"YOUR_MODEL_ID\";\u00a0 \u00a0 String evaluationId = \"YOUR_EVALUATION_ID\";\u00a0 \u00a0 String sliceId = \"YOUR_SLICE_ID\";\u00a0 \u00a0 getModelEvaluationSliceSample(project, modelId, evaluationId, sliceId);\u00a0 }\u00a0 static void getModelEvaluationSliceSample(\u00a0 \u00a0 \u00a0 String project, String modelId, String evaluationId, String sliceId) throws IOException {\u00a0 \u00a0 ModelServiceSettings modelServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 ModelServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (ModelServiceClient modelServiceClient = ModelServiceClient.create(modelServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 ModelEvaluationSliceName modelEvaluationSliceName =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ModelEvaluationSliceName.of(project, location, modelId, evaluationId, sliceId);\u00a0 \u00a0 \u00a0 ModelEvaluationSlice modelEvaluationSlice =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 modelServiceClient.getModelEvaluationSlice(modelEvaluationSliceName);\u00a0 \u00a0 \u00a0 System.out.println(\"Get Model Evaluation Slice Response\");\u00a0 \u00a0 \u00a0 System.out.format(\"Model Evaluation Slice Name: %s\\n\", modelEvaluationSlice.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"Metrics Schema Uri: %s\\n\", modelEvaluationSlice.getMetricsSchemaUri());\u00a0 \u00a0 \u00a0 System.out.format(\"Metrics: %s\\n\", modelEvaluationSlice.getMetrics());\u00a0 \u00a0 \u00a0 System.out.format(\"Create Time: %s\\n\", modelEvaluationSlice.getCreateTime());\u00a0 \u00a0 \u00a0 Slice slice = modelEvaluationSlice.getSlice();\u00a0 \u00a0 \u00a0 System.out.format(\"Slice Dimensions: %s\\n\", slice.getDimension());\u00a0 \u00a0 \u00a0 System.out.format(\"Slice Value: %s\\n\", slice.getValue());\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/get-model-evaluation-slice.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample\u00a0* (not necessary if passing values as arguments). To obtain evaluationId,\u00a0* instantiate the client and run the following the commands.\u00a0*/// const parentName = `projects/${project}/locations/${location}/models/${modelId}`;// const evalRequest = {// \u00a0 parent: parentName// };// const [evalResponse] = await modelServiceClient.listModelEvaluations(evalRequest);// console.log(evalResponse);// const modelId = 'YOUR_MODEL_ID';// const evaluationId = 'YOUR_EVALUATION_ID';// const sliceId = 'YOUR_SLICE_ID';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';// Imports the Google Cloud Model Service client libraryconst {ModelServiceClient} = require('@google-cloud/aiplatform');// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Specifies the location of the api endpointconst modelServiceClient = new ModelServiceClient(clientOptions);async function getModelEvaluationSlice() {\u00a0 // Configure the parent resource\u00a0 const name = `projects/${project}/locations/${location}/models/${modelId}/evaluations/${evaluationId}/slices/${sliceId}`;\u00a0 const request = {\u00a0 \u00a0 name,\u00a0 };\u00a0 // Get and print out a list of all the endpoints for this resource\u00a0 const [response] =\u00a0 \u00a0 await modelServiceClient.getModelEvaluationSlice(request);\u00a0 console.log('Get model evaluation slice');\u00a0 console.log(`\\tName : ${response.name}`);\u00a0 console.log(`\\tMetrics_Schema_Uri : ${response.metricsSchemaUri}`);\u00a0 console.log(`\\tMetrics : ${JSON.stringify(response.metrics)}`);\u00a0 console.log(`\\tCreate time : ${JSON.stringify(response.createTime)}`);\u00a0 console.log('Slice');\u00a0 const slice = response.slice;\u00a0 console.log(`\\tDimension :${slice.dimension}`);\u00a0 console.log(`\\tValue :${slice.value}`);}getModelEvaluationSlice();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/snippets/model_service/get_model_evaluation_slice_sample.py) \n```\nfrom google.cloud import aiplatformdef get_model_evaluation_slice_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 model_id: str,\u00a0 \u00a0 evaluation_id: str,\u00a0 \u00a0 slice_id: str,\u00a0 \u00a0 location: str = \"us-central1\",\u00a0 \u00a0 api_endpoint: str = \"us-central1-aiplatform.googleapis.com\",):\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 To obtain evaluation_id run the following commands where LOCATION\u00a0 \u00a0 is the region where the model is stored, PROJECT is the project ID,\u00a0 \u00a0 and MODEL_ID is the ID of your model.\u00a0 \u00a0 model_client = aiplatform.gapic.ModelServiceClient(\u00a0 \u00a0 \u00a0 \u00a0 client_options={\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'api_endpoint':'LOCATION-aiplatform.googleapis.com'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 evaluations = model_client.list_model_evaluations(parent='projects/PROJECT/locations/LOCATION/models/MODEL_ID')\u00a0 \u00a0 print(\"evaluations:\", evaluations)\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 # The AI Platform services require regional API endpoints.\u00a0 \u00a0 client_options = {\"api_endpoint\": api_endpoint}\u00a0 \u00a0 # Initialize client that will be used to create and send requests.\u00a0 \u00a0 # This client only needs to be created once, and can be reused for multiple requests.\u00a0 \u00a0 client = aiplatform.gapic.ModelServiceClient(client_options=client_options)\u00a0 \u00a0 name = client.model_evaluation_slice_path(\u00a0 \u00a0 \u00a0 \u00a0 project=project,\u00a0 \u00a0 \u00a0 \u00a0 location=location,\u00a0 \u00a0 \u00a0 \u00a0 model=model_id,\u00a0 \u00a0 \u00a0 \u00a0 evaluation=evaluation_id,\u00a0 \u00a0 \u00a0 \u00a0 slice=slice_id,\u00a0 \u00a0 )\u00a0 \u00a0 response = client.get_model_evaluation_slice(name=name)\u00a0 \u00a0 print(\"response:\", response)\n```\n## \u6a21\u578b\u8a55\u4f30\u6307\u6a19\nVertex AI \u6703\u8fd4\u56de\u5e7e\u500b\u4e0d\u540c\u7684\u8a55\u4f30\u6307\u6a19\uff0c\u4f8b\u5982\u7cbe\u78ba\u7387\u3001\u53ec\u56de\u7387\u548c\u7f6e\u4fe1\u5ea6\u95be\u503c\u3002Vertex AI \u8fd4\u56de\u7684\u6307\u6a19\u53d6\u6c7a\u65bc\u60a8\u7684\u6a21\u578b\u76ee\u6a19\u3002\u4f8b\u5982\uff0c\u8207\u5716\u50cf\u5c0d\u8c61\u6aa2\u6e2c\u6a21\u578b\u76f8\u6bd4\uff0cVertex AI \u7232\u5716\u50cf\u5206\u985e\u6a21\u578b\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u8a55\u4f30\u6307\u6a19\u3002\n\u67b6\u69cb\u6587\u4ef6\u6c7a\u5b9a\u4e86 Vertex AI \u7232\u6bcf\u500b\u76ee\u6a19\u63d0\u4f9b\u7684\u8a55\u4f30\u6307\u6a19\u3002\n\u60a8\u53ef\u4ee5\u5f9e\u4ee5\u4e0b Cloud Storage \u4f4d\u7f6e\u67e5\u770b\u548c\u4e0b\u8f09\u67b6\u69cb\u6587\u4ef6\uff1a  [gs://google-cloud-aiplatform/schema/modelevaluation/](https://console.cloud.google.com/storage/browser/google-cloud-aiplatform/schema/modelevaluation?hl=zh-cn)\n\u8a55\u4f30\u6307\u6a19\u5305\u62ec\uff1a\n- **AuPRC** \uff1a [\u7cbe\u78ba\u7387/\u53ec\u56de\u7387 (PR) \u66f2\u7dda\u4e0b\u7684\u9762\u7a4d](https://developers.google.com/machine-learning/glossary?hl=zh-cn#pr-auc-area-under-the-pr-curve) \uff0c\u4ea6\u7a31\u7232\u5e73\u5747\u7cbe\u5ea6\u3002\u6b64\u503c\u7684\u7bc4\u570d\u5728 0 \u5230 1 \u4e4b\u9593\uff0c\u503c\u8d8a\u5927\u8868\u793a\u6a21\u578b\u8cea\u91cf\u8d8a\u9ad8\u3002\n- **AuROC** \uff1a [\u63a5\u6536\u8005\u64cd\u4f5c\u7279\u5fb5\u66f2\u7dda\u4e0b\u7684\u9762\u7a4d](https://developers.google.com/machine-learning/glossary?hl=zh-cn#auc-area-under-the-roc-curve) \u3002\u6b64\u503c\u7684\u7bc4\u570d\u5728 0 \u5230 1 \u4e4b\u9593\uff0c\u503c\u8d8a\u5927\u8868\u793a\u6a21\u578b\u8cea\u91cf\u8d8a\u9ad8\u3002\n- **\u5c0d\u6578\u640d\u5931** \uff1a\u6a21\u578b\u9810\u6e2c\u8207\u76ee\u6a19\u503c\u4e4b\u9593\u7684\u4ea4\u53c9\u71b5\u3002\u6b64\u503c\u7684\u7bc4\u570d\u5728\u96f6\u5230\u7121\u7aae\u5927\u4e4b\u9593\uff0c\u503c\u8d8a\u5c0f\u8868\u793a\u6a21\u578b\u8cea\u91cf\u8d8a\u9ad8\u3002\n- **\u7f6e\u4fe1\u5ea6\u95be\u503c** \uff1a\u7528\u65bc\u78ba\u5b9a\u8981\u8fd4\u56de\u7684\u9810\u6e2c\u7684\u7f6e\u4fe1\u5ea6\u5206\u6578\u3002\u6a21\u578b\u6703\u8fd4\u56de\u4e0d\u4f4e\u65bc\u6b64\u503c\u7684\u9810\u6e2c\u3002\u5982\u679c\u63d0\u9ad8\u7f6e\u4fe1\u5ea6\u95be\u503c\uff0c\u7cbe\u78ba\u7387\u6703\u76f8\u61c9\u5730\u63d0\u9ad8\uff0c\u4f46\u53ec\u56de\u7387\u6703\u964d\u4f4e\u3002Vertex AI \u4ee5\u4e0d\u540c\u7684\u95be\u503c\u8fd4\u56de\u7f6e\u4fe1\u5ea6\u6307\u6a19\uff0c\u4ee5\u986f\u793a\u95be\u503c\u5982\u4f55\u5f71\u97ff [\u7cbe\u78ba\u7387](https://developers.google.com/machine-learning/glossary?hl=zh-cn#precision) \u548c [\u53ec\u56de\u7387](https://developers.google.com/machine-learning/glossary?hl=zh-cn#recall) \u3002\n- **\u53ec\u56de\u7387** \uff1a\u6a21\u578b\u6b63\u78ba\u9810\u6e2c\u6b64\u985e\u5225\u7684\u9810\u6e2c\u6240\u4f54\u7684\u6bd4\u4f8b\u3002\u4e5f\u7a31\u7232\u3002\n- **\u53ec\u56de\u7387\u7232 1** \uff1a\u50c5\u8003\u616e\u5177\u6709\u6700\u9ad8\u9810\u6e2c\u5206\u6578\u4e14\u4e0d\u4f4e\u65bc\u6bcf\u500b\u6a23\u672c\u7684\u7f6e\u4fe1\u5ea6\u95be\u503c\u7684\u6a19\u7c64\u6642\u7684\u53ec\u56de\u7387\uff08\u771f\u6b63\u4f8b\u7387\uff09\u3002\n- **\u7cbe\u78ba\u7387** \uff1a\u6a21\u578b\u751f\u6210\u7684\u6b63\u78ba\u5206\u985e\u9810\u6e2c\u6240\u4f54\u7684\u6bd4\u4f8b\u3002\n- **\u7cbe\u78ba\u7387\u7232 1** \uff1a\u50c5\u8003\u616e\u5177\u6709\u6700\u9ad8\u9810\u6e2c\u5206\u6578\u4e14\u4e0d\u4f4e\u65bc\u6bcf\u500b\u6a23\u672c\u7684\u7f6e\u4fe1\u5ea6\u95be\u503c\u7684\u6a19\u7c64\u6642\u7684\u7cbe\u78ba\u7387\u3002\n- **F1 \u5f97\u5206** \uff1a\u7cbe\u78ba\u7387\u548c\u53ec\u56de\u7387\u7684\u8abf\u548c\u5e73\u5747\u6578\u3002F1 \u662f\u4e00\u500b\u5f88\u5be6\u7528\u7684\u6307\u6a19\uff0c\u7576\u60a8\u5e0c\u671b\u5728\u7cbe\u78ba\u7387\u548c\u53ec\u56de\u7387\u4e4b\u9593\u53d6\u5f97\u5e73\u8861\uff0c\u800c\u985e\u5225\u5206\u4f48\u53c8\u4e0d\u5747\u52fb\u6642\uff0c\u8a72\u6307\u6a19\u6703\u975e\u5e38\u6709\u5e6b\u52a9\u3002\n- **F1 \u5f97\u5206\u7232 1** \uff1a\u53ec\u56de\u7387\u7232 1 \u4e14\u7cbe\u78ba\u7387\u7232 1 \u6642\u7684\u8abf\u548c\u5e73\u5747\u6578\u3002\n- **\u771f\u8ca0\u4f8b\u8a08\u6578** \uff1a\u6a21\u578b\u6b63\u78ba\u9810\u6e2c\u8ca0\u985e\u5225\u7684\u6b21\u6578\u3002\n- **\u771f\u6b63\u4f8b\u8a08\u6578** \uff1a\u6a21\u578b\u6b63\u78ba\u9810\u6e2c\u6b63\u985e\u5225\u7684\u6b21\u6578\u3002\n- **\u5047\u8ca0\u4f8b\u8a08\u6578** \uff1a\u6a21\u578b\u932f\u8aa4\u9810\u6e2c\u8ca0\u985e\u5225\u7684\u6b21\u6578\u3002\n- **\u5047\u6b63\u4f8b\u8a08\u6578** \uff1a\u6a21\u578b\u932f\u8aa4\u9810\u6e2c\u6b63\u985e\u5225\u7684\u6b21\u6578\u3002\n- **\u5047\u6b63\u4f8b\u7387** \uff1a\u4e0d\u6b63\u78ba\u9810\u6e2c\u7d50\u679c\u4f54\u6240\u6709\u9810\u6e2c\u7d50\u679c\u7684\u6bd4\u4f8b\u3002\n- **\u5047\u6b63\u4f8b\u7387\u7232 1** \uff1a\u50c5\u8003\u616e\u5177\u6709\u6700\u9ad8\u9810\u6e2c\u5206\u6578\u4e14\u4e0d\u4f4e\u65bc\u6bcf\u500b\u6a23\u672c\u7684\u7f6e\u4fe1\u5ea6\u95be\u503c\u7684\u6a19\u7c64\u6642\u7684\u5047\u6b63\u4f8b\u7387\u3002\n- **\u6df7\u6dc6\u77e9\u9663** \uff1a [\u6df7\u6dc6\u77e9\u9663](https://developers.google.com/machine-learning/glossary?hl=zh-cn#confusion-matrix) \u986f\u793a\u6a21\u578b\u6b63\u78ba\u9810\u6e2c\u7d50\u679c\u7684\u983b\u7387\u3002\u5982\u679c\u9810\u6e2c\u7d50\u679c\u4e0d\u6b63\u78ba\uff0c\u77e9\u9663\u6703\u6539\u7232\u986f\u793a\u6a21\u578b\u9810\u6e2c\u7684\u5167\u5bb9\u3002\u6df7\u6dc6\u77e9\u9663\u53ef\u5e6b\u52a9\u60a8\u77ad\u89e3\u6a21\u578b\u201c\u6df7\u6dc6\u201d\u5169\u500b\u7d50\u679c\u7684\u51fa\u73fe\u4f4d\u7f6e\u3002\n- **\u6a21\u578b\u7279\u5fb5\u6b78\u56e0** \uff1aVertex AI \u986f\u793a\u6bcf\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u5f71\u97ff\u7a0b\u5ea6\u3002\u9019\u4e9b\u503c\u662f\u4ee5\u6bcf\u500b\u7279\u5fb5\u7684\u767e\u5206\u6bd4\u5f62\u5f0f\u63d0\u4f9b\u7684\uff1a\u767e\u5206\u6bd4\u8d8a\u9ad8\uff0c\u7279\u5fb5\u5c0d\u6a21\u578b\u8a13\u7df4\u7684\u5f71\u97ff\u5c31\u8d8a\u5927\u3002\u61c9\u67e5\u770b\u6b64\u4fe1\u606f\uff0c\u4ee5\u78ba\u4fdd\u6240\u6709\u6700\u91cd\u8981\u7684\u7279\u5fb5\u5c0d\u60a8\u7684\u6578\u64da\u548c\u696d\u52d9\u554f\u984c\u90fd\u6709\u6240\u5e6b\u52a9\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7528\u65bc\u5206\u985e\u548c\u8ff4\u6b78\u7684\u7279\u5fb5\u6b78\u56e0](https://cloud.google.com/vertex-ai/docs/tabular-data/classification-explanations?hl=zh-cn) \u3002\n- **MAE** \uff1a\u5e73\u5747\u7d55\u5c0d\u8aa4\u5dee (MAE) \u6307\u7684\u662f\u76ee\u6a19\u503c\u8207\u9810\u6e2c\u503c\u4e4b\u9593\u7684\u5e73\u5747\u7d55\u5c0d\u5dee\u3002\u6b64\u6307\u6a19\u7684\u7bc4\u570d\u5728\u96f6\u5230\u7121\u7aae\u5927\u4e4b\u9593\uff1b\u503c\u8d8a\u5c0f\u8868\u793a\u6a21\u578b\u8cea\u91cf\u8d8a\u9ad8\u3002\n- **RMSE** \uff1a\u5747\u65b9\u6839\u8aa4\u5dee\u662f\u76ee\u6a19\u503c\u8207\u9810\u6e2c\u503c\u4e4b\u9593\u7684\u5e73\u5747\u5e73\u65b9\u5dee\u7684\u5e73\u65b9\u6839\u3002RMSE \u5c0d\u96e2\u7fa3\u503c\u6bd4 MAE \u66f4\u654f\u611f\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u64d4\u5fc3\u5927\u7684\u8aa4\u5dee\uff0c\u90a3\u9ebc RMSE \u53ef\u80fd\u662f\u4e00\u500b\u66f4\u6709\u7528\u7684\u8a55\u4f30\u6307\u6a19\u3002 \u8207 MAE \u985e\u4f3c\uff0c\u503c\u8d8a\u5c0f\u8868\u793a\u6a21\u578b\u8cea\u91cf\u8d8a\u9ad8\uff080 \u8868\u793a\u5b8c\u7f8e\u7684\u9810\u6e2c\u6a21\u578b\uff09\u3002\n- **RMSLE** \uff1a\u5747\u65b9\u6839\u5c0d\u6578\u8aa4\u5dee\u6307\u6a19\u8207 RMSE \u985e\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u5b83\u4f7f\u7528\u9810\u6e2c\u503c\u548c\u5be6\u969b\u503c\u52a0 1 \u7684\u81ea\u7136\u5c0d\u6578\u3002RMSLE \u5c0d\u9810\u6e2c\u4e0d\u8db3\u7684\u7f70\u5206\u6bd4\u904e\u5ea6\u9810\u6e2c\u66f4\u91cd\u3002\u5982\u679c\u60a8\u4e0d\u5e0c\u671b\u5c0d\u5927\u9810\u6e2c\u503c\u8aa4\u5dee\u7684\u7f70\u5206\u6bd4\u5c0d\u5c0f\u9810\u6e2c\u503c\u7684\u66f4\u91cd\uff0c\u5247\u6b64\u6307\u6a19\u4e5f\u975e\u5e38\u9069\u5408\u60a8\u7684\u9700\u6c42\u3002\u6b64\u6307\u6a19\u7684\u7bc4\u570d\u5728\u96f6\u5230\u7121\u7aae\u5927\u4e4b\u9593\uff1b\u503c\u8d8a\u5c0f\u8868\u793a\u6a21\u578b\u8cea\u91cf\u8d8a\u9ad8\u3002\u53ea\u6709\u7576\u6240\u6709\u6a19\u7c64\u503c\u548c\u9810\u6e2c\u503c\u5747\u7232\u975e\u8ca0\u503c\u6642\uff0c\u7e94\u6703\u8fd4\u56de RMSLE \u8a55\u4f30\u6307\u6a19\u3002\n- **r^2** \uff1ar \u5e73\u65b9 (r^2) \u662f\u6a19\u7c64\u503c\u8207\u9810\u6e2c\u503c\u4e4b\u9593\u7684\u76ae\u723e\u905c\u76f8\u95dc\u4fc2\u6578\u7684\u5e73\u65b9\uff0c\u8a72\u6307\u6a19\u7684\u7bc4\u570d\u4ecb\u65bc 0 \u5230 1 \u4e4b\u9593\u3002\u503c\u8d8a\u5927\uff0c\u8868\u793a\u8d8a\u63a5\u8fd1\u8ff4\u6b78\u7dda\u3002\n- **MAPE** \uff1a\u5e73\u5747\u7d55\u5c0d\u767e\u5206\u6bd4\u8aa4\u5dee (MAPE) \u6307\u7684\u662f\u6a19\u7c64\u8207\u9810\u6e2c\u503c\u4e4b\u9593\u7684\u5e73\u5747\u7d55\u5c0d\u767e\u5206\u6bd4\u5dee\u3002\u8a72\u6307\u6a19\u7684\u7bc4\u570d\u4ecb\u65bc 0 \u5230\u7121\u7aae\u5927\u4e4b\u9593\uff1b\u503c\u8d8a\u4f4e\u8868\u793a\u6a21\u578b\u8cea\u91cf\u8d8a\u9ad8\u3002\u5982\u679c\u76ee\u6a19\u5217\u5305\u542b\u4efb\u4f55\u7232 0 \u7684\u503c\uff0c\u5247 MAPE \u4e0d\u6703\u986f\u793a\u3002\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0cMAPE \u672a\u7d93\u5b9a\u7fa9\u3002\n- **\u6a21\u578b\u7279\u5fb5\u6b78\u56e0** \uff1aVertex AI \u986f\u793a\u6bcf\u500b\u7279\u5fb5\u5c0d\u6a21\u578b\u7684\u5f71\u97ff\u7a0b\u5ea6\u3002\u9019\u4e9b\u503c\u662f\u4ee5\u6bcf\u500b\u7279\u5fb5\u7684\u767e\u5206\u6bd4\u5f62\u5f0f\u63d0\u4f9b\u7684\uff1a\u767e\u5206\u6bd4\u8d8a\u9ad8\uff0c\u7279\u5fb5\u5c0d\u6a21\u578b\u8a13\u7df4\u7684\u5f71\u97ff\u5c31\u8d8a\u5927\u3002\u61c9\u67e5\u770b\u6b64\u4fe1\u606f\uff0c\u4ee5\u78ba\u4fdd\u6240\u6709\u6700\u91cd\u8981\u7684\u7279\u5fb5\u5c0d\u60a8\u7684\u6578\u64da\u548c\u696d\u52d9\u554f\u984c\u90fd\u6709\u6240\u5e6b\u52a9\u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7528\u65bc\u5206\u985e\u548c\u8ff4\u6b78\u7684\u7279\u5fb5\u6b78\u56e0](https://cloud.google.com/vertex-ai/docs/tabular-data/classification-explanations?hl=zh-cn) ## \u5f8c\u7e8c\u6b65\u9a5f\n\u6e96\u5099\u597d\u901a\u904e\u5206\u985e\u6216\u8ff4\u6b78\u6a21\u578b\u9032\u884c\u9810\u6e2c\u5f8c\uff0c\u60a8\u53ef\u4ee5\u63a1\u7528\u4ee5\u4e0b\u5169\u7a2e\u65b9\u6cd5\u958b\u59cb\u9810\u6e2c\uff1a\n- [\u4f7f\u7528\u6a21\u578b\u9032\u884c\u5728\u7dda\uff08\u5be6\u6642\uff09\u9810\u6e2c](https://cloud.google.com/vertex-ai/docs/tabular-data/classification-regression/get-online-predictions?hl=zh-cn) \u3002\n- [\u76f4\u63a5\u5f9e\u6a21\u578b\u7372\u53d6\u6279\u91cf\u9810\u6e2c\u7d50\u679c](https://cloud.google.com/vertex-ai/docs/tabular-data/classification-regression/get-batch-predictions?hl=zh-cn) \u3002\n\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\uff1a\n- [\u67e5\u770b\u6a21\u578b\u7684\u67b6\u69cb](https://cloud.google.com/vertex-ai/docs/tabular-data/classification-regression/logging?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u5c0e\u51fa\u6a21\u578b](https://cloud.google.com/vertex-ai/docs/export/export-model-tabular?hl=zh-cn) \u3002", "guide": "Vertex AI"}