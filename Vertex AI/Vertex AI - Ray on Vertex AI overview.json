{"title": "Vertex AI - Ray on Vertex AI overview", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Ray on Vertex AI overview\n**    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\n[Ray](https://docs.ray.io/en/latest/ray-overview/index.html) is an open-source framework for scaling AI and Python applications. Ray provides the infrastructure to perform distributed computing and parallel processing for your machine learning (ML) workflow.\nIf you already use Ray, you can use the same open source Ray code to write programs and develop applications on Vertex AI with minimal changes. You can then use Vertex AI's integrations with other Google Cloud services such as Vertex AI predictions and BigQuery as part of your machine learning workflow.\nIf you already use Vertex AI and need a simpler way to scale compute resources, you can use Ray code to optimize performance of the training, hyperparameter tuning, predictions, and online serving steps.\n", "content": "## Workflow for using Ray on Vertex AI\nThe process for using Ray on Vertex AI is as follows:\n| Steps               | Description                                       |\n|:--------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 1. Set up for Ray on Vertex AI        | Set up your Google project, install the version of the Vertex AI SDK for Python that includes the functionality of the Ray Client, and set up a VPC peering network. |\n| 2. Create a Ray cluster on Vertex AI       | Create a Ray cluster on Vertex AI.                                 |\n| 3. Develop a Ray application on Vertex AI      | Connect to a Ray cluster on Vertex AI and develop an application.                         |\n| 4. (Optional) Use Ray on Vertex AI with BigQuery    | Read, write, and transform data with BigQuery.                              |\n| 5. (Optional) Deploy a model on Vertex AI and get predictions | Deploy a model to a Vertex AI online endpoint and get predictions.                         |\n| 6. (Optional) View logs for your Ray cluster on Vertex AI  | View generated logs in Cloud Logging.                                |\n| 7. Delete a Ray cluster on Vertex AI       | Delete a Ray cluster on Vertex AI to avoid unnecessary billing.                          |\n## Architecture\nThe following diagram shows the architecture and workflow for Ray on Vertex AI after you set up your Google Cloud project and VPC network:- Create the Ray cluster on Vertex AI using the following options:1a. Use the console to create the Ray cluster on Vertex AI.1b. Create the Ray cluster on Vertex AI using the Vertex AI SDK for Python.\n- Connect to the Ray cluster on Vertex AI through a VPC peered network using the following options:2a. Use Colab Enterprise in the console.2b. Use the Vertex AI Workbench notebook.\n- Develop your application and train your model on the Ray cluster on Vertex AI using the following options:- Use the Vertex AI SDK for Python in your preferred environment (Colab Enterprise or Vertex AI Workbench notebook).\n- Write a Python script using your preferred environment. Submit a Ray Job to the Ray cluster on Vertex AI using the Vertex AI SDK for Python, Ray Job CLI, or Ray dashboard.\n- Deploy the trained model to an online Vertex AI endpoint for predictions.\n- Use BigQuery to manage your data.## Pricing\nPricing for Ray on Vertex AI is calculated as follows:\n- The compute resources you use are charged based on the machine configuration you select when creating your Ray cluster on Vertex AI. During Preview, Ray on Vertex AI usage is charged at the [same rate asCustom-trained models](/vertex-ai/pricing#custom-trained_models) . After General Availability (GA), the price will increase to reflect the [Ray on Vertex AIpricing](/vertex-ai/pricing#ray_on_vertex_ai) . You will be notified of the pricing change when Ray on Vertex AI goes to GA.\n- When you perform tasks using the Ray cluster on Vertex AI, logs are automatically generated and charged based on [Cloud Loggingpricing](/stackdriver/pricing#logging-costs) .\n- If you deploy your model to an endpoint for online predictions, see the [\"Prediction and explanation\"](/vertex-ai/pricing#prediction-prices) section of the Vertex AI pricing page.\n- If you use BigQuery with Ray on Vertex AI, see [BigQuery pricing](/bigquery/pricing) .## What's next\n- [Set up for Ray on Vertex AI](/vertex-ai/docs/open-source/ray-on-vertex-ai/set-up)", "guide": "Vertex AI"}