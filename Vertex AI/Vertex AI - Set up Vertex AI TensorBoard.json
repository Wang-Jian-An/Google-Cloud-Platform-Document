{"title": "Vertex AI - Set up Vertex AI TensorBoard", "url": "https://cloud.google.com/vertex-ai/docs/experiments/tensorboard-setup", "abstract": "# Vertex AI - Set up Vertex AI TensorBoard\nThe following are required to setup Vertex AI TensorBoard:\n- [Create a service account with required permissions](/vertex-ai/docs/experiments/tensorboard-setup#create-service-account) .\n- [Create a Cloud Storage bucket to store Vertex AI TensorBoard logs](/vertex-ai/docs/experiments/tensorboard-setup#create_storage_bucket) .\n- [Create a Vertex AI TensorBoard instance](/vertex-ai/docs/experiments/tensorboard-setup#create-tensorboard-instance) .\n#", "content": "## Create a service account with required permissions\nThe Vertex AI TensorBoard integration with custom training requires [attaching a service account](/vertex-ai/docs/general/custom-service-account) .\n**Note:** If you already have a service account that you use for custom training, you can skip this step. Make sure the service account has the [Storage Admin role](/storage/docs/access-control/iam-roles) ( `roles/storage.admin` ) and [Vertex AI User role](/vertex-ai/docs/general/access-control#predefined-roles) . ( `roles/aiplatform.user` ) associated with it.\n- Create a service account:```\ngcloud --project=PROJECT_ID iam service-accounts create USER_SA_NAME\n```Replace the following:- `` : the ID of the project in which you are creating a service account\n- `` : a unique name for the service account you're creating\n- The new service account is used by the Vertex AI Training Service to access Google Cloud services and resources. Use the following commands to grant these roles if needed: **Note:** You need at least project level setIamPolicy permission to run these commands. For details, see [Required Permissions](/iam/docs/granting-changing-revoking-access#required-permissions) for details.```\nSA_EMAIL=\"USER_SA_NAME@PROJECT_ID.iam.gserviceaccount.com\"gcloud projects add-iam-policy-binding PROJECT_ID \\\u00a0 \u00a0--member=\"serviceAccount:${SA_EMAIL}\" \\\u00a0 \u00a0--role=\"roles/storage.admin\"gcloud projects add-iam-policy-binding PROJECT_ID \\\u00a0 \u00a0--member=\"serviceAccount:${SA_EMAIL}\" \\\u00a0 \u00a0--role=\"roles/aiplatform.user\"\n```\n### Create a Cloud Storage bucket to store Vertex AI TensorBoard logs\nA Cloud Storage bucket is required to store the Vertex AI TensorBoard logs your training script generates. The bucket must be [regional](/storage/docs/locations#location-r) that is, not multi-region or dual-region, and the following resources must be in same region:\n- Cloud Storage bucket\n- Vertex AI training job\n- Vertex AI TensorBoard instance\nYou can use an existing bucket instead of following the bucket creation step described here. When using an existing bucket, the REGION of the bucket has to be in the same region your [Vertex AI TensorBoard instance was created in](/vertex-ai/docs/experiments/tensorboard-setup#create-tensorboard-instance) .\n```\nLOCATION=LOCATION_IDGCS_BUCKET_NAME=\"PROJECT_ID-tensorboard-logs-${LOCATION_ID}\"gsutil mb -l ${LOCATION_ID} \"gs://${GCS_BUCKET_NAME}\"\n```\nReplace with the region that your Vertex AI TensorBoard instance was created in, for example `us-central1` .\n### Create a Vertex AI TensorBoard instance\nA Vertex AI TensorBoard instance, which is a regionalized resource storing your Vertex AI TensorBoard experiments, must be present before experiments can be visualized. There are two options. You can either use a default instance, or manually create one. You create multiple instances within a project and region, however most users only need a single instance.\nA default TensorBoard instance is automatically created when initializing a [Vertex AIexperiment](/vertex-ai/docs/experiments/create-experiment#vertex-ai-sdk-for-python) . This backing TensorBoard is associated with the Vertex AI experiment and is used with all subsequent Vertex AI Experiments runs. This is the easiest way to get started with Vertex AI TensorBoard and should meet most users needs.\nCreate a Vertex AI TensorBoard experiment with a default instance using the Vertex AI SDK for Python. See [init](/python/docs/reference/aiplatform/latest/google.cloud.aiplatform#google_cloud_aiplatform_init) in the Vertex AI SDK reference documentation.### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/experiment_tracking/create_experiment_default_tensorboard_sample.py) \n```\ndef create_experiment_default_tensorboard_sample(\u00a0 \u00a0 experiment_name: str,\u00a0 \u00a0 experiment_description: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 aiplatform.init(\u00a0 \u00a0 \u00a0 \u00a0 experiment=experiment_name,\u00a0 \u00a0 \u00a0 \u00a0 experiment_description=experiment_description,\u00a0 \u00a0 \u00a0 \u00a0 project=project,\u00a0 \u00a0 \u00a0 \u00a0 location=location,\u00a0 \u00a0 )\n```\nexperiment_name: str, experiment_description: str, project: str, location: str,- `experiment_name`: The name of your experiment.\n- `experiment_description`: A description of your experiment.\n- `project`: The`PROJECT_ID`of project that you want   to create the TensorBoard instance in.\n- `location`: The region that you want to create the TensorBoard instance in.   See [List of available locations](/vertex-ai/docs/general/locations) .   Be sure to use a region that supports TensorBoard.\nYou can manually create a Vertex AI TensorBoard. This is useful for users more comfortable with the Google Cloud console, users that need a CMEK enabled TensorBoard (see [CMEK](/vertex-ai/docs/general/cmek) ), or users who want to use multiple TensorBoards. This instance can then be specified directly when initializing a Vertex AI experiment, starting an Experiment Run, or configuring the training code.\nCreate a Vertex AI TensorBoard instance using the Vertex AI SDK for Python.### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/create_tensorboard_sample.py) \n```\ndef create_tensorboard_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 display_name: Optional[str] = None,):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 tensorboard = aiplatform.Tensorboard.create(\u00a0 \u00a0 \u00a0 \u00a0 display_name=display_name,\u00a0 \u00a0 \u00a0 \u00a0 project=project,\u00a0 \u00a0 \u00a0 \u00a0 location=location,\u00a0 \u00a0 )\u00a0 \u00a0 aiplatform.init(\u00a0 \u00a0 \u00a0 \u00a0 project=project,\u00a0 \u00a0 \u00a0 \u00a0 location=location,\u00a0 \u00a0 \u00a0 \u00a0 experiment_tensorboard=tensorboard\u00a0 \u00a0 )\u00a0 \u00a0 return tensorboard\n```\n- `project`: The`PROJECT_ID`of the project that you want to   create the TensorBoard instance in.\n- `display_name`: A descriptive name for the   Vertex AI TensorBoard instance.\n- `location`: The region that you want to create the TensorBoard instance in.   See [List of available locations](/vertex-ai/docs/general/locations) Be sure to use a region that supports TensorBoard.\nUse Google Cloud CLI to create a Vertex AI TensorBoard instance.- [Install the gcloud CLI](https://cloud.google.com/sdk/docs/install) \n- Initialize the Google Cloud CLI by running`gcloud init`.\n- To confirm installation, explore the commands.```\n gcloud ai tensorboards --help \n```The commands include`create`,`describe`,`list`,`update`, and`delete`. If needed, you can [follow these  steps](https://cloud.google.com/sdk/gcloud/reference/config/set) to set default values for your project and region before proceeding.\n- Authenticate to the gcloud CLI.```\ngcloud auth application-default login\n```\n- Create a Vertex AI TensorBoard instance by providing a project name  and a display name. This step might take a few minutes to complete for the first  time in a project. Make note of the Vertex AI TensorBoard instance  name (for example:`projects/123/locations/us-central1/tensorboards/456`) that is  printed at the end of the following command. You will need it in the later steps.```\ngcloud ai tensorboards create --display-name DISPLAY_NAME \\\n  --project PROJECT_NAME\n  \n```Replace the following:- ``: The project that you want to create the  TensorBoard instance in.\n- ``: A descriptive name for the  TensorBoard instance.If you want your Vertex AI TensorBoard data encrypted, you must enable the [CMEK key](/vertex-ai/docs/general/cmek) when creating the instance.\nFollow these steps to create a Vertex AI TensorBoard CMEK enabled instance using the  Google Cloud console.- If you're new to Vertex AI or starting a new project, [set up your project and development environment](/vertex-ai/docs/start/cloud-environment) .\n- In the Vertex AI section of the Google Cloud console, go to the **Experiments** page. [Go to the Experiments page](https://console.cloud.google.com/vertex-ai/experiments/) \n- Navigate to the **TensorBoard Instances** tab.\n- Click **Create** at the top of the page.\n- Select a region from the **Region** drop-down list.\n- (Optional) Add a description.\n- (Optional) Under **Encryption** , select **Customer-managed encryption key (CMEK)** and select  a customer-managed key.\n- Click **Create** to create your TensorBoard instance.\n The following sample uses the [google_vertex_ai_tensorboard](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/vertex_ai_tensorboard) Terraform resource to create a non-encrypted Vertex AI TensorBoard instance.\nTo learn how to apply or remove a Terraform configuration, see [Basic Terraform commands](/docs/terraform/basic-commands) .### Terraform [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/HEAD/vertex_ai/tensorboard/main.tf) \n```\nresource \"google_vertex_ai_tensorboard\" \"default\" {\u00a0 display_name = \"vertex-ai-tensorboard-sample-name\"\u00a0 region \u00a0 \u00a0 \u00a0 = \"us-central1\"}\n```\n### Delete a TensorBoard instance\nDeleting a TensorBoard instance deletes that TensorBoard and all associated TensorBoard experiments and TensorBoard runs. The Vertex AI Experiments the instance is associated with isn't deleted.\nTo delete a Vertex AI Experiments and it's associated Vertex AI TensorBoard experiments, see [Delete an experiment](/vertex-ai/docs/experiments/create-experiment#delete_experiment) .\nDelete a Vertex AI TensorBoard instance using the Vertex AI SDK for Python.### Python [View on GitHub](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/delete_tensorboard_instance_sample.py) \n```\ndef delete_tensorboard_instance_sample(\u00a0 \u00a0 tensorboard_resource_name: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 tensorboard = aiplatform.Tensorboard(\u00a0 \u00a0 \u00a0 \u00a0 tensorboard_name=tensorboard_resource_name\u00a0 \u00a0 )\u00a0 \u00a0 tensorboard.delete()\n```\n- `tensorboard_resource_name`: Provide the [TensorBoard Resource name](/vertex-ai/docs/experiments/tensorboard-setup#tensorboard_resource_name) .\n- `project`: The`PROJECT_ID`your TensorBoard instance is in.\n- `location`: The region that your TensorBoard instance is located in.\nFollow these steps to delete a Vertex AI TensorBoard instance using the  Google Cloud console.- In the Vertex AI section of the Google Cloud console, go to the **Experiments** page. [Go to the Experiments page](https://console.cloud.google.com/vertex-ai/experiments/) \n- Select the **TensorBoard Instances** tab. A list TensorBoard instances appears.\n- Selectand click **Delete** \n### Relevant terms\nThese terms, \"TensorBoard resource name\", and \"TensorBoard instance ID\" are referenced in numerous samples.\nThe TensorBoard Resource name is used to fully identify the Vertex AI TensorBoard instance. The format is as follows:\n`projects/` `` `/locations/` `` `/tensorboards/` ``\nThe TensorBoard resource name is printed in the log messages when created using gcloud CLI or Vertex AI SDK, or can be created by providing the appropriate values for the placeholders.\nThe TensorBoard instance ID is a generated ID value associated with a TensorBoard instance. To find the `TENSORBOARD_INSTANCE_ID` , go to the Experiments page Vertex AI section of the Google Cloud console, and select the **TensorBoard Instances** tab.", "guide": "Vertex AI"}