{"title": "Vertex AI - Hello custom training: Serve predictions from a custom image classification model", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Hello custom training: Serve predictions from a custom image classification model\nThis page walks through serving predictions from your image classification model and viewing these predictions in a web app.- [Setting up your project and environment.](/vertex-ai/docs/tutorials/image-classification-custom) \n- [Training a custom image classificationmodel.](/vertex-ai/docs/tutorials/image-classification-custom/training) \n- Serving predictions from a custom image classification model.\n- [Cleaning up your project.](/vertex-ai/docs/tutorials/image-classification-custom/cleanup) \nEach page assumes that you have already performed the instructions from the previous pages of the tutorial.\n[first page of thistutorial](/vertex-ai/docs/tutorials/image-classification-custom)- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) \n- In the Cloud Shell session, run the following command:```\ncd hello-custom-sample\n```", "content": "## Create an endpoint\nTo get online predictions from the ML model that you trained when following the previous page of this tutorial, create a Vertex AI . Endpoints serve online predictions from one or more models.\n- In the Google Cloud console, in the Vertex AI section, go to the **Models** page. [Go to Models](https://console.cloud.google.com/vertex-ai/models) \n- Find the row of the model that you trained in the [previous step of thistutorial](/vertex-ai/docs/tutorials/image-classification-custom/training) , `hello_custom` , and click the model's name to open the model detail page.\n- On the **Deploy & test** tab, click **Deploy to endpoint** to open the **Deploy to endpoint** pane.\n- On the **Define your endpoint** step, add some basic information for your endpoint:- Select **Create new endpoint** .\n- In the **Endpoint name** field, enter `hello_custom` .\n- In the **Model settings** section, ensure that you see the name of your model, which is also called `hello_custom` . Specify the following model settings:- In the **Traffic split** field, enter `100` . Vertex AI supports splitting traffic for an endpoint to multiple models, but this tutorial doesn't use that feature.\n- In the **Minimum number of compute nodes** field, enter `1` .\n- In the **Machine type** drop-down list, select **n1-standard-2** from the **Standard** section.\n- Click **Done** .\n- In the **Logging** section, ensure that both types of prediction logging are enabled.\nClick **Continue** .\n- On the **Endpoint details** step, confirm that your endpoint will be deployed to `us-central1 (Iowa)` .Do not select the **Use a customer-managed encryption key (CMEK)** checkbox. This tutorial does not use [CMEK](/vertex-ai/docs/general/cmek) .\n- Click **Deploy** to create the endpoint and deploy your model to the endpoint.\nAfter a few minutes, check_circle appears next to the new endpoint in the **Endpoints** table. At the same time, you also receive an email indicating that you have successfully created the endpoint and deployed your model to the endpoint.\n## Deploy a Cloud Function\nYou can get predictions from the Vertex AI endpoint that you just created by sending requests to the Vertex AI API's REST interface. However, only principals with the [aiplatform.endpoints.predictpermission](/vertex-ai/docs/general/access-control) can send online prediction requests. You cannot make the endpoint public for anybody to send requests to, for example via a web app.\nIn this section, deploy code to [Cloud Functions](/functions/docs) to handle unauthenticated requests. The sample code that you downloaded when you read the [first page of this tutorial](/vertex-ai/docs/tutorials/image-classification-custom) contains code for this Cloud Function in the `function/` directory. Optionally, run the following command to explore the Cloud Function code:\n```\nless function/main.py\n```\nDeploying the function serves the following purposes:\n- You configure a Cloud Function to receive unauthenticated requests. Additionally, functions run using [a service account with the Editorrole by default](/functions/docs/securing/function-identity) , which includes the `aiplatform.endpoints.predict` permission necessary to get predictions from your Vertex AI endpoint.\n- This function also performs useful preprocessing on requests. The Vertex AI endpoint expects prediction requests in the format of the trained TensorFlow Keras graph's first layer: a tensor of normalized floats with fixed dimensions. The function takes the URL of an image as input and preprocesses the image into this format before requesting a prediction from the Vertex AI endpoint.\nTo deploy the Cloud Function, do the following:\n- In the Google Cloud console, in the Vertex AI section, go to the **Endpoints** page. [Go to Endpoints](https://console.cloud.google.com/vertex-ai/endpoints) \n- Find the row of the endpoint that you created in the previous section, named `hello_custom` . In this row, click **Sample request** to open the **Sample request** pane.\n- In the **Sample request** pane, find the line of shell code that matches the following pattern:```\nENDPOINT_ID=\"ENDPOINT_ID\"\n``` is a number that identifies this particular endpoint.Copy this line of code, and run it in your Cloud Shell session to set the `ENDPOINT_ID` variable.\n- Run the following command in your Cloud Shell session to deploy the Cloud Function:```\ngcloud functions deploy classify_flower \\\u00a0 --region=us-central1 \\\u00a0 --source=function \\\u00a0 --runtime=python37 \\\u00a0 --memory=2048MB \\\u00a0 --trigger-http \\\u00a0 --allow-unauthenticated \\\u00a0 --set-env-vars=ENDPOINT_ID=${ENDPOINT_ID}\n```## Deploy a web app to send prediction requests\nFinally, host a static web app on Cloud Storage to get predictions from your trained ML model. The web app sends requests to your Cloud Function, which preprocesses them and gets predictions from the Vertex AI endpoint.\nThe `webapp` directory of the sample code that you downloaded contains a sample web app. In your Cloud Shell session, run the following commands to prepare and deploy the web app:\n- Set a couple of shell variables for commands in following steps to use:```\nPROJECT_ID=PROJECT_IDBUCKET_NAME=BUCKET_NAME\n```Replace the following:- : Your Google Cloud [projectID](/resource-manager/docs/creating-managing-projects#identifying_projects) .\n- : The name of the Cloud Storage bucket that you created when following the [first page of this tutorial](/vertex-ai/docs/tutorials/image-classification-custom) .\n- Edit the app to provide it with the trigger URL of your Cloud Function:```\necho \"export const CLOUD_FUNCTION_URL = 'https://us-central1-${PROJECT_ID}.cloudfunctions.net/classify_flower';\" \\\u00a0 > webapp/function-url.js\n```\n- Upload the `webapp` directory to your Cloud Storage bucket:```\ngsutil -m cp -r webapp gs://${BUCKET_NAME}/\n```\n- Make the web app files that you just uploaded [publiclyreadable](/storage/docs/access-control/making-data-public) :```\ngsutil -m acl ch -u AllUsers:R gs://${BUCKET_NAME}/webapp/**\n``` **Note:** Shells (like bash, zsh) sometimes attempt to expand wildcards in ways that can be surprising. For more details, see [URI wildcards](/storage/docs/wildcards#surprising-behavior) .\n- You can now navigate to the following URL to open web app and get predictions:```\nhttps://storage.googleapis.com/BUCKET_NAME/webapp/index.html\n```Open the web app and click an image of a flower to see your ML model's classification of the flower type. The web app presents the prediction as a list of flower types and the probability that the image contains each type of flower. **Note:** This web app gets predictions for images that were also included in the training dataset for the model. Therefore the model might appear more accurate than it actually is due to [overfitting](https://developers.google.com/machine-learning/glossary#overfitting) .\n## What's next\nFollow the [last page of the tutorial](/vertex-ai/docs/tutorials/image-classification-custom/cleanup) to clean up resources that you have created.", "guide": "Vertex AI"}