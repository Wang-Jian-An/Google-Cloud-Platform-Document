{"title": "Vertex AI - Manage features through metadata", "url": "https://cloud.google.com/vertex-ai/docs/workbench/instances/manage-metadata", "abstract": "# Vertex AI - Manage features through metadata\n# Manage features through metadata\nThis page describes how to manage some Vertex AI Workbench instance features by modifying the instance's metadata key-value pairs.\n", "content": "## Metadata keys\nFor information about features and their respective metadata keys, see the following table.\n| Feature      | Description                                                                      | Metadata key     | Accepted values and defaults                                                                |\n|:-----------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| nbconvert     | Lets you export and download notebooks as a different file type.                                                         | notebook-disable-nbconvert  | true: Turns off nbconvert. false (default): Enables nbconvert.                                                        |\n| Delete to trash    | Uses the operating system's trash behavior when deleting from JupyterLab.                                                      | notebook-enable-delete-to-trash | true: Enables deleting to the trash. false (default): Uses the default JupyterLab behavior.                                                |\n| Dataproc      | Enables access to Dataproc kernels. For more information, see Create a Dataproc-enabled instance.                                                | disable-mixer     | true: Turns off access to Dataproc kernels. false (default): Enables access to Dataproc kernels.                                               |\n| Idle shutdown    | Enables idle shutdown. For more information, see Idle shutdown.                                                         | idle-timeout-seconds   | An integer representing the idle time in seconds. The default value is 10800 seconds (180 minutes).                                              |\n| Custom Jupyter user   | Specifies the name of the default Jupyter user. This setting determines the name of the folder for your notebooks. For example, instead of the default /home/jupyter/ directory, you can change the directory to /home/CUSTOM_NAME. This metadata key doesn't affect access to the instance. | jupyter-user     | A string. The default value is jupyter.                                                             |\n| File downloading    | Lets you download files from JupyterLab.                                                               | notebook-disable-downloads  | true: Turns off file downloading. false (default): Enables file downloading.                                                    |\n| Root access     | Enables root access.                                                                    | notebook-disable-root   | true: Turns off root access. false (default): Enables root access.                                                       |\n| Terminal access    | Enables terminal access.                                                                   | notebook-disable-terminal  | true: Turns off terminal access. false (default): Enables terminal access.                                                     |\n| Scheduled upgrades   | Schedules automatic upgrades of the instance.                                                             | notebook-upgrade-schedule  | The weekly or monthly schedule that you set, in unix-cron format, for example, 00 19 * * MON means weekly on Monday, at 1900 hours Greenwich Mean Time (GMT). This feature is off by default.                       |\n| Post-startup script   | Runs a custom script after startup.                                                                | post-startup-script    | The URI of a post-startup script in Cloud Storage, for example: gs://bucket/hello.sh. This feature is off by default.                                          |\n| Post-startup script behavior | Defines when and how the post-startup script runs.                                                            | post-startup-script-behavior | run_once (default): Runs the post-startup script once after instance creation or upgrade. run_every_start: Runs the post-startup script after every start. download_and_run_every_start: Redownloads the post-startup script from its source then runs the script after every start. |\n| Report event health   | Checks health every 30 seconds for VM metrics.                                                             | report-event-health    | true (default): Enables event health reporting. false: Turns off event health reporting.                                                 |\n## Metadata managed by Compute Engine\nSome of the metadata keys are predefined by Compute Engine. For more information, see [Predefined metadatakeys](/compute/docs/metadata/predefined-metadata-keys) .\n## Protected metadata keys\nSome metadata keys are reserved for system use only. If you assign values to these metadata keys, the new values will be overwritten by the system values.\nReserved metadata keys include and are not limited to:\n- `data-disk-uri`\n- `enable-oslogin`\n- `framework`\n- `notebooks-api`\n- `notebooks-api-version`\n- `nvidia-driver-gcs-path`\n- `proxy-url`\n- `restriction`\n- `shutdown-script`\n- `title`\n- `version`## Create an instance with specific metadata\nYou can create a Vertex AI Workbench instance with specific metadata by using the Google Cloud console, the Google Cloud CLI, Terraform, or the Notebooks API.\nWhen you create a Vertex AI Workbench instance, you can add metadata in the **Environment** section of **Advanced options** .\n \nWhen you create a Vertex AI Workbench instance, you can add metadata by using the following command.\n```\ngcloud workbench instances create INSTANCE_NAME --metadata=KEY=VALUE\n```\nTo add metadata, create the resource with metadata key-value pairs.\nTo learn how to apply or remove a Terraform configuration, see [Basic Terraform commands](/docs/terraform/basic-commands) .\n [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/HEAD/vertex_ai/workbench_create_metadata/main.tf) \n```\nresource \"google_workbench_instance\" \"default\" {\n name  = \"workbench-instance-example\"\n location = \"us-central1-a\"\n gce_setup {\n machine_type = \"n1-standard-1\"\n vm_image {\n  project = \"deeplearning-platform-release\"\n  family = \"tf-latest-gpu\"\n }\n metadata = {\n  key = \"value\"\n }\n }\n}\n```\nUse the [instances.create](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/create) method with metadata values to manage the corresponding features.\n## Update an instance's metadata\nYou can update the metadata of a Vertex AI Workbench instance by using the Google Cloud console, the Google Cloud CLI, Terraform, or the Notebooks API.\nYou can update the metadata of a Vertex AI Workbench instance in the **Software and security** section on its **Details** page.\n \nYou can update the metadata on a Vertex AI Workbench instance by using the following command.\n```\ngcloud workbench instances update INSTANCE_NAME --metadata=KEY=VALUE\n```\nYou can change the metadata key-value pairs to manage the corresponding features on Vertex AI Workbench instances.\nTo learn how to apply or remove a Terraform configuration, see [Basic Terraform commands](/docs/terraform/basic-commands) .\n [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/HEAD/vertex_ai/workbench_update_metadata/main.tf) \n```\nresource \"google_workbench_instance\" \"default\" {\n name  = \"workbench-instance-example\"\n location = \"us-central1-a\"\n gce_setup {\n machine_type = \"n1-standard-1\"\n vm_image {\n  project = \"deeplearning-platform-release\"\n  family = \"tf-latest-gpu\"\n }\n metadata = {\n  key = \"updated_value\"\n }\n }\n}\n```\nUse the [instances.patch](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/patch) method with metadata values and `gce_setup.metadata` in the `updateMask` to manage the corresponding features.\n## Remove metadata from an instance\nYou can remove metadata from a Vertex AI Workbench instance by using the Google Cloud console, the Google Cloud CLI, Terraform, or the Notebooks API.\nYou can remove metadata from a Vertex AI Workbench instance in the **Software and security** section on its **Details** page.\n \nYou can remove metadata from a Vertex AI Workbench instance by using the following command.\n```\ngcloud workbench instances update INSTANCE_NAME --metadata=KEY=\n```\nYou can remove metadata key-value pairs to manage the corresponding features of a Vertex AI Workbench instance.\nTo learn how to apply or remove a Terraform configuration, see [Basic Terraform commands](/docs/terraform/basic-commands) .\n [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/HEAD/vertex_ai/workbench_remove_metadata/main.tf) \n```\nresource \"google_workbench_instance\" \"default\" {\n name  = \"workbench-instance-example\"\n location = \"us-central1-a\"\n gce_setup {\n machine_type = \"n1-standard-1\"\n vm_image {\n  project = \"deeplearning-platform-release\"\n  family = \"tf-latest-gpu\"\n }\n metadata = {\n }\n }\n}\n```\nUse the [instances.patch](/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances/patch) method with the metadata value set to an empty string and `gce_setup.metadata` in the `updateMask` to remove the corresponding feature.", "guide": "Vertex AI"}