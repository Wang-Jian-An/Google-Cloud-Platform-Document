{"title": "Vertex AI - Customer-managed encryption keys", "url": "https://cloud.google.com/vertex-ai/docs/workbench/user-managed/cmek", "abstract": "# Vertex AI - Customer-managed encryption keys\n# Customer-managed encryption keys\nVertex AI Workbench user-managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  user-managed notebooks will end and the ability to create user-managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your user-managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/user-managed/migrate-to-instances) .\nBy default, Google Cloud automatically [encrypts data when it is atrest](/security/encryption/default-encryption) using encryption keys managed by Google. If you have specific compliance or regulatory requirements related to the keys that protect your data, you can use [customer-managedencryption keys (CMEK)](/kms/docs/cmek) for your user-managed notebooks instances.\nThis page describes some specific benefits and limitations of using CMEK with user-managed notebooks and shows how to configure a new user-managed notebooks instance to use CMEK.\nFor information about CMEK in general, including when and why to enable it, see [Customer-managed encryption keys](/kms/docs/cmek) .\n", "content": "## Benefits of CMEK\nIn general, CMEK is most useful if you need full control over the keys used to encrypt your data. With CMEK, you can manage your keys within Cloud Key Management Service. For example, you can rotate or disable a key or you can set up a rotation schedule by using the Cloud KMS API.\nWhen you run a user-managed notebooks instance, your instance runs on a virtual machine (VM) managed by Vertex AI Workbench. When you enable CMEK for a user-managed notebooks instance, Vertex AI Workbench uses the key that you designate, rather than a key managed by Google, to encrypt data on the boot disks of the VM.\nThe CMEK key encrypt metadata, like the instance's name and region, associated with your user-managed notebooks instance. Metadata associated with user-managed notebooks instances is always encrypted using Google's default encryption mechanism.\n## Limitations of CMEK\nTo decrease latency and to prevent cases where resources depend on services that are spread across multiple failure domains, Google recommends that you protect regional user-managed notebooks instances with keys in the same location.\n- You can encrypt regional user-managed notebooks instances by using keys in the same location or in the global location. For example, you can encrypt data in a disk in zone`us-west1-a`by using a key in`us-west1`or`global`.\n- You can encrypt global instances by using keys in any location.\n- [](None) Configuring CMEK for user-managed notebooksautomatically configure CMEK for other Google Cloud products that you use. To use CMEK to encrypt data in other Google Cloud products, you must complete additional configuration.## Configure CMEK for your user-managed notebooks instance\nThe following sections describe how to create a key ring and key in Cloud Key Management Service, grant the service account encrypter and decrypter permissions for your key, and create a user-managed notebooks instance that uses CMEK.\n### Before you begin\nWe recommend using a setup that supports a [separation ofduties](/kms/docs/separation-of-duties) . To configure CMEK for user-managed notebooks, you can use two separate Google Cloud projects:\n- A Cloud KMS project: a project for managing your encryption key\n- A user-managed notebooks project: a project for accessing user-managed notebooks instances and interacting with any other Google Cloud products that you need for your use case\nAlternatively, you can use a single Google Cloud project. To do so, use the same project for all of the following tasks.\n[Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n```\ngcloud init\n```\n**Note:** You can run the gcloud CLI in  the Google Cloud console without installing the Google Cloud CLI. To run the  gcloud CLI in the Google Cloud console, [use  Cloud Shell](https://console.cloud.google.com/?cloudshell=true) .### Create a key ring and key\nWhen you create a key ring and key, keep the following requirements in mind:\n- When you choose your key ring's location, use either `global` or the location where your user-managed notebooks instance will be.\n- Make sure to create your key ring and key in your Cloud KMS project.\nTo create a key ring and a key, see [Create symmetric encryption keys](/kms/docs/creating-keys) .\n### Grant user-managed notebooks permissions\nTo use CMEK for your user-managed notebooks instance, you must grant your user-managed notebooks instance permission to encrypt and decrypt data using your key.\nUser-managed notebooks use a [service account](/iam/docs/service-account-overview) to run your user-managed notebooks instance. This service account is either the default Compute Engine service account or a service account that you specify when you create the instance.\nIf the service account is the default Compute Engine service account, complete the following to find the service account's email address:\n- In the Google Cloud console, go to the **IAM** page. [Go to IAM](https://console.cloud.google.com/iam-admin/iam) \n- Find the principal with the name `Compute Engine default service account` .Make note of the email address for this service account, and use it in the following steps to grant it permission to encrypt and decrypt data using your key.Grant permission by using the Google Cloud console or by using the Google Cloud CLI.\n- In the Google Cloud console, go to the **Cryptographic keys** page. [Go to Cryptographic keys](https://console.cloud.google.com/security/kms?project=_) \n- Select your Cloud KMS project.\n- Click the name of the key ring that you created in [Create a key ring and key](#creating-key-ring-and-key) . The **Key ring details** page opens.\n- Select the checkbox for the key that you created in [Create a key ring and key](#creating-key-ring-and-key) . If an info panel labeled with the name of your key isn't already open, click **Show info panel** .\n- In the info panel, click person_add **Add member** . The **Add members to \"KEY_NAME\"** dialog opens. In this dialog, do the following:- In the **New members** field, enter the service account email address for your instance.\n- In the **Select a role** list, click **Cloud KMS** and then select the **Cloud KMS CryptoKey Encrypter/Decrypter** role.\n- Click **Save** .\nRun the following command:\n```\ngcloud kms keys add-iam-policy-binding KEY_NAME \\\u00a0 \u00a0 --keyring=KEY_RING_NAME \\\u00a0 \u00a0 --location=REGION \\\u00a0 \u00a0 --project=KMS_PROJECT_ID \\\u00a0 \u00a0 --member=serviceAccount:SERVICE_ACCOUNT \\\u00a0 \u00a0 --role=roles/cloudkms.cryptoKeyEncrypterDecrypter\n```\nReplace the following:- ``: the name of the key that you created in [Create a key ring and key](#creating-key-ring-and-key) \n- ``: the key ring that you created in [Create a key ring and key](#creating-key-ring-and-key) \n- ``: the region where you created your key ring\n- ``: the ID of your Cloud KMS project\n- ``: the service account email address for your instance\n### Create a user-managed notebooks instance with CMEK\nAfter you have granted your user-managed notebooks instance permission to encrypt and decrypt data using your key, you can create a user-managed notebooks instance that encrypts data using this key.\nThe following examples show how to encrypt and decrypt data using your key by using the Google Cloud console or gcloud CLI.\nTo create a user-managed notebooks instance with a customer-managed encryption key, use the following steps:- In the Google Cloud console, go to the **User-managed notebooks** page. Or go to [notebook.new](https://notebook.new) (https://notebook.new) and skip the next step. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- Click add_box **New notebook** , and then select **Customize** .\n- On the **Create a user-managed notebook** page, in the **Details** section, provide the following information for your new instance:- **Name** : a name for your new instance\n- **Region** : the region that your key and key ring are in\n- **Zone** : a zone within the region that you selected\n- Select the **Disks** section.\n- To use customer-managed encryption keys, under **Encryption** , select **Customer-managed encryption key (CMEK)** .\n- Click **Select a customer-managed key** .- If the customer-managed key that you want to use is in the list, select it.\n- If the customer-managed key that you want to use isn't in the list, enter the resource ID for your customer-managed key. The resource ID for your customer-managed key looks like this:```\n projects/NOTEBOOKS_PROJECT_NUMBER/locations/global/keyRings/KEY_RING_NAME/cryptoKeys/KEY_NAME\n```Replace the following:- ``: the ID of your user-managed notebooks project\n- ``: the key ring that you created in [Create a key ring and key](#creating-key-ring-and-key) \n- ``: the name of the key that you created in [Create a key ring and key](#creating-key-ring-and-key) \n- Complete the rest of the instance creation dialog, and then click **Create** .\n- Vertex AI Workbench creates a user-managed notebooks instance based on your specified properties and automatically starts the instance. When the instance is ready to use, Vertex AI Workbench activates an **Open JupyterLab** link.\nTo use the gcloud CLI to create a user-managed notebooks instance with a customer-managed encryption key, run the following command. This example assumes that you want to create a user-managed notebooks instance with an `n1-standard-1` machine type and a 100 GB standard persistent boot disk.\n```\ngcloud notebooks instances create notebook-vm-cmek \\\n --location=REGION \\\n --vm-image-family=IMAGE_FAMILY \\\n --vm-image-project=deeplearning-platform-release \\\n --machine-type=\"n1-standard-1\" \\\n --boot-disk-type=\"PD_STANDARD\" \\\n --boot-disk-size=100 \\\n --kms-key=KEY_NAME \\\n --kms-project=KMS_PROJECT_ID \\\n --kms-location=REGION \\\n --kms-keyring=KEY_RING_NAME \\\n --disk-encryption=CMEK \\\n --metadata='proxy-mode=project_editors'\n```\nReplace the following:- ``: the region where you created your key ring and where you plan to create your user-managed notebooks instance\n- ``: the [image family](/vertex-ai/docs/workbench/user-managed/images#deciding) that you want to use to create your user-managed notebooks instance\n- ``: the name of the key that you created in [Create a key ring and key](#creating-key-ring-and-key) \n- ``: the ID of your Cloud KMS project\n- ``: the key ring that you created in [Create a key ring and key](#creating-key-ring-and-key) ## What's next\n- Learn more about [CMEK on Google Cloud](/kms/docs/cmek) \n- Learn [how to use CMEK with other Google Cloudproducts](/kms/docs/using-other-products)", "guide": "Vertex AI"}