{"title": "Vertex AI - \u8a13\u7df4\u5716\u7247\u5c0d\u8c61\u6aa2\u6e2c\u6a21\u578b", "url": "https://cloud.google.com/vertex-ai/docs/image-data/object-detection/train-model?hl=zh-cn", "abstract": "# Vertex AI - \u8a13\u7df4\u5716\u7247\u5c0d\u8c61\u6aa2\u6e2c\u6a21\u578b\n\u672c\u9801\u9762\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u6216 Vertex AI API \u6839\u64da\u5716\u7247\u6578\u64da\u96c6\u8a13\u7df4 AutoML \u5c0d\u8c61\u6aa2\u6e2c\u6a21\u578b\u3002\n", "content": "## \u8a13\u7df4 AutoML \u6a21\u578b\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684 Vertex AI \u90e8\u5206\u4e2d\uff0c\u524d\u5f80 **\u6578\u64da\u96c6** \u9801\u9762\u3002 [\u8f49\u5230\u201c\u6578\u64da\u96c6\u201d\u9801\u9762](https://console.cloud.google.com/vertex-ai/datasets?hl=zh-cn) \n- \u9ede\u64ca\u8981\u7528\u65bc\u8a13\u7df4\u6a21\u578b\u7684\u6578\u64da\u96c6\u7684\u540d\u7a31\uff0c\u4ee5\u6253\u958b\u5176\u8a73\u60c5\u9801\u9762\u3002\n- \u9ede\u64ca **\u8a13\u7df4\u65b0\u6a21\u578b** \u3002 **\u6ce8\u610f** \uff1a\u60a8\u53ef\u4ee5\u5728\u700f\u89bd\u5668\u4e2d\u8f38\u5165 [model.new](https://model.new) \uff0c\u4ee5\u76f4\u63a5\u524d\u5f80\u6a21\u578b\u5275\u5efa\u9801\u9762\u3002\n- \u8a13\u7df4\u65b9\u6cd5\u9078\u64c7 radio_button_checked **AutoML** \u3002\n- \u5728 **\u9078\u64c7\u6a21\u578b\u4f7f\u7528\u4f4d\u7f6e** \u90e8\u5206\u4e2d\uff0c\u9078\u64c7\u6a21\u578b\u4e3b\u6a5f\u4f4d\u7f6e\uff1a radio_button_checked **Cloud** \u3001 radio_button_checked **Edge** \u6216 radio_button_checked **Vertex AI Vision** \u3002\n- \u9ede\u64ca **\u7e7c\u7e8c** \u3002\n- \u8f38\u5165\u6a21\u578b\u7684\u540d\u7a31\u3002\n- \u5982\u679c\u60a8\u8981\u624b\u52d5\u8a2d\u7f6e\u8a13\u7df4\u6578\u64da\u7684\u62c6\u5206\u65b9\u5f0f\uff0c\u8acb\u5c55\u958b **\u9ad8\u7d1a\u9078\u9805** \uff0c\u7136\u5f8c\u9078\u64c7\u6578\u64da\u62c6\u5206\u9078\u9805\u3002 [\u77ad\u89e3\u8a73\u60c5](https://cloud.google.com/vertex-ai/docs/general/ml-use?hl=zh-cn) \u3002\n- \u9ede\u64ca **\u958b\u59cb\u8a13\u7df4** \u3002\u6a21\u578b\u8a13\u7df4\u53ef\u80fd\u9700\u8981\u5e7e\u500b\u5c0f\u6642\uff0c\u5177\u9ad4\u53d6\u6c7a\u65bc\u6578\u64da\u7684\u5927\u5c0f\u548c\u8907\u96dc\u6027\uff0c\u4ee5\u53ca\u8a13\u7df4\u9810\u7b97\uff08\u5982\u679c\u6307\u5b9a\uff09\u3002\u60a8\u53ef\u4ee5\u95dc\u9589\u6b64\u6a19\u7c64\u9801\uff0c\u7a0d\u5f8c\u518d\u8fd4\u56de\u3002\u6a21\u578b\u5b8c\u6210\u8a13\u7df4\u5f8c\uff0c\u60a8\u6703\u6536\u5230\u96fb\u5b50\u90f5\u4ef6\u3002\u5728\u4e0b\u9762\u9078\u64c7\u60a8\u7684\u8a9e\u8a00\u6216\u74b0\u5883\u5c0d\u61c9\u7684\u6a19\u7c64\u9801\uff1a\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u6578\u64da\u96c6\u6240\u5728\u4e14\u6a21\u578b\u5728\u5176\u4e2d\u5275\u5efa\u7684\u5340\u57df\u3002\u4f8b\u5982`us-central1`\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u5fc5\u586b\u3002trainingPipeline \u7684\u986f\u793a\u540d\u3002\n- \uff1a\u7528\u65bc\u8a13\u7df4\u7684\u6578\u64da\u96c6\u7684 ID \u7de8\u865f\u3002\n- `fractionSplit`\uff1a\u53ef\u9078\u3002\u6578\u64da\u7684\u591a\u500b\u53ef\u80fd\u7684\u6a5f\u5668\u5b78\u7fd2\u7528\u9014 [\u62c6\u5206\u9078\u9805](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.trainingPipelines?hl=zh-cn#inputdataconfig) \u4e4b\u4e00\u3002\u5c0d\u65bc`fractionSplit`\uff0c\u503c\u7684\u7e3d\u548c\u5fc5\u9808\u7232 1\u3002\u4f8b\u5982\uff1a\n- `{\"trainingFraction\": \"0.7\",\"validationFraction\": \"0.15\",\"testFraction\": \"0.15\"}`- \uff1aTrainingPipeline \u4e0a\u50b3\uff08\u5275\u5efa\uff09\u7684\u6a21\u578b\u7684\u986f\u793a\u540d\u3002\n- \uff1a\u6a21\u578b\u7684\u8aaa\u660e\u3002\n- \uff1a\u7528\u65bc\u7d44\u7e54\u6a21\u578b\u7684\u4efb\u4f55\u9375\u503c\u5c0d\u3002\u4f8b\u5982\uff1a\n- \"env\": \"prod\"\n- \"tier\": \"backend\"\n- \uff1a\u8981\u8a13\u7df4\u7684\u96f2\u8a17\u7ba1\u6a21\u578b\u7684\u985e\u578b\u3002\u9078\u9805\u5305\u62ec\uff1a\n- `CLOUD_1`- \u6700\u9069\u5408\u5b9a\u88fd\u4ee5\u5728 Google Cloud \u4e2d\u4f7f\u7528\u4e14\u5c0e\u51fa\u7684\u6a21\u578b\u3002\u8207\u4e0a\u8ff0 CLOUD_HIGH_ACCURACY_1 \u548c CLOUD_LOW_LATENCY_1 \u6a21\u578b\u76f8\u6bd4\uff0c\u9810\u6e2c\u8cea\u91cf\u66f4\u9ad8\u4e14\u5ef6\u9072\u6642\u9593\u66f4\u77ed\u3002\n- `CLOUD_HIGH_ACCURACY_1`- \u6700\u9069\u5408\u5b9a\u88fd\u4ee5\u5728 Google Cloud \u4e2d\u4f7f\u7528\u4e14\u5c0e\u51fa\u7684\u6a21\u578b\u3002\u6b64\u6a21\u578b\u9810\u8a08\u5ef6\u9072\u6642\u9593\u6703\u66f4\u9577\uff0c\u4f46\u4e5f\u61c9\u8a72\u6bd4\u5176\u4ed6\u96f2\u6a21\u578b\u5177\u6709\u66f4\u9ad8\u7684\u9810\u6e2c\u8cea\u91cf\u3002\n- `CLOUD_LOW_LATENCY_1`- \u6700\u9069\u5408\u5b9a\u88fd\u4ee5\u5728 Google Cloud \u4e2d\u4f7f\u7528\u4e14\u7121\u6cd5\u5c0e\u51fa\u7684\u6a21\u578b\u3002\u6b64\u6a21\u578b\u9810\u8a08\u5ef6\u9072\u6642\u9593\u8f03\u4f4e\uff0c\u4f46\u53ef\u80fd\u4f4e\u65bc\u5176\u4ed6\u96f2\u6a21\u578b\u7684\u9810\u6e2c\u8cea\u91cf\u3002\n\u5176\u4ed6\u6a21\u578b\u985e\u578b\u9078\u9805\u53ef\u5728 [\u53c3\u8003\u6587\u6a94](https://cloud.google.com/vertex-ai/docs/reference/rpc/google.cloud.aiplatform.v1/schema/trainingjob.definition?hl=zh-cn#modeltype_1) \u4e2d\u627e\u5230\u3002\n- \uff1a\u5be6\u969b\u8a13\u7df4\u8cbb\u7528\u5c07\u7b49\u65bc\u6216\u5c0f\u65bc\u6b64\u503c\u3002\u5c0d\u65bc Cloud \u6a21\u578b\uff0c\u9810\u7b97\u5fc5\u9808\u7232 2 \u842c\u81f3 90 \u842c\u6beb\u7bc0\u9ede\u6642\uff08\u542b\u908a\u754c\u503c\uff09\u3002\u9ed8\u8a8d\u503c\u7232 216,000\uff0c\u4ee3\u8868\u5be6\u969b\u7528\u6642\u4e00\u5929\uff08\u5047\u8a2d\u4f7f\u7528 9 \u500b\u7bc0\u9ede\uff09\u3002\n- \uff1a\u81ea\u52d5\u751f\u6210\u7684 [\u9805\u76ee\u7de8\u865f](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \n| 0 | 1                  |\n|:----|:-----------------------------------------------------------------------|\n| * | \u60a8\u5728 trainingTaskDefinition \u4e2d\u6307\u5b9a\u7684\u67b6\u69cb\u6587\u4ef6\u7684\u8aaa\u660e\u63cf\u8ff0\u4e86\u6b64\u5b57\u6bb5\u7684\u7528\u9014\u3002 |\n| \u2020 | \u60a8\u5728 trainingTaskDefinition \u4e2d\u6307\u5b9a\u7684\u67b6\u69cb\u6587\u4ef6\u8072\u660e\u4e26\u63cf\u8ff0\u4e86\u6b64\u5b57\u6bb5\u3002  |\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/trainingPipelines\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"displayName\": \"TRAININGPIPELINE_DISPLAYNAME\",\n \"inputDataConfig\": {\n \"datasetId\": \"DATASET_ID\",\n \"fractionSplit\": {\n  \"trainingFraction\": \"DECIMAL\",\n  \"validationFraction\": \"DECIMAL\",\n  \"testFraction\": \"DECIMAL\"\n }\n },\n \"modelToUpload\": {\n \"displayName\": \"MODEL_DISPLAYNAME\",\n \"description\": \"MODEL_DESCRIPTION\",\n \"labels\": {\n  \"KEY\": \"VALUE\"\n }\n },\n \"trainingTaskDefinition\": \"gs://google-cloud-aiplatform/schema/trainingjob/definition/automl_image_object_detection_1.0.0.yaml\",\n \"trainingTaskInputs\": {\n \"modelType\": [\"MODELTYPE\"],\n \"budgetMilliNodeHours\": NODE_HOUR_BUDGET\n }\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/trainingPipelines\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/trainingPipelines\" | Select-Object -Expand Content\n```\n\u97ff\u61c9\u5305\u542b\u6709\u95dc\u898f\u7bc4\u7684\u4fe1\u606f\u4ee5\u53ca \u3002\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728\u7de8\u8f2f\u5668\u4e2d\u6253\u958b](https://ide.cloud.google.com/?git_repo=https%3A%2F%2Fgithub.com%2FGoogleCloudPlatform%2Fjava-docs-samples&page=editor&cloudshell_workspace=aiplatform%2Fsrc%2Fmain%2Fjava%2Faiplatform&cloudshell_open_in_editor=CreateTrainingPipelineImageObjectDetectionSample.java&hl=zh-cn) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/CreateTrainingPipelineImageObjectDetectionSample.java) \n```\nimport com.google.cloud.aiplatform.util.ValueConverter;import com.google.cloud.aiplatform.v1.DeployedModelRef;import com.google.cloud.aiplatform.v1.EnvVar;import com.google.cloud.aiplatform.v1.FilterSplit;import com.google.cloud.aiplatform.v1.FractionSplit;import com.google.cloud.aiplatform.v1.InputDataConfig;import com.google.cloud.aiplatform.v1.LocationName;import com.google.cloud.aiplatform.v1.Model;import com.google.cloud.aiplatform.v1.Model.ExportFormat;import com.google.cloud.aiplatform.v1.ModelContainerSpec;import com.google.cloud.aiplatform.v1.PipelineServiceClient;import com.google.cloud.aiplatform.v1.PipelineServiceSettings;import com.google.cloud.aiplatform.v1.Port;import com.google.cloud.aiplatform.v1.PredefinedSplit;import com.google.cloud.aiplatform.v1.PredictSchemata;import com.google.cloud.aiplatform.v1.TimestampSplit;import com.google.cloud.aiplatform.v1.TrainingPipeline;import com.google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlImageObjectDetectionInputs;import com.google.cloud.aiplatform.v1beta1.schema.trainingjob.definition.AutoMlImageObjectDetectionInputs.ModelType;import com.google.rpc.Status;import java.io.IOException;public class CreateTrainingPipelineImageObjectDetectionSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String trainingPipelineDisplayName = \"YOUR_TRAINING_PIPELINE_DISPLAY_NAME\";\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String datasetId = \"YOUR_DATASET_ID\";\u00a0 \u00a0 String modelDisplayName = \"YOUR_MODEL_DISPLAY_NAME\";\u00a0 \u00a0 createTrainingPipelineImageObjectDetectionSample(\u00a0 \u00a0 \u00a0 \u00a0 project, trainingPipelineDisplayName, datasetId, modelDisplayName);\u00a0 }\u00a0 static void createTrainingPipelineImageObjectDetectionSample(\u00a0 \u00a0 \u00a0 String project, String trainingPipelineDisplayName, String datasetId, String modelDisplayName)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 PipelineServiceSettings pipelineServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 PipelineServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (PipelineServiceClient pipelineServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 PipelineServiceClient.create(pipelineServiceSettings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 String trainingTaskDefinition =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"gs://google-cloud-aiplatform/schema/trainingjob/definition/\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"automl_image_object_detection_1.0.0.yaml\";\u00a0 \u00a0 \u00a0 LocationName locationName = LocationName.of(project, location);\u00a0 \u00a0 \u00a0 AutoMlImageObjectDetectionInputs autoMlImageObjectDetectionInputs =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AutoMlImageObjectDetectionInputs.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setModelType(ModelType.CLOUD_HIGH_ACCURACY_1)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setBudgetMilliNodeHours(20000)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDisableEarlyStopping(false)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 InputDataConfig trainingInputDataConfig =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputDataConfig.newBuilder().setDatasetId(datasetId).build();\u00a0 \u00a0 \u00a0 Model model = Model.newBuilder().setDisplayName(modelDisplayName).build();\u00a0 \u00a0 \u00a0 TrainingPipeline trainingPipeline =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TrainingPipeline.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDisplayName(trainingPipelineDisplayName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setTrainingTaskDefinition(trainingTaskDefinition)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setTrainingTaskInputs(ValueConverter.toValue(autoMlImageObjectDetectionInputs))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setInputDataConfig(trainingInputDataConfig)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setModelToUpload(model)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 TrainingPipeline trainingPipelineResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pipelineServiceClient.createTrainingPipeline(locationName, trainingPipeline);\u00a0 \u00a0 \u00a0 System.out.println(\"Create Training Pipeline Image Object Detection Response\");\u00a0 \u00a0 \u00a0 System.out.format(\"Name: %s\\n\", trainingPipelineResponse.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"Display Name: %s\\n\", trainingPipelineResponse.getDisplayName());\u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Training Task Definition %s\\n\", trainingPipelineResponse.getTrainingTaskDefinition());\u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Training Task Inputs: %s\\n\", trainingPipelineResponse.getTrainingTaskInputs());\u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Training Task Metadata: %s\\n\", trainingPipelineResponse.getTrainingTaskMetadata());\u00a0 \u00a0 \u00a0 System.out.format(\"State: %s\\n\", trainingPipelineResponse.getState());\u00a0 \u00a0 \u00a0 System.out.format(\"Create Time: %s\\n\", trainingPipelineResponse.getCreateTime());\u00a0 \u00a0 \u00a0 System.out.format(\"StartTime %s\\n\", trainingPipelineResponse.getStartTime());\u00a0 \u00a0 \u00a0 System.out.format(\"End Time: %s\\n\", trainingPipelineResponse.getEndTime());\u00a0 \u00a0 \u00a0 System.out.format(\"Update Time: %s\\n\", trainingPipelineResponse.getUpdateTime());\u00a0 \u00a0 \u00a0 System.out.format(\"Labels: %s\\n\", trainingPipelineResponse.getLabelsMap());\u00a0 \u00a0 \u00a0 InputDataConfig inputDataConfig = trainingPipelineResponse.getInputDataConfig();\u00a0 \u00a0 \u00a0 System.out.println(\"Input Data Config\");\u00a0 \u00a0 \u00a0 System.out.format(\"Dataset Id: %s\", inputDataConfig.getDatasetId());\u00a0 \u00a0 \u00a0 System.out.format(\"Annotations Filter: %s\\n\", inputDataConfig.getAnnotationsFilter());\u00a0 \u00a0 \u00a0 FractionSplit fractionSplit = inputDataConfig.getFractionSplit();\u00a0 \u00a0 \u00a0 System.out.println(\"Fraction Split\");\u00a0 \u00a0 \u00a0 System.out.format(\"Training Fraction: %s\\n\", fractionSplit.getTrainingFraction());\u00a0 \u00a0 \u00a0 System.out.format(\"Validation Fraction: %s\\n\", fractionSplit.getValidationFraction());\u00a0 \u00a0 \u00a0 System.out.format(\"Test Fraction: %s\\n\", fractionSplit.getTestFraction());\u00a0 \u00a0 \u00a0 FilterSplit filterSplit = inputDataConfig.getFilterSplit();\u00a0 \u00a0 \u00a0 System.out.println(\"Filter Split\");\u00a0 \u00a0 \u00a0 System.out.format(\"Training Filter: %s\\n\", filterSplit.getTrainingFilter());\u00a0 \u00a0 \u00a0 System.out.format(\"Validation Filter: %s\\n\", filterSplit.getValidationFilter());\u00a0 \u00a0 \u00a0 System.out.format(\"Test Filter: %s\\n\", filterSplit.getTestFilter());\u00a0 \u00a0 \u00a0 PredefinedSplit predefinedSplit = inputDataConfig.getPredefinedSplit();\u00a0 \u00a0 \u00a0 System.out.println(\"Predefined Split\");\u00a0 \u00a0 \u00a0 System.out.format(\"Key: %s\\n\", predefinedSplit.getKey());\u00a0 \u00a0 \u00a0 TimestampSplit timestampSplit = inputDataConfig.getTimestampSplit();\u00a0 \u00a0 \u00a0 System.out.println(\"Timestamp Split\");\u00a0 \u00a0 \u00a0 System.out.format(\"Training Fraction: %s\\n\", timestampSplit.getTrainingFraction());\u00a0 \u00a0 \u00a0 System.out.format(\"Validation Fraction: %s\\n\", timestampSplit.getValidationFraction());\u00a0 \u00a0 \u00a0 System.out.format(\"Test Fraction: %s\\n\", timestampSplit.getTestFraction());\u00a0 \u00a0 \u00a0 System.out.format(\"Key: %s\\n\", timestampSplit.getKey());\u00a0 \u00a0 \u00a0 Model modelResponse = trainingPipelineResponse.getModelToUpload();\u00a0 \u00a0 \u00a0 System.out.println(\"Model To Upload\");\u00a0 \u00a0 \u00a0 System.out.format(\"Name: %s\\n\", modelResponse.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"Display Name: %s\\n\", modelResponse.getDisplayName());\u00a0 \u00a0 \u00a0 System.out.format(\"Description: %s\\n\", modelResponse.getDescription());\u00a0 \u00a0 \u00a0 System.out.format(\"Metadata Schema Uri: %s\\n\", modelResponse.getMetadataSchemaUri());\u00a0 \u00a0 \u00a0 System.out.format(\"Metadata: %s\\n\", modelResponse.getMetadata());\u00a0 \u00a0 \u00a0 System.out.format(\"Training Pipeline: %s\\n\", modelResponse.getTrainingPipeline());\u00a0 \u00a0 \u00a0 System.out.format(\"Artifact Uri: %s\\n\", modelResponse.getArtifactUri());\u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Supported Deployment Resources Types: %s\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 modelResponse.getSupportedDeploymentResourcesTypesList());\u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Supported Input Storage Formats: %s\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 modelResponse.getSupportedInputStorageFormatsList());\u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Supported Output Storage Formats: %s\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 modelResponse.getSupportedOutputStorageFormatsList());\u00a0 \u00a0 \u00a0 System.out.format(\"Create Time: %s\\n\", modelResponse.getCreateTime());\u00a0 \u00a0 \u00a0 System.out.format(\"Update Time: %s\\n\", modelResponse.getUpdateTime());\u00a0 \u00a0 \u00a0 System.out.format(\"Labels: %sn\\n\", modelResponse.getLabelsMap());\u00a0 \u00a0 \u00a0 PredictSchemata predictSchemata = modelResponse.getPredictSchemata();\u00a0 \u00a0 \u00a0 System.out.println(\"Predict Schemata\");\u00a0 \u00a0 \u00a0 System.out.format(\"Instance Schema Uri: %s\\n\", predictSchemata.getInstanceSchemaUri());\u00a0 \u00a0 \u00a0 System.out.format(\"Parameters Schema Uri: %s\\n\", predictSchemata.getParametersSchemaUri());\u00a0 \u00a0 \u00a0 System.out.format(\"Prediction Schema Uri: %s\\n\", predictSchemata.getPredictionSchemaUri());\u00a0 \u00a0 \u00a0 for (ExportFormat exportFormat : modelResponse.getSupportedExportFormatsList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Supported Export Format\");\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Id: %s\\n\", exportFormat.getId());\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ModelContainerSpec modelContainerSpec = modelResponse.getContainerSpec();\u00a0 \u00a0 \u00a0 System.out.println(\"Container Spec\");\u00a0 \u00a0 \u00a0 System.out.format(\"Image Uri: %s\\n\", modelContainerSpec.getImageUri());\u00a0 \u00a0 \u00a0 System.out.format(\"Command: %s\\n\", modelContainerSpec.getCommandList());\u00a0 \u00a0 \u00a0 System.out.format(\"Args: %s\\n\", modelContainerSpec.getArgsList());\u00a0 \u00a0 \u00a0 System.out.format(\"Predict Route: %s\\n\", modelContainerSpec.getPredictRoute());\u00a0 \u00a0 \u00a0 System.out.format(\"Health Route: %s\\n\", modelContainerSpec.getHealthRoute());\u00a0 \u00a0 \u00a0 for (EnvVar envVar : modelContainerSpec.getEnvList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Env\");\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Name: %s\\n\", envVar.getName());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Value: %s\\n\", envVar.getValue());\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 for (Port port : modelContainerSpec.getPortsList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Port\");\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Container Port: %s\\n\", port.getContainerPort());\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 for (DeployedModelRef deployedModelRef : modelResponse.getDeployedModelsList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Deployed Model\");\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Endpoint: %s\\n\", deployedModelRef.getEndpoint());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Deployed Model Id: %s\\n\", deployedModelRef.getDeployedModelId());\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 Status status = trainingPipelineResponse.getError();\u00a0 \u00a0 \u00a0 System.out.println(\"Error\");\u00a0 \u00a0 \u00a0 System.out.format(\"Code: %s\\n\", status.getCode());\u00a0 \u00a0 \u00a0 System.out.format(\"Message: %s\\n\", status.getMessage());\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/create-training-pipeline-image-object-detection.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const datasetId = 'YOUR_DATASET_ID';// const modelDisplayName = 'YOUR_MODEL_DISPLAY_NAME';// const trainingPipelineDisplayName = 'YOUR_TRAINING_PIPELINE_DISPLAY_NAME';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const aiplatform = require('@google-cloud/aiplatform');const {definition} =\u00a0 aiplatform.protos.google.cloud.aiplatform.v1.schema.trainingjob;const ModelType = definition.AutoMlImageObjectDetectionInputs.ModelType;// Imports the Google Cloud Pipeline Service Client libraryconst {PipelineServiceClient} = aiplatform.v1;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst pipelineServiceClient = new PipelineServiceClient(clientOptions);async function createTrainingPipelineImageObjectDetection() {\u00a0 // Configure the parent resource\u00a0 const parent = `projects/${project}/locations/${location}`;\u00a0 const trainingTaskInputsObj =\u00a0 \u00a0 new definition.AutoMlImageObjectDetectionInputs({\u00a0 \u00a0 \u00a0 disableEarlyStopping: false,\u00a0 \u00a0 \u00a0 modelType: ModelType.CLOUD_1,\u00a0 \u00a0 \u00a0 budgetMilliNodeHours: 20000,\u00a0 \u00a0 });\u00a0 const trainingTaskInputs = trainingTaskInputsObj.toValue();\u00a0 const modelToUpload = {displayName: modelDisplayName};\u00a0 const inputDataConfig = {datasetId: datasetId};\u00a0 const trainingPipeline = {\u00a0 \u00a0 displayName: trainingPipelineDisplayName,\u00a0 \u00a0 trainingTaskDefinition:\u00a0 \u00a0 \u00a0 'gs://google-cloud-aiplatform/schema/trainingjob/definition/automl_image_object_detection_1.0.0.yaml',\u00a0 \u00a0 trainingTaskInputs,\u00a0 \u00a0 inputDataConfig,\u00a0 \u00a0 modelToUpload,\u00a0 };\u00a0 const request = {\u00a0 \u00a0 parent,\u00a0 \u00a0 trainingPipeline,\u00a0 };\u00a0 // Create training pipeline request\u00a0 const [response] =\u00a0 \u00a0 await pipelineServiceClient.createTrainingPipeline(request);\u00a0 console.log('Create training pipeline image object detection response');\u00a0 console.log(`Name : ${response.name}`);\u00a0 console.log('Raw response:');\u00a0 console.log(JSON.stringify(response, null, 2));}createTrainingPipelineImageObjectDetection();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728\u7de8\u8f2f\u5668\u4e2d\u6253\u958b](https://ide.cloud.google.com/?git_repo=https%3A%2F%2Fgithub.com%2Fgoogleapis%2Fpython-aiplatform&page=editor&cloudshell_workspace=samples%2Fsnippets%2Fpipeline_service&cloudshell_open_in_editor=create_training_pipeline_image_object_detection_sample.py&hl=zh-cn) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/snippets/pipeline_service/create_training_pipeline_image_object_detection_sample.py) \n```\nfrom google.cloud import aiplatformfrom google.cloud.aiplatform.gapic.schema import trainingjobdef create_training_pipeline_image_object_detection_sample(\u00a0 \u00a0 project: str,\u00a0 \u00a0 display_name: str,\u00a0 \u00a0 dataset_id: str,\u00a0 \u00a0 model_display_name: str,\u00a0 \u00a0 location: str = \"us-central1\",\u00a0 \u00a0 api_endpoint: str = \"us-central1-aiplatform.googleapis.com\",):\u00a0 \u00a0 # The AI Platform services require regional API endpoints.\u00a0 \u00a0 client_options = {\"api_endpoint\": api_endpoint}\u00a0 \u00a0 # Initialize client that will be used to create and send requests.\u00a0 \u00a0 # This client only needs to be created once, and can be reused for multiple requests.\u00a0 \u00a0 client = aiplatform.gapic.PipelineServiceClient(client_options=client_options)\u00a0 \u00a0 training_task_inputs = trainingjob.definition.AutoMlImageObjectDetectionInputs(\u00a0 \u00a0 \u00a0 \u00a0 model_type=\"CLOUD_HIGH_ACCURACY_1\",\u00a0 \u00a0 \u00a0 \u00a0 budget_milli_node_hours=20000,\u00a0 \u00a0 \u00a0 \u00a0 disable_early_stopping=False,\u00a0 \u00a0 ).to_value()\u00a0 \u00a0 training_pipeline = {\u00a0 \u00a0 \u00a0 \u00a0 \"display_name\": display_name,\u00a0 \u00a0 \u00a0 \u00a0 \"training_task_definition\": \"gs://google-cloud-aiplatform/schema/trainingjob/definition/automl_image_object_detection_1.0.0.yaml\",\u00a0 \u00a0 \u00a0 \u00a0 \"training_task_inputs\": training_task_inputs,\u00a0 \u00a0 \u00a0 \u00a0 \"input_data_config\": {\"dataset_id\": dataset_id},\u00a0 \u00a0 \u00a0 \u00a0 \"model_to_upload\": {\"display_name\": model_display_name},\u00a0 \u00a0 }\u00a0 \u00a0 parent = f\"projects/{project}/locations/{location}\"\u00a0 \u00a0 response = client.create_training_pipeline(\u00a0 \u00a0 \u00a0 \u00a0 parent=parent, training_pipeline=training_pipeline\u00a0 \u00a0 )\u00a0 \u00a0 print(\"response:\", response)\n```\n## \u4f7f\u7528 REST \u63a7\u5236\u6578\u64da\u62c6\u5206\u60a8\u53ef\u4ee5\u63a7\u5236\u5728\u8a13\u7df4\u96c6\u3001\u9a57\u8b49\u96c6\u548c\u6e2c\u8a66\u96c6\u4e4b\u9593\u62c6\u5206\u8a13\u7df4\u6578\u64da\u7684\u65b9\u5f0f\u3002\u4f7f\u7528 Vertex AI API \u6642\uff0c\u8acb\u4f7f\u7528 [Split \u5c0d\u8c61](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.trainingPipelines?hl=zh-cn#InputDataConfig) \u4f86\u78ba\u5b9a\u6578\u64da\u62c6\u5206\u3002 `Split` \u5c0d\u8c61\u53ef\u4ee5\u5305\u542b\u5728 `InputConfig` \u5c0d\u8c61\u4e2d\u4f5c\u7232\u591a\u7a2e\u5c0d\u8c61\u985e\u578b\u4e2d\u7684\u4e00\u7a2e\uff0c\u5176\u4e2d\u6bcf\u7a2e\u985e\u578b\u90fd\u63d0\u4f9b\u4e00\u7a2e\u4e0d\u540c\u7684\u8a13\u7df4\u6578\u64da\u62c6\u5206\u65b9\u5f0f\u3002\u60a8\u53ea\u80fd\u9078\u64c7\u4e00\u7a2e\u65b9\u6cd5\u3002- `FractionSplit`:- \uff1a\u8981\u7528\u65bc\u8a13\u7df4\u96c6\u7684\u8a13\u7df4\u6578\u64da\u7684\u6bd4\u4f8b\u3002\n- \uff1a\u8981\u7528\u65bc\u9a57\u8b49\u96c6\u7684\u8a13\u7df4\u6578\u64da\u7684\u6bd4\u4f8b\u3002\u4e0d\u7528\u65bc\u8996\u983b\u6578\u64da\u3002\n- \uff1a\u8981\u7528\u65bc\u6e2c\u8a66\u96c6\u7684\u8a13\u7df4\u6578\u64da\u7684\u6bd4\u4f8b\u3002\n\u5982\u679c\u6307\u5b9a\u4e86\u4efb\u4e00\u6bd4\u4f8b\uff0c\u5247\u5fc5\u9808\u6307\u5b9a\u6240\u6709\u6bd4\u4f8b\u3002\u9019\u4e9b\u6bd4\u4f8b\u4e4b\u548c\u5fc5\u9808\u7b49\u65bc 1.0\u3002 [\u6bd4\u4f8b\u7684\u9ed8\u8a8d\u503c](https://cloud.google.com/vertex-ai/docs/general/ml-use?hl=zh-cn#default) \u6703\u56e0\u6578\u64da\u985e\u578b\u800c\u7570\u3002 [\u77ad\u89e3\u8a73\u60c5](https://cloud.google.com/vertex-ai/docs/general/ml-use?hl=zh-cn#percentages) \u3002```\n\"fractionSplit\": {\n \"trainingFraction\": TRAINING_FRACTION,\n \"validationFraction\": VALIDATION_FRACTION,\n \"testFraction\": TEST_FRACTION\n},\n```\n- `FilterSplit`\uff1a\n- \uff1a\u8207\u6b64\u904e\u6ffe\u689d\u4ef6\u5339\u914d\u7684\u6578\u64da\u9805\u7528\u65bc\u8a13\u7df4\u96c6\u3002\n- \uff1a\u8207\u6b64\u904e\u6ffe\u689d\u4ef6\u5339\u914d\u7684\u6578\u64da\u9805\u7528\u65bc\u9a57\u8b49\u96c6\u3002\u5c0d\u65bc\u8996\u983b\u6578\u64da\uff0c\u8a72\u503c\u5fc5\u9808\u7232\u201c-\u201d\u3002\n- \uff1a\u8207\u6b64\u904e\u6ffe\u689d\u4ef6\u5339\u914d\u7684\u6578\u64da\u9805\u7528\u65bc\u6e2c\u8a66\u96c6\u3002\n- \u9019\u4e9b\u904e\u6ffe\u689d\u4ef6\u53ef\u4ee5\u8207 `ml_use` \u6a19\u7c64\u6216\u61c9\u7528\u65bc\u6578\u64da\u7684\u4efb\u4f55\u6a19\u7c64\u7d50\u5408\u4f7f\u7528\u3002\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u4f7f\u7528 [ml-use \u6a19\u7c64](https://cloud.google.com/vertex-ai/docs/general/ml-use?hl=zh-cn#ml-use) \u548c [\u5176\u4ed6\u6a19\u7c64](https://cloud.google.com/vertex-ai/docs/general/ml-use?hl=zh-cn#filter) \u4f86\u904e\u6ffe\u6578\u64da\u3002\n- \u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u5c07 `filterSplit` \u5c0d\u8c61\u8207 `ml_use` \u6a19\u7c64\u7d50\u5408\u4f7f\u7528\uff0c\u5176\u4e2d\u5305\u542b\u9a57\u8b49\u96c6\uff1a\n- ```\n\"filterSplit\": {\n\"trainingFilter\": \"labels.aiplatform.googleapis.com/ml_use=training\",\n\"validationFilter\": \"labels.aiplatform.googleapis.com/ml_use=validation\",\n\"testFilter\": \"labels.aiplatform.googleapis.com/ml_use=test\"\n}\n```", "guide": "Vertex AI"}