{"title": "Vertex AI - Mount an NFS share for custom training", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Mount an NFS share for custom training\nYou can configure your custom training jobs to mount Network File System (NFS) shares to the container where your code is running. This lets your jobs access remote files as if they were local, enabling high throughput and low latency.\nThis guide shows how to mount an NFS share when running a custom training job.\n", "content": "## Before you begin\n- Create an NFS share in a [Virtual Private Cloud (VPC)](/vpc/docs/vpc-peering) . Your share must be accessible without authentication.You can use a Filestore instance as your NFS share. If you are using [Filestore](/filestore) , select **private service access** as the connect mode when you create an instance. For an example, see [Create instances](/filestore/docs/creating-instances) in the Filestore documentation.\n- Follow the instructions in [Set up VPC Network Peering](/vertex-ai/docs/general/vpc-peering) to peer Vertex AI with the VPC that hosts your NFS share.## NFS information for custom training\nWhen you create a custom training job that mounts an NFS share, you must specify the following:\n- The name of the network for Vertex AI to access. The way that you specify the network name differs depending on the type of custom training job. For details, see [Perform custom training](/vertex-ai/docs/training/using-private-ip#perform-custom-training) .\n- Your NFS configuration in the [WorkerPoolSpec field](/vertex-ai/docs/reference/rest/v1/CustomJobSpec#workerpoolspec) . Include the following fields:| Field    | Description                                              |\n|:---------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| nfsMounts.server  | The IP address of your NFS server. This must be a private address in your VPC.                             |\n| nfsMounts.path  | The NFS share path. This must be an absolute path that begins with /.                               |\n| nfsMounts.mountPoint | The local mount point. This must be a valid UNIX directory name. For example, if the local mount point is sourceData, then specify the path /mnt/nfs/sourceData from your training VM instance. |For more information, see [Where to specify compute resources](/vertex-ai/docs/training/configure-compute#where_to_specify_compute_resources) .## Example: create a custom job using the gcloud CLI\n- Follow the steps in [Create a Python training application for a prebuilt container](/vertex-ai/docs/training/create-python-pre-built-container) to build a training application to run on Vertex AI.\n- Create a file named `config.yaml` that describes the network and NFS mount settings for your training job. Use the following format:```\nnetwork: projects/PROJECT_NUMBER/global/networks/NETWORK_NAMEworkerPoolSpecs:\u00a0 \u00a0 - machineSpec:\u00a0 \u00a0 \u00a0 \u00a0 machineType: MACHINE_TYPE\u00a0 \u00a0 \u00a0 replicaCount: 1\u00a0 \u00a0 \u00a0 pythonPackageSpec:\u00a0 \u00a0 \u00a0 \u00a0 executorImageUri: PYTHON_PACKAGE_EXECUTOR_IMAGE_URI or PRE_BUILT_CONTAINER_IMAGE_URI\u00a0 \u00a0 \u00a0 \u00a0 packageUris:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - \u00a0PYTHON_PACKAGE_URIS\u00a0 \u00a0 \u00a0 \u00a0 pythonModule: PYTHON_MODULE\u00a0 \u00a0 \u00a0 nfsMounts:\u00a0 \u00a0 \u00a0 \u00a0 - server: NFS_SERVER_IP\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: NFS_SHARE_NAME\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mountPoint: LOCAL_FOLDER\n```Replace the following:- : The project ID of your Google Cloud project.\n- : The name of your private or shared VPC.\n- : The identifier of your virtual machine type.\n- : The URI of a container image inArtifact Registry that will run the provided Python package. Vertex AI provides a [wide range of executor images with pre-installed packages](/vertex-ai/docs/training/pre-built-containers) to meet users' various use cases.\n- : A comma-separated list of Cloud Storage URIs that specify the Python package files that make up the training program and its dependent packages. The maximum number of package URIs is 100.\n- : The Python module name to run after installing the packages.\n- : The IP address of your NFS server.\n- : The NFS share path, which is an absolute path that begins with `/` .\n- : The local mount point (UNIX directory name).\nMake sure that your network name is formatted correctly and that your NFS share exists in the specified network.\n- Create your custom job and pass your `config.yaml` file to the `--config` parameter.```\ngcloud ai custom-jobs create \\\u00a0 --region=LOCATION \\\u00a0 --display-name=JOB_NAME \\\u00a0 --config=config.yaml\n```Replace the following:- : Specify the region to create the job in.\n- : A name for the custom job.\n## Limitations\n- You must mount your NFS share using an IP address that is internal to your VPC; using public URLs is not allowed.\n- Training jobs mount NFS shares without authentication, and will fail if a username and password are required.To secure your data, set permissions on your NFS share. If you are using Filestore, see [access control](/filestore/docs/access-control) in the Filestore documentation.\n- You can not run two training jobs that mount NFS shares from different VPC networks at the same time. This is due to the [network peering restriction](/vertex-ai/docs/training/using-private-ip#run_jobs_on_different_networks) .", "guide": "Vertex AI"}