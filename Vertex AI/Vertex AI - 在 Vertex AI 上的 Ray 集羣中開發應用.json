{"title": "Vertex AI - \u5728 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u4e2d\u958b\u767c\u61c9\u7528", "url": "https://cloud.google.com/vertex-ai/docs/open-source/ray-on-vertex-ai/develop-application?hl=zh-cn", "abstract": "# Vertex AI - \u5728 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u4e2d\u958b\u767c\u61c9\u7528\n**    \u9810\u89bd     ** \u672c\u7522\u54c1\u6216\u529f\u80fd\u9808\u9075\u5b88 [\u670d\u52d9\u5c08\u7528\u689d\u6b3e](https://cloud.google.com/terms/service-terms?hl=zh-cn#1) \u7684\u201c\u901a\u7528\u670d\u52d9\u689d\u6b3e\u201d\u90e8\u5206\u4e2d\u7684\u201c\u975e\u6b63\u5f0f\u7248\u7522\u54c1\u689d\u6b3e\u201d\u3002 \u6b63\u5f0f\u767c\u4f48\u524d\u7522\u54c1\u548c\u529f\u80fd\u201c\u6309\u539f\u6a23\u201d\u63d0\u4f9b\uff0c\u53ef\u80fd\u50c5\u63d0\u4f9b\u6709\u9650\u652f\u6301\u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u767c\u4f48\u968e\u6bb5\u8aaa\u660e](https://cloud.google.com/products?hl=zh-cn#product-launch-stages) \u3002\n\u60a8\u53ef\u4ee5\u9023\u63a5\u5230 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\uff0c\u4e26\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u958b\u767c\u61c9\u7528\uff1a\n- \u4f7f\u7528\u5305\u542b [Ray \u5ba2\u6236\u7aef](https://docs.ray.io/en/latest/cluster/running-applications/job-submission/ray-client.html) \u529f\u80fd\u7684 Python \u7248 Vertex AI SDK \u7248\u672c\u9023\u63a5\u5230 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u3002\u5982\u679c\u60a8\u504f\u597d\u4ea4\u4e92\u5f0f Python \u958b\u767c\u74b0\u5883\uff0c\u8acb\u4f7f\u7528\u6b64\u9078\u9805\u3002- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684 Colab Enterprise \u7b46\u8a18\u672c\u4e2d\u4f7f\u7528 Python \u7248 Vertex AI SDK\u3002\n- \u5728 Python \u6703\u8a71\u3001shell \u6216 Jupyter \u7b46\u8a18\u672c\u4e2d\u4f7f\u7528 Python \u7248 Vertex AI SDK\u3002\n- \u7de8\u5beb Python \u8173\u672c\uff0c\u4e26\u4f7f\u7528 [Ray Jobs API](https://docs.ray.io/en/latest/cluster/running-applications/job-submission/index.html) \u5c07\u8173\u672c\u63d0\u4ea4\u5230 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u3002\u5982\u679c\u60a8\u5e0c\u671b\u4ee5\u7de8\u7a0b\u65b9\u5f0f\u63d0\u4ea4\u4f5c\u696d\uff0c\u8acb\u4f7f\u7528\u6b64\u9078\u9805\u3002\n[Ray on Vertex AI \u6982\u89bd](https://cloud.google.com/vertex-ai/docs/open-source/ray-on-vertex-ai/overview?hl=zh-cn)\n[\u8a2d\u7f6e](https://cloud.google.com/vertex-ai/docs/open-source/ray-on-vertex-ai/set-up?hl=zh-cn)\n", "content": "## \u4f7f\u7528 Python \u7248 Vertex AI SDK \u958b\u767c\u61c9\u7528\n\u5982\u9700\u4f7f\u7528 Python \u7248 Vertex AI SDK \u9023\u63a5\u5230 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\uff0c\u9023\u63a5\u74b0\u5883\u5fc5\u9808\u4f4d\u65bc\u540c\u4e00\u5c0d\u7b49\u4e92\u9023 VPC \u7db2\u7d61\u4e0a\u3002\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u8f49\u81f3\u201cRay on Vertex AI\u201d\u9801\u9762\u3002 [\u8f49\u81f3\u201cRay on Vertex AI\u201d\u9801\u9762](https://console.cloud.google.com/vertex-ai/ray?hl=zh-cn) \n- \u5728\u60a8\u5275\u5efa\u7684\u96c6\u7fa3\u6240\u5728\u7684\u884c\u4e2d\uff0c\u9ede\u64ca **\u5728 Colab Enterprise \u4e2d\u6253\u958b** \u3002\n- Colab Enterprise \u7b46\u8a18\u672c\u96a8\u5373\u6253\u958b\u3002\u6309\u7167\u6709\u95dc\u5982\u4f55\u4f7f\u7528 Python \u7248 Vertex AI SDK \u9023\u63a5\u5230 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u7684\u8aaa\u660e\u64cd\u4f5c\u3002 **\u6ce8\u610f\uff1a** Colab Enterprise \u4f7f\u7528 [\u7528\u6236\u6191\u64da](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-user-cred) \u9032\u884c\u8eab\u4efd\u9a57\u8b49\u3002- \u5982\u679c\u5c0d\u8a71\u6846\u5c4f\u5e55\u8981\u6c42\u60a8\u5553\u7528 API\uff0c\u8acb\u9ede\u64ca **\u5553\u7528** \u3002\n- \u5982\u679c\u60a8\u662f\u9996\u6b21\u9023\u63a5\u5230\u96c6\u7fa3\uff0c\u8acb\u9ede\u64ca **\u9023\u63a5** \uff1b\u5982\u679c\u60a8\u8981\u91cd\u65b0\u9023\u63a5\u5230\u96c6\u7fa3\uff0c\u8acb\u9ede\u64ca **\u91cd\u65b0\u9023\u63a5** \u3002\u7b46\u8a18\u672c\u9700\u8981\u5e7e\u5206\u9418\u6642\u9593\u624d\u80fd\u9023\u63a5\u5230\u904b\u884c\u6642\u3002\n- \u904b\u884c **\u4f7f\u7528\u5165\u9580** \u4ee3\u78bc\u55ae\u5143\u4ee5\u5c0e\u5165 Python \u7248 Vertex AI SDK \u4e26\u9023\u63a5\u5230 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u3002\n\u5728\u4ea4\u4e92\u5f0f Python \u74b0\u5883\u4e2d\uff1a\n```\nimport ray# Necessary even if aiplatform.* symbol is not directly used in your program.from google.cloud import aiplatform# The CLUSTER_RESOURCE_NAME is the one returned from vertex_ray.create_ray_cluster.CLUSTER_RESOURCE_NAME='projects/{}/locations/{}/persistentResources/{}'.format(PROJECT_NUMBER, REGION, CLUSTER_NAME)ray.init('vertex_ray://{}'.format(CLUSTER_RESOURCE_NAME))\n```\n\u5176\u4e2d\uff1a- \uff1a\u60a8\u7232 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u6307\u5b9a\u7684\u5340\u57df\u3002\n- \uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\u3002\n- \uff1aVertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u7684\u540d\u7a31\uff0c\u5728\u5275\u5efa\u96c6\u7fa3\u6642\u6307\u5b9a\u3002\n\u60a8\u5c07\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u8f38\u51fa\uff1a\n```\nPython version: 3.10.12\nRay version: 2.4\nVertex SDK version: 1.34.0\nDashboard: xxxx-dot-us-central1.aiplatform-training.googleusercontent.com\nInteractive Terminal Uri: yyyy-dot-us-central1.aiplatform-training.googleusercontent.com\nCluster Name: ray-cluster-zzzz\n```\n\u60a8\u53ef\u4ee5\u4f7f\u7528 `Dashboard` \u7db2\u5740\u5f9e\u700f\u89bd\u5668\u8a2a\u554f Ray \u4fe1\u606f\u4e2d\u5fc3\u3002URI \u7684\u683c\u5f0f\u7232 `https://xxxx-dot-us-central1.aiplatform-training.googleusercontent.com/` \u3002\u4fe1\u606f\u4e2d\u5fc3\u6703\u986f\u793a\u5df2\u63d0\u4ea4\u7684\u4f5c\u696d\u3001GPU \u6216 CPU \u7684\u6578\u91cf\u4ee5\u53ca\u96c6\u7fa3\u4e2d\u6bcf\u81fa\u6a5f\u5668\u7684\u78c1\u76e4\u7a7a\u9593\u3002\n\u9023\u63a5\u5230 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u540e\uff0c\u60a8\u4fbf\u53ef\u4ee5\u6309\u7167\u7232\u5e38\u898f OSS Ray \u5f8c\u7aef\u958b\u767c Ray \u7a0b\u5e8f\u7684\u76f8\u540c\u65b9\u5f0f\u4f86\u958b\u767c Ray \u7a0b\u5e8f\u3002\n```\n@ray.remotedef square(x):\u00a0 print(x)\u00a0 return x * x# Launch four parallel square tasks.futures = [square.remote(i) for i in range(4)]print(ray.get(futures))# Returns [0, 1, 4, 9]\n```\n## \u4f7f\u7528 Ray Jobs API \u958b\u767c\u61c9\u7528\n\u672c\u90e8\u5206\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 Ray Jobs API \u5c07 Python \u7a0b\u5e8f\u63d0\u4ea4\u5230 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u3002\n### \u7de8\u5beb Python \u8173\u672c\n\u5728\u4efb\u610f\u6587\u672c\u7de8\u8f2f\u5668\u4e2d\u958b\u767c Python \u8173\u672c\u61c9\u7528\u3002\u4f8b\u5982\uff0c\u5c07\u4ee5\u4e0b\u8173\u672c\u653e\u5230 `my_script.py` \u6587\u4ef6\u4e2d\uff1a\n**\u6ce8\u610f\uff1a** \u7a0b\u5e8f\u5165\u53e3\u9ede\u4e2d\u7684\u4ee3\u78bc\u5728\u982d\u7bc0\u9ede\u4e0a\u57f7\u884c\u3002\u60a8\u5fc5\u9808\u4f7f\u7528 `@ray.remote` \u5c01\u88dd\u51fd\u6578\u624d\u80fd\u4f7f\u51fd\u6578\u6b63\u78ba\u4e26\u884c\u904b\u884c\u3002\n```\nimport rayimport time@ray.remotedef hello_world():\u00a0 \u00a0 return \"hello world\"@ray.remotedef square(x):\u00a0 \u00a0 print(x)\u00a0 \u00a0 time.sleep(100)\u00a0 \u00a0 return x * xray.init() \u00a0# No need to specify address=\"vertex_ray://....\"print(ray.get(hello_world.remote()))print(ray.get([square.remote(i) for i in range(4)]))\n```\n### \u4f7f\u7528 Ray Jobs API \u63d0\u4ea4 Ray \u4f5c\u696d\n\u60a8\u53ef\u4ee5\u4f7f\u7528 Python\u3001Ray Jobs CLI \u6216\u516c\u5171 [Ray \u4fe1\u606f\u4e2d\u5fc3](https://docs.ray.io/en/latest/ray-observability/getting-started.html) \u5730\u5740\u63d0\u4ea4 Ray \u4f5c\u696d\u3002\n**\u6ce8\u610f** \uff1a `working_dir` \u76ee\u9304\u4e2d\u7684\u6240\u6709\u5167\u5bb9\u90fd\u6703\u767c\u9001\u5230 Ray \u96c6\u7fa3\uff0c\u5982\u679c\u76ee\u9304\u904e\u5927\uff0c\u9019\u53ef\u80fd\u6703\u5c0e\u81f4\u8d85\u6642\u3002\u6211\u5011\u5efa\u8b70\u60a8\u6307\u5b9a\u4e00\u500b\u50c5\u5305\u542b\u60a8\u8981\u767c\u9001\u7684\u6587\u4ef6\u7684 `working_dir` \u76ee\u9304\u3002\n\u5728 VPC \u5c0d\u7b49\u4e92\u9023\u7db2\u7d61\u4e2d\uff0c\u4f7f\u7528 Python \u74b0\u5883\u63d0\u4ea4 Ray \u4f5c\u696d\uff1a\n```\nimport rayfrom ray.job_submission import JobSubmissionClientfrom google.cloud import aiplatform \u00a0# Necessary even if aiplatform.* symbol is not directly used in your program.CLUSTER_RESOURCE_NAME='projects/{}/locations/REGION/persistentResources/{}'.format(PROJECT_NUMBER, CLUSTER_NAME)client = JobSubmissionClient(\"vertex_ray://{}\".format(CLUSTER_RESOURCE_NAME))job_id = client.submit_job(\u00a0 # Entrypoint shell command to execute\u00a0 entrypoint=\"python my_script.py\",\u00a0 # Path to the local directory that contains the my_script.py file.\u00a0 runtime_env={\u00a0 \u00a0 \"working_dir\": \"./directory-containing-my-script\",\u00a0 \u00a0 \"pip\": [\"numpy\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"xgboost==1.7.6\", # specific versions can be pinned or bounded\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"ray==2.4.0\", # pin the Ray version to prevent it from being overwritten\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0]\u00a0 })# Ensure that the Ray job has been created.print(job_id)\n```\n\u5176\u4e2d\uff1a- \uff1a\u60a8\u7232 Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u6307\u5b9a\u7684\u5340\u57df\u3002\n- \uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\u3002\n- \uff1aVertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u7684\u540d\u7a31\uff0c\u5728\u5275\u5efa\u96c6\u7fa3\u6642\u6307\u5b9a\u3002\n\u8acb\u6ce8\u610f\uff0c\u60a8\u53ea\u80fd\u5728\u5c0d\u7b49\u4e92\u9023 VPC \u7db2\u7d61\u4e2d\u4f7f\u7528 Ray Jobs CLI \u547d\u4ee4\u3002\n```\n$ ray job submit --working-dir ./ --address vertex_ray://{CLUSTER_RESOURCE_NAME} -- python my_script.py\n```\n\u60a8\u53ef\u4ee5\u5f9e VPC \u5916\u90e8\uff08\u5305\u62ec\u516c\u5171\u4e92\u806f\u7db2\uff09\u8a2a\u554f Ray \u4fe1\u606f\u4e2d\u5fc3\u5730\u5740\u3002\u8acb\u6ce8\u610f\uff0c `vertex_ray` \u662f\u81ea\u52d5\u7372\u53d6\u8eab\u4efd\u9a57\u8b49\u6240\u5fc5\u9700\u7684\u3002\n```\nfrom ray.job_submission import JobSubmissionClientimport vertex_rayDASHBOARD_ADDRESS=DASHBOARD_ADDRESSclient = JobSubmissionClient(\u00a0 \"vertex_ray://{}\".format(DASHBOARD_ADDRESS),)job_id = client.submit_job(\u00a0 # Entrypoint shell command to execute\u00a0 entrypoint=\"python my_script.py\",\u00a0 # Path to the local directory that contains the my_script.py file\u00a0 runtime_env={\u00a0 \u00a0 \"working_dir\": \"./directory-containing-my-script\",\u00a0 \u00a0 \"pip\": [\"numpy\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"xgboost==1.7.6\", # specific versions can be pinned or bounded\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"ray==2.4.0\", # pin the Ray version to prevent it from being overwritten\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0]\u00a0 })print(job_id)\n```\n\u5176\u4e2d\uff1a\n \uff1a\u96c6\u7fa3\u7684 Ray \u4fe1\u606f\u4e2d\u5fc3\u5730\u5740\u3002\u60a8\u53ef\u4ee5 [\u4f7f\u7528 Python \u7248 Vertex AI SDK](#sdk) \u627e\u5230\u4fe1\u606f\u4e2d\u5fc3\u5730\u5740\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- [\u5c07 Ray on Vertex AI \u8207 BigQuery \u642d\u914d\u4f7f\u7528](https://cloud.google.com/vertex-ai/docs/open-source/ray-on-vertex-ai/bigquery-integration?hl=zh-cn) \n- [\u5728 Vertex AI \u4e0a\u90e8\u7f72\u6a21\u578b\u4e26\u7372\u53d6\u9810\u6e2c\u7d50\u679c](https://cloud.google.com/vertex-ai/docs/open-source/ray-on-vertex-ai/deploy-predict?hl=zh-cn) \n- [\u67e5\u770b Vertex AI \u4e0a\u7684 Ray \u96c6\u7fa3\u7684\u65e5\u8a8c](https://cloud.google.com/vertex-ai/docs/open-source/ray-on-vertex-ai/view-logs?hl=zh-cn) \n- [\u522a\u9664 Ray \u96c6\u7fa3](https://cloud.google.com/vertex-ai/docs/open-source/ray-on-vertex-ai/delete-cluster?hl=zh-cn)", "guide": "Vertex AI"}