{"title": "Vertex AI - Train and use your own models", "url": "https://cloud.google.com/vertex-ai/docs/training-overview", "abstract": "# Vertex AI - Train and use your own models\n- **AutoML** : Create and train models with minimal technical knowledge and effort. To learn more about AutoML, see [AutoML beginner's guide](/vertex-ai/docs/beginner/beginners-guide) .\n- **Custom training** : Create and train models at scale using any ML framework. To learn more about custom training on Vertex AI, see [Custom training overview](/vertex-ai/docs/training/overview) .\nFor help on deciding which of these methods to use, see [Choose a training method](/vertex-ai/docs/start/training-methods) .\n", "content": "## AutoML\nMachine learning (ML) models use training data to learn how to infer results for data that the model was not trained on. AutoML on Vertex AI lets you build a code-free model based on the training data that you provide.\n### Types of models you can build using AutoML\nThe types of models you can build depend on the type of data that you have. Vertex AI offers AutoML solutions for the following data types and model objectives:\n| Data type | Supported objectives         |\n|:-------------|:-------------------------------------------------------|\n| Image data | Classification, object detection.      |\n| Video data | Action recognition, classification, object tracking. |\n| Text data | Classification, entity extraction, sentiment analysis. |\n| Tabular data | Classification/regression, forecasting.    |\n**Note:** If you need help with setting up your machine learning problem from a Google data scientist, contact your Google Account manager.\nThe workflow for training and using an AutoML model is the same, regardless of your datatype or objective:\n- Prepare your training data.\n- Create a dataset.\n- Train a model.\n- Evaluate and iterate on your model.\n- Get predictions from your model.\n- Interpret prediction results.\n### Image data\nAutoML uses machine learning to analyze the content of image data. You can use AutoML to train an ML model to classify image data or find objects in image data.\nVertex AI lets you get online predictions and batch predictions from your image-based models. Online predictions are synchronous requests made to a model endpoint. Use online predictions when you are making requests in response to application input or in situations that require timely inferences. Batch predictions are asynchronous requests. You request batch predictions directly from the model resource without needing to deploy the model to an endpoint. For image data, use batch predictions when you don't require an immediate response and want to process accumulated data by using a single request.\nA **classification** model analyzes image data and returns a list of content categories that apply to the image. For example, you can train a model that classifies images as containing a cat or not containing a cat, or you could train a model to classify images of dogs by breed.\nDocumentation: [Prepare data](/vertex-ai/docs/image-data/classification/prepare-data) | [Create dataset](/vertex-ai/docs/image-data/classification/create-dataset) | [Train model](/vertex-ai/docs/image-data/classification/train-model) | [Evaluate model](/vertex-ai/docs/image-data/classification/evaluate-model) | [Get predictions](/vertex-ai/docs/image-data/classification/get-predictions) | [Interpret results](/vertex-ai/docs/image-data/classification/interpret-results)\nTo see an example of how to train an image classification model and get batch predictions as part of a more comprehensive workflow,  run the \"AutoML training image classification model for batch prediction\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl_image_classification_batch_prediction.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fautoml_image_classification_batch_prediction.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl_image_classification_batch_prediction.ipynb)\nAn **object detection** model analyzes your image data and returns annotations for all objects found in an image, consisting of a label and bounding box location for each object. For example, you can train a model to find the location of the cats in image data.\nDocumentation: [Prepare data](/vertex-ai/docs/image-data/object-detection/prepare-data) | [Create dataset](/vertex-ai/docs/image-data/object-detection/create-dataset) | [Train model](/vertex-ai/docs/image-data/object-detection/train-model) | [Evaluate model](/vertex-ai/docs/image-data/object-detection/evaluate-model) | [Get predictions](/vertex-ai/docs/image-data/object-detection/get-predictions) | [Interpret results](/vertex-ai/docs/image-data/object-detection/interpret-results)\nTo see an example of how to train an object detection model and get online predictions as part of a more comprehensive workflow,  run the \"AutoML training image object detection model for online prediction\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl_image_object_detection_online_prediction.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fautoml_image_object_detection_online_prediction.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl_image_object_detection_online_prediction.ipynb)\nTo see an example of how to train an object detection model and get batch predictions as part of a more comprehensive workflow,  run the \"AutoML training image object detection model for batch prediction\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_image_object_detection_batch.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fsdk_automl_image_object_detection_batch.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_image_object_detection_batch.ipynb)\n### Tabular data\nVertex AI lets you perform machine learning with tabular data using simple processes and interfaces. You can create the following model types for your tabular data problems:\n- **Binary classification** models predict a binary outcome (one of two classes). Use this model type for yes or no questions. For example, you might want to build a binary classification model to predict whether a customer would buy a subscription. Generally, a binary classification problem requires less data than other model types.\n- **Multi-class classification** models predict one class from three or more discrete classes. Use this model type for categorization. For example, as a retailer, you might want to build a multi-class classification model to segment customers into different personas.\n- **Regression** models predict a continuous value. For example, as a retailer, you might want to build a regression model to predict how much a customer will spend next month.\n- **Forecasting** models predict a sequence of values. For example, as a retailer, you might want to forecast daily demand of your products for the next 3 months so that you can appropriately stock product inventories in advance.\nTo learn more, see [Tabular data overview](/vertex-ai/docs/tabular-data/overview) .\nIf your tabular data is stored in BigQuery ML, you can train an AutoML tabular model directly in BigQuery ML. To learn more, see [AutoML Tabular reference documentation.](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-create)\n### Text data\nAutoML uses machine learning to analyze the structure and meaning of text data. You can use AutoML to train an ML model to classify text data, extract information, or understand the sentiment of the authors.\nVertex AI lets you get online predictions and batch predictions from your text-based models. Online predictions are synchronous requests made to a model endpoint. Use online predictions when you are making requests in response to application input or in situations that require timely inferences. Batch predictions are asynchronous requests. You request batch predictions directly from the model resource without needing to deploy the model to an endpoint. For text data, use batch predictions when you don't require an immediate response and want to process accumulated data by using a single request.\nA **classification** model analyzes text data and returns a list of categories that apply to the text found in the data. Vertex AI offers both single-label and multi-label text classification models.\nDocumentation: [Prepare data](/vertex-ai/docs/text-data/classification/prepare-data) | [Create dataset](/vertex-ai/docs/text-data/classification/create-dataset) | [Train model](/vertex-ai/docs/text-data/classification/train-model) | [Evaluate model](/vertex-ai/docs/text-data/classification/evaluate-model) | [Get predictions](/vertex-ai/docs/text-data/classification/get-predictions) | [Interpret results](/vertex-ai/docs/text-data/classification/interpret-results)\nTo see an example of how to create, train, and deploy a text classification model as part of a more comprehensive workflow,  run the \"Create, train, and deploy an AutoML text classification model\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl-text-classification.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fautoml-text-classification.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl-text-classification.ipynb)\nAn **entity extraction** model inspects text data for known entities referenced in the data and labels those entities in the text.\nDocumentation: [Prepare data](/vertex-ai/docs/text-data/entity-extraction/prepare-data) | [Create dataset](/vertex-ai/docs/text-data/entity-extraction/create-dataset) | [Train model](/vertex-ai/docs/text-data/entity-extraction/train-model) | [Evaluate model](/vertex-ai/docs/text-data/entity-extraction/evaluate-model) | [Get predictions](/vertex-ai/docs/text-data/entity-extraction/get-predictions) | [Interpret results](/vertex-ai/docs/text-data/entity-extraction/interpret-results)\nTo see an example of how to train an entity extraction model and get online predictions as part of a more comprehensive workflow,  run the \"AutoML training text entity extraction model for online prediction\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_text_entity_extraction_online.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fsdk_automl_text_entity_extraction_online.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_text_entity_extraction_online.ipynb)\nTo see an example of how to train an entity extraction model and get batch predictions as part of a more comprehensive workflow,  run the \"AutoML training text entity extraction model for batch prediction\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl_text_entity_extraction_batch_prediction.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fautoml_text_entity_extraction_batch_prediction.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl_text_entity_extraction_batch_prediction.ipynb)\nA **sentiment analysis** model inspects text data and identifies the prevailing emotional state within it, especially to determine a writer's attitude as positive, negative, or neutral.\nDocumentation: [Prepare data](/vertex-ai/docs/text-data/sentiment-analysis/prepare-data) | [Create dataset](/vertex-ai/docs/text-data/sentiment-analysis/create-dataset) | [Train model](/vertex-ai/docs/text-data/sentiment-analysis/train-model) | [Evaluate model](/vertex-ai/docs/text-data/sentiment-analysis/evaluate-model) | [Get predictions](/vertex-ai/docs/text-data/sentiment-analysis/get-predictions) | [Interpret results](/vertex-ai/docs/text-data/sentiment-analysis/interpret-results)\nTo see an example of how to train a sentiment analysis model and get online predictions as part of a more comprehensive workflow,  run the \"Training an AutoML text sentiment analysis model for online predictions\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_text_sentiment_analysis_online.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fsdk_automl_text_sentiment_analysis_online.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_text_sentiment_analysis_online.ipynb)\nTo see an example of how to train a sentiment analysis model and get batch predictions as part of a more comprehensive workflow,  run the \"AutoML training text sentiment analysis model for batch prediction\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl_text_sentiment_analysis_batch_prediction.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fautoml_text_sentiment_analysis_batch_prediction.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl_text_sentiment_analysis_batch_prediction.ipynb)\n### Video data\nAutoML uses machine learning to analyze video data to classify shots and segments, or to detect and track multiple objects in your video data.\nAn **action recognition** model analyzes your video data and returns a list of categorized actions with the moments that the actions happened. For example, you can train a model that analyzes video data to identify the action moments involving a soccer goal, a golf swing, a touchdown, or a high five.\nDocumentation: [Prepare data](/vertex-ai/docs/video-data/action-recognition/prepare-data) | [Create dataset](/vertex-ai/docs/video-data/action-recognition/create-dataset) | [Train model](/vertex-ai/docs/video-data/action-recognition/train-model) | [Evaluate model](/vertex-ai/docs/video-data/action-recognition/evaluate-model) | [Get predictions](/vertex-ai/docs/video-data/action-recognition/get-predictions) | [Interpret results](/vertex-ai/docs/video-data/action-recognition/interpret-results)\nTo see an example of how to train an action recognition model as part of a more comprehensive workflow,  run the \"AutoML training video action recognition model for batch prediction\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_video_action_recognition_batch.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fsdk_automl_video_action_recognition_batch.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_video_action_recognition_batch.ipynb)\nA **classification** model analyzes your video data and returns a list of categorized shots and segments. For example, you could train a model that analyzes video data to identify if the video is of a baseball, soccer, basketball, or football game.\nDocumentation: [Prepare data](/vertex-ai/docs/video-data/classification/prepare-data) | [Create dataset](/vertex-ai/docs/video-data/classification/create-dataset) | [Train model](/vertex-ai/docs/video-data/classification/train-model) | [Evaluate model](/vertex-ai/docs/video-data/classification/evaluate-model) | [Get predictions](/vertex-ai/docs/video-data/classification/get-predictions) | [Interpret results](/vertex-ai/docs/video-data/classification/interpret-results)\nTo see an example of how to train a video classification model as part of a more comprehensive workflow,  run the \"AutoML training video classification model for batch prediction\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_video_classification_batch.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fsdk_automl_video_classification_batch.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_video_classification_batch.ipynb)\nAn **object tracking** model analyzes your video data and returns a list of shots and segments where these objects were detected. For example, you could train a model that analyzes video data from soccer games to identify and track the ball.\nDocumentation: [Prepare data](/vertex-ai/docs/video-data/object-tracking/prepare-data) | [Create dataset](/vertex-ai/docs/video-data/object-tracking/create-dataset) | [Train model](/vertex-ai/docs/video-data/object-tracking/train-model) | [Evaluate model](/vertex-ai/docs/video-data/object-tracking/evaluate-model) | [Get predictions](/vertex-ai/docs/video-data/object-tracking/get-predictions) | [Interpret results](/vertex-ai/docs/video-data/object-tracking/interpret-results)\nTo see an example of how to train an object tracking model as part of a more comprehensive workflow,  run the \"AutoML training video object tracking model for batch prediction\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_video_object_tracking_batch.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fsdk_automl_video_object_tracking_batch.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/sdk_automl_video_object_tracking_batch.ipynb)\n## Custom training\nIf none of the AutoML solutions address your needs, you can also create your own training application and use it to train custom models on Vertex AI. You can use any ML framework that you want and configure the compute resources to use for training, including the following:\n- Type and number of VMs.\n- Graphics processing units (GPUs).\n- Tensor processing units (TPUs).\n- Type and size of boot disk.\nTo learn more about custom training on Vertex AI, see [Custom training overview](/vertex-ai/docs/training/overview) .", "guide": "Vertex AI"}