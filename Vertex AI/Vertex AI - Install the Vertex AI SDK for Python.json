{"title": "Vertex AI - Install the Vertex AI SDK for Python", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Install the Vertex AI SDK for Python\nUse the Vertex AI SDK for Python to automate your machine learning (ML) workflows. This topic shows you how to install the Vertex AI SDK for Python. For more information about the Vertex AI SDK, see the following resources:\n- To learn about the Vertex AI SDK for Python, see [Introduction to the Vertex AI SDK for Python](/vertex-ai/docs/python-sdk/use-vertex-ai-python-sdk) .\n- To learn how to train a model using the Vertex AI SDK for Python, see the [Traina model using Vertex AI and the PythonSDK](/vertex-ai/docs/tutorials/tabular-bq-prediction) .\n- To learn about the classes and methods in the Vertex AI SDK for Python, see the [vertex_ai_sdk_for_python_ref_name](/python/docs/reference/aiplatform/latest/google.cloud.aiplatform) .\nInstallation of the Vertex AI SDK for Python includes the following steps:\n- [Create an isolated Python environment](#create-isolated-environment) \n- [Install the Vertex AI SDK package](#install-python-sdk) \n- [Initialize the Vertex AI SDK](#initialize-python-sdk) ", "content": "## Create an isolated Python environment\nA Python best practice is to install the Vertex AI SDK in an isolated Python environment for each project. This helps prevent dependency, version, and permissions conflicts. You can create an isolated environment for using the command line in a shell or for using a notebook.\nTo create an isolated environment when you use the command line, [activate avenv environment](/python/docs/setup#installing_and_using_virtualenv) . After the `venv` environment is activated, you're ready to install the Vertex AI SDK and run your Python scripts. For more information, see [Use venv to isolate dependencies](/python/docs/setup#installing_and_using_virtualenv) and [Set up a Python development environment](/python/docs/setup) .\nTo use a notebook for your isolated environment, create a notebook instance. After you create your notebook instance, use it to install the Vertex AI SDK and run your Python scripts. For more information, see [Create a user-managed notebooks instance](/vertex-ai/docs/workbench/user-managed/create-new) .\n## Install or update the Vertex AI SDK package\nTo install or update the Vertex AI SDK, run the following command in your virtual environment:\n```\npip install --upgrade google-cloud-aiplatform\n```\n## Initialize the Vertex AI SDK\nAfter you install the Vertex AI SDK for Python, you must initialize the SDK with your Vertex AI and Google Cloud details. For example, when you initialize the SDK, you specify information such as your project name, region, and your staging Cloud Storage bucket. The following method is an example of a method that initializes the Vertex AI SDK.\n```\ndef init_sample(\u00a0 \u00a0 project: Optional[str] = None,\u00a0 \u00a0 location: Optional[str] = None,\u00a0 \u00a0 experiment: Optional[str] = None,\u00a0 \u00a0 staging_bucket: Optional[str] = None,\u00a0 \u00a0 credentials: Optional[auth_credentials.Credentials] = None,\u00a0 \u00a0 encryption_spec_key_name: Optional[str] = None,\u00a0 \u00a0 service_account: Optional[str] = None,):\u00a0 \u00a0 from google.cloud import aiplatform\u00a0 \u00a0 aiplatform.init(\u00a0 \u00a0 \u00a0 \u00a0 project=project,\u00a0 \u00a0 \u00a0 \u00a0 location=location,\u00a0 \u00a0 \u00a0 \u00a0 experiment=experiment,\u00a0 \u00a0 \u00a0 \u00a0 staging_bucket=staging_bucket,\u00a0 \u00a0 \u00a0 \u00a0 credentials=credentials,\u00a0 \u00a0 \u00a0 \u00a0 encryption_spec_key_name=encryption_spec_key_name,\u00a0 \u00a0 \u00a0 \u00a0 service_account=service_account,\u00a0 \u00a0 )\n```\n## What's next\n- Learn more about the [Vertex AI SDK](/vertex-ai/docs/python-sdk/use-vertex-ai-python-sdk) .", "guide": "Vertex AI"}