{"title": "Vertex AI - \u5c07\u81ea\u5b9a\u7fa9\u9810\u6e2c\u4f8b\u7a0b\u9077\u79fb\u5230 Vertex AI", "url": "https://cloud.google.com/vertex-ai/docs/predictions/migrate-cpr?hl=zh-cn", "abstract": "# Vertex AI - \u5c07\u81ea\u5b9a\u7fa9\u9810\u6e2c\u4f8b\u7a0b\u9077\u79fb\u5230 Vertex AI\n\u672c\u9801\u9762\u4ecb\u7d39\u5982\u4f55\u5c07 [\u81ea\u5b9a\u7fa9\u9810\u6e2c\u4f8b\u7a0b (CPR)](https://cloud.google.com/ai-platform/prediction/docs/custom-prediction-routines?hl=zh-cn) \u90e8\u7f72\u5f9e AI Platform \u9077\u79fb\u5230 Vertex AI\u3002\n\u5177\u9ad4\u800c\u8a00\uff0c\u5c0d\u65bc AI Platform \u4e0a\u7684 CPR \u90e8\u7f72\uff0c\u672c\u9801\u9762\u4ecb\u7d39\u5982\u4f55\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u5275\u5efa\u76f8\u61c9\u7684 [\u81ea\u5b9a\u7fa9\u5bb9\u5668](https://cloud.google.com/vertex-ai/docs/predictions/use-custom-container?hl=zh-cn) \u4ee5\u5728 Vertex AI \u4e0a\u9032\u884c\u90e8\u7f72\u3002\u6b64\u81ea\u5b9a\u7fa9\u5bb9\u5668\u7684\u5de5\u4f5c\u65b9\u5f0f\u8207\u4f7f\u7528 [CPR on Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-prediction-routines?hl=zh-cn) \u5275\u5efa\u7684\u4efb\u4f55\u81ea\u5b9a\u7fa9\u5bb9\u5668\u76f8\u540c\u3002\n- \u5728\u672c\u5730\u904b\u884c\u548c\u6e2c\u8a66\u81ea\u5b9a\u7fa9\u5bb9\u5668\u3002\n- \u5c07\u5176\u4e0a\u50b3\u5230 [Vertex AI Model Registry](https://cloud.google.com/vertex-ai/docs/model-registry/introduction?hl=zh-cn) \u3002\n- \u5c07\u6a21\u578b\u90e8\u7f72\u5230 Vertex AI Endpoint \u4ee5\u57f7\u884c\u5728\u7dda\u9810\u6e2c\u3002", "content": "## \u6e96\u5099\u5de5\u4f5c\n- \u78ba\u4fdd\u5df2\u5b89\u88dd\u4ee5\u4e0b\u8edf\u4ef6\uff1a- [Docker](https://www.docker.com/) \n- [Cloud SDK (gcloud)](https://cloud.google.com/sdk/docs/install?hl=zh-cn) \n- [Python 3](https://www.python.org) \n- \u64c1\u6709\u8981\u9077\u79fb\u5230 Vertex AI \u7684 CPR on AI Platform \u90e8\u7f72\u4e2d\u7684\u6a21\u578b\u5de5\u4ef6\u548c\u81ea\u5b9a\u7fa9\u4ee3\u78bc\u3002\n- \u64c1\u6709\u7528\u65bc\u5b58\u5132\u6a21\u578b\u5de5\u4ef6\u7684 Cloud Storage \u5b58\u5132\u6876\u3002\n- \u78ba\u4fdd\u5df2\u5728\u9805\u76ee\u4e2d\u5553\u7528\u4e86 Vertex AI API\u3002 [\u5553\u7528 Vertex AI API](https://console.cloud.google.com/flows/enableapi?apiid=aiplatform.googleapis.com&hl=zh-cn) ## \u6e96\u5099 Vertex AI \u90e8\u7f72\u7684\u6e90\u6587\u4ef6\u593e\n- \u5275\u5efa\u4e00\u500b\u540d\u7232 `model_artifacts` \u7684\u672c\u5730\u6587\u4ef6\u593e\uff0c\u4e26\u8907\u88fd CPR on AI Platform \u90e8\u7f72\u4e2d\u7684\u6a21\u578b\u5de5\u4ef6\u3002\u9019\u4e9b\u6a21\u578b\u5de5\u4ef6\u61c9\u8a72\u8207\u60a8 [\u90e8\u7f72 CPR on AI Platform \u6a21\u578b](https://cloud.google.com/ai-platform/prediction/docs/custom-prediction-routines?hl=zh-cn#deploy_your_custom_prediction_routine) \u6642\u5728 `deployment_uri` \uff08\u5982\u679c\u60a8\u4f7f\u7528 gcloud\uff0c\u5247\u7232 `--origin` \uff09\u4e2d\u6307\u5b9a\u7684\u6a21\u578b\u5de5\u4ef6\u76f8\u540c\u3002\n- \u5275\u5efa\u4e00\u500b\u540d\u7232 `cpr_src_dir` \u7684\u672c\u5730\u6587\u4ef6\u593e\u3002\u6b64\u6587\u4ef6\u593e\u5c07\u4fdd\u5b58\u6e90\u5206\u767c\u8edf\u4ef6\u5305 `adapter.py` \u548c `requirements.txt` \uff08\u5982\u4e0b\u6240\u8ff0\uff09\uff0c\u7528\u65bc\u69cb\u5efa\u81ea\u5b9a\u7fa9\u5bb9\u5668\u4ee5\u5728 Vertex AI \u4e0a\u9032\u884c\u90e8\u7f72\u3002\n- \u8907\u88fd\u60a8\u5728 AI Platform \u4e0a\u90e8\u7f72 CPR \u6642\u5728 [package_uris](https://cloud.google.com/ai-platform/prediction/docs/custom-prediction-routines?hl=zh-cn#deploy_your_custom_prediction_routine) \u4e2d\u63d0\u4f9b\u7684\u6240\u6709\u8edf\u4ef6\u5305\uff0c\u5305\u62ec\u5305\u542b `Predictor` \u985e\u7684\u8edf\u4ef6\u5305\u3002\n- \u5275\u5efa\u4e00\u500b\u5305\u542b `AdapterPredictor` \u7684 `adapter.py` \u6587\u4ef6\uff08\u5982\u4e0b\u6240\u793a\uff09\uff0c\u4e26\u5c07 `PREDICTION_CLASS` \u8a2d\u7f6e\u7232 `Predictor` \u7684\u5b8c\u5168\u9650\u5b9a\u540d\u7a31\u3002\u6b64\u503c\u8207\u5728 AI Platform \u4e0a\u90e8\u7f72 CPR \u6642\u7684 `prediction_class` \u76f8\u540c\u3002\u9069\u914d\u5668\u5c01\u88dd\u4e86 CPR on AI Platform `Predictor` \u63a5\u53e3\uff0c\u4ee5\u4fbf\u8207 CPR on Vertex AI \u63a5\u53e3\u517c\u5bb9\u3002```\nimport pydoc\u200bfrom google.cloud.aiplatform.utils import prediction_utilsfrom google.cloud.aiplatform.prediction.predictor import Predictor\u200b# Fully qualified name of your CPR on CAIP Predictor class.PREDICTION_CLASS = \"predictor.MyPredictor\"\u200bclass AdapterPredictor(Predictor):\u00a0 \"\"\"Predictor implementation for adapting CPR on CAIP predictors.\"\"\"\u200b\u00a0 def __init__(self):\u00a0 \u00a0 \u00a0 return\u200b\u00a0 def load(self, artifacts_uri: str):\u00a0 \u00a0 \u00a0 \"\"\"Loads the model artifact.\u200b\u00a0 \u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 artifacts_uri (str):\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Required. The model artifacts path (may be local or on Cloud Storage).\u00a0 \u00a0 \u00a0 \"\"\"\u00a0 \u00a0 \u00a0 prediction_utils.download_model_artifacts(artifacts_uri)\u00a0 \u00a0 \u00a0 custom_class = pydoc.locate(PREDICTION_CLASS)\u00a0 \u00a0 \u00a0 self._predictor = custom_class.from_path(\".\")\u200b\u200b\u00a0 def predict(self, instances):\u00a0 \u00a0 \u00a0 \"\"\"Performs prediction.\u200b\u00a0 \u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 instances (Any):\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Required. The instance(s) used for performing prediction.\u200b\u00a0 \u00a0 \u00a0 Returns:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Prediction results.\u00a0 \u00a0 \u00a0 \"\"\"\u00a0 \u00a0 \u00a0 return self._predictor.predict(**instances)\n```\n- \u5275\u5efa\u4e00\u500b\u5305\u542b\u6a21\u578b\u4f9d\u8cf4\u9805\u7684 `requirements.txt` \u6587\u4ef6\uff0c\u4f8b\u5982\uff1a```\n# Required for model servinggoogle-cloud-storage>=1.26.0,<2.0.0devgoogle-cloud-aiplatform[prediction]>=1.16.0# ML dependenciesnumpy>=1.16.0scikit-learn==0.20.2\n```\u7b2c\u4e00\u90e8\u5206\u5217\u51fa\u4e86\u6a21\u578b\u670d\u52d9\u6240\u9700\u7684\u4f9d\u8cf4\u9805\u3002\u7b2c\u4e8c\u90e8\u5206\u5217\u51fa\u4e86\u6a21\u578b\u670d\u52d9\u6240\u9700\u7684\u6a5f\u5668\u5b78\u7fd2\u8edf\u4ef6\u5305\uff08\u5982 scikit-learn\u3001xgboost\u3001tensorflow \u7b49\uff09\u3002\u78ba\u4fdd\u5b89\u88dd\u7684\u5eab\u7248\u672c\u8207\u4e4b\u524d\u90e8\u7f72\u6a21\u578b\u7248\u672c\u6642\u9078\u64c7\u7684\u904b\u884c\u6642\u7248\u672c\u4e0b [\u5217\u51fa](https://cloud.google.com/ai-platform/prediction/docs/runtime-version-list?hl=zh-cn#supported_runtime_versions) \u7684\u7248\u672c\u76f8\u540c\u3002\n- \u5728\u672c\u5730\u74b0\u5883\u4e2d\u5b89\u88dd\u4f9d\u8cf4\u9805```\npip install -U --user -r cpr_src_dir/requirements.txt \n```## \u5c07\u6a21\u578b\u5de5\u4ef6\u4e0a\u50b3\u5230 Cloud Storage\n\u5c07\u6a21\u578b\u5de5\u4ef6\u4e0a\u50b3\u5230 Cloud Storage\uff1a\n```\ngsutil cp model_artifacts/* gs://BUCKET_NAME/MODEL_ARTIFACT_DIR\n```\n## \u8a2d\u7f6e Artifact Registry\n[Artifact Registry](https://cloud.google.com/artifact-registry/docs?hl=zh-cn) \u7528\u65bc\u5b58\u5132\u548c\u7ba1\u7406 Docker \u5bb9\u5668\u6620\u50cf\u3002\n- \u78ba\u4fdd\u5df2\u5728\u9805\u76ee\u4e2d\u5553\u7528 Artifacts Registry API\u3002 [\u5553\u7528 Artifacts Registry API](https://console.cloud.google.com/flows/enableapi?apiid=artifactregistry.googleapis.com&hl=zh-cn) \n- \u5982\u679c\u60a8\u9084\u6c92\u6709\u4ee3\u78bc\u5eab\uff0c\u8acb\u5275\u5efa\u4e00\u500b\u3002```\ngcloud artifacts repositories create {REPOSITORY} \\\u00a0 \u00a0 --repository-format=docker \\\u00a0 \u00a0 --location={REGION}\n```\n- \u5982\u9700\u63a8\u9001\u6216\u62c9\u53d6\u6620\u50cf\uff0c\u8acb\u5c07 Docker \u914d\u7f6e\u7232\u4f7f\u7528 Google Cloud CLI \u5c0d\u5411 Artifact Registry \u767c\u51fa\u7684\u8acb\u6c42\u9032\u884c\u8eab\u4efd\u9a57\u8b49\u3002```\ngcloud auth configure-docker {REGION}-docker.pkg.dev\n```## \u69cb\u5efa\u3001\u6e2c\u8a66\u548c\u90e8\u7f72\u81ea\u5b9a\u7fa9\u5bb9\u5668\n\u4ee5\u4e0b Python \u8173\u672c\u6f14\u793a\u77ad\u5982\u4f55\u4f7f\u7528 [Vertex AI SDK](https://github.com/googleapis/python-aiplatform) \u4e2d\u7684 API \u69cb\u5efa\u3001\u6e2c\u8a66\u548c\u90e8\u7f72\u81ea\u5b9a\u7fa9\u5bb9\u5668\u3002\u78ba\u4fdd\u8a2d\u7f6e\u8173\u672c\u9802\u90e8\u7684\u8b8a\u91cf\u3002\n```\nimport jsonimport loggingimport osfrom google.cloud import aiplatformfrom google.cloud.aiplatform.prediction import LocalModelfrom cpr_src_dir.adapter import AdapterPredictor\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n### CONFIGURE THE FOLLOWING\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n### We recommend that you choose the region closest to you.REGION = \u2026# Your project ID.PROJECT_ID = \u2026# Name of the Artifact Repository to create or use.REPOSITORY = \u2026# Name of the container image that will be pushed.IMAGE = \u2026# Cloud Storage bucket where your model artifacts will be stored.BUKCET_NAME = \u2026# Directory within the bucket where your model artifacts are stored.MODEL_ARTIFACT_DIR = \u2026# Your model's input instances.INSTANCES = \u2026\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n### Build the CPR custom container\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##local_model = LocalModel.build_cpr_model(\u00a0 \u00a0 \"cpr_src_dir\",\u00a0 \u00a0 f\"{REGION}-docker.pkg.dev/{PROJECT_ID}/{REPOSITORY}/{IMAGE}\",\u00a0 \u00a0 predictor=AdapterPredictor,\u00a0 \u00a0 requirements_path=\"cpr_src_dir/requirements.txt\",\u00a0 \u00a0 extra_packages=[\"cpr_src_dir/my_custom_code-0.1.tar.gz\"],)\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n### Run and test the custom container locally\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##logging.basicConfig(level=logging.INFO)local_endpoint =\u00a0 \u00a0 \u00a0 \u00a0local_model.deploy_to_local_endpoint(artifact_uri=\"model_artifacts\")local_endpoint.serve()health_check_response = local_endpoint.run_health_check()predict_response = local_endpoint.predict(\u00a0 \u00a0 \u00a0 \u00a0 request=json.dumps({\"instances\": INSTANCES}),\u00a0 \u00a0 \u00a0 \u00a0 headers={\"Content-Type\": \"application/json\"},\u00a0 \u00a0 )local_endpoint.stop()print(predict_response, predict_response.content)print(health_check_response, health_check_response.content)local_endpoint.print_container_logs(show_all=True)\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n### Upload and deploy to Vertex\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##local_model.push_image()model = aiplatform.Model.upload(\\\u00a0 \u00a0 local_model=local_model,\u00a0 \u00a0 display_name=MODEL_DISPLAY_NAME,\u00a0 \u00a0 artifact_uri=f\"gs://{BUKCET_NAME}/{MODEL_ARTIFACT_DIR}\",)endpoint = model.deploy(machine_type=\"n1-standard-4\")endpoint.predict(instances=INSTANCES)\n```\n\u8a73\u7d30\u77ad\u89e3 [Vertex AI Prediction](https://cloud.google.com/vertex-ai/docs/predictions/getting-predictions?hl=zh-cn) \u3002", "guide": "Vertex AI"}