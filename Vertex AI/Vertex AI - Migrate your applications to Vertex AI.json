{"title": "Vertex AI - Migrate your applications to Vertex AI", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Migrate your applications to Vertex AI\nVertex AI brings together AI Platform and AutoML services under one unified UI and API to simplify the process of building, training, and deploying machine learning models. With Vertex AI, you can move from experimentation to production faster, efficiently discover patterns and anomalies, make better predictions and decisions, and stay agile in the face of changing priorities and market conditions. This page helps determine the changes you need to make when you migrate your applications from AutoML or AI Platform to Vertex AI.\nVertex AI supports all features and models available in AutoML and AI Platform. However, the client libraries do not support client integration backward compatibility. In other words, you must plan to migrate your resources to benefit from Vertex AI features.\nThis page compares the API methods used to complete common user journeys so that you can see how your project's applications could be updated to use the Vertex AI API.\n", "content": "## Common user journeys\nSelect the tab for your product, and then click a user journey to see how the Vertex AI API methods compare with the API methods used by your existing applications.\nClick one of the following user journeys:- [AutoML Natural Language: Train and deploy a text classificationmodel](#automl-nl-text-classification) \n- [AutoML Natural Language: Train and deploy a text entity extractionmodel](#automl-nl-text-extraction) \n- [AutoML Natural Language: Train and deploy a text sentimentmodel](#automl-nl-text-sentiment) ### AutoML Natural Language: Train and deploy a text classification modelTo see an example of how to use Vertex AI to train and deploy a text classification model,  run the \"Vertex AI Migration: AutoML Text Classification\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-text-classification-batch-prediction.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-automl-text-classification-batch-prediction.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-text-classification-batch-prediction.ipynb) \nRead about the [differences between the AutoML API and the Vertex AI API](/vertex-ai/docs/start/automl-users#api_users) , read about [differences between the AutoML Natural Language and Vertex AI products](/vertex-ai/docs/start/automl-users#text) , and then use the following table to help migrate your API.| Step     | AutoML Natural Language       | Vertex AI          |\n|:------------------------|:------------------------------------------------|:----------------------------------------------|\n| Create a dataset  | projects.locations.datasets.create    | projects.locations.datasets.create   |\n| Create a dataset  | projects.locations.datasets.importData   | projects.locations.datasets.import   |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.create |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.get  |\n| Evaluate the model  | projects.locations.models.modelEvaluations.list | projects.locations.models.evaluations.list |\n| Evaluate the model  | projects.locations.models.modelEvaluations.get | projects.locations.models.evaluations.get  |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.get |\n| Make online predictions | projects.locations.models.deploy    | projects.locations.endpoints.create   |\n| Make online predictions | projects.locations.models.deploy    | projects.locations.endpoints.deployModel  |\n| Make online predictions | projects.locations.models.predict    | projects.locations.endpoints.predict   |\n [Back to top](#nl) \n### AutoML Natural Language: Train and deploy a text entity extraction modelTo see an example of how to use Vertex AI to train and deploy a text entity extraction model,  run the \"Vertex AI Migration: AutoML Text Entity Extraction\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-text-entity-extraction-batch-prediction.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-automl-text-entity-extraction-batch-prediction.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-text-entity-extraction-batch-prediction.ipynb) \nRead about the [differences between the AutoML API and the Vertex AI API](/vertex-ai/docs/start/automl-users#api_users) , read about [differences between the AutoML Natural Language and Vertex AI products](/vertex-ai/docs/start/automl-users#text) , and then use the following table to help migrate your API.| Step     | AutoML Natural Language       | Vertex AI          |\n|:------------------------|:------------------------------------------------|:----------------------------------------------|\n| Create a dataset  | projects.locations.datasets.create    | projects.locations.datasets.create   |\n| Create a dataset  | projects.locations.datasets.importData   | projects.locations.datasets.import   |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.create |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.get  |\n| Evaluate the model  | projects.locations.models.modelEvaluations.list | projects.locations.models.evaluations.list |\n| Evaluate the model  | projects.locations.models.modelEvaluations.get | projects.locations.models.evaluations.get  |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.get |\n| Make online predictions | projects.locations.models.deploy    | projects.locations.endpoints.create   |\n| Make online predictions | projects.locations.models.deploy    | projects.locations.endpoints.deployModel  |\n| Make online predictions | projects.locations.models.predict    | projects.locations.endpoints.predict   |\n [Back to top](#nl) \n### AutoML Natural Language: Train and deploy a text sentiment modelTo see an example of how to use Vertex AI to train and deploy a text sentiment model,  run the \"Vertex AI Migration: AutoML Text Sentiment Analysis\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-text-sentiment-analysis-batch-prediction.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-automl-text-sentiment-analysis-batch-prediction.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-text-sentiment-analysis-batch-prediction.ipynb) \nRead about the [differences between the AutoML API and the Vertex AI API](/vertex-ai/docs/start/automl-users#api_users) , read about [differences between the AutoML Natural Language and Vertex AI products](/vertex-ai/docs/start/automl-users#text) , and then use the following table to help migrate your API.| Step     | AutoML Natural Language       | Vertex AI          |\n|:------------------------|:------------------------------------------------|:----------------------------------------------|\n| Create a dataset  | projects.locations.datasets.create    | projects.locations.datasets.create   |\n| Create a dataset  | projects.locations.datasets.importData   | projects.locations.datasets.import   |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.create |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.get  |\n| Evaluate the model  | projects.locations.models.modelEvaluations.list | projects.locations.models.evaluations.list |\n| Evaluate the model  | projects.locations.models.modelEvaluations.get | projects.locations.models.evaluations.get  |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.get |\n| Make online predictions | projects.locations.models.deploy    | projects.locations.endpoints.create   |\n| Make online predictions | projects.locations.models.deploy    | projects.locations.endpoints.deployModel  |\n| Make online predictions | projects.locations.models.predict    | projects.locations.endpoints.predict   |\n [Back to top](#nl) \n### AutoML Tables: Train and deploy a modelTo see an example of how to use Vertex AI and tabular data to train and deploy a model,  run the \"Vertex AI Migration: AutoML Tabular Binary Classification\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-tabular-binary-classification-online-prediction.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-automl-tabular-binary-classification-online-prediction.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-tabular-binary-classification-online-prediction.ipynb) \nRead about the [differences between the AutoML API and the Vertex AI API](/vertex-ai/docs/start/automl-users#api_users) , read about [differences between the AutoML Tables and Vertex AI products](/vertex-ai/docs/start/automl-users#tables) , and then use the following table to help migrate your API.| Step     | AutoML Tables         | Vertex AI          |\n|:------------------------|:------------------------------------------------|:----------------------------------------------|\n| Create a dataset  | projects.locations.datasets.create    | projects.locations.datasets.create   |\n| Create a dataset  | projects.locations.datasets.importData   | projects.locations.datasets.create   |\n| Create a dataset  | projects.locations.datasets.patch    | projects.locations.datasets.create   |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.create |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.get  |\n| Evaluate the model  | projects.locations.models.modelEvaluations.list | projects.locations.models.evaluations.list |\n| Evaluate the model  | projects.locations.models.modelEvaluations.get | projects.locations.models.evaluations.get  |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.get |\n| Make online predictions | projects.locations.models.deploy    | projects.locations.endpoints.create   |\n| Make online predictions | projects.locations.models.deploy    | projects.locations.endpoints.deployModel  |\n| Make online predictions | projects.locations.models.predict    | projects.locations.endpoints.predict   |\n [Back to top](#automl-tables-model) \nClick one of the following user journeys:- [AutoML Video Intelligence: Train and deploy an object trackingmodel](#automl-video-object-tracking) \n- [AutoML Video Intelligence: Train and deploy a video classificationmodel](#automl-video-video-classification) ### AutoML Video Intelligence: Train and deploy an object tracking modelTo see an example of how to use Vertex AI to train and deploy an object tracking model,  run the \"Vertex AI Migration: AutoML Video Object Tracking\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-object-tracking-batch-prediction.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-automl-object-tracking-batch-prediction.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-object-tracking-batch-prediction.ipynb) \nRead about the [differences between the AutoML API and the Vertex AI API](/vertex-ai/docs/start/automl-users#api_users) , read about [differences between the AutoML Video and Vertex AI products](/vertex-ai/docs/start/automl-users#vision-video) , and then use the following table to help migrate your API.| Step     | AutoML Video         | Vertex AI          |\n|:-----------------------|:------------------------------------------------|:----------------------------------------------|\n| Create a dataset  | projects.locations.datasets.create    | projects.locations.datasets.create   |\n| Create a dataset  | projects.locations.datasets.importData   | projects.locations.datasets.import   |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.create |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.get  |\n| Evaluate the model  | projects.locations.models.modelEvaluations.list | projects.locations.models.evaluations.list |\n| Evaluate the model  | projects.locations.models.modelEvaluations.get | projects.locations.models.evaluations.get  |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.get |\n [Back to top](#video) \n### AutoML Video Intelligence: Train and deploy a video classification modelTo see an example of how to use Vertex AI to train and deploy a video classification model,  run the \"Vertex AI Migration: AutoML Video Classification\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-video-classification-batch-prediction.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-automl-video-classification-batch-prediction.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-video-classification-batch-prediction.ipynb) \nRead about the [differences between the AutoML API and the Vertex AI API](/vertex-ai/docs/start/automl-users#api_users) , read about [differences between the AutoML Video and Vertex AI products](/vertex-ai/docs/start/automl-users#vision-video) , and then use the following table to help migrate your API.| Step     | AutoML Video         | Vertex AI          |\n|:-----------------------|:------------------------------------------------|:----------------------------------------------|\n| Create a dataset  | projects.locations.datasets.create    | projects.locations.datasets.create   |\n| Create a dataset  | projects.locations.datasets.importData   | projects.locations.datasets.import   |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.create |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.get  |\n| Evaluate the model  | projects.locations.models.modelEvaluations.list | projects.locations.models.evaluations.list |\n| Evaluate the model  | projects.locations.models.modelEvaluations.get | projects.locations.models.evaluations.get  |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.get |\n [Back to top](#video) \nClick one of the following user journeys:- [AutoML Vision: Train and deploy an image classificationmodel](#automl-vision-image-classification) \n- [AutoML Vision: Train and deploy an object detectionmodel](#automl-vision-object-detection) ### AutoML Vision: Train and deploy an image classification modelTo see an example of how to use Vertex AI to train and deploy an image classification model,  run the \"Vertex AI Migration: AutoML Image Classification\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-image-classification-batch-online.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-automl-image-classification-batch-online.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-image-classification-batch-online.ipynb) \nRead about the [differences between the AutoML API and the Vertex AI API](/vertex-ai/docs/start/automl-users#api_users) , read about [differences between the AutoML Vision and Vertex AI products](/vertex-ai/docs/start/automl-users#vision-video) , and then use the following table to help migrate your API.| Step       | AutoML Vision         | Vertex AI          |\n|:-------------------------------|:------------------------------------------------|:----------------------------------------------|\n| Create a dataset    | projects.locations.datasets.create    | projects.locations.datasets.create   |\n| Create a dataset    | projects.locations.datasets.importData   | projects.locations.datasets.import   |\n| Train a model     | projects.locations.models.create    | projects.locations.trainingPipelines.create |\n| Train a model     | projects.locations.models.create    | projects.locations.trainingPipelines.get  |\n| Evaluate the model    | projects.locations.models.modelEvaluations.list | projects.locations.models.evaluations.list |\n| Evaluate the model    | projects.locations.models.modelEvaluations.get | projects.locations.models.evaluations.get  |\n| Make batch predictions   | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions   | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.get |\n| Make online predictions  | projects.locations.models.deploy    | projects.locations.endpoints.create   |\n| Make online predictions  | projects.locations.models.deploy    | projects.locations.endpoints.deployModel  |\n| Make online predictions  | projects.locations.models.predict    | projects.locations.endpoints.predict   |\n| Train and export an Edge model | projects.locations.models.create    | projects.locations.trainingPipelines.create |\n| Train and export an Edge model | projects.locations.models.create    | projects.locations.trainingPipelines.get  |\n| Train and export an Edge model | projects.locations.models.export    | projects.locations.models.export    |\n [Back to top](#vision) \n### AutoML Vision: Train and deploy an object detection modelTo see an example of how to use Vertex AI to train and deploy an object detection model,  run the \"Vertex AI Migration: AutoML Image Object Detection\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-image-object-detection-batch-online.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-automl-image-object-detection-batch-online.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-automl-image-object-detection-batch-online.ipynb) \nRead about the [differences between the AutoML API and the Vertex AI API](/vertex-ai/docs/start/automl-users#api_users) , read about [differences between the AutoML Vision and Vertex AI products](/vertex-ai/docs/start/automl-users#vision-video) , and then use the following table to help migrate your API.| Step     | AutoML Vision         | Vertex AI          |\n|:------------------------|:------------------------------------------------|:----------------------------------------------|\n| Create a dataset  | projects.locations.datasets.create    | projects.locations.datasets.create   |\n| Create a dataset  | projects.locations.datasets.importData   | projects.locations.datasets.import   |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.create |\n| Train a model   | projects.locations.models.create    | projects.locations.trainingPipelines.get  |\n| Evaluate the model  | projects.locations.models.modelEvaluations.list | projects.locations.models.evaluations.list |\n| Evaluate the model  | projects.locations.models.modelEvaluations.get | projects.locations.models.evaluations.get  |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | projects.locations.models.batchPredict   | projects.locations.batchPredictionJobs.get |\n| Make online predictions | projects.locations.models.deploy    | projects.locations.endpoints.create   |\n| Make online predictions | projects.locations.models.deploy    | projects.locations.endpoints.deployModel  |\n| Make online predictions | projects.locations.models.predict    | projects.locations.endpoints.predict   |\n [Back to top](#vision) \nClick one of the following user journeys:- [AI Platform: Train and deploy an XGBoostmodel with hosted runtimeversions](#xgboost-hosted-runtime-versions) \n- [AI Platform: Train and deploy a scikit-learnmodel with hosted runtimeversions](#sklearn-hosted-runtime-versions) \n- [AI Platform: Train and deploy a TensorFlowmodel with customcontainers](#tensorflow-custom-containers) \n- [AI Platform: Train and deploy a TensorFlowmodel with hosted runtimeversions](#tensorflow-hosted-runtime-versions) \n- [AI Platform Data Labeling Service: Submit a data labelingtask](#data-labeling-task) \n- [AI Platform Prediction: Submit a batch prediction job for ahosted TensorFlowmodel](#batch-prediction-hosted-tensorflow) \n- [AI Platform Training: Submit a hyperparameter tuning training jobwithTensorFlow](#training-hyperparameter-tuning-tensorflow) ### AI Platform: Train and deploy an XGBoost model with hosted runtime versionsTo see an example of how to use Vertex AI to train and deply an XGBoost model with a prebuilt container,  run the \"Vertex AI Migration: Custom XGBoost model with prebuilt training container\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-custom-xgboost-prebuilt-container.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-custom-xgboost-prebuilt-container.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-custom-xgboost-prebuilt-container.ipynb) \nRead about the [differences between the AI Platform and Vertex AI products](/vertex-ai/docs/start/ai-platform-users) , and then use the following table to help migrate your API.| Step     | AI Platform             | Vertex AI          |\n|:------------------------|:------------------------------------------------------------|:----------------------------------------------|\n| Train a model   | projects.jobs.create          | projects.locations.customJobs.create   |\n| Train a model   | projects.jobs.get           | projects.locations.customJobs.get    |\n| Deploy the model  | projects.models.create          | projects.locations.models.upload    |\n| Deploy the model  | projects.models.versions.create        | projects.locations.models.upload    |\n| Make batch predictions | AI Platform batch prediction is not supported for XGBoost. | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | AI Platform batch prediction is not supported for XGBoost. | projects.locations.batchPredictionJobs.get |\n| Make online predictions | projects.predict           | projects.locations.endpoints.create   |\n| Make online predictions | projects.predict           | projects.locations.endpoints.deployModel  |\n| Make online predictions | projects.predict           | projects.locations.endpoints.predict   |\n [Back to top](#ai-platform) \n### AI Platform: Train and deploy a scikit-learn model with hosted runtime versionsTo see an example of how to use Vertex AI to train and deploy a scikit-learn model with a prebuilt container,  run the \"Vertex AI Migration: Custom Scikit-Learn model with prebuilt training container\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-custom-scikit-learn-prebuilt-container.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-custom-scikit-learn-prebuilt-container.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-custom-scikit-learn-prebuilt-container.ipynb) \nRead about the [differences between the AI Platform and Vertex AI products](/vertex-ai/docs/start/ai-platform-users) , and then use the following table to help migrate your API.| Step     | AI Platform              | Vertex AI          |\n|:------------------------|:-----------------------------------------------------------------|:----------------------------------------------|\n| Train a model   | projects.jobs.create            | projects.locations.customJobs.create   |\n| Train a model   | projects.jobs.get            | projects.locations.customJobs.get    |\n| Deploy the model  | projects.models.create           | projects.locations.models.upload    |\n| Deploy the model  | projects.models.versions.create         | projects.locations.models.upload    |\n| Make batch predictions | AI Platform batch prediction is not supported for scikit-learn. | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | AI Platform batch prediction is not supported for scikit-learn. | projects.locations.batchPredictionJobs.get |\n| Make online predictions | projects.predict             | projects.locations.endpoints.create   |\n| Make online predictions | projects.predict             | projects.locations.endpoints.deployModel  |\n| Make online predictions | projects.predict             | projects.locations.endpoints.predict   |\n [Back to top](#ai-platform) \n### AI Platform: Train and deploy a TensorFlow model with custom containersTo see an example of how to use Vertex AI to train and deploy a TensorFlow model with a custom container,  run the \"Vertex AI Migration: Custom Image Classification with custom training container\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-custom-image-classification-custom-container.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-custom-image-classification-custom-container.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-custom-image-classification-custom-container.ipynb) \nRead about the [differences between the AI Platform and Vertex AI products](/vertex-ai/docs/start/ai-platform-users) , and then use the following table to help migrate your API.| Step     | AI Platform      | Vertex AI          |\n|:------------------------|:--------------------------------|:----------------------------------------------|\n| Train a model   | projects.jobs.create   | projects.locations.customJobs.create   |\n| Train a model   | projects.jobs.get    | projects.locations.customJobs.get    |\n| Deploy the model  | projects.models.create   | projects.locations.models.upload    |\n| Deploy the model  | projects.models.versions.create | projects.locations.models.upload    |\n| Make batch predictions | projects.jobs.create   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | projects.jobs.get    | projects.locations.batchPredictionJobs.get |\n| Make online predictions | projects.predict    | projects.locations.endpoints.create   |\n| Make online predictions | projects.predict    | projects.locations.endpoints.deployModel  |\n| Make online predictions | projects.predict    | projects.locations.endpoints.predict   |\n [Back to top](#ai-platform) \n### AI Platform: Train and deploy a TensorFlow model with hosted runtime versionsTo see an example of how to use Vertex AI to train and deploy a TensorFlow model with a prebuilt container,  run the \"Vertex AI Migration: Custom Image Classification with prebuilt training container\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-custom-image-classification-prebuilt-container.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-custom-image-classification-prebuilt-container.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-custom-image-classification-prebuilt-container.ipynb) \nRead about the [differences between the AI Platform and Vertex AI products](/vertex-ai/docs/start/ai-platform-users) , and then use the following table to help migrate your API.| Step     | AI Platform      | Vertex AI          |\n|:------------------------|:--------------------------------|:----------------------------------------------|\n| Train a model   | projects.jobs.create   | projects.locations.customJobs.create   |\n| Train a model   | projects.jobs.get    | projects.locations.customJobs.get    |\n| Deploy the model  | projects.models.create   | projects.locations.models.upload    |\n| Deploy the model  | projects.models.versions.create | projects.locations.models.upload    |\n| Make batch predictions | projects.jobs.create   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | projects.jobs.get    | projects.locations.batchPredictionJobs.get |\n| Make online predictions | projects.predict    | projects.locations.endpoints.create   |\n| Make online predictions | projects.predict    | projects.locations.endpoints.deployModel  |\n| Make online predictions | projects.predict    | projects.locations.endpoints.predict   |\n [Back to top](#ai-platform) \n### AI Platform Data Labeling Service: Submit a data labeling task\nRead about the [differences between the Data Labeling Service and Vertex AI products](/vertex-ai/docs/start/ai-platform-users#data_labeling) , and then use the following table to help migrate your API.| Step      | Data Labeling Service     | Vertex AI         |\n|:---------------------------|:---------------------------------------|:-------------------------------------------|\n| Create a dataset   | projects.datasets.create    | projects.locations.datasets.create   |\n| Create a dataset   | projects.locations.datasets.importData | projects.locations.datasets.import   |\n| Create a dataset   | projects.locations.datasets.importData | projects.locations.specialistPools.create |\n| Create a data labeling job | projects.annotationSpecSets.create  | projects.locations.dataLabelingJobs.create |\n| Create a data labeling job | projects.instructions.create   | projects.locations.dataLabelingJobs.create |\n| Create a data labeling job | projects.datasets.image.label   | projects.locations.dataLabelingJobs.create |\n| Create a data labeling job | projects.operations.get    | projects.locations.dataLabelingJobs.get |\n| Create a data labeling job | projects.operations.cancel    | projects.locations.dataLabelingJobs.cancel |\n [Back to top](#ai-platform) \n### AI Platform Prediction: Submit a batch prediction job for a hosted TensorFlow modelTo see an example of how to use Vertex AI to submit a batch prediction job for a hosted TensorFlow model,  run the \"Vertex AI Migration: Custom Image Classification with prebuilt training container\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-custom-image-classification-prebuilt-container.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-custom-image-classification-prebuilt-container.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-custom-image-classification-prebuilt-container.ipynb) \nRead about the [differences between the AI Platform Prediction and Vertex AI products](/vertex-ai/docs/start/ai-platform-users#prediction) , and then use the following table to help migrate your API.| Step     | AI Platform Prediction   | Vertex AI          |\n|:------------------------|:--------------------------------|:----------------------------------------------|\n| Train a model   | projects.jobs.create   | projects.locations.customJobs.create   |\n| Train a model   | projects.jobs.get    | projects.locations.customJobs.get    |\n| Deploy the model  | projects.models.create   | projects.locations.models.upload    |\n| Deploy the model  | projects.models.versions.create | projects.locations.models.upload    |\n| Make batch predictions | projects.jobs.create   | projects.locations.batchPredictionJobs.create |\n| Make batch predictions | projects.jobs.get    | projects.locations.batchPredictionJobs.get |\n| Make online predictions | projects.predict    | projects.locations.endpoints.create   |\n| Make online predictions | projects.predict    | projects.locations.endpoints.deployModel  |\n| Make online predictions | projects.predict    | projects.locations.endpoints.predict   |\n [Back to top](#ai-platform) \n### AI Platform Training: Submit a hyperparameter tuning training job with TensorFlowTo see an example of how to use Vertex AI to submit a hyperparameter tuning training job with TensorFlow,  run the \"Vertex AI Migration: Hyperparameter Tuning\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-hyperparameter-tuning.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fmigration%2Fsdk-hyperparameter-tuning.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/migration/sdk-hyperparameter-tuning.ipynb) \nRead about the [differences between the AI Platform Training and Vertex AI products](/vertex-ai/docs/start/ai-platform-users#custom_training) , and then use the following table to help migrate your API.| Step   | AI Platform Training | Vertex AI           |\n|:--------------|:-----------------------|:---------------------------------------------------|\n| Train a model | projects.jobs.create | projects.locations.hyperparameterTuningJobs.create |\n| Train a model | projects.jobs.get  | projects.locations.hyperparameterTuningJobs.get |\n [Back to top](#ai-platform)\n## What's next\n- Read [Setting up a project and a development environment](/vertex-ai/docs/start/cloud-environment) to start using Vertex AI.", "guide": "Vertex AI"}