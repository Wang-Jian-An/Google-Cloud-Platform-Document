{"title": "Vertex AI - Hello custom training: Train a custom image classification model", "url": "https://cloud.google.com/vertex-ai/docs/tutorials/image-classification-custom/training", "abstract": "# Vertex AI - Hello custom training: Train a custom image classification model\nTo learn more,  run the following Jupyter notebooks in the environment of your choice:\n- \"Use the Vertex AI SDK for Python to train and deploy a custom image classification model for batch prediction.\": [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/custom/sdk-custom-image-classification-batch.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fcustom%2Fsdk-custom-image-classification-batch.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/custom/sdk-custom-image-classification-batch.ipynb) \n- \"Use the Vertex AI SDK for Python to train and deploy a custom image classification model for online prediction.\": [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/custom/sdk-custom-image-classification-online.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fcustom%2Fsdk-custom-image-classification-online.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/custom/sdk-custom-image-classification-online.ipynb)\nThis page shows you how to run a TensorFlow Keras training application on Vertex AI. This particular model trains an image classification model that can classify flowers by type.- [Setting up your project and environment.](/vertex-ai/docs/tutorials/image-classification-custom) \n- Training a custom image classification model.\n- [Serving predictions from a custom image classificationmodel.](/vertex-ai/docs/tutorials/image-classification-custom/serving) \n- [Cleaning up your project.](/vertex-ai/docs/tutorials/image-classification-custom/cleanup) \nEach page assumes that you have already performed the instructions from the previous pages of the tutorial.\n[first page of thistutorial](/vertex-ai/docs/tutorials/image-classification-custom)- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) \n- In the Cloud Shell session, run the following command:```\ncd hello-custom-sample\n```", "content": "## Run a custom training pipeline\nThis section describes using the training package that you uploaded to Cloud Storage to run a Vertex AI custom training pipeline.\n- In the Google Cloud console, in the Vertex AI section, go to the **Training pipelines** page. [Go to Training pipelines](https://console.cloud.google.com/vertex-ai/training/training-pipelines) \n- Click **add_boxCreate** to open the **Train new model** pane.\n- On the **Choose training method** step, do the following:- In the **Dataset** drop-down list, select **No managed dataset** . This particular training application loads data from the [TensorFlowDatasets](https://www.tensorflow.org/datasets/) library rather than a managed Vertex AI dataset.\n- Ensure that **Custom training (advanced)** is selected.\nClick **Continue** .\n- On the **Model details** step, in the **Name** field, enter `hello_custom` . Click **Continue** .\n- On the **Training container** step, provide Vertex AI with information it needs to use the training package that you uploaded to Cloud Storage:- Select **Prebuilt container** .\n- In the **Model framework** drop-down list, select **TensorFlow** .\n- In the **Model framework version** drop-down list, select **2.3** .\n- In the **Package location** field, enter `cloud-samples-data/ai-platform/hello-custom/hello-custom-sample-v1.tar.gz` .\n- In the **Python module** field, enter `trainer.task` . `trainer` is the name of the Python package in your tarball, and `task.py` contains your training code. Therefore, `trainer.task` is the name of the module that you want Vertex AI to run.\n- In the **Model output directory** field, click **Browse** . Do the following in the **Select folder** pane:- Navigate to your Cloud Storage bucket.\n- Click **Create new folder create_new_folder** .\n- Name the new folder `output` . Then click **Create** .\n- Click **Select** .\nConfirm that field has the value `gs://` `` `/output` , where is the name of your Cloud Storage bucket.This value gets passed to Vertex AI in the [baseOutputDirectory APIfield](/vertex-ai/docs/reference/rest/v1/CustomJobSpec#FIELDS.base_output_directory) , which sets several environment variables that your training application can access when it runs.For example, when you set this field to `gs://` `` `/output` , Vertex AI sets the `AIP_MODEL_DIR` environment variable to `gs://` `` `/output/model` . At the end of training, Vertex AI uses any artifacts in the `AIP_MODEL_DIR` directory to create a model resource.Learn more about the [environment variables set by thisfield](/vertex-ai/docs/training/code-requirements#environment-variables) .\nClick **Continue** .\n- On the optional **Hyperparameters** step, make sure that the **Enablehyperparameter tuning** checkbox is cleared. This tutorial does not use hyperparameter tuning. Click **Continue** .\n- On the **Compute and pricing** step, allocate resources for the custom training job:- In the **Region** drop-down list, select **us-central1 (Iowa)** .\n- In the **Machine type** drop-down list, select **n1-standard-4** from the **Standard** section.\nDo not add any accelerators or worker pools for this tutorial. Click **Continue** .\n- On the **Prediction container** step, provide Vertex AI with information it needs to serve predictions:- Select **Prebuilt container** .\n- In the **Prebuilt container settings** section, do the following:- In the **Model framework** drop-down list, select **TensorFlow** .\n- In the **Model framework version** drop-down list, select **2.3** .\n- In the **Accelerator type** drop-down list, select **None** .\n- Confirm that **Model directory** field has the value `gs://` `` `/output` , where is the name of your Cloud Storage bucket. This matches the **Model output directory** value that you provided in a previous step.\n- Leave the fields in the **Predict schemata** section blank.\n- Click **Start training** to start the custom training pipeline.\nYou can now view your new , which is named `hello_custom` , on the **Training** page. (You might need to refresh the page.) The training pipeline does two main things:\n- The training pipeline creates a resource named `hello_custom-custom-job` . After a few moments, you can view this resource on the **Custom jobs** page of the **Training** section: [Go to Custom jobs](https://console.cloud.google.com/vertex-ai/training/custom-jobs) The custom job runs the training application using the computing resources that you specified in this section.\n- After the custom job completes, the training pipeline finds the artifacts that your training application creates in the `output/model/` directory of your Cloud Storage bucket. It uses these artifacts to create a resource.\n### Monitor training\nTo view training logs, do the following:\n- In the Google Cloud console, in the Vertex AI section, go to the **Custom jobs** page. [Go to Custom jobs](https://console.cloud.google.com/vertex-ai/training/custom-jobs) \n- To view details for the `CustomJob` that you just created, click `hello_custom-custom-job` in the list.\n- On the job details page, click **View logs** .\n### View your trained model\nWhen the custom training pipeline completes, you can find the trained model in the Google Cloud console, in the Vertex AI section, on the **Models** page.\n[Go to Models](https://console.cloud.google.com/vertex-ai/models)\nThe model has the name `hello_custom` .\n## What's next\nFollow the [next page of this tutorial](/vertex-ai/docs/tutorials/image-classification-custom/serving) to serve predictions from your trained ML model.", "guide": "Vertex AI"}