{"title": "Vertex AI - Introduction to Vertex AI Workbench instances", "url": "https://cloud.google.com/vertex-ai/docs/workbench/instances/introduction", "abstract": "# Vertex AI - Introduction to Vertex AI Workbench instances\n# Introduction to Vertex AI Workbench instances\nVertex AI Workbench instances are Jupyter notebook-based development environments for the entire data science workflow. You can interact with Vertex AI and other Google Cloud services from within a Vertex AI Workbench instance's Jupyter notebook.\nVertex AI Workbench integrations and features can make it easier to access your data, process data faster, schedule notebook runs, and more.\nVertex AI Workbench instances are prepackaged with [JupyterLab](https://jupyterlab.readthedocs.io/en/stable/getting_started/overview.html) and have a preinstalled suite of deep learning packages, including support for the TensorFlow and PyTorch frameworks. You can configure either CPU-only or GPU-enabled instances.\nVertex AI Workbench instances support the ability to sync with a [GitHub](https://github.com/) repository. Vertex AI Workbench instances are protected by Google Cloud authentication and authorization.\n", "content": "## Access to data\nYou can access your data without leaving the JupyterLab user interface.\nIn JupyterLab's navigation menu on a Vertex AI Workbench instance, you can use the Cloud Storage integration to browse data and other files that you have access to. See [Access Cloud Storage buckets and filesfrom within JupyterLab](/vertex-ai/docs/workbench/instances/cloud-storage) .\nYou can also use the BigQuery integration to browse tables that you have access to, write queries, preview results, and load data into your notebook. See [Query data in BigQuery tablesfrom within JupyterLab](/vertex-ai/docs/workbench/instances/bigquery) .\n## Execute notebook runs\nUse the executor to run a notebook file as a one-time execution or on a schedule. Choose the specific environment and hardware that you want your execution to run on. Your notebook's code will run on Vertex AI custom training, which can make it easier to do distributed training, optimize hyperparameters, or schedule continuous training jobs.\nYou can use parameters in your execution to make specific changes to each run. For example, you might specify a different dataset to use, change the learning rate on your model, or change the version of the model.\nYou can also set a notebook to run on a recurring schedule. Even while your instance is shut down, Vertex AI Workbench will run your notebook file and save the results for you to look at and share with others.\n## Share insights\nExecuted notebook runs are stored in a Cloud Storage bucket, so you can share your insights with others by granting access to the results. See the [previous section on executingnotebook runs](#executor) .\n## Secure your instance\nYou can deploy your Vertex AI Workbench instance with the default Google-managed network, which uses a default VPC network and subnet. Instead of the default network, you can specify a VPC network to use with your instance.\nBy default, Google Cloud automatically [encrypts data when it is atrest](/security/encryption/default-encryption) using encryption keys managed by Google. If you have specific compliance or regulatory requirements related to the keys that protect your data, you can use customer-managed encryption keys (CMEK) with your Vertex AI Workbench instances. For more information, see [Customer-managed encryption keys](/vertex-ai/docs/workbench/instances/cmek) .\n## Automated shutdown for idle instances\nTo help manage costs, Vertex AI Workbench instances shut down after being idle for a specific time period by default. You can change the amount of time or turn this feature off. For more information, see [Idle shutdown](/vertex-ai/docs/workbench/instances/idle-shutdown) .\n## Add conda environments\nVertex AI Workbench instances use [kernels](https://jupyterlab.readthedocs.io/en/stable/user/documents_kernels.html) based on conda environments. You can add a conda environment to your Vertex AI Workbench instance, and the environment appears as a kernel in your instance's JupyterLab interface.\nAdding conda environments lets you use kernels that aren't available in the default Vertex AI Workbench instance. For example, you can add conda environments for R and Apache Beam. Or you can add conda environments for specific earlier versions of the available frameworks, such as TensorFlow, PyTorch, or Python.\nFor more information, see [Add a conda environment](/vertex-ai/docs/workbench/instances/add-environment) .\n## Dataproc integration\nYou can process data quickly by running a notebook on a Dataproc cluster. After your cluster is set up, you can run a notebook file on it without leaving the JupyterLab user interface. For more information, see [Create a Dataproc-enabledinstance](/vertex-ai/docs/workbench/instances/create-dataproc-enabled) .\n## Limitations\nConsider the following limitations of Vertex AI Workbench instances when planning your project:\n- Third party JupyterLab extensions are not supported.\n- When you use [Access Context Manager](/access-context-manager/docs/create-basic-access-level#corporate-network-example) and [BeyondCorp Enterprise](/beyondcorp-enterprise/docs/access-levels) to protect Vertex AI Workbench instances with context-aware access controls, access is evaluated each time the user authenticates to the instance. For example, access is evaluated the first time the user accesses JupyterLab and whenever they access it thereafter if their web browser's cookie has expired.\n- The use of custom containers with Vertex AI Workbench instances isn't supported. Instead, [add a conda environment](/vertex-ai/docs/workbench/instances/add-environment) to your instance.\n- To use accelerators with Vertex AI Workbench instances, the accelerator type that you want must be available in your instance's zone. To learn about accelerator availability by zone, see [GPU regions and zones availability](/compute/docs/gpus/gpu-regions-zones) .## What's next\n- [Create a Vertex AI Workbench instance](/vertex-ai/docs/workbench/instances/create) .", "guide": "Vertex AI"}