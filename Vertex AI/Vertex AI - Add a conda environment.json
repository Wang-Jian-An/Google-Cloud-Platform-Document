{"title": "Vertex AI - Add a conda environment", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Add a conda environment\n# Add a conda environment\nThis page describes how to add a conda environment to your Vertex AI Workbench instance.\n", "content": "## Overview\nWhen you add a conda environment to your Vertex AI Workbench instance, it appears as a [kernel](https://jupyterlab.readthedocs.io/en/stable/user/documents_kernels.html) in your instance's JupyterLab interface.\nYou might add a conda environment to your Vertex AI Workbench instance to use kernels that aren't available in Vertex AI Workbench instances. For example, you can add conda environments for R and Apache Beam. Or you can add conda environments for specific older versions of the available frameworks, such as TensorFlow, PyTorch, or Python.\n## Before you begin\nIf you haven't already, [createa Vertex AI Workbench instance](/vertex-ai/docs/workbench/instances/create-console-quickstart) .\n## Open JupyterLab\n- In the Google Cloud console, go to the **Instances** page. [Go to Instances](https://console.cloud.google.com/vertex-ai/workbench/instances) \n- Next to your Vertex AI Workbench instance's name, click **Open JupyterLab** .Your Vertex AI Workbench instance opens JupyterLab.## Add a conda environment\nYou can add a conda environment by entering commands in your instance's JupyterLab terminal.\n- In JupyterLab, select **File\u00a0> New\u00a0> Terminal** .\n- In the **Terminal** window, enter the following commands:```\n# Creates a conda environment.\nconda create -n CONDA_ENVIRONMENT_NAME -y\nconda activate CONDA_ENVIRONMENT_NAME\n# Install packages using a pip local to the conda environment.\nconda install pip\npip install PACKAGE\n# Adds the conda kernel.\nDL_ANACONDA_ENV_HOME=\"${DL_ANACONDA_HOME}/envs/CONDA_ENVIRONMENT_NAME\"\npython -m ipykernel install --prefix \"${DL_ANACONDA_ENV_HOME}\" --name CONDA_ENVIRONMENT_NAME --display-name KERNEL_DISPLAY_NAME\n```Replace the following:- ``: your choice of name for the environment\n- ``: the conda package that you want to install\n- ``: the display name for the tile of the kernel in the JupyterLab interface\n- To see your new kernel, do the following:- Refresh the page.\n- Select **File\u00a0> New Launcher** .\nThe kernel is listed among the others in the **Launcher** window.\nBy default, conda might use pip packages in the system `pip` folder (for example, `/usr/bin/pip` ). Running `conda install pip` ensures that the setup uses a pip local to the environment.\n## Example installation: R Essentials\nThe following example installs R Essentials in a conda environment named `r` .\n```\nconda create -n r\nconda activate r\nconda install -c r r-essentials\nDL_ANACONDA_ENV_HOME=\"${DL_ANACONDA_HOME}/envs/r>\"\npython -m ipykernel install --prefix \"${DL_ANACONDA_ENV_HOME}\" --name r --display-name r\n```\n## Example installation: pip package\nThe following example installs pip packages from a `requirements.txt` file.\n```\nconda create -n myenv\nconda activate myenv\nconda install pip\npip install -r requirements.txt\nDL_ANACONDA_ENV_HOME=\"${DL_ANACONDA_HOME}/envs/myenv\"\npython -m ipykernel install --prefix \"${DL_ANACONDA_ENV_HOME}\" --name myenv --display-name myenv\n```\n## Troubleshoot\nTo diagnose and resolve issues related to adding a conda environment, see [TroubleshootingVertex AI Workbench](/vertex-ai/docs/general/troubleshooting-workbench#pip-packages-missing-instances) .\n## What's next\n- Learn more about [conda](https://docs.conda.io/en/latest/) .", "guide": "Vertex AI"}