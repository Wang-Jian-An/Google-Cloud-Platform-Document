{"title": "Vertex AI - Introduction to Vertex ML Metadata", "url": "https://cloud.google.com/vertex-ai/docs/ml-metadata/introduction", "abstract": "# Vertex AI - Introduction to Vertex ML Metadata\nA critical part of the scientific method is recording both your observations and the parameters of an experiment. In data science, it is also critical to track the parameters, artifacts, and metrics used in a machine learning (ML) experiment. This metadata helps you:\n- Analyze runs of a production ML system to understand changes in the quality of predictions.\n- Analyze ML experiments to compare the effectiveness of different sets of hyperparameters.\n- Track the lineage of ML artifacts, for example datasets and models, to understand just what contributed to the creation of an artifact or how that artifact was used to create descendant artifacts.\n- Rerun an ML workflow with the same artifacts and parameters.\n- Track the downstream usage of ML artifacts for governance purposes.\nVertex ML Metadata lets you record the metadata and artifacts produced by your ML system and query that metadata to help analyze, debug, and audit the performance of your ML system or the artifacts that it produces.\nVertex ML Metadata builds on the concepts used in the open source [ML Metadata (MLMD)](https://www.tensorflow.org/tfx/guide/mlmd) library that was developed by Google's TensorFlow Extended team.\n", "content": "## Overview of Vertex ML Metadata\nVertex ML Metadata captures your ML system's metadata as a graph.\nIn the metadata graph, artifacts and executions are nodes, and events are edges that link artifacts as inputs or outputs of executions. Contexts represent subgraphs that are used to logically group sets of artifacts and executions.\nYou can apply key-value pair metadata to artifacts, executions, and contexts. For example, a model could have metadata that describes the framework used to train the model and performance metrics, such as the model's accuracy, precision, and recall.\nLearn more about [tracking your ML system's metadata](/vertex-ai/docs/ml-metadata/tracking) . If you're interested in analyzing metadata from Vertex AI Pipelines, check out [this step-by-step tutorial](https://codelabs.developers.google.com/vertex-mlmd-pipelines#0) .\n## ML artifact lineage\nIn order to understand changes in the performance of your machine ML system, you must be able to analyze the metadata produced by your ML workflow and the lineage of its artifacts. An artifact's lineage includes all the factors that contributed to its creation, as well as artifacts and metadata that descend from this artifact.\nFor example, a model's lineage could include the following:\n- The training, test, and evaluation data used to create the model.\n- The hyperparameters used during model training.\n- The code that was used to train the model.\n- Metadata recorded from the training and evaluation process, such as the model's accuracy.\n- Artifacts that descend from this model, such as the results of batch predictions.\nBy tracking your ML system's metadata using Vertex ML Metadata, you can answer questions like the following:\n- Which dataset was used to train a certain model?\n- Which of my organization's models have been trained using a certain dataset?\n- Which run produced the most accurate model, and what hyperparameters were used to train the model?\n- Which deployment targets was a certain model deployed to and when was it deployed?\n- Which version of your model was used to create a prediction at a given point in time?\nLearn more about [analyzing your ML system's metadata](/vertex-ai/docs/ml-metadata/analyzing) .", "guide": "Vertex AI"}