{"title": "Vertex AI - Serve feature values", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Serve feature values\nVertex AI Feature Store lets you online serve feature values from a feature view within an online store. For example, you can serve feature values from a feature view for online predictions. A feature view must be synced at least once before you can online serve features from that feature.\nIf the feature view is defined based on feature groups and features, Vertex AI Feature Store fetches the latest feature values corresponding to a specific entity ID. If there are multiple records with the same value in the ID column, Vertex AI Feature Store fetches the most recent non-null feature values, based on the `feature_timestamp` column.\nIf the feature view is directly associated with a BigQuery data source without associating feature groups and features, then Vertex AI Feature Store fetches all the feature values from the data source. In this case, every row in the data source must contain a unique ID.\nYou can only serve feature values from one ID per request.\nDepending on the type of online serving configured for your online store, you can serve feature values in one of the following ways:\n- [Fetch feature values using Bigtable online serving](#bigtable_serving) : Choose this option only if the online store is configured for Bigtable online serving.\n- [Fetch feature values using Optimized online serving with a public endpoint](#optimized_serving_public) (in preview): Choose this option only if the online store is configured for Optimized online serving from a public endpoint.\n- [Fetch feature values using Optimized online serving with a Private Service Connect endpoint](#optimized_serving_private) (in preview): Choose this option only if the online store is configured for Optimized online serving from a dedicated serving endpoint over Private Service Connect.", "content": "## Fetch feature values using Bigtable online serving\nUse the following sample to fetch feature values based on a specific entity ID using Bigtable online serving.\nTo fetch all the latest feature values for a specific entity ID from a [FeatureView](/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores.featureViews#resource:-featureView) instance, send a `POST` request by using the [featureViews.fetchFeatureValues](/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores.featureViews/fetchFeatureValues) method.\nBefore using any of the request data, make the following replacements:- : Region where the online store is located, such as`us-central1`.\n- : Your project ID.\n- : The name of the online store containing the feature view.\n- : The name of the feature view from which you want to serve feature values.\n- : The value of the ID column in the feature record from which you want to serve the latest feature values.\n- : Optional: The format in which you want to fetch the feature values. Supported formats include JSON key-value pair and proto`Struct`formats.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME/featureViews/FEATUREVIEW_NAME:fetchFeatureValues\n```\nRequest JSON body:\n```\n{\n data_key: \"ENTITY_ID\",\n data_format: \"FORMAT\"\n}\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME/featureViews/FEATUREVIEW_NAME:fetchFeatureValues\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME/featureViews/FEATUREVIEW_NAME:fetchFeatureValues\" | Select-Object -Expand Content\n```\nYou should receive a JSON response similar to the following:\n```\nkey_values {\n features {\n value {\n  int64_value: 258348\n }\n name: \"feature_0\"\n }\n features {\n value {\n  double_value: 0.96300036744534068\n }\n name: \"feature_1\"\n }\n features {\n value {\n  double_value: 0.42787383695351083\n }\n name: \"feature_2\"\n }\n features {\n value {\n  double_value: 0.12219888824743128\n }\n name: \"feature_3\"\n }\n features {\n value {\n  double_value: 0.037523154697944622\n }\n name: \"feature_4\"\n }\n features {\n value {\n  double_value: 0.1766952509448767\n }\n name: \"feature_5\"\n }\n}\n```\n **Note:** You'll need to install or upgrade to the latest version of the Python SDK to complete this step. To do this, run the following command: `pip3 install --upgrade --quiet google-cloud-aiplatform` . To learn more about online serving using the Python SDK, see the [Online feature serving and fetching of BigQuery data with Bigtable online serving notebook tutorial](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/feature_store/online_feature_serving_and_fetching_bigquery_data_with_feature_store_bigtable.ipynb) .\nUse the following sample to fetch feature values based on a specific entity ID using Bigtable online serving.\n```\nfrom google.cloud.aiplatform_v1 import FeatureOnlineStoreServiceClientfrom google.cloud.aiplatform_v1.types import feature_online_store_service as feature_online_store_service_pb2data_client = FeatureOnlineStoreServiceClient(\u00a0 client_options={\"api_endpoint\": f\"LOCATION_ID-aiplatform.googleapis.com\"})data_client.fetch_feature_values(\u00a0 request=feature_online_store_service_pb2.FetchFeatureValuesRequest(\u00a0 \u00a0 feature_view=f\"projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME/featureViews/FEATUREVIEW_NAME\",\u00a0 \u00a0 data_key=feature_online_store_service_pb2.FeatureViewDataKey(key=\"ENTITY_ID\"),\u00a0 \u00a0 data_format=feature_online_store_service_pb2.FeatureViewDataFormat.FORMAT,\u00a0 ))\n```\nReplace the following:- : Region where the online store is located, such as `us-central1` .\n- : Your project ID.\n- : The name of the online store containing the feature view.\n- : The name of the feature view from which you want to serve feature values.\n- : The value of the ID column in the feature record from which you want to serve the latest feature values.\n- : Optional: The format in which you want to fetch the feature values. Supported formats include JSON `KEY_VALUE` pair and proto `PROTO_STRUCT` formats.\n## Fetch feature values using Optimized online serving from a public endpoint\n**    Preview     ** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nIf you've configured your online store instance to serve feature values using Optimized online serving from a public endpoint, then you need to perform the following steps to fetch feature values from a feature view within the online store:\n- [Retrieve the public endpoint domain name for the FeatureOnlineStore instance.](#lowlatency_public_step1) \n- [Fetch feature values from an entity ID using the public endpoint domain name.](#lowlatency_public_step2) \n### Retrieve the public endpoint domain name for the online store\nWhen you create and configure an online store instance for Optimized online serving with a public endpoint, Vertex AI Feature Store generates the public endpoint domain name for the online store. Before you can start serving feature values from a feature view in the online store, you need to retrieve the public endpoint domain name from the online store details.\nUse the following sample to retrieve the details of an online store instance.\nTo retrieve the details of a [FeatureOnlineStore](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featureOnlineStores#resource:-featureOnlineStore) resource in your project, send a `GET` request by using the [featureOnlineStores.get](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featureOnlineStores/get) method.\nBefore using any of the request data, make the following replacements:- : Region where the online store is located, such as`us-central1`.\n- : Your project ID.\n- : The name of the online store instance.\nHTTP method and URL:\n```\nGET https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\ncurl -X GET \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method GET ` -Headers $headers ` -Uri \"https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME\" | Select-Object -Expand Content\n```\nYou should receive a JSON response similar to the following:\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME_1\",\n \"createTime\": \"2023-09-06T23:25:04.256314Z\",\n \"updateTime\": \"2023-09-06T23:25:04.256314Z\",\n \"etag\": \"AMEw9yMgoV0bAsYuKwVxz4Y7lOmxV7riNVHg217KaQAKORqvdqGCrQ1DIt8yHgoGXf8=\",\n \"state\": \"STABLE\",\n \"dedicatedServingEndpoint\": {\n \"publicEndpointDomainName\": \"PUBLIC_ENDPOINT_DOMAIN_NAME\"\n },\n \"optimized\": {}\n}\n```\nYou'll need the from the response to fetch feature values in the following step.\n### Fetch feature values from an entity ID\nAfter you retrieve the public endpoint domain name for the online store instance, use the following sample to fetch feature values for a specific entity ID using Optimized online serving.\nTo fetch all the latest feature values for a specific entity ID from a [FeatureView](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featureOnlineStores.featureViews#resource:-featureView) instance, send a `POST` request by using the [featureViews.fetchFeatureValues](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featureOnlineStores.featureViews/fetchFeatureValues) method.\nBefore using any of the request data, make the following replacements:- : The public endpoint domain name for the online store instance that you retrieved using the [featureOnlineStores.get](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featureOnlineStores/get) method.\n- : Region where the online store is located, such as`us-central1`.\n- : Your project ID.\n- : The name of the online store containing the feature view.\n- : The name of the feature view from which you want to serve feature values.\n- : The value of the ID column in the feature record from which you want to serve the latest feature values.\n- : Optional: The format in which you want to fetch the feature values. Supported formats include JSON key-value pair and proto`Struct`formats.\nHTTP method and URL:\n```\nPOST https://PUBLIC_ENDPOINT_DOMAIN_NAME/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME/featureViews/FEATUREVIEW_NAME:fetchFeatureValues\n```\nRequest JSON body:\n```\n{\n id: \"ENTITY_ID\",\n data_format: \"FORMAT\"\n}\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://PUBLIC_ENDPOINT_DOMAIN_NAME/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME/featureViews/FEATUREVIEW_NAME:fetchFeatureValues\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://PUBLIC_ENDPOINT_DOMAIN_NAME/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME/featureViews/FEATUREVIEW_NAME:fetchFeatureValues\" | Select-Object -Expand Content\n```\nYou should receive a JSON response similar to the following:\n```\nkey_values {\n features {\n value {\n  int64_value: 258348\n }\n name: \"feature_0\"\n }\n features {\n value {\n  double_value: 0.96300036744534068\n }\n name: \"feature_1\"\n }\n features {\n value {\n  double_value: 0.42787383695351083\n }\n name: \"feature_2\"\n }\n features {\n value {\n  double_value: 0.12219888824743128\n }\n name: \"feature_3\"\n }\n features {\n value {\n  double_value: 0.037523154697944622\n }\n name: \"feature_4\"\n }\n features {\n value {\n  double_value: 0.1766952509448767\n }\n name: \"feature_5\"\n }\n}\n```\n **Note:** You'll need to install or upgrade to the latest version of the Python SDK to complete this step. To do this, run the following command: `pip3 install --upgrade --quiet google-cloud-aiplatform` . To learn more about online serving using the Python SDK, see the [Online feature serving and fetching of BigQuery data with Optimized online serving notebook tutorial](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/feature_store/online_feature_serving_and_fetching_bigquery_data_with_feature_store_optimized.ipynb) .\nUse the following sample to fetch feature values based on a specific entity ID using Optimized online serving.\n```\nfrom google.cloud.aiplatform_v1 import FeatureOnlineStoreServiceClientfrom google.cloud.aiplatform_v1.types import feature_online_store_service as feature_online_store_service_pb2data_client = FeatureOnlineStoreServiceClient(\u00a0 client_options={\"api_endpoint\": f\"PUBLIC_ENDPOINT_DOMAIN_NAME\"})data_client.fetch_feature_values(\u00a0 request=feature_online_store_service_pb2.FetchFeatureValuesRequest(\u00a0 \u00a0 feature_view=f\"projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME/featureViews/FEATUREVIEW_NAME\",\u00a0 \u00a0 id=f\"ENTITY_ID\",\u00a0 \u00a0 format=feature_online_store_service_pb2.FetchFeatureValuesRequest.Format.FORMAT,\u00a0 ))\n```\nReplace the following:- : The public endpoint domain name for the online store instance that you retrieved using the [featureOnlineStores.get](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featureOnlineStores/get) method.\n- : Region where the online store is located, such as `us-central1` .\n- : Your project ID.\n- : The name of the online store containing the feature view.\n- : The name of the feature view from which you want to serve feature values.\n- : The value of the ID column in the feature record from which you want to serve the latest feature values.\n- : Optional: The format in which you want to fetch the feature values. Supported formats include JSON `KEY_VALUE` pair and proto `PROTO_STRUCT` formats.\n## Fetch feature values using Optimized online serving from a Private Service Connect endpoint\n**    Preview     ** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nIf you've configured your online store instance to serve feature values using Optimized online serving from a Private Service Connect endpoint, then you need to perform the following steps to fetch feature values from a feature view within the online store:\n- [Retrieve the Private Service Connect configuration for the FeatureOnlineStore instance.](#lowlatency_private_step1) \n- [Add an endpoint for Private Service Connect to your network configuration.](#lowlatency_private_step2) \n- [Connect to the Private Service Connect endpoint over gRPC.](#lowlatency_private_step3) \n- [Fetch feature values from an entity ID.](#lowlatency_private_step4) \n### Retrieve the service attachment string for the online store\nWhen you create and configure an online store instance for Optimized online serving with a Private Service Connect endpoint, Vertex AI Feature Store generates a service attachment string that you can use to set up the Private Service Connect endpoint. You can retrieve the service attachment string from the online store details.\nUse the following sample to retrieve the details of an online store instance.\nTo retrieve the details of a [FeatureOnlineStore](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featureOnlineStores#resource:-featureOnlineStore) resource in your project, send a `GET` request by using the [featureOnlineStores.get](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featureOnlineStores/get) method.\nBefore using any of the request data, make the following replacements:- : Region where the online store is located, such as`us-central1`.\n- : Your project ID.\n- : The name of the online store instance.\nHTTP method and URL:\n```\nGET https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\ncurl -X GET \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method GET ` -Headers $headers ` -Uri \"https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME\" | Select-Object -Expand Content\n```\nYou should receive a JSON response similar to the following:\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME_1\",\n \"createTime\": \"2023-09-06T23:25:04.256314Z\",\n \"updateTime\": \"2023-09-06T23:25:04.256314Z\",\n \"etag\": \"AMEw9yMgoV0bAsYuKwVxz4Y7lOmxV7riNVHg217KaQAKORqvdqGCrQ1DIt8yHgoGXf8=\",\n \"state\": \"STABLE\",\n \"dedicatedServingEndpoint\": {\n \"privateServiceConnectConfig\": {\n  \"enablePrivateServiceConnect\": \"true\",\n  \"projectAllowlist\": [  \"PROJECT_NAME\"\n  ]\n },\n serviceAttachment: \"SERVICE_ATTACHMENT_STRING\"\n },\n \"optimized\": {}\n}\n```\nYou'll need the from the response to fetch feature values in the following step.\n### Add an endpoint for Private Service Connect\nTo add a Private Service Connect endpoint for Optimized online serving to your network configuration, perform the following steps:\n- On the Google Cloud console, select the project containing the online store instance.\n- Create an endpoint for Private Service Connect by specifying the as the **Target service** . For information about how to create an endpoint for Private Service Connect, see [Create an endpoint](/vpc/docs/configure-private-service-connect-services#create-endpoint) .\nAfter you create the endpoint, it appears in the **Connected endpoints** tab on the **Private Service Connect** page. The IP address of the endpoint appears in the **IP addresses** column.\n[Go to the Connected endpoints tab](https://console.cloud.google.com/net-services/psc)\nYou'll need to use this IP address to connect to the endpoint for your online store instance to the Private Service Connect endpoint over gRPC in the following step.\n### Connect to the Private Service Connect endpoint over gRPC\n**Note:** You'll need to install or upgrade to the latest version of the Python SDK to complete this step. To do this, run the following command: `pip3 install --upgrade --quiet google-cloud-aiplatform`\nUse the following code sample to connect to the Private Service Connect endpoint created for your online store over gRPC.\n```\nfrom google.cloud.aiplatform_v1beta1 import FeatureOnlineStoreServiceClientfrom google.cloud.aiplatform_v1beta1.services.feature_online_store_service.transports.grpc import FeatureOnlineStoreServiceGrpcTransportimport grpcdata_client = FeatureOnlineStoreServiceClient(\u00a0 transport = FeatureOnlineStoreServiceGrpcTransport(\u00a0 \u00a0 # Add the IP address of the Endpoint you just created.\u00a0 \u00a0 channel = grpc.insecure_channel(\"ENDPOINT_IP:10002\")\u00a0 ))\n```\nReplace the following:\n- : The IP address of the endpoint in the **IP addresses** column on the **Private Service Connect** page.\n### Fetch feature values from an entity ID\nAfter you've connected to the Private Service Connect endpoint over gRPC, use the following sample to fetch feature values for a specific entity ID using Optimized online serving.\n```\ndata_client.fetch_feature_values(\u00a0 feature_view=f\"projects/PROJECT_ID/locations/LOCATION_ID/featureOnlineStores/FEATUREONLINESTORE_NAME/featureViews/FEATUREVIEW_NAME\", id=ENTITY_ID)\n```\nReplace the following:\n- : Region where the online store is located, such as `us-central1` .\n- : Your project ID.\n- : The name of the online store containing the feature view.\n- : The name of the feature view from which you want to serve feature values.\n- : The value of the ID column in the feature record from which you want to serve the latest feature values.\n- : Optional: The format in which you want to fetch the feature values. Supported formats include JSON key-value pair and proto `Struct` formats.## What's next\n- Learn how to [sync data for a feature view](/vertex-ai/docs/featurestore/latest/sync-data) .\n- Learn how to [update an online store](/vertex-ai/docs/featurestore/latest/update-onlinestore) .", "guide": "Vertex AI"}