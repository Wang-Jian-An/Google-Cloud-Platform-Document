{"title": "Vertex AI - Manage access to a user-managed notebooks instance", "url": "https://cloud.google.com/vertex-ai/docs/workbench/user-managed/manage-access", "abstract": "# Vertex AI - Manage access to a user-managed notebooks instance\n# Manage access to a user-managed notebooks instance\nVertex AI Workbench user-managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  user-managed notebooks will end and the ability to create user-managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your user-managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/user-managed/migrate-to-instances) .\nThis guide describes how you can grant access to a specific Vertex AI Workbench user-managed notebooks instance. To manage access to Vertex AI resources, see the [Vertex AI page on access control](/vertex-ai/docs/general/access-control) .\nYou grant access to a user-managed notebooks instance by setting an [Identity and Access Management (IAM) policy](/iam/docs/policies) on the instance. The policy binds one or more principals, such as a user or a service account, to one or more [roles](/vertex-ai/docs/workbench/user-managed/iam#iam-roles) . Each role contains a list of permissions that let the principal interact with the instance.\nYou can grant access to an instance, instead of to a parent resource such as a project, folder, or organization, to exercise the principle of [least privilege](/iam/docs/using-iam-securely#least_privilege) .\nIf you grant access to a [parent resource](/iam/docs/resource-hierarchy-access-control) (for example, to a project), you implicitly grant access to all its child resources (for example, to all instances in that project). To limit access to resources, set IAM policies on lower-level resources when possible, instead of at the project level or above.\nFor general information about how to grant, change, and revoke access to resources unrelated to Vertex AI Workbench, for example, to grant access to a Google Cloud project, see the IAM documentation for [managing access to projects, folders, andorganizations](/iam/docs/granting-changing-revoking-access) .\n#", "content": "## Access limitations\nAccess to an instance can include a broad range of abilities, depending on the role you assign to the principal. For example, you might grant a principal the ability to start, stop, upgrade, and monitor the health status of an instance. For the complete list of IAM permissions available, see [Predefineduser-managed notebooks IAMroles](/vertex-ai/docs/workbench/user-managed/iam#iam_roles) .\nHowever, even granting a principal full access to a user-managed notebooks instance doesn't grant the ability to use the instance's JupyterLab interface. To grant access to the JupyterLab interface, see [Manage access to auser-managed notebooks instance'sJupyterLab interface](/vertex-ai/docs/workbench/user-managed/manage-access-jupyterlab) .\n## Grant access to user-managed notebooks instances\nTo grant users permission to access a specific user-managed notebooks instance, set an [IAM policy](/iam/docs/policies) on the instance.\nTo grant a role to a principal on a user-managed notebooks instance, use the [get-iam-policy](/sdk/gcloud/reference/notebooks/instances/get-iam-policy) command to retrieve the current policy, edit the current policy's access, and then use the [set-iam-policy](/sdk/gcloud/reference/notebooks/instances/set-iam-policy) command to update the policy on the instance.\n### Retrieve the current policy\nBefore using any of the command data below, make the following replacements:- : The name of your user-managed notebooks instance\n- : Your Google Cloud project ID\n- : The zone where your instance is located\nExecute the  following  command:\nThe response is the text of your instance's IAM policy. See the following for an example.\n```\n{\n \"bindings\": [ {\n  \"role\": \"roles/notebooks.viewer\",\n  \"members\": [  \"user:email@example.com\"\n  ]\n }\n ],\n \"etag\": \"BwWWja0YfJA=\",\n \"version\": 3\n}\n```\n### Edit the policy\n- Edit the policy with a text editor to add or remove principals and their associated roles. For example, to grant the `notebooks.admin` role to `eve@example.com` , add the following new binding to the policy in the `\"bindings\"` section:```\n{\u00a0 \"role\": \"roles/notebooks.admin\",\u00a0 \"members\": [\u00a0 \u00a0 \"user:eve@example.com\"\u00a0 ]}\n```After adding the new binding, the policy might look like the following:```\n{\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"role\": \"roles/notebooks.viewer\",\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:email@example.com\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"role\": \"roles/notebooks.admin\",\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:eve@example.com\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 }\u00a0 ],\u00a0 \"etag\": \"BwWWja0YfJA=\",\u00a0 \"version\": 3}\n```\n- Save the updated policy in a file named `request.json` .\n### Update the policy on the instanceIn the body of the request, provide the updated IAM policy from the previous step, nested inside a `\"policy\"` section.\nBefore using any of the command data below, make the following replacements:- : The name of your user-managed notebooks instance\n- : Your Google Cloud project ID\n- : The zone where your instance is located\nSave the following content in a file called `request.json` :\n```\n{\u00a0 \"policy\": {\u00a0 \u00a0 \"bindings\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"role\": \"roles/notebooks.viewer\",\u00a0 \u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"user:email@example.com\"\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"role\": \"roles/notebooks.admin\",\u00a0 \u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"user:eve@example.com\"\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ],\u00a0 \u00a0 \"etag\": \"BwWWja0YfJA=\",\u00a0 \u00a0 \"version\": 3\u00a0 }}\n```\nExecute the  following  command:\n### Grant access to the JupyterLab interfaceGranting a principal access to a user-managed notebooks instance doesn't grant the ability to use the instance's JupyterLab interface. To grant access to the JupyterLab interface, see [Manage access to auser-managed notebooks instance'sJupyterLab interface](/vertex-ai/docs/workbench/user-managed/manage-access-jupyterlab) .\nTo grant a role to a principal on a user-managed notebooks instance, use the [getIamPolicy](/vertex-ai/docs/workbench/reference/rest/v1/projects.locations.instances/getIamPolicy) method to retrieve the current policy, edit the current policy's access, and then use the [setIamPolicy](/vertex-ai/docs/workbench/reference/rest/v1/projects.locations.instances/setIamPolicy) method to update the policy on the instance.\n### Retrieve the current policy\nBefore using any of the request data, make the following replacements:- : The name of your user-managed notebooks instance\nHTTP method and URL:\n```\nGET https://notebooks.googleapis.com/v1/INSTANCE_NAME:getIamPolicy\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\ncurl -X GET \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://notebooks.googleapis.com/v1/INSTANCE_NAME:getIamPolicy\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method GET ` -Headers $headers ` -Uri \"https://notebooks.googleapis.com/v1/INSTANCE_NAME:getIamPolicy\" | Select-Object -Expand Content\n```The response is the text of your instance's IAM policy. See the following for an example.\n```\n{\n \"bindings\": [ {\n  \"role\": \"roles/notebooks.viewer\",\n  \"members\": [  \"user:email@example.com\"\n  ]\n }\n ],\n \"etag\": \"BwWWja0YfJA=\",\n \"version\": 3\n}\n```\n### Edit the policyEdit the policy with a text editor to add or remove principals and their associated roles. For example, to grant the `notebooks.admin` role to eve@example.com, add the following new binding to the policy in the `\"bindings\"` section:\n```\n{\u00a0 \"role\": \"roles/notebooks.admin\",\u00a0 \"members\": [\u00a0 \u00a0 \"user:eve@example.com\"\u00a0 ]}\n```\nAfter adding the new binding, the policy might look like the following:\n```\n{\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"role\": \"roles/notebooks.viewer\",\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:email@example.com\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"role\": \"roles/notebooks.admin\",\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:eve@example.com\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 }\u00a0 ],\u00a0 \"etag\": \"BwWWja0YfJA=\",\u00a0 \"version\": 3}\n```\n### Update the policy on the instanceIn the body of the request, provide the updated IAM policy from the previous step, nested inside a `\"policy\"` section.\nBefore using any of the request data, make the following replacements:- : The name of your user-managed notebooks instance\nHTTP method and URL:\n```\nPOST https://notebooks.googleapis.com/v1/INSTANCE_NAME:setIamPolicy\n```\nRequest JSON body:\n```\n{\n \"policy\": {\n \"bindings\": [  {\n  \"role\": \"roles/notebooks.viewer\",\n  \"members\": [   \"user:email@example.com\"\n  ]\n  },\n  {\n  \"role\": \"roles/notebooks.admin\",\n  \"members\": [   \"user:eve@example.com\"\n  ]\n  }\n ],\n \"etag\": \"BwWWja0YfJA=\",\n \"version\": 3\n }\n}\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://notebooks.googleapis.com/v1/INSTANCE_NAME:setIamPolicy\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://notebooks.googleapis.com/v1/INSTANCE_NAME:setIamPolicy\" | Select-Object -Expand Content\n```\nYou should receive a successful status code (2xx) and an empty response.\n### Grant access to the JupyterLab interfaceGranting a principal access to a user-managed notebooks instance doesn't grant the ability to use the instance's JupyterLab interface. To grant access to the JupyterLab interface, see [Manage access to auser-managed notebooks instance'sJupyterLab interface](/vertex-ai/docs/workbench/user-managed/manage-access-jupyterlab) .\n## What's next\n- [Grant a principal access toJupyterLab.](/vertex-ai/docs/workbench/user-managed/manage-access-jupyterlab) \n- To learn about Identity and Access Management (IAM) and how IAM roles can help grant and restrict access, see the [IAM documentation](/iam/docs) .\n- Learn about the [IAM roles availableto Vertex AI Workbenchuser-managed notebooks](/vertex-ai/docs/workbench/user-managed/iam) .\n- Learn how to create and manage [custom roles](/iam/docs/creating-custom-roles) .\n- To learn how to grant access to other Google resources, see [Manage access toother resources](/iam/docs/granting-changing-revoking-access) .", "guide": "Vertex AI"}