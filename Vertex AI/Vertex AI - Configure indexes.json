{"title": "Vertex AI - Configure indexes", "url": "https://cloud.google.com/vertex-ai/docs/vector-search/configuring-indexes", "abstract": "# Vertex AI - Configure indexes\nTo configure indexes for similarity searches, you need to configure the following fields.\n", "content": "## NearestNeighborSearch\n| Fields    | Fields.1                                                                                            |\n|:--------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| contentsDeltaUri | string Allows inserting, updating or deleting the contents of the Vector Search Index. The string must be a valid Cloud Storage directory path, such as gs://BUCKET_NAME/PATH_TO_INDEX_DIR/. If you set this field when calling IndexService.UpdateIndex, then no other Index field can be also updated as part of the same call. Learn how to structure individual data files. |\n| isCompleteOverwrite | boolean If this field is set together with contentsDeltaUri when calling IndexService.UpdateIndex, then existing content of the Index will be replaced by the data from the contentsDeltaUri.                                              |\n| config    | NearestNeighborSearchConfig The configuration of the Vector Search Index.                                                                            |\n## NearestNeighborSearchConfig\n| Fields     | Fields.1                                                                                                                                   |\n|:--------------------------||\n| dimensions    | int32 Required. The number of dimensions of the input vectors.                                                                                                                     |\n| approximateNeighborsCount | int32 Required if tree-AH algorithm is used. The default number of neighbors to find through approximate search before exact reordering is performed. Exact reordering is a procedure where results returned by an approximate search algorithm are reordered via a more expensive distance computation.                                                          |\n| distanceMeasureType  | DistanceMeasureType The distance measure used in nearest neighbor search.                                                                                                                   |\n| featureNormType   | FeatureNormType Type of normalization to be carried out on each vector.                                                                                                                   |\n| algorithmConfig   | oneOf: TreeAhConfig BruteForceConfig The configuration for the algorithms that Vector Search uses for efficient search. TreeAhConfig: Configuration options for using the tree-AH algorithm. Refer to this blog for more details: Scaling deep retrieval with TensorFlow Recommenders and Vector Search BruteForceConfig: This option implements the standard linear search in the database for each query. There are no fields to configure for a brute force search. To select this algorithm, pass an empty object for BruteForceConfig. |\n## DistanceMeasureType\n| Enums    | Enums.1                                                                         |\n|:---------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| SQUARED_L2_DISTANCE | Euclidean (L2) Distance                                                                     |\n| L1_DISTANCE   | Manhattan (L1) Distance                                                                     |\n| DOT_PRODUCT_DISTANCE | Default value. Defined as a negative of the dot product.                                                             |\n| COSINE_DISTANCE  | Cosine Distance. We strongly suggest using DOT_PRODUCT_DISTANCE + UNIT_L2_NORM instead of the COSINE distance. Our algorithms have been more optimized for the DOT_PRODUCT distance, and when combined with UNIT_L2_NORM, it offers the same ranking and mathematical equivalence as the COSINE distance. |\n## FeatureNormType\n| Enums  | Enums.1           |\n|:-------------|:---------------------------------------------------|\n| UNIT_L2_NORM | Unit L2 normalization type.      |\n| NONE   | Default value. No normalization type is specified. |\n## TreeAhConfig\nThese are the fields to select for the tree-AH algorithm.\n| Fields     | Fields.1                                                |\n|:--------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| fractionLeafNodesToSearch | double                                                |\n| nan      | The default fraction of leaf nodes that any query may be searched. Must be in range 0.0 - 1.0, exclusive. The default value is 0.05 if not set.              |\n| leafNodeEmbeddingCount | int32                                                 |\n| nan      | Number of embeddings on each leaf node. The default value is 1000 if not set.                              |\n| leafNodesToSearchPercent | int32                                                 |\n| nan      | Deprecated, use fractionLeafNodesToSearch. The default percentage of leaf nodes that any query may be searched. Must be in range 1-100, inclusive. The default value is 10 (means 10%) if not set. |\n## BruteForceConfig\nThis option implements the standard linear search in the database for each query. There are no fields to configure for a brute force search. To select this algorithm, pass an empty object for `BruteForceConfig` to `algorithmConfig` .", "guide": "Vertex AI"}