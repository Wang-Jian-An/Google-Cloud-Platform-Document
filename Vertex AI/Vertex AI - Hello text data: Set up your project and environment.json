{"title": "Vertex AI - Hello text data: Set up your project and environment", "url": "https://cloud.google.com/vertex-ai/docs/tutorials/text-classification-automl", "abstract": "# Vertex AI - Hello text data: Set up your project and environment\nTo learn more,  run the \"Create, train, and deploy an AutoML text classification model\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl-text-classification.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fautoml%2Fautoml-text-classification.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/automl/automl-text-classification.ipynb)\nIf you plan to use the Vertex AI SDK for Python, make sure that the service account initializing the client has the [Vertex AI Service Agent](/vertex-ai/docs/general/access-control#aiplatform.serviceAgent) ( `roles/aiplatform.serviceAgent` ) IAM role.\nFor this part of the tutorial, you set up your Google Cloud project to use Vertex AI and a Cloud Storage bucket that contains the documents for training your AutoML model.\nThis tutorial has several pages:\n- Setting up your project and environment.\n- [Creating a text classification dataset .](/vertex-ai/docs/tutorials/text-classification-automl/dataset) \n- [Training an AutoML text classification model.](/vertex-ai/docs/tutorials/text-classification-automl/training) \n- [Deploy model to an endpoint and send a prediction.](/vertex-ai/docs/tutorials/text-classification-automl/deploy-predict) \n- [Cleaning up your project.](/vertex-ai/docs/tutorials/text-classification-automl/cleanup) \nEach page assumes that you have already performed the instructions from the previous pages of the tutorial.\n", "content": "## Set up your project and environment\nComplete the following steps before using Vertex AI functionality.\n- In the Google Cloud console, go to the project selector page. [Go to project selector](https://console.cloud.google.com/projectselector2/home/dashboard) \n- Select or create a Google Cloud project. **Note** : If you don't plan to keep the  resources that you create in this procedure, create a project instead of  selecting an existing project. After you finish these steps, you can  delete the project, removing all resources associated with the project.\n- [Make sure that billing is enabled for your Google Cloud project](/billing/docs/how-to/verify-billing-enabled#console) .\n- Open [Cloud Shell](/shell/docs/launching-cloud-shell-editor) .  Cloud Shell is an interactive shell environment  for Google Cloud that lets you manage your projects and resources from  your web browser.\n- [Go to Cloud Shell](https://ssh.cloud.google.com/cloudshell/editor) \n- In the Cloud Shell, set the current project to your Google Cloud project ID and store it in the`projectid`shell variable:```\n gcloud config set project PROJECT_ID &&\n projectid=PROJECT_ID &&\n echo $projectid\n```Replacewith your project ID. You can locate your project ID in the Google Cloud console. For more information, see [Find your project ID](/vertex-ai/docs/tutorials/tabular-bq-prediction/prerequisites#find-project-id) .\n- Enable the IAM, Compute Engine, Notebooks, Cloud Storage, and Vertex AI APIs:```\ngcloud services enable iam.googleapis.com \u00a0compute.googleapis.com notebooks.googleapis.com storage.googleapis.com aiplatform.googleapis.com\n```\n- Grant roles to your Google Account. Run the following command once for each of the following   IAM roles: `roles/aiplatform.user, roles/storage.admin` ```\ngcloud projects add-iam-policy-binding PROJECT_ID --member=\"user:EMAIL_ADDRESS\" --role=ROLE\n```- Replace``with your project ID.\n- Replace``with your email address.\n- Replace``with each individual role.- The Vertex AI User (\n- `roles/aiplatform.user`\n- ) IAM role provides access to use all resources in Vertex AI. The\n- [Storage Admin](/storage/docs/access-control/iam-roles) \n- (\n- `roles/storage.admin`\n- ) lets you store the document's training dataset in Cloud Storage.\n## Create a Cloud Storage bucket and copy the sample dataset\nCreate a [Cloud Storage](/storage/docs) bucket to store the documents that you use to train your AutoML model.\n- [Open Cloud Shell](http://console.cloud.google.com/?cloudshell=true) .\n- Set the variable to the ID of your project.```\nexport PROJECT_ID=PROJECT_ID\n```\n- Set the variable, which you use to create a Cloud Storage bucket.```\nexport BUCKET=${PROJECT_ID}-lcm\n```\n- Create a Cloud Storage bucket in the `us-central1` region with the `BUCKET` variable.```\ngsutil mb -p ${PROJECT_ID} -l us-central1 gs://${BUCKET}/\n```\n- Copy the `happiness.csv` sample training dataset into your bucket.```\ngsutil -m cp -R gs://cloud-ml-data/NL-classification/happiness.csv gs://${BUCKET}/text/\n```## What's next\nFollow the [next page of this tutorial](/vertex-ai/docs/tutorials/text-classification-automl/dataset) to use the Vertex AI console to create a text classification dataset and import the documents you copied to your Cloud Storage bucket.", "guide": "Vertex AI"}