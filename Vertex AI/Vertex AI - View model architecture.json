{"title": "Vertex AI - View model architecture", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - View model architecture\nThis page provides information about how to use Cloud Logging to view details about a Vertex AI model. Using Logging, you can see:\n- The hyperparameters of the final model as key-value pairs.\n- The hyperparameters and object values used during model training and tuning, as well as an objective value.\nBy default, logs are deleted after 30 days.\nThe following topics are covered:\n- [Viewing training logs](#training-logs) .\n- [Log fields](#log-fields) .\n**Note:** Model architecture logs are provided as part of the Cloud Logging service. For general information about Cloud Logging, see the [Cloud Logging](/logging/docs) documentation.\n", "content": "## Before you begin\nBefore you can view the hyperparameter logs for your model, you must [train it](/vertex-ai/docs/tabular-data/classification-regression/train-model) .\nTo perform this task, you must have the following [permissions](/iam/docs/overview#permissions) :\n- `logging.logServiceIndexes.list`on the project\n- `logging.logServices.list`on the project## Viewing training logs\nYou can use Google Cloud console to access the hyperparameter logs of the final model and the hyperparameter logs of the tuning trials.\n- In the Google Cloud console, go to the Vertex AI **Models** page. [Go to Models page](https://console.cloud.google.com/vertex-ai/models) \n- In the **Region** drop-down, select the region where your model is located.\n- From the list of models, select your model.\n- Select your model's version number.\n- Open the **Version Details** tab.\n- To see the hyperparameter log of the final model, go to the **Model hyperparameters** row and click **Model** .- There is just one log entry. Expand the payload as shown below. For details, see [Log fields](#reading-logs) .\n- To see the hyperparameter log of the tuning trials, go to the **Model hyperparameters** row and click **Trials** .- There is one entry for each of the tuning trials. Expand the payload as shown below. For details, see [Log fields](#reading-logs) .\n## Log fields\nActivity logs are structured as described in the [LogEntry](/logging/docs/exported_logs#the_logentry_type) type documentation.\nVertex AI model logs have, among other fields:\n- `labels`: The`log_type`field is set to`automl_tables`.\n- `jsonPayload`: The specific details of the log entry, provided in JSON object format. For details, see [Payload contents for the hyperparameter log of the final model](#final-payload) or [Payload contents for the hyperparameter log of a tuning trial](#trial-payload) .\n- `timestamp`: The date and time when the model was created or the trial was run.\n### Payload contents for the hyperparameter log of the final model\nThe `jsonPayload` field for the hyperparameter log of the final model contains a `modelParameters` field. This field contains one entry for each model that contributes to the final ensemble model. Each entry has a `hyperparameters` field, whose contents depend on the model type. For details, see [List of hyperparameters](#hps) .\n### Payload contents for the hyperparameter log of a tuning trial\nThe `jsonPayload` field for the hyperparameter log of a tuning trial contains the following fields:\n| Field     | Type | Description                                                        |\n|:-----------------------|:-------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| modelStructure   | JSON | A description of the Vertex AI model structure. This field contains a modelParameters field. The modelParameters field has a hyperparameters field, whose contents depend on the model type. For details, see List of hyperparameters. |\n| trainingObjectivePoint | JSON | The optimization objective used for model training. This entry includes a timestamp and an objective value at the time the log entry was recorded.                      |\n### List of hyperparameters\nThe hyperparameter data provided in the logs differ for each type of model. The following sections describe the hyperparameters for each model type.- Tree L1 regularization\n- Tree L2 regularization\n- Max tree depth\n- Model type:`GBDT`\n- Number of trees\n- Tree complexity- Dropout rate\n- Enable batchNorm (`True`or`False`)\n- Enable embedding L1 (`True`or`False`)\n- Enable embedding L2 (`True`or`False`)\n- Enable L1 (`True`or`False`)\n- Enable L2 (`True`or`False`)\n- Enable layerNorm (`True`or`False`)\n- Enable numerical embedding (`True`or`False`)\n- Hidden layer size\n- Model type:`nn`\n- Normalize numerical column (`True`or`False`)\n- Number of cross layers\n- Number of hidden layers\n- Skip connections type (`dense`,`disable`,`concat`, or`slice_or_padding`)## What's next\nOnce you're ready to make predictions with your classification or regression model, you have two options:\n- [Make online (real-time) predictions using your model](/vertex-ai/docs/tabular-data/classification-regression/get-online-predictions) .\n- [Get batch predictions directly from your model](/vertex-ai/docs/tabular-data/classification-regression/get-batch-predictions) .\nAdditionally, you can:\n- [Evaluate your model](/vertex-ai/docs/tabular-data/classification-regression/evaluate-model) .\n- [Review general information about Cloud Logging](/logging/docs) .\n- You can export your logs to BigQuery, Cloud Storage, or Pub/Sub. Read [Configuring Logs Export](/logging/docs/export/configure_export) in the Logging documentation to learn how to export activity logs.", "guide": "Vertex AI"}