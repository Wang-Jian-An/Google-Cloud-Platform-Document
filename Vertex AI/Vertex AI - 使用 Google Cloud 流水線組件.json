{"title": "Vertex AI - \u4f7f\u7528 Google Cloud \u6d41\u6c34\u7dda\u7d44\u4ef6", "url": "https://cloud.google.com/vertex-ai/docs/pipelines/use-components?hl=zh-cn", "abstract": "# Vertex AI - \u4f7f\u7528 Google Cloud \u6d41\u6c34\u7dda\u7d44\u4ef6\n\u4f7f\u7528 Google Cloud \u6d41\u6c34\u7dda\u7d44\u4ef6 (GCPC) \u6642\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b Vertex AI \u548c Google Cloud \u529f\u80fd\u4f86\u4fdd\u8b77\u60a8\u7684\u7d44\u4ef6\u548c\u5de5\u4ef6\u3002\n", "content": "## \u7232\u7d44\u4ef6\u6307\u5b9a\u670d\u52d9\u8cec\u865f\n\u4f7f\u7528\u7d44\u4ef6\u6642\uff0c\u60a8\u53ef\u4ee5\u9078\u64c7\u6307\u5b9a\u670d\u52d9\u8cec\u865f\u3002 \u60a8\u7684\u7d44\u4ef6\u6703\u5553\u52d5\u4e26\u4ee5\u6b64\u670d\u52d9\u8cec\u865f\u7684\u6b0a\u9650\u57f7\u884c\u3002 \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u78bc\u6307\u5b9a `ModelDeploy` \u7d44\u4ef6\u7684\u670d\u52d9\u8cec\u865f\uff1a\n```\nmodel_deploy_op = ModelDeployOp(model=training_job_run_op.outputs[\"model\"],\u00a0 \u00a0 endpoint=endpoint_op.outputs[\"endpoint\"],\u00a0 \u00a0 automatic_resources_min_replica_count=1,\u00a0 \u00a0 automatic_resources_max_replica_count=1,\u00a0 \u00a0 service_account=\"SERVICE_ACCOUNT_ID@PROJECT_ID.iam.gserviceaccount.com\")\n```\n\u8acb\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a\n- \uff1a\u670d\u52d9\u8cec\u865f\u7684 ID\u3002\n- \uff1a\u9805\u76ee\u7684 ID\u3002\n\u8a73\u7d30\u77ad\u89e3\u5982\u4f55 [\u4f7f\u7528\u81ea\u5b9a\u7fa9\u670d\u52d9\u8cec\u865f](https://cloud.google.com/vertex-ai/docs/general/custom-service-account?hl=zh-cn) \u548c [\u914d\u7f6e\u670d\u52d9\u8cec\u865f](https://cloud.google.com/vertex-ai/docs/pipelines/configure-project?hl=zh-cn#service-account) \uff0c\u4ee5\u8207 Vertex AI Pipelines \u642d\u914d\u4f7f\u7528\u3002\n## \u4f7f\u7528 VPC Service Controls \u9632\u6b62\u6578\u64da\u6ef2\u6f0f\n[VPC Service Controls](https://cloud.google.com/vpc-service-controls/docs/overview?hl=zh-cn) \u53ef\u5e6b\u52a9\u60a8\u964d\u4f4e Vertex AI Pipelines \u4e2d\u767c\u751f\u6578\u64da\u6ef2\u6f0f\u7684\u98a8\u96aa\u3002\u7576\u60a8\u4f7f\u7528 VPC Service Controls \u5275\u5efa\u670d\u52d9\u908a\u754c\u6642\uff0c\u7cfb\u7d71\u6703\u81ea\u52d5\u4fdd\u8b77\u7531 Vertex AI Pipelines \u548c Google Cloud \u6d41\u6c34\u7dda\u7d44\u4ef6\u5275\u5efa\u7684\u8cc7\u6e90\u548c\u6578\u64da\u3002\u4f8b\u5982\uff0c\u7576\u60a8\u4f7f\u7528 VPC Service Controls \u4fdd\u8b77\u60a8\u7684\u6d41\u6c34\u7dda\u6642\uff0c\u4ee5\u4e0b\u5de5\u4ef6\u7121\u6cd5\u96e2\u958b\u670d\u52d9\u908a\u754c\uff1a\n- \u91dd\u5c0d AutoML \u6a21\u578b\u8a13\u7df4\u6578\u64da\n- \u60a8\u5275\u5efa\u7684\u6a21\u578b\n- \u6279\u91cf\u9810\u6e2c\u8acb\u6c42\u7684\u7d50\u679c\n\u8a73\u7d30\u77ad\u89e3 [\u5c07 VPC Service Controls \u8207 Vertex AI \u642d\u914d\u4f7f\u7528](https://cloud.google.com/vertex-ai/docs/general/vpc-service-controls?hl=zh-cn) \u3002\n## \u8a2d\u7f6e VPC \u7db2\u7d61\u5c0d\u7b49\u4e92\u9023\n\u60a8\u53ef\u4ee5\u901a\u904e\u63d0\u4f9b\u984d\u5916\u53c3\u6578\u4f86\u914d\u7f6e Google Cloud \u6d41\u6c34\u7dda\u7d44\u4ef6\uff0c\u4ee5\u8207 Virtual Private Cloud \u5efa\u7acb\u5c0d\u7b49\u4e92\u9023\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u78bc\u7232 `EndpointCreate` \u7d44\u4ef6\u6307\u5b9a VPC \u7db2\u7d61\uff1a\n```\nendpoint_create_op = EndpointCreateOp(\u00a0 \u00a0 project=\"PROJECT_ID\",\u00a0 \u00a0 location=\"REGION\",\u00a0 \u00a0 display_name=\"endpoint-display-name\",\u00a0 \u00a0 network=\"NETWORK\")\n```\n\u8acb\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a\n- \uff1a\u9805\u76ee\u7684 ID\u3002\n- \uff1a\u60a8\u5728\u5176\u4e2d\u4f7f\u7528 Vertex AI \u7684\u5340\u57df\u3002\n- \uff1aVPC \u7db2\u7d61\uff0c\u4f8b\u5982`\"projects/12345/global/networks/myVPC\"`\u3002\n\u8a73\u7d30\u77ad\u89e3 [Vertex AI \u4e2d\u7684 VPC \u7db2\u7d61\u5c0d\u7b49\u4e92\u9023](https://cloud.google.com/vertex-ai/docs/general/vpc-peering?hl=zh-cn) \u3002\n## \u4f7f\u7528\u5ba2\u6236\u7ba1\u7406\u7684\u52a0\u5bc6\u5bc6\u9470 (CMEK)\n\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0cGoogle Cloud \u6703\u4f7f\u7528 Google \u7ba1\u7406\u7684\u52a0\u5bc6\u5bc6\u9470\u81ea\u52d5 [\u52a0\u5bc6\u975c\u614b\u6578\u64da](https://cloud.google.com/security/encryption/default-encryption?hl=zh-cn) \u3002\u5982\u679c\u60a8\u5c0d\u4fdd\u8b77\u6578\u64da\u7684\u5bc6\u9470\u6709\u7279\u5b9a\u7684\u5408\u898f\u6027\u6216\u76e3\u7ba1\u8981\u6c42\uff0c\u5247\u53ef\u4ee5\u5c07\u5ba2\u6236\u7ba1\u7406\u7684\u52a0\u5bc6\u5bc6\u9470 (CMEK) \u7528\u65bc\u8cc7\u6e90\u3002 \u5728\u958b\u59cb\u4f7f\u7528\u5ba2\u6236\u7ba1\u7406\u7684\u52a0\u5bc6\u5bc6\u9470\u4e4b\u524d\uff0c\u8acb\u5148\u4e86\u89e3 [CMEK \u5728 Vertex AI \u4e0a\u7684\u512a\u52e2](https://cloud.google.com/vertex-ai/docs/general/cmek?hl=zh-cn#benefits) \u4ee5\u53ca [CMEK \u652f\u6301\u7684\u7576\u524d\u8cc7\u6e90](https://cloud.google.com/vertex-ai/docs/general/cmek?hl=zh-cn#resource-list) \u3002\n### \u4f7f\u7528 CMEK \u914d\u7f6e\u7d44\u4ef6\n\u5728 [Cloud Key Management Service](https://cloud.google.com/vertex-ai/docs/general/cmek?hl=zh-cn#configure-cmek) \u4e2d\u5275\u5efa\u5bc6\u9470\u74b0\u548c\u5bc6\u9470\u4e26\u6388\u4e88\u5bc6\u9470\u7684 Vertex AI \u52a0\u5bc6\u8005\u548c\u89e3\u5bc6\u8005\u6b0a\u9650\u5f8c\uff0c\u60a8\u53ef\u4ee5\u5c07\u60a8\u7684\u5bc6\u9470\u6307\u5b9a\u7232\u5275\u5efa\u53c3\u6578\u4e4b\u4e00\uff0c\u4ee5\u5275\u5efa\u652f\u6301 CMEK \u7684\u65b0\u7d44\u4ef6\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u78bc\u7232 `ModelBatchPredict` \u7d44\u4ef6\u6307\u5b9a\u5bc6\u9470\uff1a\n```\nmodel_batch_predict_op = ModelBatchPredictOp(project=\"PROJECT_ID\",\u00a0 \u00a0 model=model_upload_op.outputs[\"model\"],\u00a0 \u00a0 encryption_spec_key_name=\"projects/PROJECT_ID/locations/LOCATION_ID/keyRings/KEY_RING_NAME/cryptoKeys/KEY_NAME\")\n```\n\u8acb\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a\n- \uff1a\u60a8\u7684 Google Cloud \u9805\u76ee ID\u3002\n- \uff1a\u6709\u6548\u7684\u4f4d\u7f6e\u6216\u5340\u57df\u6a19\u8b58\u7b26\uff0c\u4f8b\u5982`us-central1`\u3002\n- \uff1aCMEK \u7684\u5bc6\u9470\u74b0\u540d\u7a31\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5bc6\u9470\u74b0\uff0c\u8acb\u53c3\u95b1 [Cloud KMS \u8cc7\u6e90](https://cloud.google.com/kms/docs/resource-hierarchy?hl=zh-cn#key_rings) \u3002\n- \uff1aCMEK \u5bc6\u9470\u540d\u7a31\u3002\n**\u6ce8\u610f** \uff1a\u975e Vertex AI \u7d44\u4ef6\u7684 Google Cloud \u7d44\u4ef6\u53ef\u80fd\u9700\u8981\u5176\u4ed6\u6b0a\u9650\u3002\u4f8b\u5982\uff0cBigQuery \u7d44\u4ef6\u53ef\u80fd\u9700\u8981 [\u52a0\u5bc6\u548c\u89e3\u5bc6\u6b0a\u9650](https://cloud.google.com/bigquery/docs/customer-managed-encryption?hl=zh-cn#grant_permission) \u3002\u6b64\u5916\uff0cCMEK \u5bc6\u9470\u7684\u4f4d\u7f6e\u5fc5\u9808\u8207\u7d44\u4ef6\u7684\u4f4d\u7f6e\u76f8\u540c\u3002\u6bd4\u65b9\u8aaa\uff0c\u5982\u679c BigQuery \u7d44\u4ef6\u5f9e\u4f4d\u65bc [\u591a\u5340\u57df\u7f8e\u570b\u4f4d\u7f6e](https://cloud.google.com/bigquery/docs/locations?hl=zh-cn#multi-regional_locations) \u7684\u6578\u64da\u96c6\u52a0\u8f09\u6578\u64da\uff0c\u5247 CMEK \u5bc6\u9470\u9084\u5fc5\u9808\u4f4d\u65bc\u591a\u5340\u57df\u7f8e\u570b\u4f4d\u7f6e\u3002\n## \u5728\u7d44\u4ef6\u4e2d\u4f7f\u7528\u6216\u751f\u6210\u5de5\u4ef6\nGoogle Cloud \u6d41\u6c34\u7dda\u7d44\u4ef6 SDK \u5b9a\u7fa9\u4e86\u4e00\u7d44\u7528\u4f5c\u7d44\u4ef6\u8f38\u5165\u548c\u8f38\u51fa\u7684 [\u6a5f\u5668\u5b78\u7fd2\u5143\u6578\u64da\u5de5\u4ef6\u985e\u578b](https://cloud.google.com/vertex-ai/docs/pipelines/artifact-types?hl=zh-cn) \u3002\u67d0\u4e9b Google Cloud \u6d41\u6c34\u7dda\u7d44\u4ef6\u6703\u5c07\u9019\u4e9b\u5de5\u4ef6\u7528\u4f5c\u8f38\u5165\u6216\u751f\u6210\u7232\u8f38\u51fa\u3002\n\u672c\u9801\u9762\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528\u548c\u751f\u6210\u9019\u4e9b\u5de5\u4ef6\u3002\n### \u4f7f\u7528\u6a5f\u5668\u5b78\u7fd2\u5de5\u4ef6\n\u5de5\u4ef6\u7684\u5143\u6578\u64da\u53ef\u7528\u4f5c\u7d44\u4ef6\u7684\u8f38\u5165\u3002\u5982\u9700\u6e96\u5099\u5de5\u4ef6\u4ee5\u4f5c\u7232\u8f38\u5165\u4f7f\u7528\uff0c\u60a8\u5fc5\u9808\u63d0\u53d6\u5de5\u4ef6\u4e26\u5c07\u5176\u653e\u5165\u7d44\u4ef6 YAML \u6587\u4ef6\u4e2d\u3002\n\u6bd4\u65b9\u8aaa\uff0c [ModelUploadOp](https://google-cloud-pipeline-components.readthedocs.io/en/google-cloud-pipeline-components-2.8.0/api/v1/model.html#v1.model.ModelUploadOp) \u7d44\u4ef6\u6703\u751f\u6210\u53ef\u4f9b [ModelDeployOp](https://github.com/kubeflow/pipelines/blob/google-cloud-pipeline-components-0.1.9/components/google-cloud/google_cloud_pipeline_components/aiplatform/endpoint/deploy_model/component.yaml#L137) \u7d44\u4ef6\u4f7f\u7528\u7684 `google.VertexModel` \u5de5\u4ef6\u3002\u5728\u7d44\u4ef6 YAML \u6587\u4ef6\u4e2d\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u78bc\uff0c\u5f9e\u8f38\u5165\uff08\u5f15\u7528\uff09\u4e2d\u6aa2\u7d22 Vertex AI `Model` \u8cc7\u6e90\uff1a\n```\n\"model\": \"',\"{{$.inputs.artifacts['model'].metadata['resourceName']}}\", '\"'\n```\n\u5982\u9700\u67e5\u770b\u5de5\u4ef6\u5143\u6578\u64da\u7684\u5b8c\u6574\u67b6\u69cb\uff0c\u8acb\u53c3\u95b1 Kubeflow GitHub \u4ee3\u78bc\u5eab\u4e2d\u7684 [artifact_types.py \u6587\u4ef6](https://github.com/kubeflow/pipelines/blob/master/components/google-cloud/google_cloud_pipeline_components/types/artifact_types.py) \u3002\n```\nfrom kfp.dsl import Artifact, Input@dsl.componentdef classification_model_eval_metrics(\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str, \u00a0# \"us-central1\",\u00a0 \u00a0 model: Input[Artifact],) :\u00a0 \u00a0# Consumes the `resourceName` metadata\u00a0 \u00a0model_resource_path = model.metadata[\"resourceName\"]\n```\n\u5982\u9700\u67e5\u770b\u5982\u4f55\u4f7f\u7528 Vertex ML Metadata \u5de5\u4ef6\u985e\u578b\u7684\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528\u8868\u683c\u6578\u64da\u548c Vertex AI AutoML \u4f86\u8a13\u7df4\u5206\u985e\u6a21\u578b](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/pipelines/automl_tabular_classification_beans.ipynb) \u3002\n### \u5275\u5efa\u6a5f\u5668\u5b78\u7fd2\u5de5\u4ef6\n\u4ee5\u4e0b\u4ee3\u78bc\u793a\u4f8b\u4ecb\u7d39\u77ad\u5982\u4f55\u5275\u5efa\u53ef\u7531 Vertex ML \u5143\u6578\u64da\u5de5\u4ef6\u63a5\u53d7\u4f5c\u7232\u8f38\u5165\u7684 GCPC \u7d44\u4ef6\u3002\n\u4ee5\u4e0b\u793a\u4f8b\u6703\u5275\u5efa\u4e00\u500b\u5c0e\u5165\u7a0b\u5e8f\u7bc0\u9ede\uff0c\u4ee5\u5411 Vertex ML Metadata \u8a3b\u518a\u65b0\u7684\u5de5\u4ef6\u689d\u76ee\u3002\u5c0e\u5165\u7a0b\u5e8f\u7bc0\u9ede\u5c07\u5de5\u4ef6\u7684 URI \u548c\u5143\u6578\u64da\u4f5c\u7232\u539f\u8a9e\u63a5\u53d7\uff0c\u4e26\u5c07\u5176\u6253\u5305\u5230\u5de5\u4ef6\u4e2d\u3002\n```\nfrom google_cloud_pipeline_components import v1from google_cloud_pipeline_components.types import artifact_typesfrom kfp.components import importer_nodefrom kfp import dsl@dsl.pipeline(name=_PIPELINE_NAME)def pipeline():\u00a0 # Using importer and UnmanagedContainerModel artifact for model upload\u00a0 # component.\u00a0 importer_spec = importer_node.importer(\u00a0 \u00a0 \u00a0 artifact_uri='gs://managed-pipeline-gcpc-e2e-test/automl-tabular/model',\u00a0 \u00a0 \u00a0 artifact_class=artifact_types.UnmanagedContainerModel,\u00a0 \u00a0 \u00a0 metadata={\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'containerSpec': {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'imageUri':\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'us-docker.pkg.dev/vertex-ai/automl-tabular/prediction-server:prod'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 })\u00a0 # Consuming the UnmanagedContainerModel artifact for the previous step\u00a0 model_upload_with_artifact_op = v1.model.ModelUploadOp(\u00a0 \u00a0 \u00a0 project=_GCP_PROJECT_ID,\u00a0 \u00a0 \u00a0 location=_GCP_REGION,\u00a0 \u00a0 \u00a0 display_name=_MODEL_DISPLAY_NAME,\u00a0 \u00a0 \u00a0 unmanaged_container_model=importer_spec.outputs['artifact'])\n```\n\u4ee5\u4e0b\u793a\u4f8b\u4ecb\u7d39\u77ad\u5982\u4f55\u76f4\u63a5\u5f9e Python \u7d44\u4ef6\u8f38\u51fa Vertex ML Metadata \u5de5\u4ef6\u3002\n```\nfrom google_cloud_pipeline_components import v1from kfp.components import importer_nodefrom kfp import dsl@dsl.component(\u00a0 \u00a0 base_image='python:3.9',\u00a0 \u00a0 packages_to_install=['google-cloud-aiplatform'],)# Note currently KFP SDK doesn't support outputting artifacts in `google` namespace.# Use the base type dsl.Artifact instead.def return_unmanaged_model(model: dsl.Output[dsl.Artifact]):\u00a0 model.metadata['containerSpec'] = {\u00a0 \u00a0 \u00a0 'imageUri':\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'us-docker.pkg.dev/vertex-ai/automl-tabular/prediction-server:prod'\u00a0 }\u00a0 model.uri = f'gs://automl-tabular-pipeline/automl-tabular/model'@dsl.pipeline(name=_PIPELINE_NAME)def pipeline():\u00a0 unmanaged_model_op = return_unmanaged_model()\u00a0 # Consuming the UnmanagedContainerModel artifact for the previous step\u00a0 model_upload_with_artifact_op = v1.model.ModelUploadOp(\u00a0 \u00a0 \u00a0 project=_GCP_PROJECT_ID,\u00a0 \u00a0 \u00a0 location=_GCP_REGION,\u00a0 \u00a0 \u00a0 display_name=_MODEL_DISPLAY_NAME,\u00a0 \u00a0 \u00a0 unmanaged_container_model=unmanaged_model_op.outputs['model'])\n```\n\u4ee5\u4e0b\u793a\u4f8b\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528 [artifact_types.py](https://github.com/kubeflow/pipelines/blob/master/components/google-cloud/google_cloud_pipeline_components/types/artifact_types.py) \u5be6\u7528\u7a0b\u5e8f\u985e\u5f9e\u57fa\u65bc\u5bb9\u5668\u7684\u7d44\u4ef6\u751f\u6210 [VertexBatchPredictionJob](https://google-cloud-pipeline-components.readthedocs.io/en/google-cloud-pipeline-components-2.8.0/api/artifact_types.html#google_cloud_pipeline_components.types.artifact_types.VertexBatchPredictionJob) \u5de5\u4ef6\u4f5c\u7232\u8f38\u51fa\u3002\n```\nbp_job_artifact = VertexBatchPredictionJob(\u00a0 \u00a0 'batchpredictionjob', vertex_uri_prefix + get_job_response.name,\u00a0 \u00a0 get_job_response.name, get_job_response.output_info.bigquery_output_table,\u00a0 \u00a0 get_job_response.output_info.bigquery_output_dataset,\u00a0 \u00a0 get_job_response.output_info.gcs_output_directory)\u00a0 \u00a0 output_artifacts = executor_input_json.get('outputs', {}).get('artifacts', {})\u00a0 \u00a0 executor_output['artifacts'] = bp_job_artifact.to_executor_output_artifact(output_artifacts[bp_job_artifact.name])\n```", "guide": "Vertex AI"}