{"title": "Vertex AI - About Vertex AI Feature Store", "url": "https://cloud.google.com/vertex-ai/docs/featurestore/latest/overview", "abstract": "# Vertex AI - About Vertex AI Feature Store\nVertex AI Feature Store is a managed, cloud-native feature store service that's integral to Vertex AI. It streamlines your ML feature management and online serving processes by letting you manage your feature data in a BigQuery table or view. You can then serve features online directly from the BigQuery data source.\nVertex AI Feature Store provisions resources that let you set up online serving by specifying your feature data sources. It then acts as a metadata layer interfacing with the BigQuery data sources and serves the latest feature values directly from BigQuery for online predictions at low latencies.\nIn Vertex AI Feature Store, the BigQuery tables or views containing the feature data collectively form the . You can maintain feature values, including historical feature data, in the offline store. Because all the feature data is maintained in BigQuery, Vertex AI Feature Store doesn't need to provision a separate offline store within Vertex AI. Moreover, if you want to use the data in the offline store to train ML models, you can use the APIs and capabilities in BigQuery to export or fetch the data.\nThe workflow to set up and start online serving using Vertex AI Feature Store can be summarized as follows:\n- Prepare your data source in BigQuery.\n- Optional: Register your data sources by creating feature groups and features.\n- Set up online store and feature view resources to connect the feature data sources with online serving clusters.\n- Serve the latest feature values online from a feature view.", "content": "## Vertex AI Feature Store data model and resources\nThis section explains the data models and resources associated with the following aspects of Vertex AI Feature Store:\n- [Data source preparation in BigQuery](#data_source_prep) \n- [Feature Registry setup](#feature_registry_setup) \n- [Online serving setup](#online_serving_setup) \n- [Online serving](#online_serving) \n### Data source preparation in BigQuery\nDuring online serving, Vertex AI Feature Store uses feature data from BigQuery data sources. Before you set up Feature Registry or online serving resources, you must store your feature data in one or more BigQuery tables or views.\nWithin a BigQuery table or view, each column represents a feature. Each row contains feature values corresponding to a unique ID. For more information about how to prepare the feature data in BigQuery, see [Prepare data source](/vertex-ai/docs/featurestore/latest/prepare-data-source) .\nFor example, in figure 1, the BigQuery table includes the following columns:\n- **f1 and f2** : Feature columns.\n- **entity_id** : An ID column containing the unique IDs to identify each feature record.\n- **feature_timestamp:** A timestamp column.Because you prepare the data source in BigQuery and not in Vertex AI, you don't need to create any Vertex AI resources at this stage.\n### Feature Registry setup\nAfter you've prepared your data sources in BigQuery, you can register those data sources, including specific feature columns, in the Feature Registry.\nRegistering your features is optional. You can serve features online even if you don't add your BigQuery data sources to the Feature Registry. However, registering your features is advantageous in the following scenarios:\n- Your data might contain multiple instances of the same entity ID, and you need to prepare your data in a time-series format with a timestamp column. When you register your features, Vertex AI Feature Store looks up the timestamp and serves only the latest feature values.\n- You want to register specific feature columns from a data source.\n- You want to aggregate specific columns from multiple data sources to define a feature view instance.\n**Caution:** If you choose not to register your features, you must ensure that every row contains a unique value in the `ID` column. For more information, see [Data source preparation guidelines](/vertex-ai/docs/featurestore/latest/prepare-data-source#guidelines) .\nTo register your feature data in the Feature Registry, you need to create the following Vertex AI Feature Store resources:\n- **Feature group** ( [FeatureGroup](/vertex-ai/docs/reference/rest/v1/projects.locations.featureGroups#resource:-featuregroup) ): A [FeatureGroup](/vertex-ai/docs/reference/rest/v1/projects.locations.featureGroups#resource:-featuregroup) resource is associated with a specific BigQuery source table or view. It represents a logical grouping of feature columns, which are represented by `Feature` resources. For information about how to create a feature group, see [Create a feature group](/vertex-ai/docs/featurestore/latest/create-featuregroup) .\n- **Feature** ( [Feature](/vertex-ai/docs/reference/rest/v1/projects.locations.featureGroups.features#resource:-feature) ): A [Feature](/vertex-ai/docs/reference/rest/v1/projects.locations.featureGroups.features#resource:-feature) resource represents a specific column containing feature values from the feature data source associated with its parent `FeatureGroup` resource. For information about how to create features within a feature group, see [Create a feature](/vertex-ai/docs/featurestore/latest/create-feature) .\nFor example, figure 2 illustrates a feature group including feature columns `f1` and `f2` , sourced from a BigQuery table associated with the feature group. The BigQuery data source contains four feature columns\u2014two columns are aggregated to form the feature group.### Online serving setup\nTo serve features for online predictions, you must define and configure at least one online serving cluster, and associate it with your feature data source or Feature Registry resources. In Vertex AI Feature Store, the online serving cluster is called an instance. An online store instance can contain multiple instances, where each feature view is associated with a feature data source.\nTo set up online serving, you must create the following Vertex AI Feature Store resources:\n- **Online store** ( [FeatureOnlineStore](/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores#resource:-featureOnlineStore) ): A [FeatureOnlineStore](/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores#resource:-featureOnlineStore) resource represents an online serving cluster instance and contains the online serving configuration, such as the number of online serving nodes. An online store instance doesn't specify the source of the feature data, but contains `FeatureView` resources that specify the feature data sources in either BigQuery or the Feature Registry. For information about how to create an online store instance, see [Create an online store instance](/vertex-ai/docs/featurestore/latest/create-onlinestore) .\n- **Feature view** ( [FeatureView](/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores.featureViews#resource:-featureView) ): A [FeatureView](/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores.featureViews#resource:-featureView) resource is a logical collection of features in an online store instance. When you create a feature view, you can specify the location of the feature data source in either of the following ways:- Associate one or more feature groups and features from the Feature Registry. A feature group specifies the location of the BigQuery data source. A feature within the feature group points to a specific feature column within that data source.\n- Alternatively, associate a BigQuery source table or view.\nFor information about how to create feature view instances within an online store, see [Create a feature view](/vertex-ai/docs/featurestore/latest/create-featureview) .\nFor example, figure 3 illustrates a feature view comprising feature columns `f2` and `f4` , which are sourced from two separate feature groups associated with a BigQuery table.### Online serving\nVertex AI Feature Store provides the following types of online serving for real-time online predictions:\n- **Bigtable online serving** is useful for serving large data volumes (terabytes of data). It's similar to online serving in Vertex AI Feature Store (Legacy) and provides improved caching to mitigate hotspotting.\n- **Optimized online serving** (in preview) lets you online serve features at ultra-low latencies. Note that although online serving latencies depend on the workload, Optimized online serving can provide lower latencies than Bigtable online serving and is recommended for most scenarios. However, if you need to serve large volumes of data that's frequently updated, use Bigtable online serving.To use Optimized online serving, you need to configure either a public endpoint or a dedicated Private Service Connect endpoint.\nTo learn how to set up online serving in Vertex AI Feature Store after you set up features, see [Online serving types](/vertex-ai/docs/featurestore/latest/online-serving-types) .\n## Offline serving for batch predictions or model training\nBecause you don't need to copy or import your feature data from BigQuery to a separate offline store in Vertex AI, you can use the data management and export capabilities of BigQuery to do the following:\n- Query feature data, including [historical data at a point in time](/bigquery/docs/access-historical-data#query_data_at_a_point_in_time) .\n- [Preprocess](/bigquery/docs/preprocess-overview) and [export](/bigquery/docs/exporting-data) feature data for model training and batch predictions.\nFor more information about machine learning using BigQuery, see [BigQuery ML introduction](/bigquery/docs/bqml-introduction) .\n## Vertex AI Feature Store terms\n### Terms related to feature engineering\n- Feature engineering is the process of transforming raw machine learning (ML) data into features that can be used to train ML models or to make predictions.\n- In machine learning (ML), a feature is a characteristic or attribute of an instance or entity that's used as an input to train an ML model or to make predictions.\n- A feature value corresponds to the actual and measurable value of a feature (attribute) of an instance or entity. A collection of feature values for the unique entity represent the feature record corresponding to the entity.\n- A feature timestamp indicates when the set of feature values in a specific feature record for an entity were generated.\n- A feature record is an aggregation of all feature values that describe the attributes of a unique entity at a specific point in time.### Terms related to Feature Registry\n- A feature registry is a central interface for recording feature data sources that you want to serve for online predictions.\n- A feature group is a feature registry resource that corresponds to a BigQuery source table or view containing feature data. A feature view might contain features and can be thought of as a logical grouping of feature columns in the data source.### Terms related to feature serving\n- Feature serving is the process of exporting or fetching feature values for training or inference. In Vertex AI, there are two types of feature serving\u2014online serving and offline serving. Online serving retrieves the latest feature values of a subset of the feature data source for online predictions. Offline or batch serving exports high volumes of feature data for offline processing, such as ML model training.\n- The offline store is a storage facility storing recent and historical feature data, which is typically used for training ML models. An offline store also contains the latest feature values, which you can serve for online predictions.\n- In feature management, an online store is a storage facility for the latest feature values to be served for online predictions.\n- A feature view is a logical collection of features materialized from a BigQuery data source to an online store instance. A feature view stores and periodically refreshes the customer's feature data, which is refreshed periodically from the BigQuery source. A feature view is associated with the feature data storage either directly or through associations to feature registry resources.\n## Location constraints\nAll Vertex AI Feature Store resources must be located in the same region or the same multi-regional location as your BigQuery data source. For example, if the feature data source is located in `us-central1` , you must create your `FeatureOnlineStore` instance only in `us-central1` or in the `US` multi-region location.\n**Caution:** Using source data from dual-region buckets isn't supported.\n## Feature metadata\nVertex AI Feature Store is integrated with Dataplex to provide feature governance capabilities, including feature metadata. Online store instances, feature views, and feature groups are automatically registered as data assets in Data Catalog, a Dataplex feature that catalogs metadata from these resources. You can then use the metadata search capability of Dataplex to search for, view, and manage the metadata for these resources. For more information about searching for Vertex AI Feature Store resources in Dataplex, see [Search for resource metadata in Data Catalog](/vertex-ai/docs/featurestore/latest/search-feature-metadata) .\n### Feature labels\nYou can add labels to resources during or after the resource creation. For more information about adding labels to existing Vertex AI Feature Store resources, see [Update labels](/vertex-ai/docs/featurestore/latest/feature-labels) .\n### Resource version metadata\nVertex AI Feature Store only supports the version `0` for features.\n## Embedding management and vector retrieval\nVertex AI Feature Store supports embedding management. You can store embeddings in BigQuery as regular `double` arrays. Using the embedding management capabilities of Vertex AI Feature Store, you can perform vector similarity searches to retrieve entities that are approximate nearest neighbors for a specified entity or embedding value.\nTo use embedding management in Vertex AI Feature Store, you need to do the following:\n- Set up the BigQuery data source to support embeddings by including the `embedding` column. Optionally, include filtering and crowding columns. For more information, see [Data source preparation guidelines](/vertex-ai/docs/featurestore/latest/prepare-data-source#guidelines) .\n- Create an online store instance that supports embedding management. For more information about how to create an online store instance that supports embedding management, see [Configure embedding management for an online store](/vertex-ai/docs/featurestore/latest/create-onlinestore#config-embedding) .\n- Specify the `embedding` column while creating the feature view. For more information about how to create a feature view that supports embeddings, see [Configure vector retrieval for a feature view](/vertex-ai/docs/featurestore/latest/create-featureview#configure-vectorretrieval) .\nFor information about how to perform a vector similarity search in Vertex AI Feature Store, see [Perform a vector search for entities](/vertex-ai/docs/featurestore/latest/embeddings-search) .\n## Data retention\nVertex AI Feature Store retains the latest feature values for a unique ID, based on the timestamp associated with the feature values in the data source. There's no data retention limit in the online store.\nBecause the offline store is provisioned by BigQuery, data retention limits or quotas from BigQuery might apply to the feature data source, including historical feature values. [Learn more about quotas and limits in BigQuery](/bigquery/quotas) .\n## Quotas and limits\nVertex AI Feature Store enforces quotas and limits to help you manage resources by setting usage limits, and to protect the community of Google Cloud users by preventing unforeseen spikes in usage. To efficiently use Vertex AI Feature Store resources without hitting these constraints, review the [Vertex AI Feature Store quotas and limits](/vertex-ai/quotas#feature_store) .\n## Pricing\nFor information about resource usage pricing for Vertex AI Feature Store, see [Vertex AI Feature Store pricing](/vertex-ai/pricing#featurestore) .\n## Notebook tutorials\n### Online feature serving and fetching of BigQuery data with Vertex AI Feature Store\n| 0 | 1                                        |\n|----:|:---------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| nan | In this notebook, you learn how to use Vertex AI Feature Store for online serving and fetching of feature values in BigQuery. Run in Colab | View on GitHub |\n### Online feature serving and vector retrieval of BigQuery data with Vertex AI Feature Store (preview)\n| 0 | 1                                          |\n|----:|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| nan | In this notebook, you learn how to use Vertex AI Feature Store for online serving and vector retrieval of feature values in BigQuery. Run in Colab | View on GitHub |\n### Online feature serving and fetching of BigQuery data with Vertex AI Feature Store Optimized Serving (preview)\n| 0 | 1                                              |\n|----:|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| nan | In this notebook, you learn how to use Optimized online serving in Vertex AI Feature Store for serving and fetching of feature values from BigQuery. Run in Colab | View on GitHub |\n## What's next\n- Learn how to [set up your data in BigQuery](/vertex-ai/docs/featurestore/latest/prepare-data-source) .\n- Learn how to create [feature groups](/vertex-ai/docs/featurestore/latest/create-featuregroup) and [features](/vertex-ai/docs/featurestore/latest/create-feature) .\n- Learn how to [create an online store instance](/vertex-ai/docs/featurestore/latest/create-onlinestore) .", "guide": "Vertex AI"}