{"title": "Vertex AI - Migrate data to a new managed notebooks instance", "url": "https://cloud.google.com/vertex-ai/docs/workbench/managed/migrate", "abstract": "# Vertex AI - Migrate data to a new managed notebooks instance\n# Migrate data to a new managed notebooks instance\nVertex AI Workbench managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  managed notebooks will end and the ability to create managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/managed/migrate-to-instances) .\nThis page describes how to migrate data and files from an existing managed notebooks instance to a new one.\n", "content": "## When to migrate\nYou might want to migrate to a new managed notebooks instance for any of the following reasons:\n- To use new capabilities that are only available in a newer version.\n- To benefit from framework updates, package updates, and bug fixes that have been implemented in a newer version.\n- If you're unable to upgrade the environment of an existing instance. See the [requirements for upgrading the environment ofa managed notebooksinstance](/vertex-ai/docs/workbench/managed/upgrade#requirements) .## Migration options\nTo migrate data and files from one managed notebooks instance to another, consider using the following methods:\n- **Use GitHub** : Copy your data and files to a GitHub repository by using the Git extension for JupyterLab.\n- **Use Cloud Storage and the terminal** : Copy your data and files to Cloud Storage and then to another instance by using the terminal.\n- **Use Cloud Storage within JupyterLab notebooks** : Copy your data and files to Cloud Storage and then to another instance by running commands within your respective instances' notebook cells.\nThis guide describes how to migrate data and files by using Cloud Storage and the terminal.\n## Requirements\nYou must have terminal access to your managed notebooks instance. Terminal access is manually set when you create an instance. The terminal access setting cannot be changed after the instance is created.\n## Before you begin\n[Create a Cloud Storage bucket](/storage/docs/creating-buckets) in the same project where your managed notebooks instance is located.\n## Migrate your data to a new managed notebooks instance\nTo migrate data and files to a new managed notebooks instance by using Cloud Storage and the terminal, complete the following steps.\n- In your managed notebooks instance's JupyterLab interface, select **File\u00a0>New\u00a0> Terminal** to open a terminal window.\n- Use the [gsutil tool](/storage/docs/gsutil) to copy your user data to a Cloud Storage bucket. The following example command copies all of the files from your instance's `/home/jupyter/` directory to a directory in a Cloud Storage bucket.```\ngsutil cp -R /home/jupyter/* gs://BUCKET_NAMEPATH\n```Replace the following:- ``: the name of your Cloud Storage bucket\n- ``: the path to the directory where you want to copy your files, for example:`/copy/jupyter/`\n- [Createa managed notebooks instance](/vertex-ai/docs/workbench/managed/create-instance) .\n- In your new managed notebooks instance's JupyterLab interface, select **File\u00a0>New\u00a0> Terminal** to open a terminal window.\n- Use the `gsutil tool` to restore your data on the new instance. The following example command copies all of the files from a Cloud Storage directory to the your new instance's `/home/jupyter/` directory.```\ngsutil cp gs://BUCKET_NAMEPATH* /home/jupyter/\n```## What's next\n- Learn how to [manually upgrade the environment ofmanaged notebooks instances](/vertex-ai/docs/workbench/managed/upgrade) .", "guide": "Vertex AI"}