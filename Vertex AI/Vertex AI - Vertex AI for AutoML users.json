{"title": "Vertex AI - Vertex AI for AutoML users", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Vertex AI for AutoML users\nThis page provides comparisons between [legacy AutoML](/automl/docs) products and AutoML on Vertex AI to help legacy AutoML users understand how to use Vertex AI.\nCheck the tables that apply to your use case, and review the changes that are likely to impact your workflow.\n", "content": "## General usage\nThese differences are applicable to all Vertex AI users.\n| Operation       | Legacy AutoML                          | Vertex AI                                              |\n|:-----------------------------------|:-------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Model deployment     | You deploy a model directly to make it available for online predictions.           | You create an Endpoint object, which provides resources for serving online predictions. You then deploy the model to the endpoint. To request predictions, you call the predict() method. |\n| Using project number or project ID | Some parts of AutoML documentation show examples using project-number and others show examples using project-id. | Both project-number and project-id work in Vertex AI.                                  |\n## AutoML Natural Language users\nAutoML Natural Language uses the in Vertex AI.\n| Operation    | AutoML Natural Language                                                    | Vertex AI                                                                                         |\n|:----------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Training data formats | You can use CSV files to include inline text snippets or to reference documents. For entity extraction, you can use a CSV or JSON Lines file to reference documents (no in-line text support).          | You can use CSV or JSON Lines files, except for text entity extraction, to include in-line text snippets or to reference documents that are of type TXT. Entity extraction supports only JSON Lines files.                                         |\n| Dataset import  | You specify how to split your data for ML use (for TRAIN, TEST, and VALIDATION) by using a CSV file.                                | You specify ML use values in an optional column for CSV, in the same row as the data; or as a tag in JSON Lines in the same JSON object as the data. If you don't specify ML use values, your data is split automatically for training, testing, and validation. For sentiment analysis, CSV files must include the sentiment max value in the last column of each row. |\n| Dataset annotation | Annotations are added to the dataset at import time, or by using the Google Cloud console. If you want to use your data for another dataset with a different objective, you must create a new dataset with different annotations. | Annotations are grouped together as an AnnotationSet object. You can use different annotation sets with the same dataset.                                                             |\n| Storage costs   | You do not incur costs for datasets loaded into internal storage.                                         | When you create a dataset, your data is loaded into Cloud Storage in your project. You are charged for this storage. Learn more.                                                           |\n| Data labeling   | You load your labeling instructions into internal storage and include them in the task creation request. Annotations are standalone objects.                      | You provide labeling instructions by using a URL. Annotations are part of the Dataset object and can't be manipulated by using the API.                                                          |\n## AutoML Vision and AutoML Video Intelligence users\nIn Vertex AI, AutoML Vision and AutoML Video use the and s, respectively.\n| Operation    | AutoML Vision and AutoML Video                                                  | Vertex AI                                                               |\n|:-------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Data input format  | JSON Lines format is not supported.                                                 | JSON Lines format is supported for your data source.                                                    |\n| Data import (Video only) | You specify the ML use (TRAINING, TEST) for videos using a two-level CSV file.                                      | You specify ML use values in an optional column for CSV, in the same row as the data; or as a tag in JSON Lines in the same JSON object as the data. If you don't specify ML use values, your data is split automatically for training, testing, and validation. |\n| Dataset annotation  | Annotations are added to the dataset at import time, or by using the Google Cloud console. If you want to use your data for another dataset with a different objective, you must create a new dataset with different annotations. | Annotations are grouped together as an AnnotationSet object. You can use different annotation sets with the same dataset.                                   |\n| Storage costs   | You do not incur costs for datasets loaded into internal storage.                                         | When you create a dataset, your data is loaded into Cloud Storage in your project. You are charged for this storage. Learn more.                                 |\n| Data labeling   | You load your labeling instructions into internal storage and include them in the task creation request. Annotations are standalone objects.                      | You provide labeling instructions by using a URL. Annotations are part of the Dataset object and can't be manipulated by using the API.                               |\n## AutoML Tables users\nAutoML Tables uses the tabular in Vertex AI.\n| Operation         | AutoML Tables                                                     | Vertex AI                                                                                      |\n|:-------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Dataset creation       | Data is imported into internal storage; later updates to the data source do not affect the AutoML dataset.                             | The data source is referenced rather than imported; later updates to the data source are reflected if a model trained from that data source is retrained.                                                  |\n| Schema review        | When you import data into a dataset, statistics about your data are automatically generated.                                 | You must manually initiate statistics generation for your dataset.                                                                        |\n| Schema review        | When you create a dataset, you review its schema and make sure each feature set correctly. Future models trained from that dataset use this schema design unless you explicitly change it.         | When you train a model from a dataset, Vertex AI creates default transformations for each feature, which you can override if they are not correct for your data and objective. Transformations to the timestamp and numeric data type can fail due to invalid data; you can specify whether you want the entire row to be invalidated or only that column. |\n| Serving predictions from an exported model | Predictions from an exported regression model do not return a prediction interval.                                   | Prediction intervals are returned for predictions from exported regression models.                                                                    |\n| Feature importance       | Vertex Explainable AI provides similar functionality to AI Explanations for AutoML Tables. You can use global feature importance for your model, or feature importance (feature attributions) for your model's predictions. | Vertex Explainable AI provides similar functionality to AI Explanations for AutoML Tables. You can use global feature importance for your model, or feature importance (feature attributions) for your model's predictions.                                 |\n## API users\nFor detailed information about the API, see the [Vertex AI API reference documentation](/vertex-ai/docs/reference/rest) .\n| Operation or entity   | Legacy AutoML                       | Vertex AI                                              |\n|:----------------------------|:-------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Model Creation    | To create a model, you use the model.create() method, which returns a long-running operation.   | You create a TrainingPipeline object, which returns a training job.                               |\n| Using the client library | There is one API client for the API.                 | There are different API clients for each API resource.                                  |\n| Requesting predictions  | You request predictions by calling the predict() method on the model.         | You request predictions by calling the predict() method on the Endpoint resource.                           |\n| Online prediction endpoint | automl.googleapis.com and some products also supported eu-automl.googleapis.com      | In the following, replace REGION with the region that your prediction model is in. REGION-aiplatform.googleapis.com. For example: us-central1-aiplatform.googleapis.com      |\n| Schema and definition files | All inputs to the requests and responses are defined by the API service. Data formats are predefined. | Some request and response fields are defined in schema and definition files. Data formats are defined using predefined schema files. This enables flexibility for the API and data formats. |\n| Hostname     | automl.googleapis.com                     | aiplatform.googleapis.com                                          |\n| Regional hostname   | Not required for all products. For example: eu-automl.googleapis.com         | Required. For example: us-central1-aiplatform.googleapis.com                                 |\n## What's next\n- [AutoML model types](/vertex-ai/docs/start/automl-model-types) .", "guide": "Vertex AI"}