{"title": "Vertex AI - Configure your Google Cloud project for Vertex AI Pipelines", "url": "https://cloud.google.com/vertex-ai/docs/pipelines/configure-project", "abstract": "# Vertex AI - Configure your Google Cloud project for Vertex AI Pipelines\nBefore you use Vertex AI Pipelines to orchestrate your machine learning (ML) pipelines, you must set up your Google Cloud project. Some resources, such as the metadata store used by Vertex ML Metadata, are created in your Google Cloud project the first time that you run a pipeline.\nUse the following instructions to configure your project for Vertex AI Pipelines.\n- [Create your Google Cloud project and configure it for use withVertex AI Pipelines](#project) .\n- If you do not specify a service account, Vertex AI Pipelines uses the Compute Engine default service account to run your pipelines. For more information about the Compute Engine default service account, see [Using the Compute Engine Default Service Account](/compute/docs/access/create-enable-service-accounts-for-instances#using_the_default_service_account) .We recommend that you [create a service account to run your pipelines andthen grant this account granular permissions to the Google Cloud resourcesthat are needed to run your pipeline](#service-account) .\n- Vertex AI Pipelines uses Cloud Storage to store the artifacts of your pipeline runs. [Create a Cloud Storage bucketand grant your service account access to this bucket](#storage) .\n- Vertex AI Pipelines uses Vertex ML Metadata to store the metadata created by your pipeline runs. When you run a pipeline for the first time, if the metadata store of your project doesn't exist, Vertex AI creates your project's metadata store.If you want your data encrypted using a customer-managed encryption key (CMEK), you can manually [create your metadata store using aCMEK key](#create-metadata-store) before you run a pipeline. Otherwise, if there's no existing default metadata store in your project, Vertex AI creates your project's metadata store using the CMEK key used when you run the pipeline for the first time. After the metadata store is created, it uses a CMEK key that's different from the CMEK key used in a pipeline run.", "content": "## Set up your Google Cloud project\nUse the following instructions to create a Google Cloud project and configure it for use with Vertex AI Pipelines.## Configure a service account with granular permissions\nWhen you run a pipeline, you can specify a service account. Your pipeline run acts with the permissions of this service account.\nIf you do not specify a service account, your pipeline run uses the Compute Engine [default service account](/compute/docs/access/service-accounts#default_service_account) . For more information about the Compute Engine default service account, see [Using the Compute Engine Default Service Account](/compute/docs/access/create-enable-service-accounts-for-instances#using_the_default_service_account) .\n- Use the following instructions to create a service account and grant it granular permissions to Google Cloud resources.- Run the following command to create a service account.```\ngcloud iam service-accounts create SERVICE_ACCOUNT_ID \\\n --description=\"DESCRIPTION\" \\\n --display-name=\"DISPLAY_NAME\" \\\n --project=PROJECT_ID\n```Replace the following values:- : The ID for the service account.\n- : (Optional.) A description of the service account.\n- : The display name for this service account.\n- : The project to create your service account in.\nLearn more about [creating a service account](/iam/docs/creating-managing-service-accounts) .\n- Grant your service account access to Vertex AI. Note that it might take some time for the access change to propagate. For more information, see [Access change propagation](/iam/docs/access-change-propagation) .```\ngcloud projects add-iam-policy-binding PROJECT_ID \\\n --member=\"serviceAccount:SERVICE_ACCOUNT_ID@PROJECT_ID.iam.gserviceaccount.com\" \\\n --role=\"roles/aiplatform.user\"\n```Replace the following values:- : The project that your service account was created in.\n- : The ID for the service account.\n **Note:** The minimum set of permissions that are required to use Vertex AI Pipelines to run a pipeline are **aiplatform.metadataStores.get** , **storage.objects.create** , and **storage.objects.get** . The first time you run a pipeline in a new project you must also add the **aiplatform.metadataStores.create** permission. To run a pipeline with minimal permissions, use Identity and Access Management to [create a custom role](/iam/docs/creating-custom-roles) with these permissions, and grant your service account access to that role instead of **roles/aiplatform.user** .\n- You can use Artifact Registry to host container images and Kubeflow Pipelines templates.For more information about Artifact Registry, see the [Artifact Registry documentation](/artifact-registry/docs/overview) .\n- Grant your service account access to any Google Cloud resources that you use in your pipelines.```\ngcloud projects add-iam-policy-binding PROJECT_ID \\\n --member=\"serviceAccount:SERVICE_ACCOUNT_ID@PROJECT_ID.iam.gserviceaccount.com\" \\\n --role=\"ROLE_NAME\"\n```Replace the following values:- : The project that your service account was created in.\n- : The ID for the service account.\n- : The Identity and Access Management role to grant to this service account.\n- To use Vertex AI Pipelines to run pipelines with this service account, run the following command to grant your user account the **roles/iam.serviceAccountUser** role for your service account.```\ngcloud iam service-accounts add-iam-policy-binding \\\n SERVICE_ACCOUNT_ID@PROJECT_ID.iam.gserviceaccount.com \\\n --member=\"user:USER_EMAIL\" \\\n --role=\"roles/iam.serviceAccountUser\"\n```Replace the following values:- : The ID for the service account.\n- : The project that your service account was created in.\n- : The email address of the user that runs pipelines as this service account.\n- If you prefer to use the Compute Engine default service account to run your pipelines, enable the Compute Engine API and grant your default service account access to Vertex AI. Note that it might take some time for the access change to propagate. For more information, see [Access change propagation](/iam/docs/access-change-propagation) .```\ngcloud projects add-iam-policy-binding PROJECT_ID \\\n --member=\"serviceAccount:PROJECT_ID-compute@developer.gserviceaccount.com\" \\\n --role=\"roles/aiplatform.user\"\n```Replace the following values:- : The project that your default service account was created in.\n [Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=compute.googleapis.com) ## Configure a Cloud Storage bucket for pipeline artifacts\nVertex AI Pipelines stores the artifacts of your pipeline runs using Cloud Storage. Use the following instructions to create a Cloud Storage bucket and grant your service account (or the Compute Engine default service account) access to read and write objects in that bucket.\n- Run the following command to create a Cloud Storage bucket in the region that you want to run your pipelines in.```\ngsutil mb -p PROJECT_ID -l BUCKET_LOCATION gs://BUCKET_NAME\n```Replace the following values:- : Specify the project that your bucket is associated with.\n- : Specify the [location](/storage/docs/locations) of your bucket \u2014 for example,`US-CENTRAL1`.\n- : The name you want to give your bucket, subject to [naming requirements](/storage/docs/buckets#naming) . For example,`my-bucket`.\nLearn more about [creating Cloud Storagebuckets](/storage/docs/creating-buckets) .\n- Run the following commands to grant your service account access to read and write pipeline artifacts in the bucket that you created in the previous step.```\ngsutil iam ch \\\nserviceAccount:SERVICE_ACCOUNT_ID@PROJECT_ID.iam.gserviceaccount.com:roles/storage.objectCreator,objectViewer \\\ngs://BUCKET_NAME\n```Replace the following values:- : The ID for the service account.\n- : The project that your service account was created in.\n- : The name of the bucket you are granting your service account access to.\nAlternatively, if you prefer to use the Compute Engine default service account to run your pipelines, run the [gcloud iam service-accounts list](/sdk/gcloud/reference/iam/service-accounts/list) command to locate the project number for that account.```\ngcloud iam service-accounts list\n```The Compute Engine default service account is named like the following: `` `-compute@developer.gserviceaccount.com` .Run the following command to grant the Compute Engine default service account access to read and write pipeline artifacts in the bucket that you created in the previous step.```\ngsutil iam ch \\\nserviceAccount:PROJECT_NUMBER-compute@developer.gserviceaccount.com:roles/storage.objectCreator,objectViewer \\\ngs://BUCKET_NAME\n```Replace the following values:- : The project number for the Compute Engine default service account.\n- : The name of the bucket you are granting your service account access to.\nLearn more about [controlling access to Cloud Storagebuckets](/storage/docs/access-control) .## Create a metadata store that uses a CMEK (optional)\nUse the following instructions to create a CMEK and set up a Vertex ML Metadata metadata store that uses this CMEK.\n- [Use Cloud Key Management Service to configure a customer-managed encryptionkey.](/vertex-ai/docs/general/cmek#configure-cmek) \n- Use the following REST call to create your project's default metadata store using your CMEK.Before using any of the request data, make the following replacements:- : Your region.\n- : Your [project ID](/resource-manager/docs/creating-managing-projects#identifiers) .\n- : The name of the Cloud Key Management Service key ring that your encryption key is on.\n- : The name of the encryption key that you want to use for this metadata  store.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION_ID/metadataStores?metadata_store_id=default\n```\nRequest JSON body:\n```\n{\n \"encryption_spec\": {\n \"kms_key_name\": \"projects/PROJECT_ID/locations/LOCATION_ID/keyRings/KEY_RING/cryptoKeys/KEY_NAME\"\n },\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/operations/OPERATIONS_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.CreateMetadataStoreOperationMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2021-05-18T18:47:14.494997Z\",\n  \"updateTime\": \"2021-05-18T18:47:14.494997Z\"\n }\n }\n}\n```", "guide": "Vertex AI"}