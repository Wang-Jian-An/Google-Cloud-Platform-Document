{"title": "Vertex AI - Create a Ray cluster on Vertex AI", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Create a Ray cluster on Vertex AI\n**    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nYou can create a Ray cluster on Vertex AI using the console or using the Vertex AI SDK for Python.\n[Ray on Vertex AI overview](/vertex-ai/docs/open-source/ray-on-vertex-ai/overview)\n[set up](/vertex-ai/docs/open-source/ray-on-vertex-ai/set-up)\n**Note:** A Ray cluster on Vertex AI may take 10-20 minutes to start up after you create it.\n- In the Google Cloud console, go to the Ray on Vertex AI page. [Go to the Ray on Vertex AI page](https://console.cloud.google.com/vertex-ai/ray) \n- Click **Create Cluster** to open the **Create Cluster** panel.\n- For each step in the **Create Cluster** panel, review or replace the default cluster information. Click **Continue** to complete each step:- For **Name and region** , specify a **Name** and choose a **Region** for your cluster.\n- For **Compute settings** , specify the configuration of the Ray cluster on the Vertex AI's head node, including its machine type, accelerator type and count, disk type and size, and replica count. Under **Advancedoptions** , you can specify the encryption key.\n- For **Networking** , specify the VPC peering network you want to use with Ray on Vertex AI.If you haven't already set up private services access connection for your VPC network, click **Set up connection** . In the **Create aprivate services access connection** panel, complete and click **Continue** for each of the following steps:- Enable the **Service Networking API** .\n- For **Allocate an IP range** , you can select, create, or allow Google to automatically allocate an IP range.\n- For **Create a connection** , review the **Network** and **AllocatedIP Range** information.\n- Click **Create connection** .\n- Click **Create** .\nFrom an interactive Python environment within the VPC network, use the following to create the Ray cluster on Vertex AI:\n```\nimport rayimport vertex_rayfrom google.cloud import aiplatformfrom vertex_ray import Resources# Define a default CPU cluster, machine_type is n1-standard-8, 1 head node and 1 worker nodehead_node_type = Resources()worker_node_types = [Resources()]# Or define a GPU cluster.head_node_type = Resources(\u00a0 machine_type=\"n1-standard-8\",\u00a0 node_count=1,)worker_node_types = [Resources(\u00a0 machine_type=\"n1-standard-8\",\u00a0 node_count=2, \u00a0# Can be > 1\u00a0 accelerator_type=\"NVIDIA_TESLA_K80\",\u00a0 accelerator_count=1,)]aiplatform.init()# Initialize Vertex AI to retrieve projects for downstream operations.# Create the Ray cluster on Vertex AICLUSTER_RESOURCE_NAME = vertex_ray.create_ray_cluster(\u00a0 head_node_type=head_node_type,\u00a0 network=NETWORK,\u00a0 worker_node_types=worker_node_types,\u00a0 python_version=\"3_10\", \u00a0# Optional\u00a0 ray_version=\"2_4\", \u00a0# Optional\u00a0 cluster_name = CLUSTER_NAME)\n```\nWhere:- : A name for the Ray cluster on Vertex AI that must be unique across your project.\n- is the full name of your peered VPC network, in the format of `projects/` `` `/global/networks/` `` .\n- is your Google Cloud project number.\n **Note:** You don't need to use `ray start` or `ray up` to create a Ray cluster on Vertex AI, as you would do with open source Ray. Vertex AI manages the provisioning of the machines and Ray cluster.\nYou should see the following output until the status changes to `RUNNING` :\n```\n[Ray on Vertex AI]: Cluster State = State.PROVISIONING\nWaiting for cluster provisioning; attempt 1; sleeping for 0:02:30 seconds\n...\n[Ray on Vertex AI]: Cluster State = State.RUNNING\n```\nNote the following:- The first node is used as the Head node.\n- TPU machine types are not supported.", "content": "## What's next\n- [Develop a Ray application on Vertex AI](/vertex-ai/docs/open-source/ray-on-vertex-ai/develop-application)", "guide": "Vertex AI"}