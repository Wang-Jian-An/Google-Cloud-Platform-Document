{"title": "Vertex AI - \u914d\u7f6e\u8a13\u7df4\u8173\u672c", "url": "https://cloud.google.com/vertex-ai/docs/experiments/configure-training-script?hl=zh-cn", "abstract": "# Vertex AI - \u914d\u7f6e\u8a13\u7df4\u8173\u672c\n\u60a8\u7684\u8a13\u7df4\u8173\u672c\u5fc5\u9808\u914d\u7f6e\u7232\u5beb\u5165 TensorBoard \u65e5\u8a8c\u3002\u5c0d\u65bc\u73fe\u6709 TensorBoard \u7528\u6236\uff0c\u9019\u4e0d\u9700\u8981\u66f4\u6539\u6a21\u578b\u8a13\u7df4\u4ee3\u78bc\u3002\n\u5982\u9700\u5728 TensorFlow 2.x \u4e2d\u914d\u7f6e\u8a13\u7df4\u8173\u672c\uff0c\u8acb\u5275\u5efa TensorBoard \u56de\u8abf\u4e26\u5c07 `log_dir` \u8b8a\u91cf\u8a2d\u7f6e\u7232\u53ef\u9023\u63a5\u5230 Google Cloud \u7684\u4efb\u610f\u4f4d\u7f6e\u3002\n\u7136\u5f8c\uff0cTensorBoard \u56de\u8abf\u6703\u6dfb\u52a0\u5230 TensorFlow `model.fit` \u56de\u8abf\u5217\u8868\u4e2d\u3002\n```\nimport tensorflow as tfdef train_tensorflow_model_with_tensorboard(log_dir):\u00a0 \u00a0 (x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()\u00a0 \u00a0 x_train, x_test = x_train / 255.0, x_test / 255.0\u00a0 \u00a0 def create_model():\u00a0 \u00a0 \u00a0 \u00a0 return tf.keras.models.Sequential(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 tf.keras.layers.Flatten(input_shape=(28, 28)),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 tf.keras.layers.Dense(512, activation=\"relu\"),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 model = create_model()\u00a0 \u00a0 model.compile(\u00a0 \u00a0 \u00a0 \u00a0 optimizer=\"adam\",\u00a0 \u00a0 \u00a0 \u00a0 loss=\"sparse_categorical_crossentropy\",\u00a0 \u00a0 \u00a0 \u00a0 metrics=[\"accuracy\"]\u00a0 \u00a0 )\u00a0 \u00a0 tensorboard_callback = tf.keras.callbacks.TensorBoard(\u00a0 \u00a0 \u00a0 \u00a0 log_dir=log_dir,\u00a0 \u00a0 \u00a0 \u00a0 histogram_freq=1\u00a0 \u00a0 )\u00a0 \u00a0 model.fit(\u00a0 \u00a0 \u00a0 \u00a0 x=x_train,\u00a0 \u00a0 \u00a0 \u00a0 y=y_train,\u00a0 \u00a0 \u00a0 \u00a0 epochs=5,\u00a0 \u00a0 \u00a0 \u00a0 validation_data=(x_test, y_test),\u00a0 \u00a0 \u00a0 \u00a0 callbacks=[tensorboard_callback],\u00a0 \u00a0 )\n```\nTensorBoard \u65e5\u8a8c\u5728\u6307\u5b9a\u7684\u76ee\u9304\u4e2d\u5275\u5efa\uff0c\u4e26\u4e14\u53ef\u6309\u7167 [\u4e0a\u50b3 TensorBoard \u65e5\u8a8c](https://cloud.google.com/vertex-ai/docs/experiments/tensorboard-upload-existing-logs?hl=zh-cn#one-time-logging) \u8aaa\u660e\u4e0a\u50b3\uff0c\u4ee5\u4e0a\u50b3\u5230 Vertex AI TensorBoard \u5be6\u9a57\u3002\n\u5982\u9700\u67e5\u770b\u66f4\u591a\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 [TensorBoard \u958b\u6e90\u6587\u6a94](https://www.tensorflow.org/tensorboard/get_started?hl=zh-cn)\n", "content": "## \u5f8c\u7e8c\u6b65\u9a5f\n- \u67e5\u770b\u81ea\u52d5\u65e5\u8a8c\u6d41\u5f0f\u50b3\u8f38- [\u4f7f\u7528\u81ea\u5b9a\u7fa9\u8a13\u7df4\u4f5c\u696d\u9032\u884c\u8a13\u7df4](https://cloud.google.com/vertex-ai/docs/experiments/tensorboard-training?hl=zh-cn) \n- [\u4f7f\u7528 Vertex AI Pipelines \u9032\u884c\u8a13\u7df4](https://cloud.google.com/vertex-ai/docs/experiments/tensorboard-with-pipelines?hl=zh-cn)", "guide": "Vertex AI"}