{"title": "Vertex AI - Prepare video training data for action recognition", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Prepare video training data for action recognition\nThis page describes how to prepare video training data for use in a Vertex AI dataset to train a video action recognition model.\nThe following sections provide information about data requirements, schema files, and the format of the data import files (JSONL & CSV) that are defined by the schema.\nAlternatively, you can import videos that have not been annotated and annotate them later using the Google Cloud console (see [Labeling using the Google Cloud console](/vertex-ai/docs/datasets/label-using-console) ).\n", "content": "## Data requirements\nThe following requirements apply to datasets used to train AutoML or custom-trained models.\n- Vertex AI supports the following video formats for training your model or requesting a prediction (annotating a video).- .MOV\n- .MPEG4\n- .MP4\n- .AVI\n- To view the video content in the web console or to annotate a video, the video must be in a format that your browser natively supports. Since not all browsers handle .MOV or .AVI content natively, the recommendation is to use either .MPEG4 or .MP4 video format.\n- Maximum file size is 50 GB (up to 3 hours in duration). Individual video files with malformed or empty timestamps in the container aren't supported.\n- The maximum number of labels in each dataset is limited to 1,000.\n- You may assign \"ML_USE\" labels to the videos in the import files. At training time, you may choose to use those labels to split the videos and their corresponding annotations into \"training\" or \"test\" sets. For action recognition,there's a limitation when using the VAR labeling console, which means if you want to use the labeling tool to label actions, you must label all the actions in that video.## Best practices for video data used to train AutoML models\nThe following practices apply to datasets used to train AutoML models.\n- The training data should be as close as possible to the data on which predictions are to be made. For example, if your use case involves blurry and low-resolution videos (such as from a security camera), your training data should be composed of blurry, low-resolution videos. In general, you should also consider providing multiple angles, resolutions, and backgrounds for your training videos.\n- Vertex AI models can't generally predict labels that humans can't assign. If a human can't be trained to assign labels by looking at the video for 1-2 seconds, the model likely can't be trained to do it either.\n- The model works best when there are at most 100 times more videos for the most common label than for the least common label. We recommend removing low frequency labels. For action recognition, note the following:- 100 or more training video frames per label are recommended.\n- For video frame resolution much larger than 1024 pixels by 1024 pixels, some image quality may be lost during the frame normalization process used by Vertex AI.\n## Schema files\n- Use the following publicly accessible schema file when creating the jsonl file for importing annotations. This schema file dictates the format of the data input files. The structure of the file follows the [OpenAPI Schema](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schema) test. **Action Recognition schema file** : [gs://google-cloud-aiplatform/schema/dataset/ioformat/video_action_recognition_io_format_1.0.0.yaml](https://storage.cloud.google.com/google-cloud-aiplatform/schema/dataset/ioformat/video_action_recognition_io_format_1.0.0.yaml) ## Input files\nThe format of your training data for video action recognition are as follows.\n**Note:** When manually managing which videos are used for training or test purposes, be sure each instance of a video in the dataset has been assigned the designation. If there's a contradiction, the dataset reverts to random assignments.\nTo import your data, create either a JSONL or CSV file.\nJSON on each line: See [Action recognition YAML](/vertex-ai/docs/datasets/prepare-video#action-recognition_1) file for details. Note: The time segments here are used to calculate the timestamps  of the actions. `startTime` and `endTime` of `timeSegmentAnnotations` can  be equal, and corresponds to the key frame of the action.```\n{\n \"videoGcsUri': \"gs://bucket/filename.ext\",\n \"timeSegments\": [{\n \"startTime\": \"start_time_of_fully_annotated_segment\",\n \"endTime\": \"end_time_of_segment\"}],\n \"timeSegmentAnnotations\": [{\n \"displayName\": \"LABEL\",\n \"startTime\": \"start_time_of_segment\",\n \"endTime\": \"end_time_of_segment\"\n }],\n \"dataItemResourceLabels\": {\n \"ml_use\": \"train|test\"\n }\n}\n``````\n{\"videoGcsUri\": \"gs://demo/video1.mp4\", \"timeSegmentAnnotations\": [{\"displayName\": \"cartwheel\", \"startTime\": \"1.0s\", \"endTime\": \"12.0s\"}], \"dataItemResourceLabels\": {\"ml_use\": \"training\"}}\n{\"videoGcsUri\": \"gs://demo/video2.mp4\", \"timeSegmentAnnotations\": [{\"displayName\": \"swing\", \"startTime\": \"4.0s\", \"endTime\": \"9.0s\"}], \"dataItemResourceLabels\": {\"ml_use\": \"test\"}}\n...\n``` **List of columns** - **Validation data.** ( **Optional** )`TRAINING`,`TEST`specification.\n- **The content to be categorized or annotated** . This field contains Cloud Storage URI for the video. Cloud Storage URIs are case-sensitive.\n- **A label that identifies how the video is categorized** . Labels must start with a letter and only contain letters, numbers, and underscores. You can specify multiple labels for a video by adding multiple rows in the CSV file that each identify the same video segment, with a different label for each row.\n- **Start and end time of the video segment** . These two, comma-separated fields identify the start and end time of the video segment to analyze, in seconds. The start time must be less than the end time. Both values must be non-negative and within the time range of the video. For example,`0.09845,1.3600555`, where the first value (0.09845) is the start time and the second value (1.3600555) is the end time of the video segment that you want labeled. To use the entire content of the video, specify a start time of`0`and an end time of the full-length of the video or \"inf\". For example,`0,inf`.\n- **Annotation** . Annotation is a label with either frame timestamp  or time segment.\nEach row has to be one of the following:\n```\nVIDEO_URI, TIME_SEGMENT_START, TIME_SEGMENT_END, LABEL, ANNOTATION_FRAME_TIMESTAMP\n```\n```\nVIDEO_URI, , , LABEL, ANNOTATION_FRAME_TIMESTAMP\n```\n```\nVIDEO_URI, TIME_SEGMENT_START, TIME_SEGMENT_END, LABEL, ANNOTATION_SEGMENT_START, ANNOTATION_SEGMENT_END\n```\n```\nVIDEO_URI, , , LABEL, ANNOTATION_SEGMENT_START, ANNOTATION_SEGMENT_END\n```Label two actions at different times:\n```\ngs://folder/video1.avi,kick,12.90,,\ngs://folder/video1.avi,catch,19.65,,\n```\nThere's no action of interest within the two time ranges. Note: the last row means that the fully labeled segment can contain no actions.\n```\ngs://folder/video1.avi,,,10.0,20.0\ngs://folder/video1.avi,,,25.0,40.0\n```\nYour training data must have at least one label and one fully labeled segment.\nAgain, you do not need to specify validation data to verify the results of your trained model. Vertex AI automatically divides the rows identified for training into training and validation data. 80% for training and 20% for validation.\nSave the contents as a CSV file in your Cloud Storage bucket.", "guide": "Vertex AI"}