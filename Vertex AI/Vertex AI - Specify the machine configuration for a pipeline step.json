{"title": "Vertex AI - Specify the machine configuration for a pipeline step", "url": "https://cloud.google.com/vertex-ai/docs/pipelines/machine-types", "abstract": "# Vertex AI - Specify the machine configuration for a pipeline step\nKubeflow pipeline components are factory functions that create pipeline steps. Each component describes the inputs, outputs, and implementation of the component. For example, in the code sample below, `train_op` is a component.\nFor example, a training component could take a CSV file as an input and use it to train a model. By setting the machine type parameters on the pipeline step, you can manage the requirements of each step in your pipeline. If you have two training steps and one step trains on a huge data file and the second step trains on a small data file, you can allocate more memory and CPU to the first task, and fewer resources to the second task.\nBy default, the component will run on as a Vertex AI [CustomJob](/vertex-ai/docs/reference/rest/v1/projects.locations.customJobs) using an **e2-standard-4** machine, with 4 core CPUs and 16GB memory. For more information about selecting one of the Google Cloud-specific machine resources listed in [Machine types](/vertex-ai/docs/training/configure-compute#machine-types) , see [Request Google Cloud machine resources with Vertex AI Pipelines](/vertex-ai/docs/pipelines/request-gcp-machine-resources) .\nThe following sample shows you how to set CPU, memory, and GPU configuration settings for a step:\n```\nfrom kfp import dsl@dsl.pipeline(name='custom-container-pipeline')def pipeline():\u00a0 generate = generate_op()\u00a0 train = (\u00a0 \u00a0 train_op(\u00a0 \u00a0 \u00a0 training_data=generate.outputs['training_data'],\u00a0 \u00a0 \u00a0 test_data=generate.outputs['test_data'],\u00a0 \u00a0 \u00a0 config_file=generate.outputs['config_file'])\u00a0 \u00a0 .set_cpu_limit('CPU_LIMIT')\u00a0 \u00a0 .set_memory_limit('MEMORY_LIMIT')\u00a0 \u00a0 .add_node_selector_constraint(SELECTOR_CONSTRAINT)\u00a0 \u00a0 .set_accelerator_limit(ACCELERATOR_LIMIT))\n```\nReplace the following:\n- : The maximum CPU limit for this operator. This string value can be a number (integer value for number of CPUs), or a number followed by \"m\", which means 1/1000. You can specify at most 96 CPUs.\n- : The maximum memory limit for this operator. This string value can be a number, or a number followed by \"K\" (kilobyte), \"M\" (megabyte), or \"G\" (gigabyte) \"T\", \"P\", or \"E\" . At most 624GB is supported. **Note:** Vertex AI Pipelines does not support calling [set_memory_request](https://kubeflow-pipelines.readthedocs.io/page/source/dsl.html#kfp.dsl.PipelineTask.set_memory_request) on an operator ; you must use [set_memory_limit](https://kubeflow-pipelines.readthedocs.io/page/source/dsl.html#kfp.dsl.PipelineTask.set_memory_request) to request a specific memory amount.\n- : Each constraint is a key-value pair label. For the container to be eligible to run on a node, the node must have each constraint as a label. For example: `'cloud.google.com/gke-accelerator', 'NVIDIA_TESLA_K80'`The following constraints are available:- `NVIDIA_A100_80GB`\n- `NVIDIA_TESLA_A100`(NVIDIA A100 40GB)\n- `NVIDIA_TESLA_K80`\n- `NVIDIA_TESLA_P4`\n- `NVIDIA_TESLA_P100`\n- `NVIDIA_TESLA_T4`\n- `NVIDIA_TESLA_V100`\n- `NVIDIA_L4`\n- `TPU_V2`\n- `TPU_V3`\n- : The accelerator (GPU or TPU) limit for the operator. You can specify a positive integer. For more information about the available GPUs and how to configure them, see [GPUs](/vertex-ai/docs/training/configure-compute#specifying_gpus) . For more information about the available TPUs and how to configure them, see [TPUs](/vertex-ai/docs/training/configure-compute#tpu) . **Note:** TPUs are only available in specific locations. For more information, see [Using accelerators](/vertex-ai/docs/general/locations#accelerators) .\n`CustomJob` currently supports specific machine types that limit you to a maximum of 96 CPUs and 624GB of memory. Based on the CPU, memory and accelerator configuration that you specify, Vertex AI Pipelines automatically selects the closest match from the supported machine types", "content": ".", "guide": "Vertex AI"}