{"title": "Vertex AI - Hello custom training: Set up your project and environment", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Hello custom training: Set up your project and environment\nThis page walks through setting up your Google Cloud project to use Vertex AI and downloading some TensorFlow code for training. You will also download code for a web app that gets predictions.- Setting up your project and environment.\n- [Training a custom image classificationmodel.](/vertex-ai/docs/tutorials/image-classification-custom/training) \n- [Serving predictions from a custom image classificationmodel.](/vertex-ai/docs/tutorials/image-classification-custom/serving) \n- [Cleaning up your project.](/vertex-ai/docs/tutorials/image-classification-custom/cleanup) \nEach page assumes that you have already performed the instructions from the previous pages of the tutorial.\n", "content": "## Before you begin\nThroughout this tutorial, use Google Cloud console and [Cloud Shell](/shell/docs) to interact with Google Cloud. Alternatively, instead of Cloud Shell, you can use another Bash shell with the [Google Cloud CLI](/sdk/docs) installed.\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- If Cloud Shell does not display `(` `` `)$` in its prompt (where is replaced by your  Google Cloud project ID), then run the following command to  configure Cloud Shell to use your project:```\ngcloud config set project PROJECT_ID\n```## Create a Cloud Storage bucket\nCreate a regional [Cloud Storage](/storage/docs) bucket in the `us-central1` region to use for the rest of this tutorial. As you follow the tutorial, use the bucket for several purposes:\n- Store training code for Vertex AI to use in a custom training job.\n- Store the model artifacts that your custom training job outputs.\n- Host the web app that gets predictions from your Vertex AI endpoint.\nTo create the Cloud Storage bucket, run the following command in your Cloud Shell session:\n```\ngsutil mb -p PROJECT_ID -l us-central1 gs://BUCKET_NAME\n```\nReplace the following:\n- : The ID of your Google Cloud project.\n- : A name that you choose for your bucket. For example,`hello_custom_` ``. Learn about [requirements for bucketnames](/storage/docs/buckets#naming) .## Download sample code\nDownload sample code to use for the rest of the tutorial.\n```\ngsutil cp gs://cloud-samples-data/ai-platform/hello-custom/hello-custom-sample-v1.tar.gz - | tar -xzv\n```\nTo optionally view the sample code files, run the following command:\n```\nls -lpR hello-custom-sample\n```\nThe `hello-custom-sample` directory has four items:\n- `trainer/` : A directory of TensorFlow Keras code for training the flower classification model.\n- `setup.py` : A configuration file for packaging the `trainer/` directory into a Python source distribution that Vertex AI can use.\n- `function/` : A directory of Python code for a [Cloud Function](/functions/docs) that can receive and preprocess prediction requests from a web browser, send them to Vertex AI, process the prediction responses, and send them back to the browser.\n- `webapp/` : A directory with code and markup for a web app that gets flower classification predictions from Vertex AI.## What's next\nFollow the [next page of this tutorial](/vertex-ai/docs/tutorials/image-classification-custom/training) to run a custom training job on Vertex AI.", "guide": "Vertex AI"}