{"title": "Vertex AI - \u5275\u5efa\u7528\u65bc\u8a13\u7df4\u5206\u985e\u548c\u8ff4\u6b78\u6a21\u578b\u7684\u6578\u64da\u96c6", "url": "https://cloud.google.com/vertex-ai/docs/tabular-data/classification-regression/create-dataset?hl=zh-cn", "abstract": "# Vertex AI - \u5275\u5efa\u7528\u65bc\u8a13\u7df4\u5206\u985e\u548c\u8ff4\u6b78\u6a21\u578b\u7684\u6578\u64da\u96c6\n\u672c\u9801\u4ecb\u7d39\u5982\u4f55\u6839\u64da\u8868\u683c\u6578\u64da\u5275\u5efa Vertex AI \u6578\u64da\u96c6\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u958b\u59cb\u8a13\u7df4\u5206\u985e\u548c\u8ff4\u6b78\u6a21\u578b\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u6216 Vertex AI API \u5275\u5efa\u6578\u64da\u96c6\u3002\n", "content": "## \u6e96\u5099\u5de5\u4f5c\n\u5728\u6839\u64da\u8868\u683c\u6578\u64da\u5275\u5efa Vertex AI \u6578\u64da\u96c6\u4e4b\u524d\uff0c\u60a8\u5fc5\u9808\u5148\u6e96\u5099\u6578\u64da\u3002\u6709\u95dc\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1\uff1a\n- [\u6e96\u5099\u7528\u65bc\u5206\u985e\u548c\u8ff4\u6b78\u6a21\u578b\u7684\u8868\u683c\u8a13\u7df4\u6578\u64da](https://cloud.google.com/vertex-ai/docs/tabular-data/classification-regression/prepare-data?hl=zh-cn) \n- [\u5275\u5efa\u8868\u683c\u8a13\u7df4\u6578\u64da\u7684\u6700\u4f73\u5be6\u8e10](https://cloud.google.com/vertex-ai/docs/tabular-data/bp-tabular?hl=zh-cn) \u3002## \u5275\u5efa\u7a7a\u6578\u64da\u96c6\u4e26\u95dc\u806f\u6e96\u5099\u597d\u7684\u6578\u64da\n\u5982\u9700\u5275\u5efa\u7528\u65bc\u5206\u985e\u6216\u8ff4\u6b78\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\uff0c\u60a8\u5fc5\u9808\u5148\u6709\u4e00\u7d44\u7528\u65bc\u8a13\u7df4\u7684\u4ee3\u8868\u6027\u6578\u64da\u3002\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u6216 API \u5c07\u6e96\u5099\u597d\u7684\u6578\u64da\u95dc\u806f\u5230\u6578\u64da\u96c6\u4e2d\u3002\u95dc\u806f\u6578\u64da\u6642\uff0c\u60a8\u53ef\u4ee5\u4fee\u6539\u6578\u64da\u4e26\u958b\u59cb\u6a21\u578b\u8a13\u7df4\u3002\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684 Vertex AI \u90e8\u5206\u4e2d\uff0c\u524d\u5f80 **\u6578\u64da\u96c6** \u9801\u9762\u3002 [\u8f49\u5230\u201c\u6578\u64da\u96c6\u201d\u9801\u9762](https://console.cloud.google.com/vertex-ai/datasets?hl=zh-cn) \n- \u9ede\u64ca **\u5275\u5efa** \u4ee5\u6253\u958b\u5275\u5efa\u6578\u64da\u96c6\u8a73\u60c5\u9801\u9762\u3002\n- \u4fee\u6539 **\u6578\u64da\u96c6\u540d\u7a31** \u5b57\u6bb5\uff0c\u4ee5\u5275\u5efa\u63cf\u8ff0\u6027\u6578\u64da\u96c6\u986f\u793a\u540d\u3002\n- \u9078\u64c7 **\u8868\u683c** \u6a19\u7c64\u9801\u3002\n- \u9078\u64c7 **\u8ff4\u6b78/\u5206\u985e** \u76ee\u6a19\u3002\n- \u5f9e **\u5340\u57df** \u4e0b\u62c9\u5217\u8868\u4e2d\u9078\u64c7\u4e00\u500b\u5340\u57df\u3002\n- \u5982\u679c\u60a8\u8981\u5c07 [CMEK\uff08\u5ba2\u6236\u7ba1\u7406\u7684\u52a0\u5bc6\u5bc6\u9470\uff09](https://cloud.google.com/vertex-ai/docs/general/cmek?hl=zh-cn) \u8207\u6578\u64da\u96c6\u642d\u914d\u4f7f\u7528\uff0c\u8acb\u6253\u958b **\u9ad8\u7d1a\u9078\u9805** \u4e26\u63d0\u4f9b\u5bc6\u9470\u3002\uff08 [\u9810\u89bd\u7248](https://cloud.google.com/products?hl=zh-cn#product-launch-stages) \uff09\n- \u9ede\u64ca **\u5275\u5efa** \u4ee5\u5275\u5efa\u7a7a\u6578\u64da\u96c6\uff0c\u7136\u5f8c\u8f49\u5230 **\u4f86\u6e90** \u6a19\u7c64\u9801\u3002\n- \u6839\u64da\u6578\u64da\u6e90\uff0c\u9078\u64c7\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\u3002Cloud Storage \u6216 BigQuery \u4e2d\u7684\u8868\u683c\u8a13\u7df4\u6578\u64da\u4e0d\u6703\u5c0e\u5165 Vertex AI\u3002\uff08\u5f9e\u672c\u5730\u6587\u4ef6\u5c0e\u5165\u6642\uff0c\u7cfb\u7d71\u6703\u5c07\u5176\u5c0e\u5165\u5230 Cloud Storage \u4e2d\u3002\uff09\u7576\u60a8\u4f7f\u7528\u8868\u683c\u6578\u64da\u5275\u5efa\u6578\u64da\u96c6\u6642\uff0c\u6578\u64da\u6703\u8207\u6578\u64da\u96c6\u95dc\u806f\u3002\u5275\u5efa\u6578\u64da\u96c6\u5f8c\uff0c\u60a8\u5c0d Cloud Storage \u6216 BigQuery \u4e2d\u7684\u6578\u64da\u6e90\u6240\u505a\u7684\u66f4\u6539\u6703\u7d0d\u5165\u4f7f\u7528\u8a72\u6578\u64da\u96c6\u8a13\u7df4\u7684\u6a21\u578b\u4e2d\u3002\u5728\u6a21\u578b\u8a13\u7df4\u958b\u59cb\u6642\uff0c\u5c07\u622a\u53d6\u6578\u64da\u96c6\u7684\u5feb\u7167\u3002- \u9ede\u64caradio_button_checked **\u5f9e\u8a08\u7b97\u6a5f\u4e0a\u50b3 CSV \u6587\u4ef6** \u3002\n- \u9ede\u64ca **\u9078\u64c7\u6587\u4ef6** \uff0c\u7136\u5f8c\u9078\u64c7\u8981\u4e0a\u50b3\u5230 Cloud Storage \u5b58\u5132\u6876\u7684\u6240\u6709\u672c\u5730\u6587\u4ef6\u3002\n- \u5728 **\u9078\u64c7 Cloud Storage \u8def\u5f91** \u90e8\u5206\uff0c\u8f38\u5165 Cloud Storage \u5b58\u5132\u6876\u7684\u8def\u5f91\uff0c\u6216\u9ede\u64ca **\u700f\u89bd** \u4ee5\u9078\u64c7\u5b58\u5132\u6876\u4f4d\u7f6e\u3002\n- \u9ede\u64caradio_button_checked **\u9078\u64c7 Cloud Storage \u4e2d\u7684 CSV \u6587\u4ef6** \u3002\n- \u5728 **\u9078\u64c7 Cloud Storage \u4e2d\u7684 CSV \u6587\u4ef6** \u90e8\u5206\uff0c\u8f38\u5165 Cloud Storage \u5b58\u5132\u6876\u7684\u8def\u5f91\uff0c\u6216\u9ede\u64ca **\u700f\u89bd** \u4ee5\u9078\u64c7 CSV \u6587\u4ef6\u7684\u4f4d\u7f6e\u3002\n- \u9ede\u64caradio_button_checked **\u5f9e BigQuery \u4e2d\u9078\u64c7\u8868\u6216\u8996\u5716** \u3002\n- \u8f38\u5165\u8f38\u5165\u6587\u4ef6\u7684\u9805\u76ee\u3001\u6578\u64da\u96c6\u548c\u8868 ID\u3002\n- \u9ede\u64ca **\u7e7c\u7e8c** \u3002\u60a8\u7684\u6578\u64da\u6e90\u5df2\u8207\u60a8\u7684\u6578\u64da\u96c6\u95dc\u806f\u3002\n\u5275\u5efa\u6578\u64da\u96c6\u6642\uff0c\u60a8\u4e5f\u6703\u5c07\u5176\u8207\u6578\u64da\u6e90\u95dc\u806f\u3002\u5275\u5efa\u6578\u64da\u96c6\u6240\u9700\u7684\u4ee3\u78bc\u53d6\u6c7a\u65bc\u8a13\u7df4\u6578\u64da\u662f\u4f4d\u65bc\n [Cloud Storage](#gcs) \n\u9084\u662f\n [BigQuery](#bq) \n\u4e2d\u3002\u5982\u679c\u6578\u64da\u6e90\u4f4d\u65bc\u5176\u4ed6\u9805\u76ee\u4e2d\uff0c\u8acb\u78ba\u4fdd\n [\u8a2d\u7f6e\u6240\u9700\u6b0a\u9650](https://cloud.google.com/vertex-ai/docs/general/access-control?hl=zh-cn#foreign-project) \n\u3002\nCloud Storage \u6216 BigQuery \u4e2d\u7684\u8868\u683c\u8a13\u7df4\u6578\u64da\u4e0d\u6703\u5c0e\u5165 Vertex AI\u3002\uff08\u5f9e\u672c\u5730\u6587\u4ef6\u5c0e\u5165\u6642\uff0c\u7cfb\u7d71\u6703\u5c07\u5176\u5c0e\u5165\u5230 Cloud Storage \u4e2d\u3002\uff09\u7576\u60a8\u4f7f\u7528\u8868\u683c\u6578\u64da\u5275\u5efa\u6578\u64da\u96c6\u6642\uff0c\u6578\u64da\u6703\u8207\u6578\u64da\u96c6\u95dc\u806f\u3002\u5275\u5efa\u6578\u64da\u96c6\u5f8c\uff0c\u60a8\u5c0d Cloud Storage \u6216 BigQuery \u4e2d\u7684\u6578\u64da\u6e90\u6240\u505a\u7684\u66f4\u6539\u6703\u7d0d\u5165\u4f7f\u7528\u8a72\u6578\u64da\u96c6\u8a13\u7df4\u7684\u6a21\u578b\u4e2d\u3002\u5728\u6a21\u578b\u8a13\u7df4\u958b\u59cb\u6642\uff0c\u5c07\u622a\u53d6\u6578\u64da\u96c6\u7684\u5feb\u7167\u3002\n### \u4f7f\u7528 Cloud Storage \u4e2d\u7684\u6578\u64da\u5275\u5efa\u6578\u64da\u96c6\u60a8\u53ef\u4ee5\u4f7f\u7528 [datasets.create](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.datasets/create?hl=zh-cn) \u65b9\u6cd5\u5275\u5efa\u6578\u64da\u96c6\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u5b58\u5132\u6578\u64da\u96c6\u7684\u5340\u57df\u3002\u5fc5\u9808\u662f [\u652f\u6301\u6578\u64da\u96c6\u8cc7\u6e90\u7684\u5340\u57df](https://cloud.google.com/vertex-ai/docs/general/locations?hl=zh-cn#feature-availability) \u3002\u4f8b\u5982`us-central1`\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u6578\u64da\u96c6\u7684\u986f\u793a\u540d\u3002\n- \uff1a\u76ee\u6a19\u7684\u67b6\u69cb\u6587\u4ef6\u7684 URI\u3002`gs://google-cloud-aiplatform/schema/dataset/metadata/tabular_1.0.0.yaml`\n- \uff1a\u5305\u542b\u8a13\u7df4\u6578\u64da\u7684 Cloud Storage \u5b58\u5132\u6876\u7684\u8def\u5f91 (URI)\u3002\u53ef\u4ee5\u6709\u591a\u500b\u8def\u5f91\u3002\u6bcf\u500b URI \u7684\u683c\u5f0f\u5982\u4e0b\uff1a```\ngs://GCSprojectId/bucketName/fileName\n```\n- \uff1a\u81ea\u52d5\u751f\u6210\u7684 [\u9805\u76ee\u7de8\u865f](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/datasets\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"display_name\": \"DATASET_NAME\",\n \"metadata_schema_uri\": \"METADATA_SCHEMA_URI\",\n \"metadata\": {\n \"input_config\": {\n  \"gcs_source\": {\n  \"uri\": [URI1, URI2, ...]\n  }\n }\n }\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/datasets\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/datasets\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/datasets/DATASET_ID/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.CreateDatasetOperationMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2020-07-07T21:27:35.964882Z\",\n  \"updateTime\": \"2020-07-07T21:27:35.964882Z\"\n }\n}\n```\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/CreateDatasetTabularGcsSample.java) \n```\nimport com.google.api.gax.longrunning.OperationFuture;import com.google.cloud.aiplatform.v1.CreateDatasetOperationMetadata;import com.google.cloud.aiplatform.v1.Dataset;import com.google.cloud.aiplatform.v1.DatasetServiceClient;import com.google.cloud.aiplatform.v1.DatasetServiceSettings;import com.google.cloud.aiplatform.v1.LocationName;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class CreateDatasetTabularGcsSample {\u00a0 public static void main(String[] args)\u00a0 \u00a0 \u00a0 throws InterruptedException, ExecutionException, TimeoutException, IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String datasetDisplayName = \"YOUR_DATASET_DISPLAY_NAME\";\u00a0 \u00a0 String gcsSourceUri = \"gs://YOUR_GCS_SOURCE_BUCKET/path_to_your_gcs_table/file.csv\";\u00a0 \u00a0 ;\u00a0 \u00a0 createDatasetTableGcs(project, datasetDisplayName, gcsSourceUri);\u00a0 }\u00a0 static void createDatasetTableGcs(String project, String datasetDisplayName, String gcsSourceUri)\u00a0 \u00a0 \u00a0 throws IOException, ExecutionException, InterruptedException, TimeoutException {\u00a0 \u00a0 DatasetServiceSettings settings =\u00a0 \u00a0 \u00a0 \u00a0 DatasetServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (DatasetServiceClient datasetServiceClient = DatasetServiceClient.create(settings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 String metadataSchemaUri =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"gs://google-cloud-aiplatform/schema/dataset/metadata/tables_1.0.0.yaml\";\u00a0 \u00a0 \u00a0 LocationName locationName = LocationName.of(project, location);\u00a0 \u00a0 \u00a0 String jsonString =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"{\\\"input_config\\\": {\\\"gcs_source\\\": {\\\"uri\\\": [\\\"\" + gcsSourceUri + \"\\\"]}}}\";\u00a0 \u00a0 \u00a0 Value.Builder metaData = Value.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(jsonString, metaData);\u00a0 \u00a0 \u00a0 Dataset dataset =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Dataset.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDisplayName(datasetDisplayName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setMetadataSchemaUri(metadataSchemaUri)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setMetadata(metaData)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 OperationFuture<Dataset, CreateDatasetOperationMetadata> datasetFuture =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 datasetServiceClient.createDatasetAsync(locationName, dataset);\u00a0 \u00a0 \u00a0 System.out.format(\"Operation name: %s\\n\", datasetFuture.getInitialFuture().get().getName());\u00a0 \u00a0 \u00a0 System.out.println(\"Waiting for operation to finish...\");\u00a0 \u00a0 \u00a0 Dataset datasetResponse = datasetFuture.get(300, TimeUnit.SECONDS);\u00a0 \u00a0 \u00a0 System.out.println(\"Create Dataset Table GCS sample\");\u00a0 \u00a0 \u00a0 System.out.format(\"Name: %s\\n\", datasetResponse.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"Display Name: %s\\n\", datasetResponse.getDisplayName());\u00a0 \u00a0 \u00a0 System.out.format(\"Metadata Schema Uri: %s\\n\", datasetResponse.getMetadataSchemaUri());\u00a0 \u00a0 \u00a0 System.out.format(\"Metadata: %s\\n\", datasetResponse.getMetadata());\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/create-dataset-tabular-gcs.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const datasetDisplayName = 'YOUR_DATASET_DISPLAY_NAME';// const gcsSourceUri = 'YOUR_GCS_SOURCE_URI';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';// Imports the Google Cloud Dataset Service Client libraryconst {DatasetServiceClient} = require('@google-cloud/aiplatform');// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst datasetServiceClient = new DatasetServiceClient(clientOptions);async function createDatasetTabularGcs() {\u00a0 // Configure the parent resource\u00a0 const parent = `projects/${project}/locations/${location}`;\u00a0 const metadata = {\u00a0 \u00a0 structValue: {\u00a0 \u00a0 \u00a0 fields: {\u00a0 \u00a0 \u00a0 \u00a0 inputConfig: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 structValue: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fields: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gcsSource: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 structValue: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fields: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 uri: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 listValue: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 values: [{stringValue: gcsSourceUri}],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 },\u00a0 };\u00a0 // Configure the dataset resource\u00a0 const dataset = {\u00a0 \u00a0 displayName: datasetDisplayName,\u00a0 \u00a0 metadataSchemaUri:\u00a0 \u00a0 \u00a0 'gs://google-cloud-aiplatform/schema/dataset/metadata/tabular_1.0.0.yaml',\u00a0 \u00a0 metadata: metadata,\u00a0 };\u00a0 const request = {\u00a0 \u00a0 parent,\u00a0 \u00a0 dataset,\u00a0 };\u00a0 // Create dataset request\u00a0 const [response] = await datasetServiceClient.createDataset(request);\u00a0 console.log(`Long running operation : ${response.name}`);\u00a0 // Wait for operation to complete\u00a0 await response.promise();\u00a0 const result = response.result;\u00a0 console.log('Create dataset tabular gcs response');\u00a0 console.log(`\\tName : ${result.name}`);\u00a0 console.log(`\\tDisplay name : ${result.displayName}`);\u00a0 console.log(`\\tMetadata schema uri : ${result.metadataSchemaUri}`);\u00a0 console.log(`\\tMetadata : ${JSON.stringify(result.metadata)}`);}createDatasetTabularGcs();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/create_and_import_dataset_tabular_gcs_sample.py) \n```\ndef create_and_import_dataset_tabular_gcs_sample(\u00a0 \u00a0 display_name: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 gcs_source: Union[str, List[str]],):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 dataset = aiplatform.TabularDataset.create(\u00a0 \u00a0 \u00a0 \u00a0 display_name=display_name,\u00a0 \u00a0 \u00a0 \u00a0 gcs_source=gcs_source,\u00a0 \u00a0 )\u00a0 \u00a0 dataset.wait()\u00a0 \u00a0 print(f'\\tDataset: \"{dataset.display_name}\"')\u00a0 \u00a0 print(f'\\tname: \"{dataset.resource_name}\"')\n```\n### \u4f7f\u7528 BigQuery \u4e2d\u7684\u6578\u64da\u5275\u5efa\u6578\u64da\u96c6\u60a8\u53ef\u4ee5\u4f7f\u7528\n [datasets.create](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.datasets/create?hl=zh-cn) \n\u65b9\u6cd5\u5275\u5efa\u6578\u64da\u96c6\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u5b58\u5132\u6578\u64da\u96c6\u7684\u5340\u57df\u3002\u5fc5\u9808\u662f [\u652f\u6301\u6578\u64da\u96c6\u8cc7\u6e90\u7684\u5340\u57df](https://cloud.google.com/vertex-ai/docs/general/locations?hl=zh-cn#feature-availability) \u3002\u4f8b\u5982`us-central1`\u3002\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u6578\u64da\u96c6\u7684\u986f\u793a\u540d\u3002\n- \uff1a\u76ee\u6a19\u7684\u67b6\u69cb\u6587\u4ef6\u7684 URI\u3002`gs://google-cloud-aiplatform/schema/dataset/metadata/tabular_1.0.0.yaml`\n- \uff1a\u5305\u542b\u8a13\u7df4\u6578\u64da\u7684 BigQuery \u8868\u7684\u8def\u5f91\u3002\u5728\u6b64\u8868\u55ae\u4e2d\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a```\nbq://bqprojectId.bqDatasetId.bqTableId\n```\n- \uff1a\u81ea\u52d5\u751f\u6210\u7684 [\u9805\u76ee\u7de8\u865f](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/datasets\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"display_name\": \"DATASET_NAME\",\n \"metadata_schema_uri\": \"METADATA_SCHEMA_URI\",\n \"metadata\": {\n \"input_config\": {\n  \"bigquery_source\" :{\n  \"uri\": \"URI\n  }\n }\n }\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/datasets\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT/locations/LOCATION/datasets\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/datasets/DATASET_ID/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.aiplatform.v1.CreateDatasetOperationMetadata\",\n \"genericMetadata\": {\n  \"createTime\": \"2020-07-07T21:27:35.964882Z\",\n  \"updateTime\": \"2020-07-07T21:27:35.964882Z\"\n }\n}\n```\n\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/CreateDatasetTabularBigquerySample.java) \n```\nimport com.google.api.gax.longrunning.OperationFuture;import com.google.cloud.aiplatform.v1.CreateDatasetOperationMetadata;import com.google.cloud.aiplatform.v1.Dataset;import com.google.cloud.aiplatform.v1.DatasetServiceClient;import com.google.cloud.aiplatform.v1.DatasetServiceSettings;import com.google.cloud.aiplatform.v1.LocationName;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class CreateDatasetTabularBigquerySample {\u00a0 public static void main(String[] args)\u00a0 \u00a0 \u00a0 throws InterruptedException, ExecutionException, TimeoutException, IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String bigqueryDisplayName = \"YOUR_DATASET_DISPLAY_NAME\";\u00a0 \u00a0 String bigqueryUri =\u00a0 \u00a0 \u00a0 \u00a0 \"bq://YOUR_GOOGLE_CLOUD_PROJECT_ID.BIGQUERY_DATASET_ID.BIGQUERY_TABLE_OR_VIEW_ID\";\u00a0 \u00a0 createDatasetTableBigquery(project, bigqueryDisplayName, bigqueryUri);\u00a0 }\u00a0 static void createDatasetTableBigquery(\u00a0 \u00a0 \u00a0 String project, String bigqueryDisplayName, String bigqueryUri)\u00a0 \u00a0 \u00a0 throws IOException, ExecutionException, InterruptedException, TimeoutException {\u00a0 \u00a0 DatasetServiceSettings settings =\u00a0 \u00a0 \u00a0 \u00a0 DatasetServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(\"us-central1-aiplatform.googleapis.com:443\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 try (DatasetServiceClient datasetServiceClient = DatasetServiceClient.create(settings)) {\u00a0 \u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 \u00a0 String metadataSchemaUri =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"gs://google-cloud-aiplatform/schema/dataset/metadata/tables_1.0.0.yaml\";\u00a0 \u00a0 \u00a0 LocationName locationName = LocationName.of(project, location);\u00a0 \u00a0 \u00a0 String jsonString =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"{\\\"input_config\\\": {\\\"bigquery_source\\\": {\\\"uri\\\": \\\"\" + bigqueryUri + \"\\\"}}}\";\u00a0 \u00a0 \u00a0 Value.Builder metaData = Value.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(jsonString, metaData);\u00a0 \u00a0 \u00a0 Dataset dataset =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Dataset.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDisplayName(bigqueryDisplayName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setMetadataSchemaUri(metadataSchemaUri)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setMetadata(metaData)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 OperationFuture<Dataset, CreateDatasetOperationMetadata> datasetFuture =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 datasetServiceClient.createDatasetAsync(locationName, dataset);\u00a0 \u00a0 \u00a0 System.out.format(\"Operation name: %s\\n\", datasetFuture.getInitialFuture().get().getName());\u00a0 \u00a0 \u00a0 System.out.println(\"Waiting for operation to finish...\");\u00a0 \u00a0 \u00a0 Dataset datasetResponse = datasetFuture.get(300, TimeUnit.SECONDS);\u00a0 \u00a0 \u00a0 System.out.println(\"Create Dataset Table Bigquery sample\");\u00a0 \u00a0 \u00a0 System.out.format(\"Name: %s\\n\", datasetResponse.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"Display Name: %s\\n\", datasetResponse.getDisplayName());\u00a0 \u00a0 \u00a0 System.out.format(\"Metadata Schema Uri: %s\\n\", datasetResponse.getMetadataSchemaUri());\u00a0 \u00a0 \u00a0 System.out.format(\"Metadata: %s\\n\", datasetResponse.getMetadata());\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300aVertex AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Vertex AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Vertex AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/create-dataset-tabular-bigquery.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const datasetDisplayName = 'YOUR_DATASET_DISPLAY_NAME';// const bigquerySourceUri = 'YOUR_BIGQUERY_SOURCE_URI';// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';// Imports the Google Cloud Dataset Service Client libraryconst {DatasetServiceClient} = require('@google-cloud/aiplatform');// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};// Instantiates a clientconst datasetServiceClient = new DatasetServiceClient(clientOptions);async function createDatasetTabularBigquery() {\u00a0 // Configure the parent resource\u00a0 const parent = `projects/${project}/locations/${location}`;\u00a0 const metadata = {\u00a0 \u00a0 structValue: {\u00a0 \u00a0 \u00a0 fields: {\u00a0 \u00a0 \u00a0 \u00a0 inputConfig: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 structValue: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fields: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bigquerySource: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 structValue: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fields: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 uri: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 listValue: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 values: [{stringValue: bigquerySourceUri}],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 },\u00a0 };\u00a0 // Configure the dataset resource\u00a0 const dataset = {\u00a0 \u00a0 displayName: datasetDisplayName,\u00a0 \u00a0 metadataSchemaUri:\u00a0 \u00a0 \u00a0 'gs://google-cloud-aiplatform/schema/dataset/metadata/tabular_1.0.0.yaml',\u00a0 \u00a0 metadata: metadata,\u00a0 };\u00a0 const request = {\u00a0 \u00a0 parent,\u00a0 \u00a0 dataset,\u00a0 };\u00a0 // Create dataset request\u00a0 const [response] = await datasetServiceClient.createDataset(request);\u00a0 console.log(`Long running operation : ${response.name}`);\u00a0 // Wait for operation to complete\u00a0 await response.promise();\u00a0 const result = response.result;\u00a0 console.log('Create dataset tabular bigquery response');\u00a0 console.log(`\\tName : ${result.name}`);\u00a0 console.log(`\\tDisplay name : ${result.displayName}`);\u00a0 console.log(`\\tMetadata schema uri : ${result.metadataSchemaUri}`);\u00a0 console.log(`\\tMetadata : ${JSON.stringify(result.metadata)}`);}createDatasetTabularBigquery();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/create_and_import_dataset_tabular_bigquery_sample.py) \n```\ndef create_and_import_dataset_tabular_bigquery_sample(\u00a0 \u00a0 display_name: str,\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 bq_source: str,):\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 dataset = aiplatform.TabularDataset.create(\u00a0 \u00a0 \u00a0 \u00a0 display_name=display_name,\u00a0 \u00a0 \u00a0 \u00a0 bq_source=bq_source,\u00a0 \u00a0 )\u00a0 \u00a0 dataset.wait()\u00a0 \u00a0 print(f'\\tDataset: \"{dataset.display_name}\"')\u00a0 \u00a0 print(f'\\tname: \"{dataset.resource_name}\"')\n```\n### \u7372\u53d6\u64cd\u4f5c\u72c0\u614b\n\u67d0\u4e9b\u8acb\u6c42\u6703\u5553\u52d5\u9700\u8981\u4e00\u4e9b\u6642\u9593\u624d\u80fd\u5b8c\u6210\u7684\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u3002\u9019\u4e9b\u8acb\u6c42\u6703\u8fd4\u56de\u64cd\u4f5c\u540d\u7a31\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8a72\u540d\u7a31\u67e5\u770b\u64cd\u4f5c\u72c0\u614b\u6216\u53d6\u6d88\u64cd\u4f5c\u3002Vertex AI \u63d0\u4f9b\u8f14\u52a9\u65b9\u6cd5\u4f86\u8abf\u7528\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c](https://cloud.google.com/vertex-ai/docs/general/long-running-operations?hl=zh-cn) \u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- [\u4f7f\u7528\u6578\u64da\u96c6\u8a13\u7df4\u5206\u985e\u6216\u8ff4\u6b78\u6a21\u578b](https://cloud.google.com/vertex-ai/docs/tabular-data/classification-regression/train-model?hl=zh-cn) \u3002", "guide": "Vertex AI"}