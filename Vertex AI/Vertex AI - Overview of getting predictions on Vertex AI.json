{"title": "Vertex AI - Overview of getting predictions on Vertex AI", "url": "https://cloud.google.com/vertex-ai/docs/predictions/overview", "abstract": "# Vertex AI - Overview of getting predictions on Vertex AI\nA prediction is the output of a trained machine learning model. This page provides an overview of the workflow for getting predictions from your models on Vertex AI.\nVertex AI offers two methods for getting prediction:\n- **Online predictions** are synchronous requests made to a model [endpoint](/vertex-ai/docs/reference/rest/v1/projects.locations.endpoints) . Before sending a request, you must first deploy the [model](/vertex-ai/docs/reference/rest/v1/projects.locations.models) resource to an `endpoint` . This associates [computeresources](/vertex-ai/docs/predictions/configure-compute) with the model so that it can serve online predictions with low latency. Use online predictions when you are making requests in response to application input or in situations that require timely inference.\n- **Batchpredictions** are asynchronous requests. You request a [batchPredictionsJob](/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs) directly from the [model](/vertex-ai/docs/reference/rest/v1/projects.locations.models) resource without needing to deploy the model to an endpoint. Use batch predictions when you don't require an immediate response and want to process accumulated data by using a single request.", "content": "## Get predictions from custom trained models\nTo get predictions, you must first [import yourmodel](/vertex-ai/docs/model-registry/import-model) . After it's imported, it becomes a [model](/vertex-ai/docs/reference/rest/v1/projects.locations.models) resource that is visible in [Vertex AI Model Registry](/vertex-ai/docs/model-registry/introduction) .\nThen, read the following documentation to learn how to get predictions:\n- [Get batch predictions](/vertex-ai/docs/predictions/get-batch-predictions) Or\n- [Deploy model to endpoint](/vertex-ai/docs/general/deployment) and [get online predictions](/vertex-ai/docs/predictions/get-online-predictions) .## Get predictions from AutoML models\nUnlike custom trained models, AutoML models are automatically imported into the Vertex AI Model Registry after training.\nOther than that, the workflow for AutoML models is similar, but varies slightly based on your data type and model objective. The documentation for getting AutoML predictions is located alongside the AutoML documentation. Here are links to the documentation:\n### Image\nLearn how to get predictions from the following types of image AutoML models:\n- [Image classification models](/vertex-ai/docs/image-data/classification/get-predictions) \n- [Image object detection models](/vertex-ai/docs/image-data/object-detection/get-predictions) \n### Tabular\nLearn how to get predictions from the following types of tabular AutoML models:\n- Tabular classification/regression models- [Online predictions](/vertex-ai/docs/tabular-data/classification-regression/get-online-predictions) \n- [Batch predictions](/vertex-ai/docs/tabular-data/classification-regression/get-batch-predictions) \n- [Tabular forecasting models](/vertex-ai/docs/tabular-data/forecasting/get-predictions) (batch predictions only)\n### Text\nLearn how to get predictions from the following types of text AutoML models:\n- [Text classification models](/vertex-ai/docs/text-data/classification/get-predictions) \n- [Text entity extraction models](/vertex-ai/docs/text-data/entity-extraction/get-predictions) \n- [Text sentiment analysis models](/vertex-ai/docs/text-data/sentiment-analysis/get-predictions) \n### Video\nLearn how to get predictions from the following types of video AutoML models:\n- [Video action recognition models](/vertex-ai/docs/video-data/action-recognition/get-predictions) (batch predictions only)\n- [Video classification models](/vertex-ai/docs/video-data/classification/get-predictions) (batch predictions only)\n- [Video object tracking models](/vertex-ai/docs/video-data/object-tracking/get-predictions) (batch predictions only)", "guide": "Vertex AI"}