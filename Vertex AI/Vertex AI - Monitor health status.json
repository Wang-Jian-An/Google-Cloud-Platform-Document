{"title": "Vertex AI - Monitor health status", "url": "https://cloud.google.com/vertex-ai/docs/workbench/user-managed/monitor-health", "abstract": "# Vertex AI - Monitor health status\n# Monitor health status\nVertex AI Workbench user-managed notebooks is [deprecated](/vertex-ai/docs/deprecations) . On January 30, 2025, support for  user-managed notebooks will end and the ability to create user-managed notebooks instances  will be removed. Existing instances will continue to function  but patches, updates, and upgrades won't be available. To continue using  Vertex AI Workbench, we recommend that you [migrate your user-managed notebooks instances to Vertex AI Workbench instances](/vertex-ai/docs/workbench/user-managed/migrate-to-instances) .\nUser-managed notebooks instances provide several methods for monitoring the health of your notebooks. This page describes how to use each method.\n", "content": "## Methods for monitoring health status\nYou can monitor the health of your user-managed notebooks instances in a few different ways. This page describes how to use the following methods:\n- [Use guest attributes to reportsystem health](#guest-attributes) \n- [Report custom metrics to Cloud Monitoring](#report-custom-metrics) \n- [Report system and application metricsto Monitoring by installing Monitoringon a user-managed notebooks instance](#install-monitoring) \n- [Use the diagnostic tool](#diagnostic-tool) ## Set up the gcloud CLI\n[Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n```\ngcloud init\n```\n**Note:** You can run the gcloud CLI in  the Google Cloud console without installing the Google Cloud CLI. To run the  gcloud CLI in the Google Cloud console, [use  Cloud Shell](https://console.cloud.google.com/?cloudshell=true) .\n## Use guest attributes to report system health\nYou can use guest attributes to report the system health of the following core services:\n- Docker service\n- Docker reverse proxy agent\n- Jupyter service\n- Jupyter API\nare a specific type of custom metadata that applications can write to while running on your user-managed notebooks instance. To learn more about guest attributes, see [About VM metadata](/compute/docs/metadata/overview#guest_attributes) .\n### How instances use guest attributes to report system health\nThe `notebooks-collection-agent` service runs a Python process in the background that verifies the status of the user-managed notebooks instance's core services and updates the guest attributes as either `1` if no problems are detected or `-1` if a failure is detected.\nTo use the `notebooks-collection-agent` service to report on your user-managed notebooks instance's health, you must enable the following guest attributes a user-managed notebooks instance:\n- `enable-guest-attributes=TRUE`: This enables guest attributes on your user-managed notebooks instance. All new instances enable this attribute by default.\n- `report-system-health=TRUE`: This records system health check results to your guest attributes.\nThe `notebooks-collection-agent` service doesn't need any special permissions to write to the instance's guest attributes.\n**Note:** The `notebooks-collection-agent` service uses approximately 50 MB of memory to run in the background.\n### Create a user-managed notebooks instance with system health guest attributes enabled\nTo use system health guest attributes to report on your user-managed notebooks instance's health, you must select the **Enable system health report** checkbox when you create a user-managed notebooks instance.\nYou can enable the system health report by using either the Google Cloud console or the Google Cloud CLI.- If you plan to use GPUs with your user-managed notebooks instance, [check the quotas page in the Google Cloud console](https://console.cloud.google.com/quotas) to ensure that you have enough GPUs available in your project. If GPUs are not listed on the quotas page, or you require additional GPU quota, you can request a quota increase. See [Requesting an increase in quota](/compute/quotas#requesting_additional_quota) on the Compute Engine [Resource quotas](/compute/quotas) page.### Required roles\nIf you created the project, you have the Owner ( `roles/owner` ) IAM role on the project, which includes all required permissions. Skip this section and start creating your user-managed notebooks instance. If you didn't create the project yourself, continue in this section.\nTo ensure that your user account has the necessary  permissions to create a Vertex AI Workbench user-managed notebooks instance,   ask your administrator to grant your user account the  following IAM roles on the project:\n- Notebooks Admin ( [roles/notebooks.admin](/vertex-ai/docs/workbench/user-managed/iam#notebooks.admin) )\n- Service Account User ( [roles/iam.serviceAccountUser](/iam/docs/understanding-roles#iam.serviceAccountUser) )\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYour administrator might also be able to give your user account  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .- In the Google Cloud console, go to the **User-managed notebooks** page. Or go to [notebook.new](https://notebook.new) (https://notebook.new) and skip the next step. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- Click add_box **New notebook** , and then select **Customize** .\n- On the **Create a user-managed notebook** page, in the **Details** section, provide the following information for your new instance:- **Name** : a name for your new instance\n- **Region** and **Zone** : Select a region and zone for the new instance. For best network performance, select the region that is geographically closest to you. See the available [user-managed notebookslocations](/vertex-ai/docs/general/locations#user-managed-notebooks-locations) .\n- Select the **System health** section.\n- In the **System health and reporting** section, select the **Enable system health report** checkbox.\n- Complete the rest of the instance creation dialog, and then click **Create** .\n- From [Cloud Shell](/shell/docs/starting-cloud-shell) or any environment where the [Google Cloud CLI](/sdk/docs) is installed, enter the following [Google Cloud CLI](/sdk/gcloud) command:```\ngcloud notebooks instances create INSTANCE_NAME \\\u00a0 \u00a0 --vm-image-project=deeplearning-platform-release \\\u00a0 \u00a0 --vm-image-family=IMAGE_FAMILY \\\u00a0 \u00a0 --machine-type=MACHINE_TYPE \\\u00a0 \u00a0 --location=ZONE \\\u00a0 \u00a0 --metadata=enable-guest-attributes=TRUE,report-system-health=TRUE\n```Replace the following:- ``: the name of your new instance\n- ``: the [image familyname](/vertex-ai/docs/workbench/user-managed/images#deciding) that you want to use to create your instance\n- ``: the [machinetype](/compute/docs/machine-types) of your instance's VM; for example,`n1-standard-4`\n- ``: the zone where you want your new instance to be located, for example,`us-west1-a`\n- Access your instance from the [Google Cloud console](https://console.cloud.google.com/vertex-ai/workbench/user-managed) .\n### Monitor system health through guest attributes\nFor user-managed notebooks instances that have [the related guest attributes enabled](#enable-guest-attributes) , you can retrieve the values of your system health guest attributes by using either the Google Cloud console, the Google Cloud CLI with Compute Engine commands, or the Google Cloud CLI with Vertex AI Workbench commands.\n- In the Google Cloud console, go to the **User-managed notebooks** page. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- Click the instance name that you want to view the system health status of.\n- On the **Notebook details** page, click the **Health** tab. Review the status of your instance and its core services.\n```\ngcloud compute instances get-guest-attributes INSTANCE_NAME \\\u00a0 \u00a0 --zone ZONE\n```\nReplace the following:- ``: the name of your instance\n- ``: the zone where your instance is located\nIf your core services are healthy, the results look like the following. A value of `1` means no failure was detected.\n```\n NAMESPACE KEY       VALUE\n notebooks docker_proxy_agent_status 1\n notebooks docker_status    1\n notebooks jupyterlab_api_status  1\n notebooks jupyterlab_status   1\n notebooks system-health    1\n notebooks updated      2020-10-01 17:00:00.12345\n```\nIf any of the four core services fail, system-health reports a `-1` value to indicate system failure. In most cases, a system failure means that JupyterLab is not accessible.\nAn example of a failure result might look like the following.\n```\n NAMESPACE KEY       VALUE\n notebooks docker_proxy_agent_status -1\n notebooks docker_status    -1\n notebooks jupyterlab_api_status  1\n notebooks jupyterlab_status   1\n notebooks system-health    -1\n notebooks updated      2020-10-01 17:00:00.12345\n```\nTo monitor your system health, you can use the [getInstanceHealth](/vertex-ai/docs/workbench/reference/rest/v1/projects.locations.instances/getInstanceHealth) method to retrieve the values of your guest attributes.\nThe following example shows how to do this using the gcloud CLI.\n```\ngcloud notebooks instances is-healthy example-instance \\\n --location=ZONE\n```\nReplace `` with the zone where your instance is located, for example, `us-west1-a` .\nIf your core services are healthy, the results look like the following. A value of `1` means no failure was detected.\n```\n {\n   \"health_state\": HEALTHY,\n   \"docker-proxy-agent\": 1,\n   \"docker-service\": 1,\n   \"jupyter-service\": 1,\n   \"jupyter-api\": 1,\n   \"last-updated\": \"2020-10-01 17:00:30.12345\"\n }\n```\nAn example of a failure result might look like the following.\n```\n {\n   \"healthy\": UNHEALTHY,\n   \"docker-proxy-agent\": 1,\n   \"docker-service\": 1,\n   \"jupyter-service\": -1,\n   \"jupyter-api\": -1,\n   \"last-updated\": \"2020-10-01 17:00:30.12345\"\n }\n```\n## Report custom metrics to Monitoring\nUser-managed notebooks instances let you collect system status and JupyterLab metrics and report them to Cloud Monitoring. These custom metrics are different from the standard metrics that are reported when you [install Monitoring onyour user-managed notebooks instance](#install-monitoring) .\nThe custom metrics reported to Monitoring include the following:\n- The system health of these user-managed notebooks core services:- Docker service\n- Docker reverse proxy agent\n- Jupyter service\n- Jupyter API\n- The following JupyterLab metrics:- Number of kernels\n- Number of terminals\n- Number of connections\n- Number of sessions\n- Maximum memory\n- High memory\n- Current memory\n### How instances report custom metrics to Monitoring\nTo report custom metrics to Monitoring, you must enable the `report-notebook-metrics` metadata setting a user-managed notebooks instance.\nYou must also make sure that the user-managed notebooks instance's service account has Monitoring Metric Writer ( `roles/monitoring.metricWriter` ) permissions. For more information, see [Manage access to projects, folders, and organizations](/iam/docs/granting-changing-revoking-access) .\n### Create a user-managed notebooks instance that reports custom metrics to Monitoring\nTo report custom metrics to Monitoring, you must select the **Report custom metrics to Cloud Monitoring** checkbox when you create a user-managed notebooks instance.\nYou can enable reporting custom metrics to Cloud Monitoring by using either the Google Cloud console or the Google Cloud CLI.- If you plan to use GPUs with your user-managed notebooks instance, [check the quotas page in the Google Cloud console](https://console.cloud.google.com/quotas) to ensure that you have enough GPUs available in your project. If GPUs are not listed on the quotas page, or you require additional GPU quota, you can request a quota increase. See [Requesting an increase in quota](/compute/quotas#requesting_additional_quota) on the Compute Engine [Resource quotas](/compute/quotas) page.### Required roles\nIf you created the project, you have the Owner ( `roles/owner` ) IAM role on the project, which includes all required permissions. Skip this section and start creating your user-managed notebooks instance. If you didn't create the project yourself, continue in this section.\nTo ensure that your user account has the necessary  permissions to create a Vertex AI Workbench user-managed notebooks instance,   ask your administrator to grant your user account the  following IAM roles on the project:\n- Notebooks Admin ( [roles/notebooks.admin](/vertex-ai/docs/workbench/user-managed/iam#notebooks.admin) )\n- Service Account User ( [roles/iam.serviceAccountUser](/iam/docs/understanding-roles#iam.serviceAccountUser) )\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYour administrator might also be able to give your user account  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .- In the Google Cloud console, go to the **User-managed notebooks** page. Or go to [notebook.new](https://notebook.new) (https://notebook.new) and skip the next step. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- Click add_box **New notebook** , and then select **Customize** .\n- On the **Create a user-managed notebook** page, in the **Details** section, provide the following information for your new instance:- **Name** : a name for your new instance\n- **Region** and **Zone** : Select a region and zone for the new instance. For best network performance, select the region that is geographically closest to you. See the available [user-managed notebookslocations](/vertex-ai/docs/general/locations#user-managed-notebooks-locations) .\n- Select the **System health** section.\n- In the **System health and reporting** section, select the **Report custom metrics to Cloud Monitoring** checkbox.\n- Complete the rest of the instance creation dialog, and then click **Create** .\n- From [Cloud Shell](/shell/docs/starting-cloud-shell) or any environment where the [Google Cloud CLI](/sdk/docs) is installed, enter the following [Google Cloud CLI](/sdk/gcloud) command:```\ngcloud notebooks instances create INSTANCE_NAME \\\u00a0 \u00a0 --vm-image-project=deeplearning-platform-release \\\u00a0 \u00a0 --vm-image-family=IMAGE_FAMILY \\\u00a0 \u00a0 --machine-type=MACHINE_TYPE \\\u00a0 \u00a0 --location=ZONE \\\u00a0 \u00a0 --metadata=report-notebook-metrics=TRUE\n```Replace the following:- ``: the name of your new instance\n- ``: the [image familyname](/vertex-ai/docs/workbench/user-managed/images#deciding) that you want to use to create your instance\n- ``: the [machinetype](/compute/docs/machine-types) of your instance's VM, for example,`n1-standard-4`\n- ``: the zone where you want your new instance to be located, for example,`us-west1-a`\n- Access your instance from the [Google Cloud console](https://console.cloud.google.com/vertex-ai/workbench/user-managed) .\n### Grant Monitoring Metric Writer permissions to the service account\nAfter you've created your new user-managed notebooks instance, grant Monitoring Metric Writer permissions ( `roles/monitoring.metricWriter` ) to the service account for the user-managed notebooks instance. For more information, see [Manage access to projects, folders, and organizations](/iam/docs/granting-changing-revoking-access) .\n### Monitor custom metrics through Monitoring\nFor user-managed notebooks instances that have [reporting custom metrics enabled](#report-custom-metrics) , you can monitor your custom metrics by using the Google Cloud console.\n- In the Google Cloud console, go to the **User-managed notebooks** page. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- Click the instance name that you want to view the custom metrics of.\n- On the **Notebook details** page, click the **Monitoring** tab. Review the custom metrics for your instance.## Install Monitoring on an instance\nThis option automatically installs Monitoring. The installation requires 256\u00a0MB of disk space. An internet connection is required for the metrics to be reported to Monitoring.\n### How instances report system and application metrics\nTo report system and application metrics by installing Cloud Monitoring on your user-managed notebooks instance, you must select the **Install Cloud Monitoring agent** checkbox when you create a user-managed notebooks instance. These metrics are different from the custom metrics that are reported when you [enable the report-notebook-metrics metadatasetting](#report-custom-metrics) .\n### Create a user-managed notebooks instance that reports system and application metrics to Monitoring\nTo install Monitoring on your user-managed notebooks instance, you can use either the Google Cloud console or the Google Cloud CLI.- If you plan to use GPUs with your user-managed notebooks instance, [check the quotas page in the Google Cloud console](https://console.cloud.google.com/quotas) to ensure that you have enough GPUs available in your project. If GPUs are not listed on the quotas page, or you require additional GPU quota, you can request a quota increase. See [Requesting an increase in quota](/compute/quotas#requesting_additional_quota) on the Compute Engine [Resource quotas](/compute/quotas) page.### Required roles\nIf you created the project, you have the Owner ( `roles/owner` ) IAM role on the project, which includes all required permissions. Skip this section and start creating your user-managed notebooks instance. If you didn't create the project yourself, continue in this section.\nTo ensure that your user account has the necessary  permissions to create a Vertex AI Workbench user-managed notebooks instance,   ask your administrator to grant your user account the  following IAM roles on the project:\n- Notebooks Admin ( [roles/notebooks.admin](/vertex-ai/docs/workbench/user-managed/iam#notebooks.admin) )\n- Service Account User ( [roles/iam.serviceAccountUser](/iam/docs/understanding-roles#iam.serviceAccountUser) )\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYour administrator might also be able to give your user account  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .- In the Google Cloud console, go to the **User-managed notebooks** page. Or go to [notebook.new](https://notebook.new) (https://notebook.new) and skip the next step. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- Click add_box **New notebook** , and then select **Customize** .\n- On the **Create a user-managed notebook** page, in the **Details** section, provide the following information for your new instance:- **Name** : a name for your new instance\n- **Region** and **Zone** : Select a region and zone for the new instance. For best network performance, select the region that is geographically closest to you. See the available [user-managed notebookslocations](/vertex-ai/docs/general/locations#user-managed-notebooks-locations) .\n- Select the **System health** section.\n- In the **System health and reporting** section, select the **Install Cloud Monitoring agent** checkbox.\n- Complete the rest of the instance creation dialog, and then click **Create** .\n- From [Cloud Shell](/shell/docs/starting-cloud-shell) or any environment where the [Google Cloud CLI](/sdk/docs) is installed, enter the following [Google Cloud CLI](/sdk/gcloud) command:```\ngcloud notebooks instances create INSTANCE_NAME \\\u00a0 \u00a0 --vm-image-project=deeplearning-platform-release \\\u00a0 \u00a0 --vm-image-family=IMAGE_FAMILY \\\u00a0 \u00a0 --machine-type=MACHINE_TYPE \\\u00a0 \u00a0 --location=ZONE \\\u00a0 \u00a0 --metadata=install-monitoring-agent=TRUE\n```Replace the following:- ``: the name of your new instance\n- ``: the [image familyname](/vertex-ai/docs/workbench/user-managed/images#deciding) that you want to use to create your instance\n- ``: the [machinetype](/compute/docs/machine-types) of your instance's VM; for example,`n1-standard-4`\n- ``: the zone where you want your new instance to be located, for example,`us-west1-a`\n- Access your instance from the [Google Cloud console](https://console.cloud.google.com/vertex-ai/workbench/user-managed) .\n### Monitor system and application metrics through Monitoring\nFor user-managed notebooks instances that have [Monitoring installed](#install-monitoring) , you can monitor your system and application metrics by using the Google Cloud console:\n- In the Google Cloud console, go to the **User-managed notebooks** page. [Go to User-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/user-managed) \n- Click the instance name that you want to view the system and application metrics of.\n- On the **Notebook details** page, click the **Monitoring** tab. Review the system and application metrics for your instance. To learn how to interpret these metrics, see [Review resourcemetrics](/compute/docs/instances/observe-monitor-vms#review_resource_metrics) .## Use the diagnostic tool to monitor system health\nUser-managed notebooks instances include a built-in diagnostic tool that can help you monitor the system health of your instances.\n### Tasks performed by the diagnostic tool\nThe diagnostic tool performs the following tasks:\n- Verifies the status of the following user-managed notebooks core services:- Docker service\n- Docker reverse proxy agent\n- Jupyter service\n- Jupyter API\n- Checks whether the disk space for boot and data disks is used beyond an 85% threshold.\n- Installs [lsof](https://github.com/lsof-org/lsof) (internet connection required).\n- Collects the following instance logs:- Network information (`ifconfig`,`netstat`)\n- Logs in the`/var/log/`folder\n- Docker status information\n- `lsof`(open files) data\n- Docker service status\n- Proxy reverse agent status\n- Jupyter service status\n- Jupyter API status\n- Proxy agent configuration file\n- Python processes\n- Runs the following commands and collects the results:- pip freeze\n- conda list\n- gcloud compute instances describe``\n- gcloud config list\n### Run the diagnostic tool\nTo run the diagnostic tool, complete the following steps:\n- [Use ssh to connect to your user-managed notebooksinstance](/vertex-ai/docs/workbench/user-managed/ssh-access) .\n- In the SSH terminal, run the following commands:```\nsudo -i\ncd /opt/deeplearning/bin/\n./diagnostic_tool.sh\n```The diagnostic tool collects the logs, compresses them in a `.tar.gz` file, and places the file in the `/tmp/` folder.\n- Extract the file and then evaluate the contents. The contents include:- **log folder** : Logs from the`var/log/`folder\n- **report.log** : Output for all commands collected\n- **proxy-agent-config.json** : Proxy configuration information\n- **Docker log** : A`-json.log`file that includes Docker container logsYou can use the following options with the diagnostic tool.\n| Option | Description                      |\n|:---------|:------------------------------------------------------------------------------------------------|\n| -r  | A repair option that tries to restore failed user-managed notebooks core services status  |\n| -s  | Runs without a confirmation                  |\n| -b  | Uploads the .tar.gz file to a Cloud Storage bucket.           |\n| -v  | A debug option for troubleshooting the tool in case of failures         |\n| -c  | Captures 30 seconds of packet traffic into your user-managed notebooks instance, filtering SSH |\n| -d  | A destination folder in which to save the logs             |\n| -h  | Help                       |\n## What's next\n- [Learn more about VM metadata](/compute/docs/metadata/overview) .\n- [Learn more aboutMonitoring](/monitoring/docs/monitoring-overview) .", "guide": "Vertex AI"}