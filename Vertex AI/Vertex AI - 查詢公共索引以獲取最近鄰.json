{"title": "Vertex AI - \u67e5\u8a62\u516c\u5171\u7d22\u5f15\u4ee5\u7372\u53d6\u6700\u8fd1\u9130", "url": "https://cloud.google.com/vertex-ai/docs/vector-search/query-index-public-endpoint?hl=zh-cn", "abstract": "# Vertex AI - \u67e5\u8a62\u516c\u5171\u7d22\u5f15\u4ee5\u7372\u53d6\u6700\u8fd1\u9130\n\u5275\u5efa\u548c\u90e8\u7f72\u7d22\u5f15\u5f8c\uff0c\u60a8\u53ef\u4ee5\u904b\u884c\u67e5\u8a62\u4ee5\u7372\u53d6\u6700\u8fd1\u9130\u3002\n\u4ee5\u4e0b\u662f\u5339\u914d\u67e5\u8a62\u7684\u4e00\u4e9b\u793a\u4f8b\uff0c\u9019\u4e9b\u67e5\u8a62\u4f7f\u7528 k \u6700\u8fd1\u9130\u7b97\u6cd5 (k-NN) \u67e5\u627e\u6700\u8fd1\u9130\u3002\n", "content": "## \u516c\u5171\u7aef\u9ede\u67e5\u8a62\u793a\u4f8b\n### Python [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/python-aiplatform/blob/HEAD/samples/model-builder/vector_search/vector_search_find_neighbors_sample.py) \n```\ndef vector_search_find_neighbors(\u00a0 \u00a0 project: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 index_endpoint_name: str,\u00a0 \u00a0 deployed_index_id: str,\u00a0 \u00a0 queries: List[List[float]],\u00a0 \u00a0 num_neighbors: int,) -> None:\u00a0 \u00a0 \"\"\"Query the vector search index.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 project (str): Required. Project ID\u00a0 \u00a0 \u00a0 \u00a0 location (str): Required. The region name\u00a0 \u00a0 \u00a0 \u00a0 index_endpoint_name (str): Required. Index endpoint to run the query\u00a0 \u00a0 \u00a0 \u00a0 against.\u00a0 \u00a0 \u00a0 \u00a0 deployed_index_id (str): Required. The ID of the DeployedIndex to run\u00a0 \u00a0 \u00a0 \u00a0 the queries against.\u00a0 \u00a0 \u00a0 \u00a0 queries (List[List[float]]): Required. A list of queries. Each query is\u00a0 \u00a0 \u00a0 \u00a0 a list of floats, representing a single embedding.\u00a0 \u00a0 \u00a0 \u00a0 num_neighbors (int): Required. The number of neighbors to return.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 # Initialize the Vertex AI client\u00a0 \u00a0 aiplatform.init(project=project, location=location)\u00a0 \u00a0 # Create the index endpoint instance from an existing endpoint.\u00a0 \u00a0 my_index_endpoint = aiplatform.MatchingEngineIndexEndpoint(\u00a0 \u00a0 \u00a0 \u00a0 index_endpoint_name=index_endpoint_name\u00a0 \u00a0 )\u00a0 \u00a0 # Query the index endpoint for the nearest neighbors.\u00a0 \u00a0 resp = my_index_endpoint.find_neighbors(\u00a0 \u00a0 \u00a0 \u00a0 deployed_index_id=deployed_index_id,\u00a0 \u00a0 \u00a0 \u00a0 queries=queries,\u00a0 \u00a0 \u00a0 \u00a0 num_neighbors=num_neighbors,\u00a0 \u00a0 )\u00a0 \u00a0 print(resp)\n```\u60a8\u53ef\u4ee5\u5728 [\u90e8\u7f72](https://cloud.google.com/vertex-ai/docs/vector-search/deploy-index-public?hl=zh-cn) \u4e2d\u627e\u5230\u4e0b\u9762\u5217\u51fa\u7684 `publicEndpointDomainName` \u3002\n```\n $ curl -X POST -H \"Content-Type: application/json\" -H \"Authorization: Bearer `gcloud auth print-access-token`\" https://1957880287.us-central1-181224308459.vdb.vertexai.goog/v1/projects/181224308459/locations/us-central1/indexEndpoints/3370566089086861312:findNeighbors -d '{deployed_index_id: \"test_index_public1\", queries: [{datapoint: {datapoint_id: \"0\", feature_vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, neighbor_count: 5}]}'\n \n```\n\u6b64 curl \u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u5f9e `http(s)` \u5ba2\u6236\u7aef\u9032\u884c\u8abf\u7528\uff0c\u96d6\u7136\u516c\u5171\u7aef\u9ede\u652f\u6301 RESTful \u548c `grpc_cli` \u7684\u96d9\u5354\u8b70\u3002\n```\n $ curl -X POST -H \"Content-Type: application/json\" -H \"Authorization: Bearer `gcloud auth print-access-token`\" https://1957880287.us-central1-181224308459.vdb.vertexai.goog/v1/projects/${PROJECT_ID}/locations/us-central1/indexEndpoints/${INDEX_ENDPOINT_ID}:readIndexDatapoints -d '{deployed_index_id:\"test_index_public1\", ids: [\"606431\", \"896688\"]}'\n \n```\n\u6309\u7167\u4ee5\u4e0b\u8aaa\u660e\u5f9e\u63a7\u5236\u6aaf\u67e5\u8a62\u90e8\u7f72\u5230\u516c\u5171\u7aef\u9ede\u7684\u7d22\u5f15\u3002- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684 Vertex AI \u90e8\u5206\u4e2d\uff0c\u524d\u5f80 **\u90e8\u7f72\u548c\u4f7f\u7528** \u90e8\u5206\u3002\u9078\u64c7 **Vector Search** [\u524d\u5f80 Vector Search](https://console.cloud.google.com/vertex-ai/matching-engine/indexes?hl=zh-cn) \n- \u9078\u64c7\u8981\u67e5\u8a62\u7684\u7d22\u5f15\u3002\u6b64\u6642\u6703\u6253\u958b **\u7d22\u5f15\u4fe1\u606f** \u9801\u9762\u3002\n- \u5411\u4e0b\u6efe\u52d5\u5230 **\u5df2\u90e8\u7f72\u7684\u7d22\u5f15** \u90e8\u5206\uff0c\u7136\u5f8c\u9078\u64c7\u8981\u67e5\u8a62\u7684\u5df2\u90e8\u7f72\u7d22\u5f15\u3002\u6b64\u6642\u6703\u6253\u958b **\u5df2\u90e8\u7f72\u7684\u7d22\u5f15\u4fe1\u606f** \u9801\u9762\u3002\n- \u5728 **\u67e5\u8a62\u7d22\u5f15** \u90e8\u5206\u4e2d\uff0c\u9078\u64c7\u67e5\u8a62\u53c3\u6578\u3002\u60a8\u53ef\u4ee5\u9078\u64c7\u6309\u5411\u91cf\u6216\u7279\u5b9a\u6578\u64da\u9ede\u9032\u884c\u67e5\u8a62\u3002\n- \u4f7f\u7528\u63d0\u4f9b\u7684 curl \u547d\u4ee4\u6216\u4f7f\u7528 Cloud Shell \u904b\u884c\u4f86\u57f7\u884c\u67e5\u8a62\u3002\n- \u5982\u679c\u4f7f\u7528 Cloud Shell\uff0c\u8acb\u9078\u64c7 **\u5728 Cloud Shell \u4e2d\u904b\u884c** \u3002\n- \u5728 Cloud Shell \u4e2d\u904b\u884c\u3002\n- \u7d50\u679c\u6703\u8fd4\u56de\u6700\u8fd1\u9130\u3002\n\u5982\u9700\u67e5\u770b\u7aef\u5230\u7aef\u793a\u4f8b\uff0c\u77ad\u89e3\u5982\u4f55\u5275\u5efa\u7d22\u5f15\u3001\u5982\u4f55\u5c07\u5176\u90e8\u7f72\u5230\u516c\u5171\u7aef\u9ede\u4ee5\u53ca\u5982\u4f55\u67e5\u8a62\uff0c\u8acb\u53c3\u95b1\u5b98\u65b9\u7b46\u8a18\u672c\uff1a [\u4f7f\u7528 Vector Search \u548c Vertex AI Embeddings for Text \u8655\u7406 StackOverflow \u554f\u984c](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/matching_engine/sdk_matching_engine_create_stack_overflow_embeddings_vertex.ipynb) \u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u77ad\u89e3\u5982\u4f55 [\u66f4\u65b0\u548c\u91cd\u5efa\u7d22\u5f15](https://cloud.google.com/vertex-ai/docs/vector-search/update-rebuild-index?hl=zh-cn) \n- \u77ad\u89e3\u5982\u4f55 [\u904e\u6ffe\u5411\u91cf\u5339\u914d](https://cloud.google.com/vertex-ai/docs/vector-search/filtering?hl=zh-cn) \n- \u77ad\u89e3\u5982\u4f55 [\u76e3\u63a7\u7d22\u5f15](https://cloud.google.com/vertex-ai/docs/vector-search/monitor?hl=zh-cn)", "guide": "Vertex AI"}