{"title": "Documentation - Try Document Vision Service (DVS)", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Try Document Vision Service (DVS)\n**Preview:** The Vertex AI DVS is a Preview feature that is available as-is and is not recommended for production environments. Google provides no service-level agreements (SLA) or technical support commitments for Preview features. For more information, see GDCH's [feature stages](/distributed-cloud/hosted/docs/latest/gdch/resources/feature-stages) .\n[Translation](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/quickstart-translation) and [OCR](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/quickstart-ocr) combine to provide the Document Vision Service (DVS) and document processing feature, which use the Translate Document API for directly translating formatted documents such as PDF files. Compared to plain text translations, the feature preserves the original formatting and layout in your translated documents, helping you retain much of the original context, like paragraph breaks. DVS supports document translations both inline and from storage buckets.\nThis quickstart guides the Application Operator (AO) through the process of using the Vertex AI Translate Document pre-trained API.\n", "content": "## Supported formats\nDVS supports the following input file types and their associated output file types.\n| Inputs | Document MIME type | Output |\n|:---------|:---------------------|:---------|\n| PDF  | application/pdf  | PDF  |\n## Original and scanned PDF document translations\nDVS supports both original and scanned PDF files, including translations to or from right-to-left languages. Also, DVS preserves hyperlinks, font size, and font color from files.\n## Before you begin\n- If you don't have a project, work with your Platform Administrator (PA) to [create one](/distributed-cloud/hosted/docs/latest/gdch/platform/pa-user/create-a-project) .\n- [Enable both the Translation and OCR pre-trained APIs](/distributed-cloud/hosted/docs/latest/gdch/platform/pa-user/vertex-pre-trained-apis#enable-api) .\n- Download the [gdcloud command-line interface (CLI)](/distributed-cloud/hosted/docs/latest/gdch/resources/gdcloud-download) .\n- [Install Vertex AI client libraries](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-install-libraries) . You must download the Vision and Translation client libraries according to your operating system.## Set up your project\nSet up a project using the GDCH console to group the Vertex AI services. For information about creating and using projects, see [Create a project](/distributed-cloud/hosted/docs/latest/gdch/platform/pa-user/create-a-project) .\n## Set up your service account\nSet up your service account with a name, project ID, and service key.\n```\n\u00a0 ${HOME}/gdcloud init \u00a0# set URI and project\u00a0 ${HOME}/gdcloud auth login\u00a0 ${HOME}/gdcloud iam service-accounts create SERVICE_ACCOUNT \u00a0--project=PROJECT_ID\u00a0 ${HOME}/gdcloud iam service-accounts keys create \"SERVICE_KEY\".json --project=PROJECT_ID --iam-account=SERVICE_ACCOUNT\n```\nReplace the following:\n- ``: the name you want to give to your service account.\n- ``: your [project ID number](#set-up-your-project) .\n- ``: the name of the JSON file for the service key.## Grant access to project resources\nGrant access to the Translation API service account by providing your project ID, name of your service account, and the role `ai-translation-developer` .\n```\n\u00a0 ${HOME}/gdcloud iam service-accounts add-iam-policy-binding --project=PROJECT_ID --iam-account=SERVICE_ACCOUNT --role=role/ai-translation-developer\n```\n## Authenticate the gdcloud CLI\nYou must get a token to authenticate the gdcloud CLI before sending requests to the Translation pre-trained services. Follow these steps:\n- Install the `google-auth` client library.```\npip install google-auth\n```\n- Save the following code to a Python script.```\nimport google.authfrom google.auth.transport import requestsapi_endpoint = \"https://ENDPOINT\"creds, project_id = google.auth.default()creds = creds.with_gdch_audience(api_endpoint)def test_get_token():\u00a0 req = requests.Request()\u00a0 creds.refresh(req)\u00a0 print(creds.token)if __name__==\"__main__\":\u00a0 test_get_token()\n```Replace `` with the Translation endpoint. For more information, see [View service statuses and endpoints](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-api-status) .\n- Run the script to fetch the token.\nFor any `grpcurl` or `curl` request, you must replace `` with the fetched token in the header as in the following example:\n```\n-H \"Authorization: Bearer TOKEN\"\n```\n## Translate documents\nDVS in Google Distributed Cloud Hosted (GDCH) provides the following two types of document translations:\n- [Translate a document from a storage bucket](#translate-bucket) \n- [Translate a document inline](#translate-inline) \n### Translate a document from a storage bucket\nTo translate a document that is stored in a bucket, follow these steps:\nBefore using the Translation API to detect text offline, follow these steps:\n- [Create the dvs-project project](/distributed-cloud/hosted/docs/latest/gdch/platform/pa-user/create-a-project) .\n- Create a [storage bucket](/distributed-cloud/hosted/docs/latest/gdch/platform/pa-user/create-storage-buckets#create_a_bucket) in the project, using the`Standard`class.\n- Grant`read`and`write`permissions on the bucket to the Vertex AI Translation system service account (`ai-translation-system-sa`) used by the Translation service.\nAlternatively, you can follow these steps to create the project, storage bucket, role, and role binding using custom resources (CR):\n- Create the `dvs-project` project by deploying a `Project` CR:```\napiVersion: resourcemanager.gdc.goog/v1kind: Projectmetadata:\u00a0 labels:\u00a0 \u00a0 atat.config.google.com/clin-number: <clin-number>\u00a0 \u00a0 atat.config.google.com/task-order-number: <task-order-number>\u00a0 name: dvs-project\u00a0 namespace: platform\n```\n- Create the storage bucket by deploying a `Bucket` CR in the `dvs-project` namespace:```\napiVersion: object.gdc.goog/v1kind: Bucketmetadata:\u00a0 name: dvs-bucket\u00a0 namespace: dvs-projectspec:\u00a0 description: bucket for document vision service\u00a0 storageClass: Standard\u00a0 bucketPolicy:\u00a0 \u00a0 lockingPolicy:\u00a0 \u00a0 \u00a0 defaultObjectRetentionDays: 90\n```\n- Create the role by deploying a `Role` CR in the `dvs-project` namespace:```\napiVersion: rbac.authorization.k8s.io/v1kind: Rolemetadata:\u00a0 name: dvs-reader-writer\u00a0 namespace: dvs-projectrules:\u00a0 -\u00a0 \u00a0 apiGroups:\u00a0 \u00a0 \u00a0 - object.gdc.goog\u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 - buckets\u00a0 \u00a0 verbs:\u00a0 \u00a0 \u00a0 - read-object\u00a0 \u00a0 \u00a0 - write-object\n```\n- Create the role binding by deploying a `RoleBinding` CR in the `dvs-project` namespace:```\napiVersion: rbac.authorization.k8s.io/v1kind: RoleBindingmetadata:\u00a0 name: dvs-reader-writer-rolebinding\u00a0 namespace: dvs-projectroleRef:\u00a0 apiGroup: rbac.authorization.k8s.io\u00a0 kind: Role\u00a0 name: dvs-reader-writersubjects:\u00a0 -\u00a0 \u00a0 kind: ServiceAccount\u00a0 \u00a0 name: ai-translation-system-sa\u00a0 \u00a0 namespace: ai-dvs-system\n```You must upload your documents to the storage bucket to let the Translation service process the files.\nTo upload files to the storage bucket, follow these steps:\n- Configure the gdcloud CLI storage by following the instructions from [Configure the gdcloud CLI for object storage](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/install-configure-storage-cli#gdcloud-storage-configure) .\n- Upload your document to the storage bucket you created. For more information about how to upload objects to storage buckets, see [Upload and download storage objects in projects](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/upload-download-storage-objects#upload_objects_to_storage_buckets) .\nThe following example translates a file from a bucket and outputs the result to another bucket path. The response also returns a byte stream. You can specify the MIME type; if you don't, DVS determines it by using the input file's extension.\nIf you don't specify a source language code, DVS detects the language for you. The detected language is included in the output in the `detectedLanguageCode` field.\nThe following example uses HTTP to call DVS with an input PDF document in a storage bucket.- Save the following `request.json` file:```\ncat <<- EOF > request.json{\u00a0 \"source_language_code\": \"SOURCE_LANGUAGE\",\u00a0 \"target_language_codes\": [\"TARGET_LANGUAGE\", ...],\u00a0 \"input_configs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"s3_source\": {\u00a0 \u00a0 \u00a0 \u00a0 \"input_uri\": \"s3://INPUT_FILE_PATH_1\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"s3_source\": {\u00a0 \u00a0 \u00a0 \u00a0 \"input_uri\": \"s3://INPUT_FILE_PATH_2\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 ...\u00a0 ],\u00a0 \"output_config\": {\u00a0 \u00a0 \"s3_destination\": {\u00a0 \u00a0 \u00a0 \"output_uri_prefix\": \"s3://OUTPUT_FILE_PREFIX\"\u00a0 \u00a0 }\u00a0 },}EOF\n```Replace the following:- ``: the language in which your document is written. For a list of supported languages, see [Get supported languages](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-translation#get-supported-lang) .\n- ``: the language or languages into which you want to translate your document. For a list of supported languages, see [Get supported languages](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-translation#get-supported-lang) .\n- ``: the path of your document file in the storage bucket. You can have more than one source documents in your bucket. If so, specify the path of all the document files and nest them in the`input_configs`field. For example, you can replace another document path in``.\n- ``: the output file prefix for your translated document in the storage bucket.\n- Use the `curl` tool to call the endpoint and take the request from the `request.json` file:```\ncurl --data-binary @- -H \"Content-Type: application/json\" -H \"Authorization: Bearer TOKEN\" https://ENDPOINT.GDCH_URL:443/v3/projects/PROJECT_ID:TranslateDocument<request.json\n```Replace the following:- ``: the token you obtained when you [authenticated the gdcloud CLI](#auth-cli) .\n- ``: the Translation [endpoint](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-api-status) that you use for your organization.\n- ``: the URL of your organization in GDCH, for example,`org-1.zone1.gdch.test`.\n- ``: your project ID number.\nYou obtain the translation in the output path that you specified for your translated file in the storage bucket.\nIf you don't have `grpcurl` installed, download and install it from a resource outside of GDCH ( [https://github.com/fullstorydev/grpcurl#from-source](https://github.com/fullstorydev/grpcurl#from-source) ).\nThe following example uses gRPC to call DVS with an input PDF document in a storage bucket.- Save the following `request.json` file:```\ncat <<- EOF > request.json{\u00a0 \"source_language_code\": \"SOURCE_LANGUAGE\",\u00a0 \"target_language_codes\": [\"TARGET_LANGUAGE\", ...],\u00a0 \"input_configs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"s3_source\": {\u00a0 \u00a0 \u00a0 \u00a0 \"input_uri\": \"s3://INPUT_FILE_PATH_1\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"s3_source\": {\u00a0 \u00a0 \u00a0 \u00a0 \"input_uri\": \"s3://INPUT_FILE_PATH_2\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 ...\u00a0 ],\u00a0 \"output_config\": {\u00a0 \u00a0 \"s3_destination\": {\u00a0 \u00a0 \u00a0 \"output_uri_prefix\": \"s3://OUTPUT_FILE_PREFIX\"\u00a0 \u00a0 }\u00a0 },}EOF\n```Replace the following:- ``: the language in which your document is written. For a list of supported languages, see [Get supported languages](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-translation#get-supported-lang) .\n- ``: the language or languages into which you want to translate your document. For a list of supported languages, see [Get supported languages](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-translation#get-supported-lang) .\n- ``: the path of your document file in the storage bucket. You can have more than one source documents in your bucket. If so, specify the path of all the document files and nest them in the`input_configs`field. For example, you can replace another document path in``.\n- ``: the output file prefix for your translated document in the storage bucket.\n- Use the `grpcurl` tool to call the endpoint and take the request from the `request.json` file:```\ngrpcurl -authority ENDPOINT.GDCH_URL -max-msg-sz 50000000 -d @ \u00a0-H \"Authorization: Bearer TOKEN\" ENDPOINT.GDCH_URL:443 google.cloud.translation.v3.TranslationService/TranslateDocument<request.json\n```Replace the following:- ``: the Translation [endpoint](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-api-status) that you use for your organization.\n- ``: the URL of your organization in GDCH, for example,`org-1.zone1.gdch.test`.\n- ``: the token you obtained when you [authenticated the gdcloud CLI](#auth-cli) .\nYou obtain the translation in the output path that you specified for your translated file in the storage bucket.\n### Translate a document inline\nThe following example sends a document inline as part of the request. You must include the MIME type for inline document translations.\nIf you don't specify a source language code, DVS detects the language for you. The detected language is included in the output in the `detectedLanguageCode` field.\nThe following example uses HTTP to call DVS with an inline PDF document.\n```\necho '{\"parent\": \"projects/PROJECT_ID\",\"source_language_code\": \"SOURCE_LANGUAGE\", \"target_language_code\": \"TARGET_LANGUAGE\", \"document_input_config\": { \"mime_type\": \"application/pdf\", \"content\": \"fake\" }, \"document_output_config\": { \"mime_type\": \"application/pdf\" }, \"enable_rotation_correction\": \"true\"}' | curl --data-binary @- -H \"Content-Type: application/json\" -H \"Authorization: Bearer TOKEN\" https://ENDPOINT.GDCH_URL:443/v3/projects/PROJECT_ID:TranslateDocument\n```\nReplace the following:- ``: your project ID number.\n- ``: the language in which your document is written. For a list of supported languages, see [Get supported languages](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-translation#get-supported-lang) .\n- ``: the language or languages into which you want to translate your document. For a list of supported languages, see [Get supported languages](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-translation#get-supported-lang) .\n- ``: the token you obtained when you [authenticated the gdcloud CLI](#auth-cli) .\n- ``: the Translation [endpoint](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-api-status) that you use for your organization.\n- ``: the URL of your organization in GDCH, for example,`org-1.zone1.gdch.test`.\nYou obtain the output following the command.\nIf you don't have `grpcurl` installed, download and install it from a resource outside of GDCH ( [https://github.com/fullstorydev/grpcurl#from-source](https://github.com/fullstorydev/grpcurl#from-source) ).\nThe following example uses gRPC to call DVS with an inline PDF document.\n```\necho '{\"parent\": \"projects/PROJECT_ID\", \"source_language_code\": \"SOURCE_LANGUAGE\", \"target_language_code\": \"TARGET_LANGUAGE\", \"document_input_config\": { \"mime_type\": \"application/pdf\", \"content\": \"fake\" }, \"document_output_config\": { \"mime_type\": \"application/pdf\" }, \"enable_rotation_correction\": \"true\"}' | grpcurl -authority ENDPOINT.GDCH_URL -max-msg-sz 50000000 -d @ \u00a0-H \"Authorization: Bearer TOKEN\" ENDPOINT.GDCH_URL:443 google.cloud.translation.v3.TranslationService/TranslateDocument\n```\nReplace the following:- ``: your project ID number.\n- ``: the language in which your document is written. For a list of supported languages, see [Get supported languages](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-translation#get-supported-lang) .\n- ``: the language or languages into which you want to translate your document. For a list of supported languages, see [Get supported languages](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-translation#get-supported-lang) .\n- ``: the Translation [endpoint](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-api-status) that you use for your organization.\n- ``: the URL of your organization in GDCH, for example,`org-1.zone1.gdch.test`.\n- ``: the token you obtained when you [authenticated the gdcloud CLI](#auth-cli) .\nYou obtain the output following the command.", "guide": "Documentation"}