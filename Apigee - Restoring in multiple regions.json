{"title": "Apigee - Restoring in multiple regions", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Restoring in multiple regions\nYou are currently viewing version 1.6 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis page describes how to restore Cassandra in multiple regions.\nIn a multi-region deployment, Apigee hybrid is deployed in multiple geographic locations across different datacenters. It is important to note that, if you have multiple Apigee organizations in your deployment, the restore process restores data for **all** the organizations. In a multi-organization setup, restoring only a specific organization is **not** supported.\n", "content": "## Restoring cassandra\nIn a multi-region deployment, there are two possible ways to salvage a failed region. This topic describes the following approaches:\n- [Recover failed region(s)](#recover-failed-region) - Describes the steps to recover failed region(s) based  on a healthy region.\n- [Restore failed region(s)](#restore-nongcs) - Describes the steps to restore failed region(s) from a backup. This approach is only required ifhybrid regions are impacted.\n### Recover failed region(s)\nTo recover failed region(s) from a healthy region, perform the following steps:\n- Redirect the API traffic from the impacted region(s) to the good working region. Plan  the capacity accordingly to support the diverted traffic from failed region(s).\n- Decommission the impacted region. For each impacted region, follow the steps outlined  in [Decommission a hybrid region](/apigee/docs/hybrid/v1.6/decomission-region) . Wait for decommissioning to complete before moving  on to the next step.\n- Restore the impacted region. To restore, create a new region, as described in [Multi-region deployment on GKE, GKE on-prem, and AKS](/apigee/docs/hybrid/v1.6/multi-region) .\n### Restoring from a backup\n**Note** : If you want to preserve an existing setup for troubleshooting and root cause analysis (RCA), you should delete all the`org`and`env`components from the Kubernetes clusterthe Apigee controller, and retain the cluster. The cluster will contain the existing Apigee datastore (Cassandra) which you can use for troubleshooting. Create a new Kubernetes cluster and then restore Cassandra in the new cluster.\nThe Cassandra backup can either reside on Cloud Storage or on a remote server based on your configuration. To restore Cassandra from a backup, perform the following steps:\n- Delete apigee hybrid deployment from all the regions:```\napigeectl delete -f overrides.yaml\n```\n- Restore the desired region from a backup. For more information,   see [Restoring a region from a backup](/apigee/docs/hybrid/v1.6/restore-cassandra-single-region#restore-gcs) .\n- Remove the deleted region(s) references and add the restored region(s) references in the`KeySpaces`metadata.\n- Get the region name by using the`nodetool status`option.```\nkubectl exec -n apigee -it apigee-cassandra-default-0 -- bash\n  nodetool -u ${APIGEE_JMX_USER} -pw ${APIGEE_JMX_PASSWORD} status |grep -i Datacenter\n```\n- Update the`KeySpaces`replication.- [Create a client container](/apigee/docs/hybrid/v1.6/ts-cassandra#create-a-client-container-for-debugging) and connect to the Cassandra   cluster through the CQL interface.\n- Get the list of user keyspaces from CQL interface:```\ncqlsh ${CASSANDRA_SEEDS} -u ${CASS_USERNAME} -p ${CASS_PASSWORD}\n   --ssl -e \"select keyspace_name from system_schema.keyspaces;\"|grep -v system\n```\n- For each keyspace, run the following command from the CQL interface to update the replication settings:```\nALTER KEYSPACE KEYSPACE_NAME WITH replication = {'class': 'NetworkTopologyStrategy', 'REGION_NAME':3};\n```where:- is the name of the keyspace listed in the previous step's output.\n- is the region name obtained in Step 4.\n-", "guide": "Apigee"}