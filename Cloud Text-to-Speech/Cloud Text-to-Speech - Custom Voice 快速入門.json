{"title": "Cloud Text-to-Speech - Custom Voice \u5feb\u901f\u5165\u9580", "url": "https://cloud.google.com/text-to-speech/custom-voice/docs/quickstart?hl=zh-cn", "abstract": "# Cloud Text-to-Speech - Custom Voice \u5feb\u901f\u5165\u9580\n", "content": "## \u6e96\u5099\u5de5\u4f5c\n- \u60a8\u5411 Google \u63d0\u4f9b\u4e86 Google Cloud \u9805\u76ee ID\uff0c\u4ee5\u4fbf\u8a2a\u554f Custom Voice \u529f\u80fd\u3002\u78ba\u4fdd\u60a8\u5df2\u7232\u6b64\u9805\u76ee [\u5553\u7528\u7d50\u7b97\u529f\u80fd\u3001\u5553\u7528 Text-to-Speech API \u548c AutoML API](https://cloud.google.com/text-to-speech/docs/create-audio-text-command-line?hl=zh-cn#before_you_begin) \uff0c\u4e26\u4e14 [\u5df2\u5b89\u88dd\u4e26\u521d\u59cb\u5316 Google Cloud CLI](https://cloud.google.com/sdk/docs/install-sdk?hl=zh-cn) \u3002\n- \u5411\u60a8\u7684 Google \u8cec\u865f\u6388\u4e88\u9805\u76ee\u7684 **AutoML Predictor** \u89d2\u8272\u3002\u5982\u9700\u67e5\u770b\u76f8\u95dc\u8aaa\u660e\uff0c\u8acb\u53c3\u95b1 [\u6388\u4e88\u55ae\u500b\u89d2\u8272](https://cloud.google.com/iam/docs/granting-changing-revoking-access?hl=zh-cn#grant-single-role) \u3002## \u4f7f\u7528\u547d\u4ee4\u884c\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://texttospeech.googleapis.com/v1beta1/text:synthesize\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\u00a0 \"input\":{\u00a0 \u00a0 \"text\":\"Android is a mobile operating system developed by Google, based on the Linux kernel and designed primarily for touchscreen mobile devices such as smartphones and tablets.\"\u00a0 },\u00a0 \"voice\":{\u00a0 \u00a0 \"custom_voice\":{\u00a0 \u00a0 \u00a0 \"reportedUsage\":\"REALTIME\",\u00a0 \u00a0 \u00a0 \"model\":\"projects/{project_id}/locations/us-central1/models/{model_id}\",\u00a0 \u00a0 \u00a0}\u00a0 },\u00a0 \"audioConfig\":{\u00a0 \u00a0 \"audioEncoding\":\"LINEAR16\"\u00a0 }}\n```\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4e26\u5c07 `` \u66ff\u63db\u7232\u60a8\u7684\u9805\u76ee ID\uff1a\n```\ncurl -X POST \\-H \"Authorization: Bearer \"$(gcloud auth print-access-token) \\-H \"x-goog-user-project: PROJECT_ID\" \\-H \"Content-Type: application/json; charset=utf-8\" \\-d @request.json \\https://texttospeech.googleapis.com/v1beta1/text:synthesize\n```\n## \u4f7f\u7528 Python \u5ba2\u6236\u7aef\u5eab\n**\u6ce8\u610f** \uff1a\u5ba2\u6236\u7aef\u5eab\u5df2\u66f4\u65b0\uff0c\u4ee5\u53cd\u6620\u5c0d Custom Voice \u7684\u6700\u65b0\u66f4\u6539\u3002\u9019\u4e9b\u66f4\u6539\u53ef\u80fd\u7121\u6cd5\u5411\u5f8c\u517c\u5bb9\u820a\u7248\u5ba2\u6236\u7aef\u5eab\u3002\n[\u4e0b\u8f09\u5ba2\u6236\u7aef\u5eab](https://storage.cloud.google.com/dialogflow-docs-downloads-priv/texttospeech-custom-voice-beta-v1beta1-py.tar.gz?hl=zh-cn) \u4e26\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\npip install texttospeech-custom-voice-beta-v1beta1-py.tar.gzpip install protobuf --upgrade pip\n```\n### Python \u4ee3\u78bc\u793a\u4f8b\n```\n\"\"\"Synthesize custom voice from the input string of text or ssml.\"\"\"from google.cloud import texttospeech_v1beta1# Instantiate a clientclient = texttospeech_v1beta1.TextToSpeechClient()# Set the text input to be synthesizedsynthesis_input = texttospeech_v1beta1.types.SynthesisInput(text=\"Hello, World!\")# Build the voice request, select the language code (\"en-US\") and specify# custom voice model and speaker_id.custom_voice = texttospeech_v1beta1.types.CustomVoiceParams(\u00a0 \u00a0 reported_usage=texttospeech_v1beta1.enums.CustomVoiceParams.ReportedUsage.REALTIME,\u00a0 \u00a0 model='projects/{project_id}/locations/us-central1/models/{model_id}')voice = texttospeech_v1beta1.types.VoiceSelectionParams(\u00a0 \u00a0 language_code='en-US',\u00a0 \u00a0 custom_voice=custom_voice)# Select the type of audio file you want returnedaudio_config = texttospeech_v1beta1.types.AudioConfig(\u00a0 \u00a0 audio_encoding=texttospeech_v1beta1.enums.AudioEncoding.LINEAR16)# Perform the text-to-speech request on the text input with the selected# voice parameters and audio file typeresponse = client.synthesize_speech(synthesis_input, voice, audio_config)# The response's audio_content is binary.with open('output.wav', 'wb') as out:\u00a0 \u00a0 # Write the response to the output file.\u00a0 \u00a0 out.write(response.audio_content)\u00a0 \u00a0 print('Audio content written to file \"output.wav\"')\n```", "guide": "Cloud Text-to-Speech"}