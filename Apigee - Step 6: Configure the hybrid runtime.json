{"title": "Apigee - Step 6: Configure the hybrid runtime", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 6: Configure the hybrid runtime\nYou are currently viewing version 1.4 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\n", "content": "## \n Specify configuration overrides\nThe Apigee hybrid installer uses defaults for many settings; however, there are a few settings that do not have defaults. You must provide values for these settings, as explained next.\n- Be sure you are in the`` `/hybrid-files/overrides/`directory.```\ncd hybrid-base-directory/hybrid-files/overrides\n```\n- Create a new file named **overrides.yaml** in your favorite text editor. For  example:```\nvi overrides.yaml\n```The `` `.yaml` provides the configuration for your unique Apigee hybrid  installation. The overrides file in this step provides a basic configuration for a small-footprint  hybrid runtime installation, suitable for your first installation.\n- In`` `.yaml`, add the required property values, shown below. A detailed  description of each property is also provided below:\nMake sure the `` `.yaml` file has the following structure and syntax.   Values in are   property values that you must provide. They are described in the [table below](#tablebelow) .\nThere are differences between the different platforms for the Google Cloud project region and   Kubernetes cluster region. Choose the platform where you are installing Apigee hybrid.\n```\ngcp:\n region: analytics-region\n projectID: gcp-project-id\nk8sCluster:\n name: cluster-name\n region: analytics-region # Must be the closest Google Cloud region to your cluster\norg: org-name\ninstanceID: \"unique-instance-identifier\"\ncassandra:\n hostNetwork: false #Set this to `true` for GKE On-prem installations.\nvirtualhosts:\n - name: environment-group-name\n sslCertPath: ./certs/cert-name.pem\n sslKeyPath: ./certs/key-name.key\nenvs:\n - name: environment-name\n serviceAccountPaths:\n  synchronizer: ./service-accounts/synchronizer-service-account-name.json\n  udca: ./service-accounts/udca-service-account-name.json\nmart:\n serviceAccountPath: ./service-accounts/mart-service-account-name.json\nconnectAgent:\n serviceAccountPath: ./service-accounts/mart-service-account-name.json\n # Same account used for mart and connectAgent\nmetrics:\n serviceAccountPath: ./service-accounts/metrics-service-account-name.json\nwatcher:\n serviceAccountPath: ./service-accounts/watcher-service-account-name.json\nlogger:\n enabled: true # set to \"false\" for GKE.\n serviceAccountPath: ./service-accounts/logger-service-account-name.json\n```The following example shows a completed overrides file with example property values   added:\n```\ngcp:\n region: us-central1\n projectID: hybrid-example\nk8sCluster:\n name: apigee-hybrid\n region: us-central1\norg: hybrid-example\ninstanceID: \"my_hybrid_example\"\ncassandra:\n hostNetwork: false # Set this to:\n      # false for GKE installations.\n      # true for GKE On-prem GKE on AWS, Anthos on bare metal,\n      #   AKS, EKS, and OpenShift installations.\nvirtualhosts:\n - name: example-env-group\n sslCertPath: ./certs/keystore.pem\n sslKeyPath: ./certs/keystore.key\nenvs:\n - name: test\n serviceAccountPaths:\n  synchronizer: ./service-accounts/hybrid-project-apigee-synchronizer.json\n  udca: ./service-accounts/hybrid-project-apigee-udca.json\nmart:\n serviceAccountPath: ./service-accounts/hybrid-project-apigee-mart.json\nconnectAgent:\n serviceAccountPath: ./service-accounts/example-hybrid-apigee-mart.json\nmetrics:\n serviceAccountPath: ./service-accounts/hybrid-project-apigee-metrics.json\nwatcher:\n serviceAccountPath: ./service-accounts/hybrid-project-apigee-watcher.json\nlogger:\n enabled: true # set to \"false\" for GKE.\n serviceAccountPath: ./service-accounts/logger-service-account-name.json\n```\n- When you are finished, save the file.\nThe following table describes each of the property values that you must provide in the overrides file. For more information, see [Configuration property reference](/apigee/docs/hybrid/v1.4/config-prop-ref) .\n| Variable       | Description                                                                                                                                        |\n|:----------------------------------||\n| analytics-region     | In GKE, You must set this value to the same region where the cluster is running. In all other platforms, select the closest analytics region to your cluster that has Analytics support (see the table in Part 1, Step 4: Create an organization. This is the value you assigned to the environment variable ANALYTICS_REGION previously.                                                       |\n| gcp-project-id     | Identifies the Google Cloud project where the apigee-logger and the apigee-metrics push their data. This is the value assigned to the environment variable PROJECT_ID.                                                                                                 |\n| cluster-name      | Your Kubernetes cluster name. This is the value assigned to the environment variable CLUSTER_NAME.                                                                                                                  |\n| org-name       | The ID of your Apigee hybrid organization. This is the value assigned to the environment variable ORG_NAME.                                                                                                               |\n| unique-instance-identifier  | A unique string to identify this instance. This can be any combination of letters and numbers up to 63 characters in length. Note: You can create multiple organizations in the same cluster, but the instanceId must be the same for all orgs in the same Kubernetes cluster. For multi-region installations, each region requires its own cluster (individual clusters do not span regions). You can create multiple organizations in the same cluster, but the instanceId must be the same for all orgs in the same kubernetes cluster.      |\n| environment-group-name   | The name of the environment group your environments are assigned to. This is the group you created in Project and org setup - Step 6: Create an environment group. This is the value assigned to the environment variable ENV_GROUP. Note: If you wish to place cluster instances in multiple regions, you must be careful about how you define your environments and virtual hosts. If you have one or more environments attached to an environment group, you must include that same environment group configuration in each cluster instance's overrides file. |\n| cert-name key-name    | Enter the name of the self-signed TLS key and certificate files that you generated previously in Step 3: Install apigeectl. These files must be located in the base_directory/hybrid-files/certs directory. For example: sslCertPath: ./certs/keystore.pem sslKeyPath: ./certs/keystore.key                                                                   |\n| environment-name     | Use the same name that you used when you created an environment in the UI, as explained in Project and org setup - Step 6: Create an environment group.                                                                                                    |\n| synchronizer-service-account-name | The name of the apigee-synchronizer service account key file that you generated with the create-service-account tool in Hybrid runtime setup - Step 6: Create service accounts and credentials. You can see the list of service account files in your service-accounts/ directory. Fore example: ls ../service-accounts/                                                           |\n| udca-service-account-name   | The name of the apigee-udca service account key file that you generated with the create-service-account tool.                                                                                                               |\n| mart-service-account-name   | The name of the apigee-mart service account key file that you generated with the create-service-account tool. Note: Both mart and connectAgent use the apigee-mart service account.                                                                                             |\n| metrics-service-account-name  | The name of the apigee-metrics service account key file that you generated with the create-service-account tool.                                                                                                              |\n| watcher-service-account-name  | The name of the apigee-watcher service account key file that you generated with the create-service-account tool.                                                                                                              |\n| logger-service-account-name  | The name of the apigee-logger service account key file that you generated with the create-service-account tool.                                                                                                              |\n**Note:** If you want to create a security perimeter around your cluster and related Cloud services, you can configure one using Google Cloud [ Virtual Private Cloud (VPC) Service Controls](https://cloud.google.com/vpc-service-controls) with Apigee hybrid. See [Using VPC Service Controls with Apigee and Apigee hybrid](/apigee/docs/api-platform/security/vpc-sc) for instructions.\n## \n Summary\nThe configuration file tells Kubernetes how to deploy the hybrid components to a cluster. Next, you will apply this configuration to your cluster.\n## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled [1](/apigee/docs/hybrid/v1.4/2-1-install-create-cluster) If the button's step matches the current step in the process, make the button disabled [2](/apigee/docs/hybrid/v1.4/2-2-install-cert-manager) If the button's step matches the current step in the process, make the button disabled [3](/apigee/docs/hybrid/v1.4/2-3-install-asm) If the button's step matches the current step in the process, make the button disabled [4](/apigee/docs/hybrid/v1.4/2-4-install-apigeectl) If the button's step matches the current step in the process, make the button disabled [5](/apigee/docs/hybrid/v1.4/2-5-install-service-accounts) If the button's step matches the current step in the process, make the button disabled If the button's step matches the next step [6](/apigee/docs/hybrid/v1.4/2-6-install-configure-cluster) If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 7: Install the hybrid runtime](/apigee/docs/hybrid/v1.4/2-7-install-hybrid-runtime)", "guide": "Apigee"}