{"title": "Recommender - Patterns for using Active Assist at scale", "url": "https://cloud.google.com/recommender/docs/patterns-for-using-active-assist-at-scale", "abstract": "# Recommender - Patterns for using Active Assist at scale\n# Patterns for using Active Assist at scale\nThis document is the first part in a series that introduces architectural patterns that enterprises can use to optimize their cloud footprint at scale using [Active Assist](/solutions/active-assist) . This document is intended for people in the following roles:\n- Enterprise architects\n- Engineering leads\n- People who work in security and create automation to optimize cloud security, performance, and manageability\nThis document discusses the following:\n- The benefits of using Active Assist in an organization.\n- The challenges that organizations might encounter when they adopt Active Assist at enterprise-scale.\n- How to design automation pipelines using Active Assist.\nThe series consists of the following parts:\n- Patterns for using Active Assist at scale (this document)\n- [Using serverless pipelines with Active Assist](/recommender/docs/using-serverless-pipelines-with-active-assist) \n- [Using the GKE Enterprise toolchain with Active Assist ](/recommender/docs/using-anthos-toolchain-with-active-assist) ", "content": "## Active Assist\nActive Assist is a portfolio of tools that use data, intelligence, and machine learning to reduce cloud complexity and administrative work, helping enterprises to optimize the security, performance, manageability, and cost of their cloud.\nMany enterprises have a mandate to ensure that [the principle of least privilege](https://wikipedia.org/wiki/Principle_of_least_privilege) is applied to their business applications and infrastructure. Enterprises also want to minimize resource waste and maximize the performance of business applications while also reducing administrative work and cost. As a consequence, IT departments often face scrutiny and pressure to meet these requirements with speed and agility. Active Assist gives them tools that they can use to help meet these goals.\n## Cloud optimization for enterprises\nBecause workloads, infrastructure, security needs, and processes are unique to each enterprise, you must adapt cloud optimization strategies to meet your specific needs.\nIn the context of this document, cloud optimization strategies for your Google Cloud footprint focus on how you can leverage the Active Assist portfolio when you plan and design optimization strategies.\n### Defining a vision and understanding drivers\nIt's important for enterprises to define the issues that they want to use to inform their approach for cloud footprint optimization. The following are common issues:\n- Security\n- Performance\n- Cost optimization\n- Agility\n### Enterprise goals\nWhen you begin to architect an automation pipeline for Active Assist recommendations, you should start by defining the goals for your enterprise and assigning priorities to each objective. You can then map these priorities to a roadmap for rolling out and scaling Active Assist in your Google Cloud organization.\nFor example, an enterprise might want to use Active Assist recommendations for security and cost optimization. However, the enterprise might initially choose to invest in building an automation pipeline for the security-related recommendations that Active Assist generates. At a later stage, as the enterprise gains more experience in using the Active Assist portfolio and matures in their automation journey, it might automate other types of [recommendations](/recommender/docs/recommenders) , for example, [VM rightsizing](/compute/docs/instances/apply-sizing-recommendations-for-instances) and [Idle VM Recommender](/compute/docs/instances/viewing-and-applying-idle-vm-recommendations) .\n## Designing a strategy\nEnterprises must have a clearly defined process for how they want to review and actuate the recommendations that Active Assist generates. We recommend a phased approach that incorporates an increasing degree of automation in a measured manner. An iterative approach that enterprises can take when adopting Active Assist in their Google Cloud organization is as follows:\n- **Phase one** :- Review Active Assist recommendations in the [Google Cloud console](/cloud-console) .\n- Export the recommendations to [BigQuery](/recommender/docs/bq-export/export-recommendations-to-bq) .\n- **Phase two** :- Use Recommender APIs.\n- **Phase three** :- Integrate recommendations review into DevOps pipelines.This approach lets you iteratively incorporate more automation into your Active Assist recommendations pipelines.\n### Phase one: Reviewing Active Assist recommendations in Google Cloud console\nIn the first phase, you review Active Assist recommendations in the Google Cloud console using [Recommendation Hub](/recommender/docs/recommendation-hub/identify-configuration-problems#:%7E:text=The%20Recommendation%20Hub%20is%20a,these%20in%20a%20central%20location.) . You use a console-based approach to review and implement recommendations. This approach helps you gain familiarity with Active Assist recommendations while assessing their suitability. It also helps you to decide which recommendation categories you want to prioritize. As shown in the following image, Recommendation Hub lets you review recommendations for each resource category that recommendations are available for and drill into the relevant details for each resource within the group.\nEnterprise teams can export recommendations to BigQuery. Exporting recommendations to BigQuery lets you review recommendations at scale across the organization. It also lets you run queries in specific areas of interest for your enterprise.\n### Phase two: Using the Recommender APIs\nIn the second phase, you combine automation with manual reviews and validations to implement recommendations generated by Active Assist. This approach helps you to gain agility. It also lets you make the most of platform-generated recommendations at scale, while retaining tight control on how recommendations are implemented.\nYou learn how this approach can be realized in [Using Serverless pipelines with Active Assist](/architecture/using-serverless-pipelines-with-active-assist) .\n### Phase three: Integration recommendations into DevOps pipelines\nIn the third phase, you bring the review of recommendations into your DevOps pipeline. You inject recommendations management and analysis into the DevOps pipeline, enabling a streamlined process for resource and recommendations management. This approach also enables the development of an approvals process that your teams might already be using as part of the continuous integration and continuous deployment (CI/CD) process. This step relies more heavily on automation and code-based analysis of recommendations than phase two.\nBecause this approach needs an initial investment of effort to develop the automation framework, we recommend that you don't implement this phase until you have a well-established DevOps strategy.\nYou can learn about how this approach works in the following tutorial:\n- [Using recommendations for Infrastructure as Code](/recommender/docs/tutorial-iac) \nWhen you have a defined strategy for the adoption of Active Assist, the next step is to execute and roll out your phased approach.\n## What's next\n- Learn about how to [use recommendations for Infrastructure as Code](/recommender/docs/tutorial-iac) .\n- Read how Active Assist can [help you to optimize Google Cloud resources](https://cloud.google.com/blog/products/management-tools/optimize-google-cloud-resources-with-active-assist) .\n- Learn about [modern CI/CD with GKE](/kubernetes-engine/docs/tutorials/modern-cicd-gke-user-guide) .\n- See how you can [achieve least privilege access using Policy Intelligence](https://www.youtube.com/watch?v=LYUVnvRovIM&feature=youtu.be) .\n- Read about [using IAM Recommender to bulk-apply least privilege principles](https://cloud.google.com/blog/products/identity-security/using-iam-recommender-to-bulk-apply-least-privilege-principles) .", "guide": "Recommender"}