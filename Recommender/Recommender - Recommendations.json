{"title": "Recommender - Recommendations", "url": "https://cloud.google.com/recommender/docs/key-concepts", "abstract": "# Recommender - Recommendations\n# Recommendations\n", "content": "## Recommenders\nA is a service on Google Cloud that provides optimization recommendations for Google Cloud products and resources.\nEach recommender has a unique recommender ID that identifies the service. You use the recommender ID when interacting with recommendations using the Recommender [gcloud](/sdk/gcloud/reference/recommender) commands, or the [REST](/recommender/docs/reference/rest) or [RPC](/recommender/docs/reference/rpc) APIs.\nFor more information, see [Recommenders](/recommender/docs/recommenders) .\n## Recommendations\nA is a machine-generated suggestion for optimizing your usage of Cloud resources. It includes the steps required to take action on the recommendation. Recommenders provide recommendations based on your resource usage, using machine learning or heuristics. Recommender stores recommendations using the [Recommendation](/recommender/docs/reference/rest/v1/projects.locations.recommenders.recommendations#resource-recommendation) entity.\nA recommendation has the following core attributes:\n- [Name](#name) \n- [Description](#description) \n- [Recommender subtype](#recommender_subtype) \n- [Impact](#recommender_impact) \n- [Operation](#operation) \n- [Operation groups](#operation_groups) \n- [State info](#state) \n- [etag](#etag) \n- [Priority](#priority) \n- [State metadata](#state_metadata) \n- [Last refresh time](#last_refresh_time) \n- [Insight reference](#insight_reference) \n- [Configuration](#configuration) \n### Name\nThe recommendation name is stored in the `name` field of the `Recommendation` entity. This is the name for the recommendation in the following format:\n```\nprojects/TARGET_PROJECT_ID/locations/LOCATION/recommenders/RECOMMENDER_ID/recommendations/RECOMMENDATION_ID\n```\nwhere:\n- is the ID of the project where the recommendation was made.\n- is the Google Cloud [location](/compute/docs/regions-zones) where resources associated with the recommendations are located (for example,`global`or`us-central1-a`).\n- is the fully-qualified [recommender ID](/recommender/docs/recommenders#recommenders) (for example,`google.compute.instance.MachineTypeRecommender`).\n- is a unique ID for the recommendation.\n### Description\nThe recommendation description is stored in the `description` field of the `Recommendation` entity. It is only available in English. This is human-readable text that describes the recommendation. In the Google Cloud console, the description appears when you click to view additional recommendation details.\n### Recommender subtype\nA recommender might have subtypes for specific kinds of recommendations. For example, the Identity and Access Management role recommender has the subtypes `REPLACE_ROLE` and `REMOVE_ROLE` . New subtypes might be introduced to the existing recommenders over time. This [overview](/recommender/docs/recommenders) provides a list of all available recommenders. Refer to the recommender documentation to get more information about the recommendation subtypes available.\n### Recommender impact\nAn impact quantifies the projected benefits of performing the recommended action. Each recommendation can have the following types of impact that represent outcomes that can occur as a result of applying the recommendation:\n- The primary impact is mandatory and is stored in the `primaryImpact` field of the `Recommendation` entity.\n- Secondary impact(s) are optional and stored in the `additionalImpact` field.\nThere are the following types of primary and secondary impact:\n- **COST** : Estimated amount of money that you are projected to save (or incur) if you apply a given recommendation. Refer to the `cost` field under [CostProjection](/recommender/docs/reference/rest/v1beta1/billingAccounts.locations.recommenders.recommendations#costprojection) for details.\n- **PERFORMANCE** : Estimated increase or decrease in performance. Please note that some performance recommendations can result in additional cost (for example, if a recommendation is to increase CPU or memory allocation on an overutilized VM).\n- **SECURITY** : Estimated improvement in security posture. Refer to the `details` field under [SecurityProjection](/recommender/docs/reference/rest/v1beta1/billingAccounts.locations.recommenders.recommendations#costprojection) for details.\n- **MANAGEABILITY** : Estimated reduction in manual toil.\n- **SUSTAINABILITY** : Estimated reduction in carbon emissions. Refer to the `carbon_footprint_kg_co2` field under [SustainabilityProjection](/recommender/docs/reference/rest/v1beta1/billingAccounts.locations.recommenders.recommendations#sustainabilityprojection) and [Carbon Footprint reporting methodology](/carbon-footprint/docs/methodology) for details.\n### Operation\nAn [Operation](/recommender/docs/reference/rest/v1/projects.locations.recommenders.recommendations#operation) is the individual action that must be performed as one of the atomic steps in a suggested recommendation. Operations can represent the following changes:\n- Add, remove, or replace JSON object fields in a Google Cloud resource.\n- Add, remove, or replace JSON array fields in a Google Cloud resource. JSON array elements are identified by defining a filter on the path.\n- Add a new Google Cloud resource.\n- Delete a Google Cloud resource.\n- Test operations to indicate the original state of the resource. The test operations can also be used to verify the current state of a resource before applying the recommendation.\n- Copy and move Google Cloud resources and fields.\nEach `Operation` is loosely based on the [JSON Path (RFC6902)](https://tools.ietf.org/html/rfc6902) format for patches. This RFC was selected because it provides a more consistent way to reflect resource changes, including complex scenarios commonly found in Google Cloud. For example, IAM recommendations involve nested arrays to reflect moving a principal's role binding to a different role.\nFor each resource, a changelist (diff-based view) can be generated in the following way:\n- **Original state** : Test operations represent the original value of a field. This represents the left-hand side of the diff view.\n- **Recommended state** : Non-test operations represent the recommended changes per field. This represents the right-hand side of the diff view.\n### Operation groups\nAn is a set of one or more operations that must be performed in a specific order when you apply a recommendation. A recommendation can have one or more operation groups. Operation groups are stored in the `operationGroups` field in the `Recommendation` entity.\nFor example, a recommendation suggesting that you change the VM instance machine type for a Compute Engine instance group has two operation groups: one where you change the machine type in the instance template, and another where you apply the change to a particular instance group.\nBecause the first set of operations must complete before the second can be started, these are defined as two separate instance groups in the recommendation.\nAn operation group can include a operation. Test operations perform checks to ensure that a recommendation is still valid. The recommendation that suggests changing the VM instance machine type has a test operation that checks whether the current machine type is the same as when the recommendation was made.\n### State\nRecommendations go through many state transitions after they are proposed. A recommendation can have the following states:\n- `ACTIVE`, which means that the recommendation has been made, but no actions have been taken in response to it. The recommendation can be applied by claiming it. Active recommendations can be updated when resources change.\n- `CLAIMED`, which means that you or another process has claimed the recommendation and that a response to it is in-progress. When a recommendation is claimed, Recommender does not update it when resources change.\n- `SUCCEEDED`, which means that you or another process has applied the recommendation to the associated resource.\n- `FAILED`, which means that an attempt to apply the recommendation has failed.\n- `DISMISSED`, which means that you or another process has dismissed the recommendation without applying it to the associate resource. This state prevents the recommendation from appearing in the list of recommendations, and is typically applied by an administrator who has invalidated it for various reasons. It also prevents a recommendation from moving to the`CLAIMED`state.\nInformation about the state of the recommendation is stored in the `stateInfo` field of the `Recommendation` entity. This includes the state itself of the recommendation and any additional per-recommender state metadata.\nWhen a recommendation is changed to `CLAIMED` , `SUCCEEDED` , or `FAILED` state, the content of the recommendation is not updated, and recommendation has a lifespan of 90 days from the time of the state change.\n**Note:** You cannot dismiss a recommendation or change the recommendation state to active from the API. Individual recommenders provide the option to set these states in Google Cloud console.\n### etag\nAn is a unique fingerprint that identifies the current state of a recommendation. Each time the recommendation changes, a new etag value is assigned. This value is stored in the `etag` field of the `Recommender` entity.\nAfter you retrieve a recommendation from Recommender using `gcloud` commands or API calls, you reference it in subsequent operations using both the recommendation ID and the etag. This makes sure that any operations are performed only if the recommendation has not changed since you last retrieved it.\n### Priority\nA [priority](/recommender/docs/reference/rest/v1/billingAccounts.locations.recommenders.recommendations#priority) for a recommendation helps give an indication of what actions must be tackled first. This field comes with values `P1` , `P2` , `P3` , and `P4` with `P4` set as the default priority. Each [recommender](/recommender/docs/recommenders) can have its own prioritization strategy defined.\n### State metadata\nWhen you claim a recommendation or mark it as succeeded or failed, you can include additional metadata about the operation with state metadata.\nThe metadata is specified as `key:value` pairs. For example:\n```\n{\u00a0 \"stateMetadata\": {\u00a0 \u00a0 \"priority\" : \"high\",\u00a0 \u00a0 \"tracking_number\": \"12345\" }}\n```\nUpdates to the `stateMetadata` field overwrites an existing state metadata.\n### Last refresh time\nThe last refresh time indicates when the recommendation was last refreshed by the generation process. The content of the recommendation reflects the state of the resources at the last refresh time.\n### Examples\nThe following example shows a sizing recommendation for a VM instance in Compute Engine.\n```\n{\u00a0 \"content\": {\u00a0 \u00a0 \"operationGroups\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"operations\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"action\": \"test\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"path\": \"/machineType\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"resource\": \"//compute.googleapis.com/projects/example-project/zones/us-central1-a/instances/instance-rightsizing-2\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"resourceType\": \"compute.googleapis.com/Instance\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"valueMatcher\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"matchesPattern\": \".*zones/us-central1-a/machineTypes/n1-standard-4\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"action\": \"replace\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"path\": \"/machineType\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"resource\": \"//compute.googleapis.com/projects/example-project/zones/us-central1-a/instances/instance-rightsizing-2\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"resourceType\": \"compute.googleapis.com/Instance\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"value\": \"zones/us-central1-a/machineTypes/custom-2-5120\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 \"description\": \"Save cost by changing machine type from n1-standard-4 to custom-2-5120.\",\u00a0 \"etag\": \"\\\"923daeebe926c12f\\\"\",\u00a0 \"recommenderSubtype\": \"CHANGE_MACHINE_TYPE\",\u00a0 \"lastRefreshTime\": \"2019-06-13T06:44:58Z\",\u00a0 \"name\": \"projects/32428390823/locations/us-central1-a/recommenders/google.compute.instance.MachineTypeRecommender/recommendations/a523ff7e-ed03-4143-a3a5-5b396b99cba9\",\u00a0 \"primaryImpact\": {\u00a0 \u00a0 \"category\": \"COST\",\u00a0 \u00a0 \"costProjection\": {\u00a0 \u00a0 \u00a0 \"cost\": {\u00a0 \u00a0 \u00a0 \u00a0 \"currencyCode\": \"USD\",\u00a0 \u00a0 \u00a0 \u00a0 \"units\": \"-73\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"duration\": \"2592000s\"\u00a0 \u00a0 }\u00a0 },\u00a0 \"stateInfo\": {\u00a0 \u00a0 \"state\": \"ACTIVE\"\u00a0 }}\n```\nFor more examples of recommendations, see the documentation for individual recommenders in [Recommenders](/recommender/docs/recommenders) .\n### Insight reference\nReference to an associated [insight](/recommender/docs/insights/using-insights#insights) . References link recommendations with their associated insights, if any.\n### Configuration\nThrough the recommender configuration, you can do the following:\n- Customize the way in which insights and recommendations are generated. This is done by modifying some of the configuration parameters that are used to generate these insights and recommendations.\n- Each recommender configuration starts with some default values for each parameter. Each parameter has a range of values that you can use to customize the configuration.\n- The active configuration is the one you last modified. For every change made to the configuration, it takes up to 48 hours for the configuration to take effect.\n**Note:** You can retrieve the configuration details for a recommender or insight type only if they support this configuration setting.\nAn example for a recommender configuration is setting a default CPU threshold or an observation period to create recommendations that better fit your workloads, applications, and infrastructure needs.\nWith the configuration API, you can retrieve the configuration for a recommender or insight type. You have the option to update the configuration parameters for a single project. Each recommender config or insight type requires specific permissions to view and modify the configuration parameters.\nHere's an example response containing configuration parameters for an Idle VM recommender:\n```\n{\u00a0 \"name\": \"projects/project-number/locations/global/recommenders/google.iam.policy.Recommender/config\",\u00a0 \"recommenderGenerationConfig\": {\u00a0 \u00a0 \"params\": {\u00a0 \u00a0 \u00a0 \"minimum_observation_period\": \"P90D\",\u00a0 \u00a0 }\u00a0 },\u00a0 \"etag\": \"\\\"2f3c9b65cda6a4ba\\\"\",\u00a0 \"updateTime\": \"2020-11-03T04:41:15.330351Z\"}\n```", "guide": "Recommender"}