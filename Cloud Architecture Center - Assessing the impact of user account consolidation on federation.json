{"title": "Cloud Architecture Center - Assessing the impact of user account consolidation on federation", "url": "https://cloud.google.com/architecture/reference-patterns/overview", "abstract": "# Cloud Architecture Center - Assessing the impact of user account consolidation on federation\nLast reviewed 2023-02-27 UTC\nIf you plan to federate [Cloud Identity](/identity) or [Google Workspace](https://gsuite.google.com/) with an external identity provider (IdP) but still need to consolidate existing consumer accounts, this document helps you understand and assess the interplay between federation and consolidation. This document also shows you how to configure federation in a way that doesn't interfere with your ability to consolidate existing consumer accounts.\n**Note:** This document applies only if you decided to follow [Plan 3: Federation with user account consolidation](/architecture/identity/assessing-onboarding-plans#plan_3_federation_with_user_account_consolidation) (or a variation thereof).\n", "content": "## Interplay between federation and user account consolidation\nIn a federated setup, you connect Cloud Identity or Google Workspace to an external [authoritative source](/architecture/identity/overview-google-authentication#external_authoritative_source) so that the authoritative source can automatically provision user accounts in Cloud Identity or Google Workspace.\nThese invariants typically hold for a federated setup:\n- The authoritative source is the only source for identities.\n- There are no user accounts in Cloud Identity or Google Workspace other than the ones provisioned by the authoritative source.\n- The SAML identity provider does not allow Google single sign-on for any identities other than the ones for which the authoritative source has provisioned user accounts.\nAlthough these invariants reflect the [best practices for federating Google Cloud with an external identity provider](/architecture/identity/best-practices-for-federating) , they cause problems when you want to migrate existing consumer accounts:\n- Existing consumer accounts don't originate from the authoritative source. These accounts already exist, and they now need to be linked to an identity known by the authoritative source.\n- Existing consumer accounts, once they are migrated to Cloud Identity or Google Workspace, are user accounts that have not been provisioned by the authoritative source. The authoritative source must recognize and \"adopt\" these migrated accounts.\n- The identities of existing consumer accounts might be unknown to the SAML identity provider, yet they still need to be allowed to use single sign-on.\nTo allow existing consumer accounts to be consolidated, you have to temporarily set up federation in a way that is .\n## Making federation safe for account consolidation\nThe following table lists the requirements to consider in order to make federation safe for account consolidation. If you plan to [use an external IdP](/architecture/identity/reference-architectures#using_an_external_idp) but still need to consolidate existing consumer accounts, then you have to make sure that your setup initially meets these requirements. After you have completed the migration of existing consumer accounts, you are free to change the configuration because the requirements then no longer hold.\n| Requirement                | Justification                                                                                                                                                                                |\n|:--------------------------------------------------------------------------||\n| Allow single sign-on for identities with consumer accounts    | Migrating a consumer account requires an account transfer. A Cloud Identity or Google Workspace administrator initiates the account transfer, but in order to complete the transfer, the owner of the consumer account must consent to the transfer. As an administrator, you have limited control over when the consent will be expressed and thus, when the transfer is conducted. Once the owner expresses consent and the transfer is complete, all subsequent sign-ons are subject to single sign-on using your external IdP. For single sign-on to succeed, regardless of when the transfer is complete, ensure that your external IdP allows single sign-ons for the identities of all consumer accounts that you plan to migrate. |\n| Prevent automatic user provisioning for identities with consumer accounts | If you provision a user account for an identity that already has a consumer account, you create a conflicting account. A conflicting account blocks you from transferring ownership of the consumer account, its configuration, and any associated data to Cloud Identity or Google Workspace. The default behavior of many external IdPs is to proactively create user accounts in Cloud Identity or Google Workspace. This behavior can inadvertently cause conflicting accounts to be created. By preventing automatic user provisioning for identities with existing consumer accounts, you avoid inadvertently creating conflicting accounts and ensure that consumer accounts can be transferred correctly.       |\nIf you have identified [consumer accounts without a matching identity in the external IdP](/architecture/identity/assessing-existing-user-accounts#consumer_accounts_without_a_matching_identity_in_the_external_idp) that you consider legitimate and that you want to migrate to Cloud Identity or Google Workspace, then you have to make sure that your federation configuration does not interfere with your ability to migrate these consumer accounts.\n| Requirement                   | Justification                                                                                                                      |\n|:--------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Prevent deletion of migrated accounts without a matching identity in the external IdP | If you have a user account in Cloud Identity or Google Workspace that does not have a matching identity in your external IdP, then your IdP might consider this user account orphaned and might suspend or delete it. By preventing your external IdP from suspending or deleting migrated accounts without matching the identity in the external IdP, you avoid losing the configuration and data associated with affected accounts and ensure that you can manually reconcile the accounts them. |\n## Making Microsoft Entra ID (formerly Azure AD) federation safe for account consolidation\nIf you plan to [federate Cloud Identity or Google Workspace with Microsoft Entra ID (formerly Azure AD)](/architecture/identity/federating-gcp-with-azure-active-directory) , you can use the [Google Workspace gallery app](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/aad.googleapps) .\n**Note:** The [Google Workspace gallery app from the Microsoft Azure marketplace](https://azuremarketplace.microsoft.com/marketplace/apps/aad.googleapps) is a Microsoft product and is neither maintained nor supported by Google.\nWhen you enable provisioning, Microsoft Entra ID ignores existing accounts in Cloud Identity or Google Workspace that don't have a counterpart in Microsoft Entra ID, so the requirement to [prevent deletion of migrated accounts without a matching identity in the external IdP](#prevent_deletion_of_migrated_accounts_without_a_matching_identity_in_the_external_idp) is always met.\nDepending on how you configure the gallery app, you must still ensure that you do the following:\n- [Allow single sign-on for identities with consumer accounts](#making_federation_safe_for_account_consolidation_1) .\n- [Prevent automatic user provisioning for identities with consumer accounts](#making_federation_safe_for_account_consolidation_2) .\nThere are multiple ways to meet these requirements. Each approach has advantages and disadvantages.\n### Approach 1: Don't configure provisioning\nIn this approach, you configure the gallery app to handle single sign-on, but you don't configure automatic user provisioning. By not configuring user provisioning, you [prevent automatic user provisioning for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) .\nTo [allow single sign-on for identities with consumer accounts](#making_federation_safe_for_account_consolidation_1) , assign the app to all identities that might eventually need access to Google services, even if their existing consumer accounts are still subject to being migrated.\nFor a user who has an existing consumer account, the corresponding Cloud Identity or Google Workspace user account is created automatically when the transfer request is accepted. That user can then immediately use single sign-on.\nFor users who don't have a user account in Cloud Identity or Google Workspace, you have to create one manually.\nAlthough this approach meets the requirements and is the least complex to set up, it comes with the limitation that any attribute changes or user suspensions performed in Microsoft Entra ID will not be propagated to Cloud Identity or Google Workspace.\n### Approach 2: Two apps with manual assignment\nIn this approach, you overcome the limitation of having to manually create user accounts in Google Workspace or Cloud Identity for users that don't have an existing account. The idea is to use two gallery apps, one for provisioning and one for single sign-on:\n- The first app is used exclusively for provisioning users and groups and has single sign-on disabled. By assigning users to this app, you control which accounts are being provisioned to Cloud Identity or Google Workspace.\n- The second app is used exclusively for single sign-on and is not authorized to provision users. By assigning users to this app, you control which users are allowed to sign on.\nUsing these two apps, assign users as follows:\n- Assign all identities that eventually need access to Google services to the single sign-on app. Include identities with existing consumer accounts so that you [allow single sign-on for identities with consumer accounts](#allow_single_sign-on_for_identities_with_consumer_accounts) .\n- When assigning identities to the provisioning app, include the identities that eventually need access to Google services, but exclude all identities that are known to have an existing consumer account. This way, you [prevent automatic user provisioning for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) .\n**Important:** However, any mistake in assignment can lead immediately to a conflicting account being created, making this approach more risky than other approaches.\n### Approach 3: Two apps with user creation disabled\nWhen configuring provisioning, you need to authorize Microsoft Entra ID to access Cloud Identity or Google Workspace by using a Cloud Identity or Google Workspace account. Normally, it's best to use a dedicated super-admin account for this purpose, because super-admin accounts are exempted from single sign-on (that is, any SSO configuration doesn't apply to them; they will continue to use passwords for login).\nHowever, for this scenario, you can have Microsoft Entra ID use a more restricted account for migration, one that doesn't allow Microsoft Entra ID to create users. That way, you effectively [prevent Azure from automatically provisioning user accounts for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) , regardless of which users are assigned to the provisioning app.\nA restricted admin user account in Cloud Identity or Google Workspace should have only the following privileges:\n- Organization Units > Read\n- Users > Read\n- Users > Update\n- Groups\n**Note:** Disallowing Microsoft Entra ID from creating user accounts won't stop it from attempting to create them. Therefore, you're likely to find errors in the Microsoft Entra ID audit logs indicating that it failed to create user accounts in Cloud Identity or Google Workspace.\nA downside of this approach is that for users without unmanaged accounts, you must manually create accounts in Cloud Identity or Google Workspace.\n### Federating with Microsoft Entra ID: Comparison\nThe following table summarizes the approaches.\n| Unnamed: 0          | Allow single sign-on for identities with consumer accounts | Prevent automatic user provisioning for identities with consumer accounts | Prevent deletion of migrated accounts without a matching identity in the external IdP | Auto-provision new accounts | Auto-update migrated accounts |\n|:-------------------------------------------------|:-------------------------------------------------------------|:----------------------------------------------------------------------------|:----------------------------------------------------------------------------------------|:------------------------------|:--------------------------------|\n| Approach 1: No provisioning      | \u2705               | \u2705                   | \u2705                      | X        | X        |\n| Approach 2: Two apps with manual assignment  | \u2705               | Prone to manual error              | \u2705                      | \u2705       | \u2705        |\n| Approach 3: Two apps with user creation disabled | \u2705               | \u2705                   | \u2705                      | X        | \u2705        |\n## Making Active Directory federation safe for account consolidation\nIf you plan to [federate Cloud Identity or Google Workspace with Active Directory](/architecture/identity/federating-gcp-with-active-directory-introduction) , you can use [Google Cloud Directory Sync](https://support.google.com/a/answer/106368) and Active Directory Federation Services (AD FS). When you configure Google Cloud Directory Sync and AD FS, you have to make sure to do the following:\n- [Allow single sign-on for identities with consumer accounts](#allow_single_sign-on_for_identities_with_consumer_accounts) .\n- [Prevent automatic user provisioning for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) .\n- [Prevent the deletion of migrated accounts without a matching identity in the external IdP](#prevent_deletion_of_migrated_accounts_without_a_matching_identity_in_the_external_idp) .\nThere are multiple ways to meet these requirements. Each approach has advantages and disadvantages.\n### Approach 1: Disabling Google Cloud Directory Sync\nIn this approach, you set up single sign-on with AD FS, but you don't enable Google Cloud Directory Sync until you've finished migrating unmanaged user accounts. By disabling Google Cloud Directory Sync, you [prevent automatic user provisioning for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) .\nTo [allow single sign-on for identities with consumer accounts](#allow_single_sign-on_for_identities_with_consumer_accounts) , create a custom [access control policy](https://docs.microsoft.com/windows-server/identity/ad-fs/operations/access-control-policies-in-ad-fs) in AD FS and assign all identities that might eventually need access to Google services, even if their existing consumer accounts are still subject to being migrated.\nFor a user who has an existing consumer account, the corresponding Cloud Identity or Google Workspace user account is created automatically when the transfer request is accepted. By using the custom access control policy, you ensure that the user can immediately use single sign-on.\nFor users who don't have a user account in Cloud Identity or Google Workspace, you have to create one manually.\nAlthough this approach meets the requirements and is the least complex to set up, it comes with the limitation that any attribute changes or user suspensions performed in Active Directory will not be propagated to Cloud Identity or Google Workspace.\n### Approach 2: Google Cloud Directory Sync with manual assignment\nIn this approach, you overcome the limitation of having to manually create user accounts in Cloud Identity or Google Workspace for users that don't have an existing account:\n- Equivalent to Approach 1, you [allow single sign-on for identities with consumer accounts](#allow_single_sign-on_for_identities_with_consumer_accounts) by creating a custom [access control policy](https://docs.microsoft.com/windows-server/identity/ad-fs/operations/access-control-policies-in-ad-fs) in AD FS and assigning all identities that might eventually need access to Google services, even if their existing consumer accounts are still subject to being migrated.\n- Create a group in Active Directory that reflects the user accounts that you want to automatically provision to Google Cloud Directory Sync. In the list of members, include the identities that eventually need access to Google services, but exclude all identities that are known to have an existing consumer account.\n- Configure Google Cloud Directory Sync to provision user accounts only for identities that are members of this group. This way, you [prevent automatic user provisioning for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) .\nA key limitation of this approach is that you cannot [prevent the deletion of migrated accounts without a matching identity in the external IdP](#prevent_deletion_of_migrated_accounts_without_a_matching_identity_in_the_external_idp) . The approach is therefore applicable only if you don't have any [consumer accounts without a matching identity in the external IdP](/architecture/identity/assessing-existing-user-accounts#consumer_accounts_without_a_matching_identity_in_the_external_idp) .\n**Important:** Any mistake in assignment can lead to a conflicting account being created, making this approach more risky than other approaches.\n### Approach 3: Disallowing Google Cloud Directory Sync to create users\nWhen configuring provisioning, you must authorize Google Cloud Directory Sync to access Cloud Identity or Google Workspace. Normally, it's best to use a dedicated super-admin account for this purpose, because such accounts are exempted from single sign-on (that is, any SSO configuration doesn't apply to them; they will continue to use passwords for login).\nHowever, for this scenario, you can have Google Cloud Directory Sync use a more restricted account for migration, one that doesn't allow it to create users. That way, you effectively [prevent Google Cloud Directory Sync from automatically provisioning user accounts for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) and from [deleting migrated accounts without a matching identity in the external IdP](#prevent_deletion_of_migrated_accounts_without_a_matching_identity_in_the_external_idp) .\nA restricted admin user account in Cloud Identity or Google Workspace should only have the following privileges:\n- Organizational Units\n- Users > Read\n- Users > Update\n- Groups\n- Schema Management\n- Domain Management\n**Note:** Disallowing Google Cloud Directory Sync from creating user accounts won't stop it from attempting to create them. Therefore, you're likely to find errors in the Google Cloud Directory Sync log indicating that it failed to create user accounts in Cloud Identity or Google Workspace.\nA downside of this approach is that for users without unmanaged accounts, you must manually create accounts in Cloud Identity or Google Workspace.\n### Federating with Active Directory: Comparison\nThe following table summarizes the approaches.\n| Unnamed: 0        | Allow single sign-on for identities with consumer accounts | Prevent automatic user provisioning for identities with consumer accounts | Prevent deletion of migrated accounts without a matching identity in the external IdP | Auto-provision new accounts | Auto-update migrated accounts |\n|:------------------------------------------|:-------------------------------------------------------------|:----------------------------------------------------------------------------|:----------------------------------------------------------------------------------------|:------------------------------|:--------------------------------|\n| Approach 1: Don't configure provisioning | \u2705               | \u2705                   | \u2705                      | X        | X        |\n| Approach 2: GCDS with manual assignment | \u2705               | Prone to manual error              | X                      | \u2705       | \u2705        |\n| Approach 3: Disallow GCDS to create users | \u2705               | \u2705                   | \u2705                      | X        | \u2705        |\n## Making Okta federation safe for account consolidation\nTo federate Cloud Identity or Google Workspace with Okta, [you can use the Google Workspace app](/architecture/identity/okta-provisioning-and-single-sign-on) from the Okta app catalog. This app can handle [single sign-on](https://saml-doc.okta.com/SAML_Docs/How-to-Enable-SAML-2.0-in-Google-Apps.html) and [provision users and groups to Cloud Identity or Google Workspace](https://saml-doc.okta.com/Provisioning_Docs/G_Suite_Provisioning.html) .\nWhen you use the Google Workspace app for provisioning, Okta ignores any existing users in Cloud Identity or Google Workspace that don't have a counterpart in Okta, so the requirement to [prevent deletion of migrated accounts without a matching identity in the external IdP](#prevent_deletion_of_migrated_accounts_without_a_matching_identity_in_the_external_idp) is always met.\nDepending on how you configure Okta, you must still do the following:\n- [Allow single sign-on for identities with consumer accounts](#allow_single_sign-on_for_identities_with_consumer_accounts) .\n- [Prevent automatic user provisioning for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) .\nThere are multiple ways to meet these requirements. Each approach has advantages and disadvantages.\n### Approach 1: Don't configure provisioning\nIn this approach, you configure the Google Workspace app to handle single sign-on but don't configure provisioning at all. By not configuring user provisioning, you [prevent automatic user provisioning for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) .\nTo [allow single sign-on for identities with consumer accounts](#allow_single_sign-on_for_identities_with_consumer_accounts) , assign the app to all identities that might eventually need access to Google services, even if their existing consumer accounts are still subject to being migrated. The Google Workspace or Google Cloud icons appear on the Okta homepage of all identities that have been assigned to the app. However, signing in will fail unless a corresponding user account happens to exist on the Google side.\nFor a user who has an existing consumer account, the corresponding Cloud Identity or Google Workspace user account is created automatically when the transfer request is accepted. That user can then immediately use single sign-on.\nAlthough this approach meets the requirements and is the least complex to set up, it comes with the limitation that any attribute changes or user suspensions performed in Okta won't be propagated to Cloud Identity or Google Workspace. Another downside of this approach is that you must manually create accounts in Cloud Identity or Google Workspace for all users who don't have an existing consumer account.\n### Approach 2: Provision with manual assignment\nIn this approach, you configure the Google Workspace app to handle single sign-on and provisioning but only enable the following provisioning features:\n- Create users\n- Update user attributes\n- Deactivate users\nWhen you assign identities to the app, include the identities that eventually need access to Google services, but exclude all identities that are known to have an existing consumer account. This way, you [prevent automatic user provisioning for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) .\nAs soon as a user accepts a transfer request, assign the user to the app so that they are enabled to use single sign-on and access Google Workspace or Google Cloud.\nOne downside of this approach is that any mistake that you make in assignment can immediately lead to a conflicting account being created, which makes this approach much riskier than some of the other approaches.\nAnother downside of this approach is that it causes temporary lockouts of migrated accounts. After accepting a transfer request, a user has to perform any subsequent sign-ons through Okta. These sign-on attempts will fail until you have assigned the user to the app in Okta.\n### Approach 3: Provision with user creation disabled\nIn this approach, you configure Google Workspace to handle single sign-on and provisioning but only enable the following provisioning features:\n- Update user attributes\n- Deactivate users\nLeave the **Create Users** option disabled and assign all identities that eventually need access to Google services to the app. Include identities with existing consumer accounts so that you [allow single sign-on for identities with consumer accounts](#allow_single_sign-on_for_identities_with_consumer_accounts) .\nBy disallowing Okta to create accounts, you [prevent Okta from automatically provisioning user accounts for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) . At the same time, this configuration still lets Okta propagate attribute changes and user suspensions to Cloud Identity or Google Workspace for those users that have a corresponding Google Account.\nFor identities that don't have a corresponding user account in Cloud Identity or Google Workspace, Okta might display an error message in the Okta Admin console:\nFor a user who has an existing consumer account, the corresponding Cloud Identity or Google Workspace user account is created automatically when the transfer request is accepted. That user can then immediately use single sign-on. Although the user account is functional at this point, Okta might not display an icon on the user's home page yet and might instead continue to display the error message in the Admin UI. To fix this, retry the assignment task in the Okta Administrator Dashboard.\nThis approach successfully [prevents Okta from automatically provisioning user accounts for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) , but still [allows single sign-on for identities with consumer accounts](#making_federation_safe_for_account_consolidation_1%22) . The approach is also less prone to accidental misconfiguration than the second approach. One downside is still that for users without existing consumer accounts, you must manually create user accounts in Cloud Identity or Google Workspace.\n### Approach 4: Two apps with manual assignment\nYou can overcome some of the disadvantages of the previous approaches by using two apps, one for provisioning and one for single sign-on:\n- Configure one instance of the Google Workspace app to handle provisioning only. The single sign-on functionality of the app is not used. By assigning users to this app, you control which accounts are being provisioned to Cloud Identity or Google Workspace. You can ensure that this app is effectively hidden from your users by enabling the **Do not display\napplication icon to users** option.\n- Configure another instance of the Google Workspace app for single sign-on purposes only. By assigning users to this app, you control who is allowed to sign on.\nUsing these two apps, assign users as follows:\n- Assign all identities that eventually need access to Google services to the single sign-on app. Include identities with existing consumer accounts so that you [allow single sign-on for identities with consumer accounts](#allow_single_sign-on_for_identities_with_consumer_accounts) .\n- When assigning identities to the provisioning app, include the identities that eventually need access to Google services, but exclude all identities that are known to have an existing consumer account. This way, you [prevent automatic user provisioning for identities with consumer accounts](#prevent_automatic_user_provisioning_for_identities_with_consumer_accounts) .Whenever a user accepts a transfer request, assign the user to the app as well.\n**Important:** Similar to Approach 2, a downside of this approach is that any mistake that you make in assignment can immediately lead to a conflicting account being created, making this approach substantially more risky than other approaches.\n### Federating with Okta: Comparison\nThe following table summarizes the approaches.\n| Unnamed: 0          | Allow single sign-on for identities with consumer accounts | Prevent automatic user provisioning for identities with consumer accounts | Prevent deletion of migrated accounts without a matching identity in the external IdP | Auto-provision new accounts | Auto-update migrated accounts |\n|:--------------------------------------------------|:-------------------------------------------------------------|:----------------------------------------------------------------------------|:----------------------------------------------------------------------------------------|:------------------------------|:--------------------------------|\n| Approach 1: No provisioning      | \u2705               | \u2705                   | \u2705                      | X        | X        |\n| Approach 2: Provision with manual assignment  | X               | Risky                  | \u2705                      | \u2705       | \u2705        |\n| Approach 3: Provision with user creation disabled | \u2705               | \u2705                   | \u2705                      | X        | \u2705        |\n| Approach 4: Two apps with manual assignment  | \u2705               | Risky                  | \u2705                      | \u2705       | \u2705        |\n## What's next\n- Review how you can [set up federation with Active Directory](/architecture/identity/federating-gcp-with-azure-active-directory) or [Microsoft Entra ID](/architecture/identity/federating-gcp-with-azure-active-directory) .\n- Start your onboarding process by [preparing Cloud Identity or Google Workspace accounts](/architecture/identity/preparing-your-g-suite-or-cloud-identity-account) .", "guide": "Cloud Architecture Center"}