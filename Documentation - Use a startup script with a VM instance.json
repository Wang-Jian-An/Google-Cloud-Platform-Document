{"title": "Documentation - Use a startup script with a VM instance", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Use a startup script with a VM instance\nA startup script performs tasks during the start-up process for a virtual machine (VM). This page provides you with the steps to follow for using startup scripts on VM instances.\n", "content": "## Before you begin\nTo use `gdcloud` command-line interface (CLI) commands, ensure that you have downloaded, installed, and configured the [gdcloud CLI](/distributed-cloud/hosted/docs/latest/gdch/resources/gdcloud-overview) . All commands for Distributed Cloud Hosted use the `gdcloud` or `kubectl` CLI, and require an operating system (OS) environment.\n### Get the kubeconfig file path\nTo run commands against the org admin cluster, ensure you have the following resources:\n- Locate the org admin cluster name, or ask your Platform Administrator (PA) what the cluster name is.\n- [Sign in and generate](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/iam/sign-in#cli) the kubeconfig file for the org admin cluster if you don't have one.\n- Use the path to the kubeconfig file of the org admin cluster to replace `` in these instructions.\n- Make sure you have enabled access to [create and manage secrets](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/preparation#grant-user-access-vm-resources) .## Pass a startup script\nYou can use either bash or non-bash scripts as startup scripts. To do so, include `#!/bin/\u2026` at the beginning of the script to indicate the script interpreter. For example, to use a Python 3 startup script, add `#! /usr/bin/python3` to the beginning of the script.\n### Startup script execution order\nStartup scripts are executed in alphabetical order, based on the name of each startup script.\n### Startup script YAML format\nTo use a startup script you must add the `startupScripts` field to the VM `spec` field. Within this field you can specify multiple startup scripts. Scripts must be specified as Kubernetes secrets.      |\nThe following example has two startup scripts specified as Kubernetes secrets:\n```\napiVersion: virtualmachine.gdc.goog/v1kind: VirtualMachinemetadata:\u00a0 name: \"my-vm\"spec:\u00a0 \u2026\u00a0 startupScripts:\u00a0 - name: hello-world\u00a0 \u00a0 scriptSecretRef:\u00a0 \u00a0 \u00a0 name: hello-world\u00a0 - name: add-user\u00a0 \u00a0 scriptSecretRef:\u00a0 \u00a0 \u00a0 name: add-user---apiVersion: v1kind: Secrettype: Opaquemetadata:\u00a0 name: hello-worlddata:\u00a0 script:\u00a0 \u00a0 IyEvYmluL2Jhc2gKZWNobyBoZWxsbwo=---apiVersion: v1kind: Secrettype: Opaquemetadata:\u00a0 name: add-userdata: \u00a0 script:\u00a0 \u00a0 IyEvYmluL2Jhc2gKYWRkdXNlciB1c2VyCg==\n```\n### Important notes\n- The startup script runs on.\n- The startup script has default root privileges.\n- The name of the`scriptSecretRef`in the VM`spec`must match the`metadata.name`field in the Kubernetes secret.\n- The startup script content in the Kubernetes secret must be specified by adding a key`script`to the`data`field.## Create a new VM with a startup script\nThese instructions apply regardless of what you use as the image to create your VM.\n- Create the startup script secret:```\ncat <<EOF >>FILE_NAMESTARTUP_SCRIPT_CONTENTEOF\n``````\nkubectl --kubeconfig ORG_ADMIN_KUBECONFIG create secret -n PROJECT generic SCRIPT_SECRET_NAME --from-file=script=FILE_NAME\n``````\nrm FILE_NAME\n```\n- Reference the steps to create a VM as described on the [create a VM](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/create-a-vm/create-and-start) page. At [step 1](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/create-a-vm/create-and-start#create-vm-from-provided-image) add the startup script or scripts to the `spec` field before you run the command to create a VM.```\napiVersion: virtualmachine.gdc.goog/v1kind: VirtualMachinemetadata:name: VM_NAMEnamespace: PROJECTspec:\u2026startupScripts:- name: SCRIPT_NAME\u00a0 scriptSecretRef:\u00a0 \u00a0 \u00a0 name: SCRIPT_SECRET_NAME\n```These variables are defined as follows:| Variable    | Definition                |\n|:-----------------------|:-------------------------------------------------------------------------|\n| ORG_ADMIN_KUBECONFIG | The org admin cluster kubeconfig file path.        |\n| PROJECT    | The Distributed Cloud Hosted project in which you want to create the VM. |\n| VM_NAME    | The name of the VM.              |\n| nan     | nan                  |\n| FILE_NAME    | The name of the file to store the startup script.      |\n| STARTUP_SCRIPT_CONTENT | The commands to run as part of the startup script      |\n| SCRIPT_SECRET_NAME  | The name of the startup script secret.         |\n| SCRIPT_NAME   | The name of the startup script in the VM spec.       |\n- Proceed with the following steps to create a VM.The following is an example of how to create a VM with a startup script that adds a new user.```\nkubectl --kubeconfig ORG_ADMIN_KUBECONFIG \\\u00a0 \u00a0 apply -n PROJECT -f - <<EOFapiVersion: virtualmachine.gdc.goog/v1kind: VirtualMachineDiskmetadata:\u00a0 name: VM_BOOT_DISK_NAMEspec:\u00a0 source:\u00a0 \u00a0 image:\u00a0 \u00a0 \u00a0 name: BOOT_DISK_IMAGE_NAME\u00a0 \u00a0 \u00a0 namespace: vm-system\u00a0 size: BOOT_DISK_SIZE---apiVersion: v1kind: Secrettype: Opaquemetadata:\u00a0 name: add-userdata: \u00a0 script:\u00a0 \u00a0 IyEvYmluL2Jhc2gKYWRkdXNlciB1c2VyCg==---apiVersion: virtualmachine.gdc.goog/v1kind: VirtualMachinemetadata:\u00a0 name: VM_NAMEspec:\u00a0 compute:\u00a0 \u00a0 virtualMachineType: MACHINE_TYPE\u00a0 disks:\u00a0 - virtualMachineDiskRef:\u00a0 \u00a0 \u00a0 name: VM_BOOT_DISK_NAME\u00a0 \u00a0 boot: true\u00a0 \u00a0 autoDelete: BOOT_DISK_AUTO_DELETE\u00a0 startupScripts:\u00a0 - name: add-user\u00a0 \u00a0 scriptSecretRef:\u00a0 \u00a0 \u00a0 name: add-userEOF\n```In the example the variables are defined as follows.| Variable    | Definition                                                   |\n|:----------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ORG_ADMIN_KUBECONFIG | The org admin cluster kubeconfig file path.                                          |\n| PROJECT    | The Distributed Cloud Hosted project in which you want to create the VM.                                   |\n| VM_NAME    | The name of the new VM.                                               |\n| VM_BOOT_DISK_NAME  | The name of the new VM boot disk.                                             |\n| BOOT_DISK_IMAGE_NAME | The name of the image to be used for the new VM boot disk.                                       |\n| BOOT_DISK_SIZE  | The size of the boot disk, such as 20G. This value must always be greater than or equal to the minimumDiskSize of the boot disk image.                   |\n| BOOT_DISK_AUTO_DELETE | Either true or false, indicating whether the boot disk is automatically deleted when the VM instance gets deleted.                        |\n| MACHINE_TYPE   | The predefined machine type for the new VM. To select an available machine type, run this command: kubectl --kubeconfig ORG_ADMIN_KUBECONFIG get virtualmachinetype.virtualmachine.gdc.goog --namespace vm-system |## Update an existing VM with a startup script\nYou can also update an existing VM with a startup script. The VM must be shut down before you perform the update.\nFollow the steps to [update VM properties](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/manage-vms/operations-and-lifecycle/update-vm-properties#update-properties) and update the `spec` field with the startup script that you would like to run.\n## View the output of a startup script\n- Follow the steps to [connect to a VM](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/connect-to-vm/connect-to-a-vm) .\n- Run the following command inside the guest VM to get the logs of the startup script that you ran:```\nsudo journalctl -u cloud-final\n```The startup script logs begin with the following:```\nStarted to run the command: /var/lib/google/startup-scripts/<script-name> ...\n```", "guide": "Documentation"}