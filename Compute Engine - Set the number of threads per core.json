{"title": "Compute Engine - Set the number of threads per core", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Set the number of threads per core\nSimultaneous multithreading (SMT), which is known on Intel processors as Hyper-Threading Technology (HTT), lets a CPU core run as two hardware multithreads. On Compute Engine, each virtual CPU (vCPU) is implemented as a single hardware multithread, and two vCPUs share each physical CPU core by default.\nCompute Engine lets you manually set the value for the number of threads per core. For example, workloads with the following concerns might benefit from setting the number of threads per core to 1:\n- **Performance:** Reducing the number of threads that run on each physical CPU core can help improve the performance of workloads that are highly-parallel or that perform floating point calculations.\n- **Security:** If a VM runs untrusted code, reducing the number of threads per core can help mitigate CPU vulnerabilities such as [Microarchitectural DataSampling](https://www.intel.com/content/www/us/en/developer/articles/technical/software-security-guidance/technical-documentation/intel-analysis-microarchitectural-data-sampling.html) .\n- **Licensing:** Some licensing agreements have requirements related to the number of vCPUs that you consume. Reducing the number of threads per core from 2 to 1 might reduce your licensing costs. For more information, consult your licensing agreement.", "content": "## Limitations\n- You cannot set the number of threads per core on VMs for the following machine types:- [All H3 machine types](/compute/docs/compute-optimized-machines#h3_series) \n- [All Tau T2A machine types](/compute/docs/general-purpose-machines#t2a_machines) \n- [All Tau T2D machine types](/compute/docs/general-purpose-machines#t2d_machines) \n- Machine types that have fewer than 2 vCPUs, for example,`n1-standard-1`\n- [Shared-core](/compute/docs/general-purpose-machines#sharedcore) machine types, such as`e2-small`.\n- In the Google Cloud console, when the number of threads per core is set to 1, the CPU utilization metric can only scale up to a maximum of 50%. When the number of threads per core is set to 2, the CPU utilization metric can scale up to 100%.## Pricing\nYou are billed for the number of vCPUs defined by a VM's machine type, not the number of threads that run on each core. For example, the `n2-standard-8` machine type can run up to 8 vCPUs, which is 2 vCPUs for each of the 4 physical CPU cores. If, with the `n2-standard-8` machine type, you decide to only run 1 thread per core\u2014effectively 4 vCPUs\u2014you are still billed for 8 vCPUs. For more information about how you are billed for VMs, see [VM instancepricing](/compute/vm-instance-pricing) .\n## Change the number of threads per core during VM creation\nTo change the number of threads per core during VM creation, use the Google Cloud console, the gcloud CLI, or the Compute Engine API.\nTo perform this task, you must have the following [permissions](/iam/docs/overview#permissions) :\n- All permissions required to [create a new VM](/compute/docs/instances/create-start-instance) \nTo change the number of threads per core during VM creation, use the following Google Cloud console procedure:- In the Google Cloud console, go to the **Create an instance** page. [Go to Create an instance](https://console.cloud.google.com/compute/instancesAdd) \n- In the **Name** field, enter a name for the VM.\n- Choose a **Region** and a **Zone** for the VM.\n- Choose a **Machine family** and a supported **Machine type** .\n- Click **Advanced configurations** to expand the section.\n- In **vCPUs to core ratio** , choose the number of threads per core.\n- Finish configuring other settings for the VM and click **Create** .\nTo change the number of threads per core during VM creation, use the [gcloud compute instances create command](/sdk/gcloud/reference/compute/instances/create) .\nBefore using any of the command data below, make the following replacements:- : the name for the new VM.\n- : the zone for the new VM.\n- : the machine type for the new VM. Must be a machine type with 2 or more vCPUs.\n- : the number of threads per physical core. Set to either`2`or`1`.\nExecute the  following  command:\nYou should receive a response similar to the following:\n```\nCreated [https://www.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/instances/VM_NAME].\nNAME: VM_NAME\nZONE: ZONE\nMACHINE_TYPE: MACHINE_TYPE\nPREEMPTIBLE:\nINTERNAL_IP: EXTERNAL_IP\nEXTERNAL_IP: INTERNAL_IP\nSTATUS: RUNNING\n```\nTo change the number of threads per core during VM creation, use the [instances.insertmethod](/compute/docs/reference/rest/v1/instances/insert) with the `threadsPerCore` field.\nBefore using any of the request data, make the following replacements:- : the project ID.\n- : the zone for the new VM.\n- : the machine type for the new VM. Must be a machine type with 2 or more vCPUs.\n- : the name for the new VM.\n- : the number of threads per physical core. Set to either`2`or`1`.\nHTTP method and URL:\n```\nPOST https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/instances\n```\nRequest JSON body:\n```\n{\n \"machineType\": \"projects/PROJECT_ID/zones/ZONE/machineTypes/MACHINE_TYPE\",\n \"name\": \"VM_NAME\",\n \"advancedMachineFeatures\": {\n \"threadsPerCore\": THREADS_PER_CORE\n },\n \"disks\": [ {\n  \"type\": \"PERSISTENT\",\n  \"boot\": true,\n  \"initializeParams\": {\n  \"sourceImage\": \"projects/debian-cloud/global/images/family/debian-11\"\n  }\n }\n ],\n \"networkInterfaces\": [ {\n  \"network\": \"global/networks/default\"\n }\n ]\n}\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"compute#operation\",\n \"id\": \"7334609091572405391\",\n \"name\": \"operation-1663806045894-5e939085735d8-7499db32-c12fcc03\",\n \"zone\": \"https://www.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE\",\n \"operationType\": \"insert\",\n \"targetLink\": \"https://www.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/instances/VM_NAME\",\n \"targetId\": \"1226375378512516273\",\n \"status\": \"RUNNING\",\n \"user\": \"EMAIL_ADDRESS\",\n \"progress\": 0,\n \"insertTime\": \"2022-09-21T17:20:48.751-07:00\",\n \"startTime\": \"2022-09-21T17:20:48.751-07:00\",\n \"selfLink\": \"https://www.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/operations/operation-1663806045894-5e939085735d8-7499db32-c12fcc03\"\n}\n```\n## Change the number of threads per core on a VM\nTo change the number of threads per core on a VM, use the Google Cloud console, the gcloud CLI, or the Compute Engine API.\nTo perform this task, you must have the following [permissions](/iam/docs/overview#permissions) :\n- `compute.instances.get`on the project\n- `compute.instances.update`on the project\nTo change the number of threads per core on an existing VM, use the following Google Cloud console procedure:- In the Google Cloud console, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- Click the **Name** of the VM.\n- If the VM's **Status** is **Running** , click **Stop** .\n- Click **Edit** .\n- Click **Advanced configurations** to expand the section.\n- In the **vCPUs to core ratio** drop-down list, choose the number of threads per core.\n- Click **Save** .\nTo change the number of threads per core on an existing VM, do the following:- Export the properties of the VM by using the following [gcloud computeinstances export command](/sdk/gcloud/reference/compute/instances/export) :```\ngcloud compute instances export VM_NAME \\\n --destination=YAML_FILE_PATH \\\n --zone=ZONE\n```Replace the following:- `` : the name of the VM from which to export properties\n- `` : the path and file name of a .yaml file in which to save the exported configuration data\n- `` : the zone that contains the VM\n- In the VM configuration file that was saved in , update the value for `threadsPerCore` . If the value is not in the file, add the following:```\nadvancedMachineFeatures:\n threadsPerCore: THREADS_PER_CORE\n```\n- Update the VM with the new count of threads per core by using the following [gcloud compute instances update-from-filecommand](/sdk/gcloud/reference/compute/instances/update-from-file) :```\ngcloud compute instances update-from-file VM_NAME \\\n --source=FILE_PATH \\\n --most-disruptive-allowed-action=RESTART \\\n --zone=ZONE\n```Replace the following:- `` : the name of the VM to update\n- `` : the path to the updated VM configuration file\n- `` : the zone that contains the VM to update\nTo change the number of threads per core on an existing VM, use the following [instances.updatemethod](/compute/docs/reference/rest/v1/instances/update) :\n```\nPUT https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/instances/VM_NAME?most_disruptive_allowed_action=RESTART\n{\n ...\n \"advanced_machine_features\": {\n ...\n \"threadsPerCore\": \"THREADS_PER_CORE\"\n },\n ...\n}\n```\nReplace the following:- `` : the ID of the project\n- `` : the zone that contains the VM\n- `` : the name of the VM from which to export properties\n- `` : the number of threads per core## View the number of threads per core\nTo view the number of threads per core, use the procedure that corresponds to the OS that is running on the VM.\nTo view the number of threads per core on Linux-based VMs, use the following procedure:- [Connect to the Linux VM](/compute/docs/instances/connecting-to-instance) .\n- Run the `lscpu` command.```\nlscpu\n```\n- Review the output to view the number of threads per core.In the following sample output from an `n2-standard-16` machine, the value for the number of threads per core is `1` as shown in the `Thread(s) per core` line.```\n...\nCPU(s):       8\nOn-line CPU(s) list:    0-7\nThread(s) per core:    1\nCore(s) per socket:    8\nSocket(s):      1\nNUMA node(s):     1\nVendor ID:      GenuineIntel\nCPU family:      6\nModel:       85\nModel name:      Intel(R) Xeon(R) CPU @ 2.80GHz\n...\n```\nTo view the number of threads per core on Windows-based VMs, use the following procedure:- [Connect to the Windows VM](/compute/docs/instances/connecting-to-windows) .\n- Launch Powershell.\n- Run the following command.```\nGet-WmiObject -Class Win32_processor | Select-Object NumberOfCores, @{Name=\"Thread(s) per core\";Expression={$_.NumberOfLogicalProcessors/$_.NumberOfCores}}\n```\n- Review the output to view the number of threads per core.In the following sample output from an `n2-standard-16` machine, the value for the number of threads per core is `1` as shown in the `Thread(s) per core` column.```\nNumberOfCores Thread(s) per core\n------------- -----------------   8     1\n```## What's next\n- Learn about the [operating systems that you can run on Compute Engine VMs](/compute/docs/images/os-details) .", "guide": "Compute Engine"}