{"title": "Apigee - Runtime service configuration overview", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Runtime service configuration overview\nYou are currently viewing version 1.1 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThe Apigee hybrid runtime plane is made up of a variety of services. Each service is deployed on nodes within your Kubernetes cluster, and each one can be configured using the [overrides.yaml file](/apigee/docs/hybrid/v1.1/customize-services) .\nThe following table summarizes the runtime services:\n| Service        | Description                                                 | Configuration Object | Implemented\u00a0As | Scope             |\n|:---------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------|:-----------------|:--------------------------------------------------------|\n| Cassandra        | Acts as a runtime datastore that provides Apigee local persistent storage for KMS, OAuth, KVMs, and caching for the runtime plane. You can have separate Cassandra rings for KMS, OAuth, KVMs, and caching. | cassandra    | StatefulSet  | Organization (one or more orgs)       |\n| Default Istio Ingress/LoadBalancer  | Manages inbound requests from client apps. The default installation uses an Istio Ingress, but you are responsible for managing your own custom Ingress configuration for production traffic.    | ingress    | Ingress   | Cluster (one or more organizations in the same cluster) |\n| Logger         | Extracts log files and sends the data to the monitoring application associated with your GCP account (currently Stackdriver).                    | logger     | DaemonSet  | Cluster (one or more organizations in the same cluster) |\n| Management API for Runtime data (MART) | Exposes an endpoint to administer data entities on the runtime plane, such as KMS (API keys and OAuth tokens), quotas, KVMs, and API products. MART services are scoped to a single organization.   | mart     | Deployment  | Organization           |\n| MART Istio Ingress      | Manages inbound requests from the management plane for calls to the Apigee APIs.                                | ingress    | Ingress   | Cluster (one or more organizations in the same cluster) |\n| Message Processor      | Consumes rolling updates from the management plane to provide API request processing and policy execution on the runtime plane. Each Message Processor is scoped to a single environment.     | runtime    | Deployment  | Environment            |\n| Metrics        | Collects operations metrics that you can use to monitor the health of hybrid services, to set up alerts, and so on.                       | metrics    | Deployment  | Cluster (one or more organizations in the same cluster) |\n| Synchronizer       | Fetches configuration data about an API environment from the management plane to the runtime plane. A Synchronizer can poll one or more environments in the same or different organizations.    | synchronizer   | Deployment  | Environment            |\n| Universal Data Collection Agent (UDCA) | Extracts analytics and deployment status data and sends it to the UAP service in the management plane so that you can access it with the management UI.              | udca     | Deployment  | Environment            |\nMost services make socket connections with other internal or external services that you should be aware of. For more information, see [Hybrid ports](/apigee/docs/hybrid/v1.1/ports) ", "content": ".", "guide": "Apigee"}