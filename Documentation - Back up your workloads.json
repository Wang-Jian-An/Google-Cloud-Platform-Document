{"title": "Documentation - Back up your workloads", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Back up your workloads\nThis page details how to create manual backups, view existing backups, and delete existing backups.\n", "content": "## Create a manual backup\nIf your backup plan defines a schedule for the backup, the backups are automatically created according to that schedule. You can also manually create a backup outside the scope of your backup plan schedule. For example, you might want to back up your workloads before you upgrade your applications. A backup does not include cluster configuration information, such as node configurations, node pools, initial cluster size, or what features are enabled.\nApplication operators can only perform manual backups from an existing backup plan.\nTwo forms of data are captured in a backup:\n- **Config backup** : A set of Kubernetes resource descriptions extracted from  the API server of the cluster undergoing backup.\n- **Volume backup** : A backup of`PersistentVolumeClaims`.\nYou must have the User Cluster Backup Admin or Backup Creator role to create manual backups.\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click the **Backup Plans** tab.\n- Click the plan that you want to use for the backup.\n- Click **Start a backup** .\n- Enter a backup name and an optional description.\n- Set the number of days to retain the backup. Once this number of days is reached, the backup is automatically deleted.\n- Set the number of days during which backups cannot be deleted.\n- Click **Start** .\nThe manual backup must reference an existing backup plan for the backup configuration and the backup must be created by issuing a `ManualBackupRequest` .\nHere's an example of a `ManualBackupRequest` :\n```\napiVersion: backup.gdc.goog/v1kind: ManualBackupRequestmetadata:\u00a0 name: manualbackuprequest-test\u00a0 namespace: defaultspec:\u00a0 backupName: \"backup-test\"\u00a0 backupPlanName: \"backupplan-test\"\u00a0 deleteLockDays: 5\u00a0 retainDays: 6\n```\nThis example includes the following values:\n| Value   | Description                                                               |\n|:---------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| backupName  | The name of the backup to create.                                                          |\n| backupPlanName | The name of the BackupPlan to use for the configuration of the backup. The backup plan must exist in the same namespace as the ManualBackupRequest.                             |\n| deleteLockDays | Blocks any deletion of the backup for the number of days specified after backup creation. This overrides the retentionPolicy in the BackupPlan.                              |\n| retainDays  | Deletes backups once the specified number of days is reached following backup creation. This value overrides the retentionPolicy in the BackupPlan. Retention policies do not override the retention policies of the storage location, nor can they exceed 90 days. |\n## View a backup\nYou must have the User Cluster Backup Admin or Backup Creator role to view backups. User Cluster Backup Admins can see all backups in the organization. Backup Creators can see all backups in a project.\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click **Select project** to select an organization or project depending on your role:- User Cluster Backup Admin: Select an organization to see all backups in an organization or select a project to see all backups in a project.\n- Backup Creator: Select a project to see all backups in a project.\n- Click the **Backups** tab.\n- Click a backup in the list to view its details.\nView a list of your backups:\n```\nkubectl get backups\n```\nAn example of the output:\n```\nNAME   STATE\nbackup-test Succeeded\n```\n## Delete a backup\nYou must have the User Cluster Backup Admin or Backup Creator role to delete backups.\nBackups can't be deleted by a regular interaction with the Kubernetes API server. To delete a backup, use the GDCH console or issue a `DeleteBackupRequest` .\nDelete the backup from the **Backups** tab:- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click **Select project** to select an organization or project depending on your role:- User Cluster Backup Admin: Select an organization to see all backups in an organization, or select a project to see all backups in a project.\n- Backup Creator: Select a project to see all backups in a project.\n- Click the **Backups** tab.\n- Click the three-dot menu icon for the backup you want to delete.\n- Type the name of the backup into the text box.\n- Click the **Delete Backup** button to complete the deletion of this backup. **Note:** This operation can't be undone.\nAlternatively, delete the backup by clicking on the backup name when viewing a backup plan:- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click **Select project** , and select an organization or project depending on your role:- User Cluster Backup Admin: Select an organization to see all of the backup plans in an organization, or select a project to see all of the backup plans in a project.\n- Backup Creator: Select a project to see all of the backup plans in a project.\n- Click the **Backup Plans** tab.\n- Click the name of the backup plan containing the backup you want to delete.\n- Click the **Backups** tab.\n- Click the name of the backup you want to delete.\n- Click the **Delete Backup** button.\n- Enter the name of the backup into the text field.\n- Click the **Delete** button to complete the deletion of this backup. **Note:** This operation can't be undone.\nSend a `DeleteBackupRequest` request:\n```\napiVersion: backup.gdc.goog/v1kind: DeleteBackupRequestmetadata:\u00a0 name: deletebackuprequest-test\u00a0 namespace: defaultspec:\u00a0 backupName: \"backup-test\"\n```\nThis example includes the following values:- `backupName`: the name of the backup being deleted. This backup must exist in the same namespace as the`DeleteBackupRequest`.\n- `DeleteBackupRequests`both deletes the backup custom resource from the cluster and removes all artifacts associated with that backup from the storage location of the backup, including volume data.\n **Note:** Attempting to delete a `Backup` without issuing a `DeleteBackupRequest` doesn't clean object storage artifacts and might result in undefined behavior.", "guide": "Documentation"}