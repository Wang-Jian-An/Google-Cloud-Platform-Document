{"title": "Compute Engine - Troubleshoot workload to workload authentication", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Troubleshoot workload to workload authentication\nThis document explains how to troubleshoot common errors related to [Authenticate workloads to other workloads over mTLS](/compute/docs/access/authenticate-workloads-over-mtls) .\n", "content": "## Before you begin\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.\n- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\n## The generated credentials directory doesn't exist\nIf you get an error that the `/var/run/secrets/workload-spiffe-credentials` directory doesn't exist, do the following:\n- Ensure that your VM supports workload to workload authentication by running the following command from inside the VM.```\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/gce-workload-certificates/config-status\" -H \"Metadata-Flavor: Google\"\n```- If the response is an `HTTP 404` error code with the following error message, then this VM doesn't support this feature.```\nThe requested URL /computeMetadata/v1/instance/gce-workload-certificates/config-status\nwas not found on this server. That's all we know.\n```To resolve, create a new VM that supports workload to workload authentication, using one of the following methods:- [Enable managed workload identities for a MIG](/compute/docs/access/authenticate-workloads-over-mtls#create-workload-id-migs) .\n- [Enable managed workload identities for individual VMs](/compute/docs/access/authenticate-workloads-over-mtls#enable-workload-id-vms) .\n- If the response is an `HTTP 404` error code with the error message `workload certificate feature not enabled` , then the VM supports managed workload identities, but the feature isn't enabled. To enable the feature on the VM, see [Enable managed workload identities on existing VMs](/compute/docs/access/authenticate-workloads-over-mtls#add-workload-id-existing-vms) .\n- Ensure the VM is running a guest OS with Compute Engine guest agent version 20231103.01 or newer. Use the gcloud CLI to [view the serial-port output](/compute/docs/troubleshooting/viewing-serial-port-output) to determine the current Compute Engine guest agent version:```\ngcloud compute instances get-serial-port-output VM_NAME | grep \"GCE Agent Started\"\n```Replace with the name of the VM.To update the Compute Engine guest agent, see [Updating the guest environment](/compute/docs/images/install-guest-environment#update-guest) .\n- Check the service logs to verify that the `gce-workload-cert-refresh.timer` was able to successfully fetch the workload credentials and the trust bundle.```\n# View timer logs to see when the gce-workload-cert-refresh.timer last ran\njournalctl -u gce-workload-cert-refresh.timer\n# View service logs from gce-workload-cert-refresh.service\njournalctl -u gce-workload-cert-refresh.service\n```## The generated credentials directory contains only the config_status file\nThe generated credentials directory, `/var/run/secrets/workload-spiffe-credentials` , might contain only the `config_status` for a variety of reasons. Use the following steps to troubleshoot this issue.\n- Check the contents of the `config_status` file to ensure that the managed workload identities feature is enabled. If the feature is not enabled using the appropriate VM metadata, the log file contains the error message `workload certificate feature not enabled` .To resolve this issue, create a new VM that supports workload to workload authentication, using one of the following methods:- [Enable managed workload identities for a MIG](/compute/docs/access/authenticate-workloads-over-mtls#create-workload-id-migs) .\n- [Enable managed workload identities for individual VMs](/compute/docs/access/authenticate-workloads-over-mtls#enable-workload-id-vms) .\n- Check the contents of the `config_status` file to ensure that there are no errors due to missing attribute values or invalid configuration for the certificate issuance or the trust config. If such errors exist, update the configuration values by following the steps in [Update certificate issuance and trust config](/compute/docs/access/authenticate-workloads-over-mtls#update_trust_config) .\n- Ensure that the correct permissions were granted to the managed workload identities in the workload identity pool for accessing the subordinate CA pools. Use the following command:```\ngcloud privateca pools get-iam-policy SUBORDINATE_CA_POOL_ID \\\n --location=SUBORDINATE_CA_POOL_REGION \\\n```Replace the following:- : the ID for the subordinate CA pool.\n- : the region of the subordinate CA pool.\nThe output of this command should contain the following:```\nbindings:- members:\u00a0 - principalSet://iam.googleapis.com/projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/*\u00a0 -\u00a0 role: roles/privateca.poolReader- members:\u00a0 - principalSet://iam.googleapis.com/projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/*\u00a0 role: roles/privateca.workloadCertificateRequester\n```In the previous example:- is the project number of your project.\n- is the ID of the workload identity pool.\nIf you don't see output similar to the preceding example, grant the required permissions as described in [Authorize managed workload identities to request certificates from the CA pool](/iam/docs/create-managed-workload-identities#grant-role-ca-pool) .\n- If the `config_status` file contains no error messages, then check the value of `iam.googleapis.com/workload-identity` within the file.The value should match the following:```\nspiffe://POOL_ID.global.PROJECT_NUMBER.workload.id.goog/ns/NAMESPACE_ID/sa/MANAGED_IDENTITY_ID\n```In the previous example:- is the project number for the project that contains the managed workload identity pool.\n- is the ID of the workload identity pool.\n- is the ID of the namespace in the workload identity pool.\n- is the ID of the managed workload identity.\nIf the value for `iam.googleapis.com/workload-identity` is incorrect, then you must create a new VM with the correct value because the managed identity value can only be updated during VM creation.\n- If the `config_status` file contains no error messages, then ensure that the trust config contains a valid entry for the SPIFFE trust domain `` `.global.` `` `.workload.id.goog` , which corresponds to the SPIFFE trust domain on the managed identity assigned to the VM. For more information, see [Define the trust config](/iam/docs/create-managed-workload-identities#define_trust_config) .\n- If the `config_status` file contains any error messages with the error code `INTERNAL_ERROR` , reach out to Cloud Customer Care or your Google Cloud contact with the error message.## Querying metadata server endpoints returns a 404 error\nIf you get a `404` response when querying the `workload-identities` or `trust-anchors` endpoint, then ensure that the VM supports the managed workload identities by running the following command from inside the VM:\n```\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/gce-workload-certificates/config-status\" -H \"Metadata-Flavor: Google\"\n```\n- If the response is an HTTP `404` error code with the following error message:```\n The requested URL /computeMetadata/v1/instance/gce-workload-certificates/config-status\n was not found on this server. That's all we know.\n```The VM doesn't support managed workload identities. To resolve the issue, do one of the following:- [Enable managed workload identities for a MIG](/compute/docs/access/authenticate-workloads-over-mtls#create-workload-id-migs) .\n- [Enable managed workload identities for individual VMs](/compute/docs/access/authenticate-workloads-over-mtls#enable-workload-id-vms) .\n- If the response is an HTTP `404` error code with the error message `workload certificate feature not enabled` , then this VM supports managed workload identities, but the feature is not enabled. Create a new VM with the feature enabled, or create a new instance template and managed instance group.\n- Ensure that the correct permissions were granted to the workload identity pool for accessing the subordinate CA pools by running the following command:```\ngcloud privateca pools get-iam-policy SUBORDINATE_CA_POOL_ID \\\n --location=SUBORDINATE_CA_POOL_REGION\n```Replace the following:- : the ID for the subordinate CA pool.\n- : the region of the subordinate CA pool.\nThe output of this command should contain the following, where is the project number of your project and is the ID of the workload identity pool.```\nbindings:\n- members:\n- principalSet://iam.googleapis.com/projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/*\n- role: roles/privateca.poolReader\n- members:\n- principalSet://iam.googleapis.com/projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/*\n- role: roles/privateca.workloadCertificateRequester\n```If your output doesn't contain these values, grant the correct permissions, as described in [Authorize managed workload identities to request certificates from the CA pool](/iam/docs/create-managed-workload-identities#grant-role-ca-pool) .\n- Ensure that the `iam.googleapis.com/workload-identity` value is correct and matches the following:```\nspiffe://POOL_ID.global.PROJECT_NUMBER.workload.id.goog/ns/NAMESPACE_ID/sa/MANAGED_IDENTITY_ID\n```If the value doesn't match, then you must create a new VM because the managed identity value can't be updated after creating the VM.\n- Ensure that the [trust config](/iam/docs/create-managed-workload-identities#define_trust_config) contains a valid entry for the SPIFFE trust domain `` `.global.` `` `.workload.id.goog` , which corresponds to the SPIFFE trust domain on the managed identity assigned to the VM.", "guide": "Compute Engine"}