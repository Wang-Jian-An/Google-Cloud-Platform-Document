{"title": "Apigee - Step 3: Enable APIs", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 3: Enable APIs\nYou are currently viewing version 1.1 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nTo use Apigee hybrid, you must enable the following APIs for the project in the Google Cloud console:\n- **Apigee API:** Provides communications between your project and other hybrid services and GCP APIs\n- **Cloud Resource Manager API:** Used by hybrid to validate service accounts\n- **Compute Engine API:** Used for cluster management (GKE-based clusters only)\n- **Kubernetes Engine API:** Enable if you plan to use Google Kubernetes Engine (GKE) or  GKE on-prem (GKE-based clusters only) for your hybrid runtime installation\nYou can use the CLI or the Google Cloud console UI to enable the APIs.\nTo enable the APIs using the UI, perform the following steps:- Open the [Google Cloud console](https://console.cloud.google.com) and log in with the account you created in [Step 1: Create a Google Cloud account](/apigee/docs/hybrid/v1.1/precog-gcpaccount) .\n- Select the project that you created in [Step 2: Create a Google Cloud project](/apigee/docs/hybrid/v1.1/precog-gcpproject) .\n- Enable the **Apigee API** :- Select **APIs & Services > Library** .The **API Library** view displays:\n- Search for \u201cApigee\u201d.GCP displays a list of APIs matching \"Apigee\"\n- Locate the **Apigee API** service and click on it:\n- Click **Enable** .GCP enables the **Apigee API** for your GCP project.\n- Enable the **Cloud Resource Manager API** :- In the **API Library** view, search for \"Cloud Resource Manager\".\n- Locate the **Cloud Resource Manager** service and click on it.\n- Click **Enable** .GCP enables the **Cloud Resource Manager API** for your GCP project.\n- (GKE-based clusters only) Enable the **Compute Engine API** :- In the **API Library** view, search for \"Compute Engine\".\n- Locate the **Compute Engine API** service and click on it.\n- Click **Enable** .Google Cloud enables the **Compute Engine API** for your project.\n- To confirm that you have enabled the APIs, select **APIs & Services >\n Dashboard** .Your list of enabled APIs should include the APIs you just added, as the following example  shows:\n- (GKE-based clusters only) Enable the **Kubernetes Engine API** :- In the **API Library** view, search for \"Kubernetes Engine\".\n- Locate the **Kubernetes Engine API** service and click on it.\n- Click **Enable** .Google Cloud enables the **Kubernetes Engine API** for your project.\n- From the Navigation menu in the upper left corner of the screen, select **APIs & Services > Library** to return to the API selection page.To enable the APIs using the CLI, perform the following steps:- Open a terminal window on the device you are using to manage Apigee.\n- Define the`PROJECT_ID`environment variable from [Step 2: Create a Google Cloud project](/apigee/docs/hybrid/v1.1/precog-gcpproject) with the   following command:```\nexport PROJECT_ID=your_project_id\n``` **Note:** Do not include the period after the project ID.\n- If you will be running your clusters in Google Cloud (GKE) as opposed to GKE on-prem   (Anthos) or AKS, enable the APIs with the following command:```\ngcloud services enable \\\n apigee.googleapis.com \\\n cloudresourcemanager.googleapis.com \\\n compute.googleapis.com \\\n container.googleapis.com --project $PROJECT_ID\n```For GKE on-prem (Anthos) or AKS installations, enable the APIs with the following command:```\ngcloud services enable \\\n apigee.googleapis.com \\\n cloudresourcemanager.googleapis.com --project $PROJECT_ID\n```\n- Verify that all APIs are enabled using the following command:```\ngcloud services list\n```\nFor more information about enabling APIs in Google Cloud console, see [Enabling anAPI in your GCP project](https://cloud.google.com/endpoints/docs/openapi/enable-api) in the Cloud documentation.\n", "content": "## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled [1](/apigee/docs/hybrid/v1.1/precog-gcpaccount) If the button's step matches the current step in the process, make the button disabled [2](/apigee/docs/hybrid/v1.1/precog-gcpproject) If the button's step matches the current step in the process, make the button disabled If the button's step matches the next step [3](/apigee/docs/hybrid/v1.1/precog-enableapi) If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 4: Create an organization](/apigee/docs/hybrid/v1.1/precog-provision) If the button's step matches the current step in the process, make the button disabled [5](/apigee/docs/hybrid/v1.1/precog-add-environment)", "guide": "Apigee"}