{"title": "Compute Engine - Deploying Microsoft SharePoint Server on Compute Engine", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Deploying Microsoft SharePoint Server on Compute Engine\nThis tutorial describes how you can deploy Microsoft SharePoint Server on Compute Engine. The guide applies to Microsoft SharePoint Server 2016 and Microsoft SharePoint Server 2019.\nThe SharePoint deployment will use six servers across two zones. This setup corresponds to the [Medium High Availability (Search optimized)](https://docs.microsoft.com/en-us/sharepoint/install/planning-for-a-minrole-server-deployment-in-sharepoint-server) MinRole farm topology.\nThe following diagram illustrates the deployment:The article assumes that you have already deployed Active Directory and SQL Server on [Google Cloud](/) and that you have basic knowledge of SharePoint Server, Active Directory, and Compute Engine.", "content": "## Objectives\n- Prepare a project for the deployment of SharePoint Server.\n- Deploy a [MinRole SharePoint farm](https://docs.microsoft.com/en-us/sharepoint/install/overview-of-minrole-server-roles-in-sharepoint-server) that uses six servers:- Two frontend with servers with distributed cache\n- Two application servers\n- Two search servers\n- Configure load balancing and firewall rules\n## CostsThis tutorial uses billable components of Google Cloud, including:- [Compute Engine](/compute/vm-instance-pricing) \n- [Cloud Load Balancing](/vpc/network-pricing#lb) \nUse the [Pricing Calculator](/products/calculator) to generate a cost estimate based on your projected usage.## Before you beginTo complete this guide, you need the following:- An existing Active Directory domain with at least one domain controller. You can use either [Managed Service for Microsoft Active Directory](/managed-microsoft-ad/docs/overview) or a self-managed Active Directory domain.\n- An administrative Active Directory that has permission to join computers, create user accounts, and add DNS records.\n- A Google Cloud project and VPC with connectivity to your Active Directory domain controllers.\n- A SQL Server instance that is joined to the Active Directory domain and can be used for SharePoint. For further details on how to set up a highly available SQL Server deployment on Google Cloud, see [Deploying a Multi-Subnet SQL Server Always-On Availability Group](/solutions/deploy-multi-subnet-sql-server) .\n- A subnet for the SharePoint VM instances. The subnet must span at least two zones.\n **Note:** If you use a self-managed Active Directory domain, make sure you have a private DNS forwarding zone set up that [forwards DNS queries to your domain controllers](/compute/docs/instances/windows/best-practices#use_cloud_dns_private_forwarding_zones) .\nBefore you begin the deployment, review the [system requirements for SharePoint Server 2016 and 2019.](https://docs.microsoft.com/en-us/sharepoint/install/system-requirements-for-sharepoint-server-2016) .- In the Google Cloud console, on the project selector page,   select or [create a Google Cloud project](/resource-manager/docs/creating-managing-projects) . **Note** : If you don't plan to keep the  resources that you create in this procedure, create a project instead of  selecting an existing project. After you finish these steps, you can  delete the project, removing all resources associated with the project. [Go to project selector](https://console.cloud.google.com/projectselector2/home/dashboard) \n- [Make sure that billing is enabled for your Google Cloud project](/billing/docs/how-to/verify-billing-enabled#console) .\nWhen you finish the tasks that are described in this document, you can avoid continued billing by deleting the resources that you created. For more information, see [Clean up](#clean-up) .## Preparing the project and networkTo prepare your Google Cloud project and VPC for the deployment of SharePoint Server, do the following:- Switch to your project in the Google Cloud console and open Cloud Shell. [Open Cloud Shell](https://console.cloud.google.com/?cloudshell=true) \n- Initialize the following variables:```\nVPC_NAME=VPC_NAME\nSUBNET_NAME=SUBNET_NAME\nSUBNET_REGION=SUBNET_REGION\nSUBNET_ZONE_1=$SUBNET_REGION-a\nSUBNET_ZONE_2=$SUBNET_REGION-b\n```Where:- is the name of your VPC.\n- is the name of your subnet.\n- is the region of your subnet.\n- Set your default [project ID](/resource-manager/docs/creating-managing-projects) :```\ngcloud config set project PROJECT_ID\n```Replace with the ID of your Google Cloud project.\n### Creating firewall rulesTo enable communication between the servers of your SharePoint farm, you need to create several firewall rules. To simplify the creation of these firewall rules, you use [network tags](/vpc/docs/add-remove-network-tags) :- Frontend servers are annotated with the`sharepoint-frontend`tag.\n- Application servers are annotated with the`sharepoint-application`tag.\n- Search servers are annotated with the`sharepoint-search`tag.\n- All servers are also annotated with the`sharepoint`tag.\nCreate firewall rules that use these network tags and permit communication over the [ports that SharePoint requires](https://docs.microsoft.com/en-us/sharepoint/security-for-sharepoint-server/security-hardening) :- Return to your existing Cloud Shell session.\n- Create firewall rules for the SharePoint servers:```\ngcloud compute firewall-rules create allow-http-between-sharepoint-servers \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:80,tcp:443,tcp:32843,tcp:32844 \\\n --enable-logging \\\n --source-tags=sharepoint \\\n --target-tags=sharepoint \\\n --network=$VPC_NAME \\\n --priority=10000\ngcloud compute firewall-rules create allow-search-between-sharepoint-servers \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:16500-16519 \\\n --enable-logging \\\n --source-tags=sharepoint \\\n --target-tags=sharepoint \\\n --network=$VPC_NAME \\\n --priority=10000\ngcloud compute firewall-rules create allow-rpc-between-sharepoint-servers \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:135,tcp:49152-65535 \\\n --enable-logging \\\n --source-tags=sharepoint \\\n --target-tags=sharepoint \\\n --network=$VPC_NAME \\\n --priority=10000\ngcloud compute firewall-rules create allow-wcf-between-sharepoint-servers \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:808 \\\n --enable-logging \\\n --source-tags=sharepoint \\\n --target-tags=sharepoint \\\n --network=$VPC_NAME \\\n --priority=10000\ngcloud compute firewall-rules create allow-appfabric-from-sharepoint-servers \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:22233-22236 \\\n --enable-logging \\\n --source-tags=sharepoint \\\n --target-tags=sharepoint-frontend \\\n --network=$VPC_NAME \\\n --priority=10000\n```\n- Create a firewall rule that permits all servers to connect to the SQL Server instances. If your SQL Server instances use a network tag `sql-server` , you can use the following command to create a firewall rule:```\ngcloud compute firewall-rules create allow-sql-from-sharepoint-servers \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:1433 \\\n --enable-logging \\\n --source-tags=sharepoint \\\n --target-tags=sql-server \\\n --network=$VPC_NAME \\\n --priority=10000\n```See [Creating firewall rules](/vpc/docs/using-firewalls#creating_firewall_rules) for alternative ways to create a firewall rule if your SQL Server instance does not use a network tag.\n **Note:** Depending on how you've deployed Active Directory, you might need to create additional firewall rules to allow SharePoint servers to join the domain. See [Accessing Managed Microsoft AD from within your VPC](/managed-microsoft-ad/docs/firewalls#accessing_from_within_your_vpc) for further details.\nYour project and VPC are now ready for the deployment of SharePoint.\n### Creating an installation diskYour next step is to create a disk that contains the SharePoint Server installation media. By creating a disk that you can attach to multiple VM instances, you avoid having to download the installation media to each VM instance individually.- Follow the instructions in [Creating an image from an ISO file](/compute/docs/images/creating-an-image-from-an-iso-file) . Use the following URL as the download URL:\n```\nhttps://download.microsoft.com/download/0/0/4/004EE264-7043-45BF-99E3-3F74ECAE13E5/officeserver.img\n```\n```\nhttps://download.microsoft.com/download/C/B/A/CBA01793-1C8A-4671-BE0D-38C9E5BBD0E9/officeserver.img\n```\n- Use the new image to create a disk in the first zone:```\ngcloud compute disks create sharepoint-media-1 \\\n --zone=$SUBNET_ZONE_1 \\\n --image-project=$GOOGLE_CLOUD_PROJECT \\\n --image=IMAGE\n```Replace with the name of the image that you created in the previous step.\n- Create a disk in the second zone:```\ngcloud compute disks create sharepoint-media-2 \\\n --zone=$SUBNET_ZONE_2 \\\n --image-project=$GOOGLE_CLOUD_PROJECT \\\n --image=IMAGE\n```Replace with the name of the image that you created in the first step.\n### Creating a SharePoint imageTo avoid the repetitive task of installing SharePoint components on all servers individually, you now create a custom [VM image](/compute/docs/images) . You later use this VM image as a [virtual machine template](https://docs.microsoft.com/en-us/sharepoint/install/deploy-sharepoint-virtual-machines#virtual-machine-templates) to deploy the SharePoint servers.- Return to your existing Cloud Shell session.\n- Create a [specialize script](/compute/docs/startupscript#providing_a_startup_script_for_windows_instances) for the VM instance. The script will run during VM initialization and install the [SharePoint prerequisites](https://docs.microsoft.com/en-us/sharepoint/install/prerequisites-2019) :```\ncat << \"EOF\" > specialize.ps1\n$ErrorActionPreference = \"stop\"\n# Allow HTTP/HTTPS redirects so that the prerequisite installer can run\nSet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" -Name WarnonZoneCrossing -Value 0 -Type DWord\n# Install prerequisites\n& d:\\prerequisiteinstaller.exe /unattended | Out-Default\n# Install logging agent\n(New-Object Net.WebClient).DownloadFile(\n \"https://dl.google.com/cloudagents/windows/StackdriverLogging-v1-10.exe\",\n \"$env:Temp\\StackdriverLogging-v1-10.exe\")\n& $env:Temp\\StackdriverLogging-v1-10.exe /S | Out-Default\n# Disable Windows firewall (because VPC firewall rules are used instead)\n& netsh advfirewall set allprofiles state off | Out-Default\nEOF\n```\n- Create the VM instance and assign `specialize.ps1` for the specialize script value. Attach the SharePoint installation disk in read-only mode so that you can launch the SharePoint installer from this disk:```\ngcloud compute instances create sp-template \\\n --image-family=windows-2019 \\\n --image-project=windows-cloud \\\n --machine-type=n1-standard-2 \\\n --boot-disk-type=pd-ssd \\\n --subnet=$SUBNET_NAME \\\n --zone=$SUBNET_ZONE_1 \\\n --tags=sharepoint \\\n --disk=name=sharepoint-media-1,auto-delete=no,mode=ro \\\n --metadata-from-file=sysprep-specialize-script-ps1=specialize.ps1\n \n```\n- Monitor the initialization process of the VM by viewing its serial port output:```\ngcloud compute instances tail-serial-port-output sp-template --zone=$SUBNET_ZONE_1\n```Wait about 10 minutes until you see the output `Instance setup finished` , then press Ctrl+C. At this point, the installation of prerequisites is complete and the VM instance is ready to be used.\n- [Create a username and password](/compute/docs/instances/windows/creating-passwords-for-windows-instances) for the VM instance\n- [Connect to the VM by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in using the username and password created in the previous step.\n- Right-click the **Start** button (or press **Win+X** ) and click **Windows PowerShell (Admin)** .\n- Confirm the elevation prompt by clicking **Yes** .\n- Start the SharePoint installer:```\n& d:\\setup.exe\n```\n- Follow the instructions of the wizard. When you're prompted for a product key, use the **Enterprise trial product key** that's listed under **Install Instructions** on the Sharepoint download page, or use a key that you already have.- [SharePoint Server 2016 download page](https://www.microsoft.com/en-us/download/details.aspx?id=51493) \n- [SharePoint Server 2019 download page](https://www.microsoft.com/en-us/download/details.aspx?id=57462) \n- When the installation is finished, click **Close** . **Note:** Don't run the SharePoint Products Configuration wizard, and don't reboot the server yet.\n- In PowerShell, download and install Chrome:```\nStart-BitsTransfer `\n -Source 'https://dl.google.com/chrome/install/latest/chrome_installer.exe' `\n -Destination \"$env:Temp\\chrome_installer.exe\"\n& $env:Temp\\chrome_installer.exe\n```\n- In Chrome, download and install the following updates:\n- [Security Update for Microsoft SharePoint Enterprise Server 2016 (KB4011127)](https://www.microsoft.com/en-us/download/details.aspx?id=55914) .\n- [Update for Microsoft SharePoint Enterprise Server 2016 (KB4011053)](https://www.microsoft.com/en-us/download/details.aspx?id=55720) .\n- Check and install [additional updates](https://docs.microsoft.com/en-us/officeupdates/sharepoint-updates#sharepoint-2016-update-history) if necessary.\n- Check and install [updates](https://docs.microsoft.com/en-us/officeupdates/sharepoint-updates#sharepoint-2016-update-history) if necessary.- Return to the PowerShell console and [generalize the image](/compute/docs/instances/windows/creating-windows-os-image) :```\n& gcesysprep\n```The command automatically shuts down the VM. Wait about 5 minutes for this process to complete.\n- In Cloud Shell, create a VM image from the VM's boot disk:```\ngcloud compute images create sharepoint \\\n --source-disk=sp-template \\\n --source-disk-zone=$SUBNET_ZONE_1\n```\n- Delete the VM instance:```\ngcloud compute instances delete sp-template --zone=$SUBNET_ZONE_1\n```\n### Creating VMs and joining them to Active DirectoryFollow these steps to create the VM instances for the SharePoint farm and join them to your existing Active Directory domain:- Return to your existing Cloud Shell session.\n- Create two VM instances for the frontend servers:```\ngcloud compute instances create sp-frontend-1 \\\n --zone=$SUBNET_ZONE_1 \\\n --machine-type=n1-standard-8 \\\n --boot-disk-size=200 \\\n --boot-disk-type=pd-ssd \\\n --subnet=$SUBNET_NAME \\\n --tags=sharepoint,sharepoint-frontend \\\n --image=sharepoint \\\n --image-project=$GOOGLE_CLOUD_PROJECT\ngcloud compute instances create sp-frontend-2 \\\n --zone=$SUBNET_ZONE_2 \\\n --machine-type=n1-standard-8 \\\n --boot-disk-size=200 \\\n --boot-disk-type=pd-ssd \\\n --subnet=$SUBNET_NAME \\\n --tags=sharepoint,sharepoint-frontend \\\n --image=sharepoint \\\n --image-project=$GOOGLE_CLOUD_PROJECT\n```\n- Create two VM instances for the application servers:```\ngcloud compute instances create sp-app-1 \\\n --zone=$SUBNET_ZONE_1 \\\n --machine-type=n1-standard-8 \\\n --boot-disk-size=200 \\\n --boot-disk-type=pd-ssd \\\n --subnet=$SUBNET_NAME \\\n --tags=sharepoint,sharepoint-application \\\n --image=sharepoint \\\n --image-project=$GOOGLE_CLOUD_PROJECT \\\n \"--metadata=sysprep-specialize-script-ps1=Add-WindowsFeature RSAT-AD-PowerShell;Add-WindowsFeature RSAT-DNS-Server\"\ngcloud compute instances create sp-app-2 \\\n --zone=$SUBNET_ZONE_2 \\\n --machine-type=n1-standard-8 \\\n --boot-disk-size=200 \\\n --boot-disk-type=pd-ssd \\\n --subnet=$SUBNET_NAME \\\n --tags=sharepoint,sharepoint-application \\\n --image=sharepoint \\\n --image-project=$GOOGLE_CLOUD_PROJECT \\\n \"--metadata=sysprep-specialize-script-ps1=Add-WindowsFeature RSAT-AD-PowerShell;Add-WindowsFeature RSAT-DNS-Server\"\n```\n- Create two VM instances for the search servers:```\ngcloud compute instances create sp-search-1 \\\n --zone=$SUBNET_ZONE_1 \\\n --machine-type=n1-standard-8 \\\n --boot-disk-size=200 \\\n --boot-disk-type=pd-ssd \\\n --subnet=$SUBNET_NAME \\\n --tags=sharepoint,sharepoint-search \\\n --image=sharepoint \\\n --image-project=$GOOGLE_CLOUD_PROJECT\ngcloud compute instances create sp-search-2 \\\n --zone=$SUBNET_ZONE_2 \\\n --machine-type=n1-standard-8 \\\n --boot-disk-size=200 \\\n --boot-disk-type=pd-ssd \\\n --subnet=$SUBNET_NAME \\\n --tags=sharepoint,sharepoint-search \\\n --image=sharepoint \\\n --image-project=$GOOGLE_CLOUD_PROJECT\n```\n- Monitor the initialization process of the last VM by viewing its serial port output:```\ngcloud compute instances tail-serial-port-output sp-search-2 --zone=$SUBNET_ZONE_2\n```Wait about 2 minutes until you see the output `Instance setup finished` , then press Ctrl+C. At this point, the VM instance is ready to be used.\n- For each of the six VM instances, perform the following steps:- [Create a username and password](/compute/docs/instances/windows/creating-passwords-for-windows-instances) for the VM instance.\n- [Connect to the VM by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in using the username and password created in the previous step.\n- Right-click the **Start** button (or press **Win+X** ) and click **Windows PowerShell (Admin)** .\n- Confirm the elevation prompt by clicking **Yes** .\n- Join the computer to your Active Directory domain:```\nAdd-Computer -Domain DOMAIN\n```Replace with the DNS name of your Active Directory domain.\n- Restart the computer:```\nRestart-Computer\n```Wait for approximately 1 minute for the restart to complete.## Creating the SharePoint serversYou now use the custom image to create the VM instances for your SharePoint farm.\nThe VM instances use the `n1-standard-8` machine type. Depending on how you plan to use the SharePoint farm, you might need to use larger machine types. Consult the hardware requirements for a more detailed analysis of your needs and their system requirements:- [Hardware and software requirements for SharePoint Server 2016](https://docs.microsoft.com/en-us/sharepoint/install/hardware-and-software-requirements) \n- [Hardware and software requirements for SharePoint Server 2019](https://docs.microsoft.com/en-us/sharepoint/install/hardware-and-software-requirements-2019) \n### Setting up load balancingTo enable clients to access SharePoint by using a single virtual IP address, you use an [internal load balancer](/load-balancing/docs/internal) . The load balancer distributes requests among the two frontend servers, `sp-frontend-1` and `sp-frontend-2` .\nTo associate the two frontend servers with the load balancer, you first create two [instance groups](/compute/docs/instance-groups) , and then assign these instance group to the load balancer:- Return to your existing Cloud Shell session.\n- Create one [unmanaged instance group](/compute/docs/instance-groups/creating-groups-of-unmanaged-instances) per zone:```\ngcloud compute instance-groups unmanaged create sp-frontend-1 --zone=$SUBNET_ZONE_1\ngcloud compute instance-groups unmanaged create sp-frontend-2 --zone=$SUBNET_ZONE_2\n```\n- Add the VM instances running the frontend servers to the instance groups:```\ngcloud compute instance-groups unmanaged add-instances sp-frontend-1 \\\n --instances sp-frontend-1 \\\n --zone=$SUBNET_ZONE_1\ngcloud compute instance-groups unmanaged add-instances sp-frontend-2 \\\n --instances sp-frontend-2 \\\n --zone=$SUBNET_ZONE_2\n```\n- Create a health check that probes the HTTP path of Sharepoint:```\ngcloud compute health-checks create tcp sp-health-check --port 80\n```\n- Create a load balancer backend and add the two instance groups:```\ngcloud compute backend-services create sp-backend \\\n --load-balancing-scheme internal \\\n --region=$SUBNET_REGION \\\n --health-checks sp-health-check \\\n --protocol=tcp\ngcloud compute backend-services add-backend sp-backend \\\n --instance-group=sp-frontend-1 \\\n --instance-group-zone=$SUBNET_ZONE_1 \\\n --region=$SUBNET_REGION\ngcloud compute backend-services add-backend sp-backend \\\n --instance-group=sp-frontend-2 \\\n --instance-group-zone=$SUBNET_ZONE_2 \\\n --region=$SUBNET_REGION\n```\n- Reserve a static IP address for the load balancer: \\```\ngcloud compute addresses create sp-frontend \\\n --region=$SUBNET_REGION \\\n --subnet=$SUBNET_NAME\n```\n- Create a forwarding rule for the load balancer:```\ngcloud compute forwarding-rules create sp-frontend \\\n --load-balancing-scheme=internal \\\n --ports=80 \\\n --network=$VPC_NAME \\\n --subnet=$SUBNET_NAME \\\n --region=$SUBNET_REGION \\\n --address=sp-frontend \\\n --backend-service=sp-backend\n```\n- Create a firewall rule to allow traffic from the load balancer to the backend services:```\ngcloud compute firewall-rules create allow-http-health-checks \\\n --network=$VPC_NAME --allow tcp:80 \\\n --source-ranges=130.211.0.0/22,35.191.0.0/16 \\\n --target-tags=\"sharepoint-frontend\"\n```The source ranges are the IP ranges for the internal load balancer. For more information, see [Configure a firewall rule to allow internal load balancing](/compute/docs/load-balancing/internal#configure-a-firewall-rule-to-allow-internal-load-balancing) .\n- Look up the IP address of the load balancer:```\ngcloud compute addresses describe sp-frontend \\\n --region=$SUBNET_REGION \\\n --format=value\\(address\\)\n```You need this IP address later after you have deployed the SharePoint farm. **Note:** The load balancer won't be in a healthy state until the SharePoint farm is deployed and fully configured.\n### Registering the load balancer in DNSTo allow clients to use a human-readable URL to access SharePoint, register a name for the load balancer in DNS:- Connect to`sp-app-1` [by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in as a user that is a member of the`DnsAdmins`group.\n- Right-click the **Start** button (or press **Win+X** ) and click **Windows PowerShell** .\n- Create a record that maps the name `sharepoint` to the IP address of the load balancer:```\nAdd-DnsServerResourceRecordA `\n -ComputerName (Get-ADDomainController).Hostname `\n -Name \"sharepoint\" `\n -ZoneName \"DOMAIN\" `\n -IPv4Address LOADBALANCER-IP\n```Where:- is the IP address of the load balancer.\n- is the DNS domain of your Active Directory domain.## Creating the SharePoint farmAlthough the six servers have all required software packages installed, they are not yet part of a SharePoint farm. You now create the farm and add the servers to the farm by assigning them roles.\n### Creating a farm service accountTo create the SharePoint farm, you need to create a farm service account. The farm service account is an Active Directory user account that's used to run SharePoint services and to access SQL Server.\nFor further details on the farm service account, see [Account permissions and security settings in SharePoint Servers](https://docs.microsoft.com/en-us/sharepoint/install/account-permissions-and-security-settings-in-sharepoint-server-2016) .\nTo create a farm service account in Active Directory, do the following:- Return to the PowerShell prompt on`sp-app-1`.\n- Define a password for the farm service account:```\n$FarmServicePassword = Read-Host -Prompt \"Enter password for Farm service account\" -AsSecureString\n```\n- Create the farm service account in Active Directory:```\nNew-ADUser `\n -Name \"SharePoint Service\" `\n -SamAccountName sp-farm `\n -UserPrincipalName \"sp-farm@$((Get-ADDomain).DNSRoot)\" `\n -AccountPassword $FarmServicePassword `\n -PassThru | Enable-ADAccount\n```\n- Grant the farm service account access to SQL Server by [creating a login](https://docs.microsoft.com/en-us/sql/relational-databases/security/authentication-access/create-a-login?view=sql-server-ver15#SSMSProcedure) for `sp-farm` . Configure the login to use Windows authentication so that you don't need to assign a new password.\n### Configuring the first serverYou now create the SharePoint farm by configuring the first server. The first server is special because it hosts the central administration website. You use this site later to configure the farm.- Return to the RDP session on`sp-app-1`.\n- Click **Start** > **Microsoft SharePoint Products** > **SharePoint Products Configuration Wizard** .\n- Follow the steps in [Create and configure the farm](https://docs.microsoft.com/en-us/sharepoint/install/install-sharepoint-server-2016-across-multiple-servers#create-and-configure-the-farm) :- On the **Specify Configuration Database Settings** page, specify the name and password of the`sp-farm`user that you created earlier.\n- On the **Specify Server Role** page, select **Application** .\n- On the **Configure SharePoint Central Administration Web Application** page, specify port`8000`.\n- After the configuration is complete, a browser window opens. Close the window and skip the remaining steps.\n- Click **Start** > **Microsoft SharePoint Products** > **SharePoint Management Shell** .\n- Apply pending SharePoint updates:```\nPSConfig.exe -cmd upgrade -inplace b2b -force -cmd applicationcontent -install -cmd installfeatures\n```\n### Configuring remaining serversYou can now add the remaining servers to the SharePoint farm.\n| VM instance | Role       |\n|:--------------|:--------------------------------|\n| sp-app-2  | Application      |\n| sp-frontend-1 | Frontend with distributed cache |\n| sp-frontend-2 | Frontend with distributed cache |\n| sp-search-1 | Search       |\n| sp-search-2 | Search       |\nFor each VM, do the following:- Connect to the VM [by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in as a domain administrator user.\n- Click **Start** > **Microsoft SharePoint Products** > **SharePoint Products Configuration Wizard** .\n- On the **Welcome to SharePoint Products** page, click **Next** .\n- In the dialog box that notifies you that some services might have to be restarted during configuration, click **Yes** .\n- On the **Connect to a server farm** page, select **Connect to an existing server farm** .\n- On the **Specify configuration database settings** page, specify the same database server and database name that you used for the first server.\n- On the next page, enter the passphrase that you defined previously.\n- On the **Specify server role** page, select the role that corresponds to the VM and click **Next** .\n- On the **Completing the SharePoint products configuration wizard** page, confirm your configuration and click **Next** .\n- On the **Configuration Successful** page, click **Finish** . **Note:** If deploying the **Frontend with distributed cache** fails with the error `System.InvalidOperationException was thrown. Additional exception information: cacheHostInfo is null` , run the PowerShell script provided in [SharePoint 2016 Troubleshooting: Configuration Wizard failed with error 'CacheHostInfo is null'](https://social.technet.microsoft.com/wiki/contents/articles/34617.sharepoint-2016-troubleshooting-configuration-wizard-failed-with-error-cachehostinfo-is-null.aspx#PS_Script) . Then run the configuration wizard again.\n- Close the browser window.\n- Click **Start** > **Microsoft SharePoint Products** > **SharePoint Management Shell** \n- Apply pending SharePoint updates:```\nPSConfig.exe -cmd upgrade -inplace b2b -force -cmd applicationcontent -install -cmd installfeatures\n``` **Note:** Run the command on only one server at a time.\n### Configuring the farmYou now use the SharePoint configuration wizard to finalize the configuration of the farm:- Connect to`sp-app-1` [by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) .\n- Click **Start** > **Google Chrome** to open the Chrome browser.\n- Navigate to`http://sp-app-1:8000/configurationwizards.aspx`\n- Log in using a domain admin user.\n- Select **Launch the Farm Configuration Wizard** .\n- On the **Welcome** page, select **Start the Wizard** .\n- On the **Service Applications and Services** page, click **Use existing managed account** and select the`sp-farm`user.\n- Verify the list of services to install and customize the selection according to your requirements.\n- Select **Next** to start the configuration process.The process takes approximately 10 to 15 minutes to complete.\n- On the **Create Site Collection** page, specify a title and select a template, then click **OK** . See [Create a site collection by using Central Administration](https://docs.microsoft.com/en-us/sharepoint/sites/create-a-site-collection#create-a-site-collection-by-using-central-administration) for further details about creating sites.\n- On the **This completes the Farm Configuration Wizard** page, select **Finish** .\n- On the Central Administration home page, select **System Settings** > **Manage servers in farm** .\n- Verify that all servers are marked as **Compliant** and that the status is marked as **No Action Required** .\nFor further information about managing the SharePoint farm, see [Managing a MinRole Server Farm in SharePoint Servers 2016 and 2019](https://docs.microsoft.com/en-us/sharepoint/administration/managing-a-minrole-server-farm-in-sharepoint-server-2016) \n### Configuring alternate access mappingsTo allow users to access the SharePoint site by using the DNS name of the load balancer, you now configure an alternate access mapping:- On the Central Administration home page, select **System Settings** > **Configure alternate access mappings** .\n- Next to **Alternate Access Mapping Collection** , select **Show All** > **Change alternate access mapping collection** .\n- In the **Select alternate access mapping collection** dialog, select **SharePoint - 80** .\n- Select **Edit public URLs** .\n- Configure the following mapping:- **Default** :```\nhttp://sharepoint.DOMAIN\n```Where is the DNS domain of your Active Directory domain.\n- Clear all other fields.\n- Click **Save** .\n- Right-click the **Start** button (or press **Win+X** ) and click **Windows PowerShell (Admin)** .\n- To have the alternate access mapping take effect, restart IIS on all servers:```\n\"sp-app-1\", \"sp-app-2\", \"sp-frontend-1\", \"sp-frontend-2\", \"sp-search-1\", \"sp-search-2\" | % { & iisreset $_ }\n```\nYour SharePoint farm is now ready to use.## Testing the SharePoint siteTo verify that you can access the SharePoint site by using the DNS name of the load balancer, follow these steps:- In Chrome, navigate to the following address:```\nhttp://sharepoint.DOMAIN\n```Replace with the DNS domain of your Active Directory domain.\n- Log in using an administrative domain user.Because this is the first time you open the site, it takes several minutes for the site to initialize.\n- Verify that you see the homepage of your SharePoint site.\n- Under **Documents** , select **Upload** .\n- Select a test document to upload to the site. You can use an empty Rich Text Document ( `.rtf` ) if you don't have a document available for testing.\n- Click **OK** to upload the document.\nSharePoint periodically crawls documents to update its search index. To avoid waiting for the crawl to happen, initiate a crawl manually:- On`sp-app-1`, click **Start** > **Microsoft SharePoint Products** > **SharePoint Management Shell** .\n- Start a full crawl:```\n$Crawler = (Get-SPEnterpriseSearchServiceApplication |Get-SPEnterpriseSearchCrawlContentSource)\n$Crawler.StartFullCrawl()\n```\nWait about 5 minutes for the crawl process to complete in the background.\nYou can now verify that the SharePoint search works by searching for the document that you uploaded previously:- Return to Chrome and the SharePoint site.\n- Search for the filename of the file you uploaded by using the search box.\n- Verify that the file shows up in the search results.\n## Clean upTo avoid incurring further costs after you have completed this tutorial, delete the entities that you've created.\n### Delete the Google Cloud project\n- **Caution** : Deleting a project has the following effects:- **Everything in the project is deleted.** If you used an existing project for  the tasks in this document, when you delete it, you also delete any other work you've  done in the project.\n- **Custom project IDs are lost.** When you created this project, you might have created a custom project ID that you want to use in  the future. To preserve the URLs that use the project ID, such as an`appspot.com`URL, delete selected resources inside the project instead of deleting the whole project.\n- In the Google Cloud console, go to the **Manage resources** page. [Go to Manage resources](https://console.cloud.google.com/iam-admin/projects) \n- In the project list, select the project that you  want to delete, and then click **Delete** .\n- In the dialog, type the project ID, and then click **Shut down** to delete the project.\n## What's next\n- Explore reference architectures, diagrams, and best practices about Google Cloud. Take a look at our [Cloud Architecture Center](/architecture) .", "guide": "Compute Engine"}