{"title": "Apigee - Configuring authentication for Cassandra", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Configuring authentication for Cassandra\nYou are currently viewing version 1.10 of the Apigee hybrid documentation. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis topic explains how to configure authentication for communication between Cassandra nodes and between clients and Cassandra nodes.\n", "content": "## \n How to configure authentication for Cassandra in the runtime plane\nCassandra provides secure communication between a client machine and a database cluster and between nodes within a cluster. Enabling encryption ensures that data in flight is not compromised and is transferred securely. In Apigee hybrid, TLS is enabled by default for any communication between Cassandra nodes and between clients and Cassandra nodes.\nYou can configure the authentication using username/password combinations either placed directly in the overrides file or added to a Kubernetes Secret, as explained in this topic.\n## \nAbout Cassandra user authentication\nThe hybrid platform uses Cassandra as the backend datastore for runtime plane data. By default, any of the client communications to Cassandra require authentication. There are multiple client users that communicate with Cassandra. Default passwords are provided for these users. See [Changing the default passwords in the overrides file](#changing-the-default-passwords-in-the-overrides-file) for the steps required  to change the default passwords.\nThese users, including a default user, are described below:\n- **DML User** : Used by the client communication to read and write data to Cassandra  (KMS, KVM, Cache and Quota).\n- **DDL User:** Used by MART for any of the data definition tasks like keyspace  creation, update, and deletion.\n- **Admin User:** Used for any administrative activities performed  on cassandra cluster.\n- **Default Cassandra user:** Cassandra creates a default user when  Authentication is enabled and the username is`cassandra`\n- **JMX User:** Used to authenticate and communicate with the Cassandra JMX  interface.\n- **Jolokia User:** Used to authenticate and communicate with the Cassandra JMX  API.## \nAbout the default Cassandra user\nWhen Apigee hybrid cluster is created and Cassandra authentication is enabled, the initial user account is the default Cassandra user, identified by the username `cassandra` . The default `cassandra` user functions as a superuser, responsible for tasks such as adding user roles and modifying the database schema.\nThe Apigee hybrid `apigee-cassandra-user-setup` job utilizes the default `cassandra` user to establish new roles and update the password associated with this default user. The execution of the `apigee-cassandra-user-setup` job occurs during the initial installation of an Apigee hybrid instance, subsequent instance upgrades, and the provisioning of a new instance as part of region expansion.\nWhen the Apigee hybrid `apigee-cassandra-user-setup` job is executed, the job needs the ability to update and modify database level configurations either as part of a fresh install or an upgrade. The default `cassandra` user is the only user guaranteed to be present when the `apigee-cassandra-user-setup` job is setting up the new Cassandra pods. Without a known user with superuser access, the Apigee hybrid upgrades and region expansions would not function properly.\nThe default `cassandra` user password is changed after initial use as part of additional security measures. This means even if the default `cassandra` user is still enabled, the new password must be known to use the default `cassandra` user. The default `cassandra` user is not used by any other components except `apigee-cassandra-user-setup` job as part of the new install and region expansion.\n## \n Changing the default passwords in the overrides file\nAs a security best practice, we recommend you change the default passwords for Cassandra. You can do so in the `overrides.yaml` file. Add the following configuration, change the default passwords as you wish, and apply the change to your cluster.\n**Note:** You can only change these defaults at the time of initial setup. Password rotation or change after hybrid setup is not possible.\nAll the usernames must be in lowercase and no special characters are allowed.\n```\ncassandra:\u00a0 \u00a0auth:\u00a0 \u00a0 \u00a0default: \u00a0\n## the password for the new default user (static username: cassandra)\u00a0 \u00a0 \u00a0 \u00a0password: \"NEW_PASSWORD\"\u00a0 \u00a0 \u00a0admin: \n## the password for the admin user (static username: admin_user)\u00a0 \u00a0 \u00a0 \u00a0password: \"NEW_PASSWORD\"\u00a0 \u00a0 \u00a0ddl: \n## the password for the DDL User (static username: ddl_user)\u00a0 \u00a0 \u00a0 \u00a0password: \"NEW_PASSWORD\"\u00a0 \u00a0 \u00a0dml: \n## the password for the DML User (static username: dml_user)\u00a0 \u00a0 \u00a0 \u00a0password: \"NEW_PASSWORD\"\u00a0 \u00a0 \u00a0jmx:\u00a0 \u00a0 \u00a0 \u00a0username: \"jmxuser\" \n## the username for the JMX User\u00a0 \u00a0 \u00a0 \u00a0password: \"NEW_PASSWORD\" \n## the password for the JMX User\u00a0 \u00a0 \u00a0jolokia:\u00a0 \u00a0 \u00a0 \u00a0username: \"jolokiauser\" \n## the username to access jolokia interface\u00a0 \u00a0 \u00a0 \u00a0password: \"NEW_PASSWORD\" \n## the password for jolokia user\n```\nNote the following:\n- Certificate Authority (CA) rotation is not supported.\n- A server certificate which is generated with passphrase is not supported.## \n Setting usernames and passwords in a Kubernetes Secret\nThis section explains how to configure Cassandra to use Kubernetes Secrets for authentication.\n### \n Create the Secret\nUse the following template to configure the Kubernetes Secret. Save the template to a YAML file and edit the required attributes, for example `my-secret.yaml` . Note that if you use this option, you must provide the usernames with each password.\n```\napiVersion: v1kind: Secretmetadata:\u00a0 name: SECRET_NAME\u00a0 namespace: APIGEE_NAMESPACEtype: Opaquedata:\u00a0 default.password: DEFAULT_PASSWORD \u00a0 #base64-encoded string\u00a0 admin.user: ADMIN_USERNAME \u00a0 #base64-encoded string\u00a0 admin.password: ADMIN_PASSWORD \u00a0 #base64-encoded string\u00a0 dml.user: DML_USERNAME \u00a0 #base64-encoded string\u00a0 dml.password: DML_PASSWORD \u00a0 #base64-encoded string\u00a0 ddl.user: DDL_USERNAME \u00a0 #base64-encoded string\u00a0 ddl.password: DDL_PASSWORD \u00a0 #base64-encoded string\u00a0 jmx.user: JMX_USERNAME \u00a0 #base64-encoded string\u00a0 jmx.password: JMX_PASSWORD \u00a0 #base64-encoded string\u00a0 jolokia.user: JOLOKIA_USERNAME \u00a0 #base64-encoded string\u00a0 jolokia.password: JOLOKIA_PASSWORD \u00a0 #base64-encoded string\u00a0 \n```\nWhere is the name you choose for the Secret, is the namespace where the Apigee pods are deployed (default is `apigee` ), and each and are the usernames and passwords for each user. Note that the username and password must be Base64-encoded.\nApply the Secret to the cluster. For example:\n```\nkubectl apply -f SECRET_FILE\n```\nAdd the Secret to your overrides file:\n```\ncassandra:\u00a0 auth:\u00a0 \u00a0 secret: SECRET_NAME\n```\nApply the updated Cassandra override to the cluster:\n```\n$APIGEECTL_HOME/apigeectl apply -f overrides/overrides.yaml --datastore\n```\n## Check the Cassandra logs\nCheck the logs as soon as Cassandra starts up. The log below shows you that the Cassandra client connections are encrypted.\n```\nkubectl logs apigee-cassandra-2 -n apigee -f\nINFO 00:44:36 Starting listening for CQL clients on /10.0.2.12:9042 (encrypted)...\nINFO 00:44:36 Binding thrift service to /10.0.2.12:9160\nINFO 00:44:36 enabling encrypted thrift connections between client and server\nINFO 00:44:36 Listening for thrift clients...\n```", "guide": "Apigee"}