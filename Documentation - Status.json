{"title": "Documentation - Status", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Status\nThe `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc) . Each `Status` message contains three pieces of data: error code, error message, and error details.\nYou can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors) .| JSON representation                     |\n|:------------------------------------------------------------------------------------------------------|\n| { \"code\": integer, \"message\": string, \"details\": [ { \"@type\": string, field1: ..., ... } ] } || Fields | Fields.1                                                                        |\n|:----------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| code  | integer The status code, which should be an enum value of google.rpc.Code.                                                       |\n| message | string A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.                         |\n| details[] | object A list of messages that carry the error details. There is a common set of message types for APIs to use.An object containing fields of an arbitrary type. An additional field \"@type\" contains a URI identifying the type. Example: { \"id\": 1234, \"@type\": \"types.example.com/standard/id\" }. ", "content": "|", "guide": "Documentation"}