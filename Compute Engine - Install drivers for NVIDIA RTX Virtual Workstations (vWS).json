{"title": "Compute Engine - Install drivers for NVIDIA RTX Virtual Workstations (vWS)", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Install drivers for NVIDIA RTX Virtual Workstations (vWS)\nIf you need GPUs for hardware accelerated graphics on a remote desktop or for gaming, you can create virtual workstations that use [NVIDIA RTX Virtual Workstations (vWS)](https://www.nvidia.com/en-us/design-visualization/virtual-workstation/) (formerly known as NVIDIA GRID).\nNVIDIA RTX Virtual Workstations (vWS) are ideal for running workloads that use APIs such as Vulkan, OpenGL, or Direct3D on a cloud remote desktop.\nWhen you select a GPU for a virtual workstation, Compute Engine adds an NVIDIA RTX Virtual Workstation (vWS) license to your VM. For more information about pricing, see [GPU pricing](/compute/gpus-pricing) .\nTo set up an NVIDIA RTX Virtual Workstation (vWS), you need to do the following:\n- Create a VM with [virtual workstation enabled](/compute/docs/gpus/create-vm-with-gpus#create-new-gpu-vm) .\n- Install a [driver for the virtual workstation](#install-drivers) .\nAfter you create your virtual workstation, you can connect to it using a remote desktop protocol such as Teradici\u00ae PCoIP or VMware\u00ae Horizon View.\n", "content": "## Before you begin\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\nTo use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```## Required NVIDIA driver versions\nFor NVIDIA RTX Virtual Workstation (vWS) running on Compute Engine, the following NVIDIA driver versions are recommended:\n- **For L4 NVIDIA RTX Virtual Workstations (vWS)** :- Linux : 525.105 or later\n- Windows : 537.13 or later\n- **For T4, P4, and P100 NVIDIA RTX Virtual Workstations (vWS)** :- Linux : 470.63.01 or later\n- Windows : 471.68 or later\n## Install driver for the NVIDIA RTX Virtual Workstation (vWS)\nComplete the following steps on your VM.\n- For Linux operating systems, install the build tools for your Linux version.\n```\nsudo apt install build-essential\n```\n```\nsudo yum group install \"Development Tools\"\n```- **SLES 12** ```\nsudo zypper install -t pattern devel_basis\n``````\nsudo zypper install gcc8\n```\n- **SLES 15** ```\nsudo SUSEConnect -p sle-module-development-tools/15/x86_64\n``````\nsudo zypper install gcc8 \n```- For Linux operating systems, install the Linux kernel headers. See [Verify the System has the Correct Kernel Headers and Development Packages Installed](https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#verify-the-system-has-the-correct-kernel-headers-and-development-packages-installed) in the Nvidia documentation.\n- For all operating systems, install drivers. **Caution:** The drivers provided in this section are for use with Compute Engine only. If you need drivers for other platforms, see the [NVIDIA Driver Download](http://www.nvidia.com/Download/index.aspx) page.\n- Download the driver. For a full list of NVIDIA RTX Virtual Workstation (vWS) drivers that you can use on Compute Engine, see [Drivers for the NVIDIA RTX Virtual Workstation (vWS)](/compute/docs/gpus/grid-drivers-table) .For example, to download the NVIDIA 550.54.14 driver, run the following command:```\ncurl -O https://storage.googleapis.com/nvidia-drivers-us-public/GRID/vGPU17.0/NVIDIA-Linux-x86_64-550.54.14-grid.run\n```\n- Start the installer.For example, to start the NVIDIA 550.54.14 driver, run the following command:```\nsudo bash NVIDIA-Linux-x86_64-550.54.14-grid.run\n```\n- During the installation, choose the following options:- If you are prompted to install 32-bit binaries, select **Yes** .\n- If you are prompted to modify the`x.org`file, select **No** .- Depending on your version of Windows Server, download the required NVIDIA RTX Virtual Workstation (vWS) drivers.For a full list of NVIDIA RTX Virtual Workstation (vWS) drivers that you can use on Windows VMs that are running on Compute Engine, see [Drivers for the NVIDIA RTX Virtual Workstation (vWS)](/compute/docs/gpus/grid-drivers-table#windows_drivers) .\n- Run the installer, and choose the **Express installation** .\n- After the installation is complete, restart the VM. When you restart, you are disconnected from your session.\n- Reconnect to your instance using RDP or a PCoIP client.- This step is only required for Linux-based NVIDIA RTX Virtual Workstation (vWS) with attached T4 or L4 GPUs.If you installed an NVIDIA 510 or later driver, you need to disable the GSP firmware. See [Disabling GSP Firmware](https://docs.nvidia.com/grid/latest/grid-vgpu-user-guide/index.html#disabling-gsp) in the Nvidia documentation. When completing this step, keep the following in mind:- Use`sudo`to run the commands to create and update the configuration file.\n- To reboot the VM, you can use`sudo reboot`or [stop and start the VM](/compute/docs/instances/stop-start-instance) .\n## Verify that the driver is installed\nRun the following command:\n```\nnvidia-smi\n```\nThe output of the command looks similar to the following:\n```\n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 550.54.14    Driver Version: 550.54.14  CUDA Version: 12.4  |\n|-----------------------------------------+------------------------+----------------------+\n| GPU Name     Persistence-M | Bus-Id   Disp.A | Volatile Uncorr. ECC |\n| Fan Temp Perf   Pwr:Usage/Cap |   Memory-Usage | GPU-Util Compute M. |\n|           |      |    MIG M. |\n|=========================================+========================+======================|\n| 0 Tesla T4      On | 00000000:00:04.0 Off |     0 |\n| N/A 62C P0    28W / 70W |  0MiB / 15360MiB |  0%  Default |\n|           |      |     N/A |\n+-----------------------------------------+------------------------+----------------------+\n+-----------------------------------------------------------------------------------------+\n| Processes:                    |\n| GPU GI CI  PID Type Process name        GPU Memory |\n|  ID ID                Usage  |\n|=========================================================================================|\n| No running processes found                |\n+-----------------------------------------------------------------------------------------+\n```- Connect to your Windows instance using RDP or a PCoIP client.\n- Right-click the desktop, and select **NVIDIA Control Panel** .\n- In the NVIDIA Control Panel, from the Help menu, select **System Information** . The information shows the GPU that the VM is using, and the driver version.## What's next?\n- To monitor GPU performance, see [Monitoring GPU performance](/compute/docs/gpus/monitor-gpus) .\n- To handle GPU host maintenance, see [Handling GPU host maintenance events](/compute/docs/gpus/gpu-host-maintenance) .\n- To improve network performance, see [Use higher network bandwidth](/compute/docs/gpus/optimize-gpus) .", "guide": "Compute Engine"}