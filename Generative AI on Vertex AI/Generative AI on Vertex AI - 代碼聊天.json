{"title": "Generative AI on Vertex AI - \u4ee3\u78bc\u804a\u5929", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/code-chat?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u4ee3\u78bc\u804a\u5929\nCodey for Code Chat ( `codechat-bison` ) \u662f\u652f\u6301\u4ee3\u78bc\u804a\u5929\u7684\u6a21\u578b\u7684\u540d\u7a31\u3002\u5b83\u662f\u4e00\u500b\u57fa\u790e\u6a21\u578b\uff0c\u53ef\u652f\u6301\u5c08\u7528\u65bc\u4ee3\u78bc\u7684\u591a\u8f2a\u5c0d\u8a71\u3002\u8a72\u6a21\u578b\u5141\u8a31\u958b\u767c\u8005\u8207\u804a\u5929\u6a5f\u5668\u4eba\u804a\u5929\uff0c\u4ee5\u89e3\u7b54\u8207\u4ee3\u78bc\u76f8\u95dc\u7684\u554f\u984c\u3002\u4ee3\u78bc\u804a\u5929 API \u7528\u65bc\u8207 Codey for Code Chat \u6a21\u578b\u4ea4\u4e92\u3002\nCodey for Code Chat \u975e\u5e38\u9069\u5408\u901a\u904e\u4f86\u56de\u4ea4\u4e92\u5b8c\u6210\u7684\u4ee3\u78bc\u4efb\u52d9\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u53c3\u8207\u9023\u7e8c\u5c0d\u8a71\u3002\u5c0d\u65bc\u9700\u8981\u55ae\u6b21\u4ea4\u4e92\u7684\u4ee3\u78bc\u4efb\u52d9\uff0c\u8acb\u4f7f\u7528\u7528\u65bc [\u4ee3\u78bc\u88dc\u5168](https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-completion-prompts?hl=zh-cn) \u7684 API \u6216\u7528\u65bc [\u4ee3\u78bc\u751f\u6210](https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-generation-prompts?hl=zh-cn) \u7684 API\u3002\n\u5982\u9700\u5728\u63a7\u5236\u6aaf\u4e2d\u63a2\u7d22\u6b64\u6a21\u578b\uff0c\u8acb\u53c3\u95b1 Model Garden \u4e2d\u7684 Codey for Code Chat \u6a21\u578b\u5361\u7247\u3002  [\u524d\u5f80 Model Garden](https://console.cloud.google.com/vertex-ai/publishers/google/model-garden/codechat-bison?hl=zh-cn)\n", "content": "## \u61c9\u7528\u5834\u666f\n\u4ee3\u78bc\u804a\u5929\u7684\u4e00\u4e9b\u5e38\u898b\u61c9\u7528\u5834\u666f\u5305\u62ec\uff1a\n- **\u7372\u53d6\u6709\u95dc\u4ee3\u78bc\u7684\u5e6b\u52a9** \uff1a\u7372\u53d6\u6709\u95dc\u4ee3\u78bc\u554f\u984c\u7684\u5e6b\u52a9\uff0c\u4f8b\u5982\u6709\u95dc API \u7684\u554f\u984c\u3001\u652f\u6301\u7684\u7de8\u7a0b\u8a9e\u8a00\u7684\u8a9e\u6cd5\u6216\u60a8\u7de8\u5beb\u7684\u4ee3\u78bc\u9700\u8981\u54ea\u500b\u7248\u672c\u7684\u5eab\u3002\n- **\u8abf\u8a66** \uff1a\u7372\u53d6\u6709\u95dc\u7121\u6cd5\u7de8\u8b6f\u6216\u5305\u542b\u932f\u8aa4\u7684\u4ee3\u78bc\u7684\u5e6b\u52a9\u3002\n- **\u8a18\u9304** \uff1a\u7372\u53d6\u6709\u95dc\u7406\u89e3\u4ee3\u78bc\u7684\u5e6b\u52a9\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u6e96\u78ba\u8a18\u9304\u4ee3\u78bc\u3002\n- **\u77ad\u89e3\u4ee3\u78bc** \uff1a\u7372\u53d6\u6709\u95dc\u60a8\u4e0d\u719f\u6089\u7684\u4ee3\u78bc\u7684\u5e6b\u52a9\u3002## HTTP \u8acb\u6c42\n```\nPOST https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/codechat-bison:predict\n```\n## \u6a21\u578b\u7248\u672c\n\u5982\u9700\u4f7f\u7528 [\u6700\u65b0\u7684\u6a21\u578b\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#latest-version) \uff0c\u8acb\u6307\u5b9a\u4e0d\u542b\u7248\u672c\u865f\u7684\u6a21\u578b\u540d\u7a31\uff0c\u4f8b\u5982 `codechat-bison` \u3002\n\u5982\u9700\u4f7f\u7528 [\u7a69\u5b9a\u7684\u6a21\u578b\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#stable-version) \uff0c\u8acb\u6307\u5b9a\u6a21\u578b\u7248\u672c\u865f\uff0c\u4f8b\u5982 `codechat-bison@002` \u3002\u6bcf\u500b\u7a69\u5b9a\u7248\u672c\u6703\u5728\u5f8c\u7e8c\u7a69\u5b9a\u7248\u767c\u4f48\u65e5\u671f\u5f8c\u7684\u516d\u500b\u6708\u5167\u53ef\u7528\u3002\n\u4e0b\u8868\u5305\u542b\u53ef\u7528\u7684\u7a69\u5b9a\u6a21\u578b\u7248\u672c\uff1a\n| codechat-bison \u6a21\u578b | \u767c\u4f48\u65e5\u671f   | \u7d42\u6b62\u65e5\u671f   |\n|:----------------------|:-------------------|:------------------|\n| codechat-bison@002 | 2023 \u5e74 12 \u6708 6 \u65e5 | \u4e0d\u9069\u7528   |\n| codechat-bison@001 | 2023 \u5e74 6 \u6708 29 \u65e5 | 2024 \u5e74 7 \u6708 6 \u65e5 |\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6a21\u578b\u7248\u672c\u548c\u751f\u547d\u9031\u671f](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n## \u8acb\u6c42\u6b63\u6587\n```\n{\u00a0 \"instances\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"context\": string,\u00a0 \u00a0 \u00a0 \"messages\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"content\": string,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"author\": string\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 }\u00a0 ],\u00a0 \"parameters\":{\u00a0 \u00a0 \"temperature\": number,\u00a0 \u00a0 \"maxOutputTokens\": integer,\u00a0 \u00a0 \"candidateCount\": integer,\u00a0 \u00a0 \"logprobs\": integer,\u00a0 \u00a0 \"presencePenalty\": float,\u00a0 \u00a0 \"frequencyPenalty\": float,\u00a0 \u00a0 \"seed\": integer\u00a0 }}\n```\n\u4ee5\u4e0b\u662f\u4ee3\u78bc\u804a\u5929\u6a21\u578b `codechat-bison` \u7684\u53c3\u6578\u3002 `codechat-bison` \u6a21\u578b\u662f Codey \u4e2d\u7684\u6a21\u578b\u4e4b\u4e00\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u9019\u4e9b\u53c3\u6578\u4f86\u5e6b\u52a9\u512a\u5316\u6709\u95dc\u4ee3\u78bc\u7684\u804a\u5929\u6a5f\u5668\u4eba\u5c0d\u8a71\u7684\u63d0\u793a\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u4ee3\u78bc\u6a21\u578b\u6982\u89bd](https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-models-overview?hl=zh-cn) \u548c [\u5275\u5efa\u6709\u95dc\u4ee3\u78bc\u7684\u804a\u5929\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-generation-prompts?hl=zh-cn) \u3002\n| \u53c3\u6578      | \u8aaa\u660e                                                                   | \u53ef\u63a5\u53d7\u7684\u503c                |\n|:--------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------|\n| context     | \u61c9\u8a72\u5148\u5c07\u6587\u672c\u63d0\u4f9b\u7d66\u6a21\u578b\u4ee5\u6253\u4e0b\u97ff\u61c9\u7684\u57fa\u790e\u3002                                                          | \u6587\u672c                 |\n| messages \uff08\u5fc5\u586b\uff09   | \u4ee5\u7d50\u69cb\u5316\u7684\u5099\u7528\u4f5c\u8005\u5f62\u5f0f\u63d0\u4f9b\u7d66\u6a21\u578b\u7684\u5c0d\u8a71\u6b77\u53f2\u8a18\u9304\u3002\u6d88\u606f\u6309\u6642\u9593\u9806\u5e8f\u986f\u793a\uff1a\u6700\u820a\u7684\u6d88\u606f\u5728\u524d\u9762\uff0c\u6700\u65b0\u7684\u4fe1\u606f\u5728\u5f8c\u9762\u3002\u7576\u6d88\u606f\u7684\u6b77\u53f2\u8a18\u9304\u5c0e\u81f4\u8f38\u5165\u8d85\u904e\u6700\u5927\u9577\u5ea6\u6642\uff0c\u6700\u820a\u7684\u6d88\u606f\u6703\u88ab\u79fb\u9664\uff0c\u76f4\u5230\u6574\u500b\u63d0\u793a\u5728\u5141\u8a31\u7684\u9650\u5236\u7bc4\u570d\u5167\u3002                   | List[Structured Message] \"author\": \"user\", \"content\": \"user message\" |\n| temperature \uff08\u53ef\u9078\uff09  | \u6eab\u5ea6 (temperature) \u5728\u751f\u6210\u56de\u8986\u671f\u9593\u7528\u65bc\u63a1\u6a23\u3002\u6eab\u5ea6\u53ef\u4ee5\u63a7\u5236\u8a5e\u5143\u9078\u64c7\u7684\u96a8\u6a5f\u6027\u3002\u8f03\u4f4e\u7684\u6eab\u5ea6\u6709\u5229\u65bc\u9700\u8981\u66f4\u5c11\u958b\u653e\u6027\u6216\u5275\u9020\u6027\u56de\u8986\u7684\u63d0\u793a\uff0c\u800c\u8f03\u9ad8\u7684\u6eab\u5ea6\u53ef\u4ee5\u5e36\u4f86\u66f4\u5177\u591a\u6a23\u6027\u6216\u5275\u9020\u6027\u7684\u7d50\u679c\u3002\u6eab\u5ea6\u7232 0 \u8868\u793a\u59cb\u7d42\u9078\u64c7\u6982\u7387\u6700\u9ad8\u7684\u8a5e\u5143\u3002\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u7d66\u5b9a\u63d0\u793a\u7684\u56de\u8986\u5927\u591a\u662f\u78ba\u5b9a\u7684\uff0c\u4f46\u53ef\u80fd\u4ecd\u7136\u6709\u5c11\u91cf\u8b8a\u5316\u3002 | 0.0\u20131.0 Default: 0.2             |\n| maxOutputTokens \uff08\u53ef\u9078\uff09 | \u56de\u8986\u4e2d\u53ef\u751f\u6210\u7684\u8a5e\u5143\u6578\u91cf\u4e0a\u9650\u3002\u8a5e\u5143\u7d04\u7232 4 \u500b\u5b57\u7b26\u3002100 \u500b\u8a5e\u5143\u5c0d\u61c9\u5927\u7d04 60-80 \u500b\u55ae\u8a5e\u3002 \u6307\u5b9a\u8f03\u4f4e\u7684\u503c\u53ef\u7372\u5f97\u8f03\u77ed\u7684\u56de\u8986\uff0c\u6307\u5b9a\u8f03\u9ad8\u7684\u503c\u53ef\u7372\u5f97\u53ef\u80fd\u8f03\u9577\u7684\u56de\u8986\u3002                                | 1\u20132048 Default: 1024             |\n| candidateCount \uff08\u53ef\u9078\uff09 | \u8981\u8fd4\u56de\u7684\u97ff\u61c9\u8b8a\u9ad4\u6578\u91cf\u3002                                                               | 1-4 Default: 1               |\n| logprobs \uff08\u53ef\u9078\uff09   | \u8fd4\u56de\u6bcf\u500b\u751f\u6210\u6b65\u9a5f\u4e2d\u6392\u540d\u9760\u524d\u7684 logprobs \u6700\u53ef\u80fd\u5019\u9078\u8a5e\u5143\u53ca\u5176\u5c0d\u6578\u6982\u7387\u3002\u7cfb\u7d71\u6703\u59cb\u7d42\u8fd4\u56de\u6bcf\u500b\u6b65\u9a5f\u7684\u9078\u5b9a\u8a5e\u5143\u53ca\u5176\u5c0d\u6578\u6982\u7387\u3002\u9078\u64c7\u7684\u8a5e\u5143\u4e0d\u4e00\u5b9a\u662f\u6392\u540d\u9760\u524d\u7684 logprobs \u6700\u53ef\u80fd\u5019\u9078\u8a5e\u5143\u3002                           | 0-5                 |\n| frequencyPenalty \uff08\u53ef\u9078\uff09 | \u6b63\u503c\u6703\u61f2\u7f70\u751f\u6210\u7684\u6587\u672c\u4e2d\u53cd\u8986\u51fa\u73fe\u7684\u8a5e\u5143\uff0c\u5f9e\u800c\u964d\u4f4e\u91cd\u8907\u5167\u5bb9\u6982\u7387\u3002\u53ef\u63a5\u53d7\u7684\u503c\u7232 -2.0-2.0\u3002                                               | Minimum value: -2.0 Maximum value: 2.0         |\n| presencePenalty \uff08\u53ef\u9078\uff09 | \u6b63\u503c\u6703\u61f2\u7f70\u5df2\u751f\u6210\u6587\u672c\u4e2d\u5df2\u5b58\u5728\u7684\u8a5e\u5143\uff0c\u5f9e\u800c\u589e\u52a0\u751f\u6210\u66f4\u591a\u6a23\u5316\u5167\u5bb9\u7684\u6982\u7387\u3002\u53ef\u63a5\u53d7\u7684\u503c\u7232 -2.0-2.0\u3002                                             | Minimum value: -2.0 Maximum value: 2.0         |\n| seed      | \u89e3\u78bc\u5668\u4f7f\u7528\u50de\u96a8\u6a5f\u6578\u751f\u6210\u5668\u751f\u6210\u96a8\u6a5f\u566a\u8072\uff0c\u6eab\u5ea6 * \u566a\u8072\u5728\u63a1\u6a23\u4e4b\u524d\u6dfb\u52a0\u5230 logits\u3002\u50de\u96a8\u6a5f\u6578\u751f\u6210\u5668 (prng) \u5c07\u7a2e\u5b50\u4f5c\u7232\u8f38\u5165\uff0c\u4e26\u4f7f\u7528\u540c\u4e00\u7a2e\u5b50\u751f\u6210\u76f8\u540c\u7684\u8f38\u51fa\u3002 \u5982\u679c\u672a\u8a2d\u7f6e\u7a2e\u5b50\uff0c\u5247\u89e3\u78bc\u5668\u4e2d\u4f7f\u7528\u7684\u7a2e\u5b50\u5177\u6709\u4e0d\u78ba\u5b9a\u6027\uff0c\u56e0\u6b64\u751f\u6210\u7684\u96a8\u6a5f\u566a\u8072\u5177\u6709\u4e0d\u78ba\u5b9a\u6027\u3002\u5982\u679c\u8a2d\u7f6e\u4e86\u7a2e\u5b50\uff0c\u5247\u751f\u6210\u7684\u96a8\u6a5f\u566a\u8072\u5177\u6709\u78ba\u5b9a\u6027\u3002 | Optional                |\n## \u793a\u4f8b\u8acb\u6c42\n\u5982\u9700\u4f7f\u7528 Vertex AI API \u6e2c\u8a66\u6587\u672c\u63d0\u793a\uff0c\u8acb\u5411\u767c\u4f48\u65b9\u6a21\u578b\u7aef\u9ede\u767c\u9001 POST \u8acb\u6c42\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \u5982\u9700\u77ad\u89e3\u5176\u4ed6\u5b57\u6bb5\uff0c\u8acb\u67e5\u770b\n- [\u8acb\u6c42\u6b63\u6587](#request_body) \n- \u8868\u3002\n- HTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/codechat-bison:predict\n```- \u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"instances\": [ {\n  \"messages\": [  {\n   \"author\": \"AUTHOR\",\n   \"content\": \"CONTENT\"\n  }\n  ]\n }\n ],\n \"parameters\": {\n \"temperature\": TEMPERATURE,\n \"maxOutputTokens\": MAX_OUTPUT_TOKENS,\n \"candidateCount\": CANDIDATE_COUNT\n }\n}\n```- \u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/codechat-bison:predict\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/codechat-bison:predict\" | Select-Object -Expand Content\n```\n- \u60a8\u61c9\u8a72\u6703\u6536\u5230\u985e\u4f3c [\u793a\u4f8b\u97ff\u61c9](#sample_response) \u7684 JSON \u97ff\u61c9\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/generative_ai/code_chat.py) \n```\nfrom vertexai.language_models import CodeChatModeldef write_a_function(temperature: float = 0.5) -> object:\u00a0 \u00a0 \"\"\"Example of using Codey for Code Chat Model to write a function.\"\"\"\u00a0 \u00a0 # TODO developer - override these parameters as needed:\u00a0 \u00a0 parameters = {\u00a0 \u00a0 \u00a0 \u00a0 \"temperature\": temperature, \u00a0# Temperature controls the degree of randomness in token selection.\u00a0 \u00a0 \u00a0 \u00a0 \"max_output_tokens\": 1024, \u00a0# Token limit determines the maximum amount of text output.\u00a0 \u00a0 }\u00a0 \u00a0 code_chat_model = CodeChatModel.from_pretrained(\"codechat-bison@001\")\u00a0 \u00a0 chat = code_chat_model.start_chat()\u00a0 \u00a0 response = chat.send_message(\u00a0 \u00a0 \u00a0 \u00a0 \"Please help write a function to calculate the min of two numbers\", **parameters\u00a0 \u00a0 )\u00a0 \u00a0 print(f\"Response from Model: {response.text}\")\u00a0 \u00a0 return response\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/predict-code-chat.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const aiplatform = require('@google-cloud/aiplatform');// Imports the Google Cloud Prediction service clientconst {PredictionServiceClient} = aiplatform.v1;// Import the helper module for converting arbitrary protobuf.Value objects.const {helpers} = aiplatform;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};const publisher = 'google';const model = 'codechat-bison@001';// Instantiates a clientconst predictionServiceClient = new PredictionServiceClient(clientOptions);async function callPredict() {\u00a0 // Configure the parent resource\u00a0 const endpoint = `projects/${project}/locations/${location}/publishers/${publisher}/models/${model}`;\u00a0 // Learn more about creating prompts to work with a code chat model at:\u00a0 // https://cloud.google.com/vertex-ai/docs/generative-ai/code/code-chat-prompts\u00a0 const prompt = {\u00a0 \u00a0 messages: [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 author: 'user',\u00a0 \u00a0 \u00a0 \u00a0 content: 'Hi, how are you?',\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 author: 'system',\u00a0 \u00a0 \u00a0 \u00a0 content: 'I am doing good. What can I help you in the coding world?',\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 author: 'user',\u00a0 \u00a0 \u00a0 \u00a0 content:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'Please help write a function to calculate the min of two numbers',\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 ],\u00a0 };\u00a0 const instanceValue = helpers.toValue(prompt);\u00a0 const instances = [instanceValue];\u00a0 const parameter = {\u00a0 \u00a0 temperature: 0.5,\u00a0 \u00a0 maxOutputTokens: 1024,\u00a0 };\u00a0 const parameters = helpers.toValue(parameter);\u00a0 const request = {\u00a0 \u00a0 endpoint,\u00a0 \u00a0 instances,\u00a0 \u00a0 parameters,\u00a0 };\u00a0 // Predict request\u00a0 const [response] = await predictionServiceClient.predict(request);\u00a0 console.log('Get code chat response');\u00a0 const predictions = response.predictions;\u00a0 console.log('\\tPredictions :');\u00a0 for (const prediction of predictions) {\u00a0 \u00a0 console.log(`\\t\\tPrediction : ${JSON.stringify(prediction)}`);\u00a0 }}callPredict();\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/PredictCodeChatSample.java) \n```\nimport com.google.cloud.aiplatform.v1beta1.EndpointName;import com.google.cloud.aiplatform.v1beta1.PredictResponse;import com.google.cloud.aiplatform.v1beta1.PredictionServiceClient;import com.google.cloud.aiplatform.v1beta1.PredictionServiceSettings;import com.google.protobuf.InvalidProtocolBufferException;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.ArrayList;import java.util.List;public class PredictCodeChatSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace this variable before running the sample.\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 // Learn more about creating prompts to work with a code chat model at:\u00a0 \u00a0 // https://cloud.google.com/vertex-ai/docs/generative-ai/code/code-chat-prompts\u00a0 \u00a0 String instance =\u00a0 \u00a0 \u00a0 \u00a0 \"{ \\\"messages\\\": [\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"{\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"author\\\": \\\"user\\\",\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"content\\\": \\\"Hi, how are you?\\\"\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"},\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"{\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"author\\\": \\\"system\\\",\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"content\\\": \\\"I am doing good. What can I help you in the coding world?\\\"\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" },\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"{\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"author\\\": \\\"user\\\",\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"content\\\":\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0 \u00a0 \\\"Please help write a function to calculate the min of two numbers.\\\"\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"}\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"]}\";\u00a0 \u00a0 String parameters = \"{\\n\" + \" \u00a0\\\"temperature\\\": 0.5,\\n\" + \" \u00a0\\\"maxOutputTokens\\\": 1024\\n\" + \"}\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String publisher = \"google\";\u00a0 \u00a0 String model = \"codechat-bison@001\";\u00a0 \u00a0 predictCodeChat(instance, parameters, project, location, publisher, model);\u00a0 }\u00a0 // Use a code chat model to generate a code function\u00a0 public static void predictCodeChat(\u00a0 \u00a0 \u00a0 String instance,\u00a0 \u00a0 \u00a0 String parameters,\u00a0 \u00a0 \u00a0 String project,\u00a0 \u00a0 \u00a0 String location,\u00a0 \u00a0 \u00a0 String publisher,\u00a0 \u00a0 \u00a0 String model)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 final String endpoint = String.format(\"%s-aiplatform.googleapis.com:443\", location);\u00a0 \u00a0 PredictionServiceSettings predictionServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceSettings.newBuilder().setEndpoint(endpoint).build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (PredictionServiceClient predictionServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceClient.create(predictionServiceSettings)) {\u00a0 \u00a0 \u00a0 final EndpointName endpointName =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EndpointName.ofProjectLocationPublisherModelName(project, location, publisher, model);\u00a0 \u00a0 \u00a0 Value instanceValue = stringToValue(instance);\u00a0 \u00a0 \u00a0 List<Value> instances = new ArrayList<>();\u00a0 \u00a0 \u00a0 instances.add(instanceValue);\u00a0 \u00a0 \u00a0 Value parameterValue = stringToValue(parameters);\u00a0 \u00a0 \u00a0 PredictResponse predictResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predictionServiceClient.predict(endpointName, instances, parameterValue);\u00a0 \u00a0 \u00a0 System.out.println(\"Predict Response\");\u00a0 \u00a0 \u00a0 System.out.println(predictResponse);\u00a0 \u00a0 }\u00a0 }\u00a0 // Convert a Json string to a protobuf.Value\u00a0 static Value stringToValue(String value) throws InvalidProtocolBufferException {\u00a0 \u00a0 Value.Builder builder = Value.newBuilder();\u00a0 \u00a0 JsonFormat.parser().merge(value, builder);\u00a0 \u00a0 return builder.build();\u00a0 }}\n```\n## \u97ff\u61c9\u6b63\u6587\n```\n{\u00a0 \"predictions\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"candidates\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"author\": string,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"content\": string\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"citationMetadata\": {\u00a0 \u00a0 \u00a0 \u00a0 \"citations\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"startIndex\": integer,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"endIndex\": integer,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"url\": string,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"title\": string,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"license\": string,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"publicationDate\": string\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"logprobs\": {\u00a0 \u00a0 \u00a0 \u00a0 \"tokenLogProbs\": [ float ],\u00a0 \u00a0 \u00a0 \u00a0 \"tokens\": [ string ],\u00a0 \u00a0 \u00a0 \u00a0 \"topLogProbs\": [ { map<string, float> } ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"safetyAttributes\":{\u00a0 \u00a0 \u00a0 \u00a0 \"categories\": [ string ],\u00a0 \u00a0 \u00a0 \u00a0 \"blocked\": false,\u00a0 \u00a0 \u00a0 \u00a0 \"scores\": [ float ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"score\": float\u00a0 \u00a0 }\u00a0 ]}\n```\n| \u97ff\u61c9\u5143\u7d20   | \u8aaa\u660e                                              |\n|:-----------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| author   | \u6307\u793a\u804a\u5929\u97ff\u61c9\u4f5c\u8005\u7684 string\u3002                                        |\n| blocked   | \u8207\u5b89\u5168\u5c6c\u6027\u95dc\u806f\u7684 boolean \u6a19\u8a8c\uff0c\u7528\u65bc\u6307\u793a\u6a21\u578b\u7684\u8f38\u5165\u6216\u8f38\u51fa\u662f\u5426\u88ab\u963b\u6b62\u3002\u5982\u679c blocked \u7232 true\uff0c\u5247\u97ff\u61c9\u4e2d\u7684 errors \u5b57\u6bb5\u5305\u542b\u4e00\u500b\u6216\u591a\u500b\u932f\u8aa4\u4ee3\u78bc\u3002\u5982\u679c blocked \u7232 false\uff0c\u5247\u97ff\u61c9\u4e0d\u5305\u542b errors \u5b57\u6bb5\u3002 |\n| categories  | \u8207\u6240\u751f\u6210\u5167\u5bb9\u95dc\u806f\u7684\u5b89\u5168\u5c6c\u6027\u985e\u5225\u540d\u7a31\u7684\u5217\u8868\u3002scores \u53c3\u6578\u4e2d\u7684\u5f97\u5206\u9806\u5e8f\u8207\u985e\u5225\u7684\u9806\u5e8f\u5339\u914d\u3002\u4f8b\u5982\uff0cscores \u53c3\u6578\u4e2d\u7684\u7b2c\u4e00\u500b\u5f97\u5206\u8868\u793a\u97ff\u61c9\u9055\u53cd categories \u5217\u8868\u4e2d\u7b2c\u4e00\u500b\u985e\u5225\u7684\u53ef\u80fd\u6027\u3002      |\n| content   | \u804a\u5929\u97ff\u61c9\u7684\u5167\u5bb9\u3002                                           |\n| endIndex   | \u4e00\u500b\u6574\u6578\uff0c\u7528\u65bc\u6307\u5b9a\u5f15\u7528\u5728 content \u4e2d\u7684\u7d50\u675f\u4f4d\u7f6e\u3002                                   |\n| errors   | \u932f\u8aa4\u4ee3\u78bc\u6578\u7d44\u3002\u50c5\u7576\u97ff\u61c9\u4e2d\u7684 blocked \u5b57\u6bb5\u7232 true \u6642\uff0c\u97ff\u61c9\u4e2d\u624d\u6703\u5305\u542b errors \u97ff\u61c9\u5b57\u6bb5\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u7406\u89e3\u932f\u8aa4\u4ee3\u78bc\uff0c\u8acb\u53c3\u95b1\u5b89\u5168\u932f\u8aa4\u3002               |\n| license   | \u8207\u5f15\u7528\u95dc\u806f\u7684\u8a31\u53ef\u3002                                          |\n| publicationDate | \u5f15\u7528\u7684\u767c\u4f48\u65e5\u671f\u3002\u5176\u6709\u6548\u683c\u5f0f\u7232 YYYY\u3001YYYY-MM\u3001YYYY-MM-DD\u3002                                 |\n| safetyAttributes | \u4e00\u500b\u5b89\u5168\u5c6c\u6027\u9663\u5217\u3002\u8a72\u9663\u5217\u5305\u542b\u6bcf\u500b\u97ff\u61c9\u5019\u9078\u9805\u7684\u4e00\u500b\u5b89\u5168\u5c6c\u6027\u3002                                |\n| score   | \u5c0f\u65bc\u96f6\u7684 float \u503c\u3002score \u7684\u503c\u8d8a\u9ad8\uff0c\u6a21\u578b\u56de\u8986\u7684\u7f6e\u4fe1\u5ea6\u5c31\u8d8a\u9ad8\u3002                                |\n| scores   | float \u503c\u7684\u6578\u7d44\u3002\u6bcf\u500b\u503c\u90fd\u662f\u4e00\u500b\u5f97\u5206\uff0c\u7528\u65bc\u6307\u793a\u56de\u8986\u9055\u53cd\u6aa2\u67e5\u6240\u4f9d\u64da\u7684\u5b89\u5168\u985e\u5225\u7684\u53ef\u80fd\u6027\u3002 \u503c\u8d8a\u5c0f\uff0c\u6a21\u578b\u5c31\u8a8d\u7232\u56de\u8986\u8d8a\u5b89\u5168\u3002\u6578\u7d44\u4e2d\u5f97\u5206\u7684\u9806\u5e8f\u8207 categories \u56de\u8986\u5143\u7d20\u4e2d\u7684\u5b89\u5168\u5c6c\u6027\u7684\u9806\u5e8f\u5c0d\u61c9\u3002   |\n| startIndex  | \u4e00\u500b\u6574\u6578\uff0c\u7528\u65bc\u6307\u5b9a\u5f15\u7528\u5728\u5167\u5bb9\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002                                    |\n| title   | \u5f15\u7528\u4f86\u6e90\u7684\u6a19\u984c\u3002\u4f86\u6e90\u6a19\u984c\u7684\u793a\u4f8b\u53ef\u80fd\u662f\u65b0\u805e\u5831\u9053\u6216\u66f8\u7c4d\u6a19\u984c\u3002                                 |\n| url    | \u5f15\u7528\u4f86\u6e90\u7684\u7db2\u5740\u3002\u7db2\u5740\u4f86\u6e90\u7684\u793a\u4f8b\u53ef\u80fd\u662f\u65b0\u805e\u7db2\u7ad9\u6216 GitHub \u4ee3\u78bc\u5eab\u3002                               |\n| tokens   | \u63a1\u6a23\u8a5e\u5143\u3002                                            |\n| tokenLogProbs | \u63a1\u6a23\u8a5e\u5143\u7684\u5c0d\u6578\u6982\u7387\u3002                                          |\n| topLogProbs  | \u6bcf\u500b\u6b65\u9a5f\u4e2d\u6700\u53ef\u80fd\u7684\u5019\u9078\u8a5e\u5143\u53ca\u5176\u5c0d\u6578\u6982\u7387\u3002                                     |\n| logprobs   | \u201clogprobs\u201d\u53c3\u6578\u7684\u7d50\u679c\u30021-1 \u6620\u5c04\u5230\u201c\u5019\u9078\u201d\u3002                                     |\n## \u793a\u4f8b\u97ff\u61c9\n```\n{\u00a0 \"predictions\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"citationMetadata\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"citations\": []\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"candidates\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"author\": \"AUTHOR\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"content\": \"RESPONSE\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"safetyAttributes\": {\u00a0 \u00a0 \u00a0 \u00a0 \"categories\": [],\u00a0 \u00a0 \u00a0 \u00a0 \"blocked\": false,\u00a0 \u00a0 \u00a0 \u00a0 \"scores\": []\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"score\": -1.1161688566207886\u00a0 \u00a0 }\u00a0 ]}\n```\n## \u6d41\u5f0f\u50b3\u8f38\u4f86\u81ea\u751f\u6210\u5f0f AI \u6a21\u578b\u7684\u97ff\u61c9\n\u5c0d\u65bc API \u7684\u6d41\u5f0f\u50b3\u8f38\u8acb\u6c42\u548c\u975e\u6d41\u5f0f\u50b3\u8f38\u8acb\u6c42\uff0c\u9019\u4e9b\u53c3\u6578\u662f\u76f8\u540c\u7684\u3002\n\u5982\u9700\u4f7f\u7528 REST API \u67e5\u770b\u793a\u4f8b\u4ee3\u78bc\u8acb\u6c42\u548c\u97ff\u61c9\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528\u6d41\u5f0f\u50b3\u8f38 REST API \u7684\u793a\u4f8b](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/streaming?hl=zh-cn#rest) \u3002\n\u5982\u9700\u4f7f\u7528 Python \u7248 Vertex AI SDK \u67e5\u770b\u793a\u4f8b\u4ee3\u78bc\u8acb\u6c42\u548c\u97ff\u61c9\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528 Python \u7248 Vertex AI SDK \u9032\u884c\u6d41\u5f0f\u50b3\u8f38\u7684\u793a\u4f8b](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/streaming?hl=zh-cn#sdk) \u3002", "guide": "Generative AI on Vertex AI"}