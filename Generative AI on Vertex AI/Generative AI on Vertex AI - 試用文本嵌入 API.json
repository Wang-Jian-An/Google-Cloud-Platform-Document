{"title": "Generative AI on Vertex AI - \u8a66\u7528\u6587\u672c\u5d4c\u5165 API", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart-text-embeddings?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u8a66\u7528\u6587\u672c\u5d4c\u5165 API\n\u4f7f\u7528 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI \u5411 Google \u7684 PaLM 2 \u5927\u8a9e\u8a00\u6a21\u578b (LLM) \u767c\u9001\u6587\u672c\u5d4c\u5165\u8acb\u6c42\u4e26\u63a5\u6536\u56de\u5fa9\u3002\u6e2c\u8a66\u548c\u81ea\u5b9a\u7fa9\u63d0\u793a\u4ee5\u6eff\u8db3\u61c9\u7528\u7684\u9700\u6c42\u3002\n", "content": "## \u6e96\u5099\u5de5\u4f5c\n\u60a8\u5fc5\u9808\u5148\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff0c\u7136\u5f8c\u624d\u80fd\u8a66\u7528\u804a\u5929\u63d0\u793a\u529f\u80fd\uff1a\n- [\u8a2d\u7f6e\u9805\u76ee\u548c\u958b\u767c\u74b0\u5883](https://cloud.google.com/vertex-ai/docs/start/cloud-environment?hl=zh-cn) \u3002 \u904b\u884c\u793a\u4f8b\u4ee3\u78bc\u9700\u8981\u9805\u76ee ID\u3002\n- \u719f\u6089\u5728\u904b\u884c\u793a\u4f8b\u4ee3\u78bc\u4e4b\u524d\u5fc5\u9808\u66ff\u63db\u7684 [\u6587\u672c\u5d4c\u5165\u53c3\u6578](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/text-embeddings?hl=zh-cn#request_body) \u3002\n- \u67e5\u770b [\u6587\u672c\u5d4c\u5165\u7528\u4f8b](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/text-embeddings?hl=zh-cn#use_cases) \uff0c\u4ee5\u5e6b\u52a9\u60a8\u78ba\u5b9a\u8981\u5275\u5efa\u7684\u6a23\u672c\u985e\u578b\u3002## \u5617\u8a66\u6587\u672c\u5d4c\u5165\u8acb\u6c42\nVertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI PaLM Embedding API \u57f7\u884c\u5728\u7dda\uff08\u5be6\u6642\uff09\u9810\u6e2c\uff0c\u8a72\u9810\u6e2c\u4f7f\u7528\u6587\u672c\u5d4c\u5165\u8acb\u6c42\u4f5c\u7232\u6a21\u578b\u7684\u8f38\u5165\u3002\u8a72 API \u63a5\u53d7 3,072 \u500b\u8f38\u5165\u8a5e\u5143\uff0c\u4e26\u8f38\u51fa 768 \u7dad\u5411\u91cf\u5d4c\u5165\u3002\n\u9078\u64c7\u4e00\u500b\u6a19\u7c64\u9801\uff0c\u7136\u5f8c\u6309\u7167\u8aaa\u660e\u904b\u884c\u8a72\u793a\u4f8b\u3002\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002   \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/generative_ai/embedding.py) \n```\nfrom vertexai.language_models import TextEmbeddingModeldef text_embedding() -> list:\u00a0 \u00a0 \"\"\"Text embedding with a Large Language Model.\"\"\"\u00a0 \u00a0 model = TextEmbeddingModel.from_pretrained(\"textembedding-gecko@001\")\u00a0 \u00a0 embeddings = model.get_embeddings([\"What is life?\"])\u00a0 \u00a0 for embedding in embeddings:\u00a0 \u00a0 \u00a0 \u00a0 vector = embedding.values\u00a0 \u00a0 \u00a0 \u00a0 print(f\"Length of Embedding Vector: {len(vector)}\")\u00a0 \u00a0 return vector\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/predict-text-embeddings.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const aiplatform = require('@google-cloud/aiplatform');// Imports the Google Cloud Prediction service clientconst {PredictionServiceClient} = aiplatform.v1;// Import the helper module for converting arbitrary protobuf.Value objects.const {helpers} = aiplatform;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};const publisher = 'google';const model = 'textembedding-gecko@001';// Instantiates a clientconst predictionServiceClient = new PredictionServiceClient(clientOptions);async function callPredict() {\u00a0 // Configure the parent resource\u00a0 const endpoint = `projects/${project}/locations/${location}/publishers/${publisher}/models/${model}`;\u00a0 const instance = {\u00a0 \u00a0 content: 'What is life?',\u00a0 };\u00a0 const instanceValue = helpers.toValue(instance);\u00a0 const instances = [instanceValue];\u00a0 const parameter = {\u00a0 \u00a0 temperature: 0,\u00a0 \u00a0 maxOutputTokens: 256,\u00a0 \u00a0 topP: 0,\u00a0 \u00a0 topK: 1,\u00a0 };\u00a0 const parameters = helpers.toValue(parameter);\u00a0 const request = {\u00a0 \u00a0 endpoint,\u00a0 \u00a0 instances,\u00a0 \u00a0 parameters,\u00a0 };\u00a0 // Predict request\u00a0 const [response] = await predictionServiceClient.predict(request);\u00a0 console.log('Get text embeddings response');\u00a0 const predictions = response.predictions;\u00a0 console.log('\\tPredictions :');\u00a0 for (const prediction of predictions) {\u00a0 \u00a0 console.log(`\\t\\tPrediction : ${JSON.stringify(prediction)}`);\u00a0 }}callPredict();\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/PredictTextEmbeddingsSample.java) \n```\nimport com.google.cloud.aiplatform.util.ValueConverter;import com.google.cloud.aiplatform.v1beta1.EndpointName;import com.google.cloud.aiplatform.v1beta1.PredictResponse;import com.google.cloud.aiplatform.v1beta1.PredictionServiceClient;import com.google.cloud.aiplatform.v1beta1.PredictionServiceSettings;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.ArrayList;import java.util.List;public class PredictTextEmbeddingsSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // Details about text embedding request structure and supported models are available in:\u00a0 \u00a0 // https://cloud.google.com/vertex-ai/docs/generative-ai/embeddings/get-text-embeddings\u00a0 \u00a0 String instance = \"{ \\\"content\\\": \\\"What is life?\\\"}\";\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String publisher = \"google\";\u00a0 \u00a0 String model = \"textembedding-gecko@001\";\u00a0 \u00a0 predictTextEmbeddings(instance, project, location, publisher, model);\u00a0 }\u00a0 // Get text embeddings from a supported embedding model\u00a0 public static void predictTextEmbeddings(\u00a0 \u00a0 \u00a0 String instance, String project, String location, String publisher, String model)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 String endpoint = String.format(\"%s-aiplatform.googleapis.com:443\", location);\u00a0 \u00a0 PredictionServiceSettings predictionServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(endpoint)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (PredictionServiceClient predictionServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceClient.create(predictionServiceSettings)) {\u00a0 \u00a0 \u00a0 EndpointName endpointName =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EndpointName.ofProjectLocationPublisherModelName(project, location, publisher, model);\u00a0 \u00a0 \u00a0 // Use Value.Builder to convert instance to a dynamically typed value that can be\u00a0 \u00a0 \u00a0 // processed by the service.\u00a0 \u00a0 \u00a0 Value.Builder instanceValue = Value.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(instance, instanceValue);\u00a0 \u00a0 \u00a0 List<Value> instances = new ArrayList<>();\u00a0 \u00a0 \u00a0 instances.add(instanceValue.build());\u00a0 \u00a0 \u00a0 PredictResponse predictResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predictionServiceClient.predict(endpointName, instances, ValueConverter.EMPTY_VALUE);\u00a0 \u00a0 \u00a0 System.out.println(\"Predict Response\");\u00a0 \u00a0 \u00a0 for (Value prediction : predictResponse.getPredictionsList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"\\tPrediction: %s\\n\", prediction);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 C# \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.AIPlatform.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/aiplatform/api/AIPlatform.Samples/PredictTextEmbeddingsSample.cs) \n```\nusing Google.Cloud.AIPlatform.V1;using System;using System.Collections.Generic;using System.Linq;using Value = Google.Protobuf.WellKnownTypes.Value;public class PredictTextEmbeddingsSample{\u00a0 \u00a0 public int PredictTextEmbeddings(\u00a0 \u00a0 \u00a0 \u00a0 string projectId = \"your-project-id\",\u00a0 \u00a0 \u00a0 \u00a0 string locationId = \"us-central1\",\u00a0 \u00a0 \u00a0 \u00a0 string publisher = \"google\",\u00a0 \u00a0 \u00a0 \u00a0 string model = \"textembedding-gecko@001\"\u00a0 \u00a0 )\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Initialize client that will be used to send requests.\u00a0 \u00a0 \u00a0 \u00a0 // This client only needs to be created once,\u00a0 \u00a0 \u00a0 \u00a0 // and can be reused for multiple requests.\u00a0 \u00a0 \u00a0 \u00a0 var client = new PredictionServiceClientBuilder\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Endpoint = $\"{locationId}-aiplatform.googleapis.com\"\u00a0 \u00a0 \u00a0 \u00a0 }.Build();\u00a0 \u00a0 \u00a0 \u00a0 // Configure the parent resource.\u00a0 \u00a0 \u00a0 \u00a0 var endpoint = EndpointName.FromProjectLocationPublisherModel(projectId, locationId, publisher, model);\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s).\u00a0 \u00a0 \u00a0 \u00a0 var instances = new List<Value>\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Value.ForStruct(new()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Fields =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\"content\"] = Value.ForString(\"What is life?\"),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 })\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request.\u00a0 \u00a0 \u00a0 \u00a0 var response = client.Predict(endpoint, instances, null);\u00a0 \u00a0 \u00a0 \u00a0 // Parse and return the embedding vector count.\u00a0 \u00a0 \u00a0 \u00a0 var values = response.Predictions.First().StructValue.Fields[\"embeddings\"].StructValue.Fields[\"values\"].ListValue.Values;\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine($\"Length of embedding vector: {values.Count}\");\u00a0 \u00a0 \u00a0 \u00a0 return values.Count;\u00a0 \u00a0 }}\n```\u5982\u9700\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u5617\u8a66\u6587\u672c\u5d4c\u5165\u8acb\u6c42\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\u6253\u958b Cloud Shell \u7d42\u7aef\u3002 [\u8f49\u5230 Cloud Shell](https://console.cloud.google.com/?cloudshell=true&hl=zh-cn) \n- \u4fee\u6539\u793a\u4f8b\u4ee3\u78bc\u4e2d\u7684\u4f54\u4f4d\u7b26\uff0c\u7136\u5f8c\u8907\u88fd\u5230\u63a7\u5236\u6aaf\u3002```\nMODEL_ID=\"textembedding-gecko\"PROJECT_ID=PROJECT_IDcurl \\\u00a0 -X POST \\\u00a0 -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 -H \"Content-Type: application/json\" \\\u00a0 https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:predict -d \\\u00a0 $'{\u00a0 \u00a0 \"instances\": [\u00a0 \u00a0 \u00a0 { \"content\": \"What is life?\"}\u00a0 \u00a0 ],\u00a0 }'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \n```## \u5f8c\u7e8c\u6b65\u9a5f\n- \u77ad\u89e3\u5982\u4f55 [\u8a2d\u8a08\u6587\u672c\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/text/text-prompts?hl=zh-cn) \u548c [\u6587\u5b57\u804a\u5929\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/chat/chat-prompts?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55\u5728 [Vertex AI Studio](https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart?hl=zh-cn) \u4e2d\u6e2c\u8a66\u63d0\u793a\u3002\n- \u77ad\u89e3 [\u6587\u672c\u5d4c\u5165](https://cloud.google.com/vertex-ai/generative-ai/docs/embeddings/get-text-embeddings?hl=zh-cn) \u3002\n- \u5617\u8a66 [\u8abf\u6574\u8a9e\u8a00\u57fa\u790e\u6a21\u578b](https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart-tuning?hl=zh-cn) \u3002\n- \u77ad\u89e3 [Responsible AI \u6700\u4f73\u5be6\u8e10](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/responsible-ai?hl=zh-cn#recommended_practices) \u548c [Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI \u7684\u5b89\u5168\u904e\u6ffe\u689d\u4ef6](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/responsible-ai?hl=zh-cn#safety_filters_and_attributes) \u3002", "guide": "Generative AI on Vertex AI"}