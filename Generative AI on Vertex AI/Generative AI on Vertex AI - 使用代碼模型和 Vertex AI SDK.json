{"title": "Generative AI on Vertex AI - \u4f7f\u7528\u4ee3\u78bc\u6a21\u578b\u548c Vertex AI SDK", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/sdk-for-llm/sdk-use-code-models?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u4f7f\u7528\u4ee3\u78bc\u6a21\u578b\u548c Vertex AI SDK\nVertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI \u4e2d\u6709\u4e09\u500b\u751f\u6210\u5f0f AI \u4ee3\u78bc\u57fa\u790e\u6a21\u578b\u3002\u4e09\u500b\u6a21\u578b\u5206\u5225\u662f\u4ee3\u78bc\u751f\u6210\u6a21\u578b\u3001\u4ee3\u78bc\u88dc\u5168\u6a21\u578b\u548c\u4ee3\u78bc\u804a\u5929\u6a21\u578b\u3002\n- \u4ee3\u78bc\u751f\u6210\u6a21\u578b\u540d\u7a31\u7232 `code-bison` \uff0c\u5176\u5728 Vertex AI SDK \u4e2d\u7684\u985e\u7232 [CodeGenerationModel](https://cloud.google.com/python/docs/reference/aiplatform/latest/vertexai.language_models.CodeGenerationModel?hl=zh-cn) \u3002\n- \u4ee3\u78bc\u88dc\u5168\u6a21\u578b\u540d\u7a31\u7232 `code-gecko` \uff0c\u5176\u5728 Vertex AI SDK \u4e2d\u7684\u985e\u8207\u7528\u65bc\u751f\u6210\u4ee3\u78bc\u7684\u985e [CodeGenerationModel](https://cloud.google.com/python/docs/reference/aiplatform/latest/vertexai.language_models.CodeGenerationModel?hl=zh-cn) \u76f8\u540c\u3002\n- \u4ee3\u78bc\u804a\u5929\u6a21\u578b\u540d\u7a31\u7232 `codechat-bison` \uff0c\u5176\u5728 Vertex AI SDK \u4e2d\u7684\u985e\u7232 [CodeChatModel](https://cloud.google.com/python/docs/reference/aiplatform/latest/vertexai.language_models.CodeChatModel?hl=zh-cn) \u3002\n\u4ee5\u4e0b\u4e3b\u984c\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528\u9019\u4e9b\u985e\u548c Vertex AI SDK \u4f86\u57f7\u884c\u4e00\u4e9b\u8207\u4ee3\u78bc\u76f8\u95dc\u7684\u5e38\u898b\u751f\u6210\u5f0f AI \u4efb\u52d9\u3002\n#", "content": "## \u751f\u6210\u4ee3\u78bc\u51fd\u6578\n\u4ee3\u78bc\u751f\u6210\u57fa\u790e\u6a21\u578b\u7684\u7528\u4f8b\u5305\u62ec\u8a2d\u8a08\u55ae\u5143\u6e2c\u8a66\u3001\u7de8\u5beb\u51fd\u6578\u548c\u5275\u5efa\u985e\u3002\u8981\u751f\u6210\u4ee3\u78bc\uff0c\u8acb\u4f7f\u7528\u7528\u65bc\u5275\u5efa\u4ee3\u78bc\u88dc\u5168\u7684\u985e [CodeGenerationModel](https://cloud.google.com/python/docs/reference/aiplatform/latest/vertexai.language_models.CodeGenerationModel?hl=zh-cn) \u3002\u5982\u9700\u5275\u5efa\u751f\u6210\u4ee3\u78bc\u7684\u89e3\u6c7a\u65b9\u6848\uff0c\u8acb\u50b3\u5165\u4ee3\u78bc\u751f\u6210\u6a21\u578b\u7684\u7248\u672c\u540d\u7a31\uff0c\u4f8b\u5982 `code-bison@002` \u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u4ee3\u78bc\u751f\u6210\u57fa\u790e\u6a21\u578b\uff0c\u8acb\u53c3\u95b1 [\u5275\u5efa\u63d0\u793a\u4ee5\u751f\u6210\u4ee3\u78bc](https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-generation-prompts?hl=zh-cn) \u548c [\u6e2c\u8a66\u4ee3\u78bc\u751f\u6210\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/code/test-code-generation-prompts?hl=zh-cn) \u3002\n\u4ee5\u4e0b\u4ee3\u78bc\u793a\u4f8b\u7de8\u5beb\u4e86\u4e00\u500b\u51fd\u6578\uff0c\u7528\u65bc\u6aa2\u6e2c\u67d0\u4e00\u5e74\u662f\u5426\u7232\u958f\u5e74\u3002\n```\nfrom vertexai.language_models import CodeGenerationModelcode_generation_model = CodeGenerationModel.from_pretrained(\"code-bison@001\")print(code_generation_model.predict(\u00a0 \u00a0 prefix=\"Write a function that checks if a year is a leap year.\",\u00a0 \u00a0 # The following parameters are optional:\u00a0 \u00a0 # max_output_tokens=1024,\u00a0 \u00a0 # temperature=0.0,))\n```\n\u8f38\u51fa\u53ef\u80fd\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nI will write a function to check if a year is a leap year.**The function will take a year as input and return a boolean value**.**The function will first check if the year is divisible by 4.****If the year is divisible by 4, the function will then check if the year is divisible by 100.****If the year is divisible by 100, the function will then check if the year is divisible by 400.****If the year is divisible by 400, the function will ...\n```\n## \u751f\u6210\u4ee3\u78bc\u88dc\u5168\u4ee3\u78bc\n\u4ee3\u78bc\u88dc\u5168\u662f\u6307\u5728\u7de8\u5beb\u6642\u9810\u6e2c\u88dc\u5168\u4ee3\u78bc\u7684\u4ee3\u78bc\u3002\u7cfb\u7d71\u6703\u5728\u60a8\u8f38\u5165\u6642\u986f\u793a\u751f\u6210\u7684\u9810\u6e2c\u3002\u5982\u679c\u60a8\u8981\u5275\u5efa\u4ee3\u78bc\u88dc\u5168\u89e3\u6c7a\u65b9\u6848\uff0c\u8acb\u4f7f\u7528 [CodeGenerationModel](https://cloud.google.com/python/docs/reference/aiplatform/latest/vertexai.language_models.CodeGenerationModel?hl=zh-cn) \u985e\u3002\u6b64\u985e\u8207\u7528\u65bc\u751f\u6210\u4ee3\u78bc\uff08\u4f8b\u5982\u51fd\u6578\uff09\u7684\u985e\u76f8\u540c\u3002\u5982\u9700\u751f\u6210\u5728\u7de8\u5beb\u6642\u9810\u6e2c\u88dc\u5168\u4ee3\u78bc\u7684\u4ee3\u78bc\uff0c\u8acb\u8abf\u7528 `CodeGenerationModel.from_pretrained` \u4e26\u50b3\u5165\u4ee3\u78bc\u88dc\u5168\u6a21\u578b\u7248\u672c\u7684\u540d\u7a31\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u4ee3\u78bc\u88dc\u5168\u57fa\u790e\u6a21\u578b\uff0c\u8acb\u53c3\u95b1 [\u5275\u5efa\u4ee3\u78bc\u88dc\u5168\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-completion-prompts?hl=zh-cn) \u548c [\u6e2c\u8a66\u4ee3\u78bc\u88dc\u5168\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/code/test-code-completion-prompts?hl=zh-cn) \u3002\n\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u78bc\u4f7f\u7528\u6700\u65b0\u7684 [\u7a69\u5b9a](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#stable-version) `code-gecko` \u7248\u672c\uff0c\u4ee5\u8fd4\u56de\u9810\u6e2c\u88dc\u5168\u53cd\u8f49\u5b57\u7b26\u4e32\u7684\u51fd\u6578\u958b\u59cb\u90e8\u5206\u7684\u4ee3\u78bc\u3002\n```\nfrom vertexai.language_models import CodeGenerationModelcode_completion_model = CodeGenerationModel.from_pretrained(\"code-gecko@001\")print(code_completion_model.predict(\u00a0 \u00a0 prefix=\"def reverse_string(s):\",\u00a0 \u00a0 # Optional:\u00a0 \u00a0 suffix=\" \u00a0 \u00a0return reversed_str\",\u00a0 \u00a0 max_output_tokens=64,\u00a0 \u00a0 # temperature=0.0,))\n```\n\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\n\"\"\":type s: str:rtype: str\"\"\"reversed_str = \"\"for i in range(len(s) - 1, -1, -1):\u00a0 \u00a0 reversed_str += s[i]\n```\n## \u5275\u5efa\u4ee3\u78bc\u804a\u5929\n\u60a8\u53ef\u80fd\u60f3\u8981\u5275\u5efa\u4e00\u500b\u5c08\u9580\u95dc\u65bc\u4ee3\u78bc\u7684\u804a\u5929\u6703\u8a71\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u901a\u904e\u804a\u5929\u77ad\u89e3\u7de8\u78bc\u8a9e\u8a00\u6216\u8a9e\u6cd5\u3002\u5982\u9700\u4f7f\u7528 Vertex AI SDK \u5275\u5efa\u4ee3\u78bc\u804a\u5929\u6703\u8a71\uff0c\u8acb\u5728 `CodeChatModel` \u7684\u5be6\u4f8b\u4e0a\u4f7f\u7528 `start_chat` \u65b9\u6cd5\u3002\u8207\u6587\u672c\u804a\u5929\u4e0d\u540c\uff0c\u4f7f\u7528 Vertex AI SDK \u5275\u5efa\u7684\u4ee3\u78bc\u804a\u5929\u4e0d\u4f7f\u7528 [InputOutputTextPair](https://cloud.google.com/python/docs/reference/aiplatform/latest/vertexai.language_models.InputOutputTextPair?hl=zh-cn) \u985e\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u4ee3\u78bc\u804a\u5929\u57fa\u790e\u6a21\u578b\uff0c\u8acb\u53c3\u95b1 [\u5275\u5efa\u4ee3\u78bc\u804a\u5929\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-chat-prompts?hl=zh-cn) \u548c [\u6e2c\u8a66\u4ee3\u78bc\u804a\u5929\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/code/test-code-chat-prompts?hl=zh-cn) \u3002\n\u4ee5\u4e0b\u4ee3\u78bc\u4f7f\u7528\u4ee3\u78bc\u804a\u5929\u4f86\u8acb\u6c42\u6709\u95dc\u5982\u4f55\u7de8\u5beb\u51fd\u6578\u7684\u4fe1\u606f\u3002\n```\nfrom vertexai.language_models import CodeChatModelcode_chat_model = CodeChatModel.from_pretrained(\"codechat-bison@002\")code_chat = code_chat_model.start_chat()print(code_chat.send_message(\"Please help write a function that prints its own source code\"))\n```\n\u8f38\u51fa\u53ef\u80fd\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nSure, here is a function that prints its own source code:```def print_source_code():\u00a0 \"\"\"Prints the source code of this function.\"\"\"\u00a0 # Get the source code of this function.\u00a0 source_code = inspect.getsource(print_source_code)\u00a0 # Print the source code.\u00a0 print(source_code)```This function works by first getting the source code of the function using the`inspect.getsource()` function. Then, it prints the source code to the console.\n```\n## \u6d41\u5f0f\u50b3\u8f38\u4ee3\u78bc\u6a21\u578b\u97ff\u61c9\n\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u751f\u6210\u4ee3\u78bc\u548c\u4ee3\u78bc\u804a\u5929\u6a21\u578b\u6642\u5f9e\u4e2d\u63a5\u6536\u97ff\u61c9\u3002\u5728\u751f\u6210\u97ff\u61c9\u6642\u5f9e\u57fa\u790e\u6a21\u578b\u63a5\u6536\u97ff\u61c9\u7a31\u7232\u6d41\u5f0f\u50b3\u8f38\u3002\u6d41\u5f0f\u50b3\u8f38\u4ee3\u78bc\u751f\u6210\u548c\u4ee3\u78bc\u804a\u5929\u6a21\u578b\u97ff\u61c9\u6642\uff0c\u8f38\u51fa\u4ee4\u724c\u6703\u5728\u751f\u6210\u6642\u767c\u9001\u3002\u5982\u9700\u6d41\u5f0f\u50b3\u8f38\u4ee3\u78bc\u751f\u6210\uff0c\u8acb\u4f7f\u7528 `CodeGenerationModel.predict_streaming` \u65b9\u6cd5\u3002\u5982\u9700\u6d41\u5f0f\u50b3\u8f38\u4ee3\u78bc\u804a\u5929\uff0c\u8acb\u4f7f\u7528 `CodeChatModel.predict_streaming` \u65b9\u6cd5\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u5f9e\u57fa\u790e\u6a21\u578b\u9032\u884c\u6d41\u5f0f\u50b3\u8f38\uff0c\u8acb\u53c3\u95b1 [\u5f9e\u751f\u6210\u5f0f AI \u6a21\u578b\u6d41\u5f0f\u50b3\u8f38\u97ff\u61c9](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/streaming?hl=zh-cn) \u3002\n### \u6d41\u4ee3\u78bc\u751f\u6210\n\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u78bc\u6d41\u5f0f\u50b3\u8f38\u4e86\u7528\u65bc\u6aa2\u67e5\u5e74\u4efd\u662f\u5426\u7232\u958f\u5e74\u7684\u4ee3\u78bc\u3002\u5b83\u9084\u6703\u8f38\u51fa\u8abf\u7528 `from_pretrained` \u4e4b\u524d\u548c\u4e4b\u5f8c\u7684\u6642\u9593\uff0c\u4ee5\u986f\u793a\u6d41\u5f0f\u50b3\u8f38\u8f38\u51fa\u6240\u82b1\u8cbb\u7684\u6642\u9593\u3002\n```\nimport datetimefrom vertexai.language_models import CodeGenerationModelcode_generation_model = CodeGenerationModel.from_pretrained(\"code-bison@001\")print(\"Start: \", datetime.datetime.now())for response in code_generation_model.predict_streaming(\u00a0 \u00a0 prefix=\"Write a function that checks if a year is a leap year.\",\u00a0 \u00a0 # Optional:\u00a0 \u00a0 # max_output_tokens=1024,\u00a0 \u00a0 # temperature=0.0,):\u00a0 \u00a0 print(datetime.datetime.now(), \"|\", response)print(\"End: \", datetime.datetime.now())\n```\n\u97ff\u61c9\u53ef\u80fd\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nStart: \u00a0YYYY-MM-DD 06:31:45.759810YYYY-MM-DD 06:31:46.536173 | To check if a year is a leap year, we can use the following stepYYYY-MM-DD 06:31:46.611856 | s:1. **Check if the year is divisible by 4.** If it is not, thYYYY-MM-DD 06:31:46.667330 | en it is not a leap year.2. **Check if the year is divisible byYYYY-MM-DD 06:31:46.805714 | \u00a0100.** If it is, then it is not a leap year unless it is also dYYYY-MM-DD 06:31:46.940925 | ivisible by 400.3. **If the year is divisible by 4 but not by 1YYYY-MM-DD 06:31:47.033529 | 00, then it is a leap year.**For example, the year 2020 is divYYYY-MM-DD 06:31:47.110856 | isible byEnd: \u00a0YYYY-MM-DD 06:31:47.112951\n```\n### \u6d41\u5f0f\u50b3\u8f38\u4ee3\u78bc\u804a\u5929\n\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u78bc\u6703\u6d41\u5f0f\u50b3\u8f38\u97ff\u61c9\u804a\u5929\u6a5f\u5668\u4eba\u8acb\u6c42\u7684\u4ee3\u78bc\u804a\u5929\uff0c\u4ee5\u7de8\u5beb\u4e00\u500b\u8f38\u51fa\u81ea\u5df1\u7684\u6e90\u4ee3\u78bc\u7684\u51fd\u6578\u3002\u6b64\u5916\uff0c\u4ee3\u78bc\u793a\u4f8b\u9084\u6703\u8f38\u51fa\u8abf\u7528 `from_pretrained` \u4e4b\u524d\u548c\u4e4b\u5f8c\u7684\u6642\u9593\uff0c\u4ee5\u986f\u793a\u6d41\u5f0f\u50b3\u8f38\u8f38\u51fa\u6240\u82b1\u8cbb\u7684\u6642\u9593\u3002\n```\nimport datetimefrom vertexai.language_models import CodeChatModelcode_chat_model = CodeChatModel.from_pretrained(\"codechat-bison@001\")code_chat = chat_model.start_chat()print(\"Start: \", datetime.datetime.now())for response in code_chat.send_message_streaming(\u00a0 \u00a0 message=\"Please help write a function that prints its own source code\",\u00a0 \u00a0 # Optional:\u00a0 \u00a0 max_output_tokens=1024,):\u00a0 \u00a0 #print(datetime.datetime.now(), \"|\", response)\u00a0 \u00a0 print(\">>>\")\u00a0 \u00a0 print(response)print(\"End: \", datetime.datetime.now())\n```\n\u97ff\u61c9\u53ef\u80fd\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\n```Start: \u00a0YYYY-MM-DD 06:32:10.733415>>>```pythondef print_source(func):\u00a0 \u00a0 with open(func.__file__, '>>>r') as f:\u00a0 \u00a0 \u00a0 \u00a0 source = f.read()\u00a0 \u00a0 print(source)```End: \u00a0YYYY-MM-DD 06:32:11.764794```\n```\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u77ad\u89e3\u5982\u4f55 [\u4f7f\u7528\u6587\u672c\u6a21\u578b\u985e\u548c Vertex AI SDK](https://cloud.google.com/vertex-ai/generative-ai/docs/sdk-for-llm/sdk-use-text-models?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u4f7f\u7528 Vertex AI SDK \u5c0d\u57fa\u790e\u6a21\u578b\u8abf\u512a](https://cloud.google.com/vertex-ai/generative-ai/docs/sdk-for-llm/sdk-tune-models?hl=zh-cn) \u3002\n- \u77ad\u89e3 [\u8207\u751f\u6210\u5f0f AI \u7121\u95dc\u7684 Vertex AI SDK \u985e](https://cloud.google.com/vertex-ai/docs/python-sdk/python-sdk-class-overview?hl=zh-cn) \u3002", "guide": "Generative AI on Vertex AI"}