{"title": "Generative AI on Vertex AI - \u4f7f\u7528\u6587\u672c\u6a21\u578b\u548c Vertex AI SDK", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/sdk-for-llm/sdk-use-text-models?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u4f7f\u7528\u6587\u672c\u6a21\u578b\u548c Vertex AI SDK\nVertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI \u4e2d\u6709\u4e09\u7a2e\u985e\u578b\u7684\u751f\u6210\u5f0f AI \u6587\u672c\u57fa\u790e\u6a21\u578b\u3002\u9019\u4e9b\u6a21\u578b\u662f\u6587\u672c\u751f\u6210\u6a21\u578b\u3001\u6587\u672c\u804a\u5929\u6a21\u578b\u548c\u6587\u672c\u5d4c\u5165\u6a21\u578b\u3002\u6587\u672c\u804a\u5929\u548c\u6587\u672c\u751f\u6210\u6a21\u578b\u6703\u751f\u6210\u6587\u672c\u3002\u6587\u672c\u5d4c\u5165\u6a21\u578b\u6703\u751f\u6210\u6587\u672c\u7684\u5411\u91cf\u8868\u793a\uff0c\u4f9b\u60a8\u67e5\u627e\u985e\u4f3c\u9805\u3002\n- \u6587\u672c\u751f\u6210\u6a21\u578b\u540d\u7a31\u7232 `text-bison` \u548c `text-unicorn` \uff0c\u5176\u5728 Vertex AI SDK \u4e2d\u7684\u985e\u7232 [TextGenerationModel](https://cloud.google.com/python/docs/reference/aiplatform/latest/vertexai.language_models.TextGenerationModel?hl=zh-cn) \u3002\n- \u6587\u672c\u804a\u5929\u6a21\u578b\u540d\u7a31\u7232 `chat-bison` \uff0c\u5176\u5728 Vertex AI SDK \u4e2d\u7684\u985e\u7232 [ChatModel](https://cloud.google.com/python/docs/reference/aiplatform/latest/vertexai.language_models.ChatModel?hl=zh-cn) \u3002\n- \u6587\u672c\u5d4c\u5165\u6a21\u578b\u540d\u7a31\u7232 `textembedding-gecko` \uff0c\u5176\u5728 Vertex AI SDK \u4e2d\u7684\u985e\u7232 [TextEmbeddingModel](https://cloud.google.com/python/docs/reference/aiplatform/latest/vertexai.language_models.TextEmbeddingModel?hl=zh-cn) \u3002\n\u4ee5\u4e0b\u4e3b\u984c\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528\u9019\u4e9b\u985e\u548c Vertex AI SDK \u4f86\u57f7\u884c\u4e00\u4e9b\u5e38\u898b\u7684\u751f\u6210\u5f0f AI \u4efb\u52d9\u3002\n", "content": "## \u751f\u6210\u6587\u672c\n\u60a8\u53ef\u4ee5\u4f7f\u7528 Vertex AI SDK `TextGenerationModel` \u985e\u751f\u6210\u6587\u672c\u3002\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u78bc\u6703\u52a0\u8f09\u4e00\u500b [\u7a69\u5b9a\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#stable-version)\n`text-bison` \u6a21\u578b\u7684\u7248\u672c\uff0c\u7136\u5f8c\u4f7f\u7528 `predict` \u65b9\u6cd5\u751f\u6210\u65b9\u6848\u3002\u6b64\u4ee3\u78bc\u793a\u4f8b\u4e0d\u5305\u542b\u53ef\u9078\u53c3\u6578\u3002\u9810\u6e2c\u65b9\u6cd5\u5c07\u8fd4\u56de\u5177\u6709 `text` \u3001 `safety_attributes` \u548c `is_blocked` \u5c6c\u6027\u7684 [TextGenerationResponse](https://cloud.google.com/python/docs/reference/aiplatform/latest/vertexai.language_models.TextGenerationResponse?hl=zh-cn) \u5c0d\u8c61\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u4f7f\u7528\u6587\u672c\u751f\u6210\u57fa\u790e\u6a21\u578b\u751f\u6210\u6587\u672c\uff0c\u8acb\u53c3\u95b1 [\u8a2d\u8a08\u6587\u672c\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/text/text-prompts?hl=zh-cn) \u548c [\u6e2c\u8a66\u6587\u672c\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/text/test-text-prompts?hl=zh-cn) \u3002\n```\nfrom vertexai.language_models import TextGenerationModelmodel = TextGenerationModel.from_pretrained(\"text-bison@002\")print(model.predict(\u00a0 \u00a0 \"What is the best recipe for banana bread? Recipe:\",\u00a0 \u00a0 # The following are optional parameters:\u00a0 \u00a0 #max_output_tokens=128,\u00a0 \u00a0 #temperature=0,\u00a0 \u00a0 #top_p=1,\u00a0 \u00a0 #top_k=5,))\n```\n\u8f38\u51fa\u7684\u958b\u982d\u53ef\u80fd\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nIngredients:\n* 3 very ripe bananas, mashed\n* 1/2 cup (1 stick) unsalted butter, at room temperature\n* 3/4 cup granulated sugar\n* 3/4 cup packed light brown sugar\n* 2 large eggs\n* 2 teaspoons vanilla extract\n* 1 1/2 cups all-purpose flour\n* 1 teaspoon baking soda\n* 1/2 teaspoon salt\n* 1/2 cup chopped walnuts or pecans (optional)\nInstructions:\n1. Preheat oven to 350 degrees F\n ...\n```\n## \u751f\u6210\u6587\u672c\u804a\u5929\n\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u78bc\u5c55\u793a\u77ad\u5982\u4f55\u52a0\u8f09\u6587\u672c\u804a\u5929\u57fa\u790e\u6a21\u578b\u7684 [\u7a69\u5b9a\u7248](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#stable-version) \u3002 \u63a5\u4e0b\u4f86\uff0c\u5b83\u5c07\u4f7f\u7528 `start_chat` \u65b9\u6cd5\u767c\u8d77\u804a\u5929\uff0c\u4e26\u4f7f\u7528 `send_message` \u65b9\u6cd5\u767c\u9001\u804a\u5929\u6d88\u606f\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u4f7f\u7528\u6587\u672c\u804a\u5929\u57fa\u790e\u6a21\u578b\uff0c\u8acb\u53c3\u95b1 [\u8a2d\u8a08\u804a\u5929\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/chat/chat-prompts?hl=zh-cn) \u548c [\u6e2c\u8a66\u804a\u5929\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/chat/test-chat-prompts?hl=zh-cn) \u3002\n```\nfrom vertexai.language_models import ChatModel, InputOutputTextPairchat_model = ChatModel.from_pretrained(\"chat-bison@002\")chat = chat_model.start_chat(\u00a0 \u00a0 # Optional parameters, such ase top_p, top_k, temperature, max_output_tokens,\u00a0 \u00a0 # aren't specified in this example\u00a0 \u00a0 context=\"My name is Ned. You are my personal assistant. My favorite movies are Lord of the Rings and Hobbit.\",\u00a0 \u00a0 examples=[\u00a0 \u00a0 \u00a0 \u00a0 InputOutputTextPair(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 input_text=\"Who do you work for?\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 output_text=\"I work for Ned.\",\u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 InputOutputTextPair(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 input_text=\"What do I like?\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 output_text=\"Ned likes watching movies.\",\u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 ],)print(chat.send_message(\"Are my favorite movies based on a book series?\"))\n```\n`send_message` \u8f38\u51fa\u53ef\u80fd\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nYes, your favorite movies are based on a book series.\n```\n\u4ee5\u4e0b `send_message` \u4f7f\u7528\u540c\u4e00\u6587\u672c\u804a\u5929\u6703\u8a71\u767c\u9001\u7b2c\u4e8c\u689d\u6d88\u606f\u3002\n```\nprint(chat.send_message(\"When where these books published?\"))\n```\n\u7b2c\u4e8c\u500b `send_message` \u7684\u8f38\u51fa\u53ef\u80fd\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nThe books were published in 1954 and 1955.\n```\n## \u6d41\u5f0f\u50b3\u8f38\u6587\u672c\u6a21\u578b\u97ff\u61c9\n\u60a8\u53ef\u80fd\u5e0c\u671b\u5728\u97ff\u61c9\u751f\u6210\u6642\u5f9e\u6587\u672c\u751f\u6210\u548c\u6587\u672c\u804a\u5929\u6a21\u578b\u63a5\u6536\u97ff\u61c9\u3002\u5728\u97ff\u61c9\u751f\u6210\u6642\u5f9e\u57fa\u790e\u6a21\u578b\u63a5\u6536\u97ff\u61c9\u7a31\u7232\u6d41\u5f0f\u50b3\u8f38\u3002\u6d41\u5f0f\u50b3\u8f38\u6587\u672c\u751f\u6210\u548c\u6587\u672c\u804a\u5929\u6a21\u578b\u97ff\u61c9\u6642\uff0c\u8f38\u51fa\u4ee4\u724c\u6703\u5728\u751f\u6210\u6642\u767c\u9001\u3002\u5982\u9700\u6d41\u5f0f\u50b3\u8f38\u6587\u672c\u751f\u6210\uff0c\u8acb\u4f7f\u7528 `TextGenerationModel.predict_streaming` \u65b9\u6cd5\u3002\u5982\u9700\u6d41\u5f0f\u50b3\u8f38\u6587\u672c\u804a\u5929\uff0c\u8acb\u4f7f\u7528 `ChatModel.predict_streaming` \u65b9\u6cd5\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u5f9e\u57fa\u790e\u6a21\u578b\u9032\u884c\u6d41\u5f0f\u50b3\u8f38\uff0c\u8acb\u53c3\u95b1 [\u5f9e\u751f\u6210\u5f0f AI \u6a21\u578b\u6d41\u5f0f\u50b3\u8f38\u97ff\u61c9](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/streaming?hl=zh-cn) \u3002\n### \u6d41\u5f0f\u50b3\u8f38\u6587\u672c\u751f\u6210\n\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u78bc\u6703\u5728\u751f\u6210\u6587\u672c\u6642\u6d41\u5f0f\u50b3\u8f38\u8a08\u6578\u5230 100 \u7684\u6587\u672c\u3002\u5b83\u9084\u6703\u8f38\u51fa\u8abf\u7528 `from_pretrained` \u4e4b\u524d\u548c\u4e4b\u5f8c\u7684\u6642\u9593\uff0c\u4ee5\u986f\u793a\u6d41\u5f0f\u50b3\u8f38\u8f38\u51fa\u6240\u82b1\u8cbb\u7684\u6642\u9593\u3002\n```\nimport datetimefrom vertexai.language_models import TextGenerationModeltext_generation_model = TextGenerationModel.from_pretrained(\"text-bison@002\")print(\"Start: \", datetime.datetime.now())for response in text_generation_model.predict_streaming(\u00a0 \u00a0 prompt=\"Count to 100\",\u00a0 \u00a0 max_output_tokens=1000,\u00a0 \u00a0 # The following parameters are optional\u00a0 \u00a0 #temperature=0,\u00a0 \u00a0 #top_p=1,\u00a0 \u00a0 #top_k=5,):\u00a0 \u00a0 print(datetime.datetime.now(), \"|\", response)print(\"End: \", datetime.datetime.now())\n```\n\u97ff\u61c9\u53ef\u80fd\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nStart: \u00a0YYYY-MM-DD 06:31:07.825599YYYY-MM-DD 06:31:08.933534 | 1. 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 1YYYY-MM-DD 06:31:09.335374 | 9. 20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30. 31. 32. 33. 34. 3YYYY-MM-DD 06:31:09.738079 | 5. 36. 37. 38. 39. 40. 41. 42. 43. 44. 45. 46. 47. 48. 49. 50. 5YYYY-MM-DD 06:31:10.142726 | 1. 52. 53. 54. 55. 56. 57. 58. 59. 60. 61. 62. 63. 64. 65. 66. 6YYYY-MM-DD 06:31:10.535045 | 7. 68. 69. 70. 71. 72. 73. 74. 75. 76. 77. 78. 79. 80. 81. 82. 8YYYY-MM-DD 06:31:10.937847 | 3. 84. 85. 86. 87. 88. 89. 90. 91. 92. 93. 94. 95. 96. 97. 98. 9YYYY-MM-DD 06:31:10.996782 | 9. 100.End: \u00a0YYYY-MM-DD 06:31:10.998498\n```\n### \u6d41\u5f0f\u50b3\u8f38\u6587\u672c\u804a\u5929\n\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u78bc\u6703\u6d41\u5f0f\u50b3\u8f38\u97ff\u61c9\u804a\u5929\u6a5f\u5668\u4eba\u8acb\u6c42\u7684\u8a08\u6578\u5230 99 \u7684\u6587\u672c\u804a\u5929\u3002\u6b64\u5916\uff0c\u4ee3\u78bc\u793a\u4f8b\u9084\u6703\u8f38\u51fa\u8abf\u7528 `from_pretrained` \u4e4b\u524d\u548c\u4e4b\u5f8c\u7684\u6642\u9593\uff0c\u4ee5\u986f\u793a\u6d41\u5f0f\u50b3\u8f38\u8f38\u51fa\u6240\u82b1\u8cbb\u7684\u6642\u9593\u3002\n```\nimport datetimefrom vertexai.language_models import ChatModelchat_model = ChatModel.from_pretrained(\"chat-bison@002\")chat = chat_model.start_chat()print(\"Start: \", datetime.datetime.now())for response in chat.send_message_streaming(\u00a0 \u00a0 message=\"Hello. How are you today? Please count to 99\",\u00a0 \u00a0 max_output_tokens=1024,):\u00a0 \u00a0 print(datetime.datetime.now(), \"|\", response)print(\"End: \", datetime.datetime.now())\n```\n\u97ff\u61c9\u53ef\u80fd\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nStart: YYYY-MM-DD 06:31:19.808735\nYYYY-MM-DD 06:31:20.957465 | Hello, I am doing well today. Thank you for asking. 1, 2, 3, 4,\nYYYY-MM-DD 06:31:21.312577 | 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2\nYYYY-MM-DD 06:31:DD.709306 | 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 3\nYYYY-MM-DD 06:31:22.132016 | 8, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 5\nYYYY-MM-DD 06:31:22.517211 | 4, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 7\nYYYY-MM-DD 06:31:22.911003 | 0, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 8\nYYYY-MM-DD 06:31:23.257773 | 6, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99.\nEnd: YYYY-MM-DD 06:31:23.265454\n```\n## \u751f\u6210\u6587\u672c\u5d4c\u5165\n\u60a8\u53ef\u4ee5\u4f7f\u7528 Vertex AI SDK \u4e2d\u7684 `TextEmbeddingModel` \u985e\u8a08\u7b97\u6587\u672c\u5d4c\u5165\u3002\u4ee5\u4e0b Python \u4ee3\u78bc\u793a\u4f8b\u4f7f\u7528 `TextEmbeddingModel.get_embeddings` \u65b9\u6cd5\uff0c\u901a\u904e\u63d0\u793a\u751f\u6210\u6587\u672c\u5d4c\u5165\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c `get_embeddings` \u8fd4\u56de\u4e00\u500b `embeddings` \u5c0d\u8c61\uff0c\u8a72\u5c0d\u8c61\u5305\u542b\u4e00\u500b `embedding` \u5c0d\u8c61\u3002\u8a72\u793a\u4f8b\u6703\u8f38\u51fa\u6240\u8fd4\u56de\u77e2\u91cf\u7684\u9577\u5ea6\u548c\u7d71\u8a08\u4fe1\u606f\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u6587\u672c\u5d4c\u5165\u548c\u6587\u672c\u5d4c\u5165\u57fa\u790e\u6a21\u578b\uff0c\u8acb\u53c3\u95b1 [\u7372\u53d6\u6587\u672c\u5d4c\u5165](https://cloud.google.com/vertex-ai/generative-ai/docs/embeddings/get-text-embeddings?hl=zh-cn) \u3002\n```\nfrom vertexai.language_models import TextEmbeddingModelmodel = TextEmbeddingModel.from_pretrained(\"textembedding_gecko_current\")embeddings = model.get_embeddings([\"What is life?\"])for embedding in embeddings:\u00a0 \u00a0 vector = embedding.values\u00a0 \u00a0 print(len(vector))\u00a0 \u00a0 print(embedding.statistics)\n```\n\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\n768\nTextEmbeddingStatistics(token_count=4.0, truncated=False)\n```\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u77ad\u89e3\u5982\u4f55 [\u4f7f\u7528\u4ee3\u78bc\u6a21\u578b\u985e\u548c Vertex AI SDK](https://cloud.google.com/vertex-ai/generative-ai/docs/sdk-for-llm/sdk-use-code-models?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u4f7f\u7528 Vertex AI SDK \u5c0d\u57fa\u790e\u6a21\u578b\u8abf\u512a](https://cloud.google.com/vertex-ai/generative-ai/docs/sdk-for-llm/sdk-tune-models?hl=zh-cn) \u3002\n- \u77ad\u89e3 [\u8207\u751f\u6210\u5f0f AI \u7121\u95dc\u7684 Vertex AI SDK \u985e](https://cloud.google.com/vertex-ai/docs/python-sdk/python-sdk-class-overview?hl=zh-cn) \u3002", "guide": "Generative AI on Vertex AI"}