{"title": "Generative AI on Vertex AI - \u6e2c\u8a66\u6587\u672c\u63d0\u793a", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/text/test-text-prompts?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u6e2c\u8a66\u6587\u672c\u63d0\u793a\n\u85c9\u52a9 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u4e2d\u7684 Vertex AI Studio\u3001Vertex AI API \u548c Python \u7248 Vertex AI SDK \u6e2c\u8a66\u63d0\u793a\u3002\u672c\u9801\u9762\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528\u4e0a\u8ff0\u4efb\u4f55\u754c\u9762\u6e2c\u8a66\u6587\u672c\u63d0\u793a\u3002\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u6587\u672c\u63d0\u793a\u8a2d\u8a08\uff0c\u8acb\u53c3\u95b1 [\u8a2d\u8a08\u6587\u672c\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/text/text-prompts?hl=zh-cn) \u3002\n", "content": "## \u6e2c\u8a66\u6587\u672c\u63d0\u793a\n\u5982\u9700\u6e2c\u8a66\u6587\u672c\u63d0\u793a\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u6cd5\u4e4b\u4e00\u3002\n\u5982\u9700\u4f7f\u7528 Vertex AI API \u6e2c\u8a66\u6587\u672c\u63d0\u793a\uff0c\u8acb\u5411\u767c\u4f48\u65b9\u6a21\u578b\u7aef\u9ede\u767c\u9001 POST \u8acb\u6c42\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u63d0\u793a\u662f\u63d0\u4ea4\u5230\u8a9e\u8a00\u6a21\u578b\u7528\u4ee5\u63a5\u6536\u56de\u5fa9\u7684\u81ea\u7136\u8a9e\u8a00\u8acb\u6c42\u3002\u63d0\u793a\u53ef\u4ee5\u5305\u542b\u554f\u984c\u3001\u8aaa\u660e\u3001\u8a9e\u5883\u4fe1\u606f\u3001\u793a\u4f8b\u548c\u6587\u672c\uff0c\u4f9b\u6a21\u578b\u5b8c\u6210\u6216\u7e7c\u7e8c\u3002 \uff08\u8acb\u52ff\u7232\u6b64\u8655\u7684\u63d0\u793a\u6dfb\u52a0\u5f15\u865f\u3002\uff09\n- \uff1a\u6eab\u5ea6 (temperature) \u5728\u751f\u6210\u56de\u8986\u671f\u9593\u7528\u65bc\u63a1\u6a23\uff0c\u5728\u61c9\u7528`topP`\u548c`topK`\u6642\u6703\u751f\u6210\u56de\u8986\u3002\u6eab\u5ea6\u53ef\u4ee5\u63a7\u5236\u8a5e\u5143\u9078\u64c7\u7684\u96a8\u6a5f\u6027\u3002 \u8f03\u4f4e\u7684\u6eab\u5ea6\u6709\u5229\u65bc\u9700\u8981\u66f4\u5c11\u958b\u653e\u6027\u6216\u5275\u9020\u6027\u56de\u8986\u7684\u63d0\u793a\uff0c\u800c\u8f03\u9ad8\u7684\u6eab\u5ea6\u53ef\u4ee5\u5e36\u4f86\u66f4\u5177\u591a\u6a23\u6027\u6216\u5275\u9020\u6027\u7684\u7d50\u679c\u3002\u6eab\u5ea6\u7232`0`\u8868\u793a\u59cb\u7d42\u9078\u64c7\u6982\u7387\u6700\u9ad8\u7684\u8a5e\u5143\u3002\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u7d66\u5b9a\u63d0\u793a\u7684\u56de\u8986\u5927\u591a\u662f\u78ba\u5b9a\u7684\uff0c\u4f46\u53ef\u80fd\u4ecd\u7136\u6709\u5c11\u91cf\u8b8a\u5316\u3002\u5982\u679c\u6a21\u578b\u8fd4\u56de\u7684\u56de\u7b54\u904e\u65bc\u7c60\u7d71\u3001\u904e\u65bc\u7c21\u77ed\uff0c\u6216\u8005\u6a21\u578b\u7d66\u51fa\u5f8c\u5099\u56de\u7b54\uff0c\u8acb\u5617\u8a66\u63d0\u9ad8\u6eab\u5ea6\u3002\n- \uff1a\u97ff\u61c9\u4e2d\u53ef\u751f\u6210\u7684\u8a5e\u5143\u6578\u91cf\u4e0a\u9650\u3002\u8a5e\u5143\u7d04\u7232 4 \u500b\u5b57\u7b26\u3002100 \u500b\u8a5e\u5143\u5c0d\u61c9\u5927\u7d04 60-80 \u500b\u55ae\u8a5e\u3002\u6307\u5b9a\u8f03\u4f4e\u7684\u503c\u53ef\u7372\u5f97\u8f03\u77ed\u7684\u56de\u7b54\uff0c\u6307\u5b9a\u8f03\u9ad8\u7684\u503c\u53ef\u7372\u5f97\u53ef\u80fd\u8f03\u9577\u7684\u56de\u7b54\u3002\n- \uff1aTop-P \u53ef\u66f4\u6539\u6a21\u578b\u9078\u64c7\u8f38\u51fa\u8a5e\u5143\u7684\u65b9\u5f0f\u3002\u7cfb\u7d71\u6703\u6309\u7167\u6982\u7387\u5f9e\u6700\u9ad8\uff08\u898b top-K\uff09\u5230\u6700\u4f4e\u7684\u9806\u5e8f\u9078\u64c7\u8a5e\u5143\uff0c\u76f4\u5230\u6240\u9078\u8a5e\u5143\u7684\u6982\u7387\u7e3d\u548c\u7b49\u65bc top-P \u7684\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8a5e\u5143 A\u3001B \u548c C \u7684\u6982\u7387\u5206\u5225\u7232 0.3\u30010.2 \u548c 0.1\uff0c\u4e26\u4e14 top-P \u503c\u7232`0.5`\uff0c\u5247\u6a21\u578b\u5c07\u9078\u64c7 A \u6216 B \u4f5c\u7232\u4e0b\u4e00\u500b\u8a5e\u5143\uff08\u901a\u904e\u6eab\u5ea6\u78ba\u5b9a\uff09\uff0c\u4e26\u6703\u6392\u9664 C\uff0c\u5c07\u5176\u4f5c\u7232\u5019\u9078\u8a5e\u5143\u3002\u6307\u5b9a\u8f03\u4f4e\u7684\u503c\u53ef\u7372\u5f97\u96a8\u6a5f\u7a0b\u5ea6\u8f03\u4f4e\u7684\u56de\u7b54\uff0c\u6307\u5b9a\u8f03\u9ad8\u7684\u503c\u53ef\u7372\u5f97\u96a8\u6a5f\u7a0b\u5ea6\u8f03\u9ad8\u7684\u56de\u7b54\u3002\n- \uff1aTop-K \u53ef\u66f4\u6539\u6a21\u578b\u9078\u64c7\u8f38\u51fa\u8a5e\u5143\u7684\u65b9\u5f0f\u3002\u5982\u679c top-K \u8a2d\u7232`1`\uff0c\u8868\u793a\u6240\u9078\u8a5e\u5143\u662f\u6a21\u578b\u8a5e\u5f59\u8868\u7684\u6240\u6709\u8a5e\u5143\u4e2d\u6982\u7387\u6700\u9ad8\u7684\u8a5e\u5143\uff08\u4e5f\u7a31\u7232\u8caa\u5fc3\u89e3\u78bc\uff09\u3002\u5982\u679c top-K \u8a2d\u7232`3`\uff0c\u5247\u8868\u793a\u7cfb\u7d71\u5c07\u5f9e 3 \u500b\u6982\u7387\u6700\u9ad8\u7684\u8a5e\u5143\uff08\u901a\u904e\u6eab\u5ea6\u78ba\u5b9a\uff09\u4e2d\u9078\u64c7\u4e0b\u4e00\u500b\u8a5e\u5143\u3002\u5728\u6bcf\u500b\u8a5e\u5143\u9078\u64c7\u6b65\u9a5f\u4e2d\uff0c\u7cfb\u7d71\u90fd\u6703\u5c0d\u6982\u7387\u6700\u9ad8\u7684 top-K \u8a5e\u5143\u9032\u884c\u63a1\u6a23\u3002\u7136\u5f8c\uff0c\u7cfb\u7d71\u6703\u6839\u64da top-P \u9032\u4e00\u6b65\u904e\u6ffe\u8a5e\u5143\uff0c\u4e26\u4f7f\u7528\u6eab\u5ea6\u63a1\u6a23\u9078\u64c7\u6700\u7d42\u7684\u8a5e\u5143\u3002\u6307\u5b9a\u8f03\u4f4e\u7684\u503c\u53ef\u7372\u5f97\u96a8\u6a5f\u7a0b\u5ea6\u8f03\u4f4e\u7684\u56de\u7b54\uff0c\u6307\u5b9a\u8f03\u9ad8\u7684\u503c\u53ef\u7372\u5f97\u96a8\u6a5f\u7a0b\u5ea6\u8f03\u9ad8\u7684\u56de\u7b54\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/text-bison:predict\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"instances\": [ { \"prompt\": \"PROMPT\"}\n ],\n \"parameters\": {\n \"temperature\": TEMPERATURE,\n \"maxOutputTokens\": MAX_OUTPUT_TOKENS,\n \"topP\": TOP_P,\n \"topK\": TOP_K\n }\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/text-bison:predict\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/text-bison:predict\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\u3002```\nMODEL_ID=\"text-bison\"PROJECT_ID=PROJECT_IDcurl \\-X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:predict -d \\$'{\u00a0 \"instances\": [\u00a0 \u00a0 { \"prompt\": \"Give me ten interview questions for the role of program manager.\" }\u00a0 ],\u00a0 \"parameters\": {\u00a0 \u00a0 \"temperature\": 0.2,\u00a0 \u00a0 \"maxOutputTokens\": 256,\u00a0 \u00a0 \"topK\": 40,\u00a0 \u00a0 \"topP\": 0.95\u00a0 }}'\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/generative_ai/ideation.py) \n```\nimport vertexaifrom vertexai.language_models import TextGenerationModeldef interview(\u00a0 \u00a0 temperature: float,\u00a0 \u00a0 project_id: str,\u00a0 \u00a0 location: str,) -> str:\u00a0 \u00a0 \"\"\"Ideation example with a Large Language Model\"\"\"\u00a0 \u00a0 vertexai.init(project=project_id, location=location)\u00a0 \u00a0 # TODO developer - override these parameters as needed:\u00a0 \u00a0 parameters = {\u00a0 \u00a0 \u00a0 \u00a0 \"temperature\": temperature, \u00a0# Temperature controls the degree of randomness in token selection.\u00a0 \u00a0 \u00a0 \u00a0 \"max_output_tokens\": 256, \u00a0# Token limit determines the maximum amount of text output.\u00a0 \u00a0 \u00a0 \u00a0 \"top_p\": 0.8, \u00a0# Tokens are selected from most probable to least until the sum of their probabilities equals the top_p value.\u00a0 \u00a0 \u00a0 \u00a0 \"top_k\": 40, \u00a0# A top_k of 1 means the selected token is the most probable among all tokens.\u00a0 \u00a0 }\u00a0 \u00a0 model = TextGenerationModel.from_pretrained(\"text-bison@002\")\u00a0 \u00a0 response = model.predict(\u00a0 \u00a0 \u00a0 \u00a0 \"Give me ten interview questions for the role of program manager.\",\u00a0 \u00a0 \u00a0 \u00a0 **parameters,\u00a0 \u00a0 )\u00a0 \u00a0 print(f\"Response from Model: {response.text}\")\u00a0 \u00a0 return response.text\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Go \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Go API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/aiplatform/latest/apiv1?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/aiplatform/text-predict/text.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 aiplatform \"cloud.google.com/go/aiplatform/apiv1beta1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/aiplatform/apiv1beta1/aiplatformpb\"\u00a0 \u00a0 \u00a0 \u00a0 \"google.golang.org/api/option\"\u00a0 \u00a0 \u00a0 \u00a0 \"google.golang.org/protobuf/types/known/structpb\")// textPredict generates text from prompt and configurations provided.func textPredict(w io.Writer, prompt, projectID, location, publisher, model string, parameters map[string]interface{}) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 apiEndpoint := fmt.Sprintf(\"%s-aiplatform.googleapis.com:443\", location)\u00a0 \u00a0 \u00a0 \u00a0 client, err := aiplatform.NewPredictionClient(ctx, option.WithEndpoint(apiEndpoint))\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"unable to create prediction client: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 // PredictRequest requires an endpoint, instances, and parameters\u00a0 \u00a0 \u00a0 \u00a0 // Endpoint\u00a0 \u00a0 \u00a0 \u00a0 base := fmt.Sprintf(\"projects/%s/locations/%s/publishers/%s/models\", projectID, location, publisher)\u00a0 \u00a0 \u00a0 \u00a0 url := fmt.Sprintf(\"%s/%s\", base, model)\u00a0 \u00a0 \u00a0 \u00a0 // Instances: the prompt to use with the text model\u00a0 \u00a0 \u00a0 \u00a0 promptValue, err := structpb.NewValue(map[string]interface{}{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"prompt\": prompt,\u00a0 \u00a0 \u00a0 \u00a0 })\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"unable to convert prompt to Value: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Parameters: the model configuration parameters\u00a0 \u00a0 \u00a0 \u00a0 parametersValue, err := structpb.NewValue(parameters)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"unable to convert parameters to Value: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // PredictRequest: create the model prediction request\u00a0 \u00a0 \u00a0 \u00a0 req := &aiplatformpb.PredictRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Endpoint: \u00a0 url,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Instances: \u00a0[]*structpb.Value{promptValue},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Parameters: parametersValue,\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // PredictResponse: receive the response from the model\u00a0 \u00a0 \u00a0 \u00a0 resp, err := client.Predict(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"error in prediction: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"text-prediction response: %v\", resp.Predictions[0])\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/PredictTextPromptSample.java) \n```\nimport com.google.cloud.aiplatform.v1beta1.EndpointName;import com.google.cloud.aiplatform.v1beta1.PredictResponse;import com.google.cloud.aiplatform.v1beta1.PredictionServiceClient;import com.google.cloud.aiplatform.v1beta1.PredictionServiceSettings;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.ArrayList;import java.util.List;public class PredictTextPromptSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // Details of designing text prompts for supported large language models:\u00a0 \u00a0 // https://cloud.google.com/vertex-ai/docs/generative-ai/text/text-overview\u00a0 \u00a0 String instance =\u00a0 \u00a0 \u00a0 \u00a0 \"{ \\\"prompt\\\": \" + \"\\\"Give me ten interview questions for the role of program manager.\\\"}\";\u00a0 \u00a0 String parameters =\u00a0 \u00a0 \u00a0 \u00a0 \"{\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"temperature\\\": 0.2,\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"maxOutputTokens\\\": 256,\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"topP\\\": 0.95,\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"topK\\\": 40\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"}\";\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String publisher = \"google\";\u00a0 \u00a0 String model = \"text-bison@001\";\u00a0 \u00a0 predictTextPrompt(instance, parameters, project, location, publisher, model);\u00a0 }\u00a0 // Get a text prompt from a supported text model\u00a0 public static void predictTextPrompt(\u00a0 \u00a0 \u00a0 String instance,\u00a0 \u00a0 \u00a0 String parameters,\u00a0 \u00a0 \u00a0 String project,\u00a0 \u00a0 \u00a0 String location,\u00a0 \u00a0 \u00a0 String publisher,\u00a0 \u00a0 \u00a0 String model)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 String endpoint = String.format(\"%s-aiplatform.googleapis.com:443\", location);\u00a0 \u00a0 PredictionServiceSettings predictionServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceSettings.newBuilder().setEndpoint(endpoint).build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (PredictionServiceClient predictionServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceClient.create(predictionServiceSettings)) {\u00a0 \u00a0 \u00a0 final EndpointName endpointName =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EndpointName.ofProjectLocationPublisherModelName(project, location, publisher, model);\u00a0 \u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 \u00a0 Value.Builder instanceValue = Value.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(instance, instanceValue);\u00a0 \u00a0 \u00a0 List<Value> instances = new ArrayList<>();\u00a0 \u00a0 \u00a0 instances.add(instanceValue.build());\u00a0 \u00a0 \u00a0 // Use Value.Builder to convert instance to a dynamically typed value that can be\u00a0 \u00a0 \u00a0 // processed by the service.\u00a0 \u00a0 \u00a0 Value.Builder parameterValueBuilder = Value.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(parameters, parameterValueBuilder);\u00a0 \u00a0 \u00a0 Value parameterValue = parameterValueBuilder.build();\u00a0 \u00a0 \u00a0 PredictResponse predictResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predictionServiceClient.predict(endpointName, instances, parameterValue);\u00a0 \u00a0 \u00a0 System.out.println(\"Predict Response\");\u00a0 \u00a0 \u00a0 System.out.println(predictResponse);\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/predict-text-prompt.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const aiplatform = require('@google-cloud/aiplatform');// Imports the Google Cloud Prediction service clientconst {PredictionServiceClient} = aiplatform.v1;// Import the helper module for converting arbitrary protobuf.Value objects.const {helpers} = aiplatform;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};const publisher = 'google';const model = 'text-bison@001';// Instantiates a clientconst predictionServiceClient = new PredictionServiceClient(clientOptions);async function callPredict() {\u00a0 // Configure the parent resource\u00a0 const endpoint = `projects/${project}/locations/${location}/publishers/${publisher}/models/${model}`;\u00a0 const prompt = {\u00a0 \u00a0 prompt:\u00a0 \u00a0 \u00a0 'Give me ten interview questions for the role of program manager.',\u00a0 };\u00a0 const instanceValue = helpers.toValue(prompt);\u00a0 const instances = [instanceValue];\u00a0 const parameter = {\u00a0 \u00a0 temperature: 0.2,\u00a0 \u00a0 maxOutputTokens: 256,\u00a0 \u00a0 topP: 0.95,\u00a0 \u00a0 topK: 40,\u00a0 };\u00a0 const parameters = helpers.toValue(parameter);\u00a0 const request = {\u00a0 \u00a0 endpoint,\u00a0 \u00a0 instances,\u00a0 \u00a0 parameters,\u00a0 };\u00a0 // Predict request\u00a0 const response = await predictionServiceClient.predict(request);\u00a0 console.log('Get text prompt response');\u00a0 console.log(response);}callPredict();\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 C# \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.AIPlatform.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/aiplatform/api/AIPlatform.Samples/PredictTextPrompt.cs) \n```\nusing Google.Cloud.AIPlatform.V1;using System;using System.Collections.Generic;using System.Linq;using Value = Google.Protobuf.WellKnownTypes.Value;public class PredictTextPromptSample{\u00a0 \u00a0 public string PredictTextPrompt(\u00a0 \u00a0 \u00a0 \u00a0 string projectId = \"your-project-id\",\u00a0 \u00a0 \u00a0 \u00a0 string locationId = \"us-central1\",\u00a0 \u00a0 \u00a0 \u00a0 string publisher = \"google\",\u00a0 \u00a0 \u00a0 \u00a0 string model = \"text-bison@001\"\u00a0 \u00a0 )\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Initialize client that will be used to send requests.\u00a0 \u00a0 \u00a0 \u00a0 // This client only needs to be created\u00a0 \u00a0 \u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 \u00a0 \u00a0 var client = new PredictionServiceClientBuilder\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Endpoint = $\"{locationId}-aiplatform.googleapis.com\"\u00a0 \u00a0 \u00a0 \u00a0 }.Build();\u00a0 \u00a0 \u00a0 \u00a0 // Configure the parent resource\u00a0 \u00a0 \u00a0 \u00a0 var endpoint = EndpointName.FromProjectLocationPublisherModel(projectId, locationId, publisher, model);\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s)\u00a0 \u00a0 \u00a0 \u00a0 var prompt = \"Give me ten interview questions for the role of program manager.\";\u00a0 \u00a0 \u00a0 \u00a0 var instanceValue = Value.ForStruct(new()\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Fields =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\"prompt\"] = Value.ForString(prompt)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 var instances = new List<Value>\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 instanceValue\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 var parameters = Value.ForStruct(new()\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Fields =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 { \"temperature\", new Value { NumberValue = 0.2 } },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 { \"maxOutputTokens\", new Value { NumberValue = 256 } },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 { \"topP\", new Value { NumberValue = 0.95 } },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 { \"topK\", new Value { NumberValue = 40 } }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 // Make the request\u00a0 \u00a0 \u00a0 \u00a0 var response = client.Predict(endpoint, instances, parameters);\u00a0 \u00a0 \u00a0 \u00a0 // Parse and return the content.\u00a0 \u00a0 \u00a0 \u00a0 var content = response.Predictions.First().StructValue.Fields[\"content\"].StringValue;\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine($\"Content: {content}\");\u00a0 \u00a0 \u00a0 \u00a0 return content;\u00a0 \u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Ruby \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Ruby API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/ruby/docs/reference/google-cloud-ai_platform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-ai_platform/samples/predict_text_prompt.rb) \n```\nrequire \"google/cloud/ai_platform/v1\"\n### Vertex AI Predict Text Prompt\n## @param project_id [String] Your Google Cloud project (e.g. \"my-project\")# @param location_id [String] Your Processor Location (e.g. \"us-central1\")# @param publisher [String] The Model Publisher (e.g. \"google\")# @param model [String] The Model Identifier (e.g. \"text-bison@001\")#def predict_text_prompt project_id:, location_id:, publisher:, model:\u00a0 # Create the Vertex AI client.\u00a0 client = ::Google::Cloud::AIPlatform::V1::PredictionService::Client.new do |config|\u00a0 \u00a0 config.endpoint = \"#{location_id}-aiplatform.googleapis.com\"\u00a0 end\u00a0 # Build the resource name from the project.\u00a0 endpoint = client.endpoint_path(\u00a0 \u00a0 project: project_id,\u00a0 \u00a0 location: location_id,\u00a0 \u00a0 publisher: publisher,\u00a0 \u00a0 model: model\u00a0 )\u00a0 prompt = \"Give me ten interview questions for the role of program manager.\"\u00a0 # Initialize the request arguments\u00a0 instance = Google::Protobuf::Value.new(\u00a0 \u00a0 struct_value: Google::Protobuf::Struct.new(\u00a0 \u00a0 \u00a0 fields: {\u00a0 \u00a0 \u00a0 \u00a0 \"prompt\" => Google::Protobuf::Value.new(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 string_value: prompt\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 )\u00a0 )\u00a0 instances = [instance]\u00a0 parameters = Google::Protobuf::Value.new(\u00a0 \u00a0 struct_value: Google::Protobuf::Struct.new(\u00a0 \u00a0 \u00a0 fields: {\u00a0 \u00a0 \u00a0 \u00a0 \"temperature\" => Google::Protobuf::Value.new(number_value: 0.2),\u00a0 \u00a0 \u00a0 \u00a0 \"maxOutputTokens\" => Google::Protobuf::Value.new(number_value: 256),\u00a0 \u00a0 \u00a0 \u00a0 \"topP\" => Google::Protobuf::Value.new(number_value: 0.95),\u00a0 \u00a0 \u00a0 \u00a0 \"topK\" => Google::Protobuf::Value.new(number_value: 40)\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 )\u00a0 )\u00a0 # Make the prediction request\u00a0 response = client.predict endpoint: endpoint, instances: instances, parameters: parameters\u00a0 # Handle the prediction response\u00a0 puts \"Predict Response\"\u00a0 puts responseend\n```\u5982\u9700\u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\u4f7f\u7528 Vertex AI Studio \u6e2c\u8a66\u6587\u672c\u63d0\u793a\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u6b65\u9a5f\uff1a- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684\u201c\u751f\u6210\u5f0f AI\u201d\u90e8\u5206\uff0c\u9032\u5165 **Vertex AI Studio** \u9801\u9762\u3002 [\u9032\u5165 Vertex AI Studio](https://console.cloud.google.com/vertex-ai/generative/language?hl=zh-cn) \n- \u9ede\u64ca **\u958b\u59cb\u4f7f\u7528** \u6a19\u7c64\u9801\u3002\n- \u9ede\u64caadd **\u6587\u672c\u63d0\u793a** \u3002\n- \u9078\u64c7\u8f38\u5165\u63d0\u793a\u7684\u65b9\u6cd5\uff1a- \u5c0d\u65bc\u96f6\u6a23\u672c\u63d0\u793a\u6216\u8907\u88fd\u7c98\u8cbc\u5f0f\u7684\u5c11\u6a23\u672c\u63d0\u793a\uff0c\u5efa\u8b70\u4f7f\u7528 **\u81ea\u7531\u683c\u5f0f** \u3002\n- \u5982\u679c\u8981\u5728 Vertex AI Studio \u4e2d\u8a2d\u8a08\u5c11\u6a23\u672c\u63d0\u793a\uff0c\u5efa\u8b70\u4f7f\u7528 **\u7d50\u69cb\u5316** \u3002\n\u5728 **\u63d0\u793a** \u6587\u672c\u5b57\u6bb5\u4e2d\u8f38\u5165\u63d0\u793a\u3002\u7528\u65bc\u8f38\u5165\u63d0\u793a\u7684\u7d50\u69cb\u5316\u65b9\u6cd5\u5c07\u63d0\u793a\u7684\u7d44\u6210\u90e8\u5206\u5206\u7232\u4e0d\u540c\u7684\u5b57\u6bb5\uff1a- **\u8a9e\u5883** \uff1a\u8f38\u5165\u60a8\u5e0c\u671b\u6a21\u578b\u57f7\u884c\u7684\u4efb\u52d9\u7684\u8aaa\u660e\uff0c\u4e26\u6dfb\u52a0\u4f9b\u6a21\u578b\u53c3\u8003\u7684\u8a9e\u5883\u4fe1\u606f\u3002\n- **\u793a\u4f8b** \uff1a\u5c0d\u65bc\u5c11\u6a23\u672c\u63d0\u793a\uff0c\u8acb\u6dfb\u52a0\u8f38\u5165-\u8f38\u51fa\u6a23\u672c\uff0c\u7528\u65bc\u5c55\u793a\u6a21\u578b\u8981\u6a21\u64ec\u7684\u884c\u7232\u6a21\u5f0f\u3002\u60a8\u53ef\u4ee5\u9078\u64c7\u6027\u5730\u7232\u8f38\u5165\u548c\u8f38\u51fa\u6dfb\u52a0\u524d\u7db4\u3002\u5982\u679c\u60a8\u9078\u64c7\u6dfb\u52a0\u524d\u7db4\uff0c\u5b83\u5011\u61c9\u5728\u6240\u6709\u6a23\u672c\u4e2d\u4fdd\u6301\u4e00\u81f4\u3002\n- **\u6e2c\u8a66** \uff1a\u5728 **\u8f38\u5165** \u5b57\u6bb5\u4e2d\uff0c\u8f38\u5165\u8981\u7528\u65bc\u7372\u53d6\u56de\u8986\u7684\u63d0\u793a\u7684\u8f38\u5165\u3002\u53ef\u4ee5\u9078\u64c7\u6027\u5730\u7232\u6e2c\u8a66\u8f38\u5165\u548c\u8f38\u51fa\u6dfb\u52a0\u524d\u7db4\u3002\u5982\u679c\u60a8\u7684\u6a23\u672c\u6709\u524d\u7db4\uff0c\u5247\u6e2c\u8a66\u61c9\u5177\u6709\u76f8\u540c\u7684\u524d\u7db4\u3002\n- \u914d\u7f6e\u6a21\u578b\u548c\u53c3\u6578\uff1a- **\u6a21\u578b** \uff1a\u9078\u64c7`text-bison`\u6216`gemini-1.0-pro`\u6a21\u578b\u3002\n- **\u6eab\u5ea6** \uff1a\u4f7f\u7528\u6ed1\u584a\u6216\u6587\u672c\u6846\u8f38\u5165\u6eab\u5ea6\u503c\u3002\u6eab\u5ea6 (temperature) \u5728\u751f\u6210\u56de\u8986\u671f\u9593\u7528\u65bc\u63a1\u6a23\uff0c\u5728\u61c9\u7528`topP`\u548c`topK`\u6642\u6703\u751f\u6210\u56de\u8986\u3002\u6eab\u5ea6\u53ef\u4ee5\u63a7\u5236\u8a5e\u5143\u9078\u64c7\u7684\u96a8\u6a5f\u6027\u3002 \u8f03\u4f4e\u7684\u6eab\u5ea6\u6709\u5229\u65bc\u9700\u8981\u66f4\u5c11\u958b\u653e\u6027\u6216\u5275\u9020\u6027\u56de\u8986\u7684\u63d0\u793a\uff0c\u800c\u8f03\u9ad8\u7684\u6eab\u5ea6\u53ef\u4ee5\u5e36\u4f86\u66f4\u5177\u591a\u6a23\u6027\u6216\u5275\u9020\u6027\u7684\u7d50\u679c\u3002\u6eab\u5ea6\u7232`0`\u8868\u793a\u59cb\u7d42\u9078\u64c7\u6982\u7387\u6700\u9ad8\u7684\u8a5e\u5143\u3002\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u7d66\u5b9a\u63d0\u793a\u7684\u56de\u8986\u5927\u591a\u662f\u78ba\u5b9a\u7684\uff0c\u4f46\u53ef\u80fd\u4ecd\u7136\u6709\u5c11\u91cf\u8b8a\u5316\u3002\u5982\u679c\u6a21\u578b\u8fd4\u56de\u7684\u56de\u7b54\u904e\u65bc\u7c60\u7d71\u3001\u904e\u65bc\u7c21\u77ed\uff0c\u6216\u8005\u6a21\u578b\u7d66\u51fa\u5f8c\u5099\u56de\u7b54\uff0c\u8acb\u5617\u8a66\u63d0\u9ad8\u6eab\u5ea6\u3002\n- **\u8a5e\u5143\u4e0a\u9650** \uff1a\u4f7f\u7528\u6ed1\u584a\u6216\u6587\u672c\u6846\u8f38\u5165\u8f38\u51fa\u4e0a\u9650\u503c\u3002\u56de\u7b54\u4e2d\u53ef\u751f\u6210\u7684\u8a5e\u5143\u6578\u91cf\u4e0a\u9650\u3002\u8a5e\u5143\u7d04\u7232 4 \u500b\u5b57\u7b26\u3002100 \u500b\u8a5e\u5143\u5c0d\u61c9\u5927\u7d04 60-80 \u500b\u55ae\u8a5e\u3002\u6307\u5b9a\u8f03\u4f4e\u7684\u503c\u53ef\u7372\u5f97\u8f03\u77ed\u7684\u56de\u7b54\uff0c\u6307\u5b9a\u8f03\u9ad8\u7684\u503c\u53ef\u7372\u5f97\u53ef\u80fd\u8f03\u9577\u7684\u56de\u7b54\u3002\n- **Top-K** \uff1a\u4f7f\u7528\u6ed1\u584a\u6216\u6587\u672c\u6846\u8f38\u5165 top-K \u503c\u3002top-K \u53ef\u66f4\u6539\u6a21\u578b\u9078\u64c7\u8f38\u51fa\u8a5e\u5143\u7684\u65b9\u5f0f\u3002\u5982\u679c top-K \u8a2d\u7232`1`\uff0c\u8868\u793a\u6240\u9078\u8a5e\u5143\u662f\u6a21\u578b\u8a5e\u5f59\u8868\u7684\u6240\u6709\u8a5e\u5143\u4e2d\u6982\u7387\u6700\u9ad8\u7684\u8a5e\u5143\uff08\u4e5f\u7a31\u7232\u8caa\u5fc3\u89e3\u78bc\uff09\u3002\u5982\u679c top-K \u8a2d\u7232`3`\uff0c\u5247\u8868\u793a\u7cfb\u7d71\u5c07\u5f9e 3 \u500b\u6982\u7387\u6700\u9ad8\u7684\u8a5e\u5143\uff08\u901a\u904e\u6eab\u5ea6\u78ba\u5b9a\uff09\u4e2d\u9078\u64c7\u4e0b\u4e00\u500b\u8a5e\u5143\u3002\u5728\u6bcf\u500b\u8a5e\u5143\u9078\u64c7\u6b65\u9a5f\u4e2d\uff0c\u7cfb\u7d71\u90fd\u6703\u5c0d\u6982\u7387\u6700\u9ad8\u7684 top-K \u8a5e\u5143\u9032\u884c\u63a1\u6a23\u3002\u7136\u5f8c\uff0c\u7cfb\u7d71\u6703\u6839\u64da top-P \u9032\u4e00\u6b65\u904e\u6ffe\u8a5e\u5143\uff0c\u4e26\u4f7f\u7528\u6eab\u5ea6\u63a1\u6a23\u9078\u64c7\u6700\u7d42\u7684\u8a5e\u5143\u3002\u6307\u5b9a\u8f03\u4f4e\u7684\u503c\u53ef\u7372\u5f97\u96a8\u6a5f\u7a0b\u5ea6\u8f03\u4f4e\u7684\u56de\u7b54\uff0c\u6307\u5b9a\u8f03\u9ad8\u7684\u503c\u53ef\u7372\u5f97\u96a8\u6a5f\u7a0b\u5ea6\u8f03\u9ad8\u7684\u56de\u7b54\u3002\n- **Top-P** \uff1a\u4f7f\u7528\u6ed1\u584a\u6216\u6587\u672c\u6846\u8f38\u5165 top-P \u503c\u3002  \u7cfb\u7d71\u6703\u6309\u7167\u6982\u7387\u5f9e\u6700\u9ad8\u5230\u6700\u4f4e\u7684\u9806\u5e8f\u9078\u64c7\u8a5e\u5143\uff0c\u76f4\u5230\u6240\u9078\u8a5e\u5143\u7684\u6982\u7387\u7e3d\u548c\u7b49\u65bc top-P \u7684\u503c\u3002\u5982\u9700\u7372\u5f97\u6578\u91cf\u6700\u5c0f\u7684\u8b8a\u91cf\u7d50\u679c\uff0c\u8acb\u5c07 top-P \u8a2d\u7f6e\u7232`0`\u3002\n- \u9ede\u64ca **\u63d0\u4ea4** \u3002\n- \u53ef\u9078\uff1a\u5982\u9700\u5c07\u63d0\u793a\u4fdd\u5b58\u5230 **\u6211\u7684\u63d0\u793a** \uff0c\u8acb\u9ede\u64casave_alt **\u4fdd\u5b58** \u3002\n- \u53ef\u9078\uff1a\u5982\u9700\u7372\u53d6\u63d0\u793a\u7684 Python \u4ee3\u78bc\u6216 curl \u547d\u4ee4\uff0c\u8acb\u9ede\u64cacode **\u67e5\u770b\u4ee3\u78bc** \u3002\n## \u6d41\u5f0f\u50b3\u8f38\u6587\u672c\u6a21\u578b\u7684\u56de\u8986\n\u5982\u9700\u4f7f\u7528 REST API \u67e5\u770b\u793a\u4f8b\u4ee3\u78bc\u8acb\u6c42\u548c\u97ff\u61c9\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528 REST API \u7684\u793a\u4f8b](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/streaming?hl=zh-cn#rest) \u3002\n\u5982\u9700\u4f7f\u7528 Python \u7248 Vertex AI SDK \u67e5\u770b\u793a\u4f8b\u4ee3\u78bc\u8acb\u6c42\u548c\u97ff\u61c9\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528 Python \u7248 Vertex AI SDK \u7684\u793a\u4f8b](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/streaming?hl=zh-cn#sdk) \u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u77ad\u89e3\u5982\u4f55 [\u767c\u9001 Gemini \u804a\u5929\u63d0\u793a\u8acb\u6c42](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/send-chat-prompts-gemini?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u6e2c\u8a66\u804a\u5929\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/chat/test-chat-prompts?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u8abf\u6574\u57fa\u790e\u6a21\u578b](https://cloud.google.com/vertex-ai/generative-ai/docs/models/tune-models?hl=zh-cn) \u3002\n- \u77ad\u89e3 [Responsible AI \u6700\u4f73\u5be6\u8e10\u548c Vertex AI \u7684\u5b89\u5168\u904e\u6ffe\u689d\u4ef6](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/responsible-ai?hl=zh-cn) \u3002", "guide": "Generative AI on Vertex AI"}