{"title": "Generative AI on Vertex AI - \u6d41\u5f0f\u50b3\u8f38\u4f86\u81ea\u751f\u6210\u5f0f AI \u6a21\u578b\u7684\u56de\u8986", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/learn/streaming?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u6d41\u5f0f\u50b3\u8f38\u4f86\u81ea\u751f\u6210\u5f0f AI \u6a21\u578b\u7684\u56de\u8986\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u5411 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI \u5927\u8a9e\u8a00\u6a21\u578b (LLM) \u767c\u9001\u6d41\u5f0f\u50b3\u8f38\u8acb\u6c42\uff1a\n- Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI [\u5177\u6709\u670d\u52d9\u5668\u767c\u9001\u7684\u4e8b\u4ef6 (SSE) \u7684 REST API](#rest-sse) \n- Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI [REST API](#rest) \n- [Python \u7248 Vertex AI SDK](#sdk) \n- [\u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \n\u6d41\u5f0f\u50b3\u8f38 API \u548c\u975e\u6d41\u5f0f\u50b3\u8f38 API \u4f7f\u7528\u76f8\u540c\u7684\u53c3\u6578\uff0c\u4e26\u4e14\u5728\u50f9\u683c\u548c\u914d\u984d\u4e0a\u6c92\u6709\u5340\u5225\u3002\n", "content": "## Vertex AI Studio\n\u60a8\u53ef\u4ee5\u4f7f\u7528 [Vertex AI Studio](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/overview?hl=zh-cn) \u4f86\u8a2d\u8a08\u548c\u904b\u884c\u63d0\u793a\u4e26\u63a5\u6536\u6d41\u5f0f\u50b3\u8f38\u7684\u97ff\u61c9\u3002\u5f9e\u63d0\u793a\u8a2d\u8a08\u9801\u9762\u4e2d\uff0c\u9ede\u64ca **\u6d41\u5f0f\u50b3\u8f38\u97ff\u61c9** \u6309\u9215\u4ee5\u5553\u7528\u6d41\u5f0f\u50b3\u8f38\u3002\n## \u793a\u4f8b\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\u8abf\u7528\u6d41\u5f0f\u50b3\u8f38 API\uff1a\n- [\u5177\u6709\u670d\u52d9\u5668\u767c\u9001\u7684\u4e8b\u4ef6 (SSE) \u7684 REST API](#rest-sse) \n- [REST API](#rest) \n- [Python \u7248 Vertex AI SDK](#sdk) \n### \u5177\u6709\u670d\u52d9\u5668\u767c\u9001\u7684\u4e8b\u4ef6 (SSE) \u7684 REST API\n\u4ee5\u4e0b\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u6a21\u578b\u985e\u578b\u4e2d\u7684\u53c3\u6578\u6709\u6240\u4e0d\u540c\uff1a\n\u7576\u524d\u652f\u6301\u7684\u6a21\u578b\u662f `text-bison` \u548c `text-unicorn` \u3002\u8acb\u53c3\u95b1 [\u53ef\u7528\u7684\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n **\u8acb\u6c42** \n```\n\u00a0 PROJECT_ID=YOUR_PROJECT_ID\u00a0 PROMPT=\"PROMPT\"\u00a0 MODEL_ID=text-bison\u00a0 curl \\\u00a0 -X POST \\\u00a0 -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 -H \"Content-Type: application/json\" \\\u00a0 https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:serverStreamingPredict?alt=sse -d \\\u00a0 '{\u00a0 \u00a0 \"inputs\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"prompt\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${PROMPT}\"'\" ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ],\u00a0 \u00a0 \"parameters\": {\u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \"temperature\": { \"float_val\": 0.8 },\u00a0 \u00a0 \u00a0 \u00a0 \"maxOutputTokens\": { \"int_val\": 1024 },\u00a0 \u00a0 \u00a0 \u00a0 \"topK\": { \"int_val\": 40 },\u00a0 \u00a0 \u00a0 \u00a0 \"topP\": { \"float_val\": 0.95 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }'\n```\n **\u7b54\u6848** \n\u97ff\u61c9\u662f\u670d\u52d9\u5668\u767c\u9001\u7684\u4e8b\u4ef6\u6d88\u606f\u3002\n```\n\u00a0 data: {\"outputs\": [{\"structVal\": {\"content\": {\"stringVal\": [RESPONSE]},\"safetyAttributes\": {\"structVal\": {\"blocked\": {\"boolVal\": [BOOLEAN]},\"categories\": {\"listVal\": [{\"stringVal\": [Safety category name]}]},\"scores\": {\"listVal\": [{\"doubleVal\": [Safety category score]}]}}},\"citationMetadata\": {\"structVal\": {\"citations\": {}}}}}]}\n```\n\u7576\u524d\u652f\u6301\u7684\u6a21\u578b\u662f `chat-bison` \u3002\u8acb\u53c3\u95b1 [\u53ef\u7528\u7684\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n **\u8acb\u6c42** \n```\nPROJECT_ID=YOUR_PROJECT_IDPROMPT=\"PROMPT\"AUTHOR=\"USER\"MODEL_ID=chat-bisoncurl \\-X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:serverStreamingPredict?alt=sse -d \\$'{\u00a0 \"inputs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \"messages\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"list_val\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"content\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${PROMPT}\"'\" ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"author\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${AUTHOR}\"'\"]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ],\u00a0 \"parameters\": {\u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \"temperature\": { \"float_val\": 0.5 },\u00a0 \u00a0 \u00a0 \"maxOutputTokens\": { \"int_val\": 1024 },\u00a0 \u00a0 \u00a0 \"topK\": { \"int_val\": 40 },\u00a0 \u00a0 \u00a0 \"topP\": { \"float_val\": 0.95 }\u00a0 \u00a0 }\u00a0 }}'\n```\n **\u7b54\u6848** \n\u97ff\u61c9\u662f\u670d\u52d9\u5668\u767c\u9001\u7684\u4e8b\u4ef6\u6d88\u606f\u3002\n```\ndata: {\"outputs\": [{\"structVal\": {\"candidates\": {\"listVal\": [{\"structVal\": {\"author\": {\"stringVal\": [AUTHOR]},\"content\": {\"stringVal\": [RESPONSE]}}}]},\"citationMetadata\": {\"listVal\": [{\"structVal\": {\"citations\": {}}}]},\"safetyAttributes\": {\"structVal\": {\"blocked\": {\"boolVal\": [BOOLEAN]},\"categories\": {\"listVal\": [{\"stringVal\": [Safety category name]}]},\"scores\": {\"listVal\": [{\"doubleVal\": [Safety category score]}]}}}}}]}\n```\n\u7576\u524d\u652f\u6301\u7684\u6a21\u578b\u662f `code-bison` \u3002\u8acb\u53c3\u95b1 [\u53ef\u7528\u7684\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n **\u8acb\u6c42** \n```\nPROJECT_ID=YOUR_PROJECT_IDPROMPT=\"PROMPT\"MODEL_ID=code-bisoncurl \\-X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:serverStreamingPredict?alt=sse -d \\$'{\u00a0 \"inputs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \"prefix\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${PROMPT}\"'\" ]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ],\u00a0 \"parameters\": {\u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \"temperature\": { \"float_val\": 0.8 },\u00a0 \u00a0 \u00a0 \"maxOutputTokens\": { \"int_val\": 1024 },\u00a0 \u00a0 \u00a0 \"topK\": { \"int_val\": 40 },\u00a0 \u00a0 \u00a0 \"topP\": { \"float_val\": 0.95 }\u00a0 \u00a0 }\u00a0 }}'\n```\n **\u7b54\u6848** \n\u97ff\u61c9\u662f\u670d\u52d9\u5668\u767c\u9001\u7684\u4e8b\u4ef6\u6d88\u606f\u3002\n```\ndata: {\"outputs\": [{\"structVal\": {\"citationMetadata\": {\"structVal\": {\"citations\": {}}},\"safetyAttributes\": {\"structVal\": {\"blocked\": {\"boolVal\": [BOOLEAN]},\"categories\": {\"listVal\": [{\"stringVal\": [Safety category name]}]},\"scores\": {\"listVal\": [{\"doubleVal\": [Safety category score]}]}}},\"content\": {\"stringVal\": [RESPONSE]}}}]}\n```\n\u7576\u524d\u652f\u6301\u7684\u6a21\u578b\u662f `codechat-bison` \u3002\u8acb\u53c3\u95b1 [\u53ef\u7528\u7684\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n **\u8acb\u6c42** \n```\nPROJECT_ID=YOUR_PROJECT_IDPROMPT=\"PROMPT\"AUTHOR=\"USER\"MODEL_ID=codechat-bisoncurl \\-X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:serverStreamingPredict?alt=sse -d \\$'{\u00a0 \"inputs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \"messages\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"list_val\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"content\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${PROMPT}\"'\" ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"author\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${AUTHOR}\"'\"]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ],\u00a0 \"parameters\": {\u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \"temperature\": { \"float_val\": 0.5 },\u00a0 \u00a0 \u00a0 \"maxOutputTokens\": { \"int_val\": 1024 },\u00a0 \u00a0 \u00a0 \"topK\": { \"int_val\": 40 },\u00a0 \u00a0 \u00a0 \"topP\": { \"float_val\": 0.95 }\u00a0 \u00a0 }\u00a0 }}'\n```\n **\u7b54\u6848** \n\u97ff\u61c9\u662f\u670d\u52d9\u5668\u767c\u9001\u7684\u4e8b\u4ef6\u6d88\u606f\u3002\n```\ndata: {\"outputs\": [{\"structVal\": {\"safetyAttributes\": {\"structVal\": {\"blocked\": {\"boolVal\": [BOOLEAN]},\"categories\": {\"listVal\": [{\"stringVal\": [Safety category name]}]},\"scores\": {\"listVal\": [{\"doubleVal\": [Safety category score]}]}}},\"citationMetadata\": {\"listVal\": [{\"structVal\": {\"citations\": {}}}]},\"candidates\": {\"listVal\": [{\"structVal\": {\"content\": {\"stringVal\": [RESPONSE]},\"author\": {\"stringVal\": [AUTHOR]}}}]}}}]}\n```\n### REST API\n\u4ee5\u4e0b\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u6a21\u578b\u985e\u578b\u4e2d\u7684\u53c3\u6578\u6709\u6240\u4e0d\u540c\uff1a\n\u7576\u524d\u652f\u6301\u7684\u6a21\u578b\u662f `text-bison` \u548c `text-unicorn` \u3002\u8acb\u53c3\u95b1 [\u53ef\u7528\u7684\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n **\u8acb\u6c42** \n```\n\u00a0 PROJECT_ID=YOUR_PROJECT_ID\u00a0 PROMPT=\"PROMPT\"\u00a0 MODEL_ID=text-bison\u00a0 curl \\\u00a0 -X POST \\\u00a0 -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 -H \"Content-Type: application/json\" \\\u00a0 https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:serverStreamingPredict -d \\\u00a0 '{\u00a0 \u00a0 \"inputs\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"prompt\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${PROMPT}\"'\" ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ],\u00a0 \u00a0 \"parameters\": {\u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \"temperature\": { \"float_val\": 0.8 },\u00a0 \u00a0 \u00a0 \u00a0 \"maxOutputTokens\": { \"int_val\": 1024 },\u00a0 \u00a0 \u00a0 \u00a0 \"topK\": { \"int_val\": 40 },\u00a0 \u00a0 \u00a0 \u00a0 \"topP\": { \"float_val\": 0.95 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }'\n```\n **\u97ff\u61c9** \n```\n{\u00a0 \"outputs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \"citationMetadata\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"citations\": {}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"safetyAttributes\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"categories\": {},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"scores\": {},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"blocked\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"boolVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 false\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"content\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"stringVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 RESPONSE\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\n\u7576\u524d\u652f\u6301\u7684\u6a21\u578b\u662f `chat-bison` \u3002\u8acb\u53c3\u95b1 [\u53ef\u7528\u7684\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n **\u8acb\u6c42** \n```\nPROJECT_ID=YOUR_PROJECT_IDPROMPT=\"PROMPT\"AUTHOR=\"USER\"MODEL_ID=chat-bisoncurl \\-X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:serverStreamingPredict -d \\$'{\u00a0 \"inputs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \"messages\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"list_val\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"content\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${PROMPT}\"'\" ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"author\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${AUTHOR}\"'\"]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ],\u00a0 \"parameters\": {\u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \"temperature\": { \"float_val\": 0.5 },\u00a0 \u00a0 \u00a0 \"maxOutputTokens\": { \"int_val\": 1024 },\u00a0 \u00a0 \u00a0 \"topK\": { \"int_val\": 40 },\u00a0 \u00a0 \u00a0 \"topP\": { \"float_val\": 0.95 }\u00a0 \u00a0 }\u00a0 }}'\n```\n **\u97ff\u61c9** \n```\n{\u00a0 \"outputs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \"candidates\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"listVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"content\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"stringVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 RESPONSE\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"author\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"stringVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AUTHOR\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"citationMetadata\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"listVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"citations\": {}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"safetyAttributes\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"listVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"categories\": {},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"blocked\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"boolVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 false\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"scores\": {}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\n\u7576\u524d\u652f\u6301\u7684\u6a21\u578b\u662f `code-bison` \u3002\u8acb\u53c3\u95b1 [\u53ef\u7528\u7684\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n **\u8acb\u6c42** \n```\nPROJECT_ID=YOUR_PROJECT_IDPROMPT=\"PROMPT\"MODEL_ID=code-bisoncurl \\-X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:serverStreamingPredict -d \\$'{\u00a0 \"inputs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \"prefix\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${PROMPT}\"'\" ]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ],\u00a0 \"parameters\": {\u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \"temperature\": { \"float_val\": 0.8 },\u00a0 \u00a0 \u00a0 \"maxOutputTokens\": { \"int_val\": 1024 },\u00a0 \u00a0 \u00a0 \"topK\": { \"int_val\": 40 },\u00a0 \u00a0 \u00a0 \"topP\": { \"float_val\": 0.95 }\u00a0 \u00a0 }\u00a0 }}'\n```\n **\u97ff\u61c9** \n```\n{\u00a0 \"outputs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \"safetyAttributes\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"categories\": {},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"scores\": {},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"blocked\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"boolVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 false\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"citationMetadata\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"citations\": {}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"content\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"stringVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 RESPONSE\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\n\u7576\u524d\u652f\u6301\u7684\u6a21\u578b\u662f `codechat-bison` \u3002\u8acb\u53c3\u95b1 [\u53ef\u7528\u7684\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n **\u8acb\u6c42** \n```\nPROJECT_ID=YOUR_PROJECT_IDPROMPT=\"PROMPT\"AUTHOR=\"USER\"MODEL_ID=codechat-bisoncurl \\-X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:serverStreamingPredict -d \\$'{\u00a0 \"inputs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \"messages\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"list_val\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"content\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${PROMPT}\"'\" ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"author\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"string_val\": [ \"'\"${AUTHOR}\"'\"]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ],\u00a0 \"parameters\": {\u00a0 \u00a0 \"struct_val\": {\u00a0 \u00a0 \u00a0 \"temperature\": { \"float_val\": 0.5 },\u00a0 \u00a0 \u00a0 \"maxOutputTokens\": { \"int_val\": 1024 },\u00a0 \u00a0 \u00a0 \"topK\": { \"int_val\": 40 },\u00a0 \u00a0 \u00a0 \"topP\": { \"float_val\": 0.95 }\u00a0 \u00a0 }\u00a0 }}'\n```\n **\u7b54\u6848** \n```\n{\u00a0 \"outputs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \"candidates\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"listVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"content\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"stringVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 RESPONSE\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"author\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"stringVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AUTHOR\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"citationMetadata\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"listVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"citations\": {}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"safetyAttributes\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"listVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"structVal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"categories\": {},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"blocked\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"boolVal\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 false\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"scores\": {}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\n### Python \u7248 Vertex AI SDK\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd Python \u7248 Vertex AI SDK\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/install-sdk?hl=zh-cn) \u3002\n```\n\u00a0 import vertexai\u00a0 from vertexai.language_models import TextGenerationModel\u00a0 def streaming_prediction(\u00a0 \u00a0 \u00a0 project_id: str,\u00a0 \u00a0 \u00a0 location: str,\u00a0 ) -> str:\u00a0 \u00a0 \u00a0 \"\"\"Streaming Text Example with a Large Language Model\"\"\"\u00a0 vertexai.init(project=project_id, location=location)\u00a0 text_generation_model = TextGenerationModel.from_pretrained(\"text-bison\")\u00a0 parameters = {\u00a0 \u00a0 \u00a0 \"temperature\": temperature, \u00a0# Temperature controls the degree of randomness in token selection.\u00a0 \u00a0 \u00a0 \"max_output_tokens\": 256, \u00a0# Token limit determines the maximum amount of text output.\u00a0 \u00a0 \u00a0 \"top_p\": 0.8, \u00a0# Tokens are selected from most probable to least until the sum of their probabilities equals the top_p value.\u00a0 \u00a0 \u00a0 \"top_k\": 40, \u00a0# A top_k of 1 means the selected token is the most probable among all tokens.\u00a0 }\u00a0 responses = text_generation_model.predict_streaming(prompt=\"Give me ten interview questions for the role of program manager.\", **parameters)\u00a0 for response in responses:\u00a0 \u00a0 \u00a0 `print(response)`\n```\n```\nimport vertexaifrom vertexai.language_models import ChatModel, InputOutputTextPairdef streaming_prediction(\u00a0 \u00a0 project_id: str,\u00a0 \u00a0 location: str,) -> str:\u00a0 \u00a0 \"\"\"Streaming Chat Example with a Large Language Model\"\"\"\u00a0 \u00a0 vertexai.init(project=project_id, location=location)\u00a0 \u00a0 chat_model = ChatModel.from_pretrained(\"chat-bison\")\u00a0 \u00a0 parameters = {\u00a0 \u00a0 \u00a0 \u00a0 \"temperature\": 0.8, \u00a0# Temperature controls the degree of randomness in token selection.\u00a0 \u00a0 \u00a0 \u00a0 \"max_output_tokens\": 256, \u00a0# Token limit determines the maximum amount of text output.\u00a0 \u00a0 \u00a0 \u00a0 \"top_p\": 0.95, \u00a0# Tokens are selected from most probable to least until the sum of their probabilities equals the top_p value.\u00a0 \u00a0 \u00a0 \u00a0 \"top_k\": 40, \u00a0# A top_k of 1 means the selected token is the most probable among all tokens.\u00a0 \u00a0 }\u00a0 \u00a0 chat = chat_model.start_chat(\u00a0 \u00a0 \u00a0 \u00a0 context=\"My name is Miles. You are an astronomer, knowledgeable about the solar system.\",\u00a0 \u00a0 \u00a0 \u00a0 examples=[\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputOutputTextPair(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 input_text=\"How many moons does Mars have?\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 output_text=\"The planet Mars has two moons, Phobos and Deimos.\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 )\u00a0 \u00a0 responses = chat.send_message_streaming(\u00a0 \u00a0 \u00a0 \u00a0 message=\"How many planets are there in the solar system?\", **parameters)\u00a0 \u00a0 for response in responses:\u00a0 \u00a0 \u00a0 \u00a0 `print(response)`\n```\n```\nimport vertexaifrom vertexai.language_models import CodeGenerationModeldef streaming_prediction(\u00a0 \u00a0 project_id: str,\u00a0 \u00a0 location: str,) -> str:\u00a0 \u00a0 \"\"\"Streaming Chat Example with a Large Language Model\"\"\"\u00a0 \u00a0 vertexai.init(project=project_id, location=location)\u00a0 \u00a0 code_model = CodeGenerationModel.from_pretrained(\"code-bison\")\u00a0 \u00a0 parameters = {\u00a0 \u00a0 \u00a0 \u00a0 \"temperature\": 0.8, \u00a0# Temperature controls the degree of randomness in token selection.\u00a0 \u00a0 \u00a0 \u00a0 \"max_output_tokens\": 256, \u00a0# Token limit determines the maximum amount of text output.\u00a0 \u00a0 }\u00a0 \u00a0 responses = code.predict_streaming(\u00a0 \u00a0 \u00a0 \u00a0 prefix=\"Write a function that checks if a year is a leap year.\", **parameters)\u00a0 \u00a0 for response in responses:\u00a0 \u00a0 \u00a0 \u00a0 `print(response)`\n```\n```\nimport vertexaifrom vertexai.language_models import CodeChatModeldef streaming_prediction(\u00a0 \u00a0 project_id: str,\u00a0 \u00a0 location: str,) -> str:\u00a0 \u00a0 \"\"\"Streaming Chat Example with a Large Language Model\"\"\"\u00a0 \u00a0 vertexai.init(project=project_id, location=location)\u00a0 \u00a0 codechat_model = CodeChatModel.from_pretrained(\"codechat-bison\")\u00a0 \u00a0 parameters = {\u00a0 \u00a0 \u00a0 \u00a0 \"temperature\": 0.8, \u00a0# Temperature controls the degree of randomness in token selection.\u00a0 \u00a0 \u00a0 \u00a0 \"max_output_tokens\": 1024, \u00a0# Token limit determines the maximum amount of text output.\u00a0 \u00a0 }\u00a0 \u00a0 codechat = codechat_model.start_chat()\u00a0 \u00a0 responses = codechat.send_message_streaming(\u00a0 \u00a0 \u00a0 \u00a0 message=\"Please help write a function to calculate the min of two numbers\", **parameters)\u00a0 \u00a0 for response in responses:\u00a0 \u00a0 \u00a0 \u00a0 `print(response)`\n```\n## \u53ef\u7528\u7684\u5ba2\u6236\u7aef\u5eab\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b [\u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e4b\u4e00\u4f86\u6d41\u5f0f\u50b3\u8f38\u97ff\u61c9\uff1a\n- Python\n- Node.js\n- Java\n\u5982\u9700\u4f7f\u7528 REST API \u67e5\u770b\u793a\u4f8b\u4ee3\u78bc\u8acb\u6c42\u548c\u97ff\u61c9\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528 REST API \u7684\u793a\u4f8b](#rest) \u3002\n\u5982\u9700\u4f7f\u7528 Python \u7248 Vertex AI SDK \u67e5\u770b\u793a\u4f8b\u4ee3\u78bc\u8acb\u6c42\u548c\u97ff\u61c9\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528 Python \u7248 Vertex AI SDK \u7684\u793a\u4f8b](#sdk) \u3002\n## Responsible AI\n[\u97ff\u61c9\u5f0f\u4eba\u5de5\u667a\u80fd (RAI) \u904e\u6ffe\u5668](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/responsible-ai?hl=zh-cn#safety_filters_and_attributes) \u6703\u5728\u6a21\u578b\u751f\u6210\u6d41\u5f0f\u50b3\u8f38\u8f38\u51fa\u6642\u9032\u884c\u6383\u63cf\u3002\u5982\u679c\u6aa2\u6e2c\u5230\u9055\u898f\u884c\u7232\uff0c\u5247\u904e\u6ffe\u5668\u6703\u5c4f\u853d\u9055\u898f\u7684\u8f38\u51fa\u8a5e\u5143\uff0c\u4e26\u5728 `safetyAttributes` \u4e0b\u8fd4\u56de\u5177\u6709\u88ab\u963b\u6b62\u6a19\u8a8c\u7684\u8f38\u51fa\uff0c\u9019\u6703\u7d42\u6b62\u6d41\u5f0f\u50b3\u8f38\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u77ad\u89e3\u5982\u4f55 [\u8a2d\u8a08\u6587\u672c\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/text/text-prompts?hl=zh-cn) \u548c [\u6587\u5b57\u804a\u5929\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/chat/chat-prompts?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55\u5728 [Vertex AI Studio](https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart?hl=zh-cn) \u4e2d\u6e2c\u8a66\u63d0\u793a\u3002\n- \u77ad\u89e3 [\u6587\u672c\u5d4c\u5165](https://cloud.google.com/vertex-ai/generative-ai/docs/embeddings/get-text-embeddings?hl=zh-cn) \u3002\n- \u5617\u8a66 [\u8abf\u6574\u8a9e\u8a00\u57fa\u790e\u6a21\u578b](https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart-tuning?hl=zh-cn) \u3002\n- \u77ad\u89e3 [Responsible AI \u6700\u4f73\u5be6\u8e10](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/responsible-ai?hl=zh-cn#recommended_practices) \u548c [Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI \u7684\u5b89\u5168\u904e\u6ffe\u689d\u4ef6](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/responsible-ai?hl=zh-cn#safety_filters_and_attributes) \u3002", "guide": "Generative AI on Vertex AI"}