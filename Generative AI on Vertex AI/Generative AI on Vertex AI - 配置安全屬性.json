{"title": "Generative AI on Vertex AI - \u914d\u7f6e\u5b89\u5168\u5c6c\u6027", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/configure-safety-attributes?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u914d\u7f6e\u5b89\u5168\u5c6c\u6027\n", "content": "## \u5b89\u5168\u5c6c\u6027\u7f6e\u4fe1\u5ea6\u8a55\u5206\n\u901a\u904e Vertex AI Gemini API \u8655\u7406\u7684\u5167\u5bb9\u6703\u6839\u64da\u5b89\u5168\u5c6c\u6027\u5217\u8868\u9032\u884c\u8a55\u4f30\uff0c\u5176\u4e2d\u5305\u62ec\u201c\u6709\u5bb3\u985e\u5225\u201d\u548c\u53ef\u80fd\u88ab\u8996\u7232\u654f\u611f\u7684\u4e3b\u984c\u3002\u9019\u4e9b\u5b89\u5168\u5c6c\u6027\u5728\u4e0b\u8868\u4e2d\u8868\u793a\uff1a\n## \u5b89\u5168\u5c6c\u6027\u5b9a\u7fa9\n| \u5b89\u5168\u5c6c\u6027 | \u5b9a\u7fa9          |\n|:-----------|:-------------------------------------------|\n| \u4ec7\u6068\u8a00\u8ad6 | \u91dd\u5c0d\u8eab\u4efd\u548c/\u6216\u53d7\u4fdd\u8b77\u5c6c\u6027\u7684\u8ca0\u9762\u6216\u6709\u5bb3\u8a55\u8ad6\u3002 |\n| \u9a37\u64fe\u5167\u5bb9 | \u91dd\u5c0d\u5176\u4ed6\u4eba\u7684\u60e1\u610f\u3001\u6050\u5687\u3001\u6b3a\u51cc\u6216\u8fb1\u7f75\u6027\u8a55\u8ad6\u3002 |\n| \u9732\u9aa8\u8272\u60c5 | \u5305\u542b\u5c0d\u6027\u884c\u7232\u6216\u5176\u4ed6\u6deb\u7a62\u5167\u5bb9\u7684\u5f15\u7528\u3002   |\n| \u5371\u96aa\u5167\u5bb9 | \u5ba3\u50b3\u6216\u5141\u8a31\u8a2a\u554f\u6709\u5bb3\u5546\u54c1\u3001\u670d\u52d9\u548c\u6d3b\u52d5\u3002  |\n## \u5b89\u5168\u5c6c\u6027\u6982\u7387\n\u6bcf\u500b\u5b89\u5168\u5c6c\u6027\u7684\u95dc\u806f\u7f6e\u4fe1\u5ea6\u5206\u6578\u4ecb\u65bc 0.0 \u5230 1.0 \u4e4b\u9593\uff0c\u56db\u6368\u4e94\u5165\u5230\u5c0f\u6578\u9ede\u5f8c\u4e00\u4f4d\uff0c\u53cd\u6620\u4e86\u8f38\u5165\u6216\u97ff\u61c9\u5c6c\u65bc\u7d66\u5b9a\u985e\u5225\u7684\u53ef\u80fd\u6027\u3002\n\u4e0b\u8868\u4e2d\u7684\u7f6e\u4fe1\u5ea6\u5206\u6578\u6703\u4ee5\u5b89\u5168\u7f6e\u4fe1\u5ea6\u7d1a\u5225\u8fd4\u56de\uff1a\n| \u6982\u7387 | \u8aaa\u660e       |\n|:-------|:-----------------------------|\n| \u53ef\u5ffd\u7565 | \u5167\u5bb9\u4e0d\u5b89\u5168\u7684\u6982\u7387\u53ef\u5ffd\u7565\u4e0d\u8a08\u3002 |\n| \u4f4e  | \u5167\u5bb9\u4e0d\u5b89\u5168\u7684\u6982\u7387\u8f03\u4f4e\u3002  |\n| \u4e2d  | \u5167\u5bb9\u4e0d\u5b89\u5168\u7684\u6982\u7387\u7232\u4e2d\u7b49\u3002  |\n| \u9ad8  | \u5167\u5bb9\u4e0d\u5b89\u5168\u7684\u6982\u7387\u8f03\u9ad8\u3002  |\n## \u5b89\u5168\u5c6c\u6027\u56b4\u91cd\u7d1a\u5225\n\u4ee5\u4e0b\u56db\u500b\u5b89\u5168\u5c6c\u6027\u5747\u5206\u914d\u6709\u5b89\u5168\u8a55\u7d1a\uff08\u56b4\u91cd\u7d1a\u5225\uff09\u548c\u56b4\u91cd\u7d1a\u5225\u5206\u6578\uff08\u7bc4\u570d\u4ecb\u65bc 0.0 \u5230 1.0 \u4e4b\u9593\uff09\uff0c\u56db\u6368\u4e94\u5165\u5230\u5c0f\u6578\u9ede\u5f8c\u4e00\u4f4d\u3002\u4e0b\u8868\u4e2d\u7684\u8a55\u5206\u548c\u5206\u6578\u53cd\u6620\u4e86\u5c6c\u65bc\u7d66\u5b9a\u985e\u5225\u7684\u5167\u5bb9\u7684\u9810\u6e2c\u56b4\u91cd\u7d1a\u5225\uff1a\n| \u56b4\u91cd\u7d1a\u5225 | \u8aaa\u660e              |\n|:-----------|:---------------------------------------------------------|\n| \u53ef\u5ffd\u7565  | \u6839\u64da Google \u7684\u5b89\u5168\u653f\u7b56\uff0c\u5167\u5bb9\u56b4\u91cd\u7d1a\u5225\u9810\u6e2c\u7232\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8a08\u3002 |\n| \u4f4e   | \u6839\u64da Google \u7684\u5b89\u5168\u653f\u7b56\uff0c\u5167\u5bb9\u56b4\u91cd\u7d1a\u5225\u9810\u6e2c\u7232\u4f4e\u3002   |\n| \u4e2d   | \u6839\u64da Google \u7684\u5b89\u5168\u653f\u7b56\uff0c\u5167\u5bb9\u56b4\u91cd\u7d1a\u5225\u9810\u6e2c\u7232\u4e2d\u7b49\u3002   |\n| \u9ad8   | \u6839\u64da Google \u7684\u5b89\u5168\u653f\u7b56\uff0c\u5167\u5bb9\u56b4\u91cd\u7d1a\u5225\u9810\u6e2c\u7232\u9ad8\u3002   |\n## \u5b89\u5168\u8a2d\u7f6e\n\u5b89\u5168\u8a2d\u7f6e\u662f\u60a8\u5411 API \u670d\u52d9\u767c\u9001\u7684\u8acb\u6c42\u7684\u4e00\u90e8\u5206\u3002\u60a8\u53ef\u4ee5\u91dd\u5c0d\u5411 API \u767c\u51fa\u7684\u6bcf\u500b\u8acb\u6c42\u9032\u884c\u8abf\u6574\u3002\u4e0b\u8868\u4ecb\u7d39\u4e86\u60a8\u53ef\u4ee5\u91dd\u5c0d\u6bcf\u7a2e\u985e\u5225\u8abf\u6574\u7684\u5c4f\u853d\u8a2d\u7f6e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5c07 **\u201c\u5371\u96aa\u5167\u5bb9\u201d\u985e\u5225** \u7684\u5c4f\u853d\u8a2d\u7f6e\u8a2d\u7232 **\u5c4f\u853d\u5c11\u90e8\u5206** \uff0c\u5247\u7cfb\u7d71\u6703\u5c4f\u853d\u5305\u542b\u5371\u96aa\u5167\u5bb9\u6982\u7387\u8f03\u9ad8\u7684\u6240\u6709\u90e8\u5206\u3002\u4f46\u5141\u8a31\u4efb\u4f55\u5305\u542b\u5371\u96aa\u5167\u5bb9\u6982\u7387\u8f03\u4f4e\u7684\u90e8\u5206\u3002\u5982\u679c\u672a\u8a2d\u7f6e\uff0c\u5247\u9ed8\u8a8d\u5c4f\u853d\u8a2d\u7f6e\u662f **\u5c4f\u853d\u90e8\u5206** \u3002\n| \u95be\u503c (Studio) | \u95be\u503c (API)      | \u95be\u503c\uff08\u8aaa\u660e\uff09        |\n|:-----------------|:---------------------------------|:-------------------------------------------|\n| nan    | BLOCK_NONE\uff08\u53d7\u9650\uff09    | \u7121\u8ad6\u4e0d\u5b89\u5168\u5167\u5bb9\u7684\u53ef\u80fd\u6027\u5982\u4f55\uff0c\u4e00\u5f8b\u986f\u793a\u3002  |\n| \u5c4f\u853d\u5c11\u90e8\u5206  | BLOCK_ONLY_HIGH     | \u5728\u51fa\u73fe\u4e0d\u5b89\u5168\u5167\u5bb9\u7684\u6982\u7387\u8f03\u9ad8\u6642\u5c4f\u853d\u3002   |\n| \u5c4f\u853d\u90e8\u5206\uff08\u9ed8\u8a8d\uff09 | BLOCK_MEDIUM_AND_ABOVE\uff08\u9ed8\u8a8d\uff09 | \u5728\u51fa\u73fe\u4e0d\u5b89\u5168\u5167\u5bb9\u7684\u6982\u7387\u7232\u4e2d\u7b49\u6216\u8f03\u9ad8\u6642\u5c4f\u853d\u3002 |\n| \u5c4f\u853d\u5927\u90e8\u5206  | BLOCK_LOW_AND_ABOVE    | \u5728\u51fa\u73fe\u4e0d\u5b89\u5168\u5167\u5bb9\u7684\u6982\u7387\u7232\u4e2d\u7b49\u6216\u8f03\u9ad8\u6642\u5c4f\u853d\u3002 |\n| nan    | HARM_BLOCK_THRESHOLD_UNSPECIFIED | \u672a\u6307\u5b9a\u95be\u503c\uff0c\u4f7f\u7528\u9ed8\u8a8d\u95be\u503c\u9032\u884c\u5c4f\u853d\u3002   |\n\u60a8\u53ef\u4ee5\u91dd\u5c0d\u5411\u6587\u672c\u670d\u52d9\u767c\u51fa\u7684\u6bcf\u500b\u8acb\u6c42\u66f4\u6539\u9019\u4e9b\u8a2d\u7f6e\u3002\u5982\u9700\u77ad\u89e3\u8a73\u7d30\u4fe1\u606f\uff0c\u8acb\u53c3\u95b1 [HarmBlockThreshold API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest/google.cloud.aiplatform_v1.types.SafetySetting.HarmBlockThreshold?hl=zh-cn) \u3002\n**\u6ce8\u610f** \uff1a\u201cBLOCK_NONE\u201d\u8a2d\u7f6e\u662f\u4e00\u500b\u53d7\u9650\u5b57\u6bb5\uff0c\u50c5\u53ef\u4f9b\u6b63\u5f0f\u7248\u6a21\u578b\u7248\u672c\u7684\u6240\u6709\u7528\u6236\u4f7f\u7528\u3002\u5982\u9700\u66f4\u591a\u6307\u5c0e\uff0c\u8acb\u53c3\u95b1\u672c\u6587\u6a94\u7684\u5176\u9918\u90e8\u5206\u3002\n## \u5982\u4f55\u79fb\u9664\u91dd\u5c0d\u7279\u5b9a\u5b89\u5168\u5c6c\u6027\u7684\u81ea\u52d5\u97ff\u61c9\u5c4f\u853d\n\u201cBLOCK_NONE\u201d\u5b89\u5168\u8a2d\u7f6e\u6703\uff08\u91dd\u5c0d\u201c\u5b89\u5168\u8a2d\u7f6e\u201d\u4e0b\u63cf\u8ff0\u7684\u5b89\u5168\u5c6c\u6027\uff09\u79fb\u9664\u81ea\u52d5\u97ff\u61c9\u5c4f\u853d\uff0c\u8b93\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd4\u56de\u7684\u5f97\u5206\u914d\u7f6e\u60a8\u81ea\u5df1\u7684\u5b89\u5168\u6e96\u5247\u3002\u5982\u9700\u8a2a\u554f\u201cBLOCK_NONE\u201d\u8a2d\u7f6e\uff0c\u60a8\u6709\u5169\u500b\u9078\u9805\uff1a\n(1) \u60a8\u53ef\u4ee5\u901a\u904e [Gemini \u5b89\u5168\u904e\u6ffe\u5668\u8a31\u53ef\u540d\u55ae\u8868\u55ae](https://docs.google.com/forms/d/e/1FAIpQLSeeaIrARA2Hdcri4upSNpS-OHnBEgzavVUpDhcVdWC_Qku_KQ/viewform?usp=header_link&hl=zh-cn) \u7533\u8acb\u5217\u5165\u8a31\u53ef\u540d\u55ae\uff0c\u6216\u8005\n(2) \u60a8\u53ef\u4ee5\u4f7f\u7528 [GCP \u8cec\u55ae\u7d50\u7b97\u53c3\u8003\u6587\u6a94](https://cloud.google.com/billing/docs/how-to/invoiced-billing?hl=zh-cn) \uff0c\u5c07\u8cec\u865f\u985e\u578b\u66f4\u6539\u7232\u6309\u6708\u8cec\u55ae\u7d50\u7b97\u3002\n## Gemini \u8207\u5176\u4ed6\u6a21\u578b\u7cfb\u5217\u4e4b\u9593\u7684\u4e3b\u8981\u5340\u5225\n\u96d6\u7136 Gemini \u548c PaLM \u61c9\u7528\u4e86\u76f8\u540c\u7684\u5b89\u5168\u5206\u985e\u5668\uff0c\u4f46 API \u4e2d\u8fd4\u56de\u7684\u5b89\u5168\u5c6c\u6027\u6578\u91cf\u53ef\u80fd\u56e0\u4e0d\u540c\u6a21\u578b\u7cfb\u5217\u800c\u7570\u3002\u5c4f\u853d\u908f\u8f2f\uff08\u5373\u7f6e\u4fe1\u5ea6\u95be\u503c\uff09\u57fa\u65bc\u5c0d\u6bcf\u500b\u6a21\u578b\u7684\u56b4\u683c\u8a55\u4f30\u3002\u56e0\u6b64\uff0c\u61c9\u7528\u65bc\u4e00\u500b\u6a21\u578b\u7684\u5b89\u5168\u8a2d\u7f6e\u8207\u61c9\u7528\u65bc\u5176\u4ed6\u6a21\u578b\u7684\u5b89\u5168\u8a2d\u7f6e\u7684\u884c\u7232\u4e26\u4e0d\u5b8c\u5168\u5339\u914d\u3002\u5982\u679c\u64d4\u5fc3\u9019\u7a2e\u60c5\u6cc1\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u4f7f\u7528\u539f\u59cb\u56b4\u91cd\u7a0b\u5ea6\u5206\u6578\u548c\u539f\u59cb\u7f6e\u4fe1\u5ea6\u5206\u6578\u914d\u7f6e\u81ea\u5df1\u7684\u5c4f\u853d\u908f\u8f2f\uff0c\u4e26\u5c0d\u6a21\u578b\u61c9\u7528\u76f8\u540c\u7684\u5206\u6578\u95be\u503c\u3002\n## \u914d\u7f6e\u95be\u503c\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002   \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/generative_ai/gemini_safety_config_example.py) \n```\nfrom vertexai import generative_modelsdef generate_text(project_id: str, location: str, image: str) -> str:\u00a0 \u00a0 # Initialize Vertex AI\u00a0 \u00a0 vertexai.init(project=project_id, location=location)\u00a0 \u00a0 # Load the model\u00a0 \u00a0 model = generative_models.GenerativeModel(\"gemini-1.0-pro-vision\")\u00a0 \u00a0 # Generation config\u00a0 \u00a0 config = {\"max_output_tokens\": 2048, \"temperature\": 0.4, \"top_p\": 1, \"top_k\": 32}\u00a0 \u00a0 # Safety config\u00a0 \u00a0 safety_config = {\u00a0 \u00a0 \u00a0 \u00a0 generative_models.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT: generative_models.HarmBlockThreshold.BLOCK_LOW_AND_ABOVE,\u00a0 \u00a0 \u00a0 \u00a0 generative_models.HarmCategory.HARM_CATEGORY_HARASSMENT: generative_models.HarmBlockThreshold.BLOCK_LOW_AND_ABOVE,\u00a0 \u00a0 }\u00a0 \u00a0 # Generate content\u00a0 \u00a0 responses = model.generate_content(\u00a0 \u00a0 \u00a0 \u00a0 [image, \"Add your prompt here\"],\u00a0 \u00a0 \u00a0 \u00a0 generation_config=config,\u00a0 \u00a0 \u00a0 \u00a0 stream=True,\u00a0 \u00a0 \u00a0 \u00a0 safety_settings=safety_config,\u00a0 \u00a0 )\u00a0 \u00a0 text_responses = []\u00a0 \u00a0 for response in responses:\u00a0 \u00a0 \u00a0 \u00a0 print(response.text)\u00a0 \u00a0 \u00a0 \u00a0 text_responses.append(response.text)\u00a0 \u00a0 return \"\".join(text_responses)\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/generative-ai/snippets/safetySettings.js) \n```\nconst {\u00a0 VertexAI,\u00a0 HarmCategory,\u00a0 HarmBlockThreshold,} = require('@google-cloud/vertexai');/**\u00a0* TODO(developer): Update these variables before running the sample.\u00a0*/async function setSafetySettings(\u00a0 projectId = 'PROJECT_ID',\u00a0 location = 'us-central1',\u00a0 model = 'gemini-1.0-pro') {\u00a0 // Initialize Vertex with your Cloud project and location\u00a0 const vertexAI = new VertexAI({project: projectId, location: location});\u00a0 // Instantiate the model\u00a0 const generativeModel = vertexAI.getGenerativeModel({\u00a0 \u00a0 model: model,\u00a0 \u00a0 // The following parameters are optional\u00a0 \u00a0 // They can also be passed to individual content generation requests\u00a0 \u00a0 safety_settings: [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,\u00a0 \u00a0 \u00a0 \u00a0 threshold: HarmBlockThreshold.BLOCK_LOW_AND_ABOVE,\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 ],\u00a0 \u00a0 generation_config: {max_output_tokens: 256},\u00a0 });\u00a0 const request = {\u00a0 \u00a0 contents: [{role: 'user', parts: [{text: 'Tell me something dangerous.'}]}],\u00a0 };\u00a0 console.log('Prompt:');\u00a0 console.log(request.contents[0].parts[0].text);\u00a0 console.log('Streaming Response Text:');\u00a0 // Create the response stream\u00a0 const responseStream = await generativeModel.generateContentStream(request);\u00a0 // Log the text response as it streams\u00a0 for await (const item of responseStream.stream) {\u00a0 \u00a0 if (item.candidates[0].finishReason === 'SAFETY') {\u00a0 \u00a0 \u00a0 console.log('This response stream terminated due to safety concerns.');\u00a0 \u00a0 \u00a0 break;\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 process.stdout.write(item.candidates[0].content.parts[0].text);\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/vertexai/snippets/src/main/java/vertexai/gemini/WithSafetySettings.java) \n```\nimport com.google.cloud.vertexai.VertexAI;import com.google.cloud.vertexai.api.Candidate;import com.google.cloud.vertexai.api.GenerateContentResponse;import com.google.cloud.vertexai.api.GenerationConfig;import com.google.cloud.vertexai.api.HarmCategory;import com.google.cloud.vertexai.api.SafetySetting;import com.google.cloud.vertexai.generativeai.GenerativeModel;import java.util.Arrays;import java.util.List;public class WithSafetySettings {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"your-google-cloud-project-id\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String modelName = \"gemini-1.0-pro-vision\";\u00a0 \u00a0 String textPrompt = \"your-text-here\";\u00a0 \u00a0 String output = safetyCheck(projectId, location, modelName, textPrompt);\u00a0 \u00a0 System.out.println(output);\u00a0 }\u00a0 // Use safety settings to avoid harmful questions and content generation.\u00a0 public static String safetyCheck(String projectId, String location, String modelName,\u00a0 \u00a0 \u00a0 String textPrompt) throws Exception {\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs\u00a0 \u00a0 // to be created once, and can be reused for multiple requests.\u00a0 \u00a0 try (VertexAI vertexAI = new VertexAI(projectId, location)) {\u00a0 \u00a0 \u00a0 StringBuilder output = new StringBuilder();\u00a0 \u00a0 \u00a0 GenerationConfig generationConfig =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GenerationConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setMaxOutputTokens(2048)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setTemperature(0.4F)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setTopK(32)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setTopP(1)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 GenerativeModel model = new GenerativeModel(modelName, generationConfig, vertexAI);\u00a0 \u00a0 \u00a0 List<SafetySetting> safetySettings = Arrays.asList(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SafetySetting.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setCategory(HarmCategory.HARM_CATEGORY_HATE_SPEECH)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setThreshold(SafetySetting.HarmBlockThreshold.BLOCK_LOW_AND_ABOVE)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SafetySetting.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setCategory(HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setThreshold(SafetySetting.HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build()\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 GenerateContentResponse response = model.generateContent(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 textPrompt,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 safetySettings\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 output.append(response).append(\"\\n\");\u00a0 \u00a0 \u00a0 // Verifies if the above content has been blocked for safety reasons.\u00a0 \u00a0 \u00a0 boolean blockedForSafetyReason = response.getCandidatesList()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .stream()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .anyMatch(candidate -> candidate.getFinishReason() == Candidate.FinishReason.SAFETY);\u00a0 \u00a0 \u00a0 output.append(\"Blocked for safety reasons?: \").append(blockedForSafetyReason);\u00a0 \u00a0 \u00a0 return output.toString();\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Go \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Go API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/aiplatform/latest/apiv1?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/vertexai/safety-settings-multimodal/safety-settings-multimodal.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 \"mime\"\u00a0 \u00a0 \u00a0 \u00a0 \"path/filepath\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/vertexai/genai\")// generateMultimodalContent generates a response into w, based upon the prompt// and image provided.func generateMultimodalContent(w io.Writer, prompt, image, projectID, location, modelName string) error {\u00a0 \u00a0 \u00a0 \u00a0 // prompt := \"describe this image.\"\u00a0 \u00a0 \u00a0 \u00a0 // location := \"us-central1\"\u00a0 \u00a0 \u00a0 \u00a0 // model := \"gemini-1.0-pro-vision\"\u00a0 \u00a0 \u00a0 \u00a0 // image := \"gs://cloud-samples-data/generative-ai/image/320px-Felis_catus-cat_on_snow.jpg\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := genai.NewClient(ctx, projectID, location)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"unable to create client: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 model := client.GenerativeModel(modelName)\u00a0 \u00a0 \u00a0 \u00a0 model.SetTemperature(0.4)\u00a0 \u00a0 \u00a0 \u00a0 // configure the safety settings thresholds\u00a0 \u00a0 \u00a0 \u00a0 model.SafetySettings = []*genai.SafetySetting{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Category: \u00a0genai.HarmCategoryHarassment,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Threshold: genai.HarmBlockLowAndAbove,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Category: \u00a0genai.HarmCategoryDangerousContent,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Threshold: genai.HarmBlockLowAndAbove,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Given an image file URL, prepare image file as genai.Part\u00a0 \u00a0 \u00a0 \u00a0 img := genai.FileData{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MIMEType: mime.TypeByExtension(filepath.Ext(image)),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 FileURI: \u00a0image,\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 res, err := model.GenerateContent(ctx, img, genai.Text(prompt))\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"unable to generate contents: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"generated response: %s\\n\", res.Candidates[0].Content.Parts[0])\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 C# \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.AIPlatform.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/aiplatform/api/AIPlatform.Samples/WithSafetySettings.cs) \n```\nusing Google.Api.Gax.Grpc;using Google.Cloud.AIPlatform.V1;using System.Collections.Generic;using System.Text;using System.Threading.Tasks;using static Google.Cloud.AIPlatform.V1.SafetySetting.Types;public class WithSafetySettings{\u00a0 \u00a0 public async Task<string> GenerateContent(\u00a0 \u00a0 \u00a0 \u00a0 string projectId = \"your-project-id\",\u00a0 \u00a0 \u00a0 \u00a0 string location = \"us-central1\",\u00a0 \u00a0 \u00a0 \u00a0 string publisher = \"google\",\u00a0 \u00a0 \u00a0 \u00a0 string model = \"gemini-1.0-pro-vision\"\u00a0 \u00a0 )\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create client\u00a0 \u00a0 \u00a0 \u00a0 var predictionServiceClient = new PredictionServiceClientBuilder\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Endpoint = $\"{location}-aiplatform.googleapis.com\"\u00a0 \u00a0 \u00a0 \u00a0 }.Build();\u00a0 \u00a0 \u00a0 \u00a0 // Prompt\u00a0 \u00a0 \u00a0 \u00a0 string prompt = \"Hello!\";\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s)\u00a0 \u00a0 \u00a0 \u00a0 var content = new Content\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Role = \"USER\"\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 content.Parts.AddRange(new List<Part>()\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Text = prompt\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 var safetySettings = new List<SafetySetting>()\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Category = HarmCategory.HateSpeech,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Threshold = HarmBlockThreshold.BlockLowAndAbove\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Category = HarmCategory.DangerousContent,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Threshold = HarmBlockThreshold.BlockMediumAndAbove\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 var generateContentRequest = new GenerateContentRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Model = $\"projects/{projectId}/locations/{location}/publishers/{publisher}/models/{model}\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GenerationConfig = new GenerationConfig\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Temperature = 0.4f,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TopP = 1,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TopK = 32,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MaxOutputTokens = 2048\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 generateContentRequest.Contents.Add(content);\u00a0 \u00a0 \u00a0 \u00a0 generateContentRequest.SafetySettings.AddRange(safetySettings);\u00a0 \u00a0 \u00a0 \u00a0 // Make the request, returning a streaming response\u00a0 \u00a0 \u00a0 \u00a0 using PredictionServiceClient.StreamGenerateContentStream response = predictionServiceClient.StreamGenerateContent(generateContentRequest);\u00a0 \u00a0 \u00a0 \u00a0 StringBuilder fullText = new();\u00a0 \u00a0 \u00a0 \u00a0 // Read streaming responses from server until complete\u00a0 \u00a0 \u00a0 \u00a0 AsyncResponseStream<GenerateContentResponse> responseStream = response.GetResponseStream();\u00a0 \u00a0 \u00a0 \u00a0 await foreach (GenerateContentResponse responseItem in responseStream)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Check if the content has been blocked for safety reasons.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bool blockForSafetyReason = responseItem.Candidates[0].FinishReason == Candidate.Types.FinishReason.Safety;\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (blockForSafetyReason)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fullText.Append(\"Blocked for safety reasons\");\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 else\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fullText.Append(responseItem.Candidates[0].Content.Parts[0].Text);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return fullText.ToString();\u00a0 \u00a0 }}\n```\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u8655\u7406\u8acb\u6c42\u7684\u5340\u57df\u3002\u53ef\u7528\u7684\u9078\u9805\u5305\u62ec\uff1a\n- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u60a8\u8981\u4f7f\u7528\u7684\u591a\u6a21\u614b\u6a21\u578b ID\u3002\u9078\u9805\u5305\u62ec\uff1a- `gemini-1.0-pro`\n- `gemini-1.0-pro-vision`\n- \uff1a\u8207\u5167\u5bb9\u95dc\u806f\u7684\u5c0d\u8a71\u4e2d\u7684\u89d2\u8272\u3002\u5373\u4f7f\u5728\u55ae\u8f2a\u61c9\u7528\u5834\u666f\u4e2d\uff0c\u4e5f\u9700\u8981\u6307\u5b9a\u89d2\u8272\u3002 \u53ef\u63a5\u53d7\u7684\u503c\u5305\u62ec\uff1a- `USER`\uff1a\u6307\u5b9a\u7531\u60a8\u767c\u9001\u7684\u5167\u5bb9\u3002\n- `MODEL`\uff1a\u6307\u5b9a\u6a21\u578b\u7684\u97ff\u61c9\u3002- \uff1a\u8981\u5305\u542b\u5728\u63d0\u793a\u4e2d\u7684\u6587\u672c\u8aaa\u660e\u3002\n- \uff1a\u8981\u7232\u5176\u914d\u7f6e\u95be\u503c\u7684\u5b89\u5168\u985e\u5225\u3002\u53ef\u63a5\u53d7\u7684\u503c\u5305\u62ec\uff1a\n- \uff1a\u57fa\u65bc\u6982\u7387\u963b\u6b62\u5c6c\u65bc\u6307\u5b9a\u5b89\u5168\u985e\u5225\u7684\u97ff\u61c9\u7684\u95be\u503c\u3002\u53ef\u63a5\u53d7\u7684\u503c\u5305\u62ec\uff1a`BLOCK_LOW_AND_ABOVE`\u5c4f\u853d\u5f97\u6700\u591a\uff0c\u800c`BLOCK_ONLY_HIGH`\u5c4f\u853d\u5f97\u6700\u5c11\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/publishers/google/models/MODEL_ID:streamGenerateContent\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"contents\": {\n \"role\": \"ROLE\",\n \"parts\": { \"text\": \"TEXT\" }\n },\n \"safety_settings\": {\n \"category\": \"SAFETY_CATEGORY\",\n \"threshold\": \"THRESHOLD\"\n },\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/publishers/google/models/MODEL_ID:streamGenerateContent\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/publishers/google/models/MODEL_ID:streamGenerateContent\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\u3002```\nLOCATION=\"us-central1\"MODEL_ID=\"gemini-1.0-pro\"PROJECT_ID=\"test-project\"curl \\-X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\https://${LOCATION}-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/${LOCATION}/publishers/google/models/${MODEL_ID}:streamGenerateContent -d \\$'{\u00a0 \"contents\": {\u00a0 \u00a0 \"role\": \"user\",\u00a0 \u00a0 \"parts\": { \"text\": \"Hello!\" }\u00a0 },\u00a0 \"safety_settings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"category\": \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\u00a0 \u00a0 \u00a0 \"threshold\": \"BLOCK_NONE\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"category\": \"HARM_CATEGORY_HATE_SPEECH\",\u00a0 \u00a0 \u00a0 \"threshold\": \"BLOCK_LOW_AND_ABOVE\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"category\": \"HARM_CATEGORY_HARASSMENT\",\u00a0 \u00a0 \u00a0 \"threshold\": \"BLOCK_MEDIUM_AND_ABOVE\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"category\": \"HARM_CATEGORY_DANGEROUS_CONTENT\",\u00a0 \u00a0 \u00a0 \"threshold\": \"BLOCK_ONLY_HIGH\"\u00a0 \u00a0 }\u00a0 ]}'\n```\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u7684\u751f\u6210\u5f0f AI \u90e8\u5206\u4e2d\uff0c\u9032\u5165 **Vertex AI Studio** \u9801\u9762\u3002 [\u9032\u5165 Vertex AI Studio](https://console.cloud.google.com/vertex-ai/generative/language?hl=zh-cn) \n- \u5728 **\u5275\u5efa\u65b0\u63d0\u793a** \u4e0b\uff0c\u9ede\u64ca\u4efb\u610f\u6309\u9215\u4ee5\u6253\u958b\u63d0\u793a\u8a2d\u8a08\u9801\u9762\u3002\n- \u9ede\u64ca **\u5b89\u5168\u8a2d\u7f6e** \u3002\u7cfb\u7d71\u6703\u6253\u958b **\u5b89\u5168\u8a2d\u7f6e** \u5c0d\u8a71\u6846\u7a97\u53e3\u3002\n- \u5c0d\u65bc\u6bcf\u500b\u5b89\u5168\u5c6c\u6027\uff0c\u914d\u7f6e\u6240\u9700\u7684\u95be\u503c\u3002\n- \u9ede\u64ca **\u4fdd\u5b58** \u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u8a73\u7d30\u77ad\u89e3 [Responsible AI](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/responsible-ai?hl=zh-cn) \u3002\n- \u77ad\u89e3 [\u6578\u64da\u6cbb\u7406](https://cloud.google.com/vertex-ai/generative-ai/docs/data-governance?hl=zh-cn) \u3002", "guide": "Generative AI on Vertex AI"}