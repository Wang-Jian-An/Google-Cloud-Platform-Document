{"title": "Generative AI on Vertex AI - Code models overview", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-models-overview", "abstract": "# Generative AI on Vertex AI - Code models overview\nVertex AI includes a suite of models that work with code. Together these code models are referred to as the Vertex AI Codey APIs. The Vertex AI Codey APIs include the following:\n- The **code generation** API - Generates code based on a natural language description of the desired code. For example, it can generate a unit test for a function. The code generation API supports the `code-bison` model. For more information about the `code-bison` model, see [Create prompts to generate code](/vertex-ai/generative-ai/docs/code/code-generation-prompts) and [Test code generation prompts](/vertex-ai/generative-ai/docs/code/test-code-generation-prompts) .\n- The **code chat** API - Can power a chatbot that assists with code-related questions. For example, you can use it for help debugging code. The code chat API supports the `codechat-bison` model. For more information about the `codechat-bison` model, see [Create prompts to chat about code](/vertex-ai/generative-ai/docs/code/code-chat-prompts) and [Test code chat prompts](/vertex-ai/generative-ai/docs/code/test-code-generation-prompts) .\n- The **code completion** API - Provides code autocompletion suggestions as you write code. The API uses the context of the code you're writing to make its suggestions. The code completion API supports the `code-gecko` model. While the `code-gecko` model doesn't support streaming responses, you can use the `code-gecko` model to help improve the speed and accuracy of writing code. For more information about the `code-gecko` model, see [Create prompts for code completion](/vertex-ai/generative-ai/docs/code/code-completion-prompts) and [Test code completion prompts](/vertex-ai/generative-ai/docs/code/test-code-completion-prompts) .\nTo learn about using the Vertex AI SDK for Python to work with the code generation, code chat, and code completion models, see [Use code models and the Vertex AI SDK](/vertex-ai/generative-ai/docs/sdk-for-llm/sdk-use-code-models) .\n", "content": "## Codey APIs best practices\nWhen you use the Codey APIs, the following should be kept in mind:\n- We recommend that a human is involved when the Codey APIs are used. Outputs of solutions created with the Codey APIs should be comprehensively tested before the solutions are used by customers in production.\n- Code generated by the Codey APIs is not intended or designed to be a replacement for code development.\n- We recommend that you don't use the Codey APIs to implement solutions for sensitive industries, such as cybersecurity and hacking prevention.## Use cases for Codey APIs\nYou can use Codey APIs in many scenarios throughout the software development life cycle. The following is a list of some use cases and the models that can help with them:\n| Use case     | Codey models    |\n|:--------------------------|:---------------------------|\n| Code completion   | code-gecko     |\n| Code generation   | code-bison, codechat-bison |\n| Documentation in comments | codechat-bison    |\n| Release notes generation | codechat-bison    |\n| Unit test generation  | code-bison, codechat-bison |\n| Code explanation   | codechat-bison    |\n| Code fixing    | code-bison, codechat-bison |\n| Code optimization   | code-bison, codechat-bison |\n| Code translation   | code-bison, codechat-bison |\n## Codey APIs safety attributes\nContent that the Codey APIs process is assessed against a list of safety attributes. These attributes include categories and topics that could be considered harmful or sensitive. For more information, see [Responsible AI](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/responsible-ai) .\n## Supported coding languages\nThe Codey APIs support a variety of coding languages. The following table lists each supported language. An `x` in the column of a code model indicates that that model supports the coding language specified in that row.\n| Coding language   | Extension   | code-bison | codechat-bison | code-gecko |\n|:-------------------------|:------------------|:-------------|:-----------------|:-------------|\n| C and its header files | .c, .h   | x   | x    | nan   |\n| C++ and its header files | .cc, .cpp, .h  | x   | x    | x   |\n| C#      | .cs    | x   | x    | x   |\n| CSS      | .css    | x   | x    | nan   |\n| Clojure     | .clj, .cljs .cljc | x   | x    | nan   |\n| Dart      | .dart    | x   | x    | nan   |\n| Elixir     | .ex    | x   | x    | nan   |\n| Erlang     | .erl    | x   | x    | nan   |\n| Fortran     | .f    | x   | x    | nan   |\n| Go      | .go    | x   | x    | x   |\n| GoogleSQL    | .sql    | x   | x    | x   |\n| Groovy     | .groovy   | x   | x    | nan   |\n| Haskell     | .hs    | x   | x    | nan   |\n| HTML      | .html, htm  | x   | x    | nan   |\n| Java      | .java    | x   | x    | x   |\n| JavaScript    | .js    | x   | x    | x   |\n| JavaServer Pages   | .jsp    | x   | x    | nan   |\n| Kotlin     | .kt, .kts   | x   | x    | x   |\n| Lean (proof assistant) | .lean    | x   | x    | nan   |\n| Lua      | .lua    | x   | x    | nan   |\n| Objective-C    | .m    | x   | x    | nan   |\n| OCaml     | .ml    | x   | x    | nan   |\n| Perl      | .pl    | x   | x    | nan   |\n| PHP      | .php    | x   | x    | x   |\n| Python     | .py    | x   | x    | x   |\n| R      | .r    | x   | x    | nan   |\n| Ruby      | .rb    | x   | x    | x   |\n| Rust      | .rs    | x   | x    | x   |\n| Scala     | .scala   | x   | x    | x   |\n| Shell script    | .sh    | x   | x    | nan   |\n| Solidity     | .sol    | x   | x    | nan   |\n| Swift     | .swift   | x   | x    | x   |\n| TypeScript    | .ts    | x   | x    | x   |\n| XML      | .xml    | x   | x    | nan   |\n| Verilog     | .v    | x   | x    | nan   |\n| YAML      | .yaml, .yml  | x   | x    | nan   |\n## Supported code infrastructure interfaces\nThe Codey APIs support the following infrastructure as code interfaces:\n- [Google Cloud CLI](/cli) \n- [Kubernetes Resource Model (KRM)](https://github.com/kubernetes/design-proposals-archive/blob/main/architecture/resource-management.md) \n- [Terraform](https://developer.hashicorp.com/terraform/language) ## What's next\nYou can create prototype prompts to test the Codey APIs by using Vertex AI Studio in the Google Cloud console or with the API. For more information, see [Vertex AI Studio](/vertex-ai/generative-ai/docs/learn/overview#gen-ai-studio) . For examples of Codey APIs prompts you can run with the API and in Vertex AI Studio, see the following topics:\n- Learn how to [create code chat prompts](/vertex-ai/generative-ai/docs/code/code-chat-prompts) .\n- Learn how to [create code completion prompts](/vertex-ai/generative-ai/docs/code/code-completion-prompts) .\n- Learn how to [create code generation prompts](/vertex-ai/generative-ai/docs/code/code-generation-prompts) \n- Learn about [streaming responses from a model](/vertex-ai/generative-ai/docs/learn/streaming) .", "guide": "Generative AI on Vertex AI"}