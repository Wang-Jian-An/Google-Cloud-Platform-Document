{"title": "Generative AI on Vertex AI - \u5275\u5efa\u63d0\u793a\u4ee5\u751f\u6210\u4ee3\u78bc", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-generation-prompts?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u5275\u5efa\u63d0\u793a\u4ee5\u751f\u6210\u4ee3\u78bc\n`gemini-1.0-pro` \u548c `code-bison` \u6a21\u578b\u652f\u6301\u4f7f\u7528\u81ea\u7136\u8a9e\u8a00\u8aaa\u660e\u751f\u6210\u4ee3\u78bc\u3002\u672c\u4e3b\u984c\u4ecb\u7d39\u4e86\u5275\u5efa\u53ef\u8207 [\u652f\u6301\u7684\u6a21\u578b](#supported-code-generation-models) \u642d\u914d\u4f7f\u7528\u4ee5\u751f\u6210\u4ee3\u78bc\u7684\u63d0\u793a\u7684\u7b56\u7565\u3002\n", "content": "## \u4f7f\u7528\u5834\u666f\n\u4ee5\u4e0b\u662f\u4ee3\u78bc\u751f\u6210\u7684\u4e00\u4e9b\u5e38\u898b\u61c9\u7528\u5834\u666f\uff1a\n- **\u55ae\u5143\u6e2c\u8a66** - \u8a2d\u8a08\u63d0\u793a\u4ee5\u8acb\u6c42\u5c0d\u51fd\u6578\u9032\u884c\u55ae\u5143\u6e2c\u8a66\u3002\n- **\u7de8\u5beb\u51fd\u6578** - \u5c07\u554f\u984c\u50b3\u905e\u7d66\u6a21\u578b\uff0c\u4ee5\u7372\u53d6\u53ef\u4ee5\u89e3\u6c7a\u554f\u984c\u7684\u51fd\u6578\u3002\n- **\u5275\u5efa\u985e** - \u4f7f\u7528\u63d0\u793a\u4f86\u8aaa\u660e\u985e\u7684\u7528\u9014\uff0c\u4e26\u5177\u6709\u7528\u65bc\u5b9a\u7fa9\u8fd4\u56de\u7684\u985e\u7684\u4ee3\u78bc\u3002## \u652f\u6301\u7684\u6a21\u578b\n\u4ee5\u4e0b\u6a21\u578b\u652f\u6301\u4ee3\u78bc\u751f\u6210\u4efb\u52d9\uff1a\n- `gemini-1.0-pro`\n- `code-bison`## \u793a\u4f8b\u4ee3\u78bc\u751f\u6210\u63d0\u793a\n\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u8a2d\u8a08\u4ee3\u78bc\u751f\u6210\u63d0\u793a\u3002\n- [\u751f\u6210 Docker \u8173\u672c](#docker-script) \n- [\u751f\u6210\u51fd\u6578](#generate-function) \n- [\u751f\u6210\u55ae\u5143\u6e2c\u8a66](#unit-test) \n### \u751f\u6210 Docker \u8173\u672c\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee3\u78bc\u751f\u6210\u6a21\u578b\u4f86\u751f\u6210 Docker \u8173\u672c\u3002\u4ee5\u4e0b\u63d0\u793a\u6703\u751f\u6210\u4e00\u500b Docker \u8173\u672c\uff0c\u4ee5\u5275\u5efa\u5b89\u88dd\u4e86\u7279\u5b9a\u5167\u5bb9\u5eab\u7684 Linux \u6a5f\u5668\uff1a\n| 0                                                                                                                                                                                                                                    |\n||\n| \u63d0\u793a\uff1a Generate a Docker script to create a simple linux machine that has python 3.10 installed with following libraries: pandas, tensorflow, numpy \u56de\u7b54\uff1a ``` # Create a new Dockerfile FROM ubuntu:20.04 # Update the package list RUN apt-get update # Install Python 3.10 RUN apt-get install -y python3.10 # Install Python libraries RUN pip install pandas tensorflow numpy # Create a new user RUN useradd -m user # Set the default user USER user # Start the Python shell CMD [\"python\"] ``` To build the Docker image, run the following command: ``` docker build -t my-python-image . ``` To run the Docker image, run the following command: ``` docker run -it --rm my-python-image ``` This starts a new container based on the `my-python-image` image. You can then use the Python shell to interact with the container. For example, you can install additional Python libraries or run Python scripts. (gemini-1.0-pro) |\n### \u751f\u6210\u51fd\u6578\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee3\u78bc\u751f\u6210\u6a21\u578b\u4f86\u751f\u6210\u51fd\u6578\u3002\u4ee5\u4e0b\u63d0\u793a\u6703\u751f\u6210\u4e00\u500b\u51fd\u6578\uff0c\u8a72\u51fd\u6578\u8f38\u5165\u5e74\u4efd\u4e26\u78ba\u5b9a\u662f\u5426\u7232\u958f\u5e74\uff1a\n| 0                                                                                                    |\n|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| \u63d0\u793a\uff1a Write a function that checks if a year is a leap year. \u56de\u7b54\uff1a ```python def is_leap_year(year): \"\"\" def is_leap_year(year): \"\"\" Check if a year is a leap year. Args: year: The year to check. Returns: True if the year is a leap year, False otherwise. \"\"\" if year % 4 != 0: return False elif year % 100 == 0 and year % 400 != 0: return False else: return True ``` (gemini-1.0-pro) |\n### \u751f\u6210\u55ae\u5143\u6e2c\u8a66\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee3\u78bc\u751f\u6210\u6a21\u578b\u4f86\u751f\u6210\u55ae\u5143\u6e2c\u8a66\u3002\n\u4ee5\u4e0b\u63d0\u793a\u6703\u7232\u51fd\u6578\u751f\u6210\u55ae\u5143\u6e2c\u8a66\uff0c\u4ee5\u78ba\u5b9a\u67d0\u4e00\u5e74\u662f\u5426\u7232\u958f\u5e74\u3002\n| 0                                                                                                                                                                                                                      |\n||\n| \u63d0\u793a\uff1a Write a unit test for this function: def is_leap_year(year): \"\"\" Check if a year is a leap year. Args: year: The year to check. Returns: True if the year is a leap year, False otherwise. \"\"\" if year % 4 != 0: return False elif year % 100 == 0 and year % 400 != 0: return False else: return True \u56de\u7b54\uff1a ```python import unittest class IsLeapYearTest(unittest.TestCase): def test_is_leap_year_true(self): self.assertTrue(is_leap_year(2000)) self.assertTrue(is_leap_year(2004)) self.assertTrue(is_leap_year(2012)) def test_is_leap_year_false(self): self.assertFalse(is_leap_year(1900)) self.assertFalse(is_leap_year(1999)) self.assertFalse(is_leap_year(2100)) def test_is_leap_year_invalid_input(self): with self.assertRaises(TypeError): is_leap_year(\"2000\") if __name__ == '__main__': unittest.main() ``` (gemini-1.0-pro) |\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u77ad\u89e3\u5982\u4f55 [\u767c\u9001 Gemini \u804a\u5929\u63d0\u793a\u8acb\u6c42](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/send-chat-prompts-gemini?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u5275\u5efa\u4ee3\u78bc\u804a\u5929\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-chat-prompts?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u5275\u5efa\u4ee3\u78bc\u88dc\u5168\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/code/code-completion-prompts?hl=zh-cn) \u3002\n- \u77ad\u89e3 [\u8ca0\u8cac\u4efb\u7684 AI \u6700\u4f73\u5be6\u8e10\u548c Vertex AI \u7684\u5b89\u5168\u904e\u6ffe\u689d\u4ef6](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/responsible-ai?hl=zh-cn) \u3002", "guide": "Generative AI on Vertex AI"}