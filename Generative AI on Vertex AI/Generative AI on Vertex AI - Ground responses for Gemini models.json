{"title": "Generative AI on Vertex AI - Ground responses for Gemini models", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/ground-gemini", "abstract": "# Generative AI on Vertex AI - Ground responses for Gemini models\n**Preview** Vertex AI Gemini API is a Preview offering, subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section of the [Service Specific Terms](/terms/service-terms) . Pre-GA products and features are available \"as is\" and might have limited support, and changes to pre-GA products and features may not be compatible with other pre-GA versions. For more information, see the [launch stage descriptions](/products#product-launch-stages) . Further, by using Vertex AI Gemini API, you agree to the [Additional Terms](/trustedtester/aitos) for Generative AI Preview Products.\nThis page shows you how to ground Gemini 1.0 Pro text responses to a Vertex AI Search data store by using the Vertex AI API.\n", "content": "## Overview\nIn the context of generative AI, grounding is the ability to connect model output to verifiable sources of information. By providing models with access to data sources, grounding tethers their output to specific data and reduces the chances of inventing content. This is particularly important in situations where accuracy and reliability are significant, for instance with financial reporting and health reporting.\nGrounding provides the following benefits:\n- Reduces model hallucinations, which are instances where the model generates content that isn't factual.\n- Anchors model responses to specific information.\n- Enhances the trustworthiness and applicability of the generated content.## Supported models\n**Important:** You can only ground responses\nThe following models support grounding:\n- Gemini 1.0 Pro## Before you begin\nGrounding Gemini 1.0 Pro is supported by using Vertex AI Search, which acts as the data store for your content.\nThere are prerequisites needed before you can ground Gemini 1.0 Pro.\n- Enable Vertex AI Search and activate the API.\n- Create a Vertex AI Search data source and app.\n- Link your data store to your app in Vertex AI Search. The data source serves as the foundation for grounding Gemini 1.0 Pro in Vertex AI.\n- Enable Enterprise edition for your data store.\nSee the [Introduction to Vertex AI Search](/generative-ai-app-builder/docs/enterprise-search-introduction) for more.\n### Enable Vertex AI Search\n- In the Google Cloud console, go to the **Search & Conversation** page. [Search & Conversation](https://console.cloud.google.com/gen-app-builder/engines) \n- Read and agree to the Terms of Service, then click **Continue and activatethe API** . **Important:** You must accept the Discovery Solutions data use terms for every project that you want to use Vertex AI Search with.\nVertex AI Search is available in the `global` location, or the `eu` and `us` multi-region. To learn more, see [Vertex AI Search locations](/generative-ai-app-builder/docs/locations#multi-regions)\n### Create a data store in Vertex AI Search\nTo ground your models to your source data, you need to have prepared and saved your data to Vertex AI Search. To do this, you need to create a [data store in Vertex AI Search](/generative-ai-app-builder/docs/create-datastore-ingest#datastores-engines) .\nIf you are starting from scratch, you need to prepare your data for ingestion into Vertex AI Search. See [Prepare data for ingesting](/generative-ai-app-builder/docs/prepare-data) to get started. Depending on the size of your data, ingestion can take several minutes to several hours. Only unstructured data stores are supported for grounding.\nAfter you've prepared your data for ingestion, you can [Create a search data store](/generative-ai-app-builder/docs/create-data-store-es) . After you've successfully created a data store, [Create a search app](/generative-ai-app-builder/docs/create-engine-es) to link to it and [Turn Enterprise edition on](/generative-ai-app-builder/docs/enterprise-edition) .\n## Ground the Gemini 1.0 Pro model\nIf you don't know your data store ID, follow these steps:\n- In the Google Cloud console, go to the **Vertex AI Search** page and in the navigation menu, click **Data stores** . [Go to the Data stores page](https://console.cloud.google.com/gen-app-builder/data-stores) \n- Click the name of your data store.\n- On the **Data** page for your data store, get the data store ID.\nTo test a text prompt by using the Vertex AI API, send a POST request to the publisher model endpoint.\n```\nPROJECT_ID=PROJECT_ID\ncurl -X POST -H \"Authorization: Bearer $(gcloud auth print-access-token)\" -H \"Content-Type: application/json\" https://us-central1-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/gemini-1.0-pro:generateContent -d '{\n \"contents\": [{\n \"role\": \"user\",\n \"parts\": [{\n  \"text\": \"How many days of vacation have I taken this year, and how many do I have remaining??\"\n }]\n }],\n \"model\": \"projects/PROJECT_ID/locations/us-central1/publishers/google/models/gemini-1.0-pro\",\n \"tools\": [{\n \"retrieval\": {\n  \"vertexAiSearch\": {\n  \"datastore\": projects/PROJECT_ID/locations/global/collections/default_collection/dataStores/DATA_STORE_ID\n  }\n }\n }]\n}\n```To learn how to install or update the Python, see [Install the Vertex AI SDK for Python](/vertex-ai/docs/start/use-vertex-ai-python-sdk) .    For more information, see the [   Python API reference documentation](/python/docs/reference/aiplatform/latest) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/generative_ai/gemini_grounding_example.py) \n```\nfrom typing import Optionalimport vertexaifrom vertexai.preview.generative_models import (\u00a0 \u00a0 GenerationResponse,\u00a0 \u00a0 GenerativeModel,\u00a0 \u00a0 grounding,\u00a0 \u00a0 Tool,)def generate_text_with_grounding(\u00a0 \u00a0 project_id: str, location: str, data_store_path: Optional[str] = None) -> GenerationResponse:\u00a0 \u00a0 # Initialize Vertex AI\u00a0 \u00a0 vertexai.init(project=project_id, location=location)\u00a0 \u00a0 # Load the model\u00a0 \u00a0 model = GenerativeModel(model_name=\"gemini-1.0-pro\")\u00a0 \u00a0 # Create Tool for grounding\u00a0 \u00a0 if data_store_path:\u00a0 \u00a0 \u00a0 \u00a0 # Use Vertex AI Search data store\u00a0 \u00a0 \u00a0 \u00a0 # Format: projects/{project_id}/locations/{location}/collections/default_collection/dataStores/{data_store_id}\u00a0 \u00a0 \u00a0 \u00a0 tool = Tool.from_retrieval(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 grounding.Retrieval(grounding.VertexAISearch(datastore=data_store_path))\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 else:\u00a0 \u00a0 \u00a0 \u00a0 # Use Google Search for grounding (Private Preview)\u00a0 \u00a0 \u00a0 \u00a0 tool = Tool.from_google_search_retrieval(grounding.GoogleSearchRetrieval())\u00a0 \u00a0 prompt = \"What are the price, available colors, and storage size options of a Pixel Tablet?\"\u00a0 \u00a0 response = model.generate_content(prompt, tools=[tool])\u00a0 \u00a0 print(response)\n```\n## Pricing and quota\nYou are charged for both Vertex AI and Vertex AI Search usage when grounding Gemini 1.0 Pro.\n## What's next\n- Learn how to [send chat prompt requests](/vertex-ai/generative-ai/docs/multimodal/send-chat-prompts-gemini) .\n- Learn about [responsible AI best practices and Vertex AI's safety filters](/vertex-ai/generative-ai/docs/learn/responsible-ai) .\n- To learn how to ground the PaLM models, see [Grounding in Vertex AI](/vertex-ai/generative-ai/docs/grounding/ground-language-models)", "guide": "Generative AI on Vertex AI"}