{"title": "Generative AI on Vertex AI - \u6587\u672c", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/text?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u6587\u672c\n`text-bison`\n`text-unicorn`\nPaLM 2 for Text \u6a21\u578b\u975e\u5e38\u9069\u5408\u53ef\u901a\u904e\u4e00\u500b API \u97ff\u61c9\uff08\u7121\u9700\u9023\u7e8c\u5c0d\u8a71\uff09\u5b8c\u6210\u7684\u4efb\u52d9\u3002\u5c0d\u65bc\u9700\u8981\u4f86\u56de\u4ea4\u4e92\u7684\u6587\u672c\u4efb\u52d9\uff0c\u8acb\u4f7f\u7528 [Generative AI on Vertex AI API \u9032\u884c\u804a\u5929](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/text-chat?hl=zh-cn) \u3002\n\u5982\u9700\u5728\u63a7\u5236\u6aaf\u4e2d\u63a2\u7d22\u6b64\u6a21\u578b\uff0c\u8acb\u5728 Model Garden \u4e2d\u9078\u64c7 PaLM 2 for Text \u6a21\u578b\u5361\u7247\u3002  [\u524d\u5f80 Model Garden](https://console.cloud.google.com/vertex-ai/publishers/google/model-garden/text-bison?hl=zh-cn)\n", "content": "## \u4f7f\u7528\u5834\u666f\n- **\u5f59\u7e3d\uff1a** \u5275\u5efa\u5305\u542b\u539f\u59cb\u6587\u672c\u4e2d\u76f8\u95dc\u4fe1\u606f\u7684\u7c21\u77ed\u6587\u6a94\u7248\u672c\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u60f3\u7e3d\u7d50\u4e00\u4e0b\u6559\u79d1\u66f8\u7684\u7ae0\u7bc0\u5167\u5bb9\u3002\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u6839\u64da\u8a73\u7d30\u63cf\u8ff0\u7522\u54c1\u7684\u9577\u7bc7\u6bb5\u843d\u4f86\u5275\u5efa\u7c21\u6f54\u7684\u7522\u54c1\u8aaa\u660e\u3002\n- **\u554f\u7b54\uff1a** \u4ee5\u6587\u5b57\u7684\u5f62\u5f0f\u56de\u7b54\u554f\u984c\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u6839\u64da\u77e5\u8b58\u5eab\u5167\u5bb9\u81ea\u52d5\u5275\u5efa\u5e38\u898b\u554f\u984c\u89e3\u7b54 (FAQ) \u6587\u6a94\u3002\n- **\u5206\u985e\uff1a** \u7232\u63d0\u4f9b\u7684\u6587\u672c\u5206\u914d\u6a19\u7c64\u3002\u4f8b\u5982\uff0c\u6a19\u7c64\u53ef\u4ee5\u61c9\u7528\u65bc\u6587\u672c\uff0c\u4ee5\u63cf\u8ff0\u8a72\u6587\u672c\u7684\u8a9e\u6cd5\u6b63\u78ba\u7a0b\u5ea6\u3002\n- **\u60c5\u611f\u5206\u6790\uff1a** \u9019\u662f\u4e00\u7a2e\u8b58\u5225\u6587\u672c\u60c5\u611f\u7684\u5206\u985e\u5f62\u5f0f\u3002\u60c5\u611f\u6703\u8f49\u8b8a\u7232\u61c9\u7528\u65bc\u6587\u672c\u7684\u6a19\u7c64\u3002\u4f8b\u5982\uff0c\u6587\u672c\u7684\u60c5\u611f\u53ef\u4ee5\u662f\u50cf\u7a4d\u6975\u6216\u6d88\u6975\u9019\u6a23\u7684\u5169\u6975\u5c0d\u7acb\uff0c\u4e5f\u53ef\u4ee5\u662f\u50cf\u61a4\u6012\u6216\u9ad8\u8208\u9019\u6a23\u7684\u60c5\u7dd2\u3002\n- **\u5be6\u9ad4\u63d0\u53d6\uff1a** \u5f9e\u6587\u672c\u4e2d\u63d0\u53d6\u4e00\u689d\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5f9e\u6587\u7ae0\u4e2d\u63d0\u53d6\u96fb\u5f71\u540d\u7a31\u3002\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u8a2d\u8a08\u6587\u672c\u63d0\u793a\uff0c\u8acb\u53c3\u95b1 [\u8a2d\u8a08\u6587\u672c\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/text/text-prompts?hl=zh-cn) \u3002\n## HTTP \u8acb\u6c42\n```\nPOST https://us-central1-aiplatform.googleapis.com/v1/projects/{PROJECT_ID}/locations/us-central1/publishers/google/models/text-bison:predict\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [predict](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.publishers.models/predict?hl=zh-cn) \u65b9\u6cd5\u3002\n## \u6a21\u578b\u7248\u672c\n\u5982\u9700\u4f7f\u7528 [\u6700\u65b0\u7684\u6a21\u578b\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#latest-version) \uff0c\u8acb\u6307\u5b9a\u4e0d\u542b\u7248\u672c\u865f\u7684\u6a21\u578b\u540d\u7a31\uff0c\u4f8b\u5982 `text-bison` \u3002\n\u5982\u9700\u4f7f\u7528 [\u7a69\u5b9a\u7684\u6a21\u578b\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#stable-version) \uff0c\u8acb\u6307\u5b9a\u6a21\u578b\u7248\u672c\u865f\uff0c\u4f8b\u5982 `text-bison@002` \u3002\u6bcf\u500b\u7a69\u5b9a\u7248\u672c\u6703\u5728\u5f8c\u7e8c\u7a69\u5b9a\u7248\u767c\u4f48\u65e5\u671f\u5f8c\u7684\u516d\u500b\u6708\u5167\u53ef\u7528\u3002\n\u4e0b\u8868\u5305\u542b\u53ef\u7528\u7684\u7a69\u5b9a\u6a21\u578b\u7248\u672c\uff1a\n| text-bison \u6a21\u578b | \u767c\u4f48\u65e5\u671f   | \u7d42\u6b62\u65e5\u671f   |\n|:------------------|:-------------------|:------------------|\n| text-bison@002 | 2023 \u5e74 12 \u6708 6 \u65e5 | \u4e0d\u9069\u7528   |\n| text-bison@001 | 2023 \u5e74 6 \u6708 7 \u65e5 | 2024 \u5e74 7 \u6708 6 \u65e5 |\n| text-unicorn \u6a21\u578b | \u767c\u4f48\u65e5\u671f   | \u7d42\u6b62\u65e5\u671f |\n|:--------------------|:--------------------|:-----------|\n| text-unicorn@001 | 2023 \u5e74 11 \u6708 30 \u65e5 | \u4e0d\u9069\u7528  |\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6a21\u578b\u7248\u672c\u548c\u751f\u547d\u9031\u671f](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n## \u8acb\u6c42\u6b63\u6587\n```\n{\u00a0 \"instances\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"prompt\": string\u00a0 \u00a0 }\u00a0 ],\u00a0 \"parameters\": {\u00a0 \u00a0 \"temperature\": number,\u00a0 \u00a0 \"maxOutputTokens\": integer,\u00a0 \u00a0 \"topK\": integer,\u00a0 \u00a0 \"topP\": number,\u00a0 \u00a0 \"groundingConfig\": string,\u00a0 \u00a0 \"stopSequences\": [ string ],\u00a0 \u00a0 \"candidateCount\": integer,\u00a0 \u00a0 \"logprobs\": integer,\u00a0 \u00a0 \"presencePenalty\": float,\u00a0 \u00a0 \"frequencyPenalty\": float,\u00a0 \u00a0 \"echo\": boolean,\u00a0 \u00a0 \"seed\": integer\u00a0 }}\n```\n\u5c0d\u6587\u672c\u6a21\u578b `text-bison` \u4f7f\u7528\u4ee5\u4e0b\u53c3\u6578\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u8a2d\u8a08\u6587\u672c\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/text/text-prompts?hl=zh-cn) \u3002\n| \u53c3\u6578    | \u8aaa\u660e                                                                                                         | \u53ef\u63a5\u53d7\u7684\u503c                             |\n|:-----------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------|\n| prompt   | \u7528\u65bc\u751f\u6210\u6a21\u578b\u97ff\u61c9\u7684\u6587\u672c\u8f38\u5165\u3002\u63d0\u793a\u53ef\u80fd\u5305\u62ec\u5e8f\u8a00\u3001\u554f\u984c\u3001\u5efa\u8b70\u3001\u8aaa\u660e\u6216\u793a\u4f8b\u3002                                                                                        | \u6587\u672c                               |\n| temperature  | \u6eab\u5ea6 (temperature) \u5728\u751f\u6210\u56de\u8986\u671f\u9593\u7528\u65bc\u63a1\u6a23\uff0c\u5728\u61c9\u7528 topP \u548c topK \u6642\u6703\u751f\u6210\u56de\u8986\u3002\u6eab\u5ea6\u53ef\u4ee5\u63a7\u5236\u8a5e\u5143\u9078\u64c7\u7684\u96a8\u6a5f\u6027\u3002 \u8f03\u4f4e\u7684\u6eab\u5ea6\u6709\u5229\u65bc\u9700\u8981\u66f4\u5c11\u958b\u653e\u6027\u6216\u5275\u9020\u6027\u56de\u8986\u7684\u63d0\u793a\uff0c\u800c\u8f03\u9ad8\u7684\u6eab\u5ea6\u53ef\u4ee5\u5e36\u4f86\u66f4\u5177\u591a\u6a23\u6027\u6216\u5275\u9020\u6027\u7684\u7d50\u679c\u3002\u6eab\u5ea6\u7232 0 \u8868\u793a\u59cb\u7d42\u9078\u64c7\u6982\u7387\u6700\u9ad8\u7684\u8a5e\u5143\u3002\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u7d66\u5b9a\u63d0\u793a\u7684\u56de\u8986\u5927\u591a\u662f\u78ba\u5b9a\u7684\uff0c\u4f46\u53ef\u80fd\u4ecd\u7136\u6709\u5c11\u91cf\u8b8a\u5316\u3002 \u5982\u679c\u6a21\u578b\u8fd4\u56de\u7684\u56de\u7b54\u904e\u65bc\u7c60\u7d71\u3001\u904e\u65bc\u7c21\u77ed\uff0c\u6216\u8005\u6a21\u578b\u7d66\u51fa\u5f8c\u5099\u56de\u8986\uff0c\u8acb\u5617\u8a66\u63d0\u9ad8\u6eab\u5ea6\u3002          | 0.0\u20131.0 Default: 0.0                           |\n| maxOutputTokens | \u56de\u8986\u4e2d\u53ef\u751f\u6210\u7684\u8a5e\u5143\u6578\u91cf\u4e0a\u9650\u3002\u8a5e\u5143\u7d04\u7232 4 \u500b\u5b57\u7b26\u3002100 \u500b\u8a5e\u5143\u5c0d\u61c9\u5927\u7d04 60-80 \u500b\u55ae\u8a5e\u3002 \u6307\u5b9a\u8f03\u4f4e\u7684\u503c\u53ef\u7372\u5f97\u8f03\u77ed\u7684\u56de\u8986\uff0c\u6307\u5b9a\u8f03\u9ad8\u7684\u503c\u53ef\u7372\u5f97\u53ef\u80fd\u8f03\u9577\u7684\u56de\u8986\u3002                                                                      | 1\u20132048 \u7528\u65bc text-bison\uff08\u6700\u65b0\uff09 1\u20131024 \u7528\u65bc text-bison@002 Default: 1024              |\n| topK    | Top-K \u53ef\u66f4\u6539\u6a21\u578b\u9078\u64c7\u8f38\u51fa\u8a5e\u5143\u7684\u65b9\u5f0f\u3002\u5982\u679c top-K \u8a2d\u7232 1\uff0c\u8868\u793a\u6240\u9078\u8a5e\u5143\u662f\u6a21\u578b\u8a5e\u5f59\u8868\u7684\u6240\u6709\u8a5e\u5143\u4e2d\u6982\u7387\u6700\u9ad8\u7684\u8a5e\u5143\uff08\u4e5f\u7a31\u7232\u8caa\u5fc3\u89e3\u78bc\uff09\u3002\u5982\u679c top-K \u8a2d\u7232 3\uff0c\u5247\u8868\u793a\u7cfb\u7d71\u5c07\u5f9e 3 \u500b\u6982\u7387\u6700\u9ad8\u7684\u8a5e\u5143\uff08\u901a\u904e\u6eab\u5ea6\u78ba\u5b9a\uff09\u4e2d\u9078\u64c7\u4e0b\u4e00\u500b\u8a5e\u5143\u3002 \u5728\u6bcf\u500b\u8a5e\u5143\u9078\u64c7\u6b65\u9a5f\u4e2d\uff0c\u7cfb\u7d71\u90fd\u6703\u5c0d\u6982\u7387\u6700\u9ad8\u7684 top-K \u8a5e\u5143\u9032\u884c\u63a1\u6a23\u3002\u7136\u5f8c\uff0c\u7cfb\u7d71\u6703\u6839\u64da top-P \u9032\u4e00\u6b65\u904e\u6ffe\u8a5e\u5143\uff0c\u4e26\u4f7f\u7528\u6eab\u5ea6\u63a1\u6a23\u9078\u64c7\u6700\u7d42\u7684\u8a5e\u5143\u3002 \u6307\u5b9a\u8f03\u4f4e\u7684\u503c\u53ef\u7372\u5f97\u96a8\u6a5f\u7a0b\u5ea6\u8f03\u4f4e\u7684\u56de\u7b54\uff0c\u6307\u5b9a\u8f03\u9ad8\u7684\u503c\u53ef\u7372\u5f97\u96a8\u6a5f\u7a0b\u5ea6\u8f03\u9ad8\u7684\u56de\u7b54\u3002 | 1\u201340 Default: 40                            |\n| topP    | Top-P \u53ef\u66f4\u6539\u6a21\u578b\u9078\u64c7\u8f38\u51fa\u8a5e\u5143\u7684\u65b9\u5f0f\u3002\u7cfb\u7d71\u6703\u6309\u7167\u6982\u7387\u5f9e\u6700\u9ad8\uff08\u898b top-K\uff09\u5230\u6700\u4f4e\u7684\u9806\u5e8f\u9078\u64c7\u8a5e\u5143\uff0c\u76f4\u5230\u6240\u9078\u8a5e\u5143\u7684\u6982\u7387\u7e3d\u548c\u7b49\u65bc top-P \u7684\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8a5e\u5143 A\u3001B \u548c C \u7684\u6982\u7387\u5206\u5225\u7232 0.3\u30010.2 \u548c 0.1\uff0c\u4e26\u4e14 top-P \u503c\u7232 0.5\uff0c\u5247\u6a21\u578b\u5c07\u9078\u64c7 A \u6216 B \u4f5c\u7232\u4e0b\u4e00\u500b\u8a5e\u5143\uff08\u901a\u904e\u6eab\u5ea6\u78ba\u5b9a\uff09\uff0c\u4e26\u6703\u6392\u9664 C\uff0c\u5c07\u5176\u4f5c\u7232\u5019\u9078\u8a5e\u5143\u3002 \u6307\u5b9a\u8f03\u4f4e\u7684\u503c\u53ef\u7372\u5f97\u96a8\u6a5f\u7a0b\u5ea6\u8f03\u4f4e\u7684\u56de\u7b54\uff0c\u6307\u5b9a\u8f03\u9ad8\u7684\u503c\u53ef\u7372\u5f97\u96a8\u6a5f\u7a0b\u5ea6\u8f03\u9ad8\u7684\u56de\u7b54\u3002               | 0.0\u20131.0 Default: 0.95                           |\n| stopSequence  | \u6307\u5b9a\u4e00\u500b\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u544a\u77e5\u6a21\u578b\u5728\u97ff\u61c9\u4e2d\u9047\u5230\u5176\u4e2d\u4e00\u500b\u5b57\u7b26\u4e32\u6642\uff0c\u505c\u6b62\u751f\u6210\u6587\u672c\u3002\u5982\u679c\u67d0\u500b\u5b57\u7b26\u4e32\u5728\u97ff\u61c9\u4e2d\u591a\u6b21\u51fa\u73fe\uff0c\u5247\u97ff\u61c9\u6703\u5728\u9996\u6b21\u51fa\u73fe\u7684\u4f4d\u7f6e\u622a\u65b7\u3002\u5b57\u7b26\u4e32\u5340\u5206\u5927\u5c0f\u5beb\u3002 \u4f8b\u5982\uff0c\u672a\u6307\u5b9a stopSequences \u6642\uff0c\u5982\u679c\u4e0b\u9762\u7684\u5167\u5bb9\u662f\u8fd4\u56de\u7684\u56de\u8986\uff1a public static string reverse(string myString) \u5247\u8fd4\u56de\u7684\u56de\u8986\u7232\u4ee5\u4e0b\u5167\u5bb9\uff0c\u5176\u4e2d stopSequences \u8a2d\u7f6e\u7232 [\"Str\", \"reverse\"]\uff1a public static string                  | default: []                             |\n| groundingConfig | \u4f7f\u7528\u9023\u63a5\u529f\u80fd\u6642\uff0c\u60a8\u53ef\u4ee5\u5728\u4f7f\u7528\u8a9e\u8a00\u6a21\u578b\u6642\u5f15\u7528\u7279\u5b9a\u6578\u64da\u3002\u9023\u63a5\u6a21\u578b\u5f8c\uff0c\u6a21\u578b\u53ef\u4ee5\u5f15\u7528\u4ee3\u78bc\u5eab\u4e2d\u7684\u5167\u90e8\u3001\u6a5f\u5bc6\u6216\u5176\u4ed6\u7279\u5b9a\u6578\u64da\uff0c\u4e26\u5728\u56de\u8986\u4e2d\u5305\u542b\u6578\u64da\u3002\u50c5\u652f\u6301\u4f86\u81ea Vertex AI Search \u7684\u6578\u64da\u5b58\u5132\u5340\u3002                                                              | \u8def\u5f91\u61c9\u63a1\u7528\u5982\u4e0b\u683c\u5f0f\uff1aprojects/{project_number_or_id}/locations/global/collections/{collection_name}/dataStores/{DATA_STORE_ID} |\n| candidateCount | \u8981\u8fd4\u56de\u7684\u97ff\u61c9\u8b8a\u9ad4\u6578\u91cf\u3002                                                                                                    | 1\u20134 Default: 1                            |\n| logprobs   | \u8fd4\u56de\u6bcf\u500b\u751f\u6210\u6b65\u9a5f\u4e2d\u6392\u540d\u9760\u524d\u7684 logprobs \u6700\u53ef\u80fd\u5019\u9078\u8a5e\u5143\u53ca\u5176\u5c0d\u6578\u6982\u7387\u3002\u7cfb\u7d71\u6703\u59cb\u7d42\u8fd4\u56de\u6bcf\u500b\u6b65\u9a5f\u7684\u9078\u5b9a\u8a5e\u5143\u53ca\u5176\u5c0d\u6578\u6982\u7387\u3002\u9078\u64c7\u7684\u8a5e\u5143\u4e0d\u4e00\u5b9a\u662f\u6392\u540d\u9760\u524d\u7684 logprobs \u6700\u53ef\u80fd\u5019\u9078\u8a5e\u5143\u3002                                                                | 0-5                               |\n| frequencyPenalty | \u6b63\u503c\u6703\u61f2\u7f70\u751f\u6210\u7684\u6587\u672c\u4e2d\u53cd\u8986\u51fa\u73fe\u7684\u8a5e\u5143\uff0c\u5f9e\u800c\u964d\u4f4e\u91cd\u8907\u5167\u5bb9\u6982\u7387\u3002\u53ef\u63a5\u53d7\u7684\u503c\u7232 -2.0-2.0\u3002                                                                                     | Minimum value: -2.0 Maximum value: 2.0                      |\n| presencePenalty | \u6b63\u503c\u6703\u61f2\u7f70\u5df2\u751f\u6210\u6587\u672c\u4e2d\u5df2\u5b58\u5728\u7684\u8a5e\u5143\uff0c\u5f9e\u800c\u589e\u52a0\u751f\u6210\u66f4\u591a\u6a23\u5316\u5167\u5bb9\u7684\u6982\u7387\u3002\u53ef\u63a5\u53d7\u7684\u503c\u7232 -2.0-2.0\u3002                                                                                   | Minimum value: -2.0 Maximum value: 2.0                      |\n| echo    | \u5982\u679c\u7232 true\uff0c\u5247\u63d0\u793a\u6703\u5728\u751f\u6210\u7684\u6587\u672c\u4e2d\u56de\u986f\u3002                                                                                                | Optional                              |\n| seed    | \u89e3\u78bc\u5668\u4f7f\u7528\u50de\u96a8\u6a5f\u6578\u751f\u6210\u5668\u751f\u6210\u96a8\u6a5f\u566a\u8072\uff0c\u6eab\u5ea6 * \u566a\u8072\u5728\u63a1\u6a23\u4e4b\u524d\u6dfb\u52a0\u5230 logits\u3002\u50de\u96a8\u6a5f\u6578\u751f\u6210\u5668 (prng) \u5c07\u7a2e\u5b50\u4f5c\u7232\u8f38\u5165\uff0c\u4e26\u4f7f\u7528\u540c\u4e00\u7a2e\u5b50\u751f\u6210\u76f8\u540c\u7684\u8f38\u51fa\u3002 \u5982\u679c\u672a\u8a2d\u7f6e\u7a2e\u5b50\uff0c\u5247\u89e3\u78bc\u5668\u4e2d\u4f7f\u7528\u7684\u7a2e\u5b50\u5177\u6709\u4e0d\u78ba\u5b9a\u6027\uff0c\u56e0\u6b64\u751f\u6210\u7684\u96a8\u6a5f\u566a\u8072\u5177\u6709\u4e0d\u78ba\u5b9a\u6027\u3002\u5982\u679c\u8a2d\u7f6e\u4e86\u7a2e\u5b50\uff0c\u5247\u751f\u6210\u7684\u96a8\u6a5f\u566a\u8072\u5177\u6709\u78ba\u5b9a\u6027\u3002                                       | Optional                              |\n## \u793a\u4f8b\u8acb\u6c42\n\u5982\u9700\u4f7f\u7528 Vertex AI API \u6e2c\u8a66\u6587\u672c\u63d0\u793a\uff0c\u8acb\u5411\u767c\u4f48\u65b9\u6a21\u578b\u7aef\u9ede\u767c\u9001 POST \u8acb\u6c42\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n\u5982\u9700\u77ad\u89e3\u5176\u4ed6\u5b57\u6bb5\uff0c\u8acb\u67e5\u770b\n [\u8acb\u6c42\u6b63\u6587](#request_body) \n\u8868\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/text-bison:predict\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"instances\": [ { \"prompt\": \"Give me ten interview questions for the role of program manager.\"}\n ],\n \"parameters\": {\n \"temperature\": 0.2,\n \"maxOutputTokens\": 256,\n \"topK\": 40,\n \"topP\": 0.95,\n \"logprobs\": 2\n }\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/text-bison:predict\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/text-bison:predict\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6703\u6536\u5230\u985e\u4f3c [\u793a\u4f8b\u97ff\u61c9](#sample_response) \u7684 JSON \u97ff\u61c9\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/generative_ai/ideation.py) \n```\nimport vertexaifrom vertexai.language_models import TextGenerationModeldef interview(\u00a0 \u00a0 temperature: float,\u00a0 \u00a0 project_id: str,\u00a0 \u00a0 location: str,) -> str:\u00a0 \u00a0 \"\"\"Ideation example with a Large Language Model\"\"\"\u00a0 \u00a0 vertexai.init(project=project_id, location=location)\u00a0 \u00a0 # TODO developer - override these parameters as needed:\u00a0 \u00a0 parameters = {\u00a0 \u00a0 \u00a0 \u00a0 \"temperature\": temperature, \u00a0# Temperature controls the degree of randomness in token selection.\u00a0 \u00a0 \u00a0 \u00a0 \"max_output_tokens\": 256, \u00a0# Token limit determines the maximum amount of text output.\u00a0 \u00a0 \u00a0 \u00a0 \"top_p\": 0.8, \u00a0# Tokens are selected from most probable to least until the sum of their probabilities equals the top_p value.\u00a0 \u00a0 \u00a0 \u00a0 \"top_k\": 40, \u00a0# A top_k of 1 means the selected token is the most probable among all tokens.\u00a0 \u00a0 }\u00a0 \u00a0 model = TextGenerationModel.from_pretrained(\"text-bison@002\")\u00a0 \u00a0 response = model.predict(\u00a0 \u00a0 \u00a0 \u00a0 \"Give me ten interview questions for the role of program manager.\",\u00a0 \u00a0 \u00a0 \u00a0 **parameters,\u00a0 \u00a0 )\u00a0 \u00a0 print(f\"Response from Model: {response.text}\")\u00a0 \u00a0 return response.text\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/predict-text-prompt.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const aiplatform = require('@google-cloud/aiplatform');// Imports the Google Cloud Prediction service clientconst {PredictionServiceClient} = aiplatform.v1;// Import the helper module for converting arbitrary protobuf.Value objects.const {helpers} = aiplatform;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};const publisher = 'google';const model = 'text-bison@001';// Instantiates a clientconst predictionServiceClient = new PredictionServiceClient(clientOptions);async function callPredict() {\u00a0 // Configure the parent resource\u00a0 const endpoint = `projects/${project}/locations/${location}/publishers/${publisher}/models/${model}`;\u00a0 const prompt = {\u00a0 \u00a0 prompt:\u00a0 \u00a0 \u00a0 'Give me ten interview questions for the role of program manager.',\u00a0 };\u00a0 const instanceValue = helpers.toValue(prompt);\u00a0 const instances = [instanceValue];\u00a0 const parameter = {\u00a0 \u00a0 temperature: 0.2,\u00a0 \u00a0 maxOutputTokens: 256,\u00a0 \u00a0 topP: 0.95,\u00a0 \u00a0 topK: 40,\u00a0 };\u00a0 const parameters = helpers.toValue(parameter);\u00a0 const request = {\u00a0 \u00a0 endpoint,\u00a0 \u00a0 instances,\u00a0 \u00a0 parameters,\u00a0 };\u00a0 // Predict request\u00a0 const response = await predictionServiceClient.predict(request);\u00a0 console.log('Get text prompt response');\u00a0 console.log(response);}callPredict();\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/PredictTextPromptSample.java) \n```\nimport com.google.cloud.aiplatform.v1beta1.EndpointName;import com.google.cloud.aiplatform.v1beta1.PredictResponse;import com.google.cloud.aiplatform.v1beta1.PredictionServiceClient;import com.google.cloud.aiplatform.v1beta1.PredictionServiceSettings;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.ArrayList;import java.util.List;public class PredictTextPromptSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // Details of designing text prompts for supported large language models:\u00a0 \u00a0 // https://cloud.google.com/vertex-ai/docs/generative-ai/text/text-overview\u00a0 \u00a0 String instance =\u00a0 \u00a0 \u00a0 \u00a0 \"{ \\\"prompt\\\": \" + \"\\\"Give me ten interview questions for the role of program manager.\\\"}\";\u00a0 \u00a0 String parameters =\u00a0 \u00a0 \u00a0 \u00a0 \"{\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"temperature\\\": 0.2,\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"maxOutputTokens\\\": 256,\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"topP\\\": 0.95,\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" \u00a0\\\"topK\\\": 40\\n\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"}\";\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String publisher = \"google\";\u00a0 \u00a0 String model = \"text-bison@001\";\u00a0 \u00a0 predictTextPrompt(instance, parameters, project, location, publisher, model);\u00a0 }\u00a0 // Get a text prompt from a supported text model\u00a0 public static void predictTextPrompt(\u00a0 \u00a0 \u00a0 String instance,\u00a0 \u00a0 \u00a0 String parameters,\u00a0 \u00a0 \u00a0 String project,\u00a0 \u00a0 \u00a0 String location,\u00a0 \u00a0 \u00a0 String publisher,\u00a0 \u00a0 \u00a0 String model)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 String endpoint = String.format(\"%s-aiplatform.googleapis.com:443\", location);\u00a0 \u00a0 PredictionServiceSettings predictionServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceSettings.newBuilder().setEndpoint(endpoint).build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (PredictionServiceClient predictionServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceClient.create(predictionServiceSettings)) {\u00a0 \u00a0 \u00a0 final EndpointName endpointName =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EndpointName.ofProjectLocationPublisherModelName(project, location, publisher, model);\u00a0 \u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 \u00a0 Value.Builder instanceValue = Value.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(instance, instanceValue);\u00a0 \u00a0 \u00a0 List<Value> instances = new ArrayList<>();\u00a0 \u00a0 \u00a0 instances.add(instanceValue.build());\u00a0 \u00a0 \u00a0 // Use Value.Builder to convert instance to a dynamically typed value that can be\u00a0 \u00a0 \u00a0 // processed by the service.\u00a0 \u00a0 \u00a0 Value.Builder parameterValueBuilder = Value.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(parameters, parameterValueBuilder);\u00a0 \u00a0 \u00a0 Value parameterValue = parameterValueBuilder.build();\u00a0 \u00a0 \u00a0 PredictResponse predictResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predictionServiceClient.predict(endpointName, instances, parameterValue);\u00a0 \u00a0 \u00a0 System.out.println(\"Predict Response\");\u00a0 \u00a0 \u00a0 System.out.println(predictResponse);\u00a0 \u00a0 }\u00a0 }}\n```\n## \u97ff\u61c9\u6b63\u6587\n```\n{\u00a0 \"predictions\":[\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"content\": string,\u00a0 \u00a0 \u00a0 \"citationMetadata\": {\u00a0 \u00a0 \u00a0 \u00a0 \"citations\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"startIndex\": integer,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"endIndex\": integer,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"url\": string,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"title\": string,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"license\": string,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"publicationDate\": string\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"logprobs\": {\u00a0 \u00a0 \u00a0 \u00a0 \"tokenLogProbs\": [ float ],\u00a0 \u00a0 \u00a0 \u00a0 \"tokens\": [ string ],\u00a0 \u00a0 \u00a0 \u00a0 \"topLogProbs\": [ { map<string, float> } ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"safetyAttributes\": {\u00a0 \u00a0 \u00a0 \u00a0 \"categories\": [ string ],\u00a0 \u00a0 \u00a0 \u00a0 \"blocked\": boolean,\u00a0 \u00a0 \u00a0 \u00a0 \"scores\": [ float ],\u00a0 \u00a0 \u00a0 \u00a0 \"errors\": [ int ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ],\u00a0 \"metadata\": {\u00a0 \u00a0 \"tokenMetadata\": {\u00a0 \u00a0 \u00a0 \"input_token_count\": {\u00a0 \u00a0 \u00a0 \u00a0 \"total_tokens\": integer,\u00a0 \u00a0 \u00a0 \u00a0 \"total_billable_characters\": integer\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"output_token_count\": {\u00a0 \u00a0 \u00a0 \u00a0 \"total_tokens\": integer,\u00a0 \u00a0 \u00a0 \u00a0 \"total_billable_characters\": integer\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\n| \u97ff\u61c9\u5143\u7d20   | \u8aaa\u660e                         |\n|:-------------------|:--------------------------------------------------------------------------------------------------------|\n| content   | \u6839\u64da\u8f38\u5165\u6587\u672c\u751f\u6210\u7684\u7d50\u679c\u3002                    |\n| categories   | \u8207\u6240\u751f\u6210\u5167\u5bb9\u95dc\u806f\u7684\u201c\u5b89\u5168\u5c6c\u6027\u201d\u985e\u5225\u7684\u986f\u793a\u540d\u7a31\u3002\u9806\u5e8f\u8207\u5f97\u5206\u5339\u914d\u3002           |\n| scores    | \u6bcf\u500b\u985e\u5225\u7684\u7f6e\u4fe1\u5ea6\u5206\u6578\u8d8a\u9ad8\uff0c\u8868\u793a\u7f6e\u4fe1\u5ea6\u8d8a\u9ad8\u3002                |\n| blocked   | \u7528\u65bc\u6307\u793a\u6a21\u578b\u7684\u8f38\u5165\u6216\u8f38\u51fa\u662f\u5426\u5df2\u88ab\u963b\u6b62\u7684\u4e00\u500b\u6a19\u8a8c\u3002              |\n| errors    | \u78ba\u5b9a\u8f38\u5165\u6216\u8f38\u51fa\u88ab\u963b\u6b62\u7684\u539f\u56e0\u7684\u932f\u8aa4\u4ee3\u78bc\u3002\u5982\u9700\u67e5\u770b\u932f\u8aa4\u4ee3\u78bc\u5217\u8868\uff0c\u8acb\u53c3\u95b1\u5b89\u5168\u904e\u6ffe\u5668\u548c\u5c6c\u6027\u3002     |\n| startIndex   | \u9810\u6e2c\u8f38\u51fa\u4e2d\u5f15\u7528\u958b\u59cb\u4f4d\u7f6e\u7684\u7d22\u5f15\uff08\u542b\u908a\u754c\u503c\uff09\u3002\u5fc5\u9808 >= 0 \u4e14 < end_index\u3002         |\n| endIndex   | \u9810\u6e2c\u8f38\u51fa\u4e2d\u5f15\u7528\u7d50\u675f\u4f4d\u7f6e\u7684\u7d22\u5f15\uff08\u4e0d\u542b\u908a\u754c\u503c\uff09\u3002\u5fc5\u9808 > start_index \u4e14 < len(output)\u3002      |\n| url    | \u8207\u6b64\u5f15\u7528\u95dc\u806f\u7684\u7db2\u5740\u3002\u5982\u679c\u5b58\u5728\uff0c\u6b64\u7db2\u5740\u6703\u93c8\u63a5\u5230\u6b64\u5f15\u7528\u4f86\u6e90\u7684\u7db2\u9801\u3002\u53ef\u80fd\u7684\u7db2\u5740\u5305\u62ec\u65b0\u805e\u7db2\u7ad9\u3001GitHub \u4ee3\u78bc\u5eab\u7b49\u3002 |\n| title    | \u8207\u6b64\u5f15\u7528\u95dc\u806f\u7684\u6a19\u984c\u3002\u5982\u679c\u5b58\u5728\uff0c\u5247\u5f15\u7528\u6b64\u5f15\u7528\u4f86\u6e90\u7684\u6a19\u984c\u3002\u53ef\u80fd\u7684\u6a19\u984c\u5305\u62ec\u65b0\u805e\u6a19\u984c\u3001\u66f8\u540d\u7b49\u3002     |\n| license   | \u8207\u6b64\u5f15\u7528\u95dc\u806f\u7684\u8a31\u53ef\u3002\u5982\u679c\u5b58\u5728\uff0c\u5247\u5f15\u7528\u6b64\u5f15\u7528\u4f86\u6e90\u7684\u8a31\u53ef\u3002\u53ef\u80fd\u7684\u8a31\u53ef\u5305\u62ec\u4ee3\u78bc\u8a31\u53ef\uff0c\u4f8b\u5982 mit \u8a31\u53ef\u3002   |\n| publicationDate | \u8207\u6b64\u5f15\u7528\u95dc\u806f\u7684\u767c\u4f48\u65e5\u671f\u3002\u5982\u679c\u5b58\u5728\uff0c\u5247\u5f15\u7528\u6b64\u5f15\u7528\u4f86\u6e90\u7684\u767c\u4f48\u65e5\u671f\u3002\u53ef\u80fd\u7684\u683c\u5f0f\u7232 YYYY\u3001YYYY-MM\u3001YYYY-MM-DD\u3002 |\n| input_token_count | \u8f38\u5165\u8a5e\u5143\u6578\u3002\u9019\u662f\u6240\u6709\u63d0\u793a\u3001\u524d\u7db4\u548c\u5f8c\u7db4\u4e2d\u7684\u8a5e\u5143\u7e3d\u6578\u3002              |\n| output_token_count | \u8f38\u51fa\u8a5e\u5143\u6578\u3002\u9019\u662f\u6240\u6709\u9810\u6e2c\u4e2d content \u4e2d\u7684\u8a5e\u5143\u7e3d\u6578\u3002              |\n| tokens    | \u63a1\u6a23\u8a5e\u5143\u3002                        |\n| tokenLogProbs  | \u63a1\u6a23\u8a5e\u5143\u7684\u5c0d\u6578\u6982\u7387\u3002                     |\n| topLogProb   | \u6bcf\u500b\u6b65\u9a5f\u4e2d\u6700\u53ef\u80fd\u7684\u5019\u9078\u8a5e\u5143\u53ca\u5176\u5c0d\u6578\u6982\u7387\u3002                |\n| logprobs   | \u201clogprobs\u201d\u53c3\u6578\u7684\u7d50\u679c\u30021-1 \u6620\u5c04\u5230\u201c\u5019\u9078\u201d\u3002                |\n## \u793a\u4f8b\u97ff\u61c9\n```\n{\u00a0 \"predictions\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"citationMetadata\":{\u00a0 \u00a0 \u00a0 \u00a0 \"citations\": [ ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"safetyAttributes\":{\u00a0 \u00a0 \u00a0 \u00a0 \"scores\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.1\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"categories\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Finance\"\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"blocked\": false\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"content\":\"1. What is your experience with project management?\\n2. What are your strengths and weaknesses as a project manager?\\n3. How do you handle conflict and difficult situations?\\n4. How do you communicate with stakeholders?\\n5. How do you stay organized and on track?\\n6. How do you manage your time effectively?\\n7. What are your goals for your career?\\n8. Why are you interested in this position?\\n9. What are your salary expectations?\\n10. What are your availability and start date?\",\u00a0 \u00a0 \u00a0 \"logprobs\": {\u00a0 \u00a0 \u00a0 \u00a0 \"tokenLogProbs\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 -0.1,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 -0.2\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"tokens\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"vertex\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \" rocks!\"\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"topLogProbs\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"vertex\": -0.1,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"hello\": -0.2\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \" rocks!\": -0.2,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \" world!\": -0.3\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 \"metadata\": {\u00a0 \u00a0 \u00a0 \"tokenMetadata\": {\u00a0 \u00a0 \u00a0 \u00a0 \"outputTokenCount\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"totalTokens\": 153,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"totalBillableCharacters\": 537\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"inputTokenCount\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"totalBillableCharacters\": 54,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"totalTokens\": 12\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\n## \u6d41\u5f0f\u50b3\u8f38\u4f86\u81ea\u751f\u6210\u5f0f AI \u6a21\u578b\u7684\u97ff\u61c9\n\u5c0d\u65bc API \u7684\u6d41\u5f0f\u50b3\u8f38\u8acb\u6c42\u548c\u975e\u6d41\u5f0f\u50b3\u8f38\u8acb\u6c42\uff0c\u9019\u4e9b\u53c3\u6578\u662f\u76f8\u540c\u7684\u3002\n\u5982\u9700\u4f7f\u7528 REST API \u67e5\u770b\u793a\u4f8b\u4ee3\u78bc\u8acb\u6c42\u548c\u97ff\u61c9\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528 REST API \u7684\u793a\u4f8b](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/streaming?hl=zh-cn#rest) \u3002\n\u5982\u9700\u4f7f\u7528 Python \u7248 Vertex AI SDK \u67e5\u770b\u793a\u4f8b\u4ee3\u78bc\u8acb\u6c42\u548c\u97ff\u61c9\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528 Python \u7248 Vertex AI SDK \u7684\u793a\u4f8b](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/streaming?hl=zh-cn#sdk) \u3002", "guide": "Generative AI on Vertex AI"}