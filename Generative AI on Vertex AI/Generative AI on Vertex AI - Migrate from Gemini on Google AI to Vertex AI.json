{"title": "Generative AI on Vertex AI - Migrate from Gemini on Google AI to Vertex AI", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/migrate/migrate-google-ai", "abstract": "# Generative AI on Vertex AI - Migrate from Gemini on Google AI to Vertex AI\nIf you are new to Gemini, using the [quickstarts](https://ai.google.dev/tutorials/python_quickstart) and [plans](https://ai.google.dev/pricing) for [Google AI Studio](https://ai.google.dev/tutorials/ai-studio_quickstart) is the fastest way to get started.\nHowever, as your generative AI solutions mature, you may need a platform for building and deploying generative AI applications and solutions end to end. Google Cloud provides a comprehensive ecosystem of tools to enable developers to harness the power of generative AI, from the initial stages of app deployment to managing complex data at scale. Google Cloud's Vertex AI platform offers a suite of MLOps tools that streamline the usage, deployment, and monitoring of AI models for efficiency and reliability.\nAdditionally, integrations with databases, DevOps tools, logging, monitoring, and IAM provide a holistic approach to managing the entire generative AI lifecycle.\nHere are some examples of common use cases that are well-suited for Google Cloud offerings.\n- Productionize your apps and solutions. Products like [Cloud Functions](https://cloud.google.com/functions/docs/concepts/overview) and [Cloud Run](https://cloud.google.com/run/docs/overview/what-is-cloud-run) lets you to deploy apps with enterprise-grade scale, security and privacy. Find more details  about security and privacy on the [Security, Privacy, and Cloud Compliance on Google Cloud](https://cloud.google.com/security) guide.\n- Use Vertex AI for end to end MLOps capabilities from tuning to vector similarity-search and  ML pipelines.\n- Trigger your LLM call with event-driven architecture with [Cloud Functions](https://cloud.google.com/functions/docs/concepts/overview) or [Cloud Run](https://cloud.google.com/run/docs/overview/what-is-cloud-run) .\n- Monitor usage of your app with [Cloud Logging](https://cloud.google.com/logging/docs) and [BigQuery](https://cloud.google.com/logging/docs/export/bigquery) .\n- Store your data with enterprise-grade security, at scale with services like [BigQuery](https://cloud.google.com/bigquery/docs) , [Cloud Storage](https://cloud.google.com/storage/docs/introduction) ,  and [Cloud SQL](https://cloud.google.com/sql) .\n- Perform retrieval-augmented generation (RAG) using data in the cloud with [BigQuery](https://cloud.google.com/bigquery/docs) or [Cloud Storage](https://cloud.google.com/storage/docs/introduction) .\n- Create and schedule data pipelines. You can [schedule jobs](https://cloud.google.com/scheduler/docs/schedule-run-cron-job) using [Cloud Scheduler](https://cloud.google.com/scheduler/docs/overview) .\n- Apply LLMs to your data in the cloud. If you store data in Cloud Storage or BigQuery,  you can prompt LLMs over that data. For example to extract information, summarize or ask  questions about it.\n- Leverage Google Cloud's [data governance/residency](https://cloud.google.com/learn/what-is-data-governance) policies to manage your data lifecycle.", "content": "## Google AI versus Vertex AI differences\nThe following table summarizes the main differences between Google AI and the Vertex AI to help you decide which option is right for your use case:\n| Features     | Google AI Gemini API        | Google Cloud Vertex AI Gemini API              |\n|:---------------------------|:--------------------------------------------------|:---------------------------------------------------------------------------------------|\n| Latest Gemini models  | Gemini Pro and Gemini Ultra      | Gemini Pro and Gemini Ultra               |\n| Sign up     | Google account         | Google Cloud account (with terms agreement and billing)        |\n| Authentication    | API key           | Google Cloud service account               |\n| User interface playground | Google AI Studio         | Vertex AI Studio                  |\n| API & SDK     | Python, Node.js, Android (Kotlin/Java), Swift, Go | SDK supports Python, Node.js, Java, Go             |\n| Free tier     | Yes            | $300 Google Cloud credit for new users             |\n| Quota (Request per minute) | 60 (can request increase)       | Increase upon request (default: 60)             |\n| Enterprise support   | No            | Customer encryption key Virtual private cloud Data residency Access transparency |\n| MLOps      | No            | Full MLOps on Vertex AI (Examples: model evaluation, Model Monitoring, Model Registry) |\nThe following are additional considerations to note when migrating:\n- You can use your existing Google Cloud project  (the same one you used to generate your API key) or you can [create a new Google Cloud project.](https://cloud.google.com/resource-manager/docs/creating-managing-projects) \n- Supported regions may differ between Google AI Studio and Vertex AI. See the list of [supported regions for generative AI on Google Cloud.](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/locations-genai) \n- Any models you created in Google AI Studio need to be retrained in Vertex AI.## Migrate from Gemini on Google AI to Vertex AI\nThis section shows you how to migrate from using Google AI Gemini to Vertex AI Gemini in Google Cloud.\n### Start using Vertex AI Studio\nThe easiest way to get started using Gemini through Vertex AI is to use the Vertex AI Studio.\n- If you previously created an API key from Google AI Studio, then a Google Cloud project was already created for you and you can use the same project. To find your Google Cloud project, go to the [API key](https://makersuite.google.com/app/apikey) on Google AI Studio.\n- Otherwise, you will need to create a Google Cloud project and enable the Vertex AI APIs. Visit [Set up a project](https://cloud.google.com/vertex-ai/docs/start/cloud-environment) guide for instructions.\n- Go to the [Google Cloud console](https://console.cloud.google.com/) .\n- [Enable billing](https://cloud.google.com/billing/docs/how-to/modify-project#how-to-enable-billing) on your Google Cloud project if not already enabled. New users to Google Cloud will have a [$300] credit.\n- Go to [Vertex AI Studio](https://console.cloud.google.com/vertex-ai/generative) with this link. You can also search for \"Vertex AI Studio\" in the search bar.\nNow you can start using Vertex AI Studio. Visit the [Overview of Generative AI on Vertex AI](/vertex-ai/generative-ai/docs/learn/overview#gen-ai-studio) to learn more.\n### Python: Migrate to the Vertex AI Gemini API\nThe following sections show code snippets to help you migrate your Python code to use the Vertex AI Gemini API.\nOn Vertex AI, you don't need an API key. Instead, Gemini on Vertex AI is managed using IAM access, which controls permission for a user, a group, or a service account to call the Gemini API through the Vertex AI SDK.\nThere are many ways to authenticate. You can follow this [decision tree to choose the right authentication method for your use case](https://cloud.google.com/docs/authentication#auth-decision-tree) .\nTo make inference calls to Vertex AI, you must also make sure you have [Vertex AI User](https://cloud.google.com/vertex-ai/docs/general/access-control#aiplatform.user) enabled.\n| Google AI                                                  | Vertex AI                                                                 |\n|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| # To install the Python SDK, use this CLI command: # pip install google-generativeai from google.generativeai import GenerativeModel from google.colab import userdata genai.configure(userdata.get('API_KEY')) | # To install the Python SDK, use this CLI command: # pip install google-cloud-aiplatform import vertexai from vertexai.generative_models import GenerativeModel, Image PROJECT_ID = \"\" REGION = \"\" # e.g. us-central1 vertexai.init(project=PROJECT_ID, location=REGION) |\n| Google AI                                     | Vertex AI                                     |\n|:----------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------|\n| model = GenerativeModel('gemini-1.0-pro') response = model.generate_content('The opposite of hot is') print(response.text) # The opposite of hot is cold. | model = GenerativeModel('gemini-1.0-pro') response = model.generate_content('The opposite of hot is') print(response.text) # The opposite of hot is cold. |\n| Google AI                                                            | Vertex AI                                                           |\n|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| import PIL.Image multimodal_model = GenerativeModel('gemini-1.0-pro-vision') image = PIL.Image.open('image.jpg') response = multimodal_model.generate_content(['What is this picture?', image]) print(response.text) # A cat is shown in this picture. | multimodal_model = GenerativeModel(\"gemini-1.0-pro-vision\") image = Image.load_from_file(\"image.jpg\") response = multimodal_model.generate_content([\"What is shown in this image?\", image]) print(response.text) # A cat is shown in this picture. |\n| Google AI                                       | Vertex AI                                       |\n|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| model = GenerativeModel('gemini-1.0-pro') chat = model.start_chat() print(chat.send_message(\"How are you?\").text) print(chat.send_message(\"What can you do?\").text) | model = GenerativeModel(\"gemini-1.0-pro\") chat = model.start_chat() print(chat.send_message(\"How are you?\").text) print(chat.send_message(\"What can you do?\").text) |\n### Migrate prompts to Vertex AI Studio\nYour Google AI Studio prompt data is saved in a Google Drive folder. This section shows how to migrate your prompts to Vertex AI Studio.\n- Open [Google Drive](https://drive.google.com) .\n- Navigate to the **AI_Studio** folder where the prompts are stored.\n- Download all prompts from Google Drive to a local file. Ensure that the prompts are in the JSON format.\n- Open the [Vertex AI Generative AI Studio](https://console.cloud.google.com/vertex-ai/generative) in the Google Cloud console.\n- On the **Language** card, click **Open** .\n- Click on the **My prompts** tab.\n- Click on **Import prompt.** \n- Select the local directory of your prompt or list of prompts. To upload prompts in bulk, add  them as a list of prompts in your JSON file.\n- Click **Upload** . The prompts are uploaded to the **My Prompts** tab.\n### Upload training data to Vertex AI Studio\nTo migrate your training data to Vertex AI, you need to upload your data to a Google Cloud Storage bucket. For more information, see [Tune language foundation models](https://cloud.google.com/vertex-ai/generative-ai/docs/models/tune-models) .\n## Delete unused API Keys\nIf you no longer need to use your Google AI Gemini API key, follow security best practices and [deleteit](https://developers.google.com/maps/api-security-best-practices#deleting-unused-apikeys) .\n## What's next\n- Try a quickstart tutorial using [Generative AIStudio](/vertex-ai/generative-ai/docs/start/quickstarts/quickstart) or the [Vertex AI API](/vertex-ai/generative-ai/docs/start/quickstarts/quickstart-multimodal) .", "guide": "Generative AI on Vertex AI"}