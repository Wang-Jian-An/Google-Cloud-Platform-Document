{"title": "Generative AI on Vertex AI - \u8a66\u7528 Vertex AI Gemini API", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart-multimodal?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u8a66\u7528 Vertex AI Gemini API\n\u672c\u9801\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 Google Cloud \u63a7\u5236\u6aaf\u3001\u7de8\u7a0b\u8a9e\u8a00 SDK \u6216 REST API \u5feb\u901f\u958b\u59cb\u5411 Vertex AI Gemini API \u767c\u9001\u8acb\u6c42\u3002\n", "content": "## Google Cloud \u65b0\u624b\n## \u5411 Vertex AI Gemini API \u767c\u9001\u8acb\u6c42\n\u5982\u9700\u67e5\u770b\u5411 Vertex AI Gemini API \u767c\u9001\u8acb\u6c42\u7684\u8aaa\u660e\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u6a19\u7c64\u9801\u4e4b\u4e00\uff1a\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u6fc0\u6d3b Cloud Shell\u3002 [\u6fc0\u6d3b Cloud Shell](https://console.cloud.google.com/?cloudshell=true&hl=zh-cn)  [Cloud Shell](https://cloud.google.com/shell/docs/how-cloud-shell-works?hl=zh-cn) \u6703\u8a71\u96a8\u5373\u6703\u5728 Google Cloud \u63a7\u5236\u6aaf\u7684\u5e95\u90e8\u5553\u52d5\uff0c\u4e26\u986f\u793a\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u3002Cloud Shell \u662f\u4e00\u500b\u5df2\u5b89\u88dd Google Cloud CLI \u4e14\u5df2\u7232\u7576\u524d\u9805\u76ee\u8a2d\u7f6e\u503c\u7684 Shell \u74b0\u5883\u3002\u8a72\u6703\u8a71\u53ef\u80fd\u9700\u8981\u5e7e\u79d2\u9418\u6642\u9593\u4f86\u5b8c\u6210\u521d\u59cb\u5316\u3002\n- \u5728 Cloud Shell \u4e2d\uff0c\u901a\u904e\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88dd\u6216\u66f4\u65b0 Python \u7248 Vertex AI SDK\uff1a```\npip install \"google-cloud-aiplatform>=1.38\"\n```\n\u767c\u9001\u63d0\u793a\u8acb\u6c42\u3002\u5c07 \u66ff\u63db\u7232\u60a8\u7684 Google Cloud \u9805\u76ee\u7684 ID\u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/generative_ai/gemini_guide_example.py) \n```\n# TODO(developer): Vertex AI SDK - uncomment below & run# pip3 install --upgrade --user google-cloud-aiplatform# gcloud auth application-default loginimport vertexaifrom vertexai.generative_models import GenerativeModel, Partdef generate_text(project_id: str, location: str) -> str:\u00a0 \u00a0 # Initialize Vertex AI\u00a0 \u00a0 vertexai.init(project=project_id, location=location)\u00a0 \u00a0 # Load the model\u00a0 \u00a0 multimodal_model = GenerativeModel(\"gemini-1.0-pro-vision\")\u00a0 \u00a0 # Query the model\u00a0 \u00a0 response = multimodal_model.generate_content(\u00a0 \u00a0 \u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Add an example image\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Part.from_uri(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"gs://generativeai-downloads/images/scones.jpg\", mime_type=\"image/jpeg\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Add an example query\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"what is shown in this image?\",\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 )\u00a0 \u00a0 print(response)\u00a0 \u00a0 return response.text\n```\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python \u7248 Vertex AI SDK\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Python \u7248 Vertex AI SDK API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u6fc0\u6d3b Cloud Shell\u3002 [\u6fc0\u6d3b Cloud Shell](https://console.cloud.google.com/?cloudshell=true&hl=zh-cn)  [Cloud Shell](https://cloud.google.com/shell/docs/how-cloud-shell-works?hl=zh-cn) \u6703\u8a71\u96a8\u5373\u6703\u5728 Google Cloud \u63a7\u5236\u6aaf\u7684\u5e95\u90e8\u5553\u52d5\uff0c\u4e26\u986f\u793a\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u3002Cloud Shell \u662f\u4e00\u500b\u5df2\u5b89\u88dd Google Cloud CLI \u4e14\u5df2\u7232\u7576\u524d\u9805\u76ee\u8a2d\u7f6e\u503c\u7684 Shell \u74b0\u5883\u3002\u8a72\u6703\u8a71\u53ef\u80fd\u9700\u8981\u5e7e\u79d2\u9418\u6642\u9593\u4f86\u5b8c\u6210\u521d\u59cb\u5316\u3002\n- \u5728 Cloud Shell \u4e2d\uff0c\u901a\u904e\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88dd\u6216\u66f4\u65b0 Node.js \u7248 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI SDK\uff1a```\nnpm install @google-cloud/vertexai\n```\n\u767c\u9001\u63d0\u793a\u8acb\u6c42\u3002\u5c07 \u66ff\u63db\u7232\u60a8\u7684 Google Cloud \u9805\u76ee\u7684 ID\u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/generative-ai/snippets/nonStreamingMultipartContent.js) \n```\nconst {VertexAI} = require('@google-cloud/vertexai');/**\u00a0* TODO(developer): Update these variables before running the sample.\u00a0*/async function createNonStreamingMultipartContent(\u00a0 projectId = 'PROJECT_ID',\u00a0 location = 'us-central1',\u00a0 model = 'gemini-1.0-pro-vision',\u00a0 image = 'gs://generativeai-downloads/images/scones.jpg',\u00a0 mimeType = 'image/jpeg') {\u00a0 // Initialize Vertex with your Cloud project and location\u00a0 const vertexAI = new VertexAI({project: projectId, location: location});\u00a0 // Instantiate the model\u00a0 const generativeVisionModel = vertexAI.getGenerativeModel({\u00a0 \u00a0 model: model,\u00a0 });\u00a0 // For images, the SDK supports both Google Cloud Storage URI and base64 strings\u00a0 const filePart = {\u00a0 \u00a0 fileData: {\u00a0 \u00a0 \u00a0 fileUri: image,\u00a0 \u00a0 \u00a0 mimeType: mimeType,\u00a0 \u00a0 },\u00a0 };\u00a0 const textPart = {\u00a0 \u00a0 text: 'what is shown in this image?',\u00a0 };\u00a0 const request = {\u00a0 \u00a0 contents: [{role: 'user', parts: [filePart, textPart]}],\u00a0 };\u00a0 console.log('Prompt Text:');\u00a0 console.log(request.contents[0].parts[1].text);\u00a0 console.log('Non-Streaming Response Text:');\u00a0 // Create the response stream\u00a0 const responseStream =\u00a0 \u00a0 await generativeVisionModel.generateContentStream(request);\u00a0 // Wait for the response stream to complete\u00a0 const aggregatedResponse = await responseStream.response;\u00a0 // Select the text from the response\u00a0 const fullTextResponse =\u00a0 \u00a0 aggregatedResponse.candidates[0].content.parts[0].text;\u00a0 console.log(fullTextResponse);}\n```\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI Node.js SDK\uff0c\u8acb\u53c3\u95b1 [Node.js \u7248 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI SDK \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/vertexai/latest?hl=zh-cn) \u3002\n- [\u8a2d\u7f6e Java \u958b\u767c\u74b0\u5883](https://cloud.google.com/java/docs/setup?hl=zh-cn) \u3002\n- \u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4f86\u9032\u884c\u8eab\u4efd\u9a57\u8b49\u3002\u5c07 \u66ff\u63db\u7232\u60a8\u7684 Google Cloud \u9805\u76ee ID\uff0c\u4e26\u5c07 \u66ff\u63db\u7232\u60a8\u7684 Google Cloud \u7528\u6236\u540d\u3002```\ngcloud config set project PROJECT_ID &&gcloud auth login ACCOUNT\n```\n- \u5c07 `google-cloud-vertexai` \u6dfb\u52a0\u7232\u4f9d\u8cf4\u9805\uff1a```\n<!--If you are using Maven with BOM, add the following in your pom.xml--><dependencyManagement>\u00a0 <dependencies>\u00a0 \u00a0 <dependency>\u00a0 \u00a0 \u00a0 <groupId>com.google.cloud</groupId>\u00a0 \u00a0 \u00a0 <artifactId>libraries-bom</artifactId>\u00a0 \u00a0 \u00a0 <version>26.32.0</version>\u00a0 \u00a0 \u00a0 <type>pom</type>\u00a0 \u00a0 \u00a0 <scope>import</scope>\u00a0 \u00a0 </dependency>\u00a0 </dependencies></dependencyManagement><dependencies>\u00a0 <dependency>\u00a0 \u00a0 <groupId>com.google.cloud</groupId>\u00a0 \u00a0 <artifactId>google-cloud-vertexai</artifactId>\u00a0 </dependency></dependencies><!--If you are using Maven without BOM, add the following to your pom.xml--><dependency>\u00a0 <groupId>com.google.cloud</groupId>\u00a0 <artifactId>google-cloud-vertexai</artifactId>\u00a0 <version>0.4.0</version></dependency><!--If you are using Gradle without BOM, add the following to your build.gradle-->implementation 'com.google.cloud:google-cloud-vertexai:0.4.0'\n```\n\u767c\u9001\u63d0\u793a\u8acb\u6c42\u3002\u5c07 `projectID` \u8a2d\u7f6e\u7232\u60a8\u7684 Google Cloud \u9805\u76ee ID\u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/vertexai/snippets/src/main/java/vertexai/gemini/Quickstart.java) \n```\nimport com.google.cloud.vertexai.VertexAI;import com.google.cloud.vertexai.api.GenerateContentResponse;import com.google.cloud.vertexai.generativeai.ContentMaker;import com.google.cloud.vertexai.generativeai.GenerativeModel;import com.google.cloud.vertexai.generativeai.PartMaker;import java.io.IOException;public class Quickstart {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"your-google-cloud-project-id\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String modelName = \"gemini-1.0-pro-vision\";\u00a0 \u00a0 String output = quickstart(projectId, location, modelName);\u00a0 \u00a0 System.out.println(output);\u00a0 }\u00a0 // Analyzes the provided Multimodal input.\u00a0 public static String quickstart(String projectId, String location, String modelName)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs\u00a0 \u00a0 // to be created once, and can be reused for multiple requests.\u00a0 \u00a0 try (VertexAI vertexAI = new VertexAI(projectId, location)) {\u00a0 \u00a0 \u00a0 String imageUri = \"gs://generativeai-downloads/images/scones.jpg\";\u00a0 \u00a0 \u00a0 GenerativeModel model = new GenerativeModel(modelName, vertexAI);\u00a0 \u00a0 \u00a0 GenerateContentResponse response = model.generateContent(ContentMaker.fromMultiModalData(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 PartMaker.fromMimeTypeAndData(\"image/jpg\", imageUri),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"What's in this photo\"\u00a0 \u00a0 \u00a0 ));\u00a0 \u00a0 \u00a0 return response.toString();\u00a0 \u00a0 }\u00a0 }}\n```\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI Java \u958b\u767c\u5de5\u5177\u5305 (JDK)\uff0c\u8acb\u53c3\u95b1 [Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI JDK \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-vertexai/latest/overview?hl=zh-cn) \u3002\n- [\u7232 Go \u958b\u767c\u6e96\u5099\u597d\u74b0\u5883](https://cloud.google.com/go/docs/setup?hl=zh-cn) \u3002\n- \u67e5\u770b\u53ef\u7528\u7684 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI API Go \u8edf\u4ef6\u5305\uff0c\u4ee5\u78ba\u5b9a\u54ea\u500b\u8edf\u4ef6\u5305\u6700\u7b26\u5408\u60a8\u7684\u9805\u76ee\u9700\u6c42\uff1a- \u8edf\u4ef6\u5305 [cloud.google.com/go/vertexai](https://pkg.go.dev/cloud.google.com/go/vertexai) \uff08 **\u63a8\u85a6** \uff09`vertexai` \u662f\u4eba\u5de5\u7de8\u5beb\u7684\u8edf\u4ef6\u5305\uff0c\u53ef\u901a\u904e\u5176\u8a2a\u554f\u5e38\u7528\u529f\u80fd\u548c\u7279\u5fb5\u3002\u5c0d\u65bc\u5927\u591a\u6578\u4f7f\u7528 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI \u9032\u884c\u69cb\u5efa\u7684\u958b\u767c\u8005\uff0c\u5efa\u8b70\u5c07\u6b64\u8edf\u4ef6\u5305\u4f5c\u7232\u8d77\u9ede\u3002\u5982\u9700\u8a2a\u554f\u6b64\u8edf\u4ef6\u5305\u5c1a\u672a\u6db5\u84cb\u7684\u529f\u80fd\u548c\u7279\u6027\uff0c\u8acb\u6539\u7528\u81ea\u52d5\u751f\u6210\u7684 `aiplatform` \u3002\n- \u8edf\u4ef6\u5305 [cloud.google.com/go/aiplatform](https://pkg.go.dev/cloud.google.com/go/aiplatform) `aiplatform` \u662f\u81ea\u52d5\u751f\u6210\u7684\u8edf\u4ef6\u5305\u3002\u6b64\u8edf\u4ef6\u5305\u9069\u7528\u65bc\u9700\u8981\u8a2a\u554f\u4eba\u5de5\u7de8\u5beb\u7684 `vertexai` \u8edf\u4ef6\u5305\u5c1a\u672a\u63d0\u4f9b\u7684 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI API \u529f\u80fd\u548c\u7279\u5fb5\u7684\u9805\u76ee\u3002\n- \u901a\u904e\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\uff0c\u6839\u64da\u9805\u76ee\u9700\u6c42\u5b89\u88dd\u6240\u9700\u7684 Go \u8edf\u4ef6\u5305\uff1a```\n# Human authored package. Recommended for most developers.go get cloud.google.com/go/vertexai# Auto-generated package.go get cloud.google.com/go/aiplatform\n```\n\u767c\u9001\u63d0\u793a\u8acb\u6c42\u3002\u5c07 \u66ff\u63db\u7232\u60a8\u7684 Google Cloud \u9805\u76ee\u7684 ID\u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/vertexai/snippets/try_gemini.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"encoding/json\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/vertexai/genai\")var projectId = \"PROJECT_ID\"var region = \"us-central1\"func tryGemini(w io.Writer, projectId string, region string, modelName string) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := genai.NewClient(ctx, projectId, region)\u00a0 \u00a0 \u00a0 \u00a0 gemini := client.GenerativeModel(modelName)\u00a0 \u00a0 \u00a0 \u00a0 img := genai.FileData{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MIMEType: \"image/jpeg\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 FileURI: \u00a0\"gs://generativeai-downloads/images/scones.jpg\",\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 prompt := genai.Text(\"What is in this image?\")\u00a0 \u00a0 \u00a0 \u00a0 resp, err := gemini.GenerateContent(ctx, img, prompt)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"error generating content: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 rb, _ := json.MarshalIndent(resp, \"\", \" \u00a0\")\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintln(w, string(rb))\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Go \u7248 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI SDK\uff0c\u8acb\u53c3\u95b1 [Go \u7248 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI SDK \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/vertexai/latest?hl=zh-cn) \u3002\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 C# \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.AIPlatform.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/aiplatform/api/AIPlatform.Samples/GeminiQuickstart.cs) \n```\nusing Google.Api.Gax.Grpc;using Google.Cloud.AIPlatform.V1;using System.Collections.Generic;using System.Text;using System.Threading.Tasks;public class GeminiQuickstart{\u00a0 \u00a0 public async Task<string> GenerateContent(\u00a0 \u00a0 \u00a0 \u00a0 string projectId = \"your-project-id\",\u00a0 \u00a0 \u00a0 \u00a0 string location = \"us-central1\",\u00a0 \u00a0 \u00a0 \u00a0 string publisher = \"google\",\u00a0 \u00a0 \u00a0 \u00a0 string model = \"gemini-1.0-pro-vision\"\u00a0 \u00a0 )\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create client\u00a0 \u00a0 \u00a0 \u00a0 var predictionServiceClient = new PredictionServiceClientBuilder\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Endpoint = $\"{location}-aiplatform.googleapis.com\"\u00a0 \u00a0 \u00a0 \u00a0 }.Build();\u00a0 \u00a0 \u00a0 \u00a0 // Prompt\u00a0 \u00a0 \u00a0 \u00a0 string prompt = \"What's in this photo\";\u00a0 \u00a0 \u00a0 \u00a0 string imageUri = \"gs://generativeai-downloads/images/scones.jpg\";\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s)\u00a0 \u00a0 \u00a0 \u00a0 var content = new Content\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Role = \"USER\"\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 content.Parts.AddRange(new List<Part>()\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new() {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Text = prompt\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new() {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 FileData = new() {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MimeType = \"image/png\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 FileUri = imageUri\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 var generateContentRequest = new GenerateContentRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Model = $\"projects/{projectId}/locations/{location}/publishers/{publisher}/models/{model}\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GenerationConfig = new GenerationConfig\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Temperature = 0.4f,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TopP = 1,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TopK = 32,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MaxOutputTokens = 2048\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 generateContentRequest.Contents.Add(content);\u00a0 \u00a0 \u00a0 \u00a0 // Make the request, returning a streaming response\u00a0 \u00a0 \u00a0 \u00a0 using PredictionServiceClient.StreamGenerateContentStream response = predictionServiceClient.StreamGenerateContent(generateContentRequest);\u00a0 \u00a0 \u00a0 \u00a0 StringBuilder fullText = new();\u00a0 \u00a0 \u00a0 \u00a0 // Read streaming responses from server until complete\u00a0 \u00a0 \u00a0 \u00a0 AsyncResponseStream<GenerateContentResponse> responseStream = response.GetResponseStream();\u00a0 \u00a0 \u00a0 \u00a0 await foreach (GenerateContentResponse responseItem in responseStream)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fullText.Append(responseItem.Candidates[0].Content.Parts[0].Text);\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return fullText.ToString();\u00a0 \u00a0 }}\n```\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u6fc0\u6d3b Cloud Shell\u3002 [\u6fc0\u6d3b Cloud Shell](https://console.cloud.google.com/?cloudshell=true&hl=zh-cn) \n- \u8f38\u5165\u4ee5\u4e0b\u547d\u4ee4\u4f86\u914d\u7f6e\u74b0\u5883\u8b8a\u91cf\u3002\u5c07 \u66ff\u63db\u7232\u60a8\u7684 Google Cloud \u9805\u76ee\u7684 ID\u3002```\nMODEL_ID=\"gemini-1.0-pro-vision\"PROJECT_ID=\"PROJECT_ID\"\n```\n- \u9810\u914d\u7aef\u9ede\uff1a```\ngcloud beta services identity create --service=aiplatform.googleapis.com --project=PROJECT_ID\n```\n- \u8f38\u5165\u4ee5\u4e0b curl \u547d\u4ee4\u4ee5\u767c\u9001\u63d0\u793a\u8acb\u6c42\uff1a```\ncurl \\-X POST \\-H \"Authorization: Bearer $(gcloud auth application-default print-access-token)\" \\-H \"Content-Type: application/json\" \\https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_ID}/locations/us-central1/publishers/google/models/${MODEL_ID}:streamGenerateContent -d \\$'{\u00a0 \"contents\": {\u00a0 \u00a0 \"role\": \"user\",\u00a0 \u00a0 \"parts\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"fileData\": {\u00a0 \u00a0 \u00a0 \u00a0 \"mimeType\": \"image/jpeg\",\u00a0 \u00a0 \u00a0 \u00a0 \"fileUri\": \"gs://generativeai-downloads/images/scones.jpg\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Describe this picture.\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 }}'\n```\n- \u5982\u679c\u7cfb\u7d71\u8981\u6c42\u60a8\u6388\u6b0a Cloud Shell\uff0c\u8acb\u9ede\u64ca **\u6388\u6b0a** \u3002\u6a21\u578b\u6703\u8fd4\u56de\u56de\u8986\u3002 \u8acb\u6ce8\u610f\uff0c\u7cfb\u7d71\u5206\u591a\u500b\u90e8\u5206\u751f\u6210\u56de\u8986\uff0c\u5176\u4e2d\u6bcf\u500b\u90e8\u5206\u6703\u5206\u5225\u8a55\u4f30\u5b89\u5168\u6027\u3002\u4f7f\u7528 Vertex AI Studio \u5feb\u901f\u8a2d\u8a08\u4e26\u8fed\u4ee3\u60a8\u7684\u63d0\u793a\u3002\u63d0\u793a\u6e96\u5099\u5c31\u7dd2\u5f8c\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u53d7\u652f\u6301\u7684\u7de8\u7a0b\u8a9e\u8a00\u7372\u53d6\u63d0\u793a\u7684\u4ee3\u78bc\u3002- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u8f49\u5230 **Vertex AI Studio** \u9801\u9762\u3002 [Vertex AI Studio](https://console.cloud.google.com/vertex-ai/generative?hl=zh-cn) \n- \u9ede\u64ca **\u591a\u6a21\u614b** \u3002\n- \u5728 **\u793a\u4f8b\u63d0\u793a** \u4e0b\uff0c\u627e\u5230\u6a19\u984c\u7232 **\u5f9e\u5716\u7247\u4e2d\u63d0\u53d6\u6587\u672c** \u7684\u63d0\u793a\uff0c\u7136\u5f8c\u9ede\u64ca **\u6253\u958b** \u3002\u7cfb\u7d71\u96a8\u5373\u6703\u6253\u958b\u63d0\u793a\u9801\u9762\uff0c\u4e26\u5728 **\u63d0\u793a** \u5b57\u6bb5\u4e2d\u586b\u5145\u63d0\u793a\u3002\n- \u9ede\u64ca **\u63d0\u4ea4** \u4ee5\u63d0\u4ea4\u63d0\u793a\u3002\u6a21\u578b\u6703\u8fd4\u56de\u56de\u8986\u3002\n- \u9ede\u64ca code **\u7372\u53d6\u4ee3\u78bc** \u4ee5\u67e5\u770b\u6b64\u63d0\u793a\u8acb\u6c42\u7684\u4ee3\u78bc\u7b49\u6548\u9805\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u8a73\u7d30\u77ad\u89e3 [Vertex AI Gemini API](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/overview?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u8a2d\u8a08\u591a\u6a21\u614b\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/design-multimodal-prompts?hl=zh-cn) \u3002\n- \u67e5\u770b Vertex AI Gemini API \u7684\u6df1\u5ea6\u6307\u5357\uff1a- [\u6e2c\u8a66\u591a\u6a21\u614b\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/send-multimodal-prompts?hl=zh-cn) \u3002\n- [\u6e2c\u8a66\u804a\u5929\u63d0\u793a](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/send-chat-prompts-gemini?hl=zh-cn) \u3002\n- \u8acb\u53c3\u95b1 [Vertex AI Gemini API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/gemini?hl=zh-cn) \u3002\n- \u8acb\u53c3\u95b1 [Vertex AI Gemini API Python SDK \u53c3\u8003\u6587\u6a94](https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/sdk-for-gemini/gemini-sdk-overview-reference?hl=zh-cn) \u3002", "guide": "Generative AI on Vertex AI"}