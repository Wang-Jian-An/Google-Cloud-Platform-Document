{"title": "Generative AI on Vertex AI - \u7372\u53d6\u6587\u672c\u5d4c\u5165", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/embeddings/get-text-embeddings?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u7372\u53d6\u6587\u672c\u5d4c\u5165\n\u85c9\u52a9 Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI \u6587\u672c\u5d4c\u5165 API\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 [\u751f\u6210\u5f0f AI](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/overview?hl=zh-cn) \u8f15\u9b06\u5275\u5efa\u6587\u672c\u5d4c\u5165\u3002\u6587\u672c\u5d4c\u5165\u662f\u6587\u672c\u7684\u5411\u91cf\u8868\u793a\u6cd5\uff0c\u7528\u65bc\u4ee5\u591a\u7a2e\u65b9\u5f0f\u67e5\u627e\u76f8\u4f3c\u9805\u3002\u6bcf\u6b21\u5b8c\u6210 Google \u641c\u7d22\u6642\uff0c\u60a8\u90fd\u53ef\u4ee5\u8207\u6587\u672c\u5d4c\u5165\u9032\u884c\u4ea4\u4e92\uff1b\u7576\u60a8\u9032\u884c\u5728\u7dda\u8cfc\u7269\u6642\uff0c\u6216\u8005\u60a8\u559c\u611b\u7684\u97f3\u6a02\u5728\u7dda\u5a92\u9ad4\u670d\u52d9\u6839\u64da\u60a8\u7684\u6536\u807d\u8a18\u9304\u63a8\u85a6\u60a8\u53ef\u80fd\u559c\u6b61\u7684\u6416\u6efe\u6a02\u968a\u6642\uff0c\u8acb\u67e5\u770b\u63a8\u85a6\u3002\u6587\u672c\u5d4c\u5165\u7684\u4e00\u4e9b\u5e38\u898b\u61c9\u7528\u5834\u666f\u5305\u62ec\uff1a\n- **\u8a9e\u7fa9\u641c\u7d22** \uff1a\u6309\u8a9e\u7fa9\u76f8\u4f3c\u5ea6\u6392\u5e8f\u641c\u7d22\u6587\u672c\u3002\n- **\u5206\u985e** \uff1a\u8fd4\u56de\u6587\u672c\u5c6c\u6027\u8207\u7d66\u5b9a\u6587\u672c\u985e\u4f3c\u7684\u9805\u7684\u985e\u3002\n- **\u805a\u985e** \uff1a\u5c07\u6587\u672c\u5c6c\u6027\u8207\u7d66\u5b9a\u6587\u672c\u985e\u4f3c\u7684\u9805\u805a\u985e\u3002\n- **\u96e2\u7fa3\u503c\u6aa2\u6e2c** \uff1a\u8fd4\u56de\u6587\u672c\u5c6c\u6027\u8207\u7d66\u5b9a\u6587\u672c\u76f8\u95dc\u6027\u6700\u4f4e\u7684\u9805\u3002\n- **\u5c0d\u8a71\u754c\u9762** \uff1a\u5c07\u53ef\u80fd\u751f\u6210\u985e\u4f3c\u56de\u8986\uff08\u4f8b\u5982\u5728\u5c0d\u8a71\u7d1a\u5d4c\u5165\u7a7a\u9593\u4e2d\uff09\u7684\u53e5\u5b50\u7d44\u805a\u985e\u3002\n\u5275\u5efa\u6587\u672c\u5d4c\u5165\u6642\uff0c\u60a8\u53ef\u4ee5\u4ee5\u6d6e\u9ede\u6578\u6578\u7d44\u7684\u5f62\u5f0f\u7372\u53d6\u81ea\u7136\u6587\u672c\u7684\u5411\u91cf\u8868\u793a\u6cd5\u3002\u9019\u610f\u5473\u7740\uff0c\u6240\u6709\u8f38\u5165\u6587\u672c\u90fd\u5206\u914d\u6709\u6578\u503c\u8868\u793a\u6cd5\u3002\u901a\u904e\u6bd4\u8f03\u5169\u6bb5\u6587\u672c\u7684\u5411\u91cf\u8868\u793a\u6cd5\u4e4b\u9593\u7684\u6578\u503c\u8ddd\u96e2\uff0c\u61c9\u7528\u53ef\u4ee5\u78ba\u5b9a\u6587\u672c\u6216\u6587\u672c\u8868\u793a\u7684\u5c0d\u8c61\u4e4b\u9593\u7684\u76f8\u4f3c\u5ea6\u3002\n\u4f8b\u5982\uff0c\u5047\u8a2d\u60a8\u60f3\u8981\u958b\u767c\u4e00\u500b\u5716\u66f8\u63a8\u85a6\u804a\u5929\u6a5f\u5668\u4eba\u3002\u9996\u5148\uff0c\u60a8\u4f7f\u7528\u6df1\u5ea6\u795e\u7d93\u7db2\u7d61 (DNN) \u5c07\u6bcf\u672c\u5716\u66f8\u8f49\u63db\u7232\u5d4c\u5165\u5411\u91cf\uff0c\u5176\u4e2d\u4e00\u500b\u5d4c\u5165\u5411\u91cf\u8868\u793a\u4e00\u672c\u66f8\u3002\u6211\u5011\u53ea\u9700\u4ee5\u8f38\u5165\u5f62\u5f0f\u5411 DNN \u63d0\u4f9b\u66f8\u540d\u6216\u6587\u672c\u5167\u5bb9\u5373\u53ef\u3002\u6216\u8005\uff0c\u6211\u5011\u53ef\u4ee5\u5c07\u9019\u5169\u9805\u4ee5\u53ca\u63cf\u8ff0\u5716\u66f8\u7684\u4efb\u4f55\u5176\u4ed6\u5143\u6578\u64da\uff08\u4f8b\u5982\u985e\u578b\uff09\u7d50\u5408\u4f7f\u7528\u3002\n\u6b64\u793a\u4f8b\u4e2d\u7684\u5d4c\u5165\u53ef\u4ee5\u7531\u6578\u4ee5\u5343\u8a08\u7684\u5716\u66f8\u53ca\u5176\u6458\u8981\u548c\u985e\u578b\u7d44\u6210\uff0c\u9019\u4e9b\u5716\u66f8\u7684\u8868\u793a\u6cd5\uff08\u4f8b\u5982\u827e\u7c73\u8389\u00b7\u52c3\u6717\u7279\u7684\u300a\u547c\u562f\u5c71\u838a\u300b\u548c\u7c21\u00b7\u5967\u65af\u6c40\u7684\u300a\u52f8\u5c0e\u300b\uff09\u5f7c\u6b64\u5f88\u76f8\u4f3c\uff08\u6578\u503c\u8868\u793a\u6cd5\u4e4b\u9593\u7684\u8ddd\u96e2\u8fd1\uff09\u3002 \u800c\u5f17\u00b7\u65af\u79d1\u7279\u00b7\u83f2\u8328\u5091\u62c9\u5fb7\u7684\u300a\u4e86\u4e0d\u8d77\u7684\u84cb\u8328\u6bd4\u300b \u8ddd\u96e2\u8f03\u9060\uff0c\u56e0\u7232\u6642\u671f\u3001\u985e\u578b\u548c\u6458\u8981\u4e0d\u592a\u76f8\u4f3c\u3002\n\u8f38\u5165\u662f\u5f71\u97ff\u5d4c\u5165\u7a7a\u9593\u65b9\u5411\u7684\u4e3b\u8981\u56e0\u7d20\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u5011\u53ea\u6709\u66f8\u540d\u8f38\u5165\uff0c\u5247\u66f8\u540d\u76f8\u4f3c\u4f46\u6458\u8981\u537b\u622a\u7136\u4e0d\u540c\u7684\u5169\u672c\u66f8\u7684\u4f4d\u7f6e\u9760\u5f97\u5f88\u8fd1\u3002\u4f46\u662f\uff0c\u5982\u679c\u6dfb\u52a0\u66f8\u540d\u548c\u6458\u8981\uff0c\u5247\u9019\u4e9b\u76f8\u540c\u7684\u5716\u66f8\u5728\u5d4c\u5165\u7a7a\u9593\u4e2d\u4e0d\u90a3\u9ebc\u76f8\u4f3c\uff08\u8ddd\u96e2\u8f03\u9060\uff09\u3002\n\u4f7f\u7528 Generative AI \u6642\uff0c\u6b64\u5716\u66f8\u5efa\u8b70\u804a\u5929\u6a5f\u5668\u4eba\u53ef\u4ee5\u6839\u64da\u60a8\u7684\u67e5\u8a62\u7e3d\u7d50\u3001\u5efa\u8b70\u4e26\u5411\u60a8\u5c55\u793a\u60a8\u53ef\u80fd\u559c\u6b61\uff08\u6216\u4e0d\u559c\u6b61\uff09\u7684\u5716\u66f8\u3002\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5d4c\u5165\uff0c\u8acb\u53c3\u95b1 [Meet AI \u7684\u591a\u5de5\u5177\uff1a\u5411\u91cf\u5d4c\u5165](https://cloud.google.com/blog/topics/developers-practitioners/meet-ais-multitool-vector-embeddings?hl=zh-cn) \u3002\u5982\u9700\u5b78\u7fd2\u6709\u95dc\u5d4c\u5165\u7684\u57fa\u790e\u6a5f\u5668\u5b78\u7fd2\u901f\u6210\u8ab2\u7a0b\uff0c\u8acb\u53c3\u95b1 [\u5d4c\u5165](https://developers.google.com/machine-learning/crash-course/embeddings/video-lecture?hl=zh-cn) \u3002\n\u5c07\u6bcf\u672c\u5716\u66f8\u8f49\u63db\u7232\u5d4c\u5165\u8868\u793a\u6cd5\u5f8c\uff0c\u5c31\u53ef\u4ee5\u5728\u5411\u91cf\u6578\u64da\u5eab\uff08\u4f8b\u5982 Vector Search\uff09\u4e2d\u5c07\u9019\u4e9b\u5d4c\u5165\u7de8\u5165\u7d22\u5f15\u3002\u9019\u6a23\u53ef\u4ee5\u5be6\u73fe\u4f4e\u5ef6\u9072\u6aa2\u7d22\uff0c\u4e26\u4e14\u96a8\u7740\u6211\u5011\u5716\u66f8\u8a9e\u6599\u5eab\uff08\u5411\u91cf\uff09\u7684\u898f\u6a21\u64f4\u5927\uff0c\u9019\u4e00\u9ede\u81f3\u95dc\u91cd\u8981\u3002\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3 Vector Search\uff0c\u8acb\u53c3\u95b1 [Vector Search \u6982\u89bd](https://cloud.google.com/vertex-ai/docs/vector-search/overview?hl=zh-cn) \u3002\n", "content": "## \u652f\u6301\u7684\u6a21\u578b\n\u5982\u9700\u77ad\u89e3\u54ea\u4e9b \u7a69\u5b9a\u6587\u672c\u5d4c\u5165\u6a21\u578b\u7248\u672c\u53ef\u7528\uff0c\u8acb\u53c3\u95b1 [\u53ef\u7528\u7684\u7a69\u5b9a\u6a21\u578b\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#stable-versions-available.md) \u3002\u5982\u9700\u77ad\u89e3\u54ea\u4e9b\u6700\u65b0 \u6587\u672c\u5d4c\u5165\u6a21\u578b\u7248\u672c\u53ef\u7528\uff0c\u8acb\u53c3\u95b1 [\u6700\u65b0\u6a21\u578b](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#latest-version) \u3002\n\u5f37\u70c8\u5efa\u8b70\u60a8\u6307\u5b9a [\u7a69\u5b9a](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#stable-versions-available.md) \u6a21\u578b\u7248\u672c\uff08\u4f8b\u5982\uff0c `textembedding-gecko@003` \uff09\u3002 [\u6700\u65b0](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#latest-version) \u6a21\u578b\u7248\u672c\u7232 [\u9810\u89bd\u7248](https://cloud.google.com/products?hl=zh-cn#product-launch-stages) \uff0c\u4e0d\u662f\u6b63\u5f0f\u7248 (GA)\u3002\u7531\u65bc\u6700\u65b0\u7248\u672c\u7232 [\u9810\u89bd\u7248](https://cloud.google.com/products?hl=zh-cn#product-launch-stages) \uff0c\u56e0\u6b64\u7121\u6cd5\u4fdd\u8b49\u53ef\u5728\u751f\u7522\u74b0\u5883\u4e2d\u4f7f\u7528\u3002\n\u5c0d\u65bc\u9700\u8981\u5411\u5f8c\u517c\u5bb9\u7684\u5d4c\u5165\u7684\u61c9\u7528\uff0c\u4f7f\u7528\u7a69\u5b9a\u6a21\u578b\u7248\u672c\uff08\u4f8b\u5982 `textembedding-gecko@003` \uff09\u5c24\u7232\u91cd\u8981\u3002\u5982\u679c\u60a8\u7121\u9700\u8003\u616e\u5411\u5f8c\u517c\u5bb9\u6027\uff0c\u4e26\u4e14\u60a8\u60f3\u4f7f\u7528\u6700\u65b0\u7684\u6a21\u578b\u7248\u672c\uff0c\u5247\u61c9\u660e\u78ba\u6307\u5b9a `@latest` \u3002\u5982\u679c\u672a\u6307\u5b9a\u7248\u672c\uff0c\u5247 `textembedding-gecko` \u9ed8\u8a8d\u7232 `textembedding-gecko@003` \uff0c `textembedding-gecko-multilingual` \u9ed8\u8a8d\u7232 `textembedding-gecko-multilingual@001` \u3002\n### \u524d\u63d0\u689d\u4ef6\n\u6210\u529f\u5275\u5efa\u5d4c\u5165\u9700\u8981\u6eff\u8db3\u7279\u5b9a\u7684\u524d\u63d0\u689d\u4ef6\u3002\u5982\u9700\u958b\u59cb\u4f7f\u7528\uff0c\u8acb\u53c3\u95b1 [\u8a66\u7528\u6587\u672c\u5d4c\u5165](https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart-text-embeddings?hl=zh-cn) \u5feb\u901f\u5165\u9580\u3002\n| 0                                           |\n|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| \u4f7f\u7528\u6b64 Colab \u8abf\u7528\u65b0\u767c\u5e03\u7684\u6587\u672c\u5d4c\u5165\u6a21\u578b\uff08textembedding-gecko \u548c textembedding-gecko-multilingual\uff09\u3002 Jupyter \u7b46\u8a18\u672c\uff1a\u60a8\u53ef\u4ee5\u5c07\u6b64\u6559\u7a0b\u4f5c\u7232 Jupyter \u7b46\u8a18\u672c\u904b\u884c\u3002 \u5728 Colab \u4e2d\u904b\u884c |\n## \u7372\u53d6\u6587\u672c\u7247\u6bb5\u7684\u6587\u672c\u5d4c\u5165\n\u60a8\u53ef\u4ee5\u4f7f\u7528 Vertex AI API \u6216 Python \u7248 Vertex AI SDK \u7372\u53d6\u6587\u672c\u7247\u6bb5\u7684\u6587\u672c\u5d4c\u5165\u3002\u5c0d\u65bc\u6bcf\u500b\u8acb\u6c42\uff0c\u4e0d\u80fd\u8d85\u904e\u4e94\u500b\u8f38\u5165\u6587\u672c\u3002\u6bcf\u500b\u8f38\u5165\u6587\u672c\u7684\u8a5e\u5143\u9650\u5236\u7232 3,072\u3002\u8d85\u904e\u6b64\u9577\u5ea6\u7684\u8f38\u5165\u6703\u4ee5\u975c\u9ed8\u65b9\u5f0f\u622a\u65b7\u3002\u60a8\u9084\u53ef\u4ee5\u901a\u904e\u5c07 `autoTruncate` \u8a2d\u7f6e\u7232 `false` \u4f86\u505c\u7528\u975c\u9ed8\u622a\u65b7\u3002\n\u9019\u4e9b\u793a\u4f8b\u4f7f\u7528 `textembedding-gecko@003` \u6a21\u578b\u3002\n\u5982\u9700\u7372\u53d6\u6587\u672c\u5d4c\u5165\uff0c\u8acb\u901a\u904e\u6307\u5b9a\u767c\u4f48\u8005\u6a21\u578b\u7684 ID \u4f86\u767c\u9001 POST \u8acb\u6c42\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u60a8\u8981\u7232\u5176\u751f\u6210\u5d4c\u5165\u7684\u6587\u672c\u3002 **\u9650\u5236\uff1a** \u4e94\u500b\u6587\u672c\uff0c\u6bcf\u500b\u6587\u672c\u6700\u591a 3,072 \u500b\u8a5e\u5143\u3002\n- \uff1a\u5982\u679c\u8a2d\u7f6e\u7232`false`\uff0c\u5247\u8d85\u51fa\u8a5e\u5143\u9650\u5236\u7684\u6587\u672c\u6703\u5c0e\u81f4\u8acb\u6c42\u5931\u6557\u3002\u9ed8\u8a8d\u503c\u7232`true`\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/textembedding-gecko@003:predict\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"instances\": [ { \"content\": \"TEXT\"}\n ],\n \"parameters\": {\n \"autoTruncate\": AUTO_TRUNCATE\n }\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/textembedding-gecko@003:predict\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/textembedding-gecko@003:predict\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\u3002\u8acb\u6ce8\u610f\uff0c\u7232\u7bc0\u7701\u7a7a\u9593\uff0c\u7cfb\u7d71\u622a\u65b7\u4e86 `values` \u3002```\nMODEL_ID=\"textembedding-gecko@003\"PROJECT_ID=PROJECT_IDcurl \\-X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/${MODEL_ID}:predict -d \\$'{\u00a0 \"instances\": [\u00a0 \u00a0 { \"content\": \"What is life?\"}\u00a0 ],}'\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002   \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/generative_ai/embedding.py) \n```\nfrom vertexai.language_models import TextEmbeddingModeldef text_embedding() -> list:\u00a0 \u00a0 \"\"\"Text embedding with a Large Language Model.\"\"\"\u00a0 \u00a0 model = TextEmbeddingModel.from_pretrained(\"textembedding-gecko@001\")\u00a0 \u00a0 embeddings = model.get_embeddings([\"What is life?\"])\u00a0 \u00a0 for embedding in embeddings:\u00a0 \u00a0 \u00a0 \u00a0 vector = embedding.values\u00a0 \u00a0 \u00a0 \u00a0 print(f\"Length of Embedding Vector: {len(vector)}\")\u00a0 \u00a0 return vector\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Go \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Go API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/aiplatform/latest/apiv1?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/aiplatform/text-embeddings/embeddings.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 aiplatform \"cloud.google.com/go/aiplatform/apiv1beta1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/aiplatform/apiv1beta1/aiplatformpb\"\u00a0 \u00a0 \u00a0 \u00a0 \"google.golang.org/api/option\"\u00a0 \u00a0 \u00a0 \u00a0 \"google.golang.org/protobuf/types/known/structpb\")// generateEmbeddings creates embeddings from text provided.func generateEmbeddings(w io.Writer, prompt, project, location, publisher, model string) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 apiEndpoint := fmt.Sprintf(\"%s-aiplatform.googleapis.com:443\", location)\u00a0 \u00a0 \u00a0 \u00a0 client, err := aiplatform.NewPredictionClient(ctx, option.WithEndpoint(apiEndpoint))\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"unable to create prediction client: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 // PredictRequest requires an endpoint, instances, and parameters\u00a0 \u00a0 \u00a0 \u00a0 // Endpoint\u00a0 \u00a0 \u00a0 \u00a0 base := fmt.Sprintf(\"projects/%s/locations/%s/publishers/%s/models\", project, location, publisher)\u00a0 \u00a0 \u00a0 \u00a0 url := fmt.Sprintf(\"%s/%s\", base, model)\u00a0 \u00a0 \u00a0 \u00a0 // Instances: the prompt\u00a0 \u00a0 \u00a0 \u00a0 promptValue, err := structpb.NewValue(map[string]interface{}{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"content\": prompt,\u00a0 \u00a0 \u00a0 \u00a0 })\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"unable to convert prompt to Value: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // PredictRequest: create the model prediction request\u00a0 \u00a0 \u00a0 \u00a0 req := &aiplatformpb.PredictRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Endpoint: \u00a0url,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Instances: []*structpb.Value{promptValue},\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // PredictResponse: receive the response from the model\u00a0 \u00a0 \u00a0 \u00a0 resp, err := client.Predict(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"error in prediction: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"embeddings generated: %v\", resp.Predictions[0])\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/PredictTextEmbeddingsSample.java) \n```\nimport com.google.cloud.aiplatform.util.ValueConverter;import com.google.cloud.aiplatform.v1beta1.EndpointName;import com.google.cloud.aiplatform.v1beta1.PredictResponse;import com.google.cloud.aiplatform.v1beta1.PredictionServiceClient;import com.google.cloud.aiplatform.v1beta1.PredictionServiceSettings;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.ArrayList;import java.util.List;public class PredictTextEmbeddingsSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // Details about text embedding request structure and supported models are available in:\u00a0 \u00a0 // https://cloud.google.com/vertex-ai/docs/generative-ai/embeddings/get-text-embeddings\u00a0 \u00a0 String instance = \"{ \\\"content\\\": \\\"What is life?\\\"}\";\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String publisher = \"google\";\u00a0 \u00a0 String model = \"textembedding-gecko@001\";\u00a0 \u00a0 predictTextEmbeddings(instance, project, location, publisher, model);\u00a0 }\u00a0 // Get text embeddings from a supported embedding model\u00a0 public static void predictTextEmbeddings(\u00a0 \u00a0 \u00a0 String instance, String project, String location, String publisher, String model)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 String endpoint = String.format(\"%s-aiplatform.googleapis.com:443\", location);\u00a0 \u00a0 PredictionServiceSettings predictionServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(endpoint)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (PredictionServiceClient predictionServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceClient.create(predictionServiceSettings)) {\u00a0 \u00a0 \u00a0 EndpointName endpointName =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EndpointName.ofProjectLocationPublisherModelName(project, location, publisher, model);\u00a0 \u00a0 \u00a0 // Use Value.Builder to convert instance to a dynamically typed value that can be\u00a0 \u00a0 \u00a0 // processed by the service.\u00a0 \u00a0 \u00a0 Value.Builder instanceValue = Value.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(instance, instanceValue);\u00a0 \u00a0 \u00a0 List<Value> instances = new ArrayList<>();\u00a0 \u00a0 \u00a0 instances.add(instanceValue.build());\u00a0 \u00a0 \u00a0 PredictResponse predictResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predictionServiceClient.predict(endpointName, instances, ValueConverter.EMPTY_VALUE);\u00a0 \u00a0 \u00a0 System.out.println(\"Predict Response\");\u00a0 \u00a0 \u00a0 for (Value prediction : predictResponse.getPredictionsList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"\\tPrediction: %s\\n\", prediction);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/predict-text-embeddings.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const aiplatform = require('@google-cloud/aiplatform');// Imports the Google Cloud Prediction service clientconst {PredictionServiceClient} = aiplatform.v1;// Import the helper module for converting arbitrary protobuf.Value objects.const {helpers} = aiplatform;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};const publisher = 'google';const model = 'textembedding-gecko@001';// Instantiates a clientconst predictionServiceClient = new PredictionServiceClient(clientOptions);async function callPredict() {\u00a0 // Configure the parent resource\u00a0 const endpoint = `projects/${project}/locations/${location}/publishers/${publisher}/models/${model}`;\u00a0 const instance = {\u00a0 \u00a0 content: 'What is life?',\u00a0 };\u00a0 const instanceValue = helpers.toValue(instance);\u00a0 const instances = [instanceValue];\u00a0 const parameter = {\u00a0 \u00a0 temperature: 0,\u00a0 \u00a0 maxOutputTokens: 256,\u00a0 \u00a0 topP: 0,\u00a0 \u00a0 topK: 1,\u00a0 };\u00a0 const parameters = helpers.toValue(parameter);\u00a0 const request = {\u00a0 \u00a0 endpoint,\u00a0 \u00a0 instances,\u00a0 \u00a0 parameters,\u00a0 };\u00a0 // Predict request\u00a0 const [response] = await predictionServiceClient.predict(request);\u00a0 console.log('Get text embeddings response');\u00a0 const predictions = response.predictions;\u00a0 console.log('\\tPredictions :');\u00a0 for (const prediction of predictions) {\u00a0 \u00a0 console.log(`\\t\\tPrediction : ${JSON.stringify(prediction)}`);\u00a0 }}callPredict();\n```\n## 2023 \u5e74 8 \u6708\u6216\u4e4b\u5f8c\u767c\u4f48\u7684\u6a21\u578b\u7684 API \u66f4\u6539\n\u4f7f\u7528 2023 \u5e74 8 \u6708\u6216\u4e4b\u5f8c\u767c\u4f48\u7684\u6a21\u578b\u7248\u672c\uff08\u5305\u62ec `textembedding-gecko@003` \u548c `textembedding-gecko-multilingual@001` \uff09\u6642\uff0c\u6dfb\u52a0\u4e86\u65b0\u7684\u4efb\u52d9\u985e\u578b\u53c3\u6578\u548c\u53ef\u9078\u6a19\u984c\uff08\u50c5\u5728 `task_type=RETRIEVAL_DOCUMENT` \u6642\u6709\u6548\uff09\u3002\n\u9019\u4e9b\u65b0\u53c3\u6578\u9069\u7528\u65bc\u516c\u958b\u9810\u89bd\u7248\u6a21\u578b\u53ca\u4e4b\u5f8c\u7684\u6240\u6709\u7a69\u5b9a\u6a21\u578b\u3002\n```\n{\u00a0 \"instances\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"task_type\": \"RETRIEVAL_DOCUMENT\",\u00a0 \u00a0 \u00a0 \"title\": \"document title\",\u00a0 \u00a0 \u00a0 \"content\": \"I would like embeddings for this text!\"\u00a0 \u00a0 },\u00a0 ]}\n```\n`task_type` \u53c3\u6578\u5b9a\u7fa9\u7232\u9810\u671f\u7684\u4e0b\u6e38\u61c9\u7528\uff0c\u53ef\u5e6b\u52a9\u6a21\u578b\u751f\u6210\u8cea\u91cf\u66f4\u9ad8\u7684\u5d4c\u5165\u3002\u5b83\u53ef\u4ee5\u662f\u63a1\u7528\u4ee5\u4e0b\u4efb\u4e00\u503c\u7684\u5b57\u7b26\u4e32\uff1a\n| task_type   | \u8aaa\u660e         |\n|:--------------------|:---------------------------------------|\n| RETRIEVAL_QUERY  | \u5728\u641c\u7d22\u6216\u6aa2\u7d22\u8a2d\u7f6e\u4e2d\u6307\u5b9a\u7d66\u5b9a\u6587\u672c\u662f\u67e5\u8a62\u3002 |\n| RETRIEVAL_DOCUMENT | \u5728\u641c\u7d22\u6216\u6aa2\u7d22\u8a2d\u7f6e\u4e2d\u6307\u5b9a\u7d66\u5b9a\u6587\u672c\u662f\u6587\u6a94\u3002 |\n| SEMANTIC_SIMILARITY | \u6307\u5b9a\u7d66\u5b9a\u6587\u672c\u7528\u65bc\u8a9e\u7fa9\u6587\u672c\u76f8\u4f3c\u5ea6 (STS)\u3002 |\n| CLASSIFICATION  | \u6307\u5b9a\u5d4c\u5165\u7528\u65bc\u5206\u985e\u3002      |\n| CLUSTERING   | \u6307\u5b9a\u5d4c\u5165\u7528\u65bc\u805a\u985e\u3002      |\n## textembedding-gecko-multilingual \u6a21\u578b\u7684\u8a9e\u8a00\u8986\u84cb\u7bc4\u570d\u3002\n`textembedding-gecko-multilingual@001` \u6a21\u578b\u91dd\u5c0d\u4ee5\u4e0b\u8a9e\u8a00\u9032\u884c\u4e86\u8a55\u4f30\uff1a `Arabic (ar)` \u3001 `Bengali (bn)` \u3001 `English (en)` \u3001 `Spanish (es)` \u3001 `German (de)` \u3001 `Persian (fa)` \u3001 `Finnish (fi)` \u3001 `French (fr)` \u3001 `Hindi (hi)` \u3001 `Indonesian (id)` \u3001 `Japanese (ja)` \u3001 `Korean (ko)` \u3001 `Russian (ru)` \u3001 `Swahili (sw)` \u3001 `Telugu (te)` \u3001 `Thai (th)` \u3001 `Yoruba (yo)` \u3001 `Chinese (zh)` \u3002\n\u4ee5\u4e0b\u662f\u53d7\u652f\u6301\u7684\u8a9e\u8a00\u7684\u5b8c\u6574\u5217\u8868\uff1a `Afrikaans` \u3001 `Albanian` \u3001 `Amharic` \u3001 `Arabic` \u3001 `Armenian` \u3001 `Azerbaijani` \u3001 `Basque` \u3001 `Belarusian` \u3001 `Bengali` \u3001 `Bulgarian` \u3001 `Burmese` \u3001 `Catalan` \u3001 `Cebuano` \u3001 `Chichewa` \u3001 `Chinese` \u3001 `Corsican` \u3001 `Czech` \u3001 `Danish` \u3001 `Dutch` \u3001 `English` \u3001 `Esperanto` \u3001 `Estonian` \u3001 `Filipino` \u3001 `Finnish` \u3001 `French` \u3001 `Galician` \u3001 `Georgian` \u3001 `German` \u3001 `Greek` \u3001 `Gujarati` \u3001 `Haitian Creole` \u3001 `Hausa` \u3001 `Hawaiian` \u3001 `Hebrew` \u3001 `Hindi` \u3001 `Hmong` \u3001 `Hungarian` \u3001 `Icelandic` \u3001 `Igbo` \u3001 `Indonesian` \u3001 `Irish` \u3001 `Italian` \u3001 `Japanese` \u3001 `Javanese` \u3001 `Kannada` \u3001 `Kazakh` \u3001 `Khmer` \u3001 `Korean` \u3001 `Kurdish` \u3001 `Kyrgyz` \u3001 `Lao` \u3001 `Latin` \u3001 `Latvian` \u3001 `Lithuanian` \u3001 `Luxembourgish` \u3001 `Macedonian` \u3001 `Malagasy` \u3001 `Malay` \u3001 `Malayalam` \u3001 `Maltese` \u3001 `Maori` \u3001 `Marathi` \u3001 `Mongolian` \u3001 `Nepali` \u3001 `Norwegian` \u3001 `Pashto` \u3001 `Persian` \u3001 `Polish` \u3001 `Portuguese` \u3001 `Punjabi` \u3001 `Romanian` \u3001 `Russian` \u3001 `Samoan` \u3001 `Scottish Gaelic` \u3001 `Serbian` \u3001 `Shona` \u3001 `Sindhi` \u3001 `Sinhala` \u3001 `Slovak` \u3001 `Slovenian` \u3001 `Somali` \u3001 `Sotho` \u3001 `Spanish` \u3001 `Sundanese` \u3001 `Swahili` \u3001 `Swedish` \u3001 `Tajik` \u3001 `Tamil` \u3001 `Telugu` \u3001 `Thai` \u3001 `Turkish` \u3001 `Ukrainian` \u3001 `Urdu` \u3001 `Uzbek` \u3001 `Vietnamese` \u3001 `Welsh` \u3001 `West Frisian` \u3001 `Xhosa` \u3001 `Yiddish` \u3001 `Yoruba` \u3001 `Zulu` \u3002\n## \u4f7f\u7528 Vector Search\n\u5982\u9700\u5728\u751f\u7522\u74b0\u5883\u4e2d\u5c07\u6587\u672c\u5d4c\u5165\u7528\u65bc\u5927\u578b\u641c\u7d22\u5f15\u64ce\u6216\u63a8\u85a6\u7cfb\u7d71\uff0c\u60a8\u53ef\u4ee5\u5229\u7528 [Vector Search](https://cloud.google.com/vertex-ai/docs/vector-search/overview?hl=zh-cn) \u3002\n| \u7279\u5fb5   | Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI \u6587\u672c\u5d4c\u5165 API     | Vector Search             |\n|:-------------|:-------------------------------------------------------|:----------------------------------------------------------------|\n| \u5275\u5efa\u6587\u672c\u5d4c\u5165 | \u662f              | \u5426                |\n| \u5411\u91cf\u8cea\u91cf  | \u9ad8              | \u53d6\u6c7a\u65bc\u5d4c\u5165\u7684\u5275\u5efa\u4f4d\u7f6e           |\n| \u9069\u7528\u5834\u666f  | \u5275\u5efa\u53ef\u7528\u65bc\u6587\u672c\u5206\u985e\u548c\u554f\u7b54\u7684\u9ad8\u8cea\u91cf\u6587\u672c\u5d4c\u5165\uff08\u5411\u91cf\u8868\u793a\u6cd5\uff09 | \u57f7\u884c\u5927\u578b\u8fd1\u4f3c\u6700\u9130\u8fd1 (ANN) \u641c\u7d22\uff0c\u53ef\u7232\u641c\u7d22\u5f15\u64ce\u548c\u63a8\u85a6\u7cfb\u7d71\u63d0\u4f9b\u652f\u6301\u3002 |\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u77ad\u89e3\u5982\u4f55 [\u8abf\u6574\u57fa\u790e\u6a21\u578b](https://cloud.google.com/vertex-ai/generative-ai/docs/models/tune-models?hl=zh-cn) \u3002\n- \u77ad\u89e3 [Responsible AI \u6700\u4f73\u5be6\u8e10\u548c Vertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI \u7684\u5b89\u5168\u904e\u6ffe\u689d\u4ef6](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/responsible-ai?hl=zh-cn) \u3002", "guide": "Generative AI on Vertex AI"}