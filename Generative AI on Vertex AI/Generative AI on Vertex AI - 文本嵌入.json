{"title": "Generative AI on Vertex AI - \u6587\u672c\u5d4c\u5165", "url": "https://cloud.google.com/vertex-ai/generative-ai/docs/model-reference/text-embeddings?hl=zh-cn", "abstract": "# Generative AI on Vertex AI - \u6587\u672c\u5d4c\u5165\nEmbeddings for Text ( `textembedding-gecko` ) \u662f\u652f\u6301\u6587\u672c\u5d4c\u5165\u7684\u6a21\u578b\u7684\u540d\u7a31\u3002\u6587\u672c\u5d4c\u5165\u662f\u4e00\u7a2e NLP \u6280\u8853\uff0c\u53ef\u5c07\u6587\u672c\u6578\u64da\u8f49\u63db\u7232\u53ef\u7531\u6a5f\u5668\u5b78\u7fd2\u7b97\u6cd5\uff08\u5c24\u5176\u662f\u5927\u578b\u6a21\u578b\uff09\u8655\u7406\u7684\u6578\u503c\u5411\u91cf\u3002\u9019\u4e9b\u5411\u91cf\u8868\u793a\u65e8\u5728\u6355\u7372\u5b83\u5011\u6240\u8868\u793a\u5b57\u8a5e\u7684\u8a9e\u7fa9\u542b\u7fa9\u548c\u4e0a\u4e0b\u6587\u3002\n\u5d4c\u5165\u6709\u591a\u7a2e\u7248\u672c\u3002 `textembedding-gecko@003` \u662f\u5177\u6709\u589e\u5f37\u7684 AI \u8cea\u91cf\u7684\u6700\u65b0\u7a69\u5b9a\u5d4c\u5165\u6a21\u578b\uff0c `textembedding-gecko-multilingual@001` \u662f\u91dd\u5c0d\u5404\u7a2e\u975e\u82f1\u8a9e\u8a9e\u8a00\u9032\u884c\u4e86\u512a\u5316\u7684\u6a21\u578b\u3002\n\u5982\u9700\u5728\u63a7\u5236\u6aaf\u4e2d\u63a2\u7d22\u6b64\u6a21\u578b\uff0c\u8acb\u53c3\u95b1 Model Garden \u4e2d\u7684 Embeddings for Text \u6a21\u578b\u5361\u7247\u3002  [\u524d\u5f80 Model Garden](https://console.cloud.google.com/vertex-ai/publishers/google/model-garden/textembedding-gecko?hl=zh-cn)\n", "content": "## \u4f7f\u7528\u5834\u666f\n**\u8a9e\u7fa9\u641c\u7d22** \uff1a\u6587\u672c\u5d4c\u5165\u53ef\u7528\u65bc\u5728\u9ad8\u7dad\u5411\u91cf\u7a7a\u9593\u4e2d\u8868\u793a\u7528\u6236\u7684\u67e5\u8a62\u548c\u6587\u6a94\u7bc4\u570d\u3002\u8a9e\u7fa9\u8207\u7528\u6236\u67e5\u8a62\u66f4\u76f8\u4f3c\u7684\u6587\u6a94\u5728\u5411\u91cf\u7a7a\u9593\u4e2d\u7684\u8ddd\u96e2\u6703\u66f4\u77ed\uff0c\u5728\u641c\u7d22\u7d50\u679c\u4e2d\u7684\u6392\u540d\u4e5f\u6703\u66f4\u9760\u524d\u3002\n**\u6587\u672c\u5206\u985e** \uff1a\u8a13\u7df4\u4e00\u500b\u5c07\u6587\u672c\u5d4c\u5165\u6620\u5c04\u5230\u6b63\u78ba\u985e\u5225\u6a19\u7c64\u7684\u6a21\u578b\uff08\u4f8b\u5982\u8c93\u8207\u72d7\u3001\u5783\u573e\u90f5\u4ef6\u8207\u975e\u5783\u573e\u90f5\u4ef6\uff09\u3002\u6a21\u578b\u8a13\u7df4\u5b8c\u6210\u5f8c\uff0c\u53ef\u7528\u65bc\u6839\u64da\u5d4c\u5165\u5c07\u65b0\u6587\u672c\u8f38\u5165\u5206\u7232\u4e00\u500b\u6216\u591a\u500b\u985e\u5225\u3002\n## HTTP \u8acb\u6c42\n```\nPOST https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/textembedding-gecko:predict\n```\n## \u6a21\u578b\u7248\u672c\n\u5982\u9700\u4f7f\u7528 [\u6700\u65b0\u7684\u6a21\u578b\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#latest-version) \uff0c\u8acb\u4f7f\u7528 @latest \u5f8c\u7db4\u6307\u5b9a\uff0c\u4f8b\u5982 `textembedding-gecko@latest` \u3002\n\u5982\u9700\u4f7f\u7528 [\u7a69\u5b9a\u7684\u6a21\u578b\u7248\u672c](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn#stable-version) \uff0c\u8acb\u6307\u5b9a\u6a21\u578b\u7248\u672c\u865f\uff0c\u4f8b\u5982 `textembedding-gecko@003` \u3002 \u6bcf\u500b\u7a69\u5b9a\u7248\u672c\u6703\u5728\u5f8c\u7e8c\u7a69\u5b9a\u7248\u767c\u4f48\u65e5\u671f\u5f8c\u7684\u516d\u500b\u6708\u5167\u53ef\u7528\u3002\n\u4e0b\u8868\u5305\u542b\u53ef\u7528\u7684\u7a69\u5b9a\u6a21\u578b\u7248\u672c\uff1a\n| textembedding-gecko \u6a21\u578b    | \u767c\u4f48\u65e5\u671f   | \u7d42\u6b62\u65e5\u671f |\n|:-------------------------------------|:--------------------|:-----------|\n| textembedding-gecko@003    | 2023 \u5e74 12 \u6708 12 \u65e5 | \u4e0d\u9069\u7528  |\n| textembedding-gecko@002    | 2023 \u5e74 11 \u6708 2 \u65e5 | \u4e0d\u9069\u7528  |\n| textembedding-gecko-multilingual@001 | 2023 \u5e74 11 \u6708 2 \u65e5 | \u4e0d\u9069\u7528  |\n| textembedding-gecko@001    | 2023 \u5e74 6 \u6708 7 \u65e5 | \u4e0d\u9069\u7528  |\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6a21\u578b\u7248\u672c\u548c\u751f\u547d\u9031\u671f](https://cloud.google.com/vertex-ai/generative-ai/docs/learn/model-versioning?hl=zh-cn) \u3002\n## \u8acb\u6c42\u6b63\u6587\n```\n{\u00a0 \"instances\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"task_type\": \"RETRIEVAL_DOCUMENT\",\u00a0 \u00a0 \u00a0 \"title\": \"document title\",\u00a0 \u00a0 \u00a0 \"content\": \"I would like embeddings for this text!\"\u00a0 \u00a0 },\u00a0 ]}\n```\nVertex AI \u4e0a\u7684\u751f\u6210\u5f0f AI PaLM Embedding API \u57f7\u884c\u5728\u7dda\uff08\u5be6\u6642\uff09\u9810\u6e2c\u4ee5\u5f9e\u8f38\u5165\u6587\u672c\u7372\u53d6\u5d4c\u5165\u3002\n\u8a72 API \u6700\u591a\u53ef\u63a5\u53d7 3072 \u500b\u8f38\u5165\u8a5e\u5143\uff0c\u4e26\u8f38\u51fa 768 \u7dad\u5411\u91cf\u5d4c\u5165\u3002\u5c0d\u6587\u672c\u5d4c\u5165\u6a21\u578b `textembedding-gecko` \u4f7f\u7528\u4ee5\u4e0b\u53c3\u6578\u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6587\u672c\u5d4c\u5165\u6982\u89bd](https://cloud.google.com/vertex-ai/generative-ai/docs/embeddings/get-text-embeddings?hl=zh-cn) \u3002\n| \u53c3\u6578  | \u8aaa\u660e                         | \u53ef\u63a5\u53d7\u7684\u503c                      |\n|:----------|:-----------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------------|\n| content | \u60a8\u8981\u7232\u5176\u751f\u6210\u5d4c\u5165\u7684\u6587\u672c\u3002                    | \u6587\u672c                        |\n| task_type | `task_type` \u53c3\u6578\u5b9a\u7fa9\u7232\u9810\u671f\u7684\u4e0b\u6e38\u61c9\u7528\uff0c\u53ef\u5e6b\u52a9\u6a21\u578b\u751f\u6210\u8cea\u91cf\u66f4\u597d\u7684\u5d4c\u5165\u3002\u5b83\u53ef\u4ee5\u662f\u63a1\u7528\u4ee5\u4e0b\u4efb\u4e00\u503c\u7684\u5b57\u7b26\u4e32\u3002 | `RETRIEVAL_QUERY`\u3001`RETRIEVAL_DOCUMENT`\u3001`SEMANTIC_SIMILARITY`\u3001`CLASSIFICATION` `CLUSTERING`\u3002 |\n| title  | \u5d4c\u5165\u7684\u6a19\u984c\u3002                       | \u6587\u672c                        |\n## \u793a\u4f8b\u8acb\u6c42\n\u5982\u9700\u4f7f\u7528 Vertex AI API \u6e2c\u8a66\u6587\u672c\u63d0\u793a\uff0c\u8acb\u5411\u767c\u4f48\u65b9\u6a21\u578b\u7aef\u9ede\u767c\u9001 POST \u8acb\u6c42\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifiers) \u3002\n- \uff1a\u60a8\u8981\u7232\u5176\u751f\u6210\u5d4c\u5165\u7684\u6587\u672c\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/textembedding-gecko@003:predict\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"instances\": [ { \"content\": \"TEXT\"}\n ],\n}\n```\n\u5982\u9700\u767c\u9001\u8acb\u6c42\uff0c\u8acb\u9078\u64c7\u4ee5\u4e0b\u65b9\u5f0f\u4e4b\u4e00\uff1a\n **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/textembedding-gecko@003:predict\"\n``` **\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u547d\u4ee4\u5047\u5b9a\u60a8\u5df2\u4f7f\u7528\u60a8\u7684\u7528\u6236\u8cec\u865f\u901a\u904e\u904b\u884c [gcloud init](https://cloud.google.com/sdk/gcloud/reference/init?hl=zh-cn) \u6216 [gcloud auth login](https://cloud.google.com/sdk/gcloud/reference/auth/login?hl=zh-cn) \u767b\u9304`gcloud`CLI\uff0c\u6216\u8005\u4f7f\u7528\u4e86 [Cloud Shell](https://cloud.google.com/shell/docs?hl=zh-cn) \uff0c\u9019\u6703\u4f7f\u60a8\u81ea\u52d5\u767b\u9304`gcloud`CLI\u3002\u60a8\u53ef\u4ee5\u904b\u884c [gcloud auth list](https://cloud.google.com/sdk/gcloud/reference/auth/list?hl=zh-cn) \u4f86\u6aa2\u67e5\u7576\u524d\u6d3b\u8e8d\u7684\u8cec\u865f\u3002\n\u5c07\u8acb\u6c42\u6b63\u6587\u4fdd\u5b58\u5728\u540d\u7232 `request.json` \u7684\u6587\u4ef6\u4e2d\uff0c\u7136\u5f8c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://us-central1-aiplatform.googleapis.com/v1/projects/PROJECT_ID/locations/us-central1/publishers/google/models/textembedding-gecko@003:predict\" | Select-Object -Expand Content\n```\n\u60a8\u61c9\u8a72\u6703\u6536\u5230\u985e\u4f3c [\u793a\u4f8b\u97ff\u61c9](#sample_response) \u7684 JSON \u97ff\u61c9\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u6216\u66f4\u65b0 Python\uff0c\u8acb\u53c3\u95b1 [\u5b89\u88dd Python \u7248 Vertex AI SDK](https://cloud.google.com/vertex-ai/docs/start/use-vertex-ai-python-sdk?hl=zh-cn) \u3002   \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [   Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/generative_ai/embedding.py) \n```\nfrom vertexai.language_models import TextEmbeddingModeldef text_embedding() -> list:\u00a0 \u00a0 \"\"\"Text embedding with a Large Language Model.\"\"\"\u00a0 \u00a0 model = TextEmbeddingModel.from_pretrained(\"textembedding-gecko@001\")\u00a0 \u00a0 embeddings = model.get_embeddings([\"What is life?\"])\u00a0 \u00a0 for embedding in embeddings:\u00a0 \u00a0 \u00a0 \u00a0 vector = embedding.values\u00a0 \u00a0 \u00a0 \u00a0 print(f\"Length of Embedding Vector: {len(vector)}\")\u00a0 \u00a0 return vector\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Node.js \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/aiplatform/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/ai-platform/snippets/predict-text-embeddings.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\\\u00a0* (Not necessary if passing values as arguments)\u00a0*/// const project = 'YOUR_PROJECT_ID';// const location = 'YOUR_PROJECT_LOCATION';const aiplatform = require('@google-cloud/aiplatform');// Imports the Google Cloud Prediction service clientconst {PredictionServiceClient} = aiplatform.v1;// Import the helper module for converting arbitrary protobuf.Value objects.const {helpers} = aiplatform;// Specifies the location of the api endpointconst clientOptions = {\u00a0 apiEndpoint: 'us-central1-aiplatform.googleapis.com',};const publisher = 'google';const model = 'textembedding-gecko@001';// Instantiates a clientconst predictionServiceClient = new PredictionServiceClient(clientOptions);async function callPredict() {\u00a0 // Configure the parent resource\u00a0 const endpoint = `projects/${project}/locations/${location}/publishers/${publisher}/models/${model}`;\u00a0 const instance = {\u00a0 \u00a0 content: 'What is life?',\u00a0 };\u00a0 const instanceValue = helpers.toValue(instance);\u00a0 const instances = [instanceValue];\u00a0 const parameter = {\u00a0 \u00a0 temperature: 0,\u00a0 \u00a0 maxOutputTokens: 256,\u00a0 \u00a0 topP: 0,\u00a0 \u00a0 topK: 1,\u00a0 };\u00a0 const parameters = helpers.toValue(parameter);\u00a0 const request = {\u00a0 \u00a0 endpoint,\u00a0 \u00a0 instances,\u00a0 \u00a0 parameters,\u00a0 };\u00a0 // Predict request\u00a0 const [response] = await predictionServiceClient.predict(request);\u00a0 console.log('Get text embeddings response');\u00a0 const predictions = response.predictions;\u00a0 console.log('\\tPredictions :');\u00a0 for (const prediction of predictions) {\u00a0 \u00a0 console.log(`\\t\\tPrediction : ${JSON.stringify(prediction)}`);\u00a0 }}callPredict();\n```\u5728\u5617\u8a66\u6b64\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u6309\u7167 [\u300a\u751f\u6210\u5f0f AI \u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u300b](https://cloud.google.com/vertex-ai/docs/start/client-libraries?hl=zh-cn) \u4e2d\u7684 Java \u8a2d\u7f6e\u8aaa\u660e\u57f7\u884c\u64cd\u4f5c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u751f\u6210\u5f0f AI Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-aiplatform/latest/com.google.cloud.aiplatform.v1?hl=zh-cn) \u3002\n\u5982\u9700\u5411\u751f\u6210\u5f0f AI \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/aiplatform/src/main/java/aiplatform/PredictTextEmbeddingsSample.java) \n```\nimport com.google.cloud.aiplatform.util.ValueConverter;import com.google.cloud.aiplatform.v1beta1.EndpointName;import com.google.cloud.aiplatform.v1beta1.PredictResponse;import com.google.cloud.aiplatform.v1beta1.PredictionServiceClient;import com.google.cloud.aiplatform.v1beta1.PredictionServiceSettings;import com.google.protobuf.Value;import com.google.protobuf.util.JsonFormat;import java.io.IOException;import java.util.ArrayList;import java.util.List;public class PredictTextEmbeddingsSample {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // Details about text embedding request structure and supported models are available in:\u00a0 \u00a0 // https://cloud.google.com/vertex-ai/docs/generative-ai/embeddings/get-text-embeddings\u00a0 \u00a0 String instance = \"{ \\\"content\\\": \\\"What is life?\\\"}\";\u00a0 \u00a0 String project = \"YOUR_PROJECT_ID\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String publisher = \"google\";\u00a0 \u00a0 String model = \"textembedding-gecko@001\";\u00a0 \u00a0 predictTextEmbeddings(instance, project, location, publisher, model);\u00a0 }\u00a0 // Get text embeddings from a supported embedding model\u00a0 public static void predictTextEmbeddings(\u00a0 \u00a0 \u00a0 String instance, String project, String location, String publisher, String model)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 String endpoint = String.format(\"%s-aiplatform.googleapis.com:443\", location);\u00a0 \u00a0 PredictionServiceSettings predictionServiceSettings =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceSettings.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEndpoint(endpoint)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (PredictionServiceClient predictionServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 PredictionServiceClient.create(predictionServiceSettings)) {\u00a0 \u00a0 \u00a0 EndpointName endpointName =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EndpointName.ofProjectLocationPublisherModelName(project, location, publisher, model);\u00a0 \u00a0 \u00a0 // Use Value.Builder to convert instance to a dynamically typed value that can be\u00a0 \u00a0 \u00a0 // processed by the service.\u00a0 \u00a0 \u00a0 Value.Builder instanceValue = Value.newBuilder();\u00a0 \u00a0 \u00a0 JsonFormat.parser().merge(instance, instanceValue);\u00a0 \u00a0 \u00a0 List<Value> instances = new ArrayList<>();\u00a0 \u00a0 \u00a0 instances.add(instanceValue.build());\u00a0 \u00a0 \u00a0 PredictResponse predictResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predictionServiceClient.predict(endpointName, instances, ValueConverter.EMPTY_VALUE);\u00a0 \u00a0 \u00a0 System.out.println(\"Predict Response\");\u00a0 \u00a0 \u00a0 for (Value prediction : predictResponse.getPredictionsList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"\\tPrediction: %s\\n\", prediction);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\n## \u97ff\u61c9\u6b63\u6587\n```\n{\u00a0 \"predictions\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"embeddings\": {\u00a0 \u00a0 \u00a0 \u00a0 \"statistics\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"truncated\": boolean,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"token_count\": integer\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"values\": [ number ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\n| \u97ff\u61c9\u5143\u7d20 | \u8aaa\u660e            |\n|:-----------|:--------------------------------------------------|\n| embeddings | \u6839\u64da\u8f38\u5165\u6587\u672c\u751f\u6210\u7684\u7d50\u679c\u3002       |\n| statistics | \u6839\u64da\u8f38\u5165\u6587\u672c\u8a08\u7b97\u7684\u7d71\u8a08\u4fe1\u606f\u3002      |\n| truncated | \u8868\u793a\u8f38\u5165\u6587\u672c\u662f\u5426\u8d85\u904e\u5141\u8a31\u7684\u8a5e\u5143\u6578\u91cf\u4e0a\u9650\u4e26\u88ab\u622a\u65b7\u3002 |\n| tokenCount | \u8f38\u5165\u6587\u672c\u7684\u8a5e\u5143\u6578\u3002        |\n| values  | values \u5b57\u6bb5\u5305\u542b\u8207\u8f38\u5165\u6587\u672c\u4e2d\u7684\u5b57\u8a5e\u5c0d\u61c9\u7684\u5d4c\u5165\u5411\u91cf\u3002 |\n## \u793a\u4f8b\u97ff\u61c9\n```\n{\u00a0 \"predictions\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"embeddings\": {\u00a0 \u00a0 \u00a0 \u00a0 \"values\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.0058424929156899452,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.011848051100969315,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.032247550785541534,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 -0.031829461455345154,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 -0.055369812995195389,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"statistics\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"token_count\": 4,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"truncated\": false\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```", "guide": "Generative AI on Vertex AI"}