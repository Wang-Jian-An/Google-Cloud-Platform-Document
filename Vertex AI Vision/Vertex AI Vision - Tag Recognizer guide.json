{"title": "Vertex AI Vision - Tag Recognizer guide", "url": "https://cloud.google.com/vision-ai/docs/tag-recognizer?hl=zh-cn", "abstract": "# Vertex AI Vision - Tag Recognizer guide\nThe **Tag Recognizer** model helps you solve key problems in understanding your retail shelf, namely recognizing and parsing the tags (for example, the price tag or other label tags) according to user-defined key-value pair entity extraction schema.\nThis model can serve as the primary AI building block for analyzing and interpreting product image data in retail stores. For example, you can use this model on shelf images that are captured by local cameras or mobile devices.\n", "content": "## Tag Recognizer and Product Recognizer use cases\nThe **Product Recognizer model** and the **Tag Recognizer models** can serve as the primary AI building blocks for analyzing and interpreting the image data around products and tags found in retail stores, such as the shelf scanning images captured by the installed cameras or mobile devices / platforms.\nThe Product recognizer and Tag recognizer models incorporate several core Google AI modeling and data capabilities to help the retailers and/or technical partners to solve key problems in understanding the retail shelf, including:\n- Detecting, recognizing thus understanding what products are in the image or on the shelf.\n- Detecting, recognizing, and parsing the tags (price-tag, for example, or any other text label tags) according to user defined key-value pair entity extraction schema.\nIn particular, several differentiating Google AI models are included in the shelf checking solution to support these use-cases problem solving, such as\n- Product detection models (pre-trained by Google, but that you can still customize).\n- Product thumbnail visual embedding model, which turns a product thumbnail image into a numerical feature space representation.\n- Google OCR model, which extracts all texts visible in the image.\n- Google entity extraction model (that you can customize), which turns the raw texts into the user defined key-value pair named entities.\nIn addition to these Google AI models, the shelf checking solution also leverages Google's large database of product information. The product data in this Product database includes the product's GTIN / UPC identity, product brand, title, and cross-language descriptions, product logo, and imagery with various packaging variations. The Product database with the previously mentioned product thumbnail visual embedding model enables the Product recognizer model to be able to recognize many products immediately.\nFor example, given a captured shelf image as follows, the shelf checking solution aims to:\n- Detect and localize all product item boxes (visible, not severely occluded) in the image, and recognize the product identity of each individual product item box at the GTIN / UPC level.\n- Detect and localize all tag boxes (visible) in the image, recognize all text strings in the tag, and then try to parse the text into the user-defined key-value pair entity extraction schema, such as product item description, price value.\nThe two major AI features to enable these solutions are Product Recognizer model and Tag Recognizer model, which we will provide more details in the following sections. For each of these two APIs that mainly provide the image inference services, there are one or more components in each API that you can customize. We will first describe the inference path of the API use, and then provide some short description of how the involved components you can customize, either through some user configuration or through some model training you carry out.\n## Tag Recognizer functionality\nThis model recognizes all text strings in the tag, and then tries to parse the text into the user-defined key-value pair entity extraction schema, such as product item description or price value. It includes the following differentiating Google AI models:\n- The Google OCR technology, which extracts all visible text in the image.\n- The Google entity extraction model which turns the raw text into the user defined key-value pair named entities. Customize this model using [Vertex AI](/vertex-ai/docs/training-overview) . For example, if you mainly care about the product item description, product price value, or sale price, but nothing else, user can define their tag parsing schema as follows:```\nkey: item_description \u00a0 value: stringkey: regular_price \u00a0 \u00a0 \u00a0value: numberkey: sale_price \u00a0 \u00a0 \u00a0 \u00a0 value: number\n```\n### Tag Parsing Schema\nWith the customized entity extraction model training, the detected tag item box will then be recognized and parsed in conformance with the user defined schema, for example as follows:\n```\n\u00a0 item_description: \u00a0 COLLECTION 18PC GFT BX\u00a0 regular_price: \u00a0 \u00a0 \u00a01099\u00a0 sale_price: \u00a0 \u00a0 \u00a0 \u00a0 999\n```\n### Example Output JSON Object\n```\n{\n \"imageUri\": \"gs://test_bucket/test_image.jpg\",\n \"tagRecognitionAnnotations\": [ {\n  \"entities\": [  {\n   \"confidence\": 0.99646133,\n   \"mentionText\": \"NISSIN TOP RAMEN\\n\\nBOW CHICKEN\\n\\n\",\n   \"region\": {\n   \"xMax\": 0.4618055,\n   \"xMin\": 0.042725038,\n   \"yMax\": 0.45387268,\n   \"yMin\": 0.18415153\n   },\n   \"type\":\"description\"\n  },\n  {\n   \"confidence\": 0.95828205,\n   \"mentionText\": \"$3.90\\n\",\n   \"region\": {\n   \"xMax\": 0.24819264,\n   \"xMin\": 0.04185935,\n   \"yMax\": 0.96134734,\n   \"yMin\": 0.80382305\n   },\n   \"type\":\"unit_price\"\n  },\n  {\n   \"confidence\": 0.60659707,\n   \"mentionText\": \"$14.99\\n\",\n   \"region\": {\n   \"xMax\": 0.9754113,\n   \"xMin\": 0.3654699,\n   \"yMax\": 0.92825794,\n   \"yMin\": 0.40368474\n   },\n   \"type\":\"price\"\n  }\n  ]\n }\n ]\n}\n```\n## Environment setup\nThis section describes how to interact with Store Vision AI RESTful API.\n```\nAPI_ENDPOINT=visionai.googleapis.comPROJECT_ID=your project ID\n```\nAll the `create` methods require specifying the to-be-created resource name/ID explicitly. You may use a meaningful string identifier, for example, \"product-ABC\" or a randomly generated identifier for example, UUID.\nTo grant a person role the editor access to use Store Vision API, please run the following iam binding command:\n```\ngcloud projects add-iam-policy-binding PROJECT_ID --member='user:USER_ACCOUNT' --role='roles/visionai.editor'\n```\nTo grant a service account the editor access, please use the below command:\n```\ngcloud projects add-iam-policy-binding PROJECT_ID --member='serviceAccount:SERVICE_ACCOUNT' --role='roles/visionai.editor'\n```\n[Learn more about IAM binding](/sdk/gcloud/reference/projects/add-iam-policy-binding) .\n## Tag Recognizer user journey\n- Perform tag detection model customized training by using [Vertex AI/ AutoML Vision ObjectDetection](/vision/automl/object-detection/docs) feature.\n- Perform tag entity parsing model training by using [Vertex AI /AutoML Vision ObjectDetection](/vision/automl/object-detection/docs) feature with customized OCR engine.\n- Create an Endpoint with desired Tag Recognition config.\n- Perform BatchAnalyze with TagRecognition feature. In the backend, the system will identify tags from each input image, analyze the text on each detected tag to produce a structured parsing output. T \n## Tag Detection & Entity Parsing model training\nYou can train the customized Tag Detection model using our existing [Vertex AI /AutoML Vision](/vision/automl/object-detection/docs) product's image Object Detection model training feature. Though Vertex AI / AutoML Vision Object Detection model training feature provides a fully managed model training experience, it's still your responsibility to prepare a well sampled image dataset with fully labeled object bounding box annotations as the training dataset to feed into the model training console. Google Cloud provides the Vertex AI Data Labeling Service to let you create the data labeling task. Please follow the following Vertex AI data labeling job link for details: [/vertex-ai/docs/datasets/data-labeling-job](/vertex-ai/docs/datasets/data-labeling-job) . Provide clear data labeling instructions to the human raters so that they know how to label the tag detection bounding boxes in the images as the training dataset preparation.\nTo train the Tag Entity Parsing model, you need to prepare a collection of training data, with images and their associated annotations.\n- The image is the already cropped tag image.\n- In each image, you need to define and provide the key entity field (such as product_title, price, unit_price fields.) they want to detect and recognize / parse, and their associated image bounding box coordinate location in this cropped image view.\n- To support the correct recognition / parsing, we also require you to provide the regular expression syntax to characterize each field. This is needed to assist the tag parsing algorithm's training and inference routine.Tag Entity Parsing Training Example\nFor example, with the previous tag entity parsing training example, you can provide one line of annotation info in the training data annotation CSV file as follows:\n```\n\"image_filepath\", \"product_title\", \"(x0, y0, x1, y1)\", \"\", \"price\", \"(x0, y0, x1, y1)\", \"\\\\$\\\\d+\\\\.\\\\d{2}\", \"unit_price\", \"(x0, y0, x1, y1)\", \"\\\\$\\\\d+\\\\.\\\\d{2}\"\n```\nFrom the previous example:\n- The \"product_title\" field has its corresponding box image coordinate \"(x0, y0, x1, y1)\" and the regular expression constraint for this field is none \"\".\n- The \"price\" field has its corresponding box image coordinate \"(x0, y0, x1, y1)\" and the regular expression constraint for this field is \"\\$\\d+\\.\\d{2}\", which is indicating we are looking to recognize and parse this field with the $ sign at the beginning of text entry, and a few number digits before the \".\" and two digits after the \".\".\n- The \"unit_price\" field has the same annotation syntax as the \"price\" field, for example, the box image coordinates \"(x0, y0, x1, y1)\" and the regular expression constraint for this field is \"\\$\\d+\\.\\d{2}\", which is indicating we are looking to recognize and parse this field with the $ sign at the beginning of text entry, and a few number digits before the \".\" and two digits after the \".\".\nHence, a proper price-tag parsing / entity detection model training data will have a collection of price-tag images, with the annotation in a CSV file with each CSV row entry just like the entry in the previous example.\n```\n\"image_filepath\", \"product_title\", \"(x0, y0, x1, y1)\", \"\", \"price\", \"(x0, y0, x1, y1)\", \"\\\\$\\\\d+\\\\.\\\\d{2}\", \"unit_price\", \"(x0, y0, x1, y1)\", \"\\\\$\\\\d+\\\\.\\\\d{2}\"\"image_filepath\", \"product_title\", \"(x0, y0, x1, y1)\", \"\", \"price\", \"(x0, y0, x1, y1)\", \"\\\\$\\\\d+\\\\.\\\\d{2}\", \"unit_price\", \"(x0, y0, x1, y1)\", \"\\\\$\\\\d+\\\\.\\\\d{2}\"\"image_filepath\", \"product_title\", \"(x0, y0, x1, y1)\", \"\", \"price\", \"(x0, y0, x1, y1)\", \"\\\\$\\\\d+\\\\.\\\\d{2}\", \"unit_price\", \"(x0, y0, x1, y1)\", \"\\\\$\\\\d+\\\\.\\\\d{2}\"[...]\n```\nYou can train the customized Tag Entity Parsing model using our existing [Vertex AI /AutoML Vision](/vision/automl/object-detection/docs) product's Image Object Detection model training feature, plus the Google OCR engine customization.\nPlease note that though, as of 07/2022, customized Tag Detection and Tag Entity Parsing model training and deployment to Store Vision AI's BatchAnalyze API is not yet fully supported as an integrated console experience, you're still able to take advantage of this customized Tag Detection and Tag Entity Parsing model training (using Vertex AI Vision's Object Detection feature) and serving them in Store Vision AI's BatchAnalyze API by taking several manual self-serving steps.\n## API usage - batch analyze inference- =Your endpoint id\n- =Your tag detection model name\n- =Your tag parsing model name\n```\ncurl -sS -X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/us-central1/retailEndpoints?retail_endpoint_id=ENDPOINT_ID \\-d '{\u00a0 \"tagRecognitionConfig\": {\u00a0 \u00a0 \"tag_detection_model\": \"TAG_DETECTOR_NAME\",\u00a0 \u00a0 \"tag_parsing_model\": \"TAG_PARSER_NAME\"\u00a0 }}'\n```\n- =Cloud Storage uri of your input file, each line in the input file is just a Cloud Storage uri of image to process, for example, gs://my-bucket/my-image.jpg\n- =Cloud Storage uri prefix for output results file, for example, gs://my-bucket/my-output-dir\n```\ncurl -sS -X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/us-central1/retailEndpoints/ENDPOINT_ID:batchAnalyze -d '{\u00a0 \"gcsSource\": {\u00a0 \u00a0 \"uris\": [\"INPUT_FILE_URI\"]\u00a0 },\u00a0 \"features\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"type\": \"TYPE_TAG_RECOGNITION\",\u00a0 \u00a0 \u00a0}\u00a0 ],\u00a0 \"outputGcsDestination\": {\u00a0 \u00a0 \"outputUriPrefix\": \"OUTPUT_URI_PREFIX\"\u00a0 }}'\n```\n**Note:** You can override the `tagRecognitionConfig` on the Endpoint by specifying it in the BatchAnalyze request instead.\n```\n\"features\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"type\": \"TYPE_TAG_RECOGNITION\",\u00a0 \u00a0 \u00a0 \"tagRecognitionConfig\": {\u00a0 \u00a0 \u00a0 \u00a0 \"tag_detection_model\": \"'TAG_DETECTOR_NAME'\",\u00a0 \u00a0 \u00a0 \u00a0 \"tag_parsing_model\": \"TAG_PARSER_NAME\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ],\n```\nThere are also more fields that you can set and configure in the `tagRecognitionConfig` , which is a `RetailTagRecognitionConfig` object. Please see the resource description in the API reference for more details.\n## API reference### Resource: projects.locations.retailCatalogs\nJSON Representation\n```\n{\u00a0 \"name\": string,\u00a0 \"displayName\": string,\u00a0 \"createTime\": string,\u00a0 \"updateTime\": string,\u00a0 \"resourceState\": enum(RetailResourceState),\u00a0 \"labels\": {\u00a0 \u00a0 string: string,\u00a0 \u00a0 ...\u00a0 }}\n```\n**Fields**\n| name   | String       | Output only. Resource name of the RetailCatalog                                                                                                       |\n|:--------------|:---------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| displayName | String       | Optional. Display name of the RetailCatalog.                                                                                                        |\n| createTime | string (Timestamp format)  | Output only. Timestamp when this RetailCatalog was created.                                                                                                    |\n| updateTime | string (Timestamp format)  | Output only. The update timestamp.                                                                                                          |\n| resourceState | enum        | Output only. State of the RetailCatalog.                                                                                                         |\n| labels  | map (key: string, value: string) | The labels with user-defined metadata to organize your RetailCatalog. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }. |\n### Method: projects.locations.retailCatalogs.create\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/us-central1}/retailCatalogs\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Request body**\nThe request body contains an instance of `RetailCatalog` .\n**Response body**\nIf successful, the response body contains a newly created instance of `RetailCatalog` .\n### Method: projects.locations.retailCatalogs.get\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/us-central1/retailCatalogs/*}\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2       |\n|:-------------|:-------------|:------------------------------------|\n| name   | string  | Required. RetailCatalog identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains an instance of `RetailCatalog` .\n### Method: projects.locations.retailCatalogs.list\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/us-central1}/retailCatalogs\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Query parameters**\n| filter | string | Optional. An expression for filtering the results of the request.                  |\n|:----------|:---------|:--------------------------------------------------------------------------------------------------------------------------------------|\n| pageToken | string | Optional. A token identifying a page of results the server should return.                |\n| pageSize | integer | Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. |\n| orderBy | string | Optional. A comma-separated list of fields to order by sorted in ascending order. Use \"desc\" after a field name for descending.  |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains data with the following structure: JSON representation\n```\n{\u00a0 \"retailCatalogs\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 object (RetailCatalog)\u00a0 \u00a0 }\u00a0 ],\u00a0 \"nextPageToken\": string}\n```\n### Method: projects.locations.retailCatalogs.delete\nHTTP request\nDELETE https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/us-central1/retailCatalogs/*}\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2       |\n|:-------------|:-------------|:------------------------------------|\n| name   | string  | Required. RetailCatalog identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains an instance of `Operation` .\n### Method: projects.locations.retailCatalogs.importRetailProducts\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/us-central1/retailCatalogs/*}:importRetailProducts\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2        |\n|:-------------|:-------------|:---------------------------------------|\n| name   | string  | Required. RetailCatalog resource name. |\n**Request body**\nJSON representation\n```\n{\u00a0 \"gcsSource\": { object(GcsSource) },\u00a0 \"format\": enum(Format)}\n```\n**Fields**\n| 0   | 1  | 2                                                                                    |\n|:----------|:-------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| gcsSource | object | Required. The Cloud Storage location for the input content. Multiple input locations can be provided. The contents of all input locations will be imported in one batch. Supported file extensions: 1. A JSONL file. Each line is a JSON format of RetailProductIoFormat. 2. A TXT file. Each line is the gtin of a Product to be imported. |\n| format | enum | Required. The import file format.                                                                            |\nFormat ENUM values\n| FORMAT_UNSPECIFIED | Should not be used. |\n|:---------------------|:----------------------|\n| FORMAT_TXT   | TXT format.   |\n| FORMAT_JSONL   | JSONL format.   |\n**Response body**\nIf successful, the response body contains an instance of `Operation` .\n### Resource: projects.locations.retailProducts\nJSON Representation\n```\n{\u00a0 \"name\": string,\u00a0 \"gtins\": [string],\u00a0 \"normalizedGtins\": [string],\u00a0 \"thirdPartyIds\": [ { object(ThirdPartyId) }],\u00a0 \"locale\": string,\u00a0 \"brand\": string,\u00a0 \"title\": string,\u00a0 \"productUri\": string,\u00a0 \"resourceState\": enum(RetailResourceState),\u00a0 \u00a0\"labels\": {\u00a0 \u00a0 string: string,\u00a0 \u00a0 ...\u00a0 \u00a0 }\u00a0 \u00a0\"createTime\": string,\u00a0 \u00a0\"updateTime\": string}\n```\n**Fields**\n| name   | String       | Output only. Resource name of the RetailProductImage                                                                                                       |\n|:--------------|:---------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| displayName | String       | Optional. Display name of the RetailProductImage.                                                                                                        |\n| sourceType | enum        | Optional. Source type                                                                                                               |\n| gcsUri  | string       | Optional. Cloud Storage location of the RetailProductImage. It should be set except when the image is provided by Google, for example, when the source type is SOURCE_TYPE_GOOGLE.                                                                        |\n| resourceState | enum        | Output only. State of the RetailProductImage.                                                                                                         |\n| labels  | map (key: string, value: string) | The labels with user-defined metadata to organize your RetailProductImage. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }. |\n| createTime | string (Timestamp format)  | Output only. The create Timestamp.                                                                                                            |\n| updateTime | string (Timestamp format)  | Output only. The update timestamp.                                                                                                            |\n**RetailThirdPartyId JSON Presentation**\n```\n{\u00a0 \"id\": string,\u00a0 \"owner\": string}\n```\n**Fields**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2                            |\n|:-------------|:-------------|:-----------------------------------------------------------------------------------------------------------------------|\n| id   | string  | Third party id used by the retailer or manufacturer (for example,, SKU or MPN).          |\n| owner  | string  | The entity that 'owns' the third party identifier, for example, the manufacturer or the retailer selling this product. |\n### Method: projects.locations.retailCatalogs.retailProducts.create\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/*/retailCatalogs/*}/retailProducts\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Request body**\nThe request body contains an instance of `RetailProduct` .\n**Response body**\nIf successful, the response body contains a newly created instance of `RetailProduct` .\n### Method: projects.locations.retailCatalogs.retailProducts.get\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailCatalogs/*/retailProducts/*\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2       |\n|:-------------|:-------------|:------------------------------------|\n| name   | string  | Required. RetailProduct identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains an instance of `RetailProduct` .\n### Method: projects.locations.retailCatalogs.retailProducts.list\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/*/retailCatalogs/*}/retailProducts\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Query parameters**\n| filter | string | Optional. An expression for filtering the results of the request.                  |\n|:----------|:---------|:--------------------------------------------------------------------------------------------------------------------------------------|\n| pageToken | string | Optional. A token identifying a page of results the server should return.                |\n| pageSize | integer | Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. |\n| orderBy | string | Optional. A comma-separated list of fields to order by sorted in ascending order. Use \"desc\" after a field name for descending.  |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains data with the following structure: JSON representation\n```\n{\u00a0 \"retailProducts\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 object (RetailProducts)\u00a0 \u00a0 }\u00a0 ],\u00a0 \"nextPageToken\": string}\n```\n### Method: projects.locations.retailCatalogs.retailProducts.delete\nHTTP request\nDELETE https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailCatalogs/*/retailProducts/*\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2       |\n|:-------------|:-------------|:------------------------------------|\n| name   | string  | Required. RetailProduct identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body is empty.\n### Resource: projects.locations.retailProductImages\nJSON Representation\n```\n{\u00a0 \"name\": string,\u00a0 \"displayName\": string,\u00a0 \"sourceType\": enum(SourceType),\u00a0 \"gcsUri\": string,\u00a0 \"resourceState\": enum(RetailResourceState),\u00a0 \u00a0\"labels\": {\u00a0 \u00a0 string: string,\u00a0 \u00a0 ...\u00a0 \u00a0 }\u00a0 \u00a0\"createTime\": string,\u00a0 \u00a0\"updateTime\": string}\n```\n**Fields**\n| name   | String       | Output only. Resource name of the RetailProductImage                                                                                                       |\n|:--------------|:---------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| displayName | String       | Optional. Display name of the RetailProductImage.                                                                                                        |\n| sourceType | enum        | Optional. Source type                                                                                                               |\n| gcsUri  | string       | Optional. Cloud Storage location of the RetailProductImage. It should be set except when the image is provided by Google, for example, when the source type is SOURCE_TYPE_GOOGLE.                                                                        |\n| resourceState | enum        | Output only. State of the RetailProductImage.                                                                                                         |\n| labels  | map (key: string, value: string) | The labels with user-defined metadata to organize your RetailProductImage. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }. |\n| createTime | string (Timestamp format)  | Output only. The create Timestamp.                                                                                                            |\n| updateTime | string (Timestamp format)  | Output only. The update timestamp.                                                                                                            |\nSourceType ENUM values\n| SOURCE_TYPE_UNSPECIFIED  | Unknown data source. Should not be used.      |\n|:-----------------------------|:-------------------------------------------------------------|\n| SOURCE_TYPE_FIXED_CAMERA  | Image is captured from fixed camera.       |\n| SOURCE_TYPE_HAND_HELD_CAMERA | Image is captured from hand-held camera.      |\n| SOURCE_TYPE_CRAWLED   | Image is crawled from the web.        |\n| SOURCE_TYPE_SYSTEM_GENERATED | Image is cropped from an original image with human labeling. |\n### Method: projects.locations.retailCatalogs.retailProducts.retailProductImages.create\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/*/retailCatalogs/*/retailProducts/*}/retailProductImages\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Request body**\nThe request body contains an instance of `RetailProductImage` .\n**Response body**\nIf successful, the response body contains a newly created instance of `RetailProductImage` .\n### Method: projects.locations.retailCatalogs.retailProducts.retailProductImages.get\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailCatalogs/*/retailProducts/*/retailProductImages/*\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2        |\n|:-------------|:-------------|:-----------------------------------------|\n| name   | string  | Required. RetailProductImage identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains an instance of `RetailProductImage` .\n### Method: projects.locations.retailCatalogs.retailProducts.retailProductImages.list\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/*/retailCatalogs/*/retailProducts/*}/retailProductImages\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Query parameters**\n| filter | string | Optional. An expression for filtering the results of the request.                  |\n|:----------|:---------|:--------------------------------------------------------------------------------------------------------------------------------------|\n| pageToken | string | Optional. A token identifying a page of results the server should return.                |\n| pageSize | integer | Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. |\n| orderBy | string | Optional. A comma-separated list of fields to order by sorted in ascending order. Use \"desc\" after a field name for descending.  |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains data with the following structure:\nJSON representation\n```\n{\u00a0 \"retailProductImages\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 object (RetailProductImages)\u00a0 \u00a0 }\u00a0 ],\u00a0 \"nextPageToken\": string}\n```\n### Method: projects.locations.retailCatalogs.retailProducts.retailProductImages.delete\nHTTP request\nDELETE https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailCatalogs/*/retailProducts/*/retailProductImages/*\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2        |\n|:-------------|:-------------|:-----------------------------------------|\n| name   | string  | Required. RetailProductImage identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body is empty.\n### Resource: projects.locations.retailCatalogs.retailProductSets\nJSON representation\n```\n{\u00a0 \"name\": string,\u00a0 \"displayName\": string,\u00a0 \"retailProductIds\": [string],\u00a0 \"resourceState\": enum(RetailResourceState),\u00a0 \u00a0\"labels\": {\u00a0 \u00a0 string: string,\u00a0 \u00a0 ...\u00a0 \u00a0 }\u00a0 \u00a0\"createTime\": string,\u00a0 \u00a0\"updateTime\": string}\n```\n**Fields**\n| name    | String       | Output only. Resource name of the RetailProductSet                                                                                                       |\n|:--------------------|:---------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| displayName   | String       | Optional. Display name of the RetailProductSet.                                                                                                        |\n| retailProductIds [] | String       | Output only. Resource ids of products belonging to this RetailProductSet. The products in a RetailProductSet should be in the same catalog.                                                                                 |\n| resourceState  | enum        | Output only. State of the RetailProductSet.                                                                                                         |\n| labels    | map (key: string, value: string) | The labels with user-defined metadata to organize your RetailProductSet. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }. |\n| createTime   | string (Timestamp format)  | Output only. The create Timestamp.                                                                                                           |\n| updateTime   | string (Timestamp format)  | Output only. The update timestamp.                                                                                                           |\n### Method: projects.locations.retailCatalogs.retailProductSets.create\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/*/retailCatalogs/*}/retailProductSets\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Request body**\nThe request body contains an instance of RetailProductSet.\n**Response body**\nIf successful, the response body contains a newly created instance of RetailProductSet.\n### Method: projects.locations.retailCatalogs.retailProductSets.get\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailCatalogs/*/retailProductSets/*\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2        |\n|:-------------|:-------------|:---------------------------------------|\n| name   | string  | Required. RetailProductSet identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains an instance of RetailProductSet.\n### Method: projects.locations.retailCatalogs.retailProductSets.list\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/*/retailCatalogs/*}/retailProductSets\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Query parameters**\n| filter | string | Optional. An expression for filtering the results of the request.                  |\n|:----------|:---------|:--------------------------------------------------------------------------------------------------------------------------------------|\n| pageToken | string | Optional. A token identifying a page of results the server should return.                |\n| pageSize | integer | Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. |\n| orderBy | string | Optional. A comma-separated list of fields to order by sorted in ascending order. Use \"desc\" after a field name for descending.  |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains data with the following structure:\nJSON representation\n```\n{\u00a0 \"retailProductSets\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 object (RetailProductSets)\u00a0 \u00a0 }\u00a0 ],\u00a0 \"nextPageToken\": string}\n```\n### Method: projects.locations.retailCatalogs.retailProductSets.delete\nHTTP request\nDELETE https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailCatalogs/*/retailProductSets/*\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2        |\n|:-------------|:-------------|:---------------------------------------|\n| name   | string  | Required. RetailProductSet identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body is empty.\n### Method: projects.locations.retailCatalogs.retailProductSets.add\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailCatalogs/*/retailProductSets/*}:remove\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2        |\n|:-------------|:-------------|:------------------------------------------|\n| name   | string  | Required. RetailProductSet resource name. |\n**Request body**\nJSON representation\n```\n{\u00a0 \"productIds\": [string],\u00a0 \"productFilter\": string}\n```\n**Fields**\n| productIds[ ] | string | Resource id of the RetailProducts to be added. They must all belong to the same RetailCatalog as the specified destination RetailProductSet. Up to 200 RetailProducts ids can be specified in one request. Can not be used together with productFilter.    |\n|:----------------|:---------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| productFilter | string | A standard filter that will be applied to all RetailProducts in the parent RetailCatalog, select items which satisfy filter conditions and add them into the RetailProductSet. Cannot be used together with product_ids. Supported filters: https://google.aip.dev/160 |\n**Response body**\nIf successful, the response body contains an instance of `Operation` .\n### Method: projects.locations.retailCatalogs.retailProductSets.remove\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailCatalogs/*/retailProductSets/*}:add\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2        |\n|:-------------|:-------------|:------------------------------------------|\n| name   | string  | Required. RetailProductSet resource name. |\n**Request body**\nJSON representation\n```\n{\u00a0 \"productIds\": [string],\u00a0 \"productFilter\": string}\n```\n**Fields**\n| productIds[ ] | string | Resource ids of the RetailProducts to be removed. If the specified RetailProducts does not belong to this RetailProductSet, it will be ignored. Up to 200 RetailProducts ids can be specified in one request. Can not be used together with products_filter.     |\n|:----------------|:---------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| productFilter | string | A standard filter that will be applied to all RetailProducts in the specified RetailProductSet, select items which satisfy filter conditions and remove them from the RetailProductSet. Cannot be used together with product_ids. Supported filters:https://google.aip.dev/160 |\n**Response body**\nIf successful, the response body contains an instance of `Operation` .\n### Resource: projects.locations.retailCatalogs.retailProductRecognitionIndexes\nJSON representation\n```\n{\u00a0 \"name\": string,\u00a0 \"displayName\": string,\u00a0 \"description\": string,\u00a0 \"retailProductSet\": [string],\u00a0 \u00a0\"resourceState\": enum(RetailResourceState),\u00a0 \u00a0\"labels\": {\u00a0 \u00a0 string: string,\u00a0 \u00a0 ...\u00a0 \u00a0 }\u00a0 \u00a0\"createTime\": string,\u00a0 \u00a0\"updateTime\": string}\n```\n**Fields**\n| name    | String       | Output only. Resource name of the RetailProductRecognitionIndex resource.                                                                                                     |\n|:-------------------|:---------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| displayName  | String       | Optional. Display name of the RetailProductRecognitionIndex.                                                                                                        |\n| description  | String       | Optional. The description of the RetailProductRecognitionIndex.                                                                                                       |\n| retailProductSet[] | string       | Optional. The resource name of RetailProductSet to use for creating this resource. If set, the RetailProductRecognitionIndex will only contain products in the given RetailProductSet. If not set, all products in the parent catalog will be used.                                                          |\n| resourceState  | enum        | Output only. State of the RetailProductRecognitionIndex.                                                                                                         |\n| labels    | map (key: string, value: string) | The labels with user-defined metadata to organize your RetailProductRecognitionIndex. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }. |\n| createTime   | string (Timestamp format)  | Output only. The create Timestamp.                                                                                                              |\n| updateTime   | string (Timestamp format)  | Output only. The update timestamp.                                                                                                              |\n### Method: projects.locations.retailCatalogs.retailProductRecognitionIndexes.create\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/*/retailCatalogs/*}/retailProductRecognitionIndexes\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Request body**\nThe request body contains an instance of `RetailProductRecognitionIndex` .\n**Response body**\nIf successful, the response body contains a newly created instance of `RetailProductRecognitionIndex` .\n### Method: projects.locations.retailCatalogs.retailProductRecognitionIndexes.get\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailCatalogs/*/retailProductRecognitionIndexes/*\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2           |\n|:-------------|:-------------|:----------------------------------------------------|\n| name   | string  | Required. RetailProductRecognitionIndex identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains an instance of `RetailProductRecognitionIndex` .\n### Method: projects.locations.retailCatalogs.retailProductRecognitionIndexes.list\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/*/retailCatalogs/*}/retailProductRecognitionIndexes\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Query parameters**\n| filter | string | Optional. An expression for filtering the results of the request.                  |\n|:----------|:---------|:--------------------------------------------------------------------------------------------------------------------------------------|\n| pageToken | string | Optional. A token identifying a page of results the server should return.                |\n| pageSize | integer | Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. |\n| orderBy | string | Optional. A comma-separated list of fields to order by sorted in ascending order. Use \"desc\" after a field name for descending.  |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains data with the following structure:\nJSON representation\n```\n{\u00a0 \"retailProductRecognitionIndexes\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 object (RetailProductRecognitionIndex)\u00a0 \u00a0 }\u00a0 ],\u00a0 \"nextPageToken\": string}\n```\n### Method: projects.locations.retailCatalogs.retailProductRecognitionIndexes.delete\nHTTP request\nDELETE https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailCatalogs/*/retailProductRecognitionIndexes/*\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2         |\n|:-------------|:-------------|:----------------------------------------------|\n| name   | string  | Required. ProductRecognitionIndex identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains an instance of `Operation` .\n### Resource: projects.locations.retailEndpoints\nJSON representation\n```\n{\u00a0 \"name\": string,\u00a0 \"displayName\": string,\u00a0 \"description\": string,\u00a0 \"deployedProductRecognitionIndex\": string,\u00a0 \"resourceState\": enum(RetailResourceState),\u00a0 \"productRecognitionConfig\": { object(RetailProductRecognitionConfig) },\u00a0 \"tagRecognitionConfig\": { object(RetailTagRecognitionConfig) },\u00a0 \"labels\": {\u00a0 \u00a0 string: string,\u00a0 \u00a0 ...\u00a0 \u00a0}\u00a0 \"createTime\": string,\u00a0 \"updateTime\": string}\n```\n**Fields**\n| name       | String       | Output only. Resource name of the RetailEndpoint resource.                                                                                                        |\n|:--------------------------------|:---------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| displayName      | String       | Optional. Display name of the RetailEndpoint.                                                                                                            |\n| description      | String       | Optional. The description of the RetailEndpoint.                                                                                                           |\n| deployedProductRecognitionIndex | String       | Output only. Resource name of the ProductRecognitionIndex deployed to this RetailEndpoint.                                                                                                |\n| productRecognitionConfig  | object       | Optional. Configuration for product recognition.                                                                                                           |\n| tagRecognitionConfig   | object       | Optional. Configuration for tag recognition.                                                                                                            |\n| resourceState     | enum        | Output only. State of the RetailProductRecognitionIndex.                                                                                                         |\n| labels       | map (key: string, value: string) | The labels with user-defined metadata to organize your RetailProductRecognitionIndex. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }. |\n| createTime      | string (Timestamp format)  | Output only. The create Timestamp.                                                                                                              |\n| updateTime      | string (Timestamp format)  | Output only. The update timestamp.                                                                                                              |\n### RetailProductRecognitionConfig\nJSON representation\n```\n{\u00a0 \"productDetectionModel\": string,\u00a0 \"detectionConfidenceThreshold\": float,\u00a0 \"recognitionConfidenceThreshold\": float,\u00a0 \"additionalConfig\": { object }}\n```\n**Fields**\n|\n| productDetectionModel   | string     | Required. Model to use to detect products in input images. Supported values: \"builtin/stable\" (the default) or Vertex AI model resource name. |\n|:-------------------------------|:-----------------------|:------------------------------------------------------------------------------------------------------------------------------------------------|\n| detectionConfidenceThreshold | float     | Optional. Confidence threshold to filter detection results. If not set, a system default value will be used.         |\n| recognitionConfidenceThreshold | float     | Optional. Confidence threshold to filter recognition results. If not set, a system default value will be used.         |\n| additionalConfig    | object (Struct format) | Optional. Additional configurations for product recognition.                     |### RetailTagRecognitionConfig\nJSON representation\n```\n{\u00a0 \"tagDetectionModel\": string,\u00a0 \"tagParsingModel\": string,\u00a0 \"detectionConfidenceThreshold\": float,\u00a0 \"parsingConfidenceThreshold\": float,\u00a0 \"additionalConfig\": { object }}\n```\n**Fields**\n| tagDetectionModel   | string     | Required. Model to use to detect tags in input images. Supported values: Vertex AI model resource.    |\n|:-----------------------------|:-----------------------|:----------------------------------------------------------------------------------------------------------------|\n| tagParsingModel    | string     | Required. Model to parse text on detected tags. Supported values: Vertex AI model resource.      |\n| detectionConfidenceThreshold | float     | Optional. Confidence threshold to filter detection results. If not set, a system default value will be used. |\n| parsingConfidenceThreshold | float     | Optional. Confidence threshold to filter text parsing results. If not set, a system default value will be used. |\n| additionalConfig    | object (Struct format) | Optional. Additional configurations for tag recognition.              |\n### Method: projects.locations.retailEndpoints.create\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/*}/retailEndpoints\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Request body**\nThe request body contains an instance of `RetailEndpoint` .\n**Response body**\nIf successful, the response body contains a newly created instance of `RetailEndpoint` .\n### Method: projects.locations.retailEndpoints.get\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailEndpoints/*}\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2       |\n|:-------------|:-------------|:-------------------------------------|\n| name   | string  | Required. RetailEndpoint identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains an instance of `RetailEndpoint` .\n### Method: projects.locations.retailEndpoints.list\nHTTP request\nGET https://visionai.googleapis.com/v1alpha1/{parent=projects/*/locations/*}/retailEndpoints\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2     |\n|:-------------|:-------------|:-----------------------------|\n| parent  | string  | Required. Parent identifier. |\n**Query parameters**\n| filter | string | Optional. An expression for filtering the results of the request.                  |\n|:----------|:---------|:--------------------------------------------------------------------------------------------------------------------------------------|\n| pageToken | string | Optional. A token identifying a page of results the server should return.                |\n| pageSize | integer | Optional. Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default. |\n| orderBy | string | Optional. A comma-separated list of fields to order by sorted in ascending order. Use \"desc\" after a field name for descending.  |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains data with the following structure:\nJSON representation\n```\n{\u00a0 \"retailEndpoints\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 object (RetailEndpoint)\u00a0 \u00a0 }\u00a0 ],\u00a0 \"nextPageToken\": string}\n```\n### Method: projects.locations.retailEndpoints.delete\nHTTP request\nDELETE https://visionai.googleapis.com/v1alpha1/{name=projects/*/locations/*/retailEndpoints/*\n**Path parameters**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2       |\n|:-------------|:-------------|:-------------------------------------|\n| name   | string  | Required. RetailEndpoint identifier. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body is empty.\n### Method: projects.locations.retailEndpoints.deployRetailProductRecognitionIndex\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{retailEndpoint=projects/*/locations/*/retailEndpoints/*}:deployRetailProductRecognitionIndex\n**Path parameters**\n| Unnamed: 0  | Unnamed: 1 | Unnamed: 2                          |\n|:---------------|:-------------|:-----------------------------------------------------------------------------------------------------------------|\n| retailEndpoint | string  | Required. Resource name of the RetailEndpoint resource into where the RetailProductRecognitionIndex is deployed. |\n**Request body**\nJSON representation\n```\n{\u00a0 \"retailProductRecognitionIndex\": string,}\n```\n**Fields**\n| Unnamed: 0     | Unnamed: 1 | Unnamed: 2                |\n|:------------------------------|:-------------|:------------------------------------------------------------------------|\n| retailProductRecognitionIndex | string  | Required. The resource name of RetailProductRecognitionIndex to deploy. |\n**Response body**\nIf successful, the response body contains an instance of `Operation` .\n### Method: projects.locations.retailEndpoints.undeployRetailProductRecognitionIndex\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{retailEndpoint=projects/*/locations/*/retailEndpoints/*}:undeployRetailProductRecognitionIndex\n**Path parameters**\n| Unnamed: 0  | Unnamed: 1 | Unnamed: 2                     |\n|:---------------|:-------------|:-------------------------------------------------------------------------------------------|\n| retailEndpoint | string  | Required. Resource name of the RetailEndpoint resource on which the undeployment will act. |\n**Request body**\nThe request body must be empty.\n**Response body**\nIf successful, the response body contains an instance of `Operation` .\n### Method: projects.locations.retailEndpoints.batchAnalyze\nHTTP request\nPOST https://visionai.googleapis.com/v1alpha1/{retailEndpoint=projects/*/locations/*/retailEndpoints/*}:batchAnalyze\n**Path parameters**\n| Unnamed: 0  | Unnamed: 1 | Unnamed: 2                 |\n|:---------------|:-------------|:------------------------------------------------------------------------------|\n| retailEndpoint | string  | Required. Resource name of the RetailEndpoint to serve the inference request. |\n**Request body**\nJSON representation\n```\n{\u00a0 \"gcsSource\": string,\u00a0 \"features\": { object(Feature) },\u00a0 // Union field output can be only one of the following:\u00a0 \"outputGcsDestination\": string,\u00a0 \"corpus\": string,\u00a0 // End of list of possible types for union field output.\u00a0 \"bigqueryTable\": string}\n```\n**Fields**\n| gcsSource   | string | Required. The Cloud Storage location for the input content. Multiple input locations can be provided. The contents of all input locations will be processed in one batch. Supported content: A TXT file, each line is the full path to an image. A maximum of 50k images can be supported in one request. |\n|:---------------------|:---------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| outputGcsDestination | string | Optional. The Cloud Storage location of the directory where the output is to be written to.                                                     |\n| corpus    | string | Optional. Resource name of image warehouse corpus. Not yet supported.                                                          |\n| bigqueryTable  | string | Optional. Resource name of the bigquery table for annotation exports. In the format of \"projects/*/datasets/*/tables/*\". If set, annotations generated from ML inference will also be exported to the given bigquery table. Not yet supported.                |\n| features[]   | Object | Required. The type of ML inference to perform.                                                                |\nFeature\nJSON representation\n```\n{\u00a0 \"type\": enum(Type),\u00a0 \"productRecognitionConfig\": object(RetailProductRecognitionConfig),\u00a0 \"tagRecognitionConfig\": object(RetailTagRecognitionConfig)}\n```\n**Fields**\n| type      | enum | Required. The Feature Type.                          |\n|:-------------------------|:-------|:---------------------------------------------------------------------------------------------------------------------------------|\n| productRecognitionConfig | object | Optional. Per request overrides for product recognition feature. It's effective only if type is set to TYPE_PRODUCT_RECOGNITION. |\n| tagRecognitionConfig  | object | Optional. Per request overrides for tag recognition feature. It's effective only if type is set to TYPE_TAG_RECOGNITION.   |\n**Response body**\nIf successful, the response body contains an instance of `Operation` .\nTypes\n`GcsSource`\nJSON representation\n```\n{\u00a0 \"uris\": [string]}\n```\n**Fields**\n| Unnamed: 0 | Unnamed: 1 | Unnamed: 2          |\n|:-------------|:-------------|:-----------------------------------------------|\n| uris[]  | string  | Required. References to a Cloud Storage paths. |\nType\nENUM values\n| TYPE_UNSPECIFIED   | The default value. Should not be used.                |\n|:-------------------------|:---------------------------------------------------------------------------------------------------|\n| TYPE_PRODUCT_RECOGNITION | Product Recognition. Must be used on a RetailEndpoint with deployed RetailProductRecognitionIndex. |\n| TYPE_TAG_RECOGNITION  | Tag Detection and Parsing. Must be used on a RetailEndpoint with RetailTagRecognitionConfig.  |\n### RetailProductIoFormat\nJSON representation\n```\n{\u00a0 \"retailProduct\": { object(RetailProduct) },\u00a0 \"retailProductImages\": [ { object(RetailProductImage) }]}\n```\n**Fields**\n| retailProduct   | object | Required. RetailProduct to be imported         |\n|:-----------------------|:---------|:-------------------------------------------------------------------------|\n| retailProductImages[ ] | object | Optional. RetailProductImages of the given RetailProduct to be imported. |\n`RetailResourceState`\nENUM values\n| RETAIL_RESOURCE_STATE_UNSPECIFIED | The default value. Should not be used. |\n|:------------------------------------|:-----------------------------------------|\n| RETAIL_RESOURCE_STATE_CREATING  | State Creating.       |\n| RETAIL_RESOURCE_STATE_CREATED  | State Created.       |\n| RETAIL_RESOURCE_STATE_UPDATING  | State Updating.       |\n| RETAIL_RESOURCE_STATE_DELETED  | State Deleted.       |\n| RETAIL_RESOURCE_STATE_ERROR   | State Error.        |", "guide": "Vertex AI Vision"}