{"title": "Vertex AI Vision - Build and test with the C++ SDK", "url": "https://cloud.google.com/vision-ai/docs/build-test-cpp?hl=zh-cn", "abstract": "# Vertex AI Vision - Build and test with the C++ SDK\nThe C++ SDK is a tool available as part of the Vertex AI Vision SDK. You can use the C++ SDK to programmatically manage, control, and perform different forms of I/O with Vertex AI Vision.\nThis page describes how to use the C++ SDK to build and test.\n", "content": "## Before you begin\n- Complete the steps to [set up your Google Cloud project](/vision-ai/docs/cloud-environment) .\n- Review [system requirements](/vision-ai/docs/cloud-environment#cpp-supported-platforms) before trying to use the C++ SDK.\n- Get the Vertex AI Vision SDK source code from the publicly available [GitHub](https://github.com/google/visionai) repository:```\ngit clone https://github.com/google/visionai.git\n```The C++ public SDK is located in `visionai/public/streams.h` . For reference information, see the [reference documentation](/vision-ai/docs/reference/cpp) .\n- Install any [system dependencies](/vision-ai/docs/cloud-environment#cpp-system-deps) you might need.\n- Use the [create streams and ingest data](/vision-ai/docs/create-manage-streams) topic to create stream resources to use in the following code samples.## Build and test programs\nThe following example shows you how to use the C++ programming SDK to build your own programs. The sample shows this process directly by walking through an example for sending and receiving [Packets](/vision-ai/docs/reference/cpp/group/packet) .\nThese instructions show you how to build two simple programs. The first program sends messages at regular intervals, while the second program receives the messages that the first program sends. You can use these programs as a starting point to build your own custom applications with the C++ SDK.\n- Go to the root of the source code directory.The contents of the directory resemble the following:```\nbazel \u00a0BUILD \u00a0CONTRIBUTING.md \u00a0debian \u00a0deps.bzl \u00a0LICENSE \u00a0README.md \u00a0third_party \u00a0visionai [...]\n```\n- Optional: Read the tutorial source code instructions. **Sender app:** ```\ncat visionai/public/tutorial/sender_app.cc\n``` **Receiver app:** ```\ncat visionai/public/tutorial/receiver_app.cc\n```\n- Build the sender and receiver apps.```\nbazel build //visionai/public/tutorial/...\n```\n- Verify the build worked. In one terminal, run the following command for the sender app. Replace the following:- : Your project ID.\n- : Your location ID. For example,`us-central1`. [Supported regions](/vision-ai/docs/warehouse-supported-regions) . [More information](/about/locations) .\n- : The stream ID that you created in the cluster. For example,`input-1`.\n```\n./bazel-bin/visionai/public/tutorial/sender_app \\\n--service_endpoint visionai.googleapis.com \\\n--project_id PROJECT_ID \\\n--location_id LOCATION_ID \\\n--cluster_id application-cluster-0 \\\n--stream_id STREAM_ID\n```\n- In a different terminal, run the following command for the receiver app. Replace the following:- : Your project ID.\n- : Your location ID. For example,`us-central1`. [Supported regions](/vision-ai/docs/warehouse-supported-regions) . [More information](/about/locations) .\n- : The stream ID that you created in the cluster. For example,`input-1`.\n```\n./bazel-bin/visionai/public/tutorial/receiver_app \\\n--service_endpoint visionai.googleapis.com \\\n--project_id PROJECT_ID \\\n--location_id LOCATION_ID \\\n--cluster_id application-cluster-0 \\\n--stream_id STREAM_ID\n```## What's next\n- Read about processing components you can add to an app in [Build an app](/vision-ai/docs/build-app) .\n- Learn about output storage and processing options in [Connect app output to a data destination ](/vision-ai/docs/connect-data-destination) .\n- Read about how to [Search Warehouse data in the console](/vision-ai/docs/search-streaming-warehouse) .", "guide": "Vertex AI Vision"}