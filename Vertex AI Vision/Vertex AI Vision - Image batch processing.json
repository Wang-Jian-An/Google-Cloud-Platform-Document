{"title": "Vertex AI Vision - Image batch processing", "url": "https://cloud.google.com/vision-ai/docs/batch-image?hl=zh-cn", "abstract": "# Vertex AI Vision - Image batch processing\nIn addition to streaming processing, you can choose batch processing as a way to get information from data. This non-streaming processing mode lets you build applications to support other media types.\nYou can batch process image files stored in Cloud Storage with select models. The output is stored in Cloud Storage.\n", "content": "## Supported models\nThe following models support batch processing:\n- Tag recognizer\n- Product recognizer## Supported data types\nThis page describes how you batch process the following types of data:\n- Image data## Before you begin\n- Review the [supported models](#supported-models) and [supported data types](#data-types) for the batch processing described on this page.- If you use a **Product recognizer** model, create a [Catalog](/vision-ai/docs/product-recognizer#catalog) and [ProductRecognitionIndex](/vision-ai/docs/product-recognizer#productrecognitionindex) to use when you create a Product recognizer model for batch processing. Alternatively, identify an existing product recognizer index or Product recognizer model to use.\n- If you use a **Tag recognizer** model, create a model using the [tag recognizer model guide](/vision-ai/docs/tag-recognizer#user-journey) .\n- [Create one or more Cloud Storage buckets](/storage/docs/creating-buckets) for batch processing input and output.\n- Locate [supported files](#data-types) and [upload them to your Cloud Storage input bucket](/storage/docs/uploading-objects) to be processed.## User journey\nTo batch process image data, complete the following general steps:\n- Enable the Vertex AI Vision API.\n- Create a supported processor (Product recognizer or Tag recognizer).\n- Create an application.- Input: Add a universal input node that specifies the files to process in Cloud Storage.\n- Processing: Add your model node.\n- Output: Add the output storage node specifying where the processed data is stored in Cloud Storage.\n- Create batch instances of your app, each instance corresponding to a Cloud Storage bucket input location.\n- Deploy the app and app instances.\n- After the batch processing instance finishes, examine the output stored in Cloud Storage.## Batch process images\nThe steps to send a batch processing request vary from model to model. Follow the instructions for your target model to batch process images.\n### Product recognizer model\nUse these samples to batch process images with a Product recognizer model.\nCreate an image batch processing request in the Google Cloud console.\n **Create a new application** - Open the **Applications** tab of the Vertex AI Vision dashboard. [Go to the Applications tab](https://console.cloud.google.com/ai/vision-ai/applications) \n- Click the add **Create** button.\n- Enter an app name and choose your region.\n- Click **Continue** .\n- Choose your billing method. For more information about the pay as you go versus monthly billing, see the [pricing page](/vision-ai/pricing) .\n- Click **Create** .\n **Specify batch processing inputs** - In the graph app builder page, click on the **Universal input** node.\n- In the side **Universal input** pane, click **Select input sources** .\n- In the **Select input sources** page, select radio_button_checked **Batch prediction** .\n- Click **Continue** .\n- In the **Sources** pane, click **Browse** in the location picker field to indicate where your files are in Cloud Storage.\n- Optional. To specify more sources, click **Add an item** and repeat the previous step.\n- Click **Submit** .\n **Add the model** - In the graph app builder page, click the **Product recognizer** model node from the **Specialized models** section.\n- In the **Product recognizer** pane, click **Select model** .\n- Select radio_button_checked **Select existing product recognizer model** .If you need to create a new model or index, select the corresponding option to create the resources.\n- Choose the model from the list.\n- Click **Select** .\n- Optional. Modify the **Confidence threshold** .\n- Click **Apply settings** .\n **Add an output destination** - In the graph app builder page, click the **Cloud Storage** model node from the **Output** section.\n- In the **Cloud Storage** pane, click **Browse** to select your batch prediction output destination in Cloud Storage.\n **Deploy the application** - In the graph app builder page, clickplay_arrow **Deploy** .\nComplete the following steps to send your image batch processing request.- Create a Product recognizer model with the [projects.locations.processors.create](/vision-ai/docs/reference/rest/v1alpha1/projects.locations.processors/create) method.This request includes reference to `Catalog` and `ProductRecognitionIndex` resources. For information about creating [Catalog](/vision-ai/docs/product-recognizer#catalog) and [ProductRecognitionIndex](/vision-ai/docs/product-recognizer#productrecognitionindex) resources, see the [Product recognizer model guide](/vision-ai/docs/product-recognizer) .```\ncurl -X POST \\\u00a0-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0-H \"Content-Type: application/json\" \\\u00a0https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/LOCATION_ID/processors?processor_id=product-recognition-model1 \\\u00a0-d '{\u00a0 \u00a0\"display_name\": \"DISPLAY_NAME\",\u00a0 \u00a0\"model_type\": PRODUCT_RECOGNIZER,\u00a0 \u00a0\"custom_processor_source_info\": {\u00a0 \u00a0 \u00a0\"source_type\": PRODUCT_RECOGNIZER,\u00a0 \u00a0 \u00a0\"product_recognizer_artifact\": {\u00a0 \u00a0 \u00a0 \u00a0\"retail_product_recognition_index\":\"projects/PROJECT_ID/locations/LOCATION_ID/retailCatalogs/CATALOG_ID/retailProductRecognitionIndexes/INDEX_ID\",\u00a0 \u00a0 \u00a0}\u00a0 \u00a0}\u00a0}'\n```\n- Create an application with the newly created Product recognizer model. This request uses the [projects.locations.applications.create](/vision-ai/docs/reference/rest/v1alpha1/projects.locations.applications/create) method. **Request body** ( `app.json` ):```\n{\u00a0 \"applicationConfigs\": {\u00a0 \u00a0 \"nodes\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"displayName\": \"Universal Input\",\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"universal-input-0\",\u00a0 \u00a0 \u00a0 \u00a0 \"processor\": \"builtin:universal-input\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"displayName\": \"Product Recognition\",\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"product-recognition\",\u00a0 \u00a0 \u00a0 \u00a0 \"nodeConfig\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"product_recognizer_config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"recognition_confidence_threshold\": 0.75\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"parents\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"parentNode\": \"universal-input-0\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"processor\": \"projects/PROJECT_ID/locations/LOCATION_ID/processors/product-recognition-model1\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"displayName\": \"Storage output\",\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"gcs-output\",\u00a0 \u00a0 \u00a0 \u00a0 \"nodeConfig\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"gcs_output_config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"gcs_path\":\"gs://product_recognizer_app_output\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"parents\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"parentNode\": \"product-recognition\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"processor\": \"builtin:gcs-output\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 }}\n``` **Request:** ```\ncurl -X POST \\\u00a0 -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 -H \"Content-Type: application/json\" \\\u00a0 -d @app.json \u00a0\\\u00a0 'https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/LOCATION_ID/applications?application_id=product-recognition-app'\n```\n- Create instances of your application using the [projects.locations.applications.createApplicationInstances](/vision-ai/docs/reference/rest/v1alpha1/projects.locations.applications/createApplicationInstances) method. **Request body** ( `instances.json` ):```\n\u00a0{\u00a0 \u00a0\"applicationInstances\": [\u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0\"instance\": { \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"instanceType\": \"BATCH_PREDICTION\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"inputResources\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"consumerNode\": \"universal-input-0\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"dataType\": \"IMAGE\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"inputResource\": \"gs://product_recognition_input\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0]\u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0\"instanceId\": \"instance1\"\u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0\"instance\": { \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"instanceType\":\"BATCH_PREDICTION\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"inputResources\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"consumerNode\": \"universal-input-0\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"dataType\": \"IMAGE\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"inputResource\": \"gs://product_recognition_input2\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0]\u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0\"instanceId\": \"instance2\"\u00a0 \u00a0 \u00a0}\u00a0 \u00a0]\u00a0}\n``` **Request:** ```\ncurl -X POST \\\u00a0 -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 -H \"Content-Type: application/json\" \\\u00a0 -d @instances.json \\\u00a0 'https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/LOCATION_ID/applications/product-recognition-app:createApplicationInstances'\n```\n- Deploy the application.```\n\u00a0curl -X POST \\\u00a0 \u00a0-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 \u00a0-H \"Content-Type: application/json\" \\\u00a0 \u00a0-d '{}' \\\u00a0 \u00a0'https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/LOCATION_ID/applications/product-recognition-app:deploy'\n```\n- Get app instances. This information tells you when the batch processing completes.In particular, the `state` field shows when the processing is complete: `\"state\": \"FINISHED\"` . After the instance completes you can't modify it.You can use the [projects.locations.applications.instances.list](/vision-ai/docs/reference/rest/v1alpha1/projects.locations.applications.instances/list) method to track instances. Similarly, to remove instances from this list, use the [projects.locations.applications.deleteApplicationInstances](/vision-ai/docs/reference/rest/v1alpha1/projects.locations.applications/deleteApplicationInstances) method. **Request:** ```\n\u00a0curl -X GET \\\u00a0 \u00a0-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 \u00a0-H \"Content-Type: application/json\" \u00a0\\\u00a0 \u00a0'https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/LOCATION_ID/applications/product-recognition-app/instances'\n``` **Sample response:** ```\n\u00a0{\u00a0 \u00a0\"instances\": [\u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0\"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/applications/product-recognition-app/instances/instance1\",\u00a0 \u00a0 \u00a0 \u00a0\"createTime\": \"2023-03-30T18:30:51.991004265Z\",\u00a0 \u00a0 \u00a0 \u00a0\"inputResources\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"inputResource\": \"gs://product_recognition_input\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"consumerNode\": \"universal-input-0\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"dataType\": \"IMAGE\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0],\u00a0 \u00a0 \u00a0 \u00a0\"outputResources\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"outputResource\": \"gs://product_recognition_output/instance1\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"producerNode\": \"product-recognition\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"autogen\": true\u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0],\u00a0 \u00a0 \u00a0 \u00a0\"updateTime\": \"2023-04-18T04:58:18.592092259Z\",\u00a0 \u00a0 \u00a0 \u00a0\"state\": \"FINISHED\",\u00a0 \u00a0 \u00a0 \u00a0\"instanceType\": \"BATCH_PREDICTION\"\u00a0 \u00a0 \u00a0}\u00a0}\n```\n### Tag recognizer model\nUse these samples to batch process images with a Tag recognizer model.\nComplete the following steps to send your image batch processing request.- Create a Tag recognizer model with the [projects.locations.processors.create](/vision-ai/docs/reference/rest/v1alpha1/projects.locations.processors/create) method.This requires you to specify the resource name of the original model hosted in the Vertex AI platform ( `vertex_model` ).```\ncurl -X POST \\\u00a0-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0-H \"Content-Type: application/json\" \\\u00a0https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/LOCATION_ID/processors?processor_id=tag-recognition-model1 \\\u00a0-d '{\u00a0 \u00a0\"display_name\": \"DISPLAY_NAME\",\u00a0 \u00a0\"model_type\": TAG_RECOGNIZER,\u00a0 \u00a0\"custom_processor_source_info\": {\u00a0 \u00a0 \u00a0\"source_type\": VERTEX_AUTOML,\u00a0 \u00a0 \u00a0\"vertex_model\": \"projects/PROJECT_ID/locations/LOCATION_ID/models/MODEL_ID\"\u00a0 \u00a0}\u00a0}'\n```\n- Create an application with the newly created Tag recognizer model. This request uses the [projects.locations.applications.create](/vision-ai/docs/reference/rest/v1alpha1/projects.locations.applications/create) method. **Request body** ( `app.json` ):```\n\u00a0{\u00a0 \u00a0\"applicationConfigs\": {\u00a0 \u00a0 \u00a0\"nodes\": [\u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"displayName\": \"Universal Input\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"name\": \"universal-input-0\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"processor\": \"builtin:universal-input\"\u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"displayName\": \"Tag Recognition\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"name\": \"tag-recognition\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"nodeConfig\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"tag_recognizer_config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"tag_parsing_config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"entity_parsing_configs\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"entity_class\": \"price\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"regex\": \"\\\\$\\\\d+\\\\.\\\\d{2}\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"entity_matching_strategy\": \"MAX_OVERLAP_AREA\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"entity_detection_confidence_threshold\": 0.0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"parents\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"parentNode\": \"universal-input-0\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"processor\": \"projects/PROJECT_ID/locations/LOCATION_ID/processors/tag-recognition-model1\"\u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"displayName\": \"Storage output\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"name\": \"gcs-output\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"nodeConfig\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"gcs_output_config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"gcs_path\": \"gs://tag_recognizer_app_output\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"parents\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"parentNode\": \"tag-recognition\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"processor\": \"builtin:gcs-output\"\u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0]\u00a0 \u00a0}\u00a0}\n``` **Request:** ```\ncurl -X POST \\\u00a0 -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 -H \"Content-Type: application/json\" \\\u00a0 -d @app.json \u00a0\\\u00a0 'https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/LOCATION_ID/applications?application_id=tag-recognition-app'\n```\n- Create instances of your application using the [projects.locations.applications.createApplicationInstances](/vision-ai/docs/reference/rest/v1alpha1/projects.locations.applications/createApplicationInstances) method. **Request body** ( `instances.json` ):```\n\u00a0{\u00a0 \u00a0\"applicationInstances\": [\u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0\"instance\": { \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"instanceType\": \"BATCH_PREDICTION\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"inputResources\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"consumerNode\": \"universal-input-0\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"dataType\": \"IMAGE\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"inputResource\": \"gs://tag_recognition_input\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0]\u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0\"instanceId\": \"instance1\"\u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0\"instance\": { \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"instanceType\":\"BATCH_PREDICTION\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"inputResources\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"consumerNode\": \"universal-input-0\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"dataType\": \"IMAGE\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"inputResource\": \"gs://tag_recognition_input2\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0]\u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0\"instanceId\": \"instance2\"\u00a0 \u00a0 \u00a0}\u00a0 \u00a0]\u00a0}\n``` **Request:** ```\ncurl -X POST \\\u00a0 -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 -H \"Content-Type: application/json\" \\\u00a0 -d @instances.json \\\u00a0 'https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/LOCATION_ID/applications/tag-recognition-app:createApplicationInstances'\n```\n- Deploy the application.```\n\u00a0curl -X POST \\\u00a0 \u00a0-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 \u00a0-H \"Content-Type: application/json\" \\\u00a0 \u00a0-d '{}' \\\u00a0 \u00a0'https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/LOCATION_ID/applications/tag-recognition-app:deploy'\n```\n- Get app instances. This information tells you when the batch processing completes.In particular, the `state` field shows when the processing is complete: `\"state\": \"FINISHED\"` . After the instance completes you can't modify it.You can use the [projects.locations.applications.instances.list](/vision-ai/docs/reference/rest/v1alpha1/projects.locations.applications.instances/list) method to track instances. Similarly, to remove instances from this list, use the [projects.locations.applications.deleteApplicationInstances](/vision-ai/docs/reference/rest/v1alpha1/projects.locations.applications/deleteApplicationInstances) method. **Request:** ```\n\u00a0curl -X GET \\\u00a0 \u00a0-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 \u00a0-H \"Content-Type: application/json\" \u00a0\\\u00a0 \u00a0'https://visionai.googleapis.com/v1alpha1/projects/PROJECT_ID/locations/LOCATION_ID/applications/tag-recognition-app/instances'\n``` **Sample response:** ```\n\u00a0{\u00a0 \u00a0\"instances\": [\u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0\"name\": \"projects/PROJECT_ID/locations/LOCATION_ID/applications/tag-recognition-app/instances/instance1\",\u00a0 \u00a0 \u00a0 \u00a0\"createTime\": \"2023-03-30T18:30:51.991004265Z\",\u00a0 \u00a0 \u00a0 \u00a0\"inputResources\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"inputResource\": \"gs://tag_recognition_input\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"consumerNode\": \"universal-input-0\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"dataType\": \"IMAGE\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0],\u00a0 \u00a0 \u00a0 \u00a0\"outputResources\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"outputResource\": \"gs://tag_recognition_output/instance1\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"producerNode\": \"tag-recognition\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"autogen\": true\u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0],\u00a0 \u00a0 \u00a0 \u00a0\"updateTime\": \"2023-04-18T04:58:18.592092259Z\",\u00a0 \u00a0 \u00a0 \u00a0\"state\": \"FINISHED\",\u00a0 \u00a0 \u00a0 \u00a0\"instanceType\": \"BATCH_PREDICTION\"\u00a0 \u00a0 \u00a0}\u00a0}\n```", "guide": "Vertex AI Vision"}