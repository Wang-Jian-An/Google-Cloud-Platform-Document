{"title": "Vertex AI Vision - Set up a project and a development environment", "url": "https://cloud.google.com/vision-ai/docs/cloud-environment?hl=zh-cn", "abstract": "# Vertex AI Vision - Set up a project and a development environment\nThis guide describes how to set up a Google Cloud project to start using Vertex AI Vision.\n", "content": "## Set up your project**Roles** : Depending on your use case, the`project.editor`role may be more appropriate. If you grant the`visionai.editor`role alone to your policy binding, you need to grant additional roles for certain operations. For example, you need to add`bigquery.dataEditor`to use a BigQuery connector,`cloudfunctions.developer`to use Cloud Functions, etc.\nCertain tasks require you to use additional Google Cloud products in addition to Vertex AI Vision. You might need to perform additional setup tasks to use other Google Cloud products.\n## Vertex AI Vision SDK\nThe Vertex AI Vision Software Development Kit (SDK) contains tools and libraries for you to develop programs and custom workflows with Vertex AI Vision.\nThese tools refer to a set of binary source files that help your productivity when you use or develop solutions using Vertex AI Vision. You can also add these binary source files into your scripting to help manage larger scale deployments. The command line interface (CLI) `vaictl` is an example in this category.\nLibraries refers to a set of programming APIs that you can use to programmatically manage, control, and perform I/O of different forms with Vertex AI Vision. The C++ programming API is an example in this category.\nThe code for both tools and libraries are open source and we welcome developers to build them directly. For tools, we also offer pre-built binary files on specific platforms that you can download for direct use. We also offer Docker images for cases when your platform is not directly supported.\n## Prerequisites\nConsider these prerequisites before you use the Vertex AI Vision SDK.\n### Supported platforms\nWe currently only directly support x86 machines running a Debian-based Linux distribution. We also offer a Docker image with tools already built and installed if you use a different platform.\n### Additional software requirements\nMost of the third party software dependencies the Vertex AI Vision SDK requires are automatically managed when you install the pre-built binaries. However, to use certain aspects of the SDK features and workflows you must install additional dependencies. This section lists these exceptions and how to download and install them.\nThe Python pip package installs all of its dependencies automatically. However, your basic underlying Python installation must meet the following conditions:\n- Python >= 3.8.Most users can use the pre-built SDK binaries for their workflow. If you want to develop and build the SDK from source, you must also make sure your system meets the following requirements.\n- Install Bazel. For installation instructions, see the [Bazel documentation](https://bazel.build/install/ubuntu) .\n- On Ubuntu 20.04, you also need several system dependencies. You can install them with the following command:```\napt-get install -y --no-install-recommends \\\u00a0 \u00a0 autoconf \\\u00a0 \u00a0 automake \\\u00a0 \u00a0 build-essential \\\u00a0 \u00a0 ca-certificates \\\u00a0 \u00a0 flex \\\u00a0 \u00a0 bison \\\u00a0 \u00a0 python3 \\\u00a0 \u00a0 nasm \\\u00a0 \u00a0 libjpeg-dev\n```## Get pre-built binaries\nThe `vaictl` tool is the ready-made binary tool that can be used to control Vertex AI Vision, as well as to send and receive data that it processes.\nThis section shows ways for you to download and install this tool.\n### Install the Debian package\nYou have two options for using the `vaictl` command-line tool, which you need to work with I/O (stream data):\n- Install the command-line tool locally (OS: Debian GNU/Linux, CPU architecture: x86_64)\n- Run the commands in a Docker image that has all dependencies installed.\nUse the following steps to get the `vaictl` command-line tool:\nFor direct installations, we currently only support Debian/Ubuntu  distributions.\nYou can also download this Debian package from the [Vertex AI Vision SDK GitHub releases page](https://github.com/google/visionai/releases) .- (Optional) Remove prior versions of `vaictl` .Before you can install the `vaictl` command-line tool,   you must delete any prior versions of the tool on your machine:```\nsudo apt-get remove visionai\n```\n- Download the required package. You can download the package from   the [GitHub releases page](https://github.com/google/visionai/releases) ,   or use the following command:```\nwget https://github.com/google/visionai/releases/download/v0.0.5/visionai_0.0-5_amd64.deb\n```\n- After downloading the package, run the following command in the directory   you downloaded the file:```\nsudo apt install ./visionai_0.0-5_amd64.deb\n```\n- Verify installation:```\nvaictl --help\n```\nYou can get a Docker image that has the Vertex AI Vision SDK and all its  dependencies already pre-installed. This Docker image is available at `gcr.io/visionai-public-images/vaictl` .- Download the image from Container Registry:```\ndocker pull gcr.io/visionai-public-images/vaictl\n```\n- Run an interactive container terminal.```\ndocker run -it --rm gcr.io/visionai-public-images/vaictl /bin/bash\n```\n- Verify functionality:```\nvaictl --help\n```\n### Get the source code\nThe Vertex AI Vision SDK is open-source and publicly available on [GitHub](https://github.com/google/visionai) .\nWhile the SDK depends on the service API definitions, this dependency is already automatically managed by [Bazel](https://github.com/bazelbuild/bazel) and you don't need to explicitly acquire it. However, if you need direct access to the service APIs, you can get them on the [googleapis GitHub repository](https://github.com/googleapis/googleapis/tree/master/google/cloud/visionai/v1) .\n## The Python programming SDK\nVertex AI Vision also supports a Python SDK. To program with this SDK, just make sure that you have met the basic [Python SDK dependencies](#python-version) before you [install the Python SDK](#get-python-sdk) .\nFor SDK reference information, see the [Python SDK reference](/vision-ai/docs/reference/python/visionai) .\nFor example codes that use the Python SDK, see the [Face blur with the Python SDK tutorial](/vision-ai/docs/face-blur-python) , or see some examples in the source distribution in the `visionai/python/examples/` directory.\n### Get the Python SDK package\nThe Vertex AI Vision SDK also contains a Python library. Download and install the pre-built version of the Python SDK with the following instructions.\n- Download the package.You can download the Python SDK package from the [Vertex AI Vision SDK GitHub releases page](https://github.com/google/visionai/releases) , or you can run the command:```\nwget https://github.com/google/visionai/releases/download/v0.0.5/visionai-0.0.5-py3-none-any.whl\n```\n- Optional. Create and activate a new virtual environment:```\npython3 -m venv vaivenvsource vaivenv/bin/activate\n```\n- Install the package:```\npip3 install visionai-0.0.5-py3-none-any.whl\n```\n- Optional. Confirm that installation worked:```\npython3\n``````\nimport visionai\n```\n- Optional. Deactivate your virtual environment:```\ndeactivate\n```## The C++ programming SDK\nC++ is the first programming SDK we support. The C++ public SDK is located in `visionai/public/streams.h` . For reference information, see the [referencedocumentation](/vision-ai/docs/reference/cpp) .\n## What's next\n- Optional: Learn how to [build and test using the C++ SDK](/vision-ai/docs/build-test-cpp) .\n- Learn how to [ingest data](/vision-ai/docs/create-manage-streams#ingest-videos) into an app and read about processing components you can add in [Build an app](/vision-ai/docs/build-app) .\n- Learn about output storage and processing options in [Connect app output to a data destination ](/vision-ai/docs/connect-data-destination) .\n- Read about how to [Search Warehouse data in the console](/vision-ai/docs/search-streaming-warehouse) .", "guide": "Vertex AI Vision"}