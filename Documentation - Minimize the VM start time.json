{"title": "Documentation - Minimize the VM start time", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Minimize the VM start time\n**Preview:** Minimize the VM start time is a Preview feature that is available as-is and is not recommended for production environments. Google provides no Service-Level agreements (SLA) or technical support commitments for Preview features. For more information, see Google Distributed Cloud Hosted (GDCH) [feature stages](/distributed-cloud/hosted/docs/latest/gdch/resources/feature-stages) .\nIf you require your VMs to boot as quickly as possible, minimize your virtual machine (VM) start time with the instructions on this page. Minimizing the start time comes at the cost of resource efficiency\u2014your project consumes additional resources, and has an increased security surface.\n", "content": "## Before you begin\nTo use `gdcloud` command-line interface (CLI) commands, ensure that you have downloaded, installed, and configured the [gdcloud CLI](/distributed-cloud/hosted/docs/latest/gdch/resources/gdcloud-overview) . All commands for Distributed Cloud Hosted use the `gdcloud` or `kubectl` CLI, and require an operating system (OS) environment.\n### Get the kubeconfig file path\nTo run commands against the org admin cluster, ensure you have the following resources:\n- Locate the org admin cluster name, or ask your Platform Administrator (PA) what the cluster name is.\n- [Sign in and generate](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/iam/sign-in#cli) the kubeconfig file for the org admin cluster if you don't have one.\n- Use the path to the kubeconfig file of the org admin cluster to replace `` in these instructions.## Keep disk connections alive\nWhen a VM starts, initiating a connection from the VM's node to the VM's disk takes a few seconds. To make the VM start up faster, the disk connection must be kept alive when the VM is shut down so that the disk connection doesn't reinitiate on subsequent VM starts. To achieve this, when you [run the command](#enable-keep-alive) to enable disk connection keep-alive the system automatically creates a dummy pod that mounts all the VM's disks.\n### Enable disk connection keep-alive\nTo keep disk connections alive for a VM called `` in the project `` , run the following command. When you do, the system automatically creates the dummy pod:\n```\nkubectl --kubeconfig ORG_ADMIN_KUBECONFIG patch virtualmachines.virtualmachine.gdc.goog VM_NAME -n PROJECT --type merge --patch $'metadata:\u00a0 annotations:\u00a0 \u00a0 disk.virtualmachine.gdc.goog/enable-connection-keep-alive: \"true\"'\n```\nReplace the variables throughout these instructions, using the following definitions.\n| Variable    | Definition         |\n|:---------------------|:--------------------------------------------|\n| ORG_ADMIN_KUBECONFIG | The org admin cluster kubeconfig file path. |\n| VM_NAME    | The name of the VM.       |\n| PROJECT    | The GDCH project in which the VM resides. |\nWhen the disk connection keep-alive is enabled, a pod named `disk-connection-keep-alive-` `` is created in the same project as the VM. The next VM restart is faster, as are subsequent start times, because the VM's disk connections are kept alive by the pod.\n### Set up disk connection keep-alive affinity\nThe Kubernetes scheduler might select a different node for the VM when it restarts. To reduce the chances of that happening, configure an [inter-VM affinity rule](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/create-a-vm/schedule-vms#keep-vms-together) between the VM and the keep-alive pod. Configure this to happen automatically:\n```\nkubectl --kubeconfig ORG_ADMIN_KUBECONFIG patch virtualmachines.virtualmachine.gdc.goog VM_NAME -n PROJECT --type merge --patch $'metadata:\u00a0 annotations:\u00a0 \u00a0 disk.virtualmachine.gdc.goog/add-connection-keep-alive-affinity: \"true\"'\n```\nThis adds a preferred-affinity setting on the VM to the keep-alive pod.\n### Caveats\nThere are two caveats to keeping disk connections alive:\n- The keep-alive pod incurs additional resource usage:- It counts towards the limit of the number of pods per node.\n- It uses an additional IP address that is assigned by Kubernetes.\n- It uses a negligible additional amount of CPU and memory.\n- The security surface increases, because the node where the keep-alive pod is present always has the VM's disks attached, even when the VM is shut down.## Use BIOS firmware\nIn GDCH, starting a VM with Unified Extensible Firmware Interface (UEFI) firmware is slower than starting a VM with BIOS firmware.\n- To ensure that the start time is minimal, set the VM's firmware type to BIOS:```\nkubectl --kubeconfig ORG_ADMIN_KUBECONFIG patch virtualmachines.virtualmachine.gdc.goog VM_NAME -n PROJECT --type merge --patch $'spec:\u00a0 firmware:\u00a0 \u00a0 type: bios\u00a0 \u00a0 enableSecureBoot:'\n```\n- If the VM is running, restart it using the instructions to [restart the VM](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/manage-vms/operations-and-lifecycle/start-and-stop-vm#restart-a-vm) .\n### Caveats\nThe caveat to using BIOS firmware is that it doesn't support [secure boot](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/manage-vms/secure-vms/secure-boot) .", "guide": "Documentation"}