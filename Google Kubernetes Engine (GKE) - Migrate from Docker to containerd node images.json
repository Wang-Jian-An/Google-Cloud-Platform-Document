{"title": "Google Kubernetes Engine (GKE) - Migrate from Docker to containerd node images", "url": "https://cloud.google.com/kubernetes-engine/docs/concepts/kubernetes-engine-overview", "abstract": "# Google Kubernetes Engine (GKE) - Migrate from Docker to containerd node images\nThis page shows you how to migrate your Google Kubernetes Engine (GKE) Standard cluster and node pools to node images that use the containerd container runtime.\n**Important:** GKE began automatically migrating clusters to GKE version 1.24 after version 1.23 [reached end of life on July31,2023](/kubernetes-engine/docs/release-schedule#schedule-for-release-channels) . To learn more about how the migration process works, and how you can use a maintenance exclusion to temporarily prevent your nodes from being migrated to containerd node images, see [Temporarily delay the automatic migration tocontainerd nodeimages](/kubernetes-engine/docs/deprecations/docker-containerd#temporarily-delay) .\n", "content": "## Overview\nKubernetes nodes use the to launch, manage, and stop containers running in Pods. The [containerd runtime](https://containerd.io/) is an industry-standard container runtime that's supported by GKE.\nThe containerd runtime provides the layering abstraction that allows for the implementation of a rich set of features like [gVisor](https://gvisor.dev/) and [Image streaming](/kubernetes-engine/docs/how-to/image-streaming) to extend GKE functionality. The containerd runtime is considered more resource efficient and secure than the Docker runtime.\n**Note:** GKE version 1.24 and later only support node images that use the containerd runtime. For clusters using Docker node images, before version 1.23 reaches end of life, automatic upgrades to 1.24 are paused and manual upgrades are blocked until all nodes are migrated to containerd node images. To learn more about the removal of Docker support and the potential impact of migrating, refer to [About the Docker node imagedeprecation](/kubernetes-engine/docs/deprecations/docker-containerd) .\nTo migrate your container runtime:\n- Identify nodes that use the Docker runtime\n- Verify the impact of migration\n- Change the node image## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.## Identify nodes that use the Docker runtime\nYou can check which nodes use Docker-based node images using the following methods:\n- Use a script to iterate over all nodes in all GKE clusters across your Google Cloud project.\n- Use the Google Cloud CLI,`kubectl`, or the Google Cloud console to identify node images.\n- Use [deprecation insights and recommendations](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations) to identify clusters and nodes in specific zones or regions in a Google Cloud project.\nWe recommend that you use a script to quickly identify all the nodes that you need to migrate.\n### Use a script to identify Docker nodes\nThe following script iterates over every node in every cluster in your available projects and provides you with actionable recommendations, such as:\n- Whether [node auto-provisioning](/kubernetes-engine/docs/how-to/node-auto-provisioning) is configured for Docker images\n- Suggested [containerd node image](/kubernetes-engine/docs/concepts/node-images) equivalents for migration\n- Suggested node image versions for migration\n- Suggested commands to run to migrate the identified nodes and settings\nThe script ignores GKE Autopilot clusters, which use the Container-Optimized OS with containerd node image by default.\nRun the following script:\n[  migrating-to-containerd/find-nodepools-to-migrate.sh ](https://github.com/GoogleCloudPlatform/k8s-node-tools/blob/HEAD/migrating-to-containerd/find-nodepools-to-migrate.sh) [View on GitHub](https://github.com/GoogleCloudPlatform/k8s-node-tools/blob/HEAD/migrating-to-containerd/find-nodepools-to-migrate.sh)\n```\nfor project in $(gcloud projects list --format=\"value(projectId)\")do\u00a0 echo \"ProjectId: $project\"\u00a0 for clusters in $( \\\u00a0 \u00a0 gcloud container clusters list \\\u00a0 \u00a0 \u00a0 --project $project \\\u00a0 \u00a0 \u00a0 --format=\"csv[no-heading](name,location,autopilot.enabled,currentMasterVersion,autoscaling.enableNodeAutoprovisioning,autoscaling.autoprovisioningNodePoolDefaults.imageType)\")\u00a0 do\u00a0 \u00a0 IFS=',' read -r -a clustersArray <<< \"$clusters\"\u00a0 \u00a0 cluster_name=\"${clustersArray[0]}\"\u00a0 \u00a0 cluster_zone=\"${clustersArray[1]}\"\u00a0 \u00a0 cluster_isAutopilot=\"${clustersArray[2]}\"\u00a0 \u00a0 cluster_version=\"${clustersArray[3]}\"\u00a0 \u00a0 cluster_minorVersion=${cluster_version:0:4}\u00a0 \u00a0 cluster_autoprovisioning=\"${clustersArray[4]}\"\u00a0 \u00a0 cluster_autoprovisioningImageType=\"${clustersArray[5]}\"\u00a0 \u00a0 if [ \"$cluster_isAutopilot\" = \"True\" ]; then\u00a0 \u00a0 \u00a0 echo \" \u00a0Cluster: $cluster_name (autopilot) (zone: $cluster_zone)\"\u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0Autopilot clusters are running Containerd.\"\u00a0 \u00a0 else\u00a0 \u00a0 \u00a0 echo \" \u00a0Cluster: $cluster_name (zone: $cluster_zone)\"\u00a0 \u00a0 \u00a0 if [ \"$cluster_autoprovisioning\" = \"True\" ]; then\u00a0 \u00a0 \u00a0 \u00a0 if [ \"$cluster_minorVersion\" \u00a0\\< \"1.20\" ]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0Node autoprovisioning is enabled, and new node pools will have image type 'COS'.\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0This settings is not configurable on the current version of a cluster.\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0Please upgrade you cluster and configure the default node autoprovisioning image type.\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0\"\u00a0 \u00a0 \u00a0 \u00a0 else\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if [ \"$cluster_autoprovisioningImageType\" = \"COS\" ]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0Node autoprovisioning is configured to create new node pools of type 'COS'.\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0Run the following command to update:\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0gcloud container clusters update '$cluster_name' --project '$project' --zone '$cluster_zone' --enable-autoprovisioning --autoprovisioning-image-type='COS_CONTAINERD'\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fi\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if [ \"$cluster_autoprovisioningImageType\" = \"UBUNTU\" ]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0Node autoprovisioning is configured to create new node pools of type 'UBUNTU'.\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0Run the following command to update:\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0gcloud container clusters update '$cluster_name' --project '$project' --zone '$cluster_zone' --enable-autoprovisioning --autoprovisioning-image-type='UBUNTU_CONTAINERD'\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fi\u00a0 \u00a0 \u00a0 \u00a0 fi\u00a0 \u00a0 \u00a0 fi\u00a0 \u00a0 \u00a0 for nodepools in $( \\\u00a0 \u00a0 \u00a0 \u00a0 gcloud container node-pools list \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --project $project \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --cluster $cluster_name \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --zone $cluster_zone \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --format=\"csv[no-heading](name,version,config.imageType)\")\u00a0 \u00a0 \u00a0 do\u00a0 \u00a0 \u00a0 \u00a0 IFS=',' read -r -a nodepoolsArray <<< \"$nodepools\"\u00a0 \u00a0 \u00a0 \u00a0 nodepool_name=\"${nodepoolsArray[0]}\"\u00a0 \u00a0 \u00a0 \u00a0 nodepool_version=\"${nodepoolsArray[1]}\"\u00a0 \u00a0 \u00a0 \u00a0 nodepool_imageType=\"${nodepoolsArray[2]}\"\u00a0 \u00a0 \u00a0 \u00a0 nodepool_minorVersion=${nodepool_version:0:4}\u00a0 \u00a0 \u00a0 \u00a0 echo \" \u00a0 \u00a0Nodepool: $nodepool_name, version: $nodepool_version ($nodepool_minorVersion), image: $nodepool_imageType\"\u00a0 \u00a0 \u00a0 \u00a0 minorVersionWithRev=\"${nodepool_version/-gke./.}\"\u00a0 \u00a0 \u00a0 \u00a0 linuxGkeMinVersion=\"1.14\"\u00a0 \u00a0 \u00a0 \u00a0 windowsGkeMinVersion=\"1.21.1.2200\"\u00a0 \u00a0 \u00a0 \u00a0 suggestedImageType=\"COS_CONTAINERD\"\u00a0 \u00a0 \u00a0 \u00a0 if [ \"$nodepool_imageType\" = \"UBUNTU\" ]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 suggestedImageType=\"UBUNTU_CONTAINERD\"\u00a0 \u00a0 \u00a0 \u00a0 elif [ \"$nodepool_imageType\" = \"WINDOWS_LTSC\" ]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 suggestedImageType=\"WINDOWS_LTSC_CONTAINERD\"\u00a0 \u00a0 \u00a0 \u00a0 elif [ \"$nodepool_imageType\" = \"WINDOWS_SAC\" ]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 suggestedImageType=\"WINDOWS_SAC_CONTAINERD\"\u00a0 \u00a0 \u00a0 \u00a0 fi\u00a0 \u00a0 \u00a0 \u00a0 tab=$'\\n \u00a0 \u00a0 \u00a0';\u00a0 \u00a0 \u00a0 \u00a0 nodepool_message=\"$tab Please update the nodepool to use Containerd.\"\u00a0 \u00a0 \u00a0 \u00a0 nodepool_message+=\"$tab Make sure to consult with the list of known issues https://cloud.google.com/kubernetes-engine/docs/concepts/using-containerd#known_issues.\"\u00a0 \u00a0 \u00a0 \u00a0 nodepool_message+=\"$tab Run the following command to upgrade:\"\u00a0 \u00a0 \u00a0 \u00a0 nodepool_message+=\"$tab \"\u00a0 \u00a0 \u00a0 \u00a0 nodepool_message+=\"$tab gcloud container clusters upgrade '$cluster_name' --project '$project' --zone '$cluster_zone' --image-type '$suggestedImageType' --node-pool '$nodepool_name'\"\u00a0 \u00a0 \u00a0 \u00a0 nodepool_message+=\"$tab \"\u00a0 \u00a0 \u00a0 \u00a0 # see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images\u00a0 \u00a0 \u00a0 \u00a0 if [ \"$nodepool_imageType\" = \"COS_CONTAINERD\" ] || [ \"$nodepool_imageType\" = \"UBUNTU_CONTAINERD\" ] ||\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[ \"$nodepool_imageType\" = \"WINDOWS_LTSC_CONTAINERD\" ] || [ \"$nodepool_imageType\" = \"WINDOWS_SAC_CONTAINERD\" ]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 nodepool_message=\"$tab Nodepool is using Containerd already\"\u00a0 \u00a0 \u00a0 \u00a0 elif ( [ \"$nodepool_imageType\" = \"WINDOWS_LTSC\" ] || [ \"$nodepool_imageType\" = \"WINDOWS_SAC\" ] ) &&\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0[ \"$(printf '%s\\n' \"$windowsGkeMinVersion\" \"$minorVersionWithRev\" | sort -V | head -n1)\" != \"$windowsGkeMinVersion\" ]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 nodepool_message=\"$tab Upgrade nodepool to the version that supports Containerd for Windows\"\u00a0 \u00a0 \u00a0 \u00a0 elif [ \"$(printf '%s\\n' \"$linuxGkeMinVersion\" \"$minorVersionWithRev\" | sort -V | head -n1)\" != \"$linuxGkeMinVersion\" ]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 nodepool_message=\"$tab Upgrade nodepool to the version that supports Containerd\"\u00a0 \u00a0 \u00a0 \u00a0 fi\u00a0 \u00a0 \u00a0 \u00a0 echo \"$nodepool_message\"\u00a0 \u00a0 \u00a0 done\u00a0 \u00a0 fi # not autopilot\u00a0 donedone# Sample output:\n## ProjectId: \u00a0my-project-id# \u00a0Cluster: autopilot-cluster-1 (autopilot) (zone: us-central1)# \u00a0 \u00a0Autopilot clusters are running Containerd.# \u00a0Cluster: cluster-1 (zone: us-central1-c)# \u00a0 \u00a0Nodepool: default-pool, version: 1.18.12-gke.1210 (1.18), image: COS\n## \u00a0 \u00a0 \u00a0 Please update the nodepool to use Containerd.# \u00a0 \u00a0 \u00a0 Make sure to consult with the list of known issues https://cloud.google.com/kubernetes-engine/docs/concepts/using-containerd#known_issues.# \u00a0 \u00a0 \u00a0 Run the following command to upgrade:\n## \u00a0 \u00a0 \u00a0 gcloud container clusters upgrade 'cluster-1' --project 'my-project-id' --zone 'us-central1-c' --image-type 'COS_CONTAINERD' --node-pool 'default-pool'\n## \u00a0 \u00a0Nodepool: pool-1, version: 1.18.12-gke.1210 (1.18), image: COS\n## \u00a0 \u00a0 \u00a0 Please update the nodepool to use Containerd.# \u00a0 \u00a0 \u00a0 Make sure to consult with the list of known issues https://cloud.google.com/kubernetes-engine/docs/concepts/using-containerd#known_issues.# \u00a0 \u00a0 \u00a0 Run the following command to upgrade:\n## \u00a0 \u00a0 \u00a0 gcloud container clusters upgrade 'cluster-1' --project 'my-project-id' --zone 'us-central1-c' --image-type 'COS_CONTAINERD' --node-pool 'pool-1'\n## \u00a0 \u00a0Nodepool: winpool, version: 1.18.12-gke.1210 (1.18), image: WINDOWS_SAC\n## \u00a0 \u00a0 \u00a0 Upgrade nodepool to the version that supports Containerd for Windows\n## \u00a0Cluster: another-test-cluster (zone: us-central1-c)# \u00a0 \u00a0Nodepool: default-pool, version: 1.20.4-gke.400 (1.20), image: COS_CONTAINERD\n## \u00a0 \u00a0 \u00a0Nodepool is using Containerd already#\n```\n### Identify node images using Google Cloud\nYou can check the node images for existing nodes using the Google Cloud CLI, `kubectl` , or the Google Cloud console.\nRun the following command:\n```\ngcloud container node-pools list \\\u00a0 \u00a0 --cluster=CLUSTER_NAME \\\u00a0 \u00a0 --format=\"table(name,version,config.imageType)\"\n```\nReplace `` with the name of your cluster.\nThe output is similar to the following:\n```\nNAME   NODE_VERSION IMAGE_TYPE\ndefault-pool 1.19.6-gke.600 UBUNTU\n```- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- In the cluster list, click the name of the cluster you want to verify.\n- Select the **Nodes** tab.\n- In the **Node pools** section, check the value in the **Image type** column.\nRun the following command:\n```\nkubectl get nodes -o wide\n```\nThe output is similar to the following:\n```\n# For Docker runtime\nNAME   STATUS VERSION    OS-IMAGE        CONTAINER-RUNTIME\ngke-node-1 Ready v1.16.15-gke.6000 Container-Optimized OS from Google docker://19.3.1\ngke-node-2 Ready v1.16.15-gke.6000 Container-Optimized OS from Google docker://19.3.1\ngke-node-3 Ready v1.16.15-gke.6000 Container-Optimized OS from Google docker://19.3.1\n```\nThe value in the `CONTAINER-RUNTIME` column shows the runtime and version.\n### Identify clusters using deprecation insights and recommendations\nGKE detects the usage of some deprecated features and APIs, including Docker-based node images. To learn more, see [GKE deprecations](/kubernetes-engine/docs/deprecations) .\nAs part of detecting the usage of deprecations, GKE [generatesinsights and recommendations](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations) which identify usage of Docker-based node images with the `DEPRECATION_K8S_1_24_DOCKERSHIM` insight subtype.\nOne insight and recommendation pairing identifies a cluster that has nodes that are using Docker-based node images. Each insight and recommendation provides a list of the specific node pools in a cluster that are using Docker-based node images and must be migrated to containerd node images.\nTo get started, follow the instructions to [view deprecation insights and recommendations](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations#view-deprecation-insights-recs) . For the gcloud CLI commands, use the following flag to just see insights for this deprecation:\n```\n--filter=\"insightSubtype:DEPRECATION_K8S_1_24_DOCKERSHIM\"\n```\nOnce you've identified which cluster's node pools are using Docker-based node images, follow the instructions to [change the node image to a containerd node image](#change-image) .\n## Verify the impact of migrating\nBefore you migrate your production clusters and node pools to node images that use containerd, we strongly recommend that you test the impact of the migration in a staging environment to minimize the risk of issues.\nWe recommend that when you migrate the nodes, you do so independently of upgrading the nodes, so that you can isolate variables when verifying the workloads function with the new configuration. Additionally, if you upgrade the node pool to version 1.24 at the same time, you cannot roll back the change as 1.24 does not support Docker nodes and you cannot downgrade minor versions.\n## Change the node image to a containerd image\nIf you used the [script](#identify-script) to identify your Docker nodes, you can use the suggested commands returned by the script to change your node auto-provisioning settings and your node images to the containerd equivalents.\nYou can also migrate nodes from a Docker image type to a containerd image type by updating the node pool and setting a different image using the gcloud CLI or the Google Cloud console.\nGKE uses the [selected node upgradestrategy](/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies) and configuration to migrate a node's image. For this migration, we recommend that you use the [blue-green upgradestrategy](/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies#blue-green-upgrade-strategy) because if your workloads experience issues with the new node image during the upgrade, you can [rollback](/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies#rollback-a-blue-green-upgrade) to the previous environment with the original node image configuration.\nRun the following command:\n```\ngcloud container clusters upgrade CLUSTER_NAME \\\u00a0 \u00a0 --image-type=NODE_IMAGE \\\u00a0 \u00a0 --node-pool=POOL_NAME \\\u00a0 \u00a0 --cluster-version=NODE_VERSION\n```\nReplace the following:- ``: the node image that you want the nodes to use.\n- ``: the name of the node pool to migrate.\n- ``: the existing version of the node pool. We recommend setting this flag because otherwise, GKE attempts to upgrade the version of the node pool to the control plane version and update the node image in the same operation. If the control plane is running 1.24, the command fails. If the control plane is running 1.23, the command succeeds, which prevents you from testing the two changes (version upgrade and image update) in isolation.\nThe output is similar to the following:\n```\nNAME   NODE_VERSION IMAGE_TYPE\ndefault-pool 1.23.6-gke.600 UBUNTU_CONTAINERD\n```\n **Note:** After updating your node image, if you notice a problem and need to revert to the Docker image, run the same command and replace `` with the previous Docker image.- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Goto Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- In the cluster list, click the name of the cluster you want to verify.\n- Click the **Nodes** tab.\n- In the **Node pools** section, click the name of the node pool that you want to modify.\n- On the **Node pool details** page, click edit **Edit** .\n- In the **Nodes** section, under **Image type** , click **Change** .\n- Select one of the containerd image types.\n- Click **Change** .\n **Note:** After updating your node image, if you notice a problem and need to revert to the Docker image, perform the previous steps and select the previous Docker image.\n### Roll back to Docker node images\nIf your nodes were automatically or manually migrated to containerd nodes and you saw an issue with your workloads, perform the following steps to revert to Docker node images:\n- Choose the following step depending on the state of the operation:- If the operation is still in progress, you can [cancel](/kubernetes-engine/docs/how-to/upgrading-a-cluster#cancel) and [roll back](/kubernetes-engine/docs/how-to/upgrading-a-cluster#rollback) .\n- If the operation is complete, see the [previous section](#change-image) 's steps and select the [equivalent Docker image](/kubernetes-engine/docs/deprecations/docker-containerd#docker_and_containerd_node_images) .\n- [Configure a maintenance exclusion](/kubernetes-engine/docs/how-to/maintenance-windows-and-exclusions#configuring_a_maintenance_exclusion) to temporarily prevent GKE from retrying the migration.\n- Investigate the root cause of the issue so that you can migrate from Docker and ensure that your cluster is running a supported version of GKE.\n- Try again to [change the node image to a containerd image](#change-image) . If you [remove the maintenance exclusion](/kubernetes-engine/docs/how-to/maintenance-windows-and-exclusions#remove-exclusions) , GKE will trigger the operation again.\n### Update Infrastructure as Code (IaC) tool configurations\nIf you use IaC tools such as Terraform, Ansible, or Pulumi to manage GKE clusters, ensure that you update your configurations to use containerd node images to prevent the tools from reconciling the previously desired state with the new actual state. For example, the GKE Terraform provider supports [configurable imagetypes](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type) .\nUpdate any configurations so that the tool does not update the node image back to a Docker-based node image after you've migrated to containerd node images.\n## Change the default node image for node auto-provisioning\nIf you use [node auto-provisioning](/kubernetes-engine/docs/how-to/node-auto-provisioning) in your cluster, change the default image type to a containerd node image. Changing the default image type only applies to new auto-provisioned node pools. You must manually change the node image for existing auto-provisioned node pools.\nYou can change the default node auto-provisioning image type using the gcloud CLI or a configuration file.\nRun the following command:\n```\ngcloud container clusters update CLUSTER_NAME \\\u00a0 \u00a0 --enable-autoprovisioning \\\u00a0 \u00a0 --autoprovisioning-image-type=IMAGE_TYPE\n```\nReplace the following:- ``: the name of the cluster to update.\n- `` : the node image type, which can be one of the following:- `cos_containerd`\n- `ubuntu_containerd` **Note:** For `ubuntu_containerd` , specify `--autoprovisioning-scopes=https://www.googleapis.com/auth/devstorage.read_only` in the command.\nYou can use a YAML configuration file to change the default node image type for node auto-provisioning. When you use a file, you must also specify maximum values for CPU and memory resources.- Save the following YAML file:```\nresourceLimits:\u00a0 - resourceType: 'cpu'\u00a0 \u00a0 \u00a0 minimum: 4\u00a0 \u00a0 \u00a0 maximum: 10\u00a0 - resourceType: 'memory'\u00a0 \u00a0 \u00a0 maximum: 64autoprovisioningNodePoolDefaults:\u00a0 imageType: 'IMAGE_TYPE'\n```Replace `` with the containerd image type. **Note:** For `ubuntu_containerd` , add `scopes: https://www.googleapis.com/auth/devstorage.read_only` to the configuration file.\n- Apply the configuration:```\ngcloud container clusters update CLUSTER_NAME \\\u00a0 \u00a0 --enable-autoprovisioning \\\u00a0 \u00a0 --autoprovisioning-config-file=FILE_NAME\n```Replace `` with the path to the configuration file.## Troubleshooting\nFor troubleshooting and for known issues with workarounds, refer to [Troubleshooting the container runtime](/kubernetes-engine/docs/troubleshooting/container-runtime) .\n## What's next\n- [Learn more about node auto-provisioning](/kubernetes-engine/docs/how-to/node-auto-provisioning) .\n- [Learn more about containerd node images](/kubernetes-engine/docs/concepts/using-containerd) .", "guide": "Google Kubernetes Engine (GKE)"}