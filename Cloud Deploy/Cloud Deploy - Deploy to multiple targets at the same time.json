{"title": "Cloud Deploy - Deploy to multiple targets at the same time", "url": "https://cloud.google.com/deploy/docs/parallel", "abstract": "# Cloud Deploy - Deploy to multiple targets at the same time\nUsing Cloud Deploy, you can deploy to a target that's configured to represent multiple targets, and your application is deployed to those targets in parallel (concurrently). The target you identify as a stage in your pipeline is called a [multi-target](/deploy/docs/terminology#multi-target) , and the targets that multi-target comprises are called [child targets](/deploy/docs/terminology#child-target) .\nYou can use parallel deployment with any target type that Cloud Deploy supports, including Google Kubernetes Engine, Cloud Run, and GKE Enterprise.\n#", "content": "## Why parallel deployment\nYou can use parallel deployment, for example, to deploy your application to multiple production targets. In this case, you don't need to deploy to each target in succession, because there's no progression (for example, from dev to staging to production).\nAnd this parallel deployment can be a part of a normal delivery pipeline progression: `dev -> staging -> prod [prod1, prod2, prod3, prod4, ...]` .\n**Note:** you can use parallel deployment for any stage in your delivery pipeline.\n## Cloud Deploy resources used for parallel deployment\nParallel deployment uses the following Cloud Deploy specialized resources:\n- multi-targetsA multi-target is a target that is configured with the property `multiTarget` , at the top level of the target config YAML, and instead of referencing the runtime cluster or service, it references one or more other targets, using `multiTarget.targetIds` .\n- Child targetsA child target is any target referenced by a multi-target as `multiTarget.targetIds` . The child must also reference a supported target type (Google Kubernetes Engine, GKE Enterprise, or Cloud Run.\n- Controller rolloutsA controller rollout is a rollout that corresponds to the multi-target.See [Limitations](#limitations) for more information about what you can and can't do with a controller rollout.\n- [Child rollouts](/deploy/docs/terminology#child_rollout) See [Limitations](#limitations) for more information about what you can and can't do with a child rollout.## Set up parallel deployment\nSetting up parallel deployment consists of defining one multi-target and the number of child targets you need (up to the [limit](#limitations) ). Target definitions are the same as for all targets, except for the following:\n- Multi-targets include the`multiTarget`property.\n- Child targets do not include the`multiTarget`property, but are referenced from the multi-target using the`multiTarget.targetIds`property.\n- You can configure the multi-target for approval, but not the child targets, which cannot include`requireApproval:true`.\nMulti-targets and child targets can include custom [execution environment](/deploy/docs/execution-environment) configs. If a child target doesn't specify an execution environment, it inherits the one defined in the multi-target definition, or the default. See [Execution environments and parallel deployment](#execution_environments_and_parallel_deployment) for more details.\n### Configure the multi-target\nA multi-target is a single target identified as a stage in your delivery pipeline, but pointing to one or more child targets.\nThe multi-target configuration includes the `multiTarget` property. A multi-target cannot have the `gke` or `run` or `anthosCluster` properties. Configuration for a multi-target is the same regardless of which runtime you're deploying to.\nIn your delivery pipeline YAML or in a separate YAML file, create the basic target definition, including `multiTarget` :\n```\napiVersion: deploy.cloud.google.com/v1kind: Targetmetadata:\u00a0name: TARGET_NAMEdescription: TARGET_DESCRIPTIONmultiTarget:\u00a0targetIds: [ CHILD_TARGET1, CHILD_TARGET2, CHILD_TARGETn ]\n```\nIn this YAML...\n- is the name of this multi-target, which is used in the [delivery pipeline definition](/deploy/docs/config-files#stages) , `stages.targetId` property.\n- are the names of the child targets this multi-target deploys to. Each name corresponds to the `name` property in the child target definition.\nThe presence of the `multiTarget.targetIds` property makes this target a multi-target.\n### Configure the child targets\nFor each target [identified](#configure_the_multi-target) as a child in your multi-target configuration, configure another target, as a child target:\nIn your [delivery pipeline YAML](/deploy/docs/config-files) or in a separate YAML file, create the basic target definition:\n```\napiVersion: deploy.cloud.google.com/v1kind: Targetmetadata:\u00a0name: CHILD_TARGET1description: TARGET_DESCRIPTIONgke:\u00a0cluster: projects/PROJECT_ID/locations/REGION/clusters/CLUSTER_NAME\n```\nIn this YAML...- is the name of this child target. The name corresponds to one member in the list of targets in the `multiTarget.targetIds` property in the [multi-target definition](#configure_the_multi-target) .\n- The value of the `gke.cluster` property is the resource name of the cluster this target refers to, including the project ID, the region, and the cluster name.\nThis target is configured the same as a standard GKE target. The only thing that makes this a child target is that its referenced by the `multiTarget.targetIds` property in the multi-target.\n```\napiVersion: deploy.cloud.google.com/v1kind: Targetmetadata:\u00a0name: CHILD_TARGET1description: TARGET_DESCRIPTIONrun:\u00a0location: projects/PROJECT_ID/locations/REGION\n```\nIn this YAML...- is the name of this child target. The name corresponds to one member in the list of targets in the `multiTarget.targetIds` property in the [multi-target definition](#configure_the_multi-target) .\n- The value of the `run.location` property is the resource name of the Cloud Run service this target refers to, including the project ID and the region.\nThis target is configured the same as a standard Cloud Run target. The only thing that makes this a child target is that its referenced by the `multiTarget.targetIds` property in the multi-target.\n```\napiVersion: deploy.cloud.google.com/v1kind: Targetmetadata:\u00a0name: CHILD_TARGET1description: TARGET_DESCRIPTIONanthosCluster:\u00a0membership: projects/PROJECT_ID/locations/global/memberships/MEMBERSHIP_NAME\n```\nIn this YAML...- is the name of this child target. The name corresponds to one member in the list of targets in the `multiTarget.targetIds` property in the [multi-target definition](#configure_the_multi-target) .\n- is the name that you chose when you [registered the GKE Enterprise user cluster](/anthos/multicluster-management/connect/registering-a-cluster) to a fleet.\nThis target is configured the same as a standard GKE Enterprise target. The only thing that makes this a child target is that its referenced by the `multiTarget.targetIds` property in the multi-target.\n### Create the release\nWith a multi-target and child targets configured, [create the delivery pipeline and target resources](/deploy/docs/create-pipeline-targets#register_the_delivery_pipeline_and_targets) , and then create a release, as normal.\nThe lifecycle of the delivery pipeline is the same as with any Cloud Deploy pipeline and targets, except that when it gets to the stage with the multi-target, Cloud Deploy creates a controller rollout for the multi-target and a child rollout to deploy the application to each child target.\nPub/Sub messages in response to Cloud Deploy operations distinguish between controller rollouts and child rollouts.\n## Limitations\n- A multi-target can have no more than 50 child targets.\n- All child targets of a single multi-target must have the same target runtime (all GKE, or all GKE Enterprise, for example).\n- Within a delivery pipeline, a child target can have only one parent multi-target.\n- A multi-target can't be childless, and it can't reference itself or another multi-target as child targets.\n- You can't use a child target more than once within a single delivery pipeline, but you can re-use them in different pipeline.\n- [Default pools](/deploy/docs/execution-environment#about_worker_pools) have concurrency limits, but private pools don't.When you deploy to a multi-target, all child rollouts are deployed at the same time, up to the Cloud Build concurrency limit. If you have more child targets than that limit, the deploy jobs for some targets won't run until others finish, which means that Cloud Deploy doesn't deploy to all child targets at the same time, in this case.Additionally, if the targets include [verify jobs](/deploy/docs/verify-deployment) , it's possible for one or more of those verify jobs to start before the application has been deployed to all child targets.If you need to be able to deploy concurrently to more targets than the limit specified in the [Cloud Build documentation](/build/quotas#quotas) , you have two options:- [Request an increase](/build/quotas#increasing_quota) of the number of concurrent builds you can run.\n- [Set up a private pool](/build/docs/private-pools/private-pools-overview) and [configure your targets to use that pool](/docs/execution-environment#changing_from_the_default_pool_to_a_private_pool) .\n## Execution environments and parallel deployment\nEach target can be configured to use a non-default execution environment.\n- If the multi-target has a non-default execution environment, all child targets using the default execution environment, inherit the non-default one from the multi-target\n- If the multi-target uses the default execution environment, any child target that is configured with a non-default execution environment uses that non-default one.\nThese rules make it easier to propagate execution environments to child targets from a multi-target, so you don't have to define or change the execution environment for each child target, while still allowing you to customize the execution environment for one or more child targets if you need to do so.\nSee [Using Google Cloud Deploy execution environments](/deploy/docs/execution-environment) for more information about execution environments in Cloud Deploy.\n## Roll back a parallel deployment\nIf you need to roll back a deployment from multiple, parallel targets, Roll back the multi-target, as described in [Roll back a target](/deploy/docs/roll-back) .\n## Approvals for parallel deployment\nAs with any targets, you can configure your parallel deployment to require [approvals](/deploy/docs/promote-release#manage_approvals_for_a_delivery_pipeline) . With parallel deployment, however, you can only configure approval on the multi-target. The approval or rejection affects all child targets together.\n## View parallel deployment in Google Cloud console\nYou can view details for your multi-target, child targets, the controller rollout, and child rollouts in Google Cloud console.\nWhen you view the list of targets for a given delivery pipeline, in the Delivery Pipeline Details, the multi-target is listed, but child targets aren't. When you view release details, however, you can see the controller rollout and the child rollouts. You can also see controller and child rollouts listed on the **Rollouts** tab on the Delivery Pipeline details page.\nIn the [release inspector](/deploy/docs/view-release) , you can view, and diff, rendered manifests for child rollouts.\n## Pass deploy parameters to targets\nYou can differentiate among child targets by including parameters in your manifest and values in your delivery pipeline definition. Those values can be [applied separately](/deploy/docs/parameters#add_to_pipeline_stage) to the separate manifests, based on label matching on the corresponding targets.\nFor example, you might want a different number of replicas for each child target. To do so, you would include the parameters and values in the delivery pipeline's [progression](/deploy/docs/terminology#progression) , along with labels on the child targets to match for each parameter-value pair.\nLearn more about [deploy parameters](https://cloud.google.com/deploy/docs/parameters) .\n## Use parallel deployment with a deployment strategy\nYou can deploy in parallel when you're using a [canary deployment strategy](/deploy/docs/deployment-strategies/canary) . See [Use parallel deployment with a canary deployment strategy](/deploy/docs/deployment-strategies/canary#parallel_canary) for more information.\n## What's next\n- Try the [quickstart: Deploy an app to multiple targets at the same time](/deploy/docs/deploy-app-parallel) .\n- Learn more about [using deploy parameters](/deploy/docs/parameters) .\n- See the [target configuration schema](/deploy/docs/config-files#target_definitions) .\n- Review the article [Cloud Deploy service architecture](/deploy/docs/architecture) .", "guide": "Cloud Deploy"}