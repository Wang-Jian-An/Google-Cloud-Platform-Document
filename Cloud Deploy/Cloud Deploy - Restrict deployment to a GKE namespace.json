{"title": "Cloud Deploy - Restrict deployment to a GKE namespace", "url": "https://cloud.google.com/deploy/docs/securing/sa-by-namespace?hl=zh-cn", "abstract": "# Cloud Deploy - Restrict deployment to a GKE namespace\nWhen you deploy to Google Kubernetes Engine (GKE), the default Cloud Deploy [execution service account](/deploy/docs/cloud-deploy-service-account#execution_service_account) has access to all namespaces in the target cluster. You can configure that service account to deploy to only one namespace.\n**Note:** The instructions in this document are for deploying to GKE. If you're deploying to GKE Enterprise clusters, see [this document](/anthos/multicluster-management/gateway/setup#configure_role-based_access_control_rbac_policies) for further instructions on setting up RBAC policies.\n- Ensure that the execution service account doesn't have the `roles/container.developer` IAM role.\n- Grant the service account the `roles/container.clusterViewer` role.```\ngcloud projects add-iam-policy-binding PROJECT_ID \\\u00a0--member=\"serviceAccount:SERVICE_ACCOUNT\" \\\u00a0--role=\"roles/container.clusterViewer\"\n```This role allows the service account to authenticate on the cluster, but do nothing else.\n- Create a Kubernetes RBAC Role that grants admin access to the namespace.The RBAC role in this example has broad permissions, equivalent to the [clouddeploy.developer IAM role](/deploy/docs/iam-roles-permissions#predefined_roles) . To minimize the risk of privilege escalation, we recommend you change these permissions to the minimum required for your applications. For instructions, see the [RBAC documentation for GKE](/kubernetes-engine/docs/how-to/role-based-access-control) .```\nkind: RoleapiVersion: rbac.authorization.k8s.io/v1metadata:\u00a0 name: admin\u00a0 namespace: NAMESPACErules:- apiGroups: [\"\", \"extensions\", \"apps\"]\u00a0 resources: [\"*\"]\u00a0 verbs: [\"*\"]\n```\n- Create a `RoleBinding` that binds that RBAC Role in your chosen namespace to the Cloud Deploy execution service account:```\nkind: RoleBindingapiVersion: rbac.authorization.k8s.io/v1metadata:\u00a0 name: admin\u00a0 namespace: NAMESPACEsubjects:# Google Cloud user account- kind: User\u00a0 name: SERVICE_ACCOUNTroleRef:\u00a0 kind: Role\u00a0 name: admin\u00a0 apiGroup: rbac.authorization.k8s.io\n```This manifest defines an RBAC policy binding the `admin` Role to your execution service account. `` is the namespace for which you want to grant the service account access. The service account can't access any other namespace on the cluster.\n- Apply the RBAC manifest to the cluster:```\nkubectl apply -f YAML_NAME\n``", "content": "`", "guide": "Cloud Deploy"}