{"title": "Cloud Deploy - Using automation rules", "url": "https://cloud.google.com/deploy/docs/automation-rules", "abstract": "# Cloud Deploy - Using automation rules\nThis document describes automation rules, which are actions that can be taken on your delivery pipeline automatically. For example, you can configure your delivery pipeline so that promotion into a specific target happens automatically, under the right circumstances.\nYou can only use automation rules that are built into Cloud Deploy. The available automation rules are listed in this document.\n", "content": "## Available automation rules\nThe following automation rules are available in Cloud Deploy:\n| Rule   | Description                             |\n|:---------------|:-------------------------------------------------------------------------------------------------------------------------------|\n| promoteRelease | Automatically promotes a release into the indicated target after successful rollout in the previous target in the progression. |\n| advanceRollout | Automatically advances a rollout from the indicated phase to the next phase.             |\n## Configuring automation rules\nConfiguration for each automation rule depends on the specific rule. This section describes configuration that all rules have in common, as well as how to configure each of the available rules.\nThe following sections describe configuration specific to individual automation rules. See [Automate your deployment](/deploy/docs/automation#create_automation) for configuration of the automation itself.\n### Configuring a promoteRelease automation rule\nThe `promoteRelease` rule promotes your release after a successful rollout into a target. For example, if you have three targets, you can set up this rule so that when the release is successfully deployed into the first target, it's automatically promoted to the second target.\nWhen you configure a `promoteRelease` automation, you can specify either a target to promote to ( `destinationTargetId` ) or `@next` . When the rollout finishes successfully in target specified in the `Automation` definition, the release is then promoted to the target specified in `destinationTargetId` , subject to a `wait` time interval.\nYou can also promote a release to a specific phase in the intended target, using the `destinationPhase` property.\n```\nrules:- promoteRelease:\u00a0 \u00a0 name: \"[RULE_NAME]\"\u00a0 \u00a0 wait: [WAIT_TIME]\u00a0 \u00a0 destinationTargetId: \"[TO_TARGET]\"\u00a0 \u00a0 destinationPhase: \"[TO_PHASE]\"\n```\nWhere:\n- `[RULE_NAME]`Is any name you want to give to this rule. This name must be unique within the automation resource.\n- `[WAIT_TIME]`Is the amount of time, in minutes, to wait after the release is ready for promotion before it's promoted. For example, `1m` . The `m` is required.The default value is `0` , or no wait time. The maximum is `20160m` (or 14 days).\n- `[TO_TARGET]`Is the [targetId](/deploy/docs/config-files#targetid) of the target to promote to.This can also be `@next` , which promotes the release automatically to the next target after the target specified in the `selector.target` property in this [automation config](/deploy/docs/config-files#automation_definitions) . This is the default if you omit the value from `destinationTargetId` .\n- `[TO_PHASE]`Is the phase name of the phase you want to promote to, for example `canary-25` or `stable` . This property is optional; if you omit it, the release is promoted to the first phase in the target.\n### Configuring an advanceRollout automation rule\nThe `advanceRollout` rule advances your rollout, automatically, after successful completion of one phase, into the next phase. This automation rule is useful for canary deployments. For example, if you have a canary deployment strategy configured on a target, with phases of `25%` , `50%` , and `stable` , you could configure an automation rule that advances the phase automatically to `stable` after the `50%` phase finishes.\nWhen you configure a `advanceRollout` automation, you identify the phase to advance (the `sourcePhase` ).\n```\nrules:- advanceRollout:\u00a0 \u00a0 name: \"[RULE]\"\u00a0 \u00a0 sourcePhases: [\"[START_PHASE]\", \"[START_PHASE]\"...]\u00a0 \u00a0 wait: [WAIT_TIME]\n```\nWhere:\n- `[RULE]`Is any name you want to give to this rule. This name must be unique within the delivery pipeline.\n- `[WAIT_TIME]`Is the amount of time, in minutes, to wait to advance the rollout after the rollout is ready. For example, `1m` . The `m` is required.The default value is `0` , or no wait time. The maximum is `20160m` (or 14 days).\n- `[\"[START_PHASE]\", \"[START_PHASE]\"...]`Is the phase or phases the rollout is automatically advanced. That is, when any of the phases listed finish successfully, the rollout is automatically advanced from that phase to the next phase.Phase names are case sensitive. Also, these phase names are optional; if you omit `sourcePhases` , all phases in the rollout are automatically advanced.## What's next\n- Try the [quickstart: Automate release creation and rollout advancement](/deploy/docs/deploy-app-automation) .\n- [Learn more](/deploy/docs/automation) about deployment automation in Cloud Deploy.", "guide": "Cloud Deploy"}