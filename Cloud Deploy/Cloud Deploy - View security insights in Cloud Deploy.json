{"title": "Cloud Deploy - View security insights in Cloud Deploy", "url": "https://cloud.google.com/deploy/docs/securing/security-insights", "abstract": "# Cloud Deploy - View security insights in Cloud Deploy\nThis page explains how to view security information about the container images you deploy. You can view this information in the **Security insights** side panel for Cloud Deploy in Google Cloud console.\nThe **Security insights** side panel provides a high-level overview of multiple security metrics. You can use this panel to identify and mitigate risks in the images you deploy.\nThis panel displays the following information:\n- SLSA build levelIdentifies the maturity level of your software build process in accordance with the [Supply-chain Levels for Software Artifacts (SLSA) specification](https://slsa.dev) .\n- VulnerabilitiesLists any vulnerabilities found in your artifact or artifacts.\n- VEX status [Vulnerability Exploitability eXchange(VEX) status](/artifact-analysis/docs/upload-view-vex-statements) for the build artifacts.\n- SBOM [Software bill of materials (SBOM)](/artifact-analysis/docs/sbom-overview) for the build artifacts.\n- Build detailsIncludes information about the build.\n", "content": "## Requirements\nSecurity insights are available only for container images that meet the following requirements:\n- Vulnerability scanning must be [enabled](#enable_vulnerability_scanning) .\n- The required Identity and Access Management [roles must be granted](#grant_permissions_to_view_insights) , in the project where Artifact Analysis is running.\n- The name of the image, as part of [release creation](/sdk/gcloud/reference/deploy/releases/create#--images) , must be [SHA qualified](/kubernetes-engine/docs/concepts/about-container-images) .If the image is shown in the **Artifacts** tab in Cloud Deploy without the SHA256 hash, you might need to rebuild that image.## Enable vulnerability scanning\nThe information shown in the **Security Insights** panel comes from [Artifact Analysis](/container-analysis/docs/container-analysis) and potentially from [Cloud Build](/build/docs/overview) . Artifact Analysis is a service that provides integrated on-demand or automated scanning for base container images, Maven, and Go packages in containers, and for non-containerized Maven packages.\nTo receive all of the security insights available, you must enable vulnerability scanning:\n- To turn on vulnerability scanning, enable the required APIs. [Enable the APIs](https://console.cloud.google.com/flows/enableapi?apiid=containerscanning.googleapis.com,cloudbuild.googleapis.com,artifactregistry.googleapis.com,containersecurity.googleapis.com) \n- Build your container image, and [store it in Artifact Registry](/build/docs/building/store-artifacts-in-artifact-registry) . Artifact Analysis automatically scans the build artifacts.Vulnerability scanning may take a few minutes, depending on the size of your container image.\nFor more information on vulnerability scanning, see [On-push scanning](/container-analysis/docs/scanning-types#on-push_scanning) .\nThere is a cost for scanning. See the [Pricing page](/container-analysis/pricing) for pricing information.\n## Grant permissions to view insights\nTo view security insights in Cloud Deploy, you need the IAM roles described here, or a role with equivalent permissions. If Artifact Registry and Artifact Analysis are running in different projects, you must add the Artifact Analysis Occurrences Viewer role, or equivalent permissions, in the project where Artifact Analysis is running.\n- [Cloud Build Viewer](/iam/docs/understanding-roles#cloudbuild.builds.viewer) ( `roles/cloudbuild.builds.viewer` )View insights for a build.\n- [Artifact Analysis Viewer](/iam/docs/understanding-roles#containeranalysis.occurrences.viewer) ( `roles/containeranalysis.occurrences.viewer` )View vulnerabilities and other dependency information.## View security insights in Cloud Deploy\n- Open the Cloud Deploy **Delivery pipelines** page in the Google Cloud console: [Open the delivery pipelines page](https://console.cloud.google.com/deploy) \n- If necessary, select the project that includes the pipeline and release that delivered the container image for which you want to view security insights.\n- Click the name of the delivery pipeline.The delivery pipeline details are shown.\n- From the Delivery pipeline details page, select a release that delivered the container image.\n- On the Release details page, select the **Artifacts** tab.Containers that were delivered by the selected release are listed under **Build artifacts** . For each container, the **Security insights** column includes a **View** link. **Note:** If security insights are not available for a given container image, the **View** link is disabled. The **View** link is disabled if the container doesn't satisfy all requirements for it to have been scanned.\n- Click the **View** link next to the name of the artifact whose security details you want to view.The **Security insights** panel is displayed, showing available security information for this artifact. The following sections describe this information in more detail.\n### SLSA level\nSLSA is an industry-standard set security guidelines for producers and consumers of software. This standard establishes [four levels](https://slsa.dev/spec/v0.1/levels) of confidence in the security of your software.\n### Vulnerabilities\nThe **Vulnerabilities** card shows the vulnerability occurrences, available fixes, and VEX status for the build artifacts.\n[Artifact Analysis](/artifact-analysis/docs/scanning-types#automated) supports scanning for container images pushed to [Artifact Registry](/artifact-registry/docs/overview) . The scans detect vulnerabilities in operating system packages, and in application packages created in Python, Node.js, Java (Maven), or Go.\nScanning results are organized by [severitylevel](/artifact-analysis/docs/os-overview#severity_levels_for_vulnerabilities) . The severity level is a qualitative assessment based on exploitability, scope, impact, and maturity of the vulnerability.\nClick the image name to see the artifacts that have been scanned for vulnerabilities.\nFor every container image pushed to Artifact Registry, Artifact Analysis can store an associated VEX statement. VEX is a type of security advisory that indicates whether a product is affected by a known vulnerability.\nEach VEX statement provides:\n- The publisher of the VEX Statement\n- The artifact for which the statement is written\n- The vulnerability assessment (VEX status) for any CVEs## Dependencies\nThe **Dependencies** card displays a list of SBOMs that include a list of dependencies.\nWhen you build a container image using Cloud Build and push it to Artifact Registry, Artifact Analysis can generate SBOM records for the pushed images.\nAn SBOM is a full inventory of an application, identifying the packages your software relies on. The contents can include third-party software from vendors, internal artifacts, and open source libraries.\n### Build details\nThe build details include the following:\n- A link to the Cloud Build logs\n- The name of the builder that built the image\n- The build date/time\n- Build provenance, in JSON format## What's next\n- Learn more about [Software Delivery Shield](/software-supply-chain-security/docs/overview) \n- Try the quickstart [Deploy an app to GKE and view security insights](/software-supply-chain-security/docs/sds/deploy-gke-view-security-insights) \n- Try the quickstart [Deploy an app to Cloud Run and view security insights](/software-supply-chain-security/docs/sds/deploy-run-view-security-insights) \n- Learn [software supply chain security best practices](/software-supply-chain-security/docs/overview) .\n- Learn how to [store and view build logs](/build/docs/securing-builds/store-view-build-logs) .", "guide": "Cloud Deploy"}