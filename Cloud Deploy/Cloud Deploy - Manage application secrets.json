{"title": "Cloud Deploy - Manage application secrets", "url": "https://cloud.google.com/deploy/docs/securing/secrets", "abstract": "# Cloud Deploy - Manage application secrets\nThis page describes some best practices for managing secrets for applications you deploy to Google Kubernetes Engine or GKE Enterprise clusters using Cloud Deploy.\nBecause injecting application secrets into deployment artifacts introduces security risks, avoid managing secrets from within Cloud Deploy pipelines.\nSecrets consumed in this way should be generated, managed, and rotated outside of the scope of Cloud Deploy.\nSecrets, in this context, refer to sensitive data such as database credentials, API keys, certificates, or passwords.\n", "content": "## Kubernetes secrets\nKubernetes Secrets are secure objects that store sensitive data, such as passwords, OAuth tokens, and SSH keys in your clusters, separate from Pods. Secrets are similar to ConfigMaps, but are intended to hold confidential data.\nBecause Kubernetes Secrets are not secure by default, without encryption, the approaches described in this document do not use them.\n## Managing secrets for use with Cloud Deploy\nThis section describes how to manage secrets for applications that you deploy using Cloud Deploy.\nThe following are two approaches to secrets management with GKE or GKE Enterprise:\n- [Google Secret Manager](/secret-manager) \n- [Hashicorp Vault](https://www.vaultproject.io/) \n### Google Secret Manager\nSecret Manager is a fully managed, multi-region Google Cloud service that securely stores API keys, passwords, and other sensitive data.\nSecrets from Secret Manager can be accessed from the cluster using the [client library](/secret-manager/docs/reference/libraries) and [Workload Identity](/kubernetes-engine/docs/how-to/workload-identity) authentication, or using the [Secrets Store CSI driver](https://github.com/kubernetes-sigs/secrets-store-csi-driver) .\nTo use Secret Manager for your application:\n- [Create a secret using Secret Manager](/secret-manager/docs/creating-and-accessing-secrets#create) .\n- Reference the secret from your application code [using the SDK](/secret-manager/docs/accessing-the-api) .\nYou can specify additional metadata for the secret using environment variables, for example secret version, or application environment (such as dev, staging, prod).\nIf the deployment process for a specific feature includes provisioning of infrastructure, then create or update the secret using Secret Manager as part of the provisioning process, before deploying the application.\nFor more information on managing Kubernetes secrets with Secret Manager, see [Using Secret Manager with other products ](/secret-manager/docs/using-other-products) .\n### Hashicorp Vault\n[Hashicorp Vault](https://www.vaultproject.io/) is a popular and widely used open source tool for managing secrets. Google Cloud has extensive integrations and support for Vault, along with other Hashicorp tools such as Terraform.\nYou can configure Vault within your Kubernetes cluster as follows:\n- Access Vault secrets through the [API](https://vaultproject.io/api) and authenticate using [Workload Identity](/kubernetes-engine/docs/how-to/workload-identity) .\n- Inject Secrets into your Kubernetes Pods using [Vault Agent](https://learn.hashicorp.com/tutorials/vault/agent-kubernetes) containers.\n- Use the [Vault CSI Provider](https://vaultproject.io/docs/platform/k8s/csi) to consume those secrets.\n**Note:** when you implement Vault, you're responsible for securing and updating the Vault cluster, and for configuring backups and high availability.\n## What's next\n- Find out more about Secret Manager [best practices](/secret-manager/docs/best-practices) .\n- Read a [blog post](https://jryancanty.medium.com/hashicorp-vault-and-terraform-on-google-cloud-security-best-practices-3d94de86a3e9) about security best practices using HashiCorp Vault and Terraform on Google Cloud.\n- [Read more about secrets management in GKE](/kubernetes-engine/docs/concepts/security-overview) .\n- [Learn about configuring Vault on Google Cloud](https://www.vaultproject.io/docs/secrets/gcp) .", "guide": "Cloud Deploy"}