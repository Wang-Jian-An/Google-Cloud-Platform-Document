{"title": "Cloud Deploy - Use Skaffold with Cloud Deploy", "url": "https://cloud.google.com/deploy/docs/using-skaffold", "abstract": "# Cloud Deploy - Use Skaffold with Cloud Deploy\nThis article describes [Skaffold](/skaffold) , how and why Cloud Deploy uses it, and what you need to do to make it work for you.\nCloud Deploy uses Skaffold for render and deploy operations. You can also use it for local development, build, test, and for [advanced deploymentfeatures](https://skaffold.dev/docs/pipeline-stages/) . However, Cloud Deploy only a Skaffold [configuration](https://skaffold.dev/docs/references/yaml) that identifies the manifests to render and apply.\n**Note:** You don't need to install Skaffold. It's included as part of Cloud Deploy.\n", "content": "## What is Skaffold?\nSkaffold is a command-line tool that enables continuous development for Kubernetes-native applications. You can use Skaffold to configure a local development workspace to use with Cloud Deploy continuous delivery pipelines.\nSkaffold includes the following features:\n- It gives you discrete control of CI/CD pipeline activities (build, render, test deploy, and so on).\n- It's useful as a local development tool.\n- Skaffold profiles let you differentiate among different environments, with different build, test, and deploy configurations, all in the same configuration file.## Why does Cloud Deploy use Skaffold?\nGoogle Cloud Deploy uses Skaffold to separate rendering tools from the delivery pipeline. Your delivery pipeline simply defines the progression from target to target, while your Skaffold configuration defines which manifests are rendered and how. This makes manifest rendering flexible without affecting how you define your delivery pipeline.\nHere are some of the advantages that Skaffold provides when you use it with Cloud Deploy:\n- **Easy onboarding** Start with a local development loop. You can share your `skaffold.yaml` file with your team, which can enable consistency help new team members.\n- **Consistent control** over rendering across diverse deployment targetsYou can use Skaffold profiles, with different rendering and deployment for different targets.\n- **Choice of rendering tools** without compromising how delivery pipelines are definedUsing Skaffold allows Cloud Deploy to separate delivery pipeline definition from render details. This separation lets you experiment with your manifests without disrupting the delivery pipeline.\n- **Coherent rendering process** The rendering source plus your containers are use to generate rendered manifests.\n- **Deployment health checks** Skaffold performs them, and Cloud Deploy uses them.## How does Cloud Deploy use Skaffold?\n- The rendering source and references to container images are passed to Cloud Deploy when you [create a release](/deploy/docs/integrating-ci#calling_from_your_ci_pipeline) .As part of release creation, Cloud Deploy calls Cloud Build, which, in turn, invokes [skaffold diagnose](https://skaffold.dev/docs/references/cli/#skaffold-diagnose) and [skaffold render](https://skaffold.dev/docs/workflows/ci-cd/#separation-of-rendering-and-deployment) to render the manifest or manifests using that rendering source and those images.\n- You can use [Skaffold profiles](https://skaffold.dev/docs/environment/profiles/) to differentiate manifests that will be applied to different targets.\n- Cloud Deploy [supports static Skaffold modules](https://skaffold.dev/docs/design/config/#local-config-dependency) .\n- When deploying, Cloud Deploy calls [skaffold apply](https://skaffold.dev/docs/workflows/ci-cd/#example-hydrate-manifests-then-deployapply-to-cluster) to apply the rendered manifest or manifests to the target cluster.\n- Cloud Deploy doesn't support the use of other deployers to deploy your application. You can, however, use tools like [Helm](https://helm.sh/) or [Kustomize](https://kustomize.io/) as renderers. To learn more about how Cloud Deploy deploys without using specific deployers (like Helm), see [Service architecture](/deploy/docs/architecture#how_they_fit_together_to_deliver_your_release) .## Make Skaffold work for you\n- Configure Skaffold according to your pipeline needs.- Determine the needs of your delivery pipeline.How many targets will you have? Are rendering and deployment the same for each. If configuration is the same for each target in your progression, you won't need to use Skaffold profiles. You only need a `skaffold.yaml` file that describes the manifests to render.\n- If applicable, create a Skaffold profile for each targetDefine this in your `skaffold.yaml` file and bind in your delivery pipeline definition progression sequence.See the [Skaffold documentation](https://skaffold.dev/docs/environment/profiles/) for more information about Skaffold profiles. Also, the document [Managing manifests in Cloud Deploy](/deploy/docs/using-skaffold/managing-manifests) includes example profile configurations.\n- Connect Cloud Deploy to your continuous-integration system. [At the end of your CI](/deploy/docs/integrating-ci) process, pass the `skaffold.yaml` , the rendering source, and the container images to be populated into the rendered manifest.\n- **Optional** : set up your local development loop, using Skaffold. [Using Skaffold for development](https://skaffold.dev/docs/workflows/dev/) is optional in Cloud Deploy. The only thing that's required in order for Cloud Deploy to operate is a `skaffold.yaml` file that identifies manifests to render.## What's next\n- Visit the [Skaffold site](https://skaffold.dev) to find out about how it works and what it can do for you.\n- [Learn how](/deploy/docs/using-skaffold/select-skaffold) Cloud Deploy selects the Skaffold version to use, when the Skaffold version changes, and how to determine which version is currently in use.\n- [Learn how](/deploy/docs/using-skaffold/managing-manifests) to use Skaffold profiles in conjunction with advanced manifest-management tools like Helm, Kustomize, and kpt.\n- Try out the [Skaffold profiles walkthrough](https://shell.cloud.google.com/?show=ide%2Cterminal&walkthrough_id=deploy--cloud-deploy-profiles-gke) .", "guide": "Cloud Deploy"}