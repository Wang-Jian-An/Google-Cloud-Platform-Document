{"title": "Cloud Deploy - Deploy a Cloud Run service or job", "url": "https://cloud.google.com/deploy/docs/run-targets", "abstract": "# Cloud Deploy - Deploy a Cloud Run service or job\nThis document describes how to deploy your applications, including Cloud Run services and Cloud Run jobs.\nCloud Deploy allows you to deploy your container-based workloads to any [Cloud Run service](/run/docs/deploying) or [job](/run/docs/create-jobs) . All Cloud Deploy features are supported when you deploy to Cloud Run targets for Cloud Run services, but canary deployments aren't supported for Cloud Run jobs.\nThis document describes the three main configurations you need to complete in order to deploy to Cloud Run:\n- [Create your target configuration](#create_your_target_configuration) \n- [Create your Skaffold configuration](#create_your_skaffold_configuration) \n- Create your Cloud Run [service definitions](#create_your_service_definitions) or [job definitions](#create_your_job_definitions) \n**Note:** To deploy to Cloud Run, you must [choose Skaffold version 2.0 or greater](/deploy/docs/using-skaffold/select-skaffold#choose_what_version_of_skaffold_to_use) when you create a release. If you don't specify any Skaffold version when you create a release to deploy to Cloud Run, the latest Cloud Run-compatible default Skaffold version is selected automatically.\n", "content": "## Limitations\n- You can only deploy one Cloud Run service or job per target.\n- You can't run a [canary deployment](/deploy/docs/deployment-strategies/canary) against a Cloud Run job.Cloud Run services, however, can use a canary deployment.## Before you begin\n- Make sure you're using [gcloud CLI](/sdk/gcloud/reference/components/update) version `401.0.0` or greater.\n- [Have a Cloud Deploy delivery pipeline](/deploy/docs/create-pipeline-targets) .## Create your target configuration\nThe target can be configured in your delivery pipeline YAML, or can be in a separate file. Also, you can configure more than one target in the same file.\nIn the target definition, create a `run` stanza to identify the location where the Cloud Run service will be created.\nThe syntax for specifying the Cloud Run service or job in your target definition is as follows:\n```\nrun:\u00a0location: projects/[project_name]/locations/[region_name]\n```\nThis resource identifier uses the following elements:\n- [ `project_name` ] is the name of the Google Cloud project in which your Cloud Run service or job will be created.You'll do this for each target. We recommend a different project for each Cloud Run service or job. If you want more than one service or job in the same project, you need to use [Skaffold profiles](https://cloud.google.com/deploy/docs/using-skaffold/managing-manifests) in your `skaffold.yaml` configuration file.\n- [ `region_name` ] is the region in which the service or job will be created. Your service or job can be in any [region that Cloud Run supports](https://cloud.google.com/about/locations) .\nThe following is an example target configuration, defining the Cloud Run service or job to create:\n```\n\u00a0 \u00a0 \u00a0 apiVersion: deploy.cloud.google.com/v1\u00a0 \u00a0 \u00a0 kind: Target\u00a0 \u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 \u00a0name: dev\u00a0 \u00a0 \u00a0 description: development service\u00a0 \u00a0 \u00a0 run:\u00a0 \u00a0 \u00a0 \u00a0location: projects/my-app/locations/us-central1\n```\nYou can define this target inside a Cloud Deploy delivery pipeline definition, or separately. Either way, you must [register the target](/deploy/docs/create-pipeline-targets#register_the_delivery_pipeline_and_targets) before you create the release to deploy your Cloud Run service or job.\n## Create your Skaffold configuration\nThe following is an `skaffold.yaml` file for a [Cloud Run deployment](https://skaffold-v2.web.app/docs/pipeline-stages/deployers/cloudrun/) :\n```\napiVersion: skaffold/v4beta7kind: Configmetadata: \u00a0 name: cloud-run-applicationmanifests:\u00a0 rawYaml:\u00a0 - service.yamldeploy:\u00a0 cloudrun: {}\n```\nIn this `skaffold.yaml` file...\n- `manifests.rawYaml` provides the names of the Cloud Run service definitions.In this example, `service.yaml` is the file that defines a Cloud Run service that Skaffold will deploy. This filename can be anything, but by convention it's `service.yaml` for a service, and `job.yaml` for a job.\n- The `deploy` stanza specifies how you want the manifest to be deployed, specifically, the project and location. `deploy` is required.We recommend you leave the empty `{}` . Cloud Deploy populates this during rendering, based on the project and location from the target definition.For local development, however, you can provide values here. However, Cloud Deploy always use the project and location from the target definition, regardless of whether values are provided here.## Create your Cloud Run service definitions\nTo create a Cloud Run service definition, you can either create one manually, or copy one from an existing service. Both are described in this section.\n### Option 1: create a new Cloud Run service.yaml\nThe [service.yaml](/run/docs/reference/yaml/v1) defines your Cloud Run service. When you create a release, Skaffold uses this definition to deploy your service.\nHere's a simplified example:\n```\napiVersion: serving.knative.dev/v1kind: Servicemetadata:\u00a0name: [SERVICE_NAME]spec:\u00a0template:\u00a0 spec:\u00a0 \u00a0containers:\u00a0 \u00a0- image: [IMAGE_PATH]\n```\nWhere:\n- `[SERVICE_NAME]` is a name for this Cloud Run service.\n- `[IMAGE_PATH]` points to the container image or images you're deploying with this service.\n### Option 2: copy a service.yaml from an existing service using Google Cloud console\nYou can create a service using Google Cloud console or use an existing one, and copy your `service.yaml` from there.\nTo get the `service.yaml` using Google Cloud CLI:\n```\ngcloud run services describe [service_name] --format=export\n```\nTo get the `service.yaml` from Google Cloud console:\n- In Google Cloud console, go to the Cloud Run Services page.\n- Select the existing service whose definition you want to use.\nOr you can [create a new one](/run/docs/deploying#service) , then select it. When you select the service, the Service Details page is shown:- Select the **YAML** tab.\n- Click **Edit** , then copy the contents of the YAML into a new file called `service.yaml` , in your file system, such that Skaffold can use it when you [create a release](/deploy/docs/deploying-application#invoke_your_delivery_pipeline_to_create_a_release) .## Create your Cloud Run job definitions\nTo deploy a Cloud Run job definition, you can either create one manually, or copy one from an existing job. Both are described in this section.\nNote that jobs aren't necessarily run upon being deployed by Cloud Deploy. This is different from services, which are running applications after they're deployed. How a job is invoked depends on the job itself.\n### Option 1: create a new Cloud Run job.yaml\nThe [job.yaml](/run/docs/reference/yaml/v1#job) defines your Cloud Run job. When you create a release, Skaffold uses this definition to deploy the job.\nHere's a simplified example:\n```\napiVersion: run.googleapis.com/v1kind: Jobmetadata:\u00a0name: [JOB_NAME]spec:\u00a0 template:\u00a0 spec:\u00a0 \u00a0containers:\u00a0 \u00a0- image: [IMAGE_PATH]\n```\nWhere:\n- `[JOB_NAME]` is a name for this Cloud Run job.\n- `[IMAGE_PATH]` points to the container image you're deploying for this job.\n### Option 2: copy a job.yaml from an existing job using Google Cloud console\nYou can create a job using Google Cloud console or use an existing one, and copy your `job.yaml` from there.\nTo get the `job.yaml` using Google Cloud CLI:\n```\ngcloud run jobs describe [job_name] --format=export\n```\nTo get the `job.yaml` from Google Cloud console:\n- In Google Cloud console, go to the Cloud Run Jobs page.\n- Select the existing job whose definition you want to use.\nOr you can [create a new one](/run/docs/create-jobs#job) , then select it. When you select the job, the Job Details page is shown:- Select the **YAML** tab.\n- Click **Edit** , then copy the contents of the YAML into a new file called `job.yaml` , in your file system, such that Skaffold can use it when you [create a release](/deploy/docs/deploying-application#invoke_your_delivery_pipeline_to_create_a_release) .## Putting it all together\nNow that you have your Cloud Run service or job definition, your `skaffold.yaml` configuration, and your Cloud Deploy target definition, and you've [registered your target](/deploy/docs/create-pipeline-targets#register_the_delivery_pipeline_and_targets) as a Cloud Deploy resource, you can now [invoke your delivery pipeline](https://cloud.google.com/deploy/docs/deploying-application#invoke_your_delivery_pipeline_to_create_a_release) to create a release and progress it through the progression of targets defined in the pipeline.\nThe quickstart [Deploy an app to Cloud Run using Cloud Deploy](/deploy/docs/deploy-app-run) shows all of this in action.\n## Behavior of services across revisions\nWhen you re-deploy a service, the new revision is based on the newly deployed `service.yaml` . Nothing about the previous revision is maintained, unless it's the same in the newly deployed YAML. For example, if there are configuration settings or labels in the previous revision that are not in the new YAML, those settings or labels are absent from the new revision.\n## Deploying Cloud Run services and jobs in multiple projects\nIf you need to deploy services or jobs that are in different projects, your [execution service account](/deploy/docs/cloud-deploy-service-account) needs permission to access the projects in which those services or jobs are defined.\nSee [Cloud Deploy execution service account](/deploy/docs/cloud-deploy-service-account#execution_service_account) and [Identity and Access Management roles and permissions](/deploy/docs/iam-roles-permissions) for more information.\n## What's next\n- Try the [quickstart: deploy an application to Cloud Run](/deploy/docs/deploy-app-run) \n- Learn more about [configuring Cloud Deploy targets](/deploy/docs/config-files#target_definitions) \n- Learn about Cloud Deploy [execution environments](/deploy/docs/execution-environment) .\n- Learn more about [Skaffold support for Cloud Run](https://skaffold-v2.web.app/docs/pipeline-stages/deployers/cloudrun/) \n- Learn more about [Cloud Run](/run/docs)", "guide": "Cloud Deploy"}