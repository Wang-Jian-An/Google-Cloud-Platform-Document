{"title": "Cloud Deploy - Using Cloud Deploy execution environments", "url": "https://cloud.google.com/deploy/docs/execution-environment", "abstract": "# Cloud Deploy - Using Cloud Deploy execution environments\nA Cloud Deploy execution environment is the environment in which Cloud Deploy executes its render, predeploy, deploy, verify, and postdeploy operations. The execution environment consists of the following components:\n- The [Cloud Build worker pool](/build/docs/private-pools/private-pools-overview) (default or private) in which Cloud Deploy executes render, predeploy, deploy, verify, and postdeploy operations\n- The service account (default or alternate) that calls Cloud Deploy to perform these actions\n- The storage location (default or alternate) for rendered manifests in Cloud Storage\n- The Cloud Build timeout for operations (default or custom)\nThis article describes the default execution environment, service accounts, and storage for Cloud Deploy, as well as why and how you can change these defaults.\n", "content": "## Defaults\nThe following are the defaults that Cloud Deploy uses to run, to execute rendering and deployment, and to store assets such as rendered manifests:\n- Default worker poolBy default, Cloud Deploy runs in the default Cloud Build worker pool. However, you can [configure Cloud Deploy to use a Cloud Buildprivate worker pool](/deploy/docs/config-files#executionconfigs) .For more details about worker pools, see the Cloud Build [Overview of default pools and private pools](/build/docs/private-pools/private-pools-overview#overview_of_default_pools_and_private_pools) .\n- Default execution service accountBy default, Cloud Deploy uses the [default Compute Engineservice account](/deploy/docs/cloud-deploy-service-account#default_service_account) .\n- Default Cloud Deploy storage locationThis value is the Cloud Storage bucket where Cloud Deploy stores your rendered manifests. By default, Cloud Deploy creates a Cloud Storage bucket, in the same [region](/deploy/docs/regions) as the Cloud Deploy resources, taking the following form:`<location>.deploy-artifacts.<project ID>.appspot.com`\n- Default Cloud Build timeoutBy default, Cloud Build has a timeout of 1 hour on operations it performs for Cloud Deploy. You can change that timeout in the execution environment specification in [target configuration](https://cloud.google.com/deploy/docs/config-files#executionconfigs) .\nThe sections that follow describe the circumstances under which you would change any of these values, and links to instructions for doing so.\n## About Cloud Build worker pools\nThe Cloud Deploy execution environment can use one of the following:\n- The [Cloud Build default pool](/build/docs/private-pools/private-pools-overview) The default worker pool is a secure, hosted environment with access to the public internet. Render, deploy, predeploy, postdeploy, and verify operations are executed in that pool, isolated from other workloads.\n- A private pool [Private worker pools](/build/docs/private-pools/private-pools-overview) are private, dedicated pools that can be customized more than the default worker pool. That customization can include the ability to access resources in a private network. Like the default worker pool, private worker pools are hosted and fully managed by Cloud Build. These pools can scale up or scale down to zero, with no infrastructure to set up, upgrade, or scale.The Cloud Build [Private pools overview](/build/docs/private-pools/private-pools-overview) describes default worker pools and private worker pools more thoroughly, including a table comparing their features.\n**Note:** Cloud Build private worker pools are regional resources. Cloud Deploy lets you configure [targets](/deploy/docs/terminology#target) with private pools in other regions. This configuration makes it possible to share private worker pools among targets, and allows cross-regional dependencies.\n## Changing the Cloud Deploy execution environment\nYou might change the Cloud Deploy execution environment under the following circumstances:\n- You want to [deploy to a private Google Kubernetes Engine cluster](/build/docs/private-pools/use-in-private-network#deploying-to-clusters) \n- You want render, deploy, predeploy, postdeploy, or verify operations, or a combination of the five, to be performed in an environment that's isolated from other organizations.\n- You want these operations to be performed in an environment that isn't connected to the public internet.\n- You want separate environments for render and deploy.\n- You want to use a dedicated service account with permissions that are more specific to your use than the permissions available in the default service account.\n- You want to store rendered manifests in a location different from the default Cloud Storage bucket.\nConfiguration of all three parts of the execution environment (worker pool, service account, and storage) is done per target, in [each target's YAML configuration](/deploy/docs/config-files#target_definitions) .\n### Changing from the default pool to a private pool\nYou configure worker pools [per target](/deploy/docs/config-files#target_definitions) , so that the pool is used for `RENDER` , `DEPLOY` , `PREDEPLOY` , `POSTDEPLOY` , or `VERIFY` (or a combination of the five) .\nTo use the default worker pool for both render and deploy operations, you don't need to do anything.\n**Note:** if you want to configure a target to use a private worker pool for either operation ( `RENDER` or `DEPLOY` ), but the default worker pool for the other, you must configure both. That is, you can't specify a private worker pool for `DEPLOY` but assume Cloud Deploy will perform rendering in the default pool.\nThe following is a sample target configuration that specifies a private worker pool for `DEPLOY` , and the default worker pool for `RENDER` , `PREDEPLOY` , `POSTDEPLOY` and `VERIFY` :\n```\nexecutionConfigs:- usages:\u00a0 - DEPLOY\u00a0 workerPool: \"projects/p123/locations/us-central1/workerPools/wp123\"- usages:\u00a0 - RENDER\u00a0 - PREDEPLOY\u00a0 - VERIFY\u00a0 - POSTDEPLOY\n```\n**Note:** if Cloud Deploy is running in a different project from the worker pool's project, make sure the [service agent](/deploy/docs/cloud-deploy-service-account#service_agent) has permission on the worker pool in that project. You can use either the `roles/cloudbuild.workerPoolUser` role or the `cloudbuild.workerpools.use` direct permission.\nFor more information about how to configure private pools for targets, see [Delivery pipeline configuration documentation](/deploy/docs/config-files#executionconfigs) .\n### Changing from the default to custom execution service account\nAs with the worker pool, you can specify an alternate service account to use for rendering or deploying (or both) per target. To do so, add the following line to the target configuration, after the `workerPool` element:\n`serviceAccount: \"[name]@[project_name].iam.gserviceaccount.com\"`\nThe specified service account must include the `clouddeploy.jobRunner` role, as described in the [Cloud Deploy service accounts](/deploy/docs/cloud-deploy-service-account) document.\nSee [Target definitions](/deploy/docs/config-files#target_definitions) for more details on this configuration.\n### Changing the storage location\nTo change the storage bucket from the Cloud Deploy default, add the following line to the [target definition](/deploy/docs/config-files#target_definitions) in the `workerPool` stanza:\n`artifactStorage: \"gs://[bucket_name]/[dir]\"`\nThis configuration changes where the rendered manifests are stored, but does not affect [where the rendering source is stored](/sdk/gcloud/reference/deploy/releases/create#--source) .\n## Using Cloud Deploy in a VPC Service Controls perimeter\nCloud Deploy supports [VPC Service Controls](/vpc-service-controls) .\nYou can follow the [VPC Service Controls quickstart](/vpc-service-controls/docs/set-up-service-perimeter) to set up a service perimeter.\n### Limitations\n- You must use a Cloud Build private worker pool for the target's execution environment\u2014not the default worker pool.\n- The project that contains the worker pool and the project that contains your Cloud Deploy resources must remain in the same VPC Service Controls security perimeter.\n- Any GKE cluster you deploy to in the VPC Service Controls perimeter must be a private cluster.To set up a private pool for a private cluster, see [this tutorial](https://cloud.google.com/architecture/accessing-private-gke-clusters-with-cloud-build-private-pools) .## What's next\n- Find out more about [Cloud Deploy target configuration](/deploy/docs/config-files#target_definitions) .\n- Read about [Cloud Build private pools](/build/docs/private-pools/private-pools-overview) .\n- Read about [how Cloud Build uses VPC Service Controls](/build/docs/private-pools/using-vpc-service-controls) .\n- Learn about how Cloud Deploy uses [service accounts](/deploy/docs/cloud-deploy-service-account) .\n- [Access private GKE clusters with Cloud Build private pools](/architecture/accessing-private-gke-clusters-with-cloud-build-private-pools) .", "guide": "Cloud Deploy"}