{"title": "Cloud Deploy - IAM roles and permissions", "url": "https://cloud.google.com/deploy/docs/iam-roles-permissions", "abstract": "# Cloud Deploy - IAM roles and permissions\nThis page describes Cloud Deploy service accounts, roles, and permissions.\nAccess in Cloud Deploy is controlled using [Identity and Access Management (IAM)](/iam) . IAM enables you to create and manage permissions for Google Cloud resources. Cloud Deploy provides a specific set of [predefined IAM roles](/iam/docs/understanding-roles#role_types) where each role contains a set of permissions. You can use these roles to give more fine-grained access to specific Google Cloud resources and prevent unwanted access to other resources. IAM lets you adopt the [security principle of least privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege) , so you grant only the necessary access to your resources.\nSee [Using IAM to restrict Cloud Deploy access](/deploy/docs/securing/iam) to learn about advanced access-control security features.\n", "content": "## Service accounts in Cloud Deploy\nBy default, Cloud Deploy runs using the default Compute Engine service account. That service account has sufficient permissions to render manifests and deploy to your targets.\n**Note:** make sure the service account you're using has the `logging.logEntries.create` permission. The [default service account](/deploy/docs/cloud-deploy-service-account#execution_service_account) has this permission by default, but some organizations remove it, by policy. If it's missing, your Cloud Build jobs won't have any logs attached to them.\n[Find out more](/deploy/docs/cloud-deploy-service-account) about how Cloud Deploy uses service accounts.\n## Predefined Cloud Deploy roles\nWith IAM, every API method in Cloud Deploy API requires that the identity making the API request has the appropriate permissions to use the resource. Permissions are granted by setting policies that grant roles to a principal (user, group, or service account) of your project. You can grant multiple roles to a principal on the same resource.\nThe IAM documentation includes a [searchable reference](/iam/docs/understanding-roles#predefined) of all predefined roles.\nThe following table lists the Cloud Deploy IAM roles and the permissions that they include:\n| Role         | Description                                                | Permissions                                                                                                                                                                                                                                |\n|:----------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------||\n| roles/clouddeploy.viewer    | Can view Cloud Deploy resources.                                           | clouddeploy.*.get clouddeploy.*.list                                                                                                                                                                                                                         |\n| roles/clouddeploy.admin     | Full control of Cloud Deploy resources.                                         | clouddeploy.*                                                                                                                                                                                                                               |\n| roles/clouddeploy.customTargetTypeAdmin | Full control of Cloud Deploy custom target types.                                       | clouddeploy.customTargetType.*                                                                                                                                                                                                                           |\n| roles/clouddeploy.developer    | Can create, retrieve, update, and delete Cloud Deploy delivery pipeline resources.                              | clouddeploy.deliveryPipelines.get clouddeploy.deliveryPipelines.list clouddeploy.deliveryPipelines.create clouddeploy.deliveryPipelines.delete clouddeploy.deliveryPipelines.update clouddeploy.deliveryPipelines.getIamPolicy clouddeploy.releases.* clouddeploy.rollouts.get clouddeploy.rollouts.list clouddeploy.operations.* clouddeploy.jobRuns.get clouddeploy.jobRuns.list clouddeploy.automations.get clouddeploy.automations.list clouddeploy.automationRuns.get clouddeploy.automationRuns.list                                                                                                        |\n| roles/clouddeploy.operator    | Can create, retrieve, update, and delete Cloud Deploy delivery pipeline and target resources. Can create and retrieve release, rollout, and job run resources. Can retrieve custom target type resources. | clouddeploy.customTargetType.get clouddeploy.customTargetType.list clouddeploy.customTargetType.getIamPolicy clouddeploy.deliveryPipelines.get clouddeploy.deliveryPipelines.list clouddeploy.deliveryPipelines.create clouddeploy.deliveryPipelines.delete clouddeploy.deliveryPipelines.update clouddeploy.deliveryPipelines.getIamPolicy clouddeploy.releases.* clouddeploy.targets.get clouddeploy.targets.list clouddeploy.targets.create clouddeploy.targets.delete clouddeploy.targets.update clouddeploy.targets.getIamPolicy clouddeploy.rollouts.advance clouddeploy.rollouts.cancel clouddeploy.rollouts.create clouddeploy.rollouts.get clouddeploy.rollouts.ignoreJob clouddeploy.rollouts.list clouddeploy.rollouts.retryJob clouddeploy.rollouts.rollback clouddeploy.operations.* clouddeploy.jobRuns.get clouddeploy.jobRuns.list clouddeploy.jobRuns.terminate clouddeploy.automations.* clouddeploy.automationRuns.* |\n| roles/clouddeploy.approver    | Can view and approve Cloud Deploy rollout resources only.                                     | clouddeploy.rollouts.get clouddeploy.rollouts.list clouddeploy.rollouts.approve clouddeploy.operations.* clouddeploy.jobRuns.get clouddeploy.jobRuns.list                                                                                                                                                                                            |\n| roles/clouddeploy.jobRunner    | Can execute Cloud Deploy work without permission to deploy to a target.                                 | logging.logEntries.create storage.objects.create storage.objects.list storage.objects.get                                                                                                                                                                                                            |\n| roles/clouddeploy.releaser    | Can create and retrieve releases and rollouts                                        | clouddeploy.customTargetType.get clouddeploy.deliveryPipelines.get clouddeploy.targets.get clouddeploy.releases.create clouddeploy.releases.get clouddeploy.releases.list clouddeploy.rollouts.advance clouddeploy.rollouts.cancel clouddeploy.rollouts.create clouddeploy.rollouts.get clouddeploy.rollouts.list clouddeploy.rollouts.rollback clouddeploy.jobRuns.get clouddeploy.jobRuns.list                                                                                                                                  |\n**Note:** If an [alternate service account](/deploy/docs/execution-environment#changing_from_the_default_to_custom_execution_service_account) is specified on the target, users with the `roles/clouddeploy.admin` , `.developer` , and `.operator` roles must also have the `iam.serviceAccounts.actAs` permission for the service accounts specified in a rollout target.\nIn addition to the Cloud Deploy predefined roles, the [basic](/iam/docs/understanding-roles#basic) Viewer, Editor, and Owner roles also include permissions related to Cloud Deploy. However, we recommend that you grant predefined roles where possible to comply with the [security principle of least privilege](/iam/docs/using-iam-securely#least_privilege) .\n## Permissions\nThe following table lists the permissions that the caller must have to call each method:\n| API Method       | Required permission      | Description                                  |\n|:-----------------------------------|:-------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------|\n| automations.create()    | clouddeploy.automations.create    | Create a new automation resource.                            |\n| automations.delete()    | clouddeploy.automations.delete    | Delete an existing automation resource.                           |\n| automations.get()     | clouddeploy.automations.get    | Retrieve details for an individual automation resource.                       |\n| automations.list()     | clouddeploy.automations.list    | List automation resources and their metadata.                         |\n| automations.update()    | clouddeploy.automations.update    | Update an existing automation resource.                           |\n| automationRuns.cancel()   | clouddeploy.automationRuns.cancel   | Cancel a running automation.                              |\n| automationRuns.get()    | clouddeploy.automationRuns.get    | Retrieve details for an individual automation run.                        |\n| automationRuns.list()    | clouddeploy.automationRuns.list   | List automation runs and their metadata.                           |\n| customTargetTypes.create()   | clouddeploy.customTargetType.create  | Create a custom target type resource.                           |\n| customTargetTypes.delete()   | clouddeploy.customTargetType.delete  | Delete a custom target type resource.                           |\n| customTargetTypes.get()   | clouddeploy.customTargetType.get   | Retrieve details for a custom target type.                          |\n| customTargetTypes.getIamPolicy() | clouddeploy.customTargetType.getIamPolicy | Get the IAM policy for a custom target type resource.                       |\n| customTargetTypes.list()   | clouddeploy.customTargetType.list   | List available custom target types and their metadata.                       |\n| customTargetTypes.patch()   | clouddeploy.customTargetType.patch   | Update an existing custom target type.                           |\n| customTargetTypes.setIamPolicy() | clouddeploy.customTargetType.setIamPolicy | Set the IAM policy for a custom target type resource.                       |\n| deliveryPipelines.create()   | clouddeploy.deliveryPipelines.create  | Create a new delivery pipeline resource.                           |\n| deliveryPipelines.delete()   | clouddeploy.deliveryPipelines.delete  | Delete an existing delivery pipeline resource.                         |\n| deliveryPipelines.get()   | clouddeploy.deliveryPipelines.get   | Retrieve details for an individual delivery pipeline.                       |\n| deliveryPipelines.getIamPolicy() | clouddeploy.deliveryPipelines.getIamPolicy | Get the IAM policy for a delivery pipeline resource.                        |\n| deliveryPipelines.list()   | clouddeploy.deliveryPipelines.list   | List delivery pipelines and their metadata.                          |\n| deliveryPipelines.rollbackTarget() | clouddeploy.rollouts.rollback    | Rolls back a target.                                |\n| deliveryPipelines.setIamPolicy() | clouddeploy.deliveryPipelines.setIamPolicy | Set the IAM policy for a delivery pipeline resource.                        |\n| deliveryPipelines.update()   | clouddeploy.deliveryPipelines.update  | Update an existing delivery pipeline resource.                         |\n| jobRuns.get()      | clouddeploy.jobRuns.get     | Retrieve a JobRuns resource.                              |\n| jobRuns.list()      | clouddeploy.jobRuns.list     | List JobRuns resources and their metadata.                          |\n| jobRuns.terminate()    | clouddeploy.jobRuns.terminate    | Terminate an in-progress job run.                            |\n| operations.cancel()    | clouddeploy.operations.cancel    | Cancel a long-running operation.                             |\n| operation.delete()     | clouddeploy.operations.delete    | Delete a long-running operation.                             |\n| operations.get()     | clouddeploy.operations.get     | Get a specific long-running operation (for example, to return the status of a release's creation).            |\n| operations.list()     | clouddeploy.operations.list    | List long-running operations.                             |\n| releases.abandon()     | clouddeploy.releases.abandon    | Abandon a release and prevent further rollouts against the release.                    |\n| releases.create()     | clouddeploy.releases.create    | Create a new release resource. The caller also requires iam.serviceAccounts.actAs permission on the service account used to render the manifest. |\n| releases.get()      | clouddeploy.releases.get     | Retrieve details for individual release.                           |\n| releases.list()     | clouddeploy.releases.list     | List releases and metadata.                              |\n| releases.promote()     | clouddeploy.rollouts.create    | Promote the release to next target.                            |\n| rollouts.advance()     | clouddeploy.rollouts.advance    | Advance a rollout to the next phase.                            |\n| rollouts.approve()     | clouddeploy.rollouts.approve    | Approve or reject a rollout with approval state of required.                      |\n| rollouts.cancel()     | clouddeploy.rollouts.cancel    | Cancel a rollout.                                |\n| rollouts.create()     | clouddeploy.rollouts.create    | Create a new rollout resource. The caller also requires iam.serviceAccounts.actAs permission on the project or service account used to deploy. |\n| rollouts.get()      | clouddeploy.rollouts.get     | Retrieve details for individual rollout.                           |\n| rollouts.ignoreJob()    | clouddeploy.rollouts.ignoreJob    | Ignore a failed job.                                |\n| rollouts.list()     | clouddeploy.rollouts.list     | List rollouts and metadata.                              |\n| rollouts.retryJob()    | clouddeploy.rollouts.retryJob    | Retries a failed job.                               |\n| targets.create()     | clouddeploy.targets.create     | Create a new target resource.                             |\n| targets.delete()     | clouddeploy.targets.delete     | Delete an existing target resource.                            |\n| targets.get()      | clouddeploy.targets.get     | Retrieve details for an individual target.                          |\n| targets.getIamPolicy()    | clouddeploy.targets.getIamPolicy   | Gets the IAM policy for a target resource.                          |\n| targets.list()      | clouddeploy.targets.list     | List targets and their metadata.                             |\n| targets.setIamPolicy()    | clouddeploy.targets.setIamPolicy   | Sets the IAM policy for a target resource.                          |\n| targets.update()     | clouddeploy.targets.update     | Update an existing target resource.                            |\n## Using IAM to restrict actions on Cloud Deploy resources\nYou can secure your Cloud Deploy resources using IAM in the following ways:\n- IAM meta APIsUse [setIamPolicy](/sdk/gcloud/reference/projects/set-iam-policy) on Cloud Deploy resources to restrict actions on those resources.\n- Conditional IAMProgrammatically apply [access policies](/iam/docs/granting-changing-revoking-access#policy-overview) , including the [conditions](/iam/docs/conditions-overview) under which to grant or deny access.\nYou can use these policies and conditions to restrict the following actions on your Cloud Deploy resources:\n- Create a delivery pipeline or targetYou can grant this access to specific users or groups.\n- Update or delete a specific delivery pipelineYou can grant this access to specific users or groups.\n- Create a release for a specific delivery pipelineYou can grant this access to specific users or groups.\n- Update or delete a specific targetYou can grant this access to specific users or groups.\n- Create or approve a rollout or promote a releaseYou can grant this access to specific users or groups for a specific target or delivery pipeline.You can also set a condition that limits this access to within a specified time window.## What's next\n- Learn about [IAM](/iam/docs) .\n- Learn more about [using conditions in IAM](/deploy/docs/securing/iam#about_iam_conditions) \n- Find out more about [Cloud Deploy service accounts](/deploy/docs/cloud-deploy-service-account) .", "guide": "Cloud Deploy"}