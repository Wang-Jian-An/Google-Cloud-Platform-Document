{"title": "Cloud Deploy - Use IAM to restrict Cloud Deploy access", "url": "https://cloud.google.com/deploy/docs/securing/iam", "abstract": "# Cloud Deploy - Use IAM to restrict Cloud Deploy access\nAs with all Google Cloud products, Identity and Access Management protects Cloud Deploy by controlling which authenticated users and service accounts can perform which actions.\nThis document describes some of the features of IAM, and provides instructions for protecting your application deliveries that are managed using Cloud Deploy. Here are some of the specific ways you can restrict access to actions and resources in Cloud Deploy:\n- [Grant access to a specific delivery pipeline](#access_to_pipeline) \n- [Grant access to configure a specific target](#access_to_target) \n- [Grant permissions to promote a release to a specific target](#promote_to_target) \n- [Grant permissions to approve rollouts to a specific target](#approve_to_target) \n- [Grant permissions to promote a release during a specific time window](#promote_at_time) \n- [Grant permissions to approve rollouts during a specific time window](#approve_at_time) ", "content": "## Before you begin\n- Understand the [basic concepts of IAM](/iam/docs/overview) .\n- Learn about [Cloud Deploy roles and permissions](/deploy/docs/iam-roles-permissions) .## About IAM advanced features\nBesides [roles and permissions](/iam/docs/granting-changing-revoking-access) , Cloud Deploy uses the following features of IAM to provide those controls:\n### About IAM policies\nAn IAM policy is a collection of bindings and metadata. The role binding grants a single role to one or more principals (users, groups, or service accounts), plus any context-specific [conditions](#about_iam_conditions) that control whether the binding takes effect.\nFor more information about IAM policies, see [Understanding policies](/iam/docs/policies) .\n### About IAM conditions\nWith [IAM conditions](/iam/docs/conditions-overview) , you can control. access to Cloud Deploy resources and actions based on conditions computed at runtime. For example, you can [restrict promotion](#promote_at_time) to a given target such that it's only allowed during a specified time window.\n### About API attributes\nWhen you construct IAM conditions, you can reference [API attributes](/iam/docs/conditions-attribute-reference#api) to get runtime information about a request. For example, you can use an API attribute to get the name of the resource that the request is for. Then you can compare it to the resource or resources the principal has access to.\n## Grant fine-grained access using advanced IAM features\nThese advanced IAM features allow you to control access to specific resources and to resource types under specific conditions.\nThe procedures in this section grant access to specific resources (targets, delivery pipelines). You can also grant access at the project level, which affects all delivery pipelines or all targets in that project. To set an IAM policy for a project, use the [gcloud projects set-iam-policy](/sdk/gcloud/reference/projects/set-iam-policy) command:\n```\ngcloud projects set-iam-policy PROJECT_ID POLICY_FILE\n```\n### Grant access to a specific delivery pipeline\nYou can grant permissions for a principal to create, modify, and delete all delivery pipelines, by just granting an appropriate [role](/deploy/docs/iam-roles/permissions#predefined_roles) . But sometimes you might want to grant a principal this access for one or more pipelines.\nTo do so, use [role bindings](/iam/docs/policies#structure) to bind the `roles/clouddeploy.developer` role with that principal, then when you apply the policy (with `setIamPolicy` ) you specify which delivery pipeline the access is granted for.\n**Note:** You can grant access to pipelines using the `roles/clouddeploy.operator` role also. Or you can do it by directly adding the applicable [permissions](/deploy/docs/iam-roles-conditions#permissions) (`clouddeploy.deliveryPipelines.*).\nTo grant access to a specific delivery pipeline:\n- [Create a policy file](/iam/docs/policies#structure) with the following binding:```\nbindings:- role: roles/clouddeploy.developer\u00a0 members:\u00a0 - user:fatima@example.com\n```The above example grants the role to a user, but you can also grant the role to a group or to a service account.\n- Call the following command to apply the policy file to a specific delivery pipeline:```\ngcloud deploy delivery-pipelines set-iam-policy --delivery-pipeline=PIPELINE_NAME --region=REGION POLICY_FILE\n```\n### Grant access to configure a specific target\nTo grant a principal access to a specific target, you can use [role bindings](/iam/docs/policies#structure) . To do so, bind the `roles/clouddeploy.operator` role with that principal, then when you apply the policy (with `setIamPolicy` ) you specify which target the access is granted for.\nAccess to the specific target gives the principal the ability to update and to delete that target.\n- [Create a policy file](/iam/docs/policies#structure) with the following binding:```\nbindings:- role: roles/clouddeploy.operator\u00a0 members:\u00a0 - group:cd_operators@example.com\n```The above example grants the role to a group, but you can also grant the role to a user or to a service account.\n- Call the following command to apply the policy file to a specific target:```\ngcloud deploy targets set-iam-policy TARGET --region=REGION POLICY_FILE\n```\n### Grant permissions to promote a release to a specific target\nThis procedure assumes there is already a policy in place that binds the role to the principal. Here, we add a condition that specifies the target:\n- Create a policy file with the following binding:```\nbindings:- role: roles/clouddeploy.operator\u00a0 members:\u00a0 - serviceAccount:prod_operator@project-12345.iam.gserviceaccount.com\u00a0 condition:\u00a0 \u00a0 expression: api.getAttribute(\"clouddeploy.googleapis.com/rolloutTarget\", \"\") == \"prod\"\u00a0 \u00a0 title: Deploy to prod\n```In this role binding, `condition` takes a key:value pair, where the key is `expression` and the value is a [CEL expression](https://opensource.google/projects/cel) . This expression references a set of contextual [attributes](/iam/docs/conditions-attribute-reference) about the request and evaluates to a boolean.In this case, the expression is evaluated, when the principal tries to promote the release, to confirm that the promotion target matches the target in the expression.The expression uses the API attribute `clouddeploy.com/rolloutTarget` , which is the target the principal is trying to promote to. The expression compares it to the target for which the principal is being given promotion access.\n- Set the binding for a specific delivery pipeline:```\ngcloud deploy delivery-pipelines set-iam-policy PIPELINE_NAME --region=REGION POLICY_FILE\n```If you want to set this binding for all delivery pipelines, you can set it at the project level:```\ngcloud projects set-iam-policy PROJECT POLICY_FILE\n```\n### Grant permissions to approve rollouts to a specific target\nThe binding in this section grants a principal permission to approve rollouts for a pipeline, and includes a condition that applies the permission for the `prod` target.\n- Create a policy file with the following binding:```\nbindings:- role: roles/clouddeploy.approver\u00a0 members:\u00a0 - serviceAccount:prod_operator@project-12345.iam.gserviceaccount.com\u00a0 condition:\u00a0 \u00a0 expression: api.getAttribute(\"clouddeploy.googleapis.com/rolloutTarget\", \"\") == \"prod\"\u00a0 \u00a0 title: Deploy to prod\n```In this role binding, `condition` takes a key:value pair, where the key is `expression` and the value is a [CEL expression](https://opensource.google/projects/cel) . The expression references a set of contextual [attributes](/iam/docs/conditions-attribute-reference) about the request and evaluates to a boolean.In this case, the expression is evaluated, when the principal tries to approve the rollout, to confirm that the target matches the target in the expression.The expression uses the API attribute `clouddeploy.com/rolloutTarget` , which is the target of the rollout, and compares it to the target for which the principal is being given approval access. The `clouddeploy.googleapis.com/rolloutTarget` attribute is the only API attribute Cloud Deploy supports.\n- Set the binding for a specific delivery pipeline:```\ngcloud deploy delivery-pipelines set-iam-policy PIPELINE_NAME --region=REGION POLICY_FILE\n```If you want to set this binding for all delivery pipelines, you can set it at the project level:```\ngcloud projects set-iam-policy PROJECT POLICY_FILE\n```\n### Grant permissions to promote a release during a specific time window\nThe binding in this section grants a principal permission to promote releases for a pipeline, and includes a condition that that [specifies the time window](https://cloud.google.com/iam/docs/conditions-attribute-reference#date-time) during which the binding is in effect.\n**Note:** If the principal otherwise has access to promote a release (for example, via membership in a group), this binding does not revoke that access outside of the time window.\n- Create a policy file with the following binding:```\nbindings:- role: roles/clouddeploy.operator\u00a0 members:\u00a0 - serviceAccount:prod_operator@project-12345.iam.gserviceaccount.com\u00a0 condition:\u00a0 \u00a0 expression: request.time.getDayOfWeek(\"America/Los_Angeles\") > 0 && request.time.getDayOfWeek(\"America/Los_Angeles\") < 6\u00a0 \u00a0 title: Promote during safe window\n```In this role binding, `condition` takes a key:value pair, where the key is `expression` and the value is a [CEL expression](https://opensource.google/projects/cel) . The expression references a set of contextual [attributes](/iam/docs/conditions-attribute-reference) about the request and evaluates to a boolean. This expression checks that the request time occurs Monday through Friday.In this case, the expression is evaluated, when the principal tries to promote the release, to confirm that the promotion target matches the target in the expression.\n- Set the binding for a specific delivery pipeline:```\ngcloud deploy delivery-pipelines set-iam-policy PIPELINE_NAME --region=REGION POLICY_FILE\n```If you want to set this binding for all delivery pipelines, you can set it at the project level:```\ngcloud projects set-iam-policy PROJECT POLICY_FILE\n```\n### Grant permissions to approve rollouts during a specific time window\nThe binding in this section grants a principal permission to approve rollouts, and includes a condition that [specifies the time window](https://cloud.google.com/iam/docs/conditions-attribute-reference#date-time) during which the binding is in effect\n**Note:** If the principal otherwise has access to approve rollouts (for example, via membership in a group), this binding does not revoke that access outside of the time window.\n- Create a policy file with the following binding:```\nbindings:- role: roles/clouddeploy.approver\u00a0 members:\u00a0 - serviceAccount:prod_operator@project-12345.iam.gserviceaccount.com\u00a0 condition:\u00a0 \u00a0 expression: request.time.getDayOfWeek(\"America/Los_Angeles\") > 0 && request.time.getDayOfWeek(\"America/Los_Angeles\") < 6\u00a0 \u00a0 title: Approve during safe window\n```In this role binding, `condition` takes a key:value pair, where the key is `expression` and the value is a [CEL expression](https://opensource.google/projects/cel) that references a set of contextual [attributes](/iam/docs/conditions-attribute-reference) about the request and evaluates to a boolean. This expression checks that the request time occurs Monday through Friday.In this case, the expression is evaluated, when the principal tries to approve the rollout, to confirm that the rollout target matches the target in the expression.\n- Set the binding for a specific delivery pipeline:```\ngcloud deploy delivery-pipelines set-iam-policy PIPELINE_NAME --region=REGION POLICY_FILE\n```If you want to set this binding for all delivery pipelines, you can set it at the project level:```\ngcloud projects set-iam-policy PROJECT POLICY_FILE\n```\n### Grant permissions to retry a job, based on job type\nThe binding in this section grants a principal permission to retry a Cloud Deploy job, based on the type of job\n- Create a policy file with the following binding:```\nbindings:- role: roles/clouddeploy.operator\u00a0 members:\u00a0 - serviceAccount:prod_operator@project-12345.iam.gserviceaccount.com\u00a0 condition:\u00a0 \u00a0 expression: api.getAttribute(\"clouddeploy.googleapis.com/jobType\", \"\") == \"deploy\"\u00a0 \u00a0 title: Retry deploy job\n```In this role binding, `condition` takes a key:value pair, where the key is `expression` and the value is a [CEL expression](https://opensource.google/projects/cel) . The expression references a set of contextual [attributes](/iam/docs/conditions-attribute-reference) about the request and evaluates to a boolean.In this case, the expression is evaluated, when the principal tries to retry the job, to confirm that the job types matches the job type in the expression.The expression uses the API attribute `clouddeploy.com/jobType` , which can be either `deploy` or `verify` .\n- Set the binding for a specific delivery pipeline:```\ngcloud deploy delivery-pipelines set-iam-policy PIPELINE_NAME --region=REGION POLICY_FILE\n```If you want to set this binding for all delivery pipelines, you can set it at the project level:```\ngcloud projects set-iam-policy PROJECT POLICY_FILE\n```", "guide": "Cloud Deploy"}