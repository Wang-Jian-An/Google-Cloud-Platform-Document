{"title": "Cloud Deploy - Cloud Deploy service accounts", "url": "https://cloud.google.com/deploy/docs/cloud-deploy-service-account", "abstract": "# Cloud Deploy - Cloud Deploy service accounts\nThis document describes service accounts that are used to run Cloud Deploy and to call Cloud Deploy to run various operations.\nCloud Deploy uses two service accounts:\n- The Cloud Deploy [service agent](/iam/docs/service-agents) Cloud Deploy uses this service account to interact with your project. You can't replace this service agent with an alternate service account, but you can edit permissions on it, for example when you're using resources outside of the project (such as a service account or a private Cloud Build worker pool).\n- The Cloud Deploy execution service accountCloud Deploy uses this service account to execute render and deploy operations in Cloud Build. This account needs permissions sufficient to read from and write to the Cloud Storage bucket and to access deployment targets.The default service account for execution is the [default Compute Engine service account](/deploy/docs/cloud-deploy-service-account#default_service_account) . You can specify an alternate service account in the [target configuration](/deploy/docs/config-files#target_definitions) .\n- The Cloud Deploy automation service accountThis is the service account Cloud Deploy uses to perform [automations](/deploy/docs/automation) . This can be the default execution service account or another service account. See [The automation service account](/deploy/docs/automation-resource#automation_service_account) For more information about this service account.\nSee [Creating and managing service accounts](/iam/docs/creating-managing-service-accounts) for instructions on how to edit service-account permissions and how to create an alternate service account.\n", "content": "## Cloud Deploy service agent\nThe Cloud Deploy service agent is a service account that Cloud Deploy uses to interact with other Google Cloud services Cloud Deploy relies on. These services include Cloud Build, Pub/Sub, and Cloud Audit Logs.\nThe name of this service account follows this pattern:\n`service-<project-number>@gcp-sa-clouddeploy.iam.gserviceaccount.com`\nYou can't replace the service agent with an alternate service account. But you might need to add permissions, for example to allow access to a private pool in another project, configured as part of an [execution environment](/deploy/docs/execution-environment) .\n## Cloud Deploy execution service account\nBy default, Cloud Deploy runs using the [default Compute Engineservice account](/iam/docs/service-account-types#default) . That service account has sufficient permissions in the project that contains it to render manifests and deploy to your targets.\nThe name of this service account follows this pattern:\n`[project-number]-compute@developer.gserviceaccount.com`\nThis default service account has broad permissions. The best practice is to change your [execution environment](/deploy/docs/execution-environment) so that Cloud Deploy runs as a different service account. You can change the execution service account for each [target](/deploy/docs/config-files#target_definitions) using the `executionConfigs.privatePool.serviceAccount` property or the `executionConfigs.defaultPool.serviceAccount` property in the [target definition](/deploy/docs/config-files#target_definitions) .\nAny service account you set for these properties must have the `roles/clouddeploy.jobRunner` role in the Cloud Deploy project. If the default execution service account doesn't have this permission, run the following command:\n```\n\u00a0gcloud projects add-iam-policy-binding PROJECT_ID \\\u00a0 \u00a0 \u00a0--member=serviceAccount:$(gcloud projects describe PROJECT_ID \\\u00a0 \u00a0 \u00a0--format=\"value(projectNumber)\")-compute@developer.gserviceaccount.com \\\u00a0 \u00a0 \u00a0--role=\"roles/clouddeploy.jobRunner\"\n```\n### What service accounts to create\nIf you choose not to use the default execution service account for rendering and deploying, you need to create one or more alternate service accounts to use. These are service accounts that Cloud Deploy runs as, and they're [configured in the target configuration](/deploy/docs/config-files#target_definitions) .\nOne reason to create more than one would be to have a specific service account or accounts for deploying to restricted targets, like a production target.\nOne possible approach is to use separate service accounts per delivery pipeline. Each such service account would include roles with sufficient permissions to render and to deploy.\nFor deployments to Google Kubernetes Engine, you can [restrict the service account to one namespace](/deploy/docs/securing/sa-by-namespace) .\n### Using service accounts from a different project\nFor your [execution environment](/deploy/docs/execution-environment) , you can specify a service account that's in a different project from the one in which you create your target:\n- On the project that owns the service account, [enable the cross-project SAorganization policy](https://cloud.google.com//iam/docs/attach-service-accounts#enabling-cross-project) .\n- Grant the Cloud Deploy [service agent](#service_agent) ( `service-<project-number>@gcp-sa-clouddeploy.iam.gserviceaccount.com` ) the `iam.serviceAccounts.actAs` permission for your service account.In this case, `project-number` is the project in which you created your target.You can also grant the [roles/iam.serviceAccountUser](/iam/docs/understanding-roles#service-accounts-roles) role, which includes that permission, in the project of and on each service account that's in a different project from the one where Cloud Deploy is running.\n- Grant the Cloud Build service agent ( `service-<project-number>@gcp-sa-cloudbuild.iam.gserviceaccount.com` ) the `roles/iam.serviceAccountTokenCreator` role.In this case, `project-number` is the project in which you created your target, and this role is granted in the service account's project.You must grant this role for each service account configured in a target's execution environment if that service account is in a different project from the one where Cloud Deploy is running.\n- Grant the caller of `gcloud deploy releases create` and `gcloud deploy rollouts create` `iam.serviceAccounts.actAs` permission on the service account, or the `[roles/iam.serviceAccountUser](/iam/docs/understanding-roles#service-accounts-roles)` role.\n### Required permissions\n- The service account used for rendering configurations must have sufficient permissions to access the Cloud Storage bucket where your Cloud Deploy resources are stored (delivery pipelines, releases, rollouts).The role `roles/clouddeploy.jobRunner` includes all permissions the render service account ( [privatePool or defaultPool](/deploy/docs/config-files#target_definitions) ) needs.\n- The service account used for deploying must have sufficient permissions to deploy to the target cluster, permission to access the Cloud Storage bucket. **Note:** If you use a custom Cloud Storage bucket, you can put it anywhere. (It doesn't need to be in the same region, for example, as the delivery pipeline.)\n- The service account that calls Cloud Deploy to create a release must have the `clouddeploy.releaser` role. It must also have the `iam.serviceAccount.actAs` permission to use the service account that renders manifests (for example through the [roles/iam.serviceAccountUser](/iam/docs/understanding-roles#service-accounts-roles) role).\n- The service account that calls Cloud Deploy to promote a release or create a `rollout` must have the `iam.serviceAccount.actAs` permission to use the service account that deploys to targets (for example through the [roles/iam.serviceAccountUser](/iam/docs/understanding-roles#service-accounts-roles) role).\n- The service account configured for an [automation](/deploy/docs/automation) must have permission to run the operations that are being automated. [Learn more](/deploy/docs/automation-resource#automation_service_account) .## The automation service account\nYou can automate some actions in a release. Cloud Deploy runs these automations using the automation service account, which can be the default execution service account, a non-default service account used as the execution service account, or another service account.\nThis service account is described in the section [The automation service account](/deploy/docs/automation-resource#automation_service_account) .\n## What's next\n- Learn about [IAM](/iam/docs) .\n- Find out about [predefined Cloud Deploy roles](/deploy/docs/iam-roles-permissions#predefined_roles) .\n- Understand how to [Create and manage service accounts](/iam/docs/creating-managing-service-accounts) .", "guide": "Cloud Deploy"}