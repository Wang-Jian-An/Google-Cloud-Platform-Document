{"title": "Apigee - Step 5: Create TLS certificates", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 5: Create TLS certificates\nYou are currently viewing version 1.8 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis step explains how to create the TLS credentials that are required for Apigee hybrid to operate.\n", "content": "## \n Create TLS certificates\nYou are required to provide TLS certificates for the runtime ingress gateway in your Apigee hybrid configuration. For the purpose of this quickstart (a non-production trial installation), the runtime gateway can accept self-signed credentials. In the following steps, [openssl](https://www.openssl.org/) is used to generate the self-signed credentials.\n**Note:** In a production environment, you will need to use signed certificates. You can either use either a certificate and key pair or a Kubernetes secret. For an example on how to obtain a TLS certificate from thecertificate authority (CA), see [Obtain TLS credentials: An example](/apigee/docs/hybrid/v1.8/lets-encrypt) .\nIn this step, you will create the TLS credential files and add them to the `$HYBRID_FILES/certs` directory. In [Step 6: Configure the hybrid runtime](/apigee/docs/hybrid/v1.8/install-configure-cluster) , you will add the file paths to the cluster configuration file.\n- Execute the following command to create the credential files and store them in your`$HYBRID_FILES/certs`directory:```\nopenssl req -nodes -new -x509 -keyout $HYBRID_FILES/certs/keystore_ENV_GROUP_NAME.key -out \\\n $HYBRID_FILES/certs/keystore_ENV_GROUP_NAME.pem -subj '/CN='DOMAIN'' -days 3650\n```Where:- is the domain you provided as the hostname for the environment  group you created in [Create an environment group](/apigee/docs/hybrid/v1.8/precog-add-environment#create-an-environment-group) .\n- is the name of the environment group where the domain is specified  as a hostname. It's a good practice to include the environment group name in the key and keystore  name to avoid accidentally reusing the same domain value if you create keys for multiple environment groups.\nThis command creates a self-signed certificate/key pair that you can use for the quickstart  installation.If you have additional environment groups with unique domain names, just repeat this step  for each one. You will reference these groups and certificates in the cluster configuration  step.\n- Check to make sure the files are in the`$HYBRID_FILES/certs`directory using the following command:```\nls $HYBRID_FILES/certs\n``````\n\u00a0keystore_ENV_GROUP_NAME.key\u00a0keystore_ENV_GROUP_NAME.pem\n```Where `keystore_` `` `.pem` is the self-signed TLS certificate file and `keystore_` `` `.key` is the key file.\nYou now have the credentials needed to manage Apigee hybrid in your Kubernetes cluster. Next, you will create a file that is used by Kubernetes to deploy the hybrid runtime components to the cluster.\n## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled [1](/apigee/docs/hybrid/v1.8/install-create-cluster) If the button's step matches the current step in the process, make the button disabled [2](/apigee/docs/hybrid/v1.8/install-cert-manager) If the button's step matches the current step in the process, make the button disabled [3](/apigee/docs/hybrid/v1.8/install-apigeectl) If the button's step matches the current step in the process, make the button disabled [4](/apigee/docs/hybrid/v1.8/install-service-accounts) If the button's step matches the current step in the process, make the button disabled If the button's step matches the next step [5](/apigee/docs/hybrid/v1.8/install-create-tls-certificates) If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 6: Configure the hybrid runtime](/apigee/docs/hybrid/v1.8/install-configure-cluster) If the button's step matches the current step in the process, make the button disabled [7](/apigee/docs/hybrid/v1.8/install-enable-synchronizer-access) If the button's step matches the current step in the process, make the button disabled [8](/apigee/docs/hybrid/v1.8/install-hybrid-runtime) If the button's step matches the current step in the process, make the button disabled [9](/apigee/docs/hybrid/v1.8/install-expose-apigee-ingress) If the button's step matches the current step in the process, make the button disabled [10](/apigee/docs/hybrid/v1.8/install-deploy-proxy)", "guide": "Apigee"}