{"title": "Compute Engine - Troubleshooting VM Manager", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Troubleshooting VM Manager\nThis document describes how to troubleshoot issues with VM Manager.\nFor more information about VM Manager, see [VM Manager](/compute/docs/vm-manager) .\n", "content": "## Before you begin\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\nTo use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```## Overview\nTo troubleshoot issues, first verify that VM Manager [is set up properly](/compute/docs/troubleshooting/vm-manager/verify-setup) . If the setup is correct and you have still have issues, you can then review logs. When you review logs, you can identify issues with your VM or in your VM Manager workflow, such as errors in commands or scripts, that you can isolate and resolve.\nYou can collect the following information from logs:\n- Any error message or warning logged by the VM. This is ideal for identifying VM-level errors, or errors from other services running on your VM. To review these logs, see [Inspect Cloud Logging](#all-logs) .\n- Verbose debug information logged by the OS Config agent. This is useful for identifying issues with any of the operations run by VM Manager. To inspect debug logs for the OS Config agent, see [Inspect debug logs](#debug-logs) .\nAfter identifying the issues or errors, you can also review the [common errors](#common-errors) section to see potential fixes.\n## Inspect Cloud Logging\nYou can use the Google Cloud console quick links for each feature to view logs for a specific VM.\n- In the Google Cloud console, go to the **Patch Jobs** tab on the **OS patch management** page. [    Go to Patch Jobs](https://console.cloud.google.com/compute/patch/jobs) \n- Click the name of the patch job that you want to debug.\n- Scroll-down to **Updated VM instances** .\n- For a specific VM, under **Logs** , click **View** .\nThis procedure is supported for OS configuration management (preview).  For OS configuration management (beta), use the debug logs option,  in the following section.- In the Google Cloud console, go to the **VM instances** tab on the **OS configuration management** page. [    Go to VM instances](https://console.cloud.google.com/compute/config/assignments/instances) \n- Click the name of the VM that you want to debug.\n- Scroll-down to **Policies** .\n- Under **Logs** , click **View** .## Inspect debug logs\nYou can identify issues with any VM Manager feature by enabling debugging for the OS Config agent and viewing debug log.\n### Enable debug logging for the OS Config agent\nYou can enable debug logging by setting the `osconfig-log-level=debug` metadata on the VM instance or project.\nTo enable debug logging on your VM, complete the following steps:\n- In the Google Cloud console, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- Click the name of the VM for which you want to set the metadata value.\n- On the **Instance details** page, click **Edit** to edit the settings.\n- Under **Custom metadata** , add the following metadata entries:Key: `osconfig-log-level` Value: `debug`\n- Click **Save** to apply your changes to the VM.\nUse the [instances add-metadata command](/sdk/gcloud/reference/compute/instances/add-metadata) with the `--metadata=osconfig-log-level=debug` flag.\n```\ngcloud compute instances add-metadata VM_NAME \\\n --metadata=osconfig-log-level=debug\n```\nReplace `` with the name of your VM.\nFor instructions on setting instance metadata, follow the API instructions for [setting instance metadata](/compute/docs/storing-retrieving-metadata#updatinginstancemetadata) .\nThe following key-value pair is required as part of the metadata property:\nKey: `osconfig-log-level` Value: `debug`\n### View debug logs\nWhen debug logging is enabled, the OS Config agent writes log entries to Cloud Logging and the serial port console.\nAfter you enable debug logging on your VM, it takes the OS Config agent approximately ten minutes to start writing debug messages in Cloud Logging. You can reduce this wait time by restarting the agent or rebooting your VM. For more information about Cloud Logging, see [Viewing Cloud Logging logs](/logging/docs/write-query-log-entries-gcloud#explore) .\nTo view debug logs you can use the following options:\n- Cloud Logging: use the Google Cloud console or Google Cloud CLI\n- Serial port console\n- Go to the **Logging > Logs Explorer** (Logs Explorer) page in the Google Cloud console: [Go to Logs Explorer](https://console.cloud.google.com/logs/query) \n- If needed, select an existing Google Cloud project at the top of the page, or create a new project.\n- In the **Resource** drop-down list, select **VM Instance** . A list of available VMs ( `instance_id` ) displays.\n- Click on the VM that you want to view.\n- Click **Add** .\n- In the **Log name** drop-down list, select **OSConfigAgent** .\n- Click **Add** .\n- Your query should be similar to the following:```\nresource.type=\"gce_instance\" resource.labels.instance_id=\"136126869923081757\"\nlogName=\"projects/my-vm-manager-project/logs/OSConfigAgent\"\n```\n- Click **Run query** .\nRun the [gcloud logging read command](/sdk/gcloud/reference/logging/read) .\n```\n gcloud logging read \"resource.type=gce_instance AND logName=projects/PROJECT_ID/logs/OSConfigAgent\"\n \n```\nReplace `` with your project ID.\nTo view debug log information from the serial port console, see [Viewing serial port output](/compute/docs/instances/viewing-serial-port-output#viewing_serial_port_output) .\n## Common errors\n### Authentication issues\nFor VM Manager to work, you must have the following:\n- An attached service account. VM Manager uses this service account to sign requests to the API service.\n- Make sure that the attached service account has the [roles/logging.logWriter](/iam/docs/understanding-roles?hl=en#logging-roles) role to write logs to the Logging API.\n- [Google Cloud OS Config Service Agent](/compute/docs/vm-manager#service-agent) . VM Manager creates this service agent when starting patch jobs and gives it the Cloud OS Config Service Agent role. To create OS policies, you need not configure this service agent.\nIf you use VM Manager and you don't have an attached service account, or a Google Cloud OS Config Service Agent, you might see the following errors while working with patch jobs:\n```\nService account permissions are missing. Verify that the service account has the correct permissions and try again.\n```\n```\nOSConfigAgent Error main.go:88: error getting token from metadata: metadata: GCE metadata \"instance/service-accounts/default/identity?audience=osconfig.googleapis.com&format=full\" not defined\n```\n```\nmessage: \"Error running OPERATION_NAME: error calling OPERATION_NAME: code: \"PermissionDenied\", message: \"The caller does not have permission\", details: []\"\n```\nAuthentication issues might also prevent VM instances from showing up on the [Patch dashboard](/compute/docs/os-patch-management#dashboard) .\nTo resolve these issues, try one or all of the following:\n- Verify that all VMs have an [attached service account](/iam/docs/attach-service-accounts#attaching-to-resources) .\n- Ensure that the Cloud OS Config Service Agent role ( `roles/osconfig.serviceAgent` ) is set on the Google Cloud OS Config Service Agent.```\ngcloud projects add-iam-policy-binding PROJECT_ID \\\n --member='serviceAccount:service-PROJECT_NUMBER@gcp-sa-osconfig.iam.gserviceaccount.com' \\\n --role='roles/osconfig.serviceAgent'\n```Replace the following:- ``: your project ID\n- ``: your [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) \n### Error when excluding packages for patch updates\nIf you specify wildcards or special characters for the name of packages when excluding packages in a patch job, OS patch management might ignore the list and update all packages.\nTo resolve this issue, [update the OS Config agent](/compute/docs/manage-os/upgrade-vm-manager#update-agent) to version `20220829.00` and use forward slashes ( `/` ) to wrap the package name.\nIn the following example, OS patch management excludes `yum` packages with prefix `google-` in the package name.\n```\n  gcloud compute os-config patch-jobs execute --instance-filter-all\n  --yum-excludes=/google-.*/\n \n```\n## What's next?\n- [Manage your patch jobs](/compute/docs/os-patch-management/manage-patch-jobs) .\n- [Manage OS policy assignments](/compute/docs/os-configuration-management/manage-os-policy) .", "guide": "Compute Engine"}