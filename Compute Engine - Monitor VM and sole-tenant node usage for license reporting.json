{"title": "Compute Engine - Monitor VM and sole-tenant node usage for license reporting", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Monitor VM and sole-tenant node usage for license reporting\nIf you bring your own licenses for operating systems such as Windows Server, contractual obligations might require you to monitor and report how many VM instances, physical servers, and physical CPU cores you're using these licenses on.\nThis article describes how you can use the open-source tool License Tracker to monitor the number of VM instances, physical servers, and physical CPU cores you're using, and how you can visualize the results by using Looker Studio.\nThe License Tracker tool works by analyzing Compute Engine audit logs to determine for each VM instance. A placement describes the time period during which a VM instance is running on a specific physical server. Each time a VM is migrated from one physical server to another marks the end of one placement and starts another.\nAs an example, consider a VM instance that is started and, several months later, stopped again. At some point during its runtime, the VM is automatically migrated from `Server 1` to `Server 2` and later back to `Server 1` again. This history corresponds to 3 placements:\nWhen you run the License Tracker tool the first time, it analyzes Compute Engine usage of the past 90 days and writes its result to BigQuery. On subsequent runs, the tool analyzes the delta between the last run and the current day, and updates the BigQuery dataset accordingly.\nThe License Tracker tool replaces the usage reporting feature provided by [IAP Desktop](https://github.com/GoogleCloudPlatform/iap-desktop/releases/latest) .\n**Important:** The License Tracker tool is a Google-developed and community-supported open source project that is hosted in the [GoogleCloudPlatform/gce-license-tracker](https://github.com/GoogleCloudPlatform/gce-license-tracker) repo on GitHub. The tool is governed solely by the [Apache License 2.0](https://github.com/GoogleCloudPlatform/gce-license-tracker/blob/master/LICENSE.txt) and not by any other terms or conditions. It is distributed as is, without warranties of any kind.\n", "content": "## Costs\nThis guide uses billable components of Google Cloud, including:\n- [Cloud Run](/run/pricing) \n- [BigQuery](/vpc/pricing) \nUse the [pricing calculator](/products/calculator) to generate a cost estimate based on your projected usage.\n## Deploy the License Tracker tool\nThis section describes how to set up Cloud Run and Cloud Scheduler to automatically run the License Tracker tool once a day.\nThe following diagram illustrates the solution described in this article:\n- The License Tracker tool is deployed on Cloud Run and configured to analyze the logs of one or more projects.\n- Once a day, Cloud Scheduler triggers the Cloud Run job, causing the License Tracker tool to update a BigQuery dataset.\n- A Looker Studio dashboard visualizes the data from BigQuery and makes it available to users.### Create a project\nTo set up Cloud Run and Cloud Scheduler, create a new project:\n### Deploy the application\nYou now deploy the License Tracker tool to Cloud Run:\n- In the Google Cloud console, open [Cloud Shell](/shell/docs/starting-cloud-shell) by clicking the **Activate Cloud Shell** button. [Go to the Google Cloud console](https://console.cloud.google.com/) \n- Set an environment variable to contain your [project ID](/resource-manager/docs/creating-managing-projects) :```\ngcloud config set project PROJECT_ID\n```Replace with the ID of your project.\n- Set the Cloud Run region to deploy to:```\ngcloud config set run/region REGION\n```Replace with a region that [supports Cloud Run andCloud Scheduler](/about/locations#products-available-by-location) .\n- Create a service account for the tool:```\nSERVICE_ACCOUNT=$(gcloud iam service-accounts create license-tracker \\\n --display-name \"License Tracker\" \\\n --format \"value(email)\")\n```\n- Allow the service to create and access a BigQuery dataset and to start Cloud Run jobs in the same project:```\ngcloud projects add-iam-policy-binding $(gcloud config get-value core/project) \\\n --member \"serviceAccount:$SERVICE_ACCOUNT\" \\\n --role \"roles/bigquery.admin\"\ngcloud projects add-iam-policy-binding $(gcloud config get-value core/project) \\\n --member \"serviceAccount:$SERVICE_ACCOUNT\" \\\n --role \"roles/run.invoker\"\n```\n- Allow Cloud Build [to perform Cloud Run deployments](/build/docs/deploying-builds/deploy-cloud-run#continuous-iam) and manage Cloud Scheduler jobs:```\nPROJECT_NUMBER=$(gcloud projects describe $(gcloud config get-value core/project) --format='value(projectNumber)') \\\ngcloud iam service-accounts add-iam-policy-binding $SERVICE_ACCOUNT \\\n --member \"serviceAccount:$PROJECT_NUMBER@cloudbuild.gserviceaccount.com\" \\\n --role \"roles/iam.serviceAccountUser\"\ngcloud projects add-iam-policy-binding $(gcloud config get-value core/project) \\\n --member \"serviceAccount:$PROJECT_NUMBER@cloudbuild.gserviceaccount.com\" \\\n --role \"roles/run.developer\"\ngcloud projects add-iam-policy-binding $(gcloud config get-value core/project) \\\n --member \"serviceAccount:$PROJECT_NUMBER@cloudbuild.gserviceaccount.com\" \\\n --role \"roles/cloudscheduler.admin\"\n```\n- Clone the [GitHub repository](https://github.com/GoogleCloudPlatform/gce-license-tracker) and switch to the `latest` branch:```\ngit clone https://github.com/GoogleCloudPlatform/gce-license-tracker.git\ncd gce-license-tracker\ngit checkout latest\n```\n- Submit a build to Cloud Build:```\ngcloud builds submit . --substitutions=_REGION=$(gcloud config get-value run/region)\n```The build deploys the License Tracker application to Cloud Run and configures Cloud Scheduler to trigger the job once a day.The build takes about 3 minutes to complete.\n### Select projects to analyze\nThe License Tracker tool analyzes all Google Cloud projects for which all of the following conditions apply:\n- The Compute Engine API is enabled.\n- The project grants(`roles/compute.viewer`) and(`roles/logging.viewer`) access to the tool's service account.\nTo include a project, folder, or an entire organization in the analysis, do the following:\n```\nSCOPE_ID=RESOURCE_PROJECT_ID\nSCOPE_TYPE=projects\ngcloud projects add-iam-policy-binding $SCOPE_ID \\\n --member \"serviceAccount:$SERVICE_ACCOUNT\" \\\n --role \"roles/compute.viewer\" \\\n --condition None\ngcloud projects add-iam-policy-binding $SCOPE_ID \\\n --member \"serviceAccount:$SERVICE_ACCOUNT\" \\\n --role \"roles/logging.viewer\" \\\n --condition None\n```\nReplace with the ID of the Google Cloud project that you want the License Tracker tool to analyze.\n```\nSCOPE_ID=RESOURCE_FOLDER_ID\nSCOPE_TYPE=folders\ngcloud resource-manager folders add-iam-policy-binding $SCOPE_ID \\\n --member \"serviceAccount:$SERVICE_ACCOUNT\" \\\n --role \"roles/compute.viewer\" \\\n --condition None\ngcloud resource-manager folders add-iam-policy-binding $SCOPE_ID \\\n --member \"serviceAccount:$SERVICE_ACCOUNT\" \\\n --role \"roles/logging.viewer\" \\\n --condition None\n```\nReplace with the ID of the folder that contains the projects that you want the License Tracker tool to analyze.\n```\nSCOPE_ID=ORGANIZATION_ID\nSCOPE_TYPE=organizations\ngcloud organizations add-iam-policy-binding $SCOPE_ID \\\n --member \"serviceAccount:$SERVICE_ACCOUNT\" \\\n --role \"roles/compute.viewer\" \\\n --condition None\ngcloud organizations add-iam-policy-binding $SCOPE_ID \\\n --member \"serviceAccount:$SERVICE_ACCOUNT\" \\\n --role \"roles/logging.viewer\" \\\n --condition None\n```\nReplace with the [ID of your organization](/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id) .\n**Note:** If one of the projects you want to analyze uses VPC service controls, then the License Tracker tool might not be allowed to access resources in this project. To grant the License Tracker tool access, include its project in the same perimeter or configure an appropriate [ingress policy](/vpc-service-controls/docs/ingress-egress-rules) .\n### Start the initial analysis\nYou can now start an initial analysis:\n- In the Google Cloud console, go to **Cloud Run\u00a0> Jobs** . [Go to Cloud Run jobs](https://console.cloud.google.com/run/jobs/) \n- Select the **license-tracker** job to open the job details.\n- Click **Execute** .Depending on the number and size of projects that you selected, the initial analysis might take several hours to complete.When the job completes, your project contains a BigQuery dataset named `license_usage` .\n- Optionally, view logs in Cloud Logging: [Go to Logging](https://console.cloud.google.com/logs/query;query=resource.labels.job_name%3D%22license-tracker%22) ## Create a dashboard\nYou now create a Looker Studio dashboard by creating a copy of a sample dashboard:\n- Copy the dashboard's data sources:- [Nodes](https://lookerstudio.google.com/datasources/45f5aff8-3fb7-45c2-a232-37e4883ac8f4) \n- [Licensed nodes](https://lookerstudio.google.com/datasources/3ab0e73a-d008-4948-aeaa-015ee0c0e263) \n- [Nodes histogram](https://lookerstudio.google.com/datasources/42fe310d-f9a9-483e-8537-e9b89001a9f3) \n- [Instances histogram](https://lookerstudio.google.com/datasources/ecf4b4dd-94f4-4038-bd72-38369f2e9509) \nFor each of the data source, do the following:- Click the link above to open the data source.\n- Click **Make a copy of this data source** .\n- Click **Copy data source** .\n- If you're promoted to connect the dashboard to BigQuery, click **Authorize** .\n- Optionally, click the header and rename the datasource.\n- In the list of billing projects, select the project that you used to deploy the License Tracker tool.\n- Click **Reconnect** .\n- In the **Apply connection changes** dialog box, select **Apply** .\n- Copy the dashboard:- Open the [sample dashboard](https://lookerstudio.google.com/reporting/ba0a1f0c-2e4c-4021-86cf-0cba52a5bfb5) .The dashboard isn't connected to a datasource, so it doesn't show any data.\n- Click **\u2026 > Make a copy** \n- In the **Copy this report** dialog, select your copies of the data sources:\n- Click **Copy report** .The dashboard now shows the data from your BigQuery dataset.\n### Grant other users access to the dashboard\nThe dashboard's data sources are configured to use [the viewer's credentials](https://support.google.com/looker-studio/answer/6371135#zippy=%2Cin-this-article%2Cviewers-credentials) to access BigQuery. To grant another user access to the dashboard, you must:\n- [Share the dashboard](https://support.google.com/looker-studio/answer/7459147) and grant the user permission to view the report.\n- Grant the(`roles/bigquery.dataViewer`) and(`roles/bigquery.jobUser`) roles to the user. You can grant these roles [at the dataset or project level](/bigquery/docs/access-control#dataset_level) .\n### Customize the dashboard\nYou can customize the dashboard by [using the Looker Studio report editor](https://support.google.com/looker-studio/answer/9207624) to modify existing charts or to add additional charts.\nAll charts in the sample dashboard are based on the `placements` view in the BigQuery dataset. This view contains all placements across all projects and uses the following schema:\nYou can use the `placement` view when customizing existing charts or adding your own charts to the dashboard.\n## Upgrade the License Tracker tool\nThis section describes how you can upgrade an existing deployment of the License Tracker tool to use a newer version of the application, or to use a different configuration.\n- In the Google Cloud console, open [Cloud Shell](/shell/docs/starting-cloud-shell) by clicking the **Activate Cloud Shell** button. [Go to the Google Cloud console](https://console.cloud.google.com/) \n- Set an environment variable to contain your [project ID](/resource-manager/docs/creating-managing-projects) :```\ngcloud config set project PROJECT_ID\n```Replace with the ID of the project that contains your existing deployment.\n- Select the Cloud Run region of your existing deployment:```\ngcloud config set run/region REGION\n```\n- Clone the [GitHub repository](https://github.com/GoogleCloudPlatform/gce-license-tracker) and switch to the `latest` branch:```\ngit clone https://github.com/GoogleCloudPlatform/gce-license-tracker.git\ncd gce-license-tracker\ngit checkout latest\n```\n- Submit a build to Cloud Build:```\ngcloud builds submit . --substitutions=_REGION=$(gcloud config get-value run/region)\n```The build updates your existing deployment and takes about 3 minutes to complete.", "guide": "Compute Engine"}