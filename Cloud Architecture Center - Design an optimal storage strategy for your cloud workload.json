{"title": "Cloud Architecture Center - Design an optimal storage strategy for your cloud workload", "url": "https://cloud.google.com/architecture/reference-patterns/overview", "abstract": "# Cloud Architecture Center - Design an optimal storage strategy for your cloud workload\nLast reviewed 2024-03-14 UTC\nThis guide helps you assess the storage requirements of your cloud workload, understand the available storage options in Google Cloud, and design a storage strategy that provides optimal business value.\nFor a visual summary of the main design recommendations, see the [decision tree diagram](#decision_tree) .\nIf you've read this document previously and need a summary of the changes, see the [change log](#change-log) .\n", "content": "## Overview of the design process\nAs a cloud architect, when you plan storage for a cloud workload, you need to first consider the functional characteristics of the workload, security constraints, resilience requirements, performance expectations, and cost goals. Next, you need to review the available storage services and features in Google Cloud. Then, based on your requirements and the available options, you select the storage services and features that you need.\nThe following diagram shows this 3-phase design process:\n**Note:** The design process can be iterative. When reviewing or selecting storage options, you might discover features that could improve your application's behavior and decide to adjust your requirements to take advantage of those features.\n## Define your requirements\nUse the questionnaires in this section to define the key storage requirements of the workload that you want to deploy in Google Cloud.\n### Guidelines for defining storage requirements\nWhen answering the questionnaires, consider the following guidelines:\n- **Define requirements granularly** For example, if your application needs Network File System (NFS)-based file storage, identify the required NFS version.\n- **Consider future requirements** For example, your current deployment might serve users in countries within Asia, but you might plan to expand the business to other continents. In this case, consider any storage-related regulatory requirements of the new business territories.\n- **Consider cloud-specific opportunities and requirements** - Take advantage of cloud-specific opportunities.For example, to optimize the storage cost for data stored in Cloud Storage, you can control the storage duration by using data retention policies and lifecycle configurations.\n- Consider cloud-specific requirements.For example, the on-premises data might exist in a single data center, and you might need to replicate the migrated data across two Google Cloud locations for redundancy.\n### Questionnaires\nThe questionnaires that follow are not exhaustive checklists for planning. Use them as a starting point to systematically analyze all the storage requirements of the workload that you want to deploy to Google Cloud.- What kind of data do you need to store?\n- How much capacity do you need? Consider your current and future requirements.\n- Should capacity scale automatically with usage?\n- What are the access requirements? For example, should the data be accessible from outside Google Cloud?\n- What are the expected read-write patterns?\n- Does the workload need file-based access, using NFS for example?\n- Should multiple clients be able to read or write data simultaneously?- What are your data-encryption requirements? For example, do you need to use keys that you control?\n- Are there any data-residency requirements?- Does your workload need low-latency caching or scratch space?\n- Do you need to replicate the data in the cloud for redundancy?\n- Do you need strict read-write consistency for replicated datasets?- What is the required I/O rate?\n- What levels of read and write throughput does your application need?\n- What environments do you need storage for? For a given workload, you might need high-performance storage for the production environment, but could choose a lower-performance option for the non-production environments.## Review the storage options\nGoogle Cloud offers storage services for all the key storage formats: block, file, and object. Review and evaluate the features, design options, and relative advantages of the services available for each storage format.\n### Overview\nThe data that you store in block storage is divided into chunks, each   stored as a separate with a unique address. Applications   access data by referencing the appropriate block addresses. Block   storage is optimized for high-IOPS workloads, such as transaction   processing. It's similar to on-premises storage area network (SAN) and   directly attached storage (DAS) systems.\nThe block storage options in Google Cloud are a part of the   Compute Engine service.\n| Option     | Overview                                            |\n|:-----------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Persistent Disk  | Dedicated hard-disk drives (HDD) and solid-state drives (SSD) for enterprise and database applications deployed to Compute Engine VMs and Google Kubernetes Engine (GKE) clusters. |\n| nan     | nan                                             |\n| Google Cloud Hyperdisk | Fast and redundant network storage for Compute Engine VMs, with configurable performance and volumes that can be dynamically resized.            |\n| Local SSD    | Ephemeral, locally attached block storage for high-performance applications.                          |Data is organized and represented in a hierarchy of that   are stored in folders, similar to on-premises network-attached storage   (NAS). File systems can be mounted on clients using protocols such as   NFS and Server Message Block (SMB). Applications access data using the   relevant filename and directory path.\nGoogle Cloud provides a range of fully managed and third-party   solutions for file storage.\n| Solution     | Overview                                          |\n|:----------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Google Cloud Filestore  | NFSv3 file servers for Compute Engine VMs and Google Kubernetes Engine clusters. You can choose a service tier (Basic, High Scale, or Enterprise) that suits your use case. |\n| Google Cloud NetApp Volumes | File-based storage using NFSv3, NFSv4.1, or SMB.                                |\n| More options    | See Summary of file server options.                                   |Data is stored as in a flat hierarchy of .   Each object is assigned a globally unique ID. Objects can have   system-assigned and user-defined metadata, to help you organize and   manage the data. Applications access data by referencing the object IDs,   using REST APIs or client libraries. Object storage is similar to   on-premises SAN in terms of the ability to scale, but is easier to   manage and less expensive.\nCloud Storage provides low-cost, highly durable, no-limit   object storage for diverse data types. The data you store in   Cloud Storage can be accessed from anywhere, within and   outside Google Cloud. Optional redundancy across regions provides   maximum reliability. You can select a storage that suits   your data-retention and access-frequency requirements.\n### Comparative analysis\nThe following table provides a comparative analysis of the key capabilities of the storage services in Google Cloud.\n| Unnamed: 0       | Persistent Disk                        | Hyperdisk             | Local SSD              | Filestore                                    | Google Cloud NetApp Volumes                          | Cloud Storage                       |\n|:------------------------------------|:--------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------|:-----------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------|\n| Capacity fullscreen     | 10 GiB to 64 TiB per disk 257 TiB per VM                  | 4 GiB to 64 TiB per disk 512 TiB per VM      | 375 GiB per disk 12 TiB per VM         | 1-100 TiB per Filestore instance (the minimum and maximum capacity and the scaling increments vary by service tier)         | 2-500 TiB per storage pool 100 GiB to 100 TiB per volume                   | No lower or upper limit                     |\n| Scaling aspect_ratio    | Scale up Add and remove disks Autoscale using managed instance groups           | Scale performance and capacity dynamically     | Not scalable              | Basic tier: scale up Enterprise and Zonal tiers: scale up and down                      | Scale up and down                             | Scales automatically based on usage                  |\n| Sharing share      | Limited sharing Read-only: multiple VMs Multi-writer: 2 VMs             | Not shareable            | Not shareable             | Mountable on multiple Compute Engine VMs, remote clients, and GKE clusters                   | Mountable on multiple Compute Engine VMs and GKE clusters                   | Read/write from anywhere Integrates with Cloud CDN and third-party CDNs         |\n| Encryption keys enhanced_encryption | Google-managed, customer-managed, or customer-supplied keys             | Google-managed, customer-managed, or customer-supplied keys | Google-managed keys            | Google-managed keys (all service tiers) Customer-managed keys (Enterprise and Zonal tiers)                | Google-managed or customer-managed keys                       | Google-managed, customer-managed, or customer-supplied keys            |\n| Persistence save     | Lifetime of the disk                       | Lifetime of the disk          | Ephemeral (data lives until the VM is stopped or deleted)  | Lifetime of the Filestore instance                              | Lifetime of the volume                            | Lifetime of the bucket                     |\n| Availability content_copy   | Zonal and regional replication Incremental snapshots (manual or scheduled) Disk cloning      | Zonal              | Zonal               | Regional availability for Enterprise instances, zonal availability for Basic and Zonal instances Snapshots for Enterprise and Zonal instances Backups | Snapshots Cross-region replication                         | Data redundant across zones Options for redundancy across regions          |\n| Performance speed     | Linearly scaling high performance, based on disk size and CPU count           | Dynamically scalable, high-performance persistent storage | High-performance scratch storage         | Basic tier: consistent performance Enterprise and Zonal tiers: linearly scaling performance               | Scalable performance Expectations depend on the service level                  | Autoscaling read-write rates, and dynamic load redistribution           |\n| Management construction    | Manually format and mount                      | Manually format and mount         | Manually format, stripe, and mount        | Fully managed                                   | Fully managed                              | Fully managed                       |\n| Workloads integration_instructions | IOPS-intensive or latency-sensitive applications Databases Shared read-only storage Rapid, durable VM backups | Performance-intensive workloads Scale-out analytics   | Flash-optimized databases Hot-caching for analytics Scratch disk | Lift-and-shift on-premises file systems Shared configuration files Common tooling and utilities Centralized logs          | Lift-and-shift on-premises file systems Shared configuration files Common tooling and utilities Centralized logs Windows workloads | Streaming videos Media asset libraries High-throughput data lakes Backups and archives Long-tail content |\n**Note:** To compare the costs of the storage options, use the [Google Cloud Pricing Calculator](/products/calculator) .\n## Choose a storage option\nThere are two parts to selecting a storage option:\n- Deciding which storage services you need.\n- Choosing the required features and design options in a given service.\n### Storage recommendations\nUse the following recommendations as a starting point to choose the storage services and features that meet your requirements. These recommendations are also presented as a [decision tree](#decision_tree) later in this document.\n**Note:** The recommendations in this document are based on key differentiators of each service, such as the unlimited scale of Cloud Storage. But as shown in the [Comparative analysis](#comparative_analysis) , all the storage services in Google Cloud offer comparable enterprise-grade and cost-effective performance, reliability, flexibility, and security. When choosing the storage services that you need, consider your specific requirements, cost goals, and the detailed features of each service.\n- For applications that need **file-based access** , choose a suitable file storage service based on your requirements for access protocol, availability, and performance.| Access protocol | Recommendation                                                                          |\n|:------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| NFSv3    | If you need regional availability, use Filestore Enterprise. If zonal availability is sufficient but you need high performance, use Filestore Zonal. Otherwise, use either Filestore Basic or NetApp Volumes. For more information about the differences between the Filestore service tiers, see Service tiers. |\n| SMB or NFSv4.1 | Use NetApp Volumes.                                                                         |\n- For workloads that need primary storage with **high performance** , use local SSDs, Persistent Disks, or Hyperdisks depending on your requirements.| Requirement         | Recommendation                                                                  |\n|:----------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Fast scratch disk or cache     | Use local SSD disks (ephemeral).                                                             |\n| Sequential IOPS        | Use Persistent Disks with the pd-standard disk type.                                                        |\n| IOPS-intensive workload      | Use Persistent Disks with the pd-extreme or pd-ssd disk type.                                                      |\n| Balance between performance and cost   | Use Persistent Disks with the pd-balanced disk type.                                                        |\n| Scalable performance and capacity dynamically | Use Hyperdisk. Choose a suitable Hyperdisk type: Hyperdisk Throughput is recommended for scale-out analytics, data drives for cost-sensitive apps, and for cold storage. Hyperdisk Extreme is recommended for workloads that need high I/O, such as high-performance databases. |- Depending on your redundancy requirements, choose between zonal and regional disks.| Requirement          | Recommendation       |\n|:-------------------------------------------------|:------------------------------------------|\n| Redundancy within a single zone in a region  | Use zonal Persistent Disks or Hyperdisks. |\n| Redundancy across multiple zones within a region | Use regional Persistent Disks.   |For a detailed comparative analysis, see [Persistent Disk options](/compute/docs/disks) .\n- For **unlimited-scale and globally available** storage, use Cloud Storage.Depending on the data-access frequency and the storage duration, choose a suitable Cloud Storage class.| Requirement                                  | Recommendation>                                 |\n|:--------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------|\n| Access frequency varies, or the data-retention period is unknown or not predictable.                | Use the Autoclass feature to automatically transition objects in a bucket to appropriate storage classes based on each object's access pattern. |\n| Storage for data that's accessed frequently, including for high-throughput analytics, data lakes, websites, streaming videos, and mobile apps. | Use the Standard storage class. To cache frequently accessed data and serve it from locations that are close to the clients, use Cloud CDN.  |\n| Low-cost storage for infrequently accessed data that can be stored for at least 30 days (for example, backups and long-tail multimedia content). | Use the Nearline storage class.                             |\n| Low-cost storage for infrequently accessed data that can be stored for at least 90 days (for example, disaster recovery).      | Use the Coldline storage class.                             |\n| Lowest-cost storage for infrequently accessed data that can be stored for at least 365 days, including regulatory archives.      | Use the Archive storage class.                             |For a detailed comparative analysis, see [Cloud Storage classes](/storage/docs/storage-classes) .\n### Data transfer options\nAfter you choose appropriate Google Cloud storage services, to deploy and run workloads, you need to transfer your data to Google Cloud. The data that you need to transfer might exist on-premises or on other cloud platforms.\nYou can use the following methods to transfer data to Google Cloud:\n- Transfer data online by using [Storage Transfer Service](/storage/transfer) : Automate the transfer of large amounts of data between object and file storage systems, including Cloud Storage, Amazon S3, Azure storage services, and on-premises data sources.\n- Transfer data offline by using [Transfer Appliance](/transfer-appliance) : Transfer and load large amounts of data offline to Google Cloud in situations where network connectivity and bandwidth are unavailable, limited, or expensive.\n- Upload data to Cloud Storage: Upload data online to Cloud Storage buckets by using the Google Cloud console, gcloud CLI, Cloud Storage APIs, or client libraries.\nWhen you choose a data transfer method, consider factors like the data size, time constraints, bandwidth availability, cost goals, and security and compliance requirements. For more information about planning and implementing data transfers to Google Cloud, see [Migrate to Google Cloud: Transfer your large datasets](https://cloud.google.com/architecture/migration-to-google-cloud-transferring-your-large-datasets) .\n### Storage options decision tree\nThe following decision tree diagram guides you through the Google Cloud storage recommendations discussed earlier:\n[View a larger image](/static/architecture/images/storage-advisor.svg)\n## What's next\n- Estimate storage cost using the [Google Cloud Pricing Calculator](/products/calculator) .\n- Learn about the [best practices](/architecture/framework) for building a cloud topology that's optimized for security, resilience, cost, and performance.\n- Learn about the [differences between object, block, and file storage in Google Cloud (video)](https://www.youtube.com/watch?v=uvyerY_dHJk) .\n- Learn when to use [parallel file systems like Lustre for HPC workloads](/architecture/parallel-file-systems-for-hpc) .## Change log\nThis section provides a summary of the significant technical changes in this guide.\n| Date    | Description of changes                                                                                    |\n|:-----------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| March 14, 2024 | Added the Data transfer options section.                                                                               |\n| December 8, 2023 | Updated the capacity numbers for Hyperdisk and Local SSD.                                                                           |\n| October 17, 2023 | Updated the storage recommendations and the decision tree diagram to include Google Cloud NetApp Volumes as an option for NFSv3 file storage.                                                      |\n| August 25, 2023 | Added guidance for the following products and features: Hyperdisk Google Cloud NetApp Volumes Cloud Storage Autoclass Snapshots for Filestore Zonal Backups for Filestore Zonal and Enterprise Simplified the decision tree diagram and updated it to include the following products and features: Hyperdisk NetApp Volumes Cloud Storage Autoclass Filestore tiers |\n| October 6, 2021 | Added guidance for Filestore Enterprise.                                                                               |\n| August 20, 2021 | Initial publication.                                                                                    |\n## Contributors\nAuthor: [Kumar Dhanagopal](https://www.linkedin.com/in/kumardhanagopal) | Cross-Product Solution Developer\nOther contributors:\n- [Brennan Doyle](https://www.linkedin.com/in/brennan-doyle-3852641) | Solutions Architect\n- [Dean Hildebrand](https://www.linkedin.com/in/dean) | Technical Director, Office of the CTO\n- [Geoffrey Noer](https://www.linkedin.com/in/geoffreynoer) | Group Product Manager\n- [Jack Zhou](https://www.linkedin.com/in/jack-zhou-3182a44) | Technical Writer\n- [Jason Wu](https://www.linkedin.com/in/jason-wu-03ba421) | Director, Product Management\n- [Jeff Allen](https://www.linkedin.com/in/jeff-d-allen) | Solutions Architect\n- [Sean Derrington](https://www.linkedin.com/in/seanderrington) | Group Outbound Product Manager, Storage", "guide": "Cloud Architecture Center"}