{"title": "Compute Engine - View autoscaler logs", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - View autoscaler logs\nWhen you enable autoscaling, the autoscaler makes scaling decisions based on the options that you specify. Each scaling decision is logged by [Cloud Logging](/logging/docs) . Read these logs in the [Logs Explorer](/logging/docs/view/logs-explorer-interface) to better understand the autoscaler's scaling decisions.\nUsing the Logs Explorer, you can see events related to:\n- Autoscaler recommendation for resizing a managed instance group (MIG). If the autoscaler calculates a new recommended size for a MIG, the change in the recommended size is described in the autoscaler logs. See [Resize log entry](#resize) .\n- Changes in autoscaler status. For example, if the autoscaler was working as expected but then encountered an issue, the change in status would be described in the autoscaler logs. See [Status change log entry](#status) .", "content": "## Before you begin\n- Read the [Autoscaling](/compute/docs/autoscaler) documentation.\n- Have an active autoscaler for which you want to view logs.\n- Review how to use the [Logs Explorer](/logging/docs/view/logs-explorer-interface) .\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\nTo use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```## View autoscaler logs\nTo view autoscaler logs, use the Google Cloud console, the gcloud CLI, or REST.\nIf you've turned on autoscaling, then you can see autoscaling logs in the [Google Cloud console](https://console.cloud.google.com/) .- Go to the **Logs Explorer** page. [Go to Logs Explorer](https://console.cloud.google.com/logs/query) \n- Pull down the **Resource** drop-down menu and select **Autoscaler** .\nYou can also navigate to the **Logs Explorer** page from your MIG as follows:- In the Google Cloud console, go to the **Instance groups** page. [Go to Instance groups](https://console.cloud.google.com/compute/instanceGroups) \n- Click the name of the MIG for which you want to view the logs.\n- Click **Monitoring** tab.\n- In the **Monitoring** tab, the **Logs** panel is at the bottom of the page. Open the panel by clicking the icon at the end of this panel.\n- To open the **Logs explorer** page, click the **View in logs explorer** icon in this panel. The log explorer opens with a default query to fetch all autoscaler logs of the MIG.\nTo look up all logs related to autoscaling, use the [logging read command](/sdk/gcloud/reference/logging/read) . For example:\n```\ngcloud logging read \"resource.type=autoscaler\" --limit 10 \\\n --format json\n```\nTo view the autoscaler logs of a specific MIG, specify the `instance_group_manager_name` as follows:\n```\ngcloud logging read \"resource.type=autoscaler AND \\\n resource.labels.instance_group_manager_name=example-igm\" \\\n --limit 10 --format json\n```\nTo view the log entries related to autoscaler [resize actions](#resize) , specify the `compute.autoscalers.resize` method name:\n```\ngcloud logging read \"resource.type=autoscaler AND \\\n resource.labels.instance_group_manager_name=example-igm AND \\\n protoPayload.methodName=compute.autoscalers.resize\" \\\n --limit 10 --format json\n```\nTo view the log entries related to autoscaler [status changes](#status) , specify the `compute.autoscalers.changeStatus` method name:\n```\ngcloud logging read \"resource.type=autoscaler AND \\\n resource.labels.instance_group_manager_name=example-igm AND \\\n protoPayload.methodName=compute.autoscalers.changeStatus\" \\\n --limit 10 --format json\n```\nMake a request to the [Logging V2 API](/logging/docs/reference/v2/rest/v2/entries/list) . The request body must contain the `filter` parameter to use when searching for logs and the `project` you want to view logs for. For example, to make a request to get a list of resize actions of a specific MIG:\n```\nPOST https://logging.googleapis.com/v2/entries:list\n{\n \"filter\": \"resource.type=autoscaler AND\n resource.labels.instance_group_manager_name=example-igm AND\n protoPayload.methodName=compute.autoscalers.resize\",\n \"pageSize\": 10,\n \"resourceNames\": [ \"projects/example-project\"\n ]\n}\n```\nTo make a request to get a list of status changes of a specific MIG:\n```\nPOST https://logging.googleapis.com/v2/entries:list\n{\n \"filter\": \"resource.type=autoscaler AND\n resource.labels.instance_group_manager_name=example-igm AND\n protoPayload.methodName=compute.autoscalers.changeStatus\",\n \"pageSize\": 10,\n \"resourceNames\": [ \"projects/example-project\"\n ]\n}\n```\n## Resize log entry\nWhen the autoscaler calculates a [recommended size](/compute/docs/autoscaler#recommended_size) for your MIG, Compute Engine creates a log entry capturing the new and old recommended sizes. For zonal MIGs, the log entry also captures the reason for the change in recommended size.\nThe following is an example of a log entry for a zonal MIG. In this example, based on predictive autoscaling the autoscaler calculated `3` VMs to achieve the CPU utilization target of `35%` . But, the maximum number of instances configured in the autoscaling policy is only `2` . So, the autoscaler limits the recommended size to `2` .\n```\n {\n insertId: \"1l68z7sg4jw7kzo\"\n logName: \"projects/example-project/logs/cloudaudit.googleapis.com%2Fsystem_event\"\n protoPayload: {\n  @type: \"type.googleapis.com/google.cloud.audit.AuditLog\"\n  metadata: {\n  @type: \"type.googleapis.com/autoscaler.AutoscalerSizeChangeExplanation\"\n  autoscalingMode: \"ON\"\n  autoscalingReason: {\n   scalingLimit: {\n   limitPolicy: {\n    maxNumReplicas: 2\n   }\n   limitSize: 2\n   name: \"MAX_INSTANCES\"\n   }\n   scalingSignal: {\n   calculatedSize: 3\n   calculationDetails: {\n    servingSize: 1\n    signalTarget: 0.35\n    signalValue: 1.03533\n   }\n   name: \"PREDICTED_CPU_UTILIZATION\"\n   signalPolicy: {\n    coolDownPeriodSec: 15\n    cpuUtilization: {\n    predictiveMethod: \"OPTIMIZE_AVAILABILITY\"\n    utilizationTarget: 0.35\n    }\n   }\n   }\n   summary: \"The autoscaler's recommended size changed from 1 to 2\n   because the autoscaler predicted that in 15 seconds the average CPU\n   utilization across 1 serving instance will be 103.533%, which is above\n   the utilization target of 35%. The calculated size was 3 to achieve\n   the target CPU utilization but the size was limited by the maximum\n   number of instances set in the autoscaling policy.\"\n  }\n  newSize: 2\n  oldSize: 1\n  }\n  methodName: \"compute.autoscalers.resize\"\n  resourceName: \"projects/example-project/zones/us-east1-d/autoscalers/example-autoscaler\"\n  serviceName: \"compute.googleapis.com\"\n }\n receiveTimestamp: \"2022-06-13T22:34:43.045973046Z\"\n resource: {\n  labels: {\n  autoscaler_id: \"1234567890123456789\"\n  autoscaler_name: \"example-autoscaler\"\n  instance_group_manager_id: \"1357908642148074125\"\n  instance_group_manager_name: \"example-igm\"\n  location: \"us-east1-d\"\n  project_id: \"example-project\"\n  }\n  type: \"autoscaler\"\n }\n severity: \"INFO\"\n timestamp: \"2022-06-13T22:34:42.810216614Z\"\n }\n```\nThe following table describes the fields from the log entry:\n| Property           | Value                                                                                                                                                                                                  |\n|:---------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| autoscalingMode         | The autoscaling mode at the time when the entry was logged. Regardless of the mode, the autoscaler calculates the recommended size, which is represented by newSize in the log. Depending on the autoscaling mode, the autoscaler resizes the MIG as follows: ON: The autoscaler resizes the MIG to newSize. OFF: The autoscaler does not resize the MIG. ONLY_SCALE_OUT: The autoscaler resizes the MIG only if newSize is greater than the target size of the MIG.                                                                                 |\n| autoscalingReason         | Details about the reason for autoscaling. This field appears only for zonal MIGs.                                                                                                                                                                               |\n| autoscalingReason.scalingLimit      | Details about the autoscaling feature that limited the calculatedSize, which is the size that autoscaler calculated based on the autoscaling signal. The autoscaling features that can limit the calculatedSize are maximum or minimum number of instances, the scale-in controls, or the stabilization period. If no limit applies to calculatedSize, then the scalingLimit field does not appear in the logs.                                                                                              |\n| autoscalingReason.scalingLimit.limitPolicy   | The configuration of the autoscaling feature that limited the calculatedSize. The limitPolicy field is not set when stabilization limits the calculatedSize because stabilization is a default feature of autoscaling.                                                                                                                                             |\n| autoscalingReason.scalingLimit.limitSize   | The number of VMs based on the autoscaling feature that limited the calculatedSize.                                                                                                                                                                               |\n| autoscalingReason.scalingLimit.name    | The name of the autoscaling feature that limited the calculatedSize.                                                                                                                                                                                  |\n| autoscalingReason.scalingSignal     | Details about the autoscaling signal that is used to calculate the number of VMs the MIG should have. If the autoscaling policy has multiple signals, then the autoscaler considers the signal that requires the largest number of VMs.                                                                                                                                         |\n| autoscalingReason.scalingSignal.calculatedSize  | The number of VMs that the MIG should have based on the autoscaling signal. If scalingLimit applies, then the autoscaler limits calculatedSize to scalingLimit.limitSize.                                                                                                                                                         |\n| autoscalingReason.scalingSignal.calculationDetails | Details used to determine the calculatedSize. servingSize: The number of VMs in the MIG excluding the VMs that are still in their initialization period. signalTarget: The target value that the autoscaler maintains for CPU utilization (real-time), predicted CPU utilization, load balancing utilization, or a metric configured with utilization target. singleInstanceAssignment: If scaling is based on a metric value that represents the total amount of work to be done, then singleInstanceAssignment is the quantity of work that each VM can handle. signalValue: The value of the autoscaling signal. If signalTarget is set, then the autoscaler compares the signalValue with the signalTarget to calculate how many VMs are needed, which is represented by calculatedSize. |\n| autoscalingReason.scalingSignal.name    | The name of the autoscaling signal based on which the autoscaler calculated the number of VMs, represented by calculatedSize in the log.                                                                                                                                                                 |\n| autoscalingReason.scalingSignal.signalPolicy  | The configuration of the autoscaling signal based on which the autoscaler determined the calculatedSize.                                                                                                                                                                         |\n| autoscalingReason.summary       | A description of the reason for autoscaling.                                                                                                                                                                                         |\n| newSize           | The current recommended size of the MIG. Depending on the autoscalingMode, the autoscaler resizes the MIG to the newSize as follows: ON: The autoscaler resizes the MIG to newSize. OFF: The autoscaler does not resize the MIG. ONLY_SCALE_OUT: The autoscaler resizes the MIG only if newSize is greater than the target size of the MIG.                                                                                                                |\n| oldSize           | The previous recommended size of the MIG.                                                                                                                                                                                         |\nFor information about the other fields in the log entry, see [Format of audit log entries](/logging/docs/audit/understanding-audit-logs#format_of_audit_log_entries) .\n## Status change log entry\nWhen the status of the autoscaler changes, Compute Engine creates a log entry capturing the old and new status messages. You can use these status messages to find out why your autoscaler is not behaving as you expect or to debug past issues you noticed. For some of the common status messages, see [Commonly returned status messages](/compute/docs/autoscaler/understanding-autoscaler-decisions#commonly_returned_status_messages) .\nThe following fields in the `protoPayload` describe the old and new statuses:\n- `metadata.newStatus.details`: The new status of the autoscaler.\n- `metadata.oldStatus.details`: The previous status of the autoscaler.\nThe following is an example of a log entry that describes a status change. In this example, you might notice the new status message and check that your load balancing configuration is set up correctly.\n```\n {\n  insertId: \"ivho6kg4icqfio\"\n  logName: \"projects/example-project/logs/cloudaudit.googleapis.com%2Fsystem_event\"\n  protoPayload: {\n  metadata: {\n   @type: \"type.googleapis.com/autoscaler.AutoscalerStatusChange\"\n   newStatus: {\n   details: \"The autoscaler is configured to scale based on a load\n   balancing signal but the instance group has not received any\n   utilization data from the load balancer or the utilization is\n   constantly 0. Check that the load balancing configuration is\n   working\"\n   }\n   oldStatus: {\n   details: \"OK\"\n   },\n   methodName: \"compute.autoscalers.changeStatus\"\n   resourceName: \"projects/example-project/zones/us-east1-b/autoscalers/example-autoscaler\"\n   serviceName: \"compute.googleapis.com\"\n  }\n  receiveTimestamp: \"2022-06-08T03:54:12.332329320Z\"\n  resource: {\n   labels: {\n   autoscaler_id: \"1234567890123456789\"\n   autoscaler_name: \"example-autoscaler\"\n   instance_group_manager_id: \"1357908642148074125\"\n   instance_group_manager_name: \"example-igm\"\n   location: \"us-east1-b\"\n   project_id: \"example-project\"\n   }\n   type: \"autoscaler\"\n  }\n  severity: \"INFO\"\n  timestamp: \"2022-06-08T03:54:10.675416812Z\"\n  }\n }\n```\nFor information about the other fields in the log entry, see [Format of audit log entries](/logging/docs/audit/understanding-audit-logs#format_of_audit_log_entries) .\n## What's next\n- [Update your autoscaler](/compute/docs/autoscaler/managing-autoscalers#updating-an-autoscaler) using information that you received from the logs.\n- Learn how [autoscaler makes decisions](/compute/docs/autoscaler/understanding-autoscaler-decisions) .\n- Review [autoscaling options](/compute/docs/autoscaler) .", "guide": "Compute Engine"}