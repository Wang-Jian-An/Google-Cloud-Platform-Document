{"title": "Dialogflow - \u5f9e\u97f3\u983b\u8f38\u5165\u6587\u4ef6\u4e2d\u6aa2\u6e2c\u610f\u5716", "url": "https://cloud.google.com/dialogflow/es/docs/how/detect-intent-audio?hl=zh-cn", "abstract": "# Dialogflow - \u5f9e\u97f3\u983b\u8f38\u5165\u6587\u4ef6\u4e2d\u6aa2\u6e2c\u610f\u5716\n\u672c\u9801\u9762\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 API \u5c07\u97f3\u983b\u8f38\u5165\u767c\u9001\u7d66\u6aa2\u6e2c\u610f\u5716\u8acb\u6c42\u3002Dialogflow \u6703\u8655\u7406\u97f3\u983b\u4e26\u5c07\u5176\u8f49\u63db\u7232\u6587\u5b57\uff0c\u7136\u5f8c\u518d\u5617\u8a66\u5339\u914d\u610f\u5716\u3002\u9019\u7a2e\u8f49\u63db\u7a31\u7232\u97f3\u983b\u8f38\u5165\u3001\u8a9e\u97f3\u8b58\u5225 \u6216 \u8a9e\u97f3\u8f49\u6587\u5b57 (STT)\u3002\n", "content": "## \u6e96\u5099\u5de5\u4f5c\n\u6b64\u529f\u80fd\u50c5\u9069\u7528\u65bc\u4f7f\u7528 API [\u8207\u6700\u7d42\u7528\u6236\u4e92\u52d5](https://cloud.google.com/dialogflow/docs/api-overview?hl=zh-cn) \u7684\u60c5\u6cc1\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f [\u96c6\u6210](https://cloud.google.com/dialogflow/docs/integrations?hl=zh-cn) \u670d\u52d9\uff0c\u5247\u53ef\u4ee5\u8df3\u904e\u672c\u6307\u5357\u3002\n\u5728\u95b1\u8b80\u672c\u6307\u5357\u4e4b\u524d\uff0c\u8acb\u5148\u5b8c\u6210\u4ee5\u4e0b\u4e8b\u9805\uff1a\n- \u95b1\u8b80 [Dialogflow \u57fa\u790e\u77e5\u8b58](https://cloud.google.com/dialogflow/es/docs/basics?hl=zh-cn) \u3002\n- \u57f7\u884c [\u8a2d\u7f6e\u6b65\u9a5f](https://cloud.google.com/dialogflow/es/docs/quick/setup?hl=zh-cn) \u3002## \u5275\u5efa\u4ee3\u7406\n\u5982\u679c\u5c1a\u672a\u5275\u5efa\u4ee3\u7406\uff0c\u8acb\u7acb\u5373\u5275\u5efa\u4e00\u500b\uff1a- \u8f49\u5230 [Dialogflow ES \u63a7\u5236\u6aaf](https://dialogflow.cloud.google.com?hl=zh-cn) \u3002\n- \u5982\u679c\u7cfb\u7d71\u8981\u6c42\u767b\u9304 Dialogflow \u63a7\u5236\u6aaf\uff0c\u8acb\u767b\u9304\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Dialogflow \u63a7\u5236\u6aaf\u6982\u89bd](https://cloud.google.com/dialogflow/docs/console?hl=zh-cn) \u3002\n- \u9ede\u64ca\u5de6\u5074\u908a\u6b04\u83dc\u55ae\u4e2d\u7684 **\u5275\u5efa\u4ee3\u7406** (Create Agent)\u3002\u5982\u679c\u60a8\u5df2\u6709\u5176\u4ed6\u4ee3\u7406\uff0c\u8acb\u9ede\u64ca\u4ee3\u7406\u540d\u7a31\uff0c\u6efe\u52d5\u5230\u5e95\u90e8\uff0c\u7136\u5f8c\u9ede\u64ca **\u5275\u5efa\u65b0\u4ee3\u7406** (Create new agent)\u3002\n- \u8f38\u5165\u60a8\u7684\u4ee3\u7406\u540d\u7a31\u3001\u9ed8\u8a8d\u8a9e\u8a00\u548c\u9ed8\u8a8d\u6642\u5340\u3002\n- \u5982\u679c\u60a8\u5df2\u7d93\u5275\u5efa\u4e86\u9805\u76ee\uff0c\u8acb\u8f38\u5165\u8a72\u9805\u76ee\u3002\u5982\u679c\u8981\u5141\u8a31 Dialogflow \u63a7\u5236\u6aaf\u5275\u5efa\u9805\u76ee\uff0c\u8acb\u9078\u64c7 **\u5275\u5efa\u65b0 Google \u9805\u76ee** (Create a new Google project)\u3002\n- \u9ede\u64ca **\u5275\u5efa** (Create) \u6309\u9215\u3002## \u5c07\u793a\u4f8b\u6587\u4ef6\u5c0e\u5165\u4ee3\u7406\n\u672c\u6307\u5357\u4e2d\u7684\u6b65\u9a5f\u5c0d\u60a8\u7684\u4ee3\u7406\u9032\u884c\u4e86\u5047\u8a2d\uff0c\u56e0\u6b64\u60a8\u9700\u8981 [import](https://cloud.google.com/dialogflow/docs/agents-settings?hl=zh-cn#export) \u7232\u672c\u6307\u5357\u6e96\u5099\u7684\u4ee3\u7406\u3002 \u5c0e\u5165\u6642\uff0c\u9019\u4e9b\u6b65\u9a5f\u4f7f\u7528 \u201c\u6062\u5fa9\u201d(restore) \u9078\u9805\uff0c\u8a72\u9078\u9805\u6703\u8986\u84cb\u6240\u6709\u4ee3\u7406\u8a2d\u7f6e\u3001\u610f\u5716\u548c\u5be6\u9ad4\u3002\n\u5982\u9700\u5c0e\u5165\u6587\u4ef6\uff0c\u8acb\u6309\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a\n- \u4e0b\u8f09 [room-booking-agent.zip](https://cloud.google.com/static/dialogflow/es/docs/data/room-booking-agent.zip?hl=zh-cn) \u6587\u4ef6\u3002\n- \u8f49\u5230 [Dialogflow ES \u63a7\u5236\u6aaf](https://dialogflow.cloud.google.com?hl=zh-cn) \u3002\n- \u9078\u64c7\u60a8\u7684\u4ee3\u7406\u3002\n- \u9ede\u64ca\u4ee3\u7406\u540d\u7a31\u65c1\u908a\u7684\u8a2d\u7f6e\u6309\u9215\u3002\n- \u9078\u64c7 **\u5c0e\u51fa\u548c\u5c0e\u5165** \u6a19\u7c64\u9801\u3002\n- \u9078\u64c7 **\u5f9e ZIP \u6587\u4ef6\u6062\u5fa9** (Restore from ZIP)\uff0c\u7136\u5f8c\u6309\u7167\u8aaa\u660e\u6062\u5fa9\u4e0b\u8f09\u7684 zip \u6587\u4ef6\u3002## \u6aa2\u6e2c\u610f\u5716\n\u5982\u9700\u6aa2\u6e2c\u610f\u5716\uff0c\u8acb\u5c0d [Sessions](https://cloud.google.com/dialogflow/es/docs/reference/common-types?hl=zh-cn#sessions) \u985e\u578b\u8abf\u7528 `detectIntent` \u65b9\u6cd5\u3002\n\u4e0b\u8f09\n [book-a-room.wav](https://cloud.google.com/static/dialogflow/es/docs/data/book-a-room.wav?hl=zh-cn) \n\u793a\u4f8b\u8f38\u5165\u8996\u983b\u6587\u4ef6\uff0c\u5176\u4e2d\u6709\u8a9e\u97f3\u63d0\u793a\u201cbook a room\u201d\u3002\u6b64\u793a\u4f8b\u4e2d\u7684\u97f3\u983b\u6587\u4ef6\u5fc5\u9808\u63a1\u7528 base64 \u7de8\u78bc\uff0c\u4ee5\u4fbf\u80fd\u5920\u5728\u4e0b\u9762\u7684 JSON \u8acb\u6c42\u4e2d\u6dfb\u52a0\u8a72\u97f3\u983b\u6587\u4ef6\u3002 \u4e0b\u9762\u662f Linux \u5e73\u81fa\u4e0a\u7684\u4e00\u500b\u793a\u4f8b\uff1a\n```\nwget https://cloud.google.com/dialogflow/es/docs/data/book-a-room.wavbase64 -w 0 book-a-room.wav > book-a-room.b64\n```\n\u5982\u9700\u67e5\u770b\u5176\u5b83\u5e73\u81fa\u4e0a\u7684\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 Cloud Speech-to-Text API \u6587\u6a94\u4e0a\u7684 [Base64 \u7de8\u78bc\u97f3\u983b\u5167\u5bb9](https://cloud.google.com/speech-to-text/docs/base64-encoding?hl=zh-cn) \u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 Google Cloud \u9805\u76ee ID\n- \uff1abase64 \u7de8\u78bc\u7684\u97f3\u983b\u5167\u5bb9\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://dialogflow.googleapis.com/v2/projects/PROJECT_ID/agent/sessions/123456789:detectIntent\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"queryInput\": {\n \"audioConfig\": {\n  \"languageCode\": \"en-US\"\n }\n },\n \"inputAudio\": \"AUDIO\"\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"responseId\": \"3c1e5a89-75b9-4c3f-b63d-4b1351dd5e32\",\n \"queryResult\": {\n \"queryText\": \"book a room\",\n \"action\": \"room.reservation\",\n \"parameters\": {\n  \"time\": \"\",\n  \"date\": \"\",\n  \"guests\": \"\",\n  \"duration\": \"\",\n  \"location\": \"\"\n },\n \"fulfillmentText\": \"I can help with that. Where would you like to reserve a room?\",\n \"fulfillmentMessages\": [  {\n  \"text\": {\n   \"text\": [   \"I can help with that. Where would you like to reserve a room?\"\n   ]\n  }\n  }\n ],\n \"intent\": {\n  \"name\": \"projects/PROJECT_ID/agent/intents/e8f6a63e-73da-4a1a-8bfc-857183f71228\",\n  \"displayName\": \"room.reservation\"\n },\n \"intentDetectionConfidence\": 1,\n \"diagnosticInfo\": {},\n \"languageCode\": \"en-us\"\n }\n}\n```\n\u8acb\u6ce8\u610f\uff0c `queryResult.action` \u5b57\u6bb5\u7684\u503c\u7232\u201croom.reservation\u201d\uff0c `queryResult.fulfillmentMessages[0|1].text.text[0]` \u5b57\u6bb5\u7684\u503c\u8981\u6c42\u7528\u6236\u63d0\u4f9b\u66f4\u591a\u4fe1\u606f\u3002\n\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/dialogflow/detect_intent/detect_intent.go) \n```\nfunc DetectIntentAudio(projectID, sessionID, audioFile, languageCode string) (string, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 sessionClient, err := dialogflow.NewSessionsClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return \"\", err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer sessionClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 if projectID == \"\" || sessionID == \"\" {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return \"\", errors.New(fmt.Sprintf(\"Received empty project (%s) or session (%s)\", projectID, sessionID))\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 sessionPath := fmt.Sprintf(\"projects/%s/agent/sessions/%s\", projectID, sessionID)\u00a0 \u00a0 \u00a0 \u00a0 // In this example, we hard code the encoding and sample rate for simplicity.\u00a0 \u00a0 \u00a0 \u00a0 audioConfig := dialogflowpb.InputAudioConfig{AudioEncoding: dialogflowpb.AudioEncoding_AUDIO_ENCODING_LINEAR_16, SampleRateHertz: 16000, LanguageCode: languageCode}\u00a0 \u00a0 \u00a0 \u00a0 queryAudioInput := dialogflowpb.QueryInput_AudioConfig{AudioConfig: &audioConfig}\u00a0 \u00a0 \u00a0 \u00a0 audioBytes, err := ioutil.ReadFile(audioFile)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return \"\", err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 queryInput := dialogflowpb.QueryInput{Input: &queryAudioInput}\u00a0 \u00a0 \u00a0 \u00a0 request := dialogflowpb.DetectIntentRequest{Session: sessionPath, QueryInput: &queryInput, InputAudio: audioBytes}\u00a0 \u00a0 \u00a0 \u00a0 response, err := sessionClient.DetectIntent(ctx, &request)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return \"\", err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 queryResult := response.GetQueryResult()\u00a0 \u00a0 \u00a0 \u00a0 fulfillmentText := queryResult.GetFulfillmentText()\u00a0 \u00a0 \u00a0 \u00a0 return fulfillmentText, nil}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/snippets/src/main/java/com/example/dialogflow/DetectIntentAudio.java) \n```\nimport com.google.api.gax.rpc.ApiException;import com.google.cloud.dialogflow.v2.AudioEncoding;import com.google.cloud.dialogflow.v2.DetectIntentRequest;import com.google.cloud.dialogflow.v2.DetectIntentResponse;import com.google.cloud.dialogflow.v2.InputAudioConfig;import com.google.cloud.dialogflow.v2.QueryInput;import com.google.cloud.dialogflow.v2.QueryResult;import com.google.cloud.dialogflow.v2.SessionName;import com.google.cloud.dialogflow.v2.SessionsClient;import com.google.protobuf.ByteString;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Paths;public class DetectIntentAudio {\u00a0 // DialogFlow API Detect Intent sample with audio files.\u00a0 public static QueryResult detectIntentAudio(\u00a0 \u00a0 \u00a0 String projectId, String audioFilePath, String sessionId, String languageCode)\u00a0 \u00a0 \u00a0 throws IOException, ApiException {\u00a0 \u00a0 // Instantiates a client\u00a0 \u00a0 try (SessionsClient sessionsClient = SessionsClient.create()) {\u00a0 \u00a0 \u00a0 // Set the session name using the sessionId (UUID) and projectID (my-project-id)\u00a0 \u00a0 \u00a0 SessionName session = SessionName.of(projectId, sessionId);\u00a0 \u00a0 \u00a0 System.out.println(\"Session Path: \" + session.toString());\u00a0 \u00a0 \u00a0 // Note: hard coding audioEncoding and sampleRateHertz for simplicity.\u00a0 \u00a0 \u00a0 // Audio encoding of the audio content sent in the query request.\u00a0 \u00a0 \u00a0 AudioEncoding audioEncoding = AudioEncoding.AUDIO_ENCODING_LINEAR_16;\u00a0 \u00a0 \u00a0 int sampleRateHertz = 16000;\u00a0 \u00a0 \u00a0 // Instructs the speech recognizer how to process the audio content.\u00a0 \u00a0 \u00a0 InputAudioConfig inputAudioConfig =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputAudioConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setAudioEncoding(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 audioEncoding) // audioEncoding = AudioEncoding.AUDIO_ENCODING_LINEAR_16\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setLanguageCode(languageCode) // languageCode = \"en-US\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSampleRateHertz(sampleRateHertz) // sampleRateHertz = 16000\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 // Build the query with the InputAudioConfig\u00a0 \u00a0 \u00a0 QueryInput queryInput = QueryInput.newBuilder().setAudioConfig(inputAudioConfig).build();\u00a0 \u00a0 \u00a0 // Read the bytes from the audio file\u00a0 \u00a0 \u00a0 byte[] inputAudio = Files.readAllBytes(Paths.get(audioFilePath));\u00a0 \u00a0 \u00a0 // Build the DetectIntentRequest\u00a0 \u00a0 \u00a0 DetectIntentRequest request =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DetectIntentRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSession(session.toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setQueryInput(queryInput)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setInputAudio(ByteString.copyFrom(inputAudio))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 // Performs the detect intent request\u00a0 \u00a0 \u00a0 DetectIntentResponse response = sessionsClient.detectIntent(request);\u00a0 \u00a0 \u00a0 // Display the query result\u00a0 \u00a0 \u00a0 QueryResult queryResult = response.getQueryResult();\u00a0 \u00a0 \u00a0 System.out.println(\"====================\");\u00a0 \u00a0 \u00a0 System.out.format(\"Query Text: '%s'\\n\", queryResult.getQueryText());\u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Detected Intent: %s (confidence: %f)\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 queryResult.getIntent().getDisplayName(), queryResult.getIntentDetectionConfidence());\u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Fulfillment Text: '%s'\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 queryResult.getFulfillmentMessagesCount() > 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ? queryResult.getFulfillmentMessages(0).getText()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 : \"Triggered Default Fallback Intent\");\u00a0 \u00a0 \u00a0 return queryResult;\u00a0 \u00a0 }\u00a0 }}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow/detect.js) \n```\nconst fs = require('fs');const util = require('util');const {struct} = require('pb-util');// Imports the Dialogflow libraryconst dialogflow = require('@google-cloud/dialogflow');// Instantiates a session clientconst sessionClient = new dialogflow.SessionsClient();// The path to identify the agent that owns the created intent.const sessionPath = sessionClient.projectAgentSessionPath(\u00a0 projectId,\u00a0 sessionId);// Read the content of the audio file and send it as part of the request.const readFile = util.promisify(fs.readFile);const inputAudio = await readFile(filename);const request = {\u00a0 session: sessionPath,\u00a0 queryInput: {\u00a0 \u00a0 audioConfig: {\u00a0 \u00a0 \u00a0 audioEncoding: encoding,\u00a0 \u00a0 \u00a0 sampleRateHertz: sampleRateHertz,\u00a0 \u00a0 \u00a0 languageCode: languageCode,\u00a0 \u00a0 },\u00a0 },\u00a0 inputAudio: inputAudio,};// Recognizes the speech in the audio and detects its intent.const [response] = await sessionClient.detectIntent(request);console.log('Detected intent:');const result = response.queryResult;// Instantiates a context clientconst contextClient = new dialogflow.ContextsClient();console.log(` \u00a0Query: ${result.queryText}`);console.log(` \u00a0Response: ${result.fulfillmentText}`);if (result.intent) {\u00a0 console.log(` \u00a0Intent: ${result.intent.displayName}`);} else {\u00a0 console.log(' \u00a0No intent matched.');}const parameters = JSON.stringify(struct.decode(result.parameters));console.log(` \u00a0Parameters: ${parameters}`);if (result.outputContexts && result.outputContexts.length) {\u00a0 console.log(' \u00a0Output contexts:');\u00a0 result.outputContexts.forEach(context => {\u00a0 \u00a0 const contextId =\u00a0 \u00a0 \u00a0 contextClient.matchContextFromProjectAgentSessionContextName(\u00a0 \u00a0 \u00a0 \u00a0 context.name\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 const contextParameters = JSON.stringify(\u00a0 \u00a0 \u00a0 struct.decode(context.parameters)\u00a0 \u00a0 );\u00a0 \u00a0 console.log(` \u00a0 \u00a0${contextId}`);\u00a0 \u00a0 console.log(` \u00a0 \u00a0 \u00a0lifespan: ${context.lifespanCount}`);\u00a0 \u00a0 console.log(` \u00a0 \u00a0 \u00a0parameters: ${contextParameters}`);\u00a0 });}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow/detect_intent_audio.py) \n```\ndef detect_intent_audio(project_id, session_id, audio_file_path, language_code):\u00a0 \u00a0 \"\"\"Returns the result of detect intent with an audio file as input.\u00a0 \u00a0 Using the same `session_id` between requests allows continuation\u00a0 \u00a0 of the conversation.\"\"\"\u00a0 \u00a0 from google.cloud import dialogflow\u00a0 \u00a0 session_client = dialogflow.SessionsClient()\u00a0 \u00a0 # Note: hard coding audio_encoding and sample_rate_hertz for simplicity.\u00a0 \u00a0 audio_encoding = dialogflow.AudioEncoding.AUDIO_ENCODING_LINEAR_16\u00a0 \u00a0 sample_rate_hertz = 16000\u00a0 \u00a0 session = session_client.session_path(project_id, session_id)\u00a0 \u00a0 print(\"Session path: {}\\n\".format(session))\u00a0 \u00a0 with open(audio_file_path, \"rb\") as audio_file:\u00a0 \u00a0 \u00a0 \u00a0 input_audio = audio_file.read()\u00a0 \u00a0 audio_config = dialogflow.InputAudioConfig(\u00a0 \u00a0 \u00a0 \u00a0 audio_encoding=audio_encoding,\u00a0 \u00a0 \u00a0 \u00a0 language_code=language_code,\u00a0 \u00a0 \u00a0 \u00a0 sample_rate_hertz=sample_rate_hertz,\u00a0 \u00a0 )\u00a0 \u00a0 query_input = dialogflow.QueryInput(audio_config=audio_config)\u00a0 \u00a0 request = dialogflow.DetectIntentRequest(\u00a0 \u00a0 \u00a0 \u00a0 session=session,\u00a0 \u00a0 \u00a0 \u00a0 query_input=query_input,\u00a0 \u00a0 \u00a0 \u00a0 input_audio=input_audio,\u00a0 \u00a0 )\u00a0 \u00a0 response = session_client.detect_intent(request=request)\u00a0 \u00a0 print(\"=\" * 20)\u00a0 \u00a0 print(\"Query text: {}\".format(response.query_result.query_text))\u00a0 \u00a0 print(\u00a0 \u00a0 \u00a0 \u00a0 \"Detected intent: {} (confidence: {})\\n\".format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 response.query_result.intent.display_name,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 response.query_result.intent_detection_confidence,\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 )\u00a0 \u00a0 print(\"Fulfillment text: {}\\n\".format(response.query_result.fulfillment_text))\n```No preface\n **C#** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [C# \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [.NET \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.Dialogflow.V2/index.html) \u3002\n **PHP** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [PHP \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [PHP \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://cloud.google.com/php/docs/reference/cloud-dialogflow/latest?hl=zh-cn) \u3002\n **Ruby \u7248** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [Ruby \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [Ruby \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://googleapis.dev/ruby/google-cloud-dialogflow/latest/Google/Cloud/Dialogflow.html) \u3002", "guide": "Dialogflow"}