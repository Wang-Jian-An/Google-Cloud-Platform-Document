{"title": "Dialogflow - Create a playbook agent", "url": "https://cloud.google.com/dialogflow/vertex/docs/quick/create-application", "abstract": "# Dialogflow - Create a playbook agent\n**    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nThis guide shows you how to build and test a simple shirt ordering playbook agent. When interacting with this playbook agent, you can ask for the store location, get store hours, or make a shirt order.\n", "content": "## Before you begin\nYou should do the following before reading this guide:\n- If you have not already, follow the Dialogflow [setup](/dialogflow/cx/docs/quick/setup) instructions.## About playbook agents\nA playbook agent is composed of one or more playbooks. Each playbook has a clearly defined and limited scope. A playbook has the following data:\n| X   | Item                                   |\n|:-------------|:---------------------------------------------------------------------------------------------------------------------------------------------|\n| Name   | A name used to identify the playbook.                          |\n| Goal   | Goals are high level descriptions of what the playbook should accomplish.                 |\n| Instructions | Instructions are high level steps that should be taken to accomplish the playbook's goal.             |\n| Examples  | Examples are sample conversations between an end-user and the playbook. These examples are effectively few-shot prompt examples for the LLM. |\n## Create the application\nTo create the application:\n- Go to the Vertex AI Conversation console: [Vertex AI Conversation console](https://console.cloud.google.com/gen-app-builder/) \n- Select your project from the console drop-down.\n- If you have not already activated the API, read and agree to the Terms of Service, then click **Continue and activatethe API** .\n- Click **Create a New App** or **New App** .\n- Select **Generative playbook** .\n- Provide \"Shirt Ordering Assistant\" for the app name.\n- The user interface takes you to the default playbook named **Default Playbook** .\n- Click the back button to see the list of playbooks.## Create the order playbook\nThe **Order** playbook handles shirt orders. To create this playbook:\n- Click **Create** .\n- Enter the name:`Order`.\n- Enter the following goal:```\nYou are a shirt store ordering agent. Help customers purchase shirts.\nHelp the customer choose a size and color.\nThe shirts come in small, medium, and large.\nThe shirts can be red, green, or blue.\n```\n- Enter the following instructions:```\n- If the customer has not provided a size, ask them to choose a size.\n- If the customer has not provided a color, ask them to choose a color.\n- Once the customer has selected a size and color for the shirt,\n repeat the selection to the customer, and ask them to confirm the selection.\n- Once the customer has confirmed their selection,\n let them know that the shirt is now ordered.\n- Do not provide prices or collect payment.\n- Do not collect the customer's name or address.\n```\n- Click **Save** .\n- Click the back button to return to the playbook list.## Create the information playbook\nThe **Information** playbook handles questions about the store. To create this playbook:\n- Click **Create** .\n- Enter the name:`Information`.\n- Enter the following goal:```\nYou provide information about a shirt store.\nThe store is open between 8 AM and 6 PM every day.\nThe store is located at 1007 Mountain Drive, Gotham City, NJ.\n```\n- Enter the following instructions:```\n- If the customer asks for the store location, provide them with the address.\n- If the customer asks for the store hours, provide them with the hours.\n```\n- Click **Save** .\n- Click the back button to return to the playbook list.## Update the default playbook\nWhen you first created the application, a default playbook was created for you. This playbook should steer the conversation to the appropriate playbooks with specific goals. In the instructions below, you can see how the default playbook references the other playbooks. To update this playbook:\n- Click the default playbook. This playbook has a highlighted star.\n- Enter the following goal:```\nYou are an agent for a shirt store.\nYour name is \"Samantha\".\nYour job is to direct customers to other agents based on the customer's questions.\n```\n- Enter the following instructions:```\n- If the customer hasn't been greeted yet, greet the customer,\n introduce yourself, and ask the user how you can help.\n- If the customer wants information about the store,\n route them to ${PLAYBOOK: Information}\n- If the customer wants to purchase a shirt,\n route them to ${PLAYBOOK: Order}\n```\n- Click **Save** .\n- Click the back button to return to the playbook list.## Provide examples\nAt this point, your playbook is functional. However, You must provide [examples](/dialogflow/vertex/docs/concept/examples) to ensure quality responses.\nYou can manually provide examples from the **Examples** tab when you have a playbook open. However, it is often easier to have a conversation with the functioning playbook and save the conversation as an example.\nAn example conversation with a default playbook is short. This playbook just needs to direct you to another playbook. To have a conversation with the default playbook:\n- Close or cancel any panel that might be present on the right side of the screen. You want to see the simulator panel that contains **Send a message to see how your agent responds** .\n- Select the default playbook.\n- Select the model:`gemini-pro`.\n- In the text box that says **Enter a user utterance** , type`Hello`, then press enter.\n- The playbook responds with a greeting.\nTo save this conversation as an example:\n- Click the **Save as an example** system_update_altbutton near the top right of the interface.\n- The example editor panel opens. You can use this editor to add, edit, delete, or reorder actions.\n- Provide the example name:`Greeting`.\n- Update the playbook responses as necessary.\n- Click **Save** .\nAdd a location example for the information playbook:\n- Close or cancel any panel that might be present on the right side of the screen. If necessary, reset the conversation with the resetrestart_altbutton.\n- Select the information playbook.\n- Select the model:`gemini-pro`.\n- Enter the message:`Where are you located?`.\n- The playbook responds with a location.\n- Save this conversation as an example named`Location`. Only the default playbook examples can start with a user action, so you must delete the action that contains \"Where are you located\".\nAdd an hours example for the information playbook:\n- Similar to steps above, but enter the message:`What are your hours?`and name the example:`Hours`.\nAdd a selection example for the order playbook:\n- Similar to steps above, but name the example `Selection` , select the order playbook, and send the following messages:- `I want to buy a shirt`\n- `Large`\n- `Green`\n- `Yes`\n## Test the playbook agent\nYour playbook agent is now ready to test. Open the simulator panel and have a conversation with the playbook. You do not need to have the same conversations as above. For example, you can ask this playbook agent which colors are available for shirts. If you are not getting the desired behavior, refining your examples and creating new ones will improve responses.\n## Interacting with the playbook agent using the API\nSee [Interactions with the API](/dialogflow/vertex/docs/quick/api) .\n## Integrating with other conversation platforms\nThis content is coming soon.\n## Calling tools\nThis content is coming soon.", "guide": "Dialogflow"}