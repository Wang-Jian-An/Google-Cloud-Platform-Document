{"title": "Dialogflow - Dialogflow Messenger JavaScript events", "url": "https://cloud.google.com/dialogflow/cx/docs/concept/integration/dialogflow-messenger/javascript-events", "abstract": "# Dialogflow - Dialogflow Messenger JavaScript events\nDialogflow Messenger triggers a variety of events that you can create [event listeners](https://developer.mozilla.org/en-US/docs/Web/API/EventListener) for. Some events have a `detail` object field, which provides more information about the event.\n", "content": "## df-messenger-loaded\nThe agent dialog is first loaded.\nDetail properties:\n- none\nFor example:\n```\nwindow.addEventListener('df-messenger-loaded', () => {\u00a0 // Messenger is now ready.});\n```\n## df-chat-open-changed\nThe chat is opened or closed.\n**Note:** Only active if the `df-messenger-chat-bubble` is used.\nDetail properties:\n- `isOpen`(`boolean`): new state of the chat\nFor example:\n```\nwindow.addEventListener('df-chat-open-changed', (event) => {\u00a0 console.log(`Chat is ${event.detail.isOpen ? 'open' : 'closed'}`);});\n```\n## df-user-input-entered\nThe user entered text.\nDetail properties:\n- `input`(`string`): value the user entered\nFor example:\n```\nwindow.addEventListener('df-user-input-entered', (event) => {\u00a0 console.log(event.detail.input);});\n```\n## df-request-sent\nA request sent to the Dialogflow backend.\n**Note:** The request can be manipulated. The changes are reflected in the request being sent. If the event's default is prevented, the request won't be sent.\nDetail properties:\n- `data`(`object`): data container\n- `data.requestBody`(`object`): request that was sent\nFor example:\n```\nwindow.addEventListener('df-request-sent', (event) => {\u00a0 console.log('Request', event.detail.data.requestBody);});\n```\n```\nwindow.addEventListener('df-request-sent', (event) => {\u00a0 event.preventDefault(); // Dialogflow Messenger won't send the request.\u00a0 // Send request yourself.});\n```\n## df-response-received\nA response has arrived to the agent dialog.\n**Note:** Messages can be manipulated, the changes will be reflected in the agent's response handling. If the event's default is prevented, the agent won't handle the response.\nDetail properties:\n- `data`(`object`): data container\n- `data.messages`(`object[]`): list of [parsed response messages](/dialogflow/cx/docs/concept/fulfillment) \n- `raw`(`object`): verbatim response that was received\nFor example:\n```\nwindow.addEventListener('df-response-received', (event) => {\u00a0 // Remove all non-text messages.\u00a0 event.detail.data.messages = event.detail.data.messages.filter(message => {\u00a0 \u00a0 return message.type === 'text';\u00a0 });});\n```\n```\nwindow.addEventListener('df-response-received', (event) => {\u00a0 event.preventDefault(); // Dialogflow Messenger won't handle the response.\u00a0 const messenger = document.querySelector('df-messenger');\u00a0 event.detail.data.messages.forEach(message => {\u00a0 \u00a0 if (message.type === 'text') {\u00a0 \u00a0 \u00a0 messenger.renderCustomText(message.text);\u00a0 \u00a0 }\u00a0 });});\n```\n## df-messenger-error\nA request to the backend fails.\nDetail properties:\n- `error`(`object`): error that occurred\nFor example:\n```\nwindow.addEventListener('df-messenger-error', (event) => {\u00a0 console.log(event.detail.error);});\n```\n## df-session-expired\nThe session with the agent expired.\nDetail properties:\n- none\nFor example:\n```\nwindow.addEventListener('df-session-expired', () => {\u00a0 const messenger = document.querySelector('df-messenger');\u00a0 messenger.renderCustomText(`*Session expired*`, /* isBot= */ true);\u00a0 messenger.startNewSession({ retainHistory: true });});\n```\n## df-session-ended\nThe session has ended.\nDetail properties:\n- none\nFor example:\n```\nwindow.addEventListener('df-session-ended', () => {\u00a0 const messenger = document.querySelector('df-messenger');\u00a0 messenger.renderCustomText(`*Session ended*`, /* isBot= */ true);\u00a0 messenger.startNewSession({ retainHistory: true });});\n```\n## df-url-suggested\nURLs of suggested resources.\nDetail properties:\n- `suggestedUrls`(`string[]`): list of suggested URLs\nFor example:\n```\nwindow.addEventListener('df-url-suggested', (event) => {\u00a0 if (event.detail.suggestedUrls.length === 1) {\u00a0 \u00a0 window.location.href = event.detail.suggestedUrls[0];\u00a0 }});\n```\n## df-accordion-clicked\nUser clicked the accordion.\nDetail properties:\n- none## df-button-clicked\nUser clicked a button.\nDetail properties:\n- `actionLink`(`string`): anchor href of the clicked button, if specified\n- `event`(`string`): [event](/dialogflow/cx/docs/concept/handler#event-custom) of the clicked button, if specified\n- `languageCode`(`string`): language code of the event if specified, otherwise the main language code\n- `text`(`string`): text of the clicked button\n```\nwindow.addEventListener('df-button-clicked', (event) => {\u00a0 event.preventDefault(); // Dialogflow Messenger won't send the \"event\" request.\u00a0 // Handle \"event\" yourself.});\n```\n## df-chip-clicked\nUser clicked a chip.\nDetail properties:\n- `actionLink`(`string`): anchor href of the clicked chip, if specified\n- `text`(`string`): text of the clicked chip## df-citation-clicked\nUser clicked a citation.\nDetail properties:\n- `actionLink`(`string`): anchor href of the citation\n- `title`(`string`): title of the citation## df-info-card-clicked\nUser clicked an info-card.\nDetail properties:\n- `actionLink`(`string`): anchor href of the info-card\n- `title`(`string`): title of the info-card## df-list-element-clicked\nUser clicked a list element.\nDetail properties:\n- `actionLink`(`string`): anchor href of the list element, if specified\n- `event`(`string`): [event](/dialogflow/cx/docs/concept/handler#event-custom) of the clicked list element, if specified\n- `languageCode`(`string`): language code of the event if specified, otherwise the main language code\n- `title`(`string`): title of the list element\n```\nwindow.addEventListener('df-list-element-clicked', (event) => {\u00a0 event.preventDefault(); // Dialogflow Messenger won't send the \"event\" request.\u00a0 // Handle \"event\" yourself.});\n```\n## df-image-clicked\nUser clicked an image.\nDetail properties:\n- `actionLink`(`string`): anchor href of the image, if specified", "guide": "Dialogflow"}