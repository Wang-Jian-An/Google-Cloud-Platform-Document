{"title": "Dialogflow - Dialogflow ES setup and cleanup", "url": "https://cloud.google.com/dialogflow/es/docs/quick/setup", "abstract": "# Dialogflow - Dialogflow ES setup and cleanup\nThis guide provides all required setup steps to start using Dialogflow. It also provides advice for possible cleanup steps after trying or testing Dialogflow.\n", "content": "## Before you begin\nYou should do the following before reading this guide:\n- Read [Dialogflow ES basics](/dialogflow/es/docs/basics) .\n- Read [Editions](/dialogflow/docs/editions) .## About the Google Cloud Console\nThe Google Cloud Console ( [visit documentation](https://support.google.com/cloud/answer/3465889?hl=en&ref_topic=3340599) , [open console](https://console.cloud.google.com/) ) is a web UI used to provision, configure, manage, and monitor systems that use Google Cloud products. You use the Google Cloud Console to set up and manage Dialogflow resources.\n## Create a project\nTo use services provided by Google Cloud, you must create a . A project organizes all your Google Cloud resources. A project consists of a set of collaborators, enabled APIs (and other resources), monitoring tools, billing information, and authentication and access controls. You can create one project, or you can create multiple projects and use them to organize your Google Cloud resources in a [resource hierarchy](/resource-manager/docs/cloud-platform-resource-hierarchy) . When creating a project, take note of the [project ID](/resource-manager/docs/creating-managing-projects#identifying_projects) . You will need this ID to make API calls. For more information on projects, see the [Resource Manager documentation](/resource-manager/docs/creating-managing-projects) .\nThe Dialogflow ES Console ( [visit documentation](/dialogflow/docs/console) , [open console](https://dialogflow.cloud.google.com) ) can optionally create a basic project for you when you create an agent. If you plan on using your project for more than just basic access to a [no-charge edition](/dialogflow/docs/editions) , or you plan on using the API, you should create a project with the Google Cloud Console as described below.\nWe recommend that you create separate projects for experiments, testing, and production. Each project can only create one [Dialogflow Agent](/dialogflow/es/docs/agents-overview) . If you need multiple agents, you will need to create multiple projects.\nIn the Google Cloud console, on the project selector page,   select or [create a Google Cloud project](/resource-manager/docs/creating-managing-projects) .\n[Go to project selector](https://console.cloud.google.com/projectselector2/home/dashboard)\n**Warning:** If a project is deleted, the agents linked to the project cannot be recovered.\n## Enable billing\n**Note:** You can skip this step if you use a [Dialogflow edition](/dialogflow/docs/editions) available at no charge.\nA billing account is used to define who pays for a given set of resources, and it can be linked to one or more projects. Project usage is charged to the linked billing account. In most cases, you configure billing when you create a project. For more information, see the [Billing documentation](/billing/docs) .\n[Make sure that billing is enabled for your Google Cloud project](/billing/docs/how-to/verify-billing-enabled#console) .\n## Enable the API\n**Note:** You can skip this step if you are using the Dialogflow Console to create your project.\nYou must enable the Dialogflow API for your project. For more information on enabling APIs, see the [Service Usage documentation](/service-usage/docs/enable-disable) .\nEnable the Dialogflow API.\n[Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=dialogflow.googleapis.com)## Enable audit logs\n**Note:** You can skip this step for non-production agents.\nEnable Data Access [audit logs](/dialogflow/es/docs/reference/audit-logging) for Dialogflow API in your project. This can help you track design-time changes in the Dialogflow agents linked to this project.\n## Install and initialize the Google Cloud CLI\n**Note:** You can skip this step if you will not be using the API.\nIf you plan to use the Dialogflow API, you need to install and initialize the [Google Cloud CLI](/sdk/gcloud) . The gcloud CLI is a set of tools that you can use to manage resources and applications hosted on Google Cloud.\nThe following link provides instructions:\n[Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n```\ngcloud init\n```\n## Set up authentication and access control\n**Note:** You can skip this step if you will not be using the API.\nIf you plan to use the Dialogflow API, you need to set up authentication. Any client application that uses the API must be authenticated and granted access to the requested resources. This section describes important authentication concepts and provides steps for setting it up. For more information, see the [Google Cloud authentication overview](/docs/authentication) .### Authentication with user accounts\nare the best authentication option when learning the Dialogflow API and for local development. You can utilize your user account to authenticate for either REST command line executions or client library calls.\n**Note:** If you're using [Cloud Shell](/shell/docs) , you are automatically logged in to gcloud, so you do not need to execute`gcloud auth login`.\nTo authenticate for REST command line calls, you use the gcloud CLI. The [gcloud auth login](/sdk/gcloud/reference/auth/login) command logs you in to gcloud with your user account, which should be done before calling the API. The [gcloud auth print-access-token](/sdk/gcloud/reference/auth/print-access-token) command is used throughout the REST command line samples in this documentation to authenticate REST calls.\nTo create user credentials for your local environment:\n```\ngcloud auth login\n```\nTo authenticate for client library calls, you use the gcloud CLI. The [gcloud auth application-default login](/sdk/gcloud/reference/auth/application-default/login) command logs you in to gcloud for application default credentials with your user account, which should be done before calling the API.  The [gcloud auth application-default set-quota-project](/sdk/gcloud/reference/auth/application-default/set-quota-project) command must be used to set your project for billing and quotas related to API calls. Normally, this is the same project used by your agent, and you supply the project ID for the project you created in steps above.\nThe `GOOGLE_APPLICATION_CREDENTIALS` environment variable must not be set in order for your application default credentials to be used by client libraries.\nTo create application default credentials for your local environment:\n```\ngcloud auth application-default logingcloud auth application-default set-quota-project PROJECT_ID\n```### Authentication with service accounts\nare another authentication option that should only be used in secured environments like production or staging. A service account provides credentials for applications, as opposed to end-users. Service accounts are owned by projects, and you can create many service accounts for a project. For more information, see:\n- [The service account overview](/iam/docs/service-accounts) \n- [Service account best practices](/iam/docs/understanding-service-accounts) \n- [Create and manage service accounts](/iam/docs/creating-managing-service-accounts) \n- [Create and manage service account keys](/iam/docs/creating-managing-service-account-keys) \n- [Authenticating with service account keys](/docs/authentication/provide-credentials-adc#local-key) ### Access control with roles\nWhen a principal (user account, service account, and so on) calls an API, Google Cloud requires that the principal has the appropriate permissions. You can grant permissions by granting to a principal. For more information, see the [role overview](/iam/docs/understanding-roles) .\nIf you have created your project with your user account, your user account has the [Owner basic role](/iam/docs/understanding-roles#basic) for the project. This role provides access to call any API for the project. However, if a different account created the project, you may need to have roles granted to your user account before you can call the API.  For instructions, see the [Dialogflow access control guide](/dialogflow/es/docs/access-control) .\n## Install the Dialogflow client library\n**Note:** You can skip this step if you will not be using the API.\nYou have three options for calling the API: [Google supported client libraries, REST, and gRPC](/dialogflow/es/docs/reference/api-overview) .\nClient libraries are available for several popular languages. For installation instructions, see your desired language at [Client libraries](/dialogflow/es/docs/reference/libraries/overview) .\n## Cleanup\nAfter setup and trying or testing Dialogflow, you may want to delete resources you created:\n- You may want to [delete your agent](/dialogflow/es/docs/agents-manage#delete) .\n- You may want to [shutdown your project](/resource-manager/docs/creating-managing-projects#shutting_down_projects) .\n- If you called`gcloud auth login`,  this stores credentials in your user directory on your computer.  You may want to delete these credentials by calling:```\ngcloud auth revoke\n```\n- If you called`gcloud auth application-default login`,  this stores credentials in your user directory on your computer.  You may want to delete these credentials by calling:```\ngcloud auth application-default revoke\n```", "guide": "Dialogflow"}