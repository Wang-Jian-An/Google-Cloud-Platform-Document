{"title": "Dialogflow - Manage intents with the API", "url": "https://cloud.google.com/dialogflow/es/docs/how/manage-intents", "abstract": "# Dialogflow - Manage intents with the API\n[Intents](/dialogflow/docs/intents-overview) determine which user requests are understood and what action to take. In most cases, you will use the [Dialogflow ES Console](https://dialogflow.cloud.google.com) to manage intents. In advanced scenarios, you may wish to use the API to manage intents. This page describes how to create, list, and delete intents using the API.\n", "content": "## Before you begin\nYou should do the following before reading this guide:\n- Read [Dialogflow basics](/dialogflow/docs/basics) .\n- Perform [setup steps](/dialogflow/docs/quick/setup) .## Create an agent\nIf you have not already created an agent, create one now:- Go to the [Dialogflow ES Console](https://dialogflow.cloud.google.com) .\n- If requested, sign in to the Dialogflow Console.  See [Dialogflow console overview](/dialogflow/docs/console) for more information.\n- Click **Create Agent** in the left sidebar menu.  (If you already have other agents, click the agent name,  scroll to the bottom and click **Create new agent** .)\n- Enter your agent's name, default language, and default time zone.\n- If you have already created a project, enter that project.  If you want to allow the Dialogflow Console to create the project,  select **Create a new Google project** .\n- Click the **Create** button.## Import the example file to your agent\nThe steps in this guide make assumptions about your agent, so you need to [import](/dialogflow/docs/agents-settings#export) an agent prepared for this guide. When importing, these steps use the option, which overwrites all agent settings, intents, and entities.\nTo import the file, follow these steps:\n- Download the [room-booking-agent.zip](/static/dialogflow/es/docs/data/room-booking-agent.zip) file.\n- Go to the [Dialogflow ES Console](https://dialogflow.cloud.google.com) .\n- Select your agent.\n- Click the  settingsbutton  next to the agent name.\n- Select the **Export and Import** tab.\n- Select **Restore From Zip** and follow instructions to restore the zip file that you downloaded.## Use IntentView to return all intent data\nWhen creating, listing, or getting an intent, intent data is returned to the caller. By default, this returned data is abbreviated. The samples below use this default.\nTo retrieve all intent data, you must set the `IntentView` parameter to `INTENT_VIEW_FULL` . For more information, see the methods for the [Intents](/dialogflow/docs/reference/common-types#intents) type.\n## Create intent\nThe following samples show how to create an intent. For more information, see the [Intents reference](/dialogflow/docs/reference/common-types#intents) .\nTo create an intent for your agent, call the `create` method on the `intent` resource.\nBefore using any of the request data, make the following replacements:- : your Google Cloud project ID\nHTTP method and URL:\n```\nPOST https://dialogflow.googleapis.com/v2/projects/PROJECT_ID/agent/intents\n```\nRequest JSON body:\n```\n{\n \"displayName\": \"ListRooms\",\n \"priority\": 500000,\n \"webhookState\": \"WEBHOOK_STATE_UNSPECIFIED\",\n \"trainingPhrases\": [ {\n  \"type\": \"EXAMPLE\",\n  \"parts\": [  {\n   \"text\": \"What rooms are available at 10am today?\"\n  }\n  ]\n }\n ],\n \"action\": \"listRooms\",\n \"messages\": [ {\n  \"text\": {\n  \"text\": [   \"Here are the available rooms:\"\n  ]\n  }\n }\n ]\n}\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:The path segment after `intents` contains your new intent ID.To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/dialogflow/intent_management/intent_management.go) \n```\nfunc CreateIntent(projectID, displayName string, trainingPhraseParts, messageTexts []string) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 intentsClient, clientErr := dialogflow.NewIntentsClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if clientErr != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return clientErr\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer intentsClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 if projectID == \"\" || displayName == \"\" {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(fmt.Sprintf(\"Received empty project (%s) or intent (%s)\", projectID, displayName))\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 parent := fmt.Sprintf(\"projects/%s/agent\", projectID)\u00a0 \u00a0 \u00a0 \u00a0 var targetTrainingPhrases []*dialogflowpb.Intent_TrainingPhrase\u00a0 \u00a0 \u00a0 \u00a0 var targetTrainingPhraseParts []*dialogflowpb.Intent_TrainingPhrase_Part\u00a0 \u00a0 \u00a0 \u00a0 for _, partString := range trainingPhraseParts {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 part := dialogflowpb.Intent_TrainingPhrase_Part{Text: partString}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 targetTrainingPhraseParts = []*dialogflowpb.Intent_TrainingPhrase_Part{&part}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 targetTrainingPhrase := dialogflowpb.Intent_TrainingPhrase{Type: dialogflowpb.Intent_TrainingPhrase_EXAMPLE, Parts: targetTrainingPhraseParts}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 targetTrainingPhrases = append(targetTrainingPhrases, &targetTrainingPhrase)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 intentMessageTexts := dialogflowpb.Intent_Message_Text{Text: messageTexts}\u00a0 \u00a0 \u00a0 \u00a0 wrappedIntentMessageTexts := dialogflowpb.Intent_Message_Text_{Text: &intentMessageTexts}\u00a0 \u00a0 \u00a0 \u00a0 intentMessage := dialogflowpb.Intent_Message{Message: &wrappedIntentMessageTexts}\u00a0 \u00a0 \u00a0 \u00a0 target := dialogflowpb.Intent{DisplayName: displayName, WebhookState: dialogflowpb.Intent_WEBHOOK_STATE_UNSPECIFIED, TrainingPhrases: targetTrainingPhrases, Messages: []*dialogflowpb.Intent_Message{&intentMessage}}\u00a0 \u00a0 \u00a0 \u00a0 request := dialogflowpb.CreateIntentRequest{Parent: parent, Intent: &target}\u00a0 \u00a0 \u00a0 \u00a0 _, requestErr := intentsClient.CreateIntent(ctx, &request)\u00a0 \u00a0 \u00a0 \u00a0 if requestErr != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return requestErr\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/snippets/src/main/java/com/example/dialogflow/IntentManagement.java) \n```\n/**\u00a0* Create an intent of the given intent type\u00a0*\u00a0* @param displayName The display name of the intent.\u00a0* @param projectId Project/Agent Id.\u00a0* @param trainingPhrasesParts Training phrases.\u00a0* @param messageTexts Message texts for the agent's response when the intent is detected.\u00a0* @return The created Intent.\u00a0*/public static Intent createIntent(\u00a0 \u00a0 String displayName,\u00a0 \u00a0 String projectId,\u00a0 \u00a0 List<String> trainingPhrasesParts,\u00a0 \u00a0 List<String> messageTexts)\u00a0 \u00a0 throws ApiException, IOException {\u00a0 // Instantiates a client\u00a0 try (IntentsClient intentsClient = IntentsClient.create()) {\u00a0 \u00a0 // Set the project agent name using the projectID (my-project-id)\u00a0 \u00a0 AgentName parent = AgentName.of(projectId);\u00a0 \u00a0 // Build the trainingPhrases from the trainingPhrasesParts\u00a0 \u00a0 List<TrainingPhrase> trainingPhrases = new ArrayList<>();\u00a0 \u00a0 for (String trainingPhrase : trainingPhrasesParts) {\u00a0 \u00a0 \u00a0 trainingPhrases.add(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TrainingPhrase.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addParts(Part.newBuilder().setText(trainingPhrase).build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build());\u00a0 \u00a0 }\u00a0 \u00a0 // Build the message texts for the agent's response\u00a0 \u00a0 Message message =\u00a0 \u00a0 \u00a0 \u00a0 Message.newBuilder().setText(Text.newBuilder().addAllText(messageTexts).build()).build();\u00a0 \u00a0 // Build the intent\u00a0 \u00a0 Intent intent =\u00a0 \u00a0 \u00a0 \u00a0 Intent.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDisplayName(displayName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addMessages(message)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addAllTrainingPhrases(trainingPhrases)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Performs the create intent request\u00a0 \u00a0 Intent response = intentsClient.createIntent(parent, intent);\u00a0 \u00a0 System.out.format(\"Intent created: %s\\n\", response);\u00a0 \u00a0 return response;\u00a0 }}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow/create-intent.js) \n```\n/**\u00a0* TODO(developer): Uncomment the following lines before running the sample.\u00a0*/// const projectId = 'The Project ID to use, e.g. 'YOUR_GCP_ID';// const displayName = 'The display name of the intent, e.g. 'MAKE_RESERVATION';// const trainingPhrasesParts = 'Training phrases, e.g. 'How many people are staying?';// const messageTexts = 'Message texts for the agent's response when the intent is detected, e.g. 'Your reservation has been confirmed';// Imports the Dialogflow libraryconst dialogflow = require('@google-cloud/dialogflow');// Instantiates the Intent Clientconst intentsClient = new dialogflow.IntentsClient();async function createIntent() {\u00a0 // Construct request\u00a0 // The path to identify the agent that owns the created intent.\u00a0 const agentPath = intentsClient.projectAgentPath(projectId);\u00a0 const trainingPhrases = [];\u00a0 trainingPhrasesParts.forEach(trainingPhrasesPart => {\u00a0 \u00a0 const part = {\u00a0 \u00a0 \u00a0 text: trainingPhrasesPart,\u00a0 \u00a0 };\u00a0 \u00a0 // Here we create a new training phrase for each provided part.\u00a0 \u00a0 const trainingPhrase = {\u00a0 \u00a0 \u00a0 type: 'EXAMPLE',\u00a0 \u00a0 \u00a0 parts: [part],\u00a0 \u00a0 };\u00a0 \u00a0 trainingPhrases.push(trainingPhrase);\u00a0 });\u00a0 const messageText = {\u00a0 \u00a0 text: messageTexts,\u00a0 };\u00a0 const message = {\u00a0 \u00a0 text: messageText,\u00a0 };\u00a0 const intent = {\u00a0 \u00a0 displayName: displayName,\u00a0 \u00a0 trainingPhrases: trainingPhrases,\u00a0 \u00a0 messages: [message],\u00a0 };\u00a0 const createIntentRequest = {\u00a0 \u00a0 parent: agentPath,\u00a0 \u00a0 intent: intent,\u00a0 };\u00a0 // Create the intent\u00a0 const [response] = await intentsClient.createIntent(createIntentRequest);\u00a0 console.log(`Intent ${response.name} created`);}createIntent();\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow/intent_management.py) \n```\ndef create_intent(project_id, display_name, training_phrases_parts, message_texts):\u00a0 \u00a0 \"\"\"Create an intent of the given intent type.\"\"\"\u00a0 \u00a0 from google.cloud import dialogflow\u00a0 \u00a0 intents_client = dialogflow.IntentsClient()\u00a0 \u00a0 parent = dialogflow.AgentsClient.agent_path(project_id)\u00a0 \u00a0 training_phrases = []\u00a0 \u00a0 for training_phrases_part in training_phrases_parts:\u00a0 \u00a0 \u00a0 \u00a0 part = dialogflow.Intent.TrainingPhrase.Part(text=training_phrases_part)\u00a0 \u00a0 \u00a0 \u00a0 # Here we create a new training phrase for each provided part.\u00a0 \u00a0 \u00a0 \u00a0 training_phrase = dialogflow.Intent.TrainingPhrase(parts=[part])\u00a0 \u00a0 \u00a0 \u00a0 training_phrases.append(training_phrase)\u00a0 \u00a0 text = dialogflow.Intent.Message.Text(text=message_texts)\u00a0 \u00a0 message = dialogflow.Intent.Message(text=text)\u00a0 \u00a0 intent = dialogflow.Intent(\u00a0 \u00a0 \u00a0 \u00a0 display_name=display_name, training_phrases=training_phrases, messages=[message]\u00a0 \u00a0 )\u00a0 \u00a0 response = intents_client.create_intent(\u00a0 \u00a0 \u00a0 \u00a0 request={\"parent\": parent, \"intent\": intent}\u00a0 \u00a0 )\u00a0 \u00a0 print(\"Intent created: {}\".format(response))\n```No preface\n **C#** : Please follow the [C# setup instructions](/dialogflow/docs/reference/libraries) on the client libraries page  and then visit the [Dialogflow reference documentation for .NET.](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.Dialogflow.V2/index.html) \n **PHP** : Please follow the [PHP setup instructions](/dialogflow/docs/reference/libraries) on the client libraries page  and then visit the [Dialogflow reference documentation for PHP.](/php/docs/reference/cloud-dialogflow/latest) \n **Ruby** : Please follow the [Ruby setup instructions](/dialogflow/docs/reference/libraries) on the client libraries page  and then visit the [Dialogflow reference documentation for Ruby.](https://googleapis.dev/ruby/google-cloud-dialogflow/latest/Google/Cloud/Dialogflow.html)\n## List intents\nThe following samples show how to lists intents. For more information, see the [Intents reference](/dialogflow/docs/reference/common-types#intents) .\nTo list the intents for your agent, call the `list` method on the `intents` resource.\nBefore using any of the request data, make the following replacements:- : your Google Cloud project ID\nHTTP method and URL:\n```\nGET https://dialogflow.googleapis.com/v2/projects/PROJECT_ID/agent/intents\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:\n```\n{\n \"intents\": [ {\n  \"name\": \"projects/PROJECT_ID/agent/intents/5b290a94-55d6-4074-96f4-9c4c4879c2bb\",\n  \"displayName\": \"ListRooms\",\n  \"priority\": 500000,\n  \"action\": \"listRooms\",\n  \"messages\": [  {\n   \"text\": {\n   \"text\": [    \"Here are the available rooms:\"\n   ]\n   }\n  }\n  ]\n },\n ...\n ]\n}\n```\nThe path segments after `intents` contain your intent IDs.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/dialogflow/intent_management/intent_management.go) \n```\nfunc ListIntents(projectID string) ([]*dialogflowpb.Intent, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 intentsClient, clientErr := dialogflow.NewIntentsClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if clientErr != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, clientErr\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer intentsClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 if projectID == \"\" {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, errors.New(fmt.Sprintf(\"Received empty project (%s)\", projectID))\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 parent := fmt.Sprintf(\"projects/%s/agent\", projectID)\u00a0 \u00a0 \u00a0 \u00a0 request := dialogflowpb.ListIntentsRequest{Parent: parent}\u00a0 \u00a0 \u00a0 \u00a0 intentIterator := intentsClient.ListIntents(ctx, &request)\u00a0 \u00a0 \u00a0 \u00a0 var intents []*dialogflowpb.Intent\u00a0 \u00a0 \u00a0 \u00a0 for intent, status := intentIterator.Next(); status != iterator.Done; {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 intents = append(intents, intent)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 intent, status = intentIterator.Next()\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return intents, nil}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/snippets/src/main/java/com/example/dialogflow/IntentManagement.java) \n```\n/**\u00a0* List intents\u00a0*\u00a0* @param projectId Project/Agent Id.\u00a0* @return Intents found.\u00a0*/public static List<Intent> listIntents(String projectId) throws ApiException, IOException {\u00a0 List<Intent> intents = Lists.newArrayList();\u00a0 // Instantiates a client\u00a0 try (IntentsClient intentsClient = IntentsClient.create()) {\u00a0 \u00a0 // Set the project agent name using the projectID (my-project-id)\u00a0 \u00a0 AgentName parent = AgentName.of(projectId);\u00a0 \u00a0 // Performs the list intents request\u00a0 \u00a0 for (Intent intent : intentsClient.listIntents(parent).iterateAll()) {\u00a0 \u00a0 \u00a0 System.out.println(\"====================\");\u00a0 \u00a0 \u00a0 System.out.format(\"Intent name: '%s'\\n\", intent.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"Intent display name: '%s'\\n\", intent.getDisplayName());\u00a0 \u00a0 \u00a0 System.out.format(\"Action: '%s'\\n\", intent.getAction());\u00a0 \u00a0 \u00a0 System.out.format(\"Root followup intent: '%s'\\n\", intent.getRootFollowupIntentName());\u00a0 \u00a0 \u00a0 System.out.format(\"Parent followup intent: '%s'\\n\", intent.getParentFollowupIntentName());\u00a0 \u00a0 \u00a0 System.out.format(\"Input contexts:\\n\");\u00a0 \u00a0 \u00a0 for (String inputContextName : intent.getInputContextNamesList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"\\tName: %s\\n\", inputContextName);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 System.out.format(\"Output contexts:\\n\");\u00a0 \u00a0 \u00a0 for (Context outputContext : intent.getOutputContextsList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"\\tName: %s\\n\", outputContext.getName());\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 intents.add(intent);\u00a0 \u00a0 }\u00a0 }\u00a0 return intents;}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow/list-intents.js) \n```\n/**\u00a0* TODO(developer): Uncomment the following lines before running the sample.\u00a0*/// const projectId = 'The Project ID to use, e.g. 'YOUR_GCP_ID';// Imports the Dialogflow libraryconst dialogflow = require('@google-cloud/dialogflow');// Instantiates clientsconst intentsClient = new dialogflow.IntentsClient();async function listIntents() {\u00a0 // Construct request\u00a0 // The path to identify the agent that owns the intents.\u00a0 const projectAgentPath = intentsClient.projectAgentPath(projectId);\u00a0 console.log(projectAgentPath);\u00a0 const request = {\u00a0 \u00a0 parent: projectAgentPath,\u00a0 };\u00a0 // Send the request for listing intents.\u00a0 const [response] = await intentsClient.listIntents(request);\u00a0 response.forEach(intent => {\u00a0 \u00a0 console.log('====================');\u00a0 \u00a0 console.log(`Intent name: ${intent.name}`);\u00a0 \u00a0 console.log(`Intent display name: ${intent.displayName}`);\u00a0 \u00a0 console.log(`Action: ${intent.action}`);\u00a0 \u00a0 console.log(`Root folowup intent: ${intent.rootFollowupIntentName}`);\u00a0 \u00a0 console.log(`Parent followup intent: ${intent.parentFollowupIntentName}`);\u00a0 \u00a0 console.log('Input contexts:');\u00a0 \u00a0 intent.inputContextNames.forEach(inputContextName => {\u00a0 \u00a0 \u00a0 console.log(`\\tName: ${inputContextName}`);\u00a0 \u00a0 });\u00a0 \u00a0 console.log('Output contexts:');\u00a0 \u00a0 intent.outputContexts.forEach(outputContext => {\u00a0 \u00a0 \u00a0 console.log(`\\tName: ${outputContext.name}`);\u00a0 \u00a0 });\u00a0 });}listIntents();\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow/intent_management.py) \n```\ndef list_intents(project_id):\u00a0 \u00a0 from google.cloud import dialogflow\u00a0 \u00a0 intents_client = dialogflow.IntentsClient()\u00a0 \u00a0 parent = dialogflow.AgentsClient.agent_path(project_id)\u00a0 \u00a0 intents = intents_client.list_intents(request={\"parent\": parent})\u00a0 \u00a0 for intent in intents:\u00a0 \u00a0 \u00a0 \u00a0 print(\"=\" * 20)\u00a0 \u00a0 \u00a0 \u00a0 print(\"Intent name: {}\".format(intent.name))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Intent display_name: {}\".format(intent.display_name))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Action: {}\\n\".format(intent.action))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Root followup intent: {}\".format(intent.root_followup_intent_name))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Parent followup intent: {}\\n\".format(intent.parent_followup_intent_name))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Input contexts:\")\u00a0 \u00a0 \u00a0 \u00a0 for input_context_name in intent.input_context_names:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 print(\"\\tName: {}\".format(input_context_name))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Output contexts:\")\u00a0 \u00a0 \u00a0 \u00a0 for output_context in intent.output_contexts:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 print(\"\\tName: {}\".format(output_context.name))\n```No preface\n **C#** : Please follow the [C# setup instructions](/dialogflow/docs/reference/libraries) on the client libraries page  and then visit the [Dialogflow reference documentation for .NET.](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.Dialogflow.V2/index.html) \n **PHP** : Please follow the [PHP setup instructions](/dialogflow/docs/reference/libraries) on the client libraries page  and then visit the [Dialogflow reference documentation for PHP.](/php/docs/reference/cloud-dialogflow/latest) \n **Ruby** : Please follow the [Ruby setup instructions](/dialogflow/docs/reference/libraries) on the client libraries page  and then visit the [Dialogflow reference documentation for Ruby.](https://googleapis.dev/ruby/google-cloud-dialogflow/latest/Google/Cloud/Dialogflow.html)\n## Delete intents\nThe following samples show how to delete an intent. For more information, see the [Intents reference](/dialogflow/docs/reference/common-types#intents) .\nTo delete an intent for your agent, call the `delete` method on the `intents` resource.\nBefore using any of the request data, make the following replacements:- : your Google Cloud project ID\n- : your intent ID\nHTTP method and URL:\n```\nDELETE https://dialogflow.googleapis.com/v2/projects/PROJECT_ID/agent/intents/INTENT_ID\n```\nTo send your request, expand one of these options:\nYou should receive a successful status code (2xx) and an empty response.To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/dialogflow/intent_management/intent_management.go) \n```\nfunc DeleteIntent(projectID, intentID string) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 intentsClient, clientErr := dialogflow.NewIntentsClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if clientErr != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return clientErr\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer intentsClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 if projectID == \"\" || intentID == \"\" {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(fmt.Sprintf(\"Received empty project (%s) or intent (%s)\", projectID, intentID))\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 targetPath := fmt.Sprintf(\"projects/%s/agent/intents/%s\", projectID, intentID)\u00a0 \u00a0 \u00a0 \u00a0 request := dialogflowpb.DeleteIntentRequest{Name: targetPath}\u00a0 \u00a0 \u00a0 \u00a0 requestErr := intentsClient.DeleteIntent(ctx, &request)\u00a0 \u00a0 \u00a0 \u00a0 if requestErr != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return requestErr\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/snippets/src/main/java/com/example/dialogflow/IntentManagement.java) \n```\n/**\u00a0* Delete intent with the given intent type and intent value\u00a0*\u00a0* @param intentId The id of the intent.\u00a0* @param projectId Project/Agent Id.\u00a0*/public static void deleteIntent(String intentId, String projectId)\u00a0 \u00a0 throws ApiException, IOException {\u00a0 // Instantiates a client\u00a0 try (IntentsClient intentsClient = IntentsClient.create()) {\u00a0 \u00a0 IntentName name = IntentName.of(projectId, intentId);\u00a0 \u00a0 // Performs the delete intent request\u00a0 \u00a0 intentsClient.deleteIntent(name);\u00a0 }}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow/resource.js) \n```\n// Imports the Dialogflow libraryconst dialogflow = require('@google-cloud/dialogflow');// Instantiates clientsconst intentsClient = new dialogflow.IntentsClient();const intentPath = intentsClient.projectAgentIntentPath(projectId, intentId);const request = {name: intentPath};// Send the request for deleting the intent.const result = await intentsClient.deleteIntent(request);console.log(`Intent ${intentPath} deleted`);return result;\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow/intent_management.py) \n```\ndef delete_intent(project_id, intent_id):\u00a0 \u00a0 \"\"\"Delete intent with the given intent type and intent value.\"\"\"\u00a0 \u00a0 from google.cloud import dialogflow\u00a0 \u00a0 intents_client = dialogflow.IntentsClient()\u00a0 \u00a0 intent_path = intents_client.intent_path(project_id, intent_id)\u00a0 \u00a0 intents_client.delete_intent(request={\"name\": intent_path})\n```No preface\n **C#** : Please follow the [C# setup instructions](/dialogflow/docs/reference/libraries) on the client libraries page  and then visit the [Dialogflow reference documentation for .NET.](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.Dialogflow.V2/index.html) \n **PHP** : Please follow the [PHP setup instructions](/dialogflow/docs/reference/libraries) on the client libraries page  and then visit the [Dialogflow reference documentation for PHP.](/php/docs/reference/cloud-dialogflow/latest) \n **Ruby** : Please follow the [Ruby setup instructions](/dialogflow/docs/reference/libraries) on the client libraries page  and then visit the [Dialogflow reference documentation for Ruby.](https://googleapis.dev/ruby/google-cloud-dialogflow/latest/Google/Cloud/Dialogflow.html)", "guide": "Dialogflow"}