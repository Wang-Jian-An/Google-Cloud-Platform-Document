{"title": "Dialogflow - Dialogflow CX Console overview", "url": "https://cloud.google.com/dialogflow/cx/docs/concept/console", "abstract": "# Dialogflow - Dialogflow CX Console overview\nDialogflow provides a web user interface called the Dialogflow CX Console ( [visit documentation](/dialogflow/cx/docs/concept/console) , [open console](https://dialogflow.cloud.google.com/cx/projects) ). You use this console to create, build, and test CX agents. The CX Console has a similar purpose as the [ES Console](/dialogflow/docs/console) , but the CX Console user interface is much more visual. It graphs each flow as a conversational state machine diagram, which makes complex agents easier to design and understand.\nThe Dialogflow CX Console is different from the Google Cloud Platform (GCP) Console ( [visit documentation](https://support.google.com/cloud/answer/3465889?hl=en&ref_topic=3340599) , [open console](https://console.cloud.google.com/) ). The Dialogflow CX Console is used to manage Dialogflow CX agents, while the GCP Console is used to manage GCP-specific Dialogflow CX settings (for example, billing) and other GCP resources.\nIn most cases you should use the Dialogflow CX Console to build agents, but you can also use the Dialogflow CX API to build agents for advanced scenarios.\nQuickstart, concept, and how-to guides take you through the steps of using the console. This guide provides a high-level summary of the console.\n", "content": "## How the console is used\nThe console is used to create, build, manage, fine-tune, and test your projects and agents. With it, you can:\n- Create [projects](/dialogflow/cx/docs/quick/setup#project) .\n- Create [agents](/dialogflow/cx/docs/concept/agent) that contain all settings and data that define the conversational experience.\n- Create [flows](/dialogflow/cx/docs/concept/flow) and [pages](/dialogflow/cx/docs/concept/page) that are the building blocks for conversation control.\n- Create [entities](/dialogflow/cx/docs/concept/entity) to extract useful data from end-user input.\n- Create [intents](/dialogflow/cx/docs/concept/intent) that categorize end-user input.\n- Test your agent via the [simulator](#simulator) .\n- And more ...## Project selector\nWhen you initially load the console, you must select a [project](/dialogflow/cx/docs/quick/setup#project) . The project selector interface is used to:\n- Select pre-existing projects\n- Create new projects\n## Agent selector\nOnce you select a project, you must select an agent. The agent selector interface is used to:\n- Select existing agents\n- [Create new agents](/dialogflow/cx/docs/concept/agent#create) \n- [Create prebuilt agents](/dialogflow/cx/docs/concept/agents-prebuilt) \n- [Export and restore agents](/dialogflow/cx/docs/concept/agent#export) \n- [Delete agents](/dialogflow/cx/docs/concept/agent#del) \n- Configure [location settings](/dialogflow/cx/docs/concept/region#location-settings) \n- Filter agents by location\n## Agent builder\nOnce a project and agent has been selected, the agent builder loads. The builder is arranged in the following panels:### Console menu (1)\nYou can use this menu to switch between Dialogflow consoles.\n### Project and agent selection (2)\nYou can use these menus to change the project, agent, or currently active language for [multilingual agents](/dialogflow/cx/docs/concept/agent-multilingual) .\n### Search bar and task indicator (3)\nUse the [search bar](/dialogflow/cx/docs/concept/search)  to search, filter, and access the core resources within the agent. The task indicator shows the status of tasks like training.\n### Build and Manage tabs (4)\nThe **Build** tab contains sections for managing flows and pages. When you select a flow in the flow section, the pages contained within the flow are listed in the pages section.\nThe **Manage** tab contains resources and tools available to the agent: intents, entity types, webhooks, etc.\n### Graph settings (5)\nThese buttons provide various controls for viewing and interacting with the agent graph.\n### Agent settings and simulator buttons (6)\nThe **Agent Settings** button opens the agent settings panel. The **Test Agent** button opens the [simulator](#simulator) panel.\n### Graph (7)\nThe graph shows a visual representation of the selected flow, similar to a state machine diagram. Each node of the graph represents a page or flow start page. You can click a node to expand or contract it. When expanded, you can edit a nodes data.\nThe first node of the graph, called **Start** , is the start page of the flow.\nConnecting lines from one node to another represent possible [transitions](/dialogflow/cx/docs/concept/handler) . They are color-coded in the following way:\n- Blue represents transitions defined for intent requirements or for intent and condition requirements.\n- Orange represents transitions defined for condition requirements only.\n- Cyan represents transitions defined for [event handlers](/dialogflow/cx/docs/concept/handler#event) .\n- Grey represents transitions other than described above (for example, a mixture of the above mentioned transition types).\nWhen a transition can lead to another flow, the target flow is shown as a node.\n### Editing and simulator panels (8)\nWhen editing agent content or testing the agent with the [simulator](#simulator) , content-specific panels open on the right side of the console. These panels can be expanded to fill available console area, contracted to fill a portion of the right side of the console, or closed when you are finished.\n## Simulator\nThe simulator is used to test your agent. You can have a conversation with your agent while monitoring changes in session state.\nYou can also use the simulator to create executable [test cases](/dialogflow/cx/docs/concept/test-case) .\n### Simulator settings\nWhen you first open the simulator, you need to select an [agent environment or flow versions](/dialogflow/cx/docs/concept/version) and an active [flow](/dialogflow/cx/docs/concept/flow) . In most cases, you should use the draft environment and default start flow.\nFrom buttons above the simulator, you can also:\n- Enable or disable [webhook](/dialogflow/cx/docs/concept/webhook) calls at any time with the webhooktoggle button.\n- Enable or disable [partial responses](/dialogflow/cx/docs/concept/fulfillment#partial-response) .\n- Enable or disable [sentiment analysis](/dialogflow/cx/docs/concept/sentiment) .\n### Simulator input\nWhen interacting with the simulator, you provide end-user input as text, then press enter or click the send send button. In addition to plain text, you can choose alternate input types with the input input selector:\n- **Parameter** : Inject a [parameter](/dialogflow/cx/docs/concept/parameter) value. You can provide new parameters or provide preset values for existing parameters.\n- **Event** : Invoke an [event](/dialogflow/cx/docs/concept/handler#event) .\n- **DTMF** : Send dual-tone multi-frequency signaling (Touch-Tone) input for telephony interactions.\n### Simulator session state\nWhen using the simulator to have a conversation with your agent, session state is shown to the left of the conversation. The currently active flow, currently active page, populated parameter values, and [execution steps](/dialogflow/cx/docs/concept/page#visualization) are shown. This information may help you debug an agent or verify its behavior in certain conversation scenarios.\n### Simulator limitations\nFor the simulator, the following limitations apply:\n- You cannot set a parameter value to null.\n- Conversations created using simulator are inaccessible using API methods.", "guide": "Dialogflow"}