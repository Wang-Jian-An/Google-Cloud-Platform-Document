{"title": "Dialogflow - Disputes prebuilt component", "url": "https://cloud.google.com/dialogflow/cx/docs/concept/prebuilt-component/disputes", "abstract": "# Dialogflow - Disputes prebuilt component\nThe disputes [prebuilt component](/dialogflow/cx/docs/concept/prebuilt-component) authenticates the user and allows them to dispute or contest charges, transactions and fees. This component uses a customized version of the [Authentication](/dialogflow/cx/docs/concept/prebuilt-component/authentication) prebuilt component to authenticate account holders and cardholders. The component also uses a customized version of the [Date of birth](/dialogflow/cx/docs/concept/prebuilt-component/date-of-birth-collection) prebuilt component to collect dates for disputed transactions.\n", "content": "## Limitations\nIn addition to the [common prebuilt component limitations](/dialogflow/cx/docs/concept/prebuilt-component#limits) , this prebuilt component has the following limitations:\n- This component does not encrypt any data.## Sample dialogs\nThe following sample dialogs demonstrate common scenarios handled by this prebuilt component. The sample dialogs demonstrate behavior when the component is called via telephony, which triggers the Default Welcome Intent and the first agent response at the start of the conversation.\n### Unauthenticated user with transaction dispute\nThe agent identifies that the user has not been previously authenticated and collects information to verify that the user is a registered account holder. The agent collects information about the dispute including the account number, dispute mode, date, and amount, and creates a new case for the dispute.\n| User input    | Agent response                                                        |\n|:--------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| nan      | Agent authenticates user using Authentication prebuilt component                                            |\n| nan      | Thank you, you have been successfully authenticated.                                               |\n| nan      | Remember that you can file a claim or dispute a charge on your online banking portal. Do you want to continue this conversation to file a claim or dispute?                     |\n| Yes, file a dispute  | nan                                                           |\n| nan      | Please tell us whether your dispute is related to credit card billing or transactions.                                      |\n| It's about my transaction | nan                                                           |\n| nan      | Please wait while we are fetching your account details. We have found that there are 2 accounts associated with your number. Please tell us the last 4 digits of the account you are referring to.           |\n| 1001      | nan                                                           |\n| nan      | Thank you, the last 4 digits we've collected is 1001. Is that correct?                                          |\n| Yes      | nan                                                           |\n| nan      | To begin, what was the date of the transaction?                                                |\n| nan      | Agent collects date of transaction using Date of birth prebuilt component                                          |\n| nan      | Can you confirm the amount you transferred? For example, if you want to find transaction above $100.30, say \"100\".                               |\n| 15 dollars    | nan                                                           |\n| nan      | You have entered dispute amount of $15 for the date 2023-05-0. Do you want to raise a dispute on your account?                                |\n| Yes      | nan                                                           |\n| nan      | We have created a new case with your dispute. Your case number is 448639 and has been shared with your registered email address. After checking the information you gave us, we will refund your money back to your account ending with 1001. |\n### Authenticated user with credit card dispute\nThe agent identifies that the user has been previously authenticated and retrieves information about the card registered to the user. The user selects to permanently lock the card, and the agent generates the permanently lock card request. The agent then asks the user whether they would like to reissue a new card for the permanently locked card, and creates a reissue request for the card.\n| User input     | Agent response                                            |\n|:----------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| nan       | We have found that there are 2 credit cards associated with your number. Are you looking for a card number ending in 4321?                 |\n| Yes       | nan                                               |\n| nan       | If your dispute is related to credit card billing, say \"credit card billing\".                            |\n| Credit card billing   | nan                                               |\n| nan       | Do you want to raise a dispute related to an overcharge fee or an expense on your credit card bill?                       |\n| I was overcharged for a fee | nan                                               |\n| nan       | To begin, can you confirm in which month the potential issue happened?                              |\n| 04       | nan                                               |\n| nan       | Can you confirm the amount you are looking to claim? For example, if you want to find claim above $100.30, say \"100\".                  |\n| 4567      | nan                                               |\n| nan       | Thank you! Can you please confirm the description of the fee associated with this potential issue? You can choose from annual fees, transaction fees, late payment fees, or any other fees. |\n| It was an annual fee  | nan                                               |\n| nan       | You have entered dispute amount of $4567 for the date 2023-04-01. Do you want to raise a dispute on your credit card?                  |\n| Yes       | nan                                               |\n| nan       | We have created a new case with your dispute. Your case number is 111236 and has been shared with your registered phone number. Your case will be solved within the next 3 working days. |\n## Naming conventions\nThis prebuilt component uses the following naming conventions:\n| Feature     | Format            | Example            |\n|:--------------------------|:------------------------------------------------------|:------------------------------------------------------|\n| Flow      | [Component Name]          | Disputes            |\n| Component Specific Intent | prebuilt_components_[component_name]_[intent_name] | prebuilt_components_disputes_dispute_type    |\n| Entity Type    | prebuilt_components_[component_name]_[entity_type] | prebuilt_components_disputes_dispute_reason   |\n| Webhook     | prebuilt_components_[component_name]:[webhook_action] | prebuilt_components_disputes:get_disputed_transaction |\n## Input parameters\nInput parameters are parameters that are used to configure certain behaviors of the component. The parameters will be used by one or more conditions within the flow to determine how the component should behave. Flow-scoped parameters must be set on the start page of the component as described below. Session-scoped parameters may be set either by a calling flow, or on the start page of this component.\nThis prebuilt component accepts the following input parameters:\n| Parameter Name         | Description                                                                        | Input Format |\n|:--------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------|\n| $session.params.auth_level      | (optional) Indicates the authentication level of the caller.                                                            | integer  |\n| $session.params.auth_level_req     | Indicates the level of authentication needed before a user can access their transaction history. This value is configured in the parameter presets of the page entry fulfillment in the check auth level page. By default this value is 1.                | integer  |\n| $session.params.account_auth_enabled    | Indicates whether the user should be authenticated as an account holder as described in Authentication types. This value is configured in the parameter presets of the page entry fulfillment in the check auth level page. By default this value is true.            | boolean  |\n| $session.params.card_auth_enabled     | Indicates whether the user should be authenticated as a card holder as described in Authentication types. This value is configured in the parameter presets of the page entry fulfillment in the check auth level page. By default this value is false.             | boolean  |\n| $session.params.phone_number      | (optional) Customer's registered phone number used for authentication.                                                         | string   |\n| $session.params.card_count      | (optional) Number of credit cards associated with the authenticated user.                                                         | integer  |\n| $session.params.account_count      | (optional) The number of accounts associated with the registered telephone number. These accounts include self-accounts and accounts for which the user has power of attorney.                               | integer  |\n| $session.params.last_four_digit_of_card_number | (optional) Last four digits of the card number for which the dispute may be raised. If the customer has a single card, this information is retrieved automatically post authentication. If the customer has multiple cards, the specific card number is collected from the customer.      | string   |\n| $session.params.last_four_digit_of_account_number | (optional) Last four digits of the customer account number for which the dispute may be raised. If the customer has a single account, this information is retrieved automatically post authentication. If the customer has multiple accounts, the specific account number is collected from the customer. | string   |\n| $flow.max_dispute_month       | Specifies the maximum number of months before the current date allowed for a disputed transaction date. By default, this value is -6, indicating that disputes may be raised for transactions no more than 6 months before the current date.                | integer  |\n| $flow.max_attempts        | Specifies the number of retries allowed when collecting the one-time password (OTP) from the user. The default value is 2.                                            | integer  |\n| flow.max_retry_counter       | Specifies the number of retries allowed when collecting information from the user. The default value is 2.                                                | integer  |\n## Output parameters\nOutput parameters are session parameters that will remain active after exiting the component. These parameters contain important information collected by the component. This prebuilt component provides values for the following output parameters:\n| Parameter Name     | Description                                                                                                                                                                           | Output Format |\n|:----------------------------------||:----------------|\n| auth_level      | Indicates the authentication level of the caller.                                                                                                                                                                  | integer   |\n| phone_number      | User's local phone number, without the country code, used to identify the user.                                                                                                                                                          | string   |\n| card_count      | Number of credit cards associated with the authenticated user.                                                                                                                                                               | integer   |\n| account_count      | The number of accounts associated with the registered telephone number. These accounts include self-accounts and accounts for which the user has power of attorney.                                                                                                                                     | integer   |\n| last_four_digit_of_card_number | Last four digits of the card number for which the dispute was raised.                                                                                                                                                             | string   |\n| last_four_digit_of_account_number | Last four digits of the customer account number for which the dispute was raised.                                                                                                                                                          | string   |\n| transfer_reason     | This parameter indicates the reason the flow exited, if it was not successful. The returned value is one of: agent: the end-user requested a human agent at some point during the conversation. denial_of_information: the end-user declined to share information requested by the component. max_no_input: the conversation reached the maximum number of retries for no-input events. See no-input built-in events. max_no_match: the conversation reached the maximum number of retries for no-match events. See no-match built-in events. webhook_error: a webhook error occurred. See webhook.error built-in event. webhook_not_found: a webhook URL was unreachable. See webhook.error.not-found built-in event. | string   |\n## Basic setup\nTo set up this prebuilt component:\n- [Import the prebuilt component](/dialogflow/cx/docs/concept/prebuilt-component#import) .\n- Configure the provided [flexible webhooks](/dialogflow/cx/docs/concept/webhook#flexible) with configuration describing your Dialogflow-external services, see Webhook setup below.## Webhook setup\nIn order to use this component, you will need to configure the included [flexible webhooks](/dialogflow/cx/docs/concept/webhook#flexible) to retrieve needed information from your external services.\n### Authentication\nIf you have not previously configured external services required for authentication, you will need to configure them to enable authentication of users for this component. See [Authentication webhook setup](/dialogflow/cx/docs/concept/prebuilt-component/authentication#webhook-setup) for detailed instructions.\n### Get credit card details\nThe `prebuilt_components_account_services:get_credit_card_details` webhook is used by the component to get information about the credit card(s) registered to a user.\nThe following parameters are provided by the component as inputs to the API request.\n| Parameter Name    | Description                  | Input Format |\n|:-----------------------------|:--------------------------------------------------------------------------------|:---------------|\n| $session.params.phone_number | User's local phone number, without the country code, used to identify the user. | string   |\nThe following parameters are pulled from the API response to be used by the component.\n| Parameter Name      | Description                                      | Output Format |\n|:--------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------|\n| credit_card_count      | The number of credit cards associated with the registered telephone number.                      | integer   |\n| last_four_digit_of_credit_card_number | If a user has a single credit card, the last four digits of the card number are returned. If a user has more than one card, the value of this parameter is null. | string   |\n| email         | The email registered with the account. If there is no email registered with the account, the value of this parameter is null.         | string   |### Validate credit card\nThe `prebuilt_components_disputes:validate_credit_card` webhook is used by the component to validate that a specified credit card is registered to the user.\nThe following parameters are provided by the component as inputs to the API request.\n| Parameter Name         | Description                  | Input Format |\n|:-----------------------------------------------|:-----------------------------------------------------------------------------------|:---------------|\n| $session.params.phone_number     | User's local phone number, without the country code, used to identify the user. | string   |\n| $session.params.last_four_digit_of_card_number | The last four digits of the card number the user requested to raise a dispute for. | string   |\nThe following parameters are pulled from the API response to be used by the component.\n| Parameter Name | Description         | Output Format |\n|:-----------------|:---------------------------------------------|:----------------|\n| card_found  | Indicates whether the requested card exists. | boolean   |### Validate account\nThe `prebuilt_components_account_services:validate_account` webhook is used by the component to verify that an account exists based on the user's registered phone number and the last four digits of the account number provided. The webhook also returns the account balance, if an account exists.\nThe following parameters are provided by the component as inputs to the API request.\n| Parameter Name         | Description                   | Input Format |\n|:--------------------------------------------------|:--------------------------------------------------------------------------------------|:---------------|\n| $session.params.phone_number      | User's local phone number, without the country code, used to identify the user.  | string   |\n| $session.params.last_four_digit_of_account_number | The last four digits of the account number the user requested to raise a dispute for. | string   |\nThe following parameters are pulled from the API response to be used by the component.\n| Parameter Name | Description                        | Output Format |\n|:-----------------|:----------------------------------------------------------------------------------------------------------|:----------------|\n| account_found | Indicates whether an account with the provided last four digits exists for the user's registered account. | boolean   |\n| balance   | The amount of the current balance on the account, if it exists.           | number   |### Validate transaction\nThe `prebuilt_components_disputes:validate_transaction` webhook is used by the component to validate whether a specified transaction exists.\nThe following parameters are provided by the component as inputs to the API request.\n| Parameter Name    | Description                             | Input Format |\n|:-----------------------------|:-------------------------------------------------------------------------------------------------------------------------------|:---------------|\n| $session.params.phone_number | User's local phone number, without the country code, used to identify the user.            | string   |\n| $flow.dispute_type   | The type of the disputed transaction. Valid values are defined by the prebuilt_components_disputes_dispute_type custom entity. | string   |\n| $flow.dispute_date   | The date of the disputed transaction in YYYY-MM-DD format.                  | string   |\n| $flow.dispute_amount   | The amount of the disputed transaction.                      | integer  |\n| $flow.last_four_digits  | The last four digits of the credit card or account number the disputed transaction is on.          | string   |\nThe following parameters are pulled from the API response to be used by the component.\n| Parameter Name | Description           | Output Format |\n|:------------------|:----------------------------------------------------|:----------------|\n| transaction_found | Indicates whether the requested transaction exists. | boolean   |### Create dispute case\nThe `prebuilt_components_disputes:create_dispute_case` webhook is used by the component to create a new case for a dispute.\nThe following parameters are provided by the component as inputs to the API request.\n| Parameter Name    | Description                           | Input Format |\n|:-----------------------------|:-----------------------------------------------------------------------------------------------------------------------|:---------------|\n| $session.params.phone_number | User's local phone number, without the country code, used to identify the user.          | string   |\n| $flow.dispute_type   | The type of the dispute. Valid values are defined by the prebuilt_components_disputes_dispute_type custom entity.  | string   |\n| $flow.dispute_date   | The date of the disputed transaction in YYYY-MM-DD format.                | string   |\n| $flow.dispute_amount   | The amount of the disputed transaction.                    | integer  |\n| $flow.dispute_reason   | The reason for the dispute. Valid values are defined by the prebuilt_components_disputes_dispute_reason custom entity. | string   |\n| $flow.dispute_fee_type  | Fee type for the dispute. Valid values are defined by the prebuilt_components_disputes_fee_types custom entity.  | string   |\n| $flow.last_four_digits  | The last four digits of the credit card or account number the disputed transaction is on.        | string   |\nThe following parameters are pulled from the API response to be used by the component.\n| Parameter Name  | Description        | Output Format |\n|:--------------------|:-----------------------------------------|:----------------|\n| dispute_case_number | The case number for the created dispute. | integer   |### Complete\nYour agent and its webhooks should now be set up and ready to test.", "guide": "Dialogflow"}