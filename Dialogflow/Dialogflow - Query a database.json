{"title": "Dialogflow - Query a database", "url": "https://cloud.google.com/dialogflow/cx/docs/tutorials/deploy/database", "abstract": "# Dialogflow - Query a database\nYour webhook currently uses hardcoded data in the `cruisePlanCoverage` function. In this step of the tutorial, you will create a [Spanner](/spanner/docs) database, populate it with covered destinations, and update your function to query the database.\n", "content": "## Project configuration\nIt is important that your Dialogflow agent and the database are both in the same project. This is the easiest way for your function to have secure access to your database. Also, you must enable the Spanner API.\n- Before creating the database, select your project from the Google Cloud console. [Go to project selector](https://console.cloud.google.com/projectselector2/home/dashboard) \n- Enable the Spanner API for the project. [Enable the Spanner API](https://console.cloud.google.com/flows/enableapi?apiid=spanner.googleapis.com) ## Create a Spanner instance\nWhen you first use Spanner, you must create an instance, which is an allocation of resources that are used by Spanner databases in that instance.\n- In the Google Cloud console, go to the **Spanner Instances** page. [Go to Spanner instances](https://console.cloud.google.com/spanner/instances) \n- Click **Create instance** .\n- For the instance name, enter **Tutorial Instance** .\n- The instance ID is automatically entered based on the instance name.\n- In **Choose your configuration** , retain the default option **Regional** and select the same region [location](/dialogflow/cx/docs/concept/region#avail) that you chose when creating the function.\n- In **Allocate compute capacity** , enter 100 processing units. This provides a minimal capacity for the tutorial.\n- Click **Create** . The Google Cloud console displays the **Overview** page for the instance you created.## Create a Spanner database\nNow that you have an instance, you need to create a database. To create a database:\n- In the instance **Overview** page, click **Create database** .\n- For the database name, enter **tutorial-database** .\n- Select the **Google Standard SQL** database dialect.\n- Click **Create** . The Google Cloud console displays the **Overview** page for the database you created.## Create a table for your database\nNow that you have a database, you need to create a table for the database. To create a table:\n- In the Tables section of the database **Overview** page, click **Create table** .\n- In the **Write DDL statements** page, enter:```\nCREATE TABLE Destinations (\u00a0 Destination STRING(1024),\u00a0 Covered BOOL,) PRIMARY KEY(Destination);\n```\n- Click **Submit** . The Google Cloud console returns to the database **Overview** page and shows that **Schema updates** are underway. Wait until the update is complete.## Insert data into your table\nNow that your database has a table, you need to add data to the table. To add data:\n- In the list of tables on the database **Overview** page, click the Destinations table. The Google Cloud console displays the Destinations table's **Schema** page.\n- In the left navigation menu, click **Data** to display the Destinations table's **Data** page.\n- Click **Insert** . The Google Cloud console displays the Destinations table's **Query** page with a new query tab that contains `INSERT` and `SELECT` statements. Overwrite those statements with the following:```\nINSERT INTO Destinations (Destination, Covered)VALUES('anguilla', TRUE),\u00a0 \u00a0 \u00a0 ('canada', TRUE),\u00a0 \u00a0 \u00a0 ('china', TRUE),\u00a0 \u00a0 \u00a0 ('italy', TRUE),\u00a0 \u00a0 \u00a0 ('mexico', TRUE),\u00a0 \u00a0 \u00a0 ('spain', FALSE);\n```\n- Click **Run** .\n- In the left navigation menu, click **Data** again to display the Destination table's data. Confirm that the table contains the desired data.## Update the Cloud Function to query the database\nThe `cruisePlanCoverage` function in the webhook code checks whether specific environment variables are set with information for connecting to the database. If these environment variables are not set, the function uses a hardcoded list of destinations.\nNow that you have a database set up, update your Cloud Function to set required environment variables:\n- Open the Cloud Functions overview page. [Go to Cloud Functions overview](https://console.cloud.google.com/functions/list) \n- Click the tutorial-telecommunications-webhook function to go to its details page.\n- Click **Edit** .\n- Open the **Runtime, build and connections settings** section.\n- Select the **Runtime** tab.\n- Add the following variables in the Runtime environment variables section:- `PROJECT_ID`: your project ID\n- `SPANNER_INSTANCE_ID`: your Spanner instance ID (probably`tutorial-instance`)\n- `SPANNER_DATABASE_ID`: your spanner database ID (probably`tutorial-database`)\n- Click **Next** .\n- Click **Deploy** .\n- Wait until the status indicator shows that the function has successfully deployed.## Test your agent\nYour agent is now ready to try. Click the **Test Agent** button from the Dialogflow console to open the simulator. Attempt to have the following conversation with the agent:\n| Conversational turn | You       | Agent                                                |\n|----------------------:|:----------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|      1 | Hello      | Hi! I'm the virtual telecommunications agent. I can help you resolve billing and plan questions, troubleshoot, and add travel and cruise plans. How can I assist you today?       |\n|      2 | I want to add a cruise plan | Let me take a look for you. What is your phone number with us?                                  |\n|      3 | 123-123-1234    | How many days is your cruise?                                          |\n|      4 | 7       | Option 1 includes talk and text. It costs $[XX]/day. More info here [URL]. Option 2 includes talk, text and data. It costs $[XX]/day. More info here [URL]. Which cruise plan would you like to add? |\n|      5 | Option 1     | Got it. I've added that plan to your account. While on your cruise, you may also need coverage on land. What port will you be stopping at?               |\n|      6 | Italy      | And, how many days are you spending there?                                       |\n|      7 | 3       | Great news! Italy has free coverage on land. You're all set. Is there anything else I can help you with today?                      |\nIf you examine the code, Italy is not in the hardcoded list of covered destinations. This means that your webhook has successfully connected to the database, which does include Italy.\n## Troubleshooting\nThe webhook code includes logging statements. If you are having issues, try [viewing the logs](/functions/docs/monitoring/logging) for your Cloud Function.\nIf your function is not connecting to the database, and you see a permission error in the logs, you may need to fix the role for the default service account used by your function. This service account is of the form `` `@appspot.gserviceaccount.com` . You can fix this in one of the following ways:\n- If the default service account is shown on the IAM main page, [change permissions for the service account](/functions/docs/securing/function-identity#default) . The role will work, but you may want a more granular role in a production scenario. [Go to the IAM main page](https://console.cloud.google.com/iam-admin/iam) \n- If the a default service account is not shown on the IAM main page, [grant the required role](/iam/docs/grant-role-console#grant_an_iam_role) by adding the service account as a new principal.\n- Alternatively, you can [use a service account that you create](/functions/docs/securing/function-identity#individual) .## More information\nFor more information about the steps above, see:\n- [Using Cloud Spanner with Cloud Functions](/functions/docs/tutorials/use-cloud-spanner) \n- [Create and query a database by using the Google Cloud console](/spanner/docs/create-query-database-console) \n- [Google Standard SQL data definition language](/spanner/docs/reference/standard-sql/data-definition-language) \n- [Google Standard SQL data manipulation language](/spanner/docs/reference/standard-sql/dml-syntax)", "guide": "Dialogflow"}