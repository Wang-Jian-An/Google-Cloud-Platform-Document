{"title": "Dialogflow - Manage pages with the API", "url": "https://cloud.google.com/dialogflow/cx/docs/how/page-manage", "abstract": "# Dialogflow - Manage pages with the API\nIn most cases, you will use the console to manage pages. In advanced scenarios, you may wish to use the API to manage pages. This guide describes how to create, list, and delete pages using the API.\n", "content": "## Create page\nTo create a page for your agent, call the `create` method on the `Page` type.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow-cx/src/main/java/dialogflow/cx/CreateSimplePage.java) \n```\nimport com.google.cloud.dialogflow.cx.v3.CreatePageRequest;import com.google.cloud.dialogflow.cx.v3.Page;import com.google.cloud.dialogflow.cx.v3.PagesClient;import java.io.IOException;public class CreateSimplePage {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String agentId = \"my-agent-id\";\u00a0 \u00a0 String flowId = \"my-flow-id\";\u00a0 \u00a0 String location = \"my-location\";\u00a0 \u00a0 String displayName = \"my-display-name\";\u00a0 \u00a0 createPage(projectId, agentId, flowId, location, displayName);\u00a0 }\u00a0 // DialogFlow API Create Page Sample.\u00a0 // Creates a page from the provided parameters\u00a0 public static Page createPage(\u00a0 \u00a0 \u00a0 String projectId, String agentId, String flowId, String location, String displayName)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 Page response;\u00a0 \u00a0 CreatePageRequest.Builder createRequestBuilder = CreatePageRequest.newBuilder();\u00a0 \u00a0 Page.Builder pageBuilder = Page.newBuilder();\u00a0 \u00a0 pageBuilder.setDisplayName(displayName);\u00a0 \u00a0 createRequestBuilder\u00a0 \u00a0 \u00a0 \u00a0 .setParent(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"projects/\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + projectId\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"/locations/\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + location\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"/agents/\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + agentId\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"/flows/\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + flowId)\u00a0 \u00a0 \u00a0 \u00a0 .setPage(pageBuilder);\u00a0 \u00a0 // Make API request to create page\u00a0 \u00a0 // Note: close() needs to be called on the PagesClient object to clean up resources\u00a0 \u00a0 // such as threads. In the example below, try-with-resources is used,\u00a0 \u00a0 // which automatically calls close().\u00a0 \u00a0 try (PagesClient client = PagesClient.create()) {\u00a0 \u00a0 \u00a0 response = client.createPage(createRequestBuilder.build());\u00a0 \u00a0 \u00a0 System.out.println(\"Successfully created page!\");\u00a0 \u00a0 \u00a0 return response;\u00a0 \u00a0 }\u00a0 }\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow-cx/create-page.js) \n```\nasync function createPage(projectId, agentId, flowId, location, displayName) {\u00a0 const pagesClient = new PagesClient();\u00a0 const createPageRequest = {\u00a0 \u00a0 parent: `projects/${projectId}/locations/${location}/agents/${agentId}/flows/${flowId}`,\u00a0 \u00a0 page: {\u00a0 \u00a0 \u00a0 displayName: displayName,\u00a0 \u00a0 },\u00a0 };\u00a0 const response = await pagesClient.createPage(createPageRequest);\u00a0 console.log(response);}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow-cx/page_management.py) \n```\nasync def create_page(project_id, agent_id, flow_id, location, displayName):\u00a0 \u00a0 pages_client = PagesAsyncClient()\u00a0 \u00a0 page = Page()\u00a0 \u00a0 page.display_name = displayName\u00a0 \u00a0 request = CreatePageRequest()\u00a0 \u00a0 request.parent = (\u00a0 \u00a0 \u00a0 \u00a0 \"projects/\"\u00a0 \u00a0 \u00a0 \u00a0 + project_id\u00a0 \u00a0 \u00a0 \u00a0 + \"/locations/\"\u00a0 \u00a0 \u00a0 \u00a0 + location\u00a0 \u00a0 \u00a0 \u00a0 + \"/agents/\"\u00a0 \u00a0 \u00a0 \u00a0 + agent_id\u00a0 \u00a0 \u00a0 \u00a0 + \"/flows/\"\u00a0 \u00a0 \u00a0 \u00a0 + flow_id\u00a0 \u00a0 )\u00a0 \u00a0 request.page = page\u00a0 \u00a0 response = await pages_client.create_page(request=request)\u00a0 \u00a0 return response\n```\n## List pages\nTo list the pages for your agent, call the `list` method on the `Page` type.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow-cx/src/main/java/dialogflow/cx/ListPages.java) \n```\nimport com.google.cloud.dialogflow.cx.v3.ListPagesRequest;import com.google.cloud.dialogflow.cx.v3.ListPagesRequest.Builder;import com.google.cloud.dialogflow.cx.v3.Page;import com.google.cloud.dialogflow.cx.v3.PagesClient;import java.io.IOException;public class ListPages {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String agentId = \"my-agent-id\";\u00a0 \u00a0 String flowId = \"my-flow-id\";\u00a0 \u00a0 String location = \"my-location\";\u00a0 \u00a0 listPages(projectId, agentId, flowId, location);\u00a0 }\u00a0 // DialogFlow API List Pages Sample.\u00a0 // Lists all pages from the provided parameters\u00a0 public static void listPages(String projectId, String agentId, String flowId, String location)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 // Note: close() needs to be called on the PagesClient object to clean up resources\u00a0 \u00a0 // such as threads. In the example below, try-with-resources is used,\u00a0 \u00a0 // which automatically calls close().\u00a0 \u00a0 try (PagesClient client = PagesClient.create()) {\u00a0 \u00a0 \u00a0 Builder listRequestBuilder = ListPagesRequest.newBuilder();\u00a0 \u00a0 \u00a0 String parentPath =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 String.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"projects/%s/locations/%s/agents/%s/flows/%s\", projectId, location, agentId, flowId);\u00a0 \u00a0 \u00a0 listRequestBuilder.setParent(parentPath);\u00a0 \u00a0 \u00a0 listRequestBuilder.setLanguageCode(\"en\");\u00a0 \u00a0 \u00a0 // Make API request to list all pages in the project\u00a0 \u00a0 \u00a0 for (Page element : client.listPages(listRequestBuilder.build()).iterateAll()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(element);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow-cx/list-page.js) \n```\nasync function listPages(projectId, agentId, flowId, location) {\u00a0 const pagesClient = new PagesClient();\u00a0 const listPageRequest = {\u00a0 \u00a0 parent: `projects/${projectId}/locations/${location}/agents/${agentId}/flows/${flowId}`,\u00a0 \u00a0 languageCode: 'en',\u00a0 };\u00a0 const response = await pagesClient.listPages(listPageRequest);\u00a0 console.log(response);}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow-cx/page_management.py) \n```\nasync def list_page(project_id, agent_id, flow_id, location):\u00a0 \u00a0 pages_client = PagesAsyncClient()\u00a0 \u00a0 request = ListPagesRequest()\u00a0 \u00a0 request.parent = (\u00a0 \u00a0 \u00a0 \u00a0 f\"projects/{project_id}/locations/{location}/agents/{agent_id}/flows/{flow_id}\"\u00a0 \u00a0 )\u00a0 \u00a0 request.language_code = \"en\"\u00a0 \u00a0 response = await pages_client.list_pages(request=request)\u00a0 \u00a0 return response\n```\n## Delete pages\nTo delete a page for your agent, call the `delete` method on the `Page` type.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow-cx/src/main/java/dialogflow/cx/DeletePage.java) \n```\nimport com.google.cloud.dialogflow.cx.v3.DeletePageRequest;import com.google.cloud.dialogflow.cx.v3.DeletePageRequest.Builder;import com.google.cloud.dialogflow.cx.v3.PagesClient;import java.io.IOException;public class DeletePage {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String agentId = \"my-agent-id\";\u00a0 \u00a0 String flowId = \"my-flow-id\";\u00a0 \u00a0 String pageId = \"my-page-id\";\u00a0 \u00a0 String location = \"my-location\";\u00a0 \u00a0 deletePage(projectId, agentId, flowId, pageId, location);\u00a0 }\u00a0 // DialogFlow API Delete Page Sample.\u00a0 // Deletes a page from the provided parameters\u00a0 public static void deletePage(\u00a0 \u00a0 \u00a0 String projectId, String agentId, String flowId, String pageId, String location)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 // Note: close() needs to be called on the PagesClient object to clean up resources\u00a0 \u00a0 // such as threads. In the example below, try-with-resources is used,\u00a0 \u00a0 // which automatically calls close().\u00a0 \u00a0 try (PagesClient client = PagesClient.create()) {\u00a0 \u00a0 \u00a0 Builder deleteRequestBuilder = DeletePageRequest.newBuilder();\u00a0 \u00a0 \u00a0 deleteRequestBuilder.setName(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"projects/\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + projectId\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"/locations/\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + location\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"/agents/\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + agentId\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"/flows/\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + flowId\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"/pages/\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + pageId);\u00a0 \u00a0 \u00a0 // Make API request to delete page\u00a0 \u00a0 \u00a0 client.deletePage(deleteRequestBuilder.build());\u00a0 \u00a0 \u00a0 System.out.println(\"Successfully deleted page!\");\u00a0 \u00a0 }\u00a0 }\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow-cx/delete-page.js) \n```\nasync function deletePage(projectId, agentId, flowId, pageId, location) {\u00a0 const pagesClient = new PagesClient();\u00a0 const req = {\u00a0 \u00a0 name: `projects/${projectId}/locations/${location}/agents/${agentId}/flows/${flowId}/pages/${pageId}`,\u00a0 };\u00a0 const response = await pagesClient.deletePage(req);\u00a0 console.log(response);}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow-cx/page_management.py) \n```\nasync def delete_page(project_id, agent_id, flow_id, page_id, location):\u00a0 \u00a0 pages_client = PagesAsyncClient()\u00a0 \u00a0 request = DeletePageRequest()\u00a0 \u00a0 request.name = f\"projects/{project_id}/locations/{location}/agents/{agent_id}/flows/{flow_id}/pages/{page_id}\"\u00a0 \u00a0 response = await pages_client.delete_page(request=request)\u00a0 \u00a0 return response\n```", "guide": "Dialogflow"}