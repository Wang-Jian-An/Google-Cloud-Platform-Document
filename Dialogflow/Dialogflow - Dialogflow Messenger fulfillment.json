{"title": "Dialogflow - Dialogflow Messenger fulfillment", "url": "https://cloud.google.com/dialogflow/cx/docs/concept/integration/dialogflow-messenger/fulfillment", "abstract": "# Dialogflow - Dialogflow Messenger fulfillment\nWhen creating a custom card [fulfillment](/dialogflow/cx/docs/concept/fulfillment) , you can create **Text Responses** and **Custom Payloads** . The text responses are used for plain text and Markdown agent responses, and the custom payloads are used for rich responses. The custom payload format for all response types has the following basic structure:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"type-id\",\u00a0 \u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"type-id\",\u00a0 \u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ],\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"type-id\",\u00a0 \u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"type-id\",\u00a0 \u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\nNote that the `richContent` value allows one outer and multiple inner arrays. Responses within an inner array are bound together in a single visual card. When the outer array contains multiple inner arrays, multiple cards are shown\u2014one for each inner array.\nThe remaining subsections describe the various types of responses you can configure for a custom payload.\n", "content": "## Text response\n**Note:** Text responses don't require a payload, they can be entered directly as an agent response.\nThe text response supports plain text and Markdown. Here are a few Markdown examples:\n- `*Italic*`\n- `**Bold**`\n- `# Title`\n- `[Link text](Link URL)`\n- `![](Image URL)` **Note:** To enable images in Markdown, the `url-allowlist` attribute needs to be specified accordingly.\n- Tables:```\nHeader 1 | Header 2-------- | --------Cell 1 \u00a0 | Cell 2\n```## Info response type\nThe info response type is a simple title card that users can click or touch.\n**Note:** If you are using a data store agent for fulfillment, the **Link maximum** value in the [Data store response options](/dialogflow/cx/docs/concept/data-store-agent#data_store_response_options) must be unset or set to 1 in order to use this response type.\nThe following table describes the fields:\n| Name   | Type | Description        |\n|:--------------|:-------|:-----------------------------------------|\n| type   | string | Response type: \"info\"     |\n| title   | string | Card title        |\n| subtitle  | string | Card subtitle       |\n| image   | object | Image         |\n| image.rawUrl | string | Public URL for image      |\n| anchor  | object | Anchor to follow when element is clicked |\n| anchor.href | string | URL of the anchor      |\n| anchor.target | string | Target of the anchor, defaults to _blank |\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"info\",\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"Info item title\",\u00a0 \u00a0 \u00a0 \u00a0 \"subtitle\": \"Info item subtitle\",\u00a0 \u00a0 \u00a0 \u00a0 \"image\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"rawUrl\": \"https://example.com/images/logo.png\"\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://example.com\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\n## Description response type\nThe description response type is an informative card that can have multiple lines of text.\nThe following table describes the fields:\n| Name | Type   | Description             |\n|:-------|:--------------|:--------------------------------------------------------------|\n| type | string  | Response type: \"description\"         |\n| title | string  | Card title             |\n| text | array<string> | Array of strings, where each string is rendered on a new line |\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"description\",\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"Description title\",\u00a0 \u00a0 \u00a0 \u00a0 \"text\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"This is text line 1.\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"This is text line 2.\"\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\n## Image response type\nThe image response type is an image card that users can click or touch. The response type supports a reference chip that allows to add the image's source as an anchor link together with a short descriptive text and an icon.\nThe following table describes the fields:\n| Name     | Type | Description             |\n|:------------------------|:-------|:---------------------------------------------------------------|\n| type     | string | Response type: \"image\"           |\n| rawUrl     | string | Public URL for image           |\n| accessibilityText  | string | Alt text for image            |\n| reference.text   | string | Text to show in reference chip         |\n| reference.anchor.href | string | URL of the reference chip          |\n| reference.anchor.target | string | Target of the anchor in the reference chip, defaults to _blank |\n| reference.image.rawUrl | string | Image to show in the reference chip       |\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"image\",\u00a0 \u00a0 \u00a0 \u00a0 \"rawUrl\": \"https://example.com/images/logo.png\",\u00a0 \u00a0 \u00a0 \u00a0 \"accessibilityText\": \"Example logo\",\u00a0 \u00a0 \u00a0 \u00a0 \"reference\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Logo\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://example.com/images/logo.png\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"image\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"rawUrl\": \"https://example.com/images/logo_small.png\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\nThe following CSS variables can be provided:\n| Properties      | Input policy | Default value | Description    |\n|:---------------------------------|:---------------|:----------------|:---------------------------|\n| df-messenger-image-border-radius | Optional  | 8px    | Border radius of the image |\n## Video response type\nThe video response type renders a video element that can either be a direct video from URL, played directly in the messenger, or a link to a video.\n| Name     | Type | Description                                   |\n|:------------------------|:-------|:----------------------------------------------------------------------------------------------------------------------------------------------------|\n| type     | string | Response type: \"video\"                                |\n| title     | string | Optional video title                                |\n| source     | object | The video's source                                 |\n| source.type    | string | A type of video source, either link or raw                           |\n| source.anchor   | object | Anchor to follow when element is clicked                           |\n| source.embeddedPlayer | string | A link type video may be embedded rather than link to the player's web page. This is only implemented for a known set of players, supports youtube. |\n| source.thumbnail  | object | Thumbnail to show for the anchor                             |\n| source.thumbnail.rawUrl | string | The URL of the thumbnail                               |\n| source.rawUrl   | string | URL for a raw type video                               |\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"video\",\u00a0 \u00a0 \u00a0 \u00a0 \"source\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"link\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://www.youtube.com/watch?v=cNfINi5CNbY\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\nThe following CSS variables can be provided:\n| Properties      | Input policy | Default value  | Description            |\n|:---------------------------------|:---------------|:------------------|:---------------------------------------------------------|\n| df-messenger-video-width   | Optional  | auto    | Width of a video (limited by max-width\\: 100%)   |\n| df-messenger-video-height  | Optional  | auto    | Height of a video          |\n| df-messenger-video-embed-width | Optional  | 560px    | Width of an embedded video (limited by max-width\\: 100%) |\n| df-messenger-video-embed-height | Optional  | 315px    | Height of an embedded video        |\n| df-messenger-video-border  | Optional  | 1px solid #e0e0e0 | Border of the video          |\n| df-messenger-video-border-radius | Optional  | 8px    | Border radius of the video        |\n## Button response type\nThe button response type is a small button with an icon that users can click or touch.\nThe following table describes the fields:\n| Name   | Type | Description                    |\n|:--------------|:-------|:----------------------------------------------------------------------------------------|\n| type   | string | Response type: \"button\"                 |\n| icon   | object | Icon for button                   |\n| icon.type  | string | Icon from the Material icon library. The default icon is an arrow      |\n| icon.color | string | Color hexcode                   |\n| image   | object | Image for the button, takes priority over icon           |\n| image.rawUrl | string | Public URL for image                 |\n| mode   | string | Optional, if set to \"blocking\", user input is disabled until the user clicks the button |\n| text   | string | Button text                    |\n| anchor  | object | Anchor to follow when element is clicked            |\n| anchor.href | string | URL of the anchor                  |\n| anchor.target | string | Target of the anchor, defaults to _blank            |\n| event   | object | Dialogflow event that is triggered when the button is clicked.       |\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"button\",\u00a0 \u00a0 \u00a0 \u00a0 \"icon\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"chevron_right\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"color\": \"#FF9800\"\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"blocking\",\u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Button text\",\u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://example.com\"\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"event\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"event\": \"\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\nThe following CSS variables can be provided:\n| Properties       | Input policy | Default value        | Description               |\n|:-----------------------------------|:---------------|:--------------------------------------------|:---------------------------------------------------------------------|\n| df-messenger-button-border   | Optional  | none          | Border of a button             |\n| df-messenger-button-border-radius | Optional  | 8px           | Border radius of a button           |\n| df-messenger-button-font-color  | Optional  | #1f1f1f          | Text color of a button            |\n| df-messenger-button-font-family | Optional  | \"Google Sans\", \"Helvetica Neue\", sans-serif | Font family of a button            |\n| df-messenger-button-font-size  | Optional  | 14px          | Font size of a button            |\n| df-messenger-button-padding  | Optional  | 12px          | Padding of a button             |\n| df-messenger-button-icon-spacing | Optional  | 12px          | Space between button icon and text         |\n| df-messenger-button-icon-font-size | Optional  | 24px          | Size of the button icon            |\n| df-messenger-button-image-size  | Optional  | 24px          | Size of the button image            |\n| df-messenger-button-image-offset | Optional  | 0           | Offset of the button image, allows negative values to offset padding |\n| df-messenger-button-text-align  | Optional  | center          | Text align of a button            |\n| df-messenger-button-text-wrap  | Optional  | normal          | Use nowrap to disallow multi-line buttons       |\n## List response type\nThe list response type is a card with multiple options users can select from.\nThe response contains an array of `list` and `divider` response types. The following table describes the `list` type:\n| Name   | Type | Description             |\n|:--------------|:-------|:--------------------------------------------------------------|\n| type   | string | Response type: \"list\"           |\n| title   | string | Option title             |\n| subtitle  | string | Option subtitle            |\n| event   | object | Dialogflow event that is triggered when the option is clicked |\n| anchor  | object | Anchor to follow when element is clicked      |\n| anchor.href | string | URL of the anchor            |\n| anchor.target | string | Target of the anchor, defaults to _blank      |\n| image   | object | Image               |\n| image.rawUrl | string | Public URL for image           |\nThe following table describes the `divider` type:\n| Name | Type | Description    |\n|:-------|:-------|:-------------------------|\n| type | string | Response type: \"divider\" |\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"list\",\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"List item 1 title\",\u00a0 \u00a0 \u00a0 \u00a0 \"subtitle\": \"List item 1 subtitle\",\u00a0 \u00a0 \u00a0 \u00a0 \"event\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"event\": \"\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"list\",\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"List item 2 title\",\u00a0 \u00a0 \u00a0 \u00a0 \"subtitle\": \"List item 2 subtitle\",\u00a0 \u00a0 \u00a0 \u00a0 \"event\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"event\": \"\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\nThe following CSS variables can be provided:\n| Properties      | Input policy | Default value  | Description                                |\n|:--------------------------------|:---------------|:------------------|:----------------------------------------------------------------------------------------------------------------------------------------|\n| df-messenger-list-padding  | Optional  | 16px    | Padding of a list element                            |\n| df-messenger-list-inset   | Optional  | 0     | Additional horizontal \"inset\" of the list element (in addition to the padding), to control the expansion of the border between elements |\n| df-messenger-list-spacing  | Optional  | 10px    | Vertical space between list elements                         |\n| df-messenger-list-border-bottom | Optional  | 1px solid #e0e0e0 | Border between list elements                           |\n## Accordion response type\nThe accordion response type is a small card that a user can click or touch to expand and reveal more text.\nThe following table describes the fields:\n| Name   | Type | Description    |\n|:-------------|:-------|:---------------------------|\n| type   | string | Response type: \"accordion\" |\n| title  | string | Accordion title   |\n| subtitle  | string | Accordion subtitle   |\n| image  | object | Image      |\n| image.rawUrl | string | Public URL for image  |\n| text   | string | Accordion text    |\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"accordion\",\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"Accordion title\",\u00a0 \u00a0 \u00a0 \u00a0 \"subtitle\": \"Accordion subtitle\",\u00a0 \u00a0 \u00a0 \u00a0 \"image\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"rawUrl\": \"https://example.com/images/logo.png\"\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Accordion text\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\n## Suggestion chip response type\nThe suggestion chip response type provides the end-user with a list of clickable suggestion chips.\nThe following table describes the fields:\n| Name     | Type   | Description                   |\n|:------------------------|:--------------|:--------------------------------------------------------------------------------------|\n| type     | string  | Response type: \"chips\"                |\n| options     | array<object> | Array of Option objects                |\n| options[].mode   | string  | Optional, if set to \"blocking\", user input is disabled until the user clicks the chip |\n| options[].text   | string  | Option text                   |\n| options[].image   | object  | Optional, option Image                |\n| options[].image.rawUrl | string  | Option public URL for image               |\n| options[].anchor  | object  | Optional, Anchor to follow when element is clicked         |\n| options[].anchor.href | string  | URL of the anchor                  |\n| options[].anchor.target | string  | Target of the anchor, defaults to _blank            |\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"chips\",\u00a0 \u00a0 \u00a0 \u00a0 \"options\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"blocking\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Chip 1\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"image\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"rawUrl\": \"https://example.com/images/logo.png\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://example.com\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Chip 2\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"image\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"rawUrl\": \"https://example.com/images/logo.png\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://example.com\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\nThe following CSS variables can be provided:\n| Properties       | Input policy | Default value        | Description             |\n|:--------------------------------------|:---------------|:--------------------------------------------|:-------------------------------------------------------------|\n| df-messenger-chips-spacing   | Optional  | 10px          | Space above the chips to the preceding message    |\n| df-messenger-chips-border-color  | Optional  | #e0e0e0          | Border color of a chip          |\n| df-messenger-chips-border-color-hover | Optional  | #e0e0e0          | Border color of a chip when hovered       |\n| df-messenger-chips-border-radius  | Optional  | 999px          | Border radius of a chip          |\n| df-messenger-chips-background   | Optional  | white          | Background of a chip           |\n| df-messenger-chips-background-hover | Optional  | rgba(68, 71, 70, 0.08)      | Background of a chip when hovered       |\n| df-messenger-chips-padding   | Optional  | 6px 16px         | Padding of a chip           |\n| df-messenger-chips-font-color   | Optional  | black          | Text color of a chip           |\n| df-messenger-chips-font-family  | Optional  | \"Google Sans\", \"Helvetica Neue\", sans-serif | Font family of a chip          |\n| df-messenger-chips-font-size   | Optional  | 14px          | Text size of a chip           |\n| df-messenger-chips-font-weight  | Optional  | normal          | Font weight of a chip          |\n| df-messenger-chips-font-weight-hover | Optional  | normal          | Font weight of a chip when hovered       |\n| df-messenger-chips-box-shadow   | Optional  | 0 2px 2px 0 rgba(0, 0, 0, 0.24)    | Box shadow of a chip           |\n| df-messenger-chips-content-align  | Optional  | flex-start         | Vertical alignment of the content (e.g. the image) in a chip |\n| df-messenger-chips-text-wrap   | Optional  | nowrap          | Use normal to allow multi-line chips       |\n## Citations response type\nThe citations response type provides the end-user with a list of clickable citation links.\n**Note:** If you are using a data store agent for fulfillment, the **Link maximum** value in the [Data store response options](/dialogflow/cx/docs/concept/data-store-agent#data_store_response_options) must be set to 2 or more in order to use this response type.\nThe following table describes the fields:\n| Name      | Type   | Description        |\n|:--------------------------|:--------------|:-----------------------------------------|\n| type      | string  | Response type: \"match_citations\"   |\n| citations     | array<object> | Array of Citation objects    |\n| citations[].title   | string  | Citation title       |\n| citations[].subtitle  | string  | Citation subtitle (currently ignored) |\n| citations[].anchor  | object  | Anchor to follow when element is clicked |\n| citations[].anchor.href | string  | URL of the anchor      |\n| citations[].anchor.target | string  | Target of the anchor, defaults to _blank |\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"match_citations\",\u00a0 \u00a0 \u00a0 \u00a0 \"citations\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"Source 1\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"subtitle\": \"\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://example.com/1\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"Source 2\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"subtitle\": \"\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://example.com/2\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\nThe following CSS variables can be provided:\n| Properties         | Input policy | Default value        | Description                           |\n|:-------------------------------------------|:---------------|:--------------------------------------------|:--------------------------------------------------------------------------------------------------------------------|\n| df-messenger-citations-spacing    | Optional  | 10px          | Space above the citations to the preceding message                 |\n| df-messenger-citations-message-display  | Optional  | block          | Defines display of the note above citations, allowed values are block or none          |\n| df-messenger-citations-message-font-color | Optional  | #041e49          | Text color of the note above citations                    |\n| df-messenger-citations-message-font-size | Optional  | 12px          | Text size of the note above citations                    |\n| df-messenger-citations-flex-direction  | Optional  | row           | Flex direction property of the citations, recommended to use row (horizontal with line breaks) or column (vertical) |\n| df-messenger-citations-border-color  | Optional  | #1a73e8          | Border color of a citation                       |\n| df-messeenger-citations-border-color-hover | Optional  | #1a73e8          | Border color of a citation when hovered                    |\n| df-messenger-citations-border-radius  | Optional  | 4px           | Border radius of a citation                       |\n| df-messenger-citations-padding    | Optional  | 8px           | Padding of a citation                        |\n| df-messenger-citations-background   | Optional  | white          | Background of a citation                       |\n| df-messenger-citations-background-hover | Optional  | rgba(68, 71, 70, 0.08)      | Background of a citation when hovered                    |\n| df-messenger-citations-font-color   | Optional  | #1a73e8          | Text color of a citation                       |\n| df-messenger-citations-font-family   | Optional  | \"Google Sans\", \"Helvetica Neue\", sans-serif | Font family of a citation                       |\n| df-messenger-citations-font-size   | Optional  | 11px          | Text size of a citation                        |\n| df-messenger-citations-icon-font-size  | Optional  | 14px          | Text size of the icon of a citation                     |\n| df-messenger-citations-font-weight   | Optional  | normal          | Font weight of a citation                       |\n| df-messenger-citations-font-weight-hover | Optional  | normal          | Font weight of a citation when hovered                    |\n| df-messenger-citations-icon-spacing  | Optional  | 4px           | Space between icon and text in a citation                   |\n| df-messenger-citations-box-shadow   | Optional  | none          | Box shadow of a citation                       |\n## HTML response type\nThe HTML response type provides the end-user with a HTML message.\nThe following table describes the fields:\n| Name | Type | Description        |\n|:-------|:-------|:-------------------------------------------|\n| type | string | Response type: \"html\"      |\n| html | string | Text content of the message, supports HTML |\nSupported HTML tags:\n- `a`- Anchor element (used for creating hyperlinks)\n- `b`- Bold element (used for bolding text)\n- `i`- Italic element (used for italicizing text)\n- `u`- Underline element (used for underlining text)\n- `h1`- Heading 1 element (used for the main heading of a page)\n- `h2`- Heading 2 element (used for subheadings)\n- `h3`- Heading 3 element (used for sub-subheadings)\n- `p`- Paragraph element (used for creating paragraphs of text)\n- `br`- Line break element (used for creating line breaks within a paragraph)\n- `table`- Table element (used for creating tables)\n- `tr`- Table row element (used for creating rows within a table)\n- `thead`- Table header element (used for creating a header within a table)\n- `th`- Table header data or cell element (used for creating cells within a table header row)\n- `tbody`- Table body element (used for creating a body within a table)\n- `td`- Table data or cell element (used for creating cells within a table row)\n- `ul`- Unordered list element (used for creating bulleted lists)\n- `ol`- Ordered list element (used for creating numbered lists)\n- `li`- List item element (used for creating items within a list)\n- `img`- Image element (used for showing an image, see also`url-allowlist` [HTML customization](/dialogflow/cx/docs/concept/integration/dialogflow-messenger/html) )\n- `div`- Container element\n- `span`- Inline container element\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"html\",\u00a0 \u00a0 \u00a0 \u00a0 \"html\": \"<b>Bold text</b> <i>Italic text</i> <u>Underlined text</u>\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\n### Styling HTML and Markdown\nFor anchor elements (HTML `a` element and Markdown link), the following CSS variables can be provided:\n| Properties       | Input policy | Default value | Description        |\n|:-------------------------------------|:---------------|:----------------|:----------------------------------------|\n| df-messenger-link-decoration   | Optional  | underline  | Decoration of a link element   |\n| df-messenger-link-font-color   | Optional  | #0b57d0   | Font color of an unvisited link element |\n| df-messenger-link-visited-font-color | Optional  | #0b57d0   | Font color of a visited link element |\n| df-messenger-link-hover-font-color | Optional  | #0b57d0   | Font color when hovering a link element |\n| df-messenger-link-background   | Optional  | transparent  | Background of a link element   |\n| df-messenger-link-padding   | Optional  | 0    | Padding of a link element    |\n| df-messenger-link-border    | Optional  | none   | Border of a link element    |\n| df-messenger-link-border-radius  | Optional  | 0    | Border radius of a link element   |\nFor table elements (HTML `table` element and Markdown tables), the following CSS variables can be provided:\n| Properties         | Input policy | Default value | Description               |\n|:--------------------------------------------|:---------------|:----------------|:----------------------------------------------------------------------|\n| df-messenger-table-font-size    | Optional  | 14px   | Text size in a table element           |\n| df-messenger-table-font-color    | Optional  | #1f1f1f   | Text color in a table element           |\n| df-messenger-table-align     | Optional  | left   | Alignment of text in a table cell          |\n| df-messenger-table-padding     | Optional  | 0    | Padding in a table cell            |\n| df-messenger-table-border-collapse   | Optional  | separate  | Border collapse mode of a table, use separate to enable border-radius |\n| df-messenger-table-border-radius   | Optional  | 0    | Border radius of a table            |\n| df-messenger-table-header-border-radius  | Optional  | 0    | Border radius of the table header          |\n| df-messenger-table-border-top    | Optional  | none   | Border top of a table row            |\n| df-messenger-table-border-top-first   | Optional  | none   | Border top of the first table row          |\n| df-messenger-table-border-bottom   | Optional  | none   | Border bottom of a table row           |\n| df-messenger-table-border-bottom-last  | Optional  | none   | Border bottom of the last table row         |\n| df-messenger-table-border-left    | Optional  | none   | Border left of a table cell           |\n| df-messenger-table-border-left-first  | Optional  | none   | Border left of the first table cell in a row       |\n| df-messenger-table-border-right    | Optional  | none   | Border right of a table cell           |\n| df-messenger-table-border-right-last  | Optional  | none   | Border right of the last table cell in a row       |\n| df-messenger-table-background    | Optional  | transparent  | Background of a table row            |\n| df-messenger-table-even-background   | Optional  | transparent  | Background of even numbered table rows        |\n| df-messenger-table-odd-background   | Optional  | transparent  | Background of odd numbered table rows         |\n| df-messenger-table-header-font-size   | Optional  | 14px   | Text size in a table header element         |\n| df-messenger-table-header-font-weight  | Optional  | bold   | Font weight in a table header element         |\n| df-messenger-table-header-font-color  | Optional  | #1f1f1f   | Text color in a table header element         |\n| df-messenger-table-header-align    | Optional  | left   | Alignment of text in a table header cell        |\n| df-messenger-table-header-padding   | Optional  | 0    | Padding in a table header cell          |\n| df-messenger-table-header-border-top  | Optional  | none   | Border top of the table header row         |\n| df-messenger-table-header-border-bottom  | Optional  | none   | Border bottom of the table header row         |\n| df-messenger-table-header-border-left  | Optional  | none   | Border left of a cell in the table header row       |\n| df-messenger-table-header-border-left-first | Optional  | none   | Border left of the first cell in the table header row     |\n| df-messenger-table-header-border-right  | Optional  | none   | Border right of a cell in the table header row      |\n| df-messenger-table-header-border-right-last | Optional  | none   | Border right of the last cell in a table header row     |\n| df-messenger-table-header-background  | Optional  | transparent  | Background of the table header row         |\n## Custom Template response type\nThe custom template response type renders a [custom element](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements) defined on the customer's website. The element is not placed inside a card and always stands on its own.\nThe following table describes the fields:\n| Name | Type | Description       |\n|:--------|:-------|:--------------------------------------|\n| type | string | Response type: \"custom_template\"  |\n| name | string | Name of the custom element   |\n| payload | Object | Payload to pass to the custom element |\nFor example:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"custom_template\",\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"custom-element-example\",\u00a0 \u00a0 \u00a0 \u00a0 \"payload\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Hello World\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\nOn your website, the custom element needs to be registered under the exact name from the `name` field of the response. The `payload` field is passed to the custom element as `dfPayload` after construction (but before [connectedCallback](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements#custom_element_lifecycle_callbacks) ). The field may contain arbitrary JSON. In addition, `dfResponseId` is passed to the element.\nUsing the response from the example, here is an example implementation of a custom element:\n```\nclass CustomElementExample extends HTMLElement {\u00a0 constructor() {\u00a0 \u00a0 super();\u00a0 \u00a0 // The `dfPayload` field will be provided before `connectedCallback` is\u00a0 \u00a0 // being called.\u00a0 \u00a0 this.dfPayload = null;\u00a0 \u00a0 // The `dfResponseId` field will be provided before `connectedCallback` is\u00a0 \u00a0 // being called.\u00a0 \u00a0 this.dfResponseId = null;\u00a0 \u00a0 // It is not strictly required but recommended to contain the custom\u00a0 \u00a0 // element in a shadow root.\u00a0 \u00a0 // https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\u00a0 \u00a0 this.renderRoot = this.attachShadow({mode: 'open'});\u00a0 }\u00a0 /** Web component Lifecycle method. */\u00a0 connectedCallback() {\u00a0 \u00a0 const div = document.createElement('div');\u00a0 \u00a0 // The `.text` must match the payload's structure in `richContent.payload`.\u00a0 \u00a0 div.innerText = this.dfPayload.text;\u00a0 \u00a0 this.renderRoot.appendChild(div);\u00a0 }}(function() {\u00a0 // Registers the element. This name must match the name in\u00a0 // `richContent.payload`.\u00a0 customElements.define('custom-element-example', CustomElementExample);})();\n```\n## Combining response types\nThe individual rich message elements for Dialogflow Messenger can be used to construct a custom card to fit your needs.\nHere's an example using some of the elements listed in the fulfillment section:\n```\n{\u00a0 \"richContent\": [\u00a0 \u00a0 [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"image\",\u00a0 \u00a0 \u00a0 \u00a0 \"rawUrl\": \"https://example.com/images/logo.png\",\u00a0 \u00a0 \u00a0 \u00a0 \"accessibilityText\": \"Dialogflow across platforms\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"info\",\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"Dialogflow\",\u00a0 \u00a0 \u00a0 \u00a0 \"subtitle\": \"Build natural and rich conversational experiences\",\u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://cloud.google.com/dialogflow/docs\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"chips\",\u00a0 \u00a0 \u00a0 \u00a0 \"options\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Case Studies\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://cloud.google.com/dialogflow/case-studies\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"text\": \"Docs\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"anchor\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"href\": \"https://cloud.google.com/dialogflow/docs\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 ]}\n```\nThe following CSS variables can be provided:\n| Properties           | Input policy | Default value     | Description                   |\n|:---------------------------------------------------|:---------------|:--------------------------------|:--------------------------------------------------------------------------------------|\n| df-messenger-card-background      | Optional  | white       | Background of a custom card               |\n| df-messenger-card-padding       | Optional  | 16px       | Padding of elements in a custom card             |\n| df-messenger-card-border       | Optional  | 1px solid #e0e0e0    | Border of a custom card                |\n| df-messenger-card-border-radius     | Optional  | 8px        | Border radius of a custom card              |\n| df-messenger-card-border-top-left-radius   | Optional  | 8px        | Border radius top left of a custom card            |\n| df-messenger-card-border-top-right-radius   | Optional  | 8px        | Border radius top right of a custom card            |\n| df-messenger-card-border-bottom-left-radius  | Optional  | 8px        | Border radius bottom left of a custom card           |\n| df-messenger-card-border-bottom-right-radius  | Optional  | 8px        | Border radius bottom right of a card             |\n| df-messenger-card-stack-border-top-left-radius  | Optional  | 8px        | Border radius top left for consecutive custom cards overrides top left radius   |\n| df-messenger-card-stack-border-top-right-radius | Optional  | 8px        | Border radius top right for consecutive custom cards overrides top right radius  |\n| df-messenger-card-stack-border-bottom-left-radius | Optional  | 8px        | Border radius bottom left for consecutive custom cards overrides bottom left radius |\n| df-messenger-card-stack-border-bottom-right-radius | Optional  | 8px        | Border radius bottom right for consecutive custom cards overrides bottom right radius |\n| df-messenger-card-box-shadow      | Optional  | 0 2px 2px 0 rgba(0, 0, 0, 0.24) | Box shadow of a custom card               |", "guide": "Dialogflow"}