{"title": "Dialogflow - \u5feb\u901f\u5165\u9580\uff1a\u901a\u904e API \u9032\u884c\u4e92\u52d5", "url": "https://cloud.google.com/dialogflow/cx/docs/quick/api?hl=zh-cn", "abstract": "# Dialogflow - \u5feb\u901f\u5165\u9580\uff1a\u901a\u904e API \u9032\u884c\u4e92\u52d5\n\u6bcf\u8f2a\u5c0d\u8a71\u6703\u767c\u751f\u4e00\u6b21 \u3002\u5728\u4e92\u52d5\u671f\u9593\uff0c\u6700\u7d42\u7528\u6236\u5411 Dialogflow \u767c\u9001\u8f38\u5165\uff0c\u800c Dialogflow \u767c\u9001\u97ff\u61c9\u3002\u5be6\u73fe\u7cfb\u7d71\u4ee5\u8655\u7406\u4e92\u52d5\u6642\uff0c\u60a8\u53ef\u5f9e\u5169\u500b\u9078\u9805\u4e2d\u9078\u64c7\uff1a\u4f7f\u7528 API \u6216\u4f7f\u7528\u96c6\u6210\u3002\n\u4f7f\u7528 API \u6642\uff0c\u60a8\u7684\u7cfb\u7d71\u9700\u8981\u8655\u7406\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u69cb\u5efa\u4ee3\u7406\u3002\n- \u7232\u6700\u7d42\u7528\u6236\u63d0\u4f9b\u754c\u9762\u3002\n- \u7232\u6bcf\u8f2a\u6703\u8a71\u8abf\u7528 Dialogflow API\uff0c\u4ee5\u5411 API \u767c\u9001\u6700\u7d42\u7528\u6236\u8f38\u5165\u3002\n- \u9664\u975e\u60a8\u7684\u4ee3\u7406\u97ff\u61c9\u662f\u5b8c\u5168\u975c\u614b\u7684\uff08\u4e0d\u5e38\u898b\uff09\uff0c\u5426\u5247\u60a8\u9700\u8981\u8a17\u7ba1 [\u7db2\u7d61\u9264\u5b50\u670d\u52d9](https://cloud.google.com/dialogflow/cx/docs/concept/webhook?hl=zh-cn) \uff0c\u624d\u80fd\u8655\u7406\u5553\u7528\u4e86\u7db2\u7d61\u9264\u5b50\u7684 [fulfillment](https://cloud.google.com/dialogflow/cx/docs/concept/fulfillment?hl=zh-cn) \u3002\n\u4f7f\u7528 [\u96c6\u6210](https://cloud.google.com/dialogflow/cx/docs/concept/integration?hl=zh-cn) \u6642\uff0c\u60a8\u7684\u7cfb\u7d71\u53ea\u9700\u8981\u8655\u7406\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u69cb\u5efa\u4ee3\u7406\u3002\n- \uff08\u53ef\u9078\uff09\u5be6\u73fe\u7db2\u7d61\u9264\u5b50\u670d\u52d9\u3002\n\u4e0b\u5716\u986f\u793a\u4e86\u5728\u6703\u8a71\u7684\u4e00\u8f2a\u5c0d\u8a71\u4e2d\u57f7\u884c\u7684\u6b65\u9a5f\u3002\n**\u6ce8\u610f** \uff1a\u60a8\u7684\u7cfb\u7d71\u8207\u96c6\u6210\u4e4b\u9593\u7684\u901a\u4fe1\u4ee5\u53ca Dialogflow [\u5728\u50b3\u8f38\u904e\u7a0b\u4e2d\u6703\u9032\u884c\u52a0\u5bc6](https://cloud.google.com/docs/security/encryption-in-transit?hl=zh-cn) \u3002\u6b64\u5916\uff0cGoogle \u5167\u90e8\u7d44\u4ef6\u901a\u4fe1\u4f7f\u7528 [\u61c9\u7528\u5c64\u50b3\u8f38\u5b89\u5168 (ALTS)](https://cloud.google.com/docs/security/encryption-in-transit/application-layer-transport-security?hl=zh-cn) \u9032\u884c\u52a0\u5bc6\u3002- \u6700\u7d42\u7528\u6236\u8f38\u5165\u6216\u8aaa\u51fa\u67d0\u4e9b\u5167\u5bb9\uff08\u7a31\u7232\u201c\u6700\u7d42\u7528\u6236\u8f38\u5165\u201d\uff09\u3002\n- \u60a8\u7684\u754c\u9762\u6216\u96c6\u6210\u7cfb\u7d71\u6703\u6536\u5230\u8f38\u5165\uff0c\u4e26\u5728\u6aa2\u6e2c\u610f\u5716\u8acb\u6c42\u4e2d\u5c07\u5176\u8f49\u767c\u5230 Dialogflow API\u3002\n- Dialogflow API \u6703\u63a5\u6536\u6aa2\u6e2c\u610f\u5716\u8acb\u6c42\u3002\u5b83\u6703\u5c07\u8f38\u5165\u8207\u610f\u5716\u6216\u8868\u55ae\u53c3\u6578\u76f8\u5339\u914d\uff0c\u6839\u64da\u9700\u8981\u8a2d\u7f6e\u53c3\u6578\uff0c\u4e26\u66f4\u65b0\u6703\u8a71\u72c0\u614b\u3002\u5982\u679c Dialogflow API \u9700\u8981\u8abf\u7528\u5553\u7528\u4e86\u7db2\u7d61\u9264\u5b50\u7684 fulfillment\uff0c\u5b83\u6703\u5411\u7db2\u7d61\u9264\u5b50\u670d\u52d9\u767c\u9001\u7db2\u7d61\u9264\u5b50\u8acb\u6c42\uff0c\u5426\u5247\u5c07\u8f49\u5230\u7b2c 6 \u6b65\u3002\n- \u60a8\u7684\u7db2\u7d61\u9264\u5b50\u670d\u52d9\u6703\u6536\u5230\u7db2\u7d61\u9264\u5b50\u8acb\u6c42\u3002\u60a8\u7684\u670d\u52d9\u6703\u57f7\u884c\u6240\u6709\u5fc5\u8981\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u8abf\u7528\u5916\u90e8 API\u3001\u67e5\u8a62\u6216\u66f4\u65b0\u6578\u64da\u5eab\u7b49\u3002\n- \u60a8\u7684\u7db2\u7d61\u9264\u5b50\u670d\u52d9\u69cb\u5efa\u4e00\u500b\u97ff\u61c9\uff0c\u4e26\u5c07\u7db2\u7d61\u9264\u5b50\u97ff\u61c9\u767c\u9001\u56de Dialogflow\u3002\n- Dialogflow \u6703\u5275\u5efa\u4e00\u500b\u6aa2\u6e2c\u610f\u5716\u97ff\u61c9\u3002\u5982\u679c\u8abf\u7528\u4e86\u7db2\u7d61\u9264\u5b50\uff0c\u5b83\u5c07\u4f7f\u7528\u7db2\u7d61\u9264\u5b50\u97ff\u61c9\u4e2d\u63d0\u4f9b\u7684\u97ff\u61c9\u3002\u5982\u679c\u672a\u8abf\u7528\u7db2\u7d61\u9264\u5b50\uff0c\u5247\u5b83\u5c07\u4f7f\u7528\u4ee3\u7406\u4e2d\u5b9a\u7fa9\u7684\u975c\u614b\u97ff\u61c9\u3002Dialogflow \u6703\u5411\u60a8\u7684\u754c\u9762\u6216\u96c6\u6210\u7cfb\u7d71\u767c\u9001\u6aa2\u6e2c\u610f\u5716\u97ff\u61c9\u3002\n- \u60a8\u7684\u754c\u9762\u6216\u96c6\u6210\u7cfb\u7d71\u6703\u6536\u5230\u6aa2\u6e2c\u610f\u5716\u97ff\u61c9\uff0c\u4e26\u5c07\u6587\u672c\u6216\u97f3\u983b\u97ff\u61c9\u8f49\u767c\u7d66\u6700\u7d42\u7528\u6236\u3002\n- \u6700\u7d42\u7528\u6236\u770b\u5230\u6216\u807d\u5230\u97ff\u61c9\u3002", "content": "## \u6307\u5357\u7528\u9014\n\u672c\u6307\u5357\u4ecb\u7d39\u77ad\u5982\u4f55\u91dd\u5c0d\u672a\u4f7f\u7528\u96c6\u6210\u7684\u4ee3\u7406\u5728\u4e00\u8f2a\u5c0d\u8a71\u4e2d\u8abf\u7528 API\uff08\u4e0a\u5716\u4e2d\u7684\u7b2c 2 \u6b65\uff09\u3002\u672c\u6307\u5357 \u4ecb\u7d39\u5982\u4f55\u7232\u6700\u7d42\u7528\u6236\u5be6\u73fe\u754c\u9762\u3002\n## \u6e96\u5099\u5de5\u4f5c\n\u5728\u95b1\u8b80\u672c\u6307\u5357\u4e4b\u524d\uff0c\u8acb\u5148\u5b8c\u6210\u4ee5\u4e0b\u4e8b\u9805\uff1a\n- \u95b1\u8b80 [Dialogflow CX \u57fa\u790e\u77e5\u8b58](https://cloud.google.com/dialogflow/cx/docs/basics?hl=zh-cn) \u3002\n- \u57f7\u884c [\u8a2d\u7f6e\u6b65\u9a5f](https://cloud.google.com/dialogflow/cx/docs/quick/setup?hl=zh-cn) \u3002\n- \u5275\u5efa\u65b0\u4ee3\u7406\u6216\u7e7c\u7e8c\u4f7f\u7528\u60a8\u5728 [\u69cb\u5efa\u4ee3\u7406](https://cloud.google.com/dialogflow/cx/docs/quick/build-agent?hl=zh-cn) \u4e2d\u5275\u5efa\u7684\u4ee3\u7406\u3002## \u6536\u96c6 ID\n\u4ee5\u4e0b\u793a\u4f8b\u9700\u8981\u591a\u500b ID \u4f5c\u7232\u8f38\u5165\u3002\u5982\u9700\u67e5\u627e\u9805\u76ee ID\u3001\u5340\u57df ID \u548c\u4ee3\u7406 ID\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u6253\u958b [Dialogflow CX \u63a7\u5236\u6aaf](https://dialogflow.cloud.google.com/cx/projects?hl=zh-cn) \u3002\n- \u9078\u64c7\u60a8\u7684 Google Cloud \u9805\u76ee\u4ee5\u6253\u958b\u4ee3\u7406\u9078\u64c7\u5668\u3002\n- \u9ede\u64ca\u5217\u8868\u4e2d\u4ee3\u7406\u7684\u9078\u9805\u83dc\u55ae\u3002\n- \u9ede\u64ca\u8907\u88fd\u540d\u7a31\u6309\u9215\u3002\n- \u6b64\u64cd\u4f5c\u5c07\u8907\u88fd\u4ee3\u7406\u7684\u5b8c\u6574\u6a19\u8b58\u540d\u7a31\uff0c\u5176\u4e2d\u5305\u542b\u60a8\u7684\u9805\u76ee ID\u3001\u5340\u57df ID \u548c\u4ee3\u7406 ID\uff0c\u683c\u5f0f\u5982\u4e0b\uff1aprojects/ /locations/ /agents/ \n\u60a8\u9084\u9700\u8981\u4e00\u500b\u6703\u8a71 ID\u3002 [\u6703\u8a71](https://cloud.google.com/dialogflow/cx/docs/concept/session?hl=zh-cn) \u8868\u793a Dialogflow \u4ee3\u7406\u8207\u6700\u7d42\u7528\u6236\u4e4b\u9593\u7684\u5c0d\u8a71\u3002\u60a8\u5c07\u5728\u5c0d\u8a71\u958b\u59cb\u6642\u5275\u5efa\u552f\u4e00\u6703\u8a71 ID\uff0c\u4e26\u5728\u6bcf\u8f2a\u5c0d\u8a71\u4e2d\u4f7f\u7528\u3002\u7232\u4e86\u8a66\u7528 API\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u6700\u591a 36 \u500b\u5b57\u7bc0\u7684\u5b57\u7b26\u4e32 ID\uff0c\u5982 `test-session-123` \u3002\n## \u8abf\u7528\u6aa2\u6e2c\u610f\u5716\n\u4ee5\u4e0b\u793a\u4f8b\u8abf\u7528 `Sessions.detectIntent` \u65b9\u6cd5\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 Google Cloud \u9805\u76ee ID\n- \uff1a\u60a8\u7684\u4ee3\u7406 ID\n- \uff1a\u60a8\u7684 [\u5340\u57df ID](https://cloud.google.com/dialogflow/cx/docs/concept/region?hl=zh-cn) \n- \uff1a\u60a8\u7684 [\u6703\u8a71 ID](https://cloud.google.com/dialogflow/cx/docs/concept/session?hl=zh-cn) \n- \uff1a\u6700\u7d42\u7528\u6236\u8f38\u5165\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://REGION_ID-dialogflow.googleapis.com/v3/projects/PROJECT_ID/locations/REGION_ID/agents/AGENT_ID/sessions/SESSION_ID:detectIntent\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"queryInput\": {\n \"text\": {\n  \"text\": \"END_USER_INPUT\"\n },\n \"languageCode\": \"en\"\n },\n \"queryParams\": {\n \"timeZone\": \"America/Los_Angeles\"\n }\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"responseId\": \"38e8f23d-eed2-445e-a3e7-149b242dd669\",\n \"queryResult\": {\n \"text\": \"I want to buy a shirt\",\n \"languageCode\": \"en\",\n \"responseMessages\": [  {\n  \"text\": {\n   \"text\": [   \"Ok, let's start a new order.\"\n   ]\n  }\n  },\n  {\n  \"text\": {\n   \"text\": [   \"I'd like to collect a bit more information from you.\"\n   ]\n  }\n  },\n  {\n  \"text\": {\n   \"text\": [   \"What color would you like?\"\n   ]\n  }\n  },\n  {}\n ],\n \"currentPage\": {\n  \"name\": \"projects/PROJECT_ID/locations/us-central1/agents/133b0350-f2d2-4928-b0b3-5b332259d0f7/flows/00000000-0000-0000-0000-000000000000/pages/ce0b88c4-9292-455c-9c59-ec153dad94cc\",\n  \"displayName\": \"New Order\"\n },\n \"intent\": {\n  \"name\": \"projects/PROJECT_ID/locations/us-central1/agents/133b0350-f2d2-4928-b0b3-5b332259d0f7/intents/0adebb70-a727-4687-b8bc-fbbc2ac0b665\",\n  \"displayName\": \"order.new\"\n },\n \"intentDetectionConfidence\": 1,\n \"diagnosticInfo\": { ... },\n \"match\": {\n  \"intent\": {\n  \"name\": \"projects/PROJECT_ID/locations/us-central1/agents/133b0350-f2d2-4928-b0b3-5b332259d0f7/intents/0adebb70-a727-4687-b8bc-fbbc2ac0b665\",\n  \"displayName\": \"order.new\"\n  },\n  \"resolvedInput\": \"I want to buy a shirt\",\n  \"matchType\": \"INTENT\",\n  \"confidence\": 1\n }\n }\n}\n```\n\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow-cx/src/main/java/dialogflow/cx/DetectIntent.java) \n```\nimport com.google.api.gax.rpc.ApiException;import com.google.cloud.dialogflow.cx.v3beta1.DetectIntentRequest;import com.google.cloud.dialogflow.cx.v3beta1.DetectIntentResponse;import com.google.cloud.dialogflow.cx.v3beta1.QueryInput;import com.google.cloud.dialogflow.cx.v3beta1.QueryResult;import com.google.cloud.dialogflow.cx.v3beta1.SessionName;import com.google.cloud.dialogflow.cx.v3beta1.SessionsClient;import com.google.cloud.dialogflow.cx.v3beta1.SessionsSettings;import com.google.cloud.dialogflow.cx.v3beta1.TextInput;import com.google.common.collect.Maps;import java.io.IOException;import java.util.List;import java.util.Map;public class DetectIntent {\u00a0 // DialogFlow API Detect Intent sample with text inputs.\u00a0 public static Map<String, QueryResult> detectIntent(\u00a0 \u00a0 \u00a0 String projectId,\u00a0 \u00a0 \u00a0 String locationId,\u00a0 \u00a0 \u00a0 String agentId,\u00a0 \u00a0 \u00a0 String sessionId,\u00a0 \u00a0 \u00a0 List<String> texts,\u00a0 \u00a0 \u00a0 String languageCode)\u00a0 \u00a0 \u00a0 throws IOException, ApiException {\u00a0 \u00a0 SessionsSettings.Builder sessionsSettingsBuilder = SessionsSettings.newBuilder();\u00a0 \u00a0 if (locationId.equals(\"global\")) {\u00a0 \u00a0 \u00a0 sessionsSettingsBuilder.setEndpoint(\"dialogflow.googleapis.com:443\");\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 sessionsSettingsBuilder.setEndpoint(locationId + \"-dialogflow.googleapis.com:443\");\u00a0 \u00a0 }\u00a0 \u00a0 SessionsSettings sessionsSettings = sessionsSettingsBuilder.build();\u00a0 \u00a0 Map<String, QueryResult> queryResults = Maps.newHashMap();\u00a0 \u00a0 // Instantiates a client.\u00a0 \u00a0 // Note: close() needs to be called on the SessionsClient object to clean up resources\u00a0 \u00a0 // such as threads. In the example below, try-with-resources is used,\u00a0 \u00a0 // which automatically calls close().\u00a0 \u00a0 try (SessionsClient sessionsClient = SessionsClient.create(sessionsSettings)) {\u00a0 \u00a0 \u00a0 // Set the session name using the projectID (my-project-id), locationID (global), agentID\u00a0 \u00a0 \u00a0 // (UUID), and sessionId (UUID).\u00a0 \u00a0 \u00a0 SessionName session =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SessionName.ofProjectLocationAgentSessionName(projectId, locationId, agentId, sessionId);\u00a0 \u00a0 \u00a0 // TODO : Uncomment if you want to print session path\u00a0 \u00a0 \u00a0 // System.out.println(\"Session Path: \" + session.toString());\u00a0 \u00a0 \u00a0 // Detect intents for each text input.\u00a0 \u00a0 \u00a0 for (String text : texts) {\u00a0 \u00a0 \u00a0 \u00a0 // Set the text (hello) for the query.\u00a0 \u00a0 \u00a0 \u00a0 TextInput.Builder textInput = TextInput.newBuilder().setText(text);\u00a0 \u00a0 \u00a0 \u00a0 // Build the query with the TextInput and language code (en-US).\u00a0 \u00a0 \u00a0 \u00a0 QueryInput queryInput =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 QueryInput.newBuilder().setText(textInput).setLanguageCode(languageCode).build();\u00a0 \u00a0 \u00a0 \u00a0 // Build the DetectIntentRequest with the SessionName and QueryInput.\u00a0 \u00a0 \u00a0 \u00a0 DetectIntentRequest request =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DetectIntentRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSession(session.toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setQueryInput(queryInput)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 \u00a0 // Performs the detect intent request.\u00a0 \u00a0 \u00a0 \u00a0 DetectIntentResponse response = sessionsClient.detectIntent(request);\u00a0 \u00a0 \u00a0 \u00a0 // Display the query result.\u00a0 \u00a0 \u00a0 \u00a0 QueryResult queryResult = response.getQueryResult();\u00a0 \u00a0 \u00a0 \u00a0 // TODO : Uncomment if you want to print queryResult\u00a0 \u00a0 \u00a0 \u00a0 // System.out.println(\"====================\");\u00a0 \u00a0 \u00a0 \u00a0 // System.out.format(\"Query Text: '%s'\\n\", queryResult.getText());\u00a0 \u00a0 \u00a0 \u00a0 // System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 \u00a0 \"Detected Intent: %s (confidence: %f)\\n\",\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 \u00a0 queryResult.getIntent().getDisplayName(),\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 \u00a0 \u00a0 \u00a0 queryResult.getIntentDetectionConfidence());\u00a0 \u00a0 \u00a0 \u00a0 queryResults.put(text, queryResult);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 \u00a0 return queryResults;\u00a0 }}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow-cx/detect-intent-text.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\u00a0*/// const projectId = 'my-project';// const location = 'global';// const agentId = 'my-agent';// const query = 'Hello';// const languageCode = 'en'// Imports the Google Cloud Some API libraryconst {SessionsClient} = require('@google-cloud/dialogflow-cx');/**\u00a0* Example for regional endpoint:\u00a0* \u00a0 const location = 'us-central1'\u00a0* \u00a0 const client = new SessionsClient({apiEndpoint: 'us-central1-dialogflow.googleapis.com'})\u00a0*/const client = new SessionsClient();async function detectIntentText() {\u00a0 const sessionId = Math.random().toString(36).substring(7);\u00a0 const sessionPath = client.projectLocationAgentSessionPath(\u00a0 \u00a0 projectId,\u00a0 \u00a0 location,\u00a0 \u00a0 agentId,\u00a0 \u00a0 sessionId\u00a0 );\u00a0 const request = {\u00a0 \u00a0 session: sessionPath,\u00a0 \u00a0 queryInput: {\u00a0 \u00a0 \u00a0 text: {\u00a0 \u00a0 \u00a0 \u00a0 text: query,\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 languageCode,\u00a0 \u00a0 },\u00a0 };\u00a0 const [response] = await client.detectIntent(request);\u00a0 for (const message of response.queryResult.responseMessages) {\u00a0 \u00a0 if (message.text) {\u00a0 \u00a0 \u00a0 console.log(`Agent Response: ${message.text.text}`);\u00a0 \u00a0 }\u00a0 }\u00a0 if (response.queryResult.match.intent) {\u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 `Matched Intent: ${response.queryResult.match.intent.displayName}`\u00a0 \u00a0 );\u00a0 }\u00a0 console.log(\u00a0 \u00a0 `Current Page: ${response.queryResult.currentPage.displayName}`\u00a0 );}detectIntentText();\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow-cx/detect_intent_texts.py) \n```\ndef run_sample():\u00a0 \u00a0 # TODO(developer): Replace these values when running the function\u00a0 \u00a0 project_id = \"YOUR-PROJECT-ID\"\u00a0 \u00a0 # For more information about regionalization see https://cloud.google.com/dialogflow/cx/docs/how/region\u00a0 \u00a0 location_id = \"YOUR-LOCATION-ID\"\u00a0 \u00a0 # For more info on agents see https://cloud.google.com/dialogflow/cx/docs/concept/agent\u00a0 \u00a0 agent_id = \"YOUR-AGENT-ID\"\u00a0 \u00a0 agent = f\"projects/{project_id}/locations/{location_id}/agents/{agent_id}\"\u00a0 \u00a0 # For more information on sessions see https://cloud.google.com/dialogflow/cx/docs/concept/session\u00a0 \u00a0 session_id = uuid.uuid4()\u00a0 \u00a0 texts = [\"Hello\"]\u00a0 \u00a0 # For more supported languages see https://cloud.google.com/dialogflow/es/docs/reference/language\u00a0 \u00a0 language_code = \"en-us\"\u00a0 \u00a0 detect_intent_texts(agent, session_id, texts, language_code)def detect_intent_texts(agent, session_id, texts, language_code):\u00a0 \u00a0 \"\"\"Returns the result of detect intent with texts as inputs.\u00a0 \u00a0 Using the same `session_id` between requests allows continuation\u00a0 \u00a0 of the conversation.\"\"\"\u00a0 \u00a0 session_path = f\"{agent}/sessions/{session_id}\"\u00a0 \u00a0 print(f\"Session path: {session_path}\\n\")\u00a0 \u00a0 client_options = None\u00a0 \u00a0 agent_components = AgentsClient.parse_agent_path(agent)\u00a0 \u00a0 location_id = agent_components[\"location\"]\u00a0 \u00a0 if location_id != \"global\":\u00a0 \u00a0 \u00a0 \u00a0 api_endpoint = f\"{location_id}-dialogflow.googleapis.com:443\"\u00a0 \u00a0 \u00a0 \u00a0 print(f\"API Endpoint: {api_endpoint}\\n\")\u00a0 \u00a0 \u00a0 \u00a0 client_options = {\"api_endpoint\": api_endpoint}\u00a0 \u00a0 session_client = SessionsClient(client_options=client_options)\u00a0 \u00a0 for text in texts:\u00a0 \u00a0 \u00a0 \u00a0 text_input = session.TextInput(text=text)\u00a0 \u00a0 \u00a0 \u00a0 query_input = session.QueryInput(text=text_input, language_code=language_code)\u00a0 \u00a0 \u00a0 \u00a0 request = session.DetectIntentRequest(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 session=session_path, query_input=query_input\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 response = session_client.detect_intent(request=request)\u00a0 \u00a0 \u00a0 \u00a0 print(\"=\" * 20)\u00a0 \u00a0 \u00a0 \u00a0 print(f\"Query text: {response.query_result.text}\")\u00a0 \u00a0 \u00a0 \u00a0 response_messages = [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \" \".join(msg.text.text) for msg in response.query_result.response_messages\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 \u00a0 print(f\"Response text: {' '.join(response_messages)}\\n\")\n```\n## \u751f\u7522\u5316\n\u5728\u751f\u7522\u74b0\u5883\u4e2d\u904b\u884c\u4ee3\u7406\u4e4b\u524d\uff0c\u8acb\u52d9\u5fc5\u5be6\u65bd [\u751f\u7522\u5316\u6700\u4f73\u505a\u6cd5](https://cloud.google.com/dialogflow/cx/docs/concept/best-practices?hl=zh-cn#prod) \u3002", "guide": "Dialogflow"}