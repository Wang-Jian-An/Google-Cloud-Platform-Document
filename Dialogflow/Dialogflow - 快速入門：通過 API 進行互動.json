{"title": "Dialogflow - \u5feb\u901f\u5165\u9580\uff1a\u901a\u904e API \u9032\u884c\u4e92\u52d5", "url": "https://cloud.google.com/dialogflow/es/docs/quick/api?hl=zh-cn", "abstract": "# Dialogflow - \u5feb\u901f\u5165\u9580\uff1a\u901a\u904e API \u9032\u884c\u4e92\u52d5\n\u5982\u679c\u60a8\u672a\u4f7f\u7528 [\u96c6\u6210](https://cloud.google.com/dialogflow/docs/integrations?hl=zh-cn) \uff0c\u5247\u5fc5\u9808\u7de8\u5beb\u4ee3\u78bc\u4ee5\u5be6\u73fe\u8207\u6700\u7d42\u7528\u6236\u4e92\u52d5\u3002\u5c0d\u65bc\u6bcf\u8f2a\u6703\u8a71\uff0c\u60a8\u7684\u4ee3\u78bc\u6703\u8abf\u7528 Dialogflow API \u67e5\u8a62\u60a8\u7684\u4ee3\u7406\u3002\u672c\u6307\u5357\u4ecb\u7d39\u77ad\u5982\u4f55\u901a\u904e\u5728\u547d\u4ee4\u884c\u4e0a\u4f7f\u7528 REST API \u548c\u901a\u904e\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u8207\u4ee3\u7406\u9032\u884c\u4e92\u52d5\u3002\n", "content": "## \u6e96\u5099\u5de5\u4f5c\n\u5982\u679c\u60a8\u4e0d\u6253\u7b97\u4f7f\u7528 API\uff0c\u5247\u53ef\u4ee5\u8df3\u904e\u6b64\u5feb\u901f\u5165\u9580\u3002\n\u5728\u95b1\u8b80\u672c\u6307\u5357\u4e4b\u524d\uff0c\u8acb\u5148\u5b8c\u6210\u4ee5\u4e0b\u4e8b\u9805\uff1a\n- \u77ad\u89e3 [Dialogflow \u57fa\u790e\u77e5\u8b58](https://cloud.google.com/dialogflow/docs/basics?hl=zh-cn) \u3002\n- \u57f7\u884c [\u8a2d\u7f6e\u6b65\u9a5f](https://cloud.google.com/dialogflow/docs/quick/setup?hl=zh-cn) \u3002\n- \u57f7\u884c [\u69cb\u5efa\u4ee3\u7406](https://cloud.google.com/dialogflow/docs/quick/build-agent?hl=zh-cn) \u5feb\u901f\u5165\u9580\u6307\u5357\u4e2d\u7684\u6b65\u9a5f\u3002\u4ee5\u4e0b\u6b65\u9a5f\u5c07\u7e7c\u7e8c\u8655\u7406\u60a8\u5728\u8a72\u6307\u5357\u4e2d\u5553\u52d5\u7684\u4ee3\u7406\u3002 \u5982\u679c\u60a8\u4e0d\u518d\u64c1\u6709\u8a72\u4ee3\u7406\uff0c\u5247\u53ef\u4ee5\u4e0b\u8f09 [build-agent-quickstart.zip](https://cloud.google.com/static/dialogflow/es/docs/data/build-agent-quickstart.zip?hl=zh-cn) \u4e26 [\u5c0e\u5165\u6587\u4ef6](https://cloud.google.com/dialogflow/docs/agents-settings?hl=zh-cn#export) \u3002## \u6703\u8a71\n\u6703\u8a71\u8868\u793a Dialogflow \u4ee3\u7406\u8207\u6700\u7d42\u7528\u6236\u4e4b\u9593\u7684\u5c0d\u8a71\u3002\u60a8\u53ef\u4ee5\u5728\u5c0d\u8a71\u958b\u59cb\u6642\u5275\u5efa\u6703\u8a71\uff0c\u4e26\u5728\u6bcf\u8f2a\u5c0d\u8a71\u4e2d\u4f7f\u7528\u8a72\u6703\u8a71\u3002\u5c0d\u8a71\u7d50\u675f\u5f8c\uff0c\u60a8\u5c07\u505c\u6b62\u4f7f\u7528\u8a72\u6703\u8a71\u3002\n\u5728\u540c\u4e00\u6642\u9593\u8207\u4e0d\u540c\u6700\u7d42\u7528\u6236\u9032\u884c\u5c0d\u8a71\u6642\uff0c\u4e0d\u61c9\u4f7f\u7528\u540c\u4e00\u500b\u6703\u8a71\u3002Dialogflow \u6703\u7232\u6bcf\u500b\u6d3b\u8e8d\u6703\u8a71\u7dad\u8b77\u7576\u524d\u6d3b\u8e8d\u7684\u4e0a\u4e0b\u6587\u3002\u6703\u8a71\u6578\u64da\u5c07\u7531 Dialogflow \u5b58\u5132 20 \u5206\u9418\u3002\n\u6bcf\u500b\u6703\u8a71\u5747\u7531\u7cfb\u7d71\u751f\u6210\u7684\u6703\u8a71 ID \u552f\u4e00\u78ba\u5b9a\u3002\u60a8\u53ef\u4ee5\u5728 [\u6aa2\u6e2c\u610f\u5716\u8acb\u6c42](https://cloud.google.com/dialogflow/docs/api-overview?hl=zh-cn#detect-intent) \u4e2d\u63d0\u4f9b\u65b0\u7684\u6703\u8a71 ID \u4f86\u5275\u5efa\u65b0\u6703\u8a71\u3002\u6703\u8a71 ID \u662f\u4e00\u500b\u5b57\u7b26\u4e32\uff0c\u6700\u9577 36 \u500b\u5b57\u7bc0\u3002\u7cfb\u7d71\u8ca0\u8cac\u751f\u6210\u4e0d\u91cd\u8907\u7684\u6703\u8a71 ID\u3002\u5b83\u5011\u53ef\u4ee5\u662f\u96a8\u6a5f\u6578\u5b57\u3001\u7d93\u904e\u54c8\u5e0c\u8655\u7406\u7684\u6700\u7d42\u7528\u6236\u6a19\u8b58\u7b26\u6216\u4efb\u4f55\u5176\u4ed6\u4fbf\u65bc\u751f\u6210\u7684\u503c\u3002\n## \u6aa2\u6e2c\u610f\u5716\n\u4f7f\u7528 API \u9032\u884c\u4e92\u52d5\u6642\uff0c\u60a8\u7684\u670d\u52d9\u6703\u76f4\u63a5\u8207\u6700\u7d42\u7528\u6236\u4e92\u52d5\u3002\u5c0d\u65bc\u6bcf\u8f2a\u5c0d\u8a71\uff0c\u60a8\u7684\u670d\u52d9\u5747\u6703\u8abf\u7528 [Sessions](https://cloud.google.com/dialogflow/docs/reference/common-types?hl=zh-cn#sessions) \u985e\u578b\u7684 `detectIntent` \u6216 `streamingDetectIntent` \u65b9\u6cd5\u5c07\u6700\u7d42\u7528\u6236\u8868\u8ff0\u767c\u9001\u7d66 Dialogflow\u3002Dialogflow \u6703\u4f7f\u7528\u8207\u5339\u914d\u610f\u5716\u3001\u64cd\u4f5c\u548c\u53c3\u6578\u76f8\u95dc\u7684\u4fe1\u606f\u4ee5\u53ca\u91dd\u5c0d\u8a72\u610f\u5716\u5b9a\u7fa9\u7684\u97ff\u61c9\u4f86\u505a\u51fa\u97ff\u61c9\u3002\u670d\u52d9\u6703\u6839\u64da\u9700\u8981\u57f7\u884c\u64cd\u4f5c\uff08\u4f8b\u5982\u6578\u64da\u5eab\u67e5\u8a62\u6216\u5916\u90e8 API \u8abf\u7528\uff09\uff0c\u4e26\u5411\u6700\u7d42\u7528\u6236\u767c\u9001\u6d88\u606f\u3002\u6b64\u904e\u7a0b\u6703\u4e00\u76f4\u6301\u7e8c\u5230\u5c0d\u8a71\u7d50\u675f\u3002\n\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u6aa2\u6e2c\u610f\u5716\u3002\u6bcf\u500b\u793a\u4f8b\u5747\u63a5\u53d7\u4ee5\u4e0b\u8f38\u5165\u5167\u5bb9\u7684\u4e00\u90e8\u5206\uff1a\n- **\u9805\u76ee ID** \uff1a\u4f7f\u7528\u60a8\u5728 [\u8a2d\u7f6e\u6b65\u9a5f](https://cloud.google.com/dialogflow/docs/quick/setup?hl=zh-cn) \u4e2d\u5275\u5efa\u7684\u9805\u76ee\u7684 ID\u3002\n- **\u6703\u8a71 ID** \uff1a\u6e2c\u8a66\u4ee3\u7406\u6642\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6703\u8a71 ID\u3002\u4f8b\u5982\uff0c\u201c123456789\u201d\u662f\u793a\u4f8b\u7d93\u5e38\u4f7f\u7528\u7684\u4e00\u500b ID\u3002\n- **\u6587\u672c** \uff1a\u9019\u662f\u6307\u4e00\u7a2e\u6700\u7d42\u7528\u6236\u8868\u8ff0\u6216\u591a\u7a2e\u6700\u7d42\u7528\u6236\u8868\u8ff0\u3002\u5982\u679c\u63d0\u4f9b\u4e86\u591a\u7a2e\u8868\u8ff0\uff0c\u5247\u793a\u4f8b\u4ee3\u78bc\u6703\u91dd\u5c0d\u6bcf\u7a2e\u8868\u8ff0\u8abf\u7528\u6aa2\u6e2c\u610f\u5716\u3002\u5617\u8a66\u8f38\u5165\u201cI know french\u201d\u3002\n- **\u8a9e\u8a00\u4ee3\u78bc** \uff1a\u6700\u7d42\u7528\u6236\u8868\u8ff0\u7684\u8a9e\u8a00\u4ee3\u78bc\u3002\u5c0d\u65bc\u6b64\u793a\u4f8b\u4ee3\u7406\uff0c\u8acb\u4f7f\u7528\u201cen-US\u201d\u3002\n\u5982\u9700\u6aa2\u6e2c\u610f\u5716\uff0c\u8acb\u5c0d\n`Sessions`\n\u8cc7\u6e90\u8abf\u7528\n`detectIntent`\n\u65b9\u6cd5\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 Google Cloud \u9805\u76ee ID\n- \uff1a\u6703\u8a71 ID\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://dialogflow.googleapis.com/v2/projects/PROJECT_ID/agent/sessions/SESSION_ID:detectIntent\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"query_input\": {\n \"text\": {\n  \"text\": \"I know french\",\n  \"language_code\": \"en-US\"\n }\n }\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"responseId\": \"856510ca-f617-4e25-b0bb-a26c0a59e030-19db3199\",\n \"queryResult\": {\n \"queryText\": \"I know french\",\n \"parameters\": {\n  \"language\": \"French\",\n  \"language-programming\": \"\"\n },\n \"allRequiredParamsPresent\": true,\n \"fulfillmentText\": \"Wow! I didn't know you knew French. How long have you known French?\",\n \"fulfillmentMessages\": [  {\n  \"text\": {\n   \"text\": [   \"Wow! I didn't know you knew French. How long have you known French?\"\n   ]\n  }\n  }\n ],\n \"outputContexts\": [  {\n  \"name\": \"projects/PROJECT_ID/agent/sessions/123456789/contexts/set-language-followup\",\n  \"lifespanCount\": 2,\n  \"parameters\": {\n   \"language\": \"French\",\n   \"language.original\": \"french\",\n   \"language-programming\": \"\",\n   \"language-programming.original\": \"\"\n  }\n  }\n ],\n \"intent\": {\n  \"name\": \"projects/PROJECT_ID/agent/intents/fe45022f-e58a-484f-96e8-1cbd6628f648\",\n  \"displayName\": \"set-language\"\n },\n \"intentDetectionConfidence\": 1,\n \"languageCode\": \"en\"\n }\n}\n```\n\u95dc\u65bc\u97ff\u61c9\uff0c\u8acb\u6ce8\u610f\u4ee5\u4e0b\u4e8b\u9805\uff1a- `queryResult.intent`\u5b57\u6bb5\u5305\u542b\u5339\u914d\u7684\u610f\u5716\u3002\n- `queryResult.fulfillmentMessages`\u5b57\u6bb5\u7684\u503c\u5305\u542b\u610f\u5716\u97ff\u61c9\u3002\u9019\u662f\u60a8\u7684\u7cfb\u7d71\u61c9\u8f49\u767c\u7d66\u6700\u7d42\u7528\u6236\u7684\u97ff\u61c9\u3002\n- `queryResult.parameters`\u5b57\u6bb5\u7684\u503c\u5305\u542b\u5f9e\u6700\u7d42\u7528\u6236\u8868\u9054\u5f0f\u4e2d\u63d0\u53d6\u7684\u53c3\u6578\u3002\n- `queryResult.outputContext`\u5b57\u6bb5\u5305\u542b\u6d3b\u8e8d\u4e0a\u4e0b\u6587\u3002\n\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/dialogflow/detect_intent/detect_intent.go) \n```\nfunc DetectIntentText(projectID, sessionID, text, languageCode string) (string, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 sessionClient, err := dialogflow.NewSessionsClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return \"\", err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer sessionClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 if projectID == \"\" || sessionID == \"\" {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return \"\", errors.New(fmt.Sprintf(\"Received empty project (%s) or session (%s)\", projectID, sessionID))\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 sessionPath := fmt.Sprintf(\"projects/%s/agent/sessions/%s\", projectID, sessionID)\u00a0 \u00a0 \u00a0 \u00a0 textInput := dialogflowpb.TextInput{Text: text, LanguageCode: languageCode}\u00a0 \u00a0 \u00a0 \u00a0 queryTextInput := dialogflowpb.QueryInput_Text{Text: &textInput}\u00a0 \u00a0 \u00a0 \u00a0 queryInput := dialogflowpb.QueryInput{Input: &queryTextInput}\u00a0 \u00a0 \u00a0 \u00a0 request := dialogflowpb.DetectIntentRequest{Session: sessionPath, QueryInput: &queryInput}\u00a0 \u00a0 \u00a0 \u00a0 response, err := sessionClient.DetectIntent(ctx, &request)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return \"\", err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 queryResult := response.GetQueryResult()\u00a0 \u00a0 \u00a0 \u00a0 fulfillmentText := queryResult.GetFulfillmentText()\u00a0 \u00a0 \u00a0 \u00a0 return fulfillmentText, nil}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/snippets/src/main/java/com/example/dialogflow/DetectIntentTexts.java) \n```\nimport com.google.api.gax.rpc.ApiException;import com.google.cloud.dialogflow.v2.DetectIntentResponse;import com.google.cloud.dialogflow.v2.QueryInput;import com.google.cloud.dialogflow.v2.QueryResult;import com.google.cloud.dialogflow.v2.SessionName;import com.google.cloud.dialogflow.v2.SessionsClient;import com.google.cloud.dialogflow.v2.TextInput;import com.google.common.collect.Maps;import java.io.IOException;import java.util.List;import java.util.Map;public class DetectIntentTexts {\u00a0 // DialogFlow API Detect Intent sample with text inputs.\u00a0 public static Map<String, QueryResult> detectIntentTexts(\u00a0 \u00a0 \u00a0 String projectId, List<String> texts, String sessionId, String languageCode)\u00a0 \u00a0 \u00a0 throws IOException, ApiException {\u00a0 \u00a0 Map<String, QueryResult> queryResults = Maps.newHashMap();\u00a0 \u00a0 // Instantiates a client\u00a0 \u00a0 try (SessionsClient sessionsClient = SessionsClient.create()) {\u00a0 \u00a0 \u00a0 // Set the session name using the sessionId (UUID) and projectID (my-project-id)\u00a0 \u00a0 \u00a0 SessionName session = SessionName.of(projectId, sessionId);\u00a0 \u00a0 \u00a0 System.out.println(\"Session Path: \" + session.toString());\u00a0 \u00a0 \u00a0 // Detect intents for each text input\u00a0 \u00a0 \u00a0 for (String text : texts) {\u00a0 \u00a0 \u00a0 \u00a0 // Set the text (hello) and language code (en-US) for the query\u00a0 \u00a0 \u00a0 \u00a0 TextInput.Builder textInput =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TextInput.newBuilder().setText(text).setLanguageCode(languageCode);\u00a0 \u00a0 \u00a0 \u00a0 // Build the query with the TextInput\u00a0 \u00a0 \u00a0 \u00a0 QueryInput queryInput = QueryInput.newBuilder().setText(textInput).build();\u00a0 \u00a0 \u00a0 \u00a0 // Performs the detect intent request\u00a0 \u00a0 \u00a0 \u00a0 DetectIntentResponse response = sessionsClient.detectIntent(session, queryInput);\u00a0 \u00a0 \u00a0 \u00a0 // Display the query result\u00a0 \u00a0 \u00a0 \u00a0 QueryResult queryResult = response.getQueryResult();\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"====================\");\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Query Text: '%s'\\n\", queryResult.getQueryText());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Detected Intent: %s (confidence: %f)\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 queryResult.getIntent().getDisplayName(), queryResult.getIntentDetectionConfidence());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Fulfillment Text: '%s'\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 queryResult.getFulfillmentMessagesCount() > 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ? queryResult.getFulfillmentMessages(0).getText()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 : \"Triggered Default Fallback Intent\");\u00a0 \u00a0 \u00a0 \u00a0 queryResults.put(text, queryResult);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 \u00a0 return queryResults;\u00a0 }}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow/detect.js) \n```\n/**\u00a0* TODO(developer): UPDATE these variables before running the sample.\u00a0*/// projectId: ID of the GCP project where Dialogflow agent is deployed// const projectId = 'PROJECT_ID';// sessionId: String representing a random number or hashed user identifier// const sessionId = '123456';// queries: A set of sequential queries to be send to Dialogflow agent for Intent Detection// const queries = [// \u00a0 'Reserve a meeting room in Toronto office, there will be 5 of us',// \u00a0 'Next monday at 3pm for 1 hour, please', // Tell the bot when the meeting is taking place// \u00a0 'B' \u00a0// Rooms are defined on the Dialogflow agent, default options are A, B, or C// ]// languageCode: Indicates the language Dialogflow agent should use to detect intents// const languageCode = 'en';// Imports the Dialogflow libraryconst dialogflow = require('@google-cloud/dialogflow');// Instantiates a session clientconst sessionClient = new dialogflow.SessionsClient();async function detectIntent(\u00a0 projectId,\u00a0 sessionId,\u00a0 query,\u00a0 contexts,\u00a0 languageCode) {\u00a0 // The path to identify the agent that owns the created intent.\u00a0 const sessionPath = sessionClient.projectAgentSessionPath(\u00a0 \u00a0 projectId,\u00a0 \u00a0 sessionId\u00a0 );\u00a0 // The text query request.\u00a0 const request = {\u00a0 \u00a0 session: sessionPath,\u00a0 \u00a0 queryInput: {\u00a0 \u00a0 \u00a0 text: {\u00a0 \u00a0 \u00a0 \u00a0 text: query,\u00a0 \u00a0 \u00a0 \u00a0 languageCode: languageCode,\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 },\u00a0 };\u00a0 if (contexts && contexts.length > 0) {\u00a0 \u00a0 request.queryParams = {\u00a0 \u00a0 \u00a0 contexts: contexts,\u00a0 \u00a0 };\u00a0 }\u00a0 const responses = await sessionClient.detectIntent(request);\u00a0 return responses[0];}async function executeQueries(projectId, sessionId, queries, languageCode) {\u00a0 // Keeping the context across queries let's us simulate an ongoing conversation with the bot\u00a0 let context;\u00a0 let intentResponse;\u00a0 for (const query of queries) {\u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 console.log(`Sending Query: ${query}`);\u00a0 \u00a0 \u00a0 intentResponse = await detectIntent(\u00a0 \u00a0 \u00a0 \u00a0 projectId,\u00a0 \u00a0 \u00a0 \u00a0 sessionId,\u00a0 \u00a0 \u00a0 \u00a0 query,\u00a0 \u00a0 \u00a0 \u00a0 context,\u00a0 \u00a0 \u00a0 \u00a0 languageCode\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 console.log('Detected intent');\u00a0 \u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 \u00a0 `Fulfillment Text: ${intentResponse.queryResult.fulfillmentText}`\u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 // Use the context from this response for next queries\u00a0 \u00a0 \u00a0 context = intentResponse.queryResult.outputContexts;\u00a0 \u00a0 } catch (error) {\u00a0 \u00a0 \u00a0 console.log(error);\u00a0 \u00a0 }\u00a0 }}executeQueries(projectId, sessionId, queries, languageCode);\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow/detect_intent_texts.py) \n```\ndef detect_intent_texts(project_id, session_id, texts, language_code):\u00a0 \u00a0 \"\"\"Returns the result of detect intent with texts as inputs.\u00a0 \u00a0 Using the same `session_id` between requests allows continuation\u00a0 \u00a0 of the conversation.\"\"\"\u00a0 \u00a0 from google.cloud import dialogflow\u00a0 \u00a0 session_client = dialogflow.SessionsClient()\u00a0 \u00a0 session = session_client.session_path(project_id, session_id)\u00a0 \u00a0 print(\"Session path: {}\\n\".format(session))\u00a0 \u00a0 for text in texts:\u00a0 \u00a0 \u00a0 \u00a0 text_input = dialogflow.TextInput(text=text, language_code=language_code)\u00a0 \u00a0 \u00a0 \u00a0 query_input = dialogflow.QueryInput(text=text_input)\u00a0 \u00a0 \u00a0 \u00a0 response = session_client.detect_intent(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 request={\"session\": session, \"query_input\": query_input}\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 print(\"=\" * 20)\u00a0 \u00a0 \u00a0 \u00a0 print(\"Query text: {}\".format(response.query_result.query_text))\u00a0 \u00a0 \u00a0 \u00a0 print(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Detected intent: {} (confidence: {})\\n\".format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 response.query_result.intent.display_name,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 response.query_result.intent_detection_confidence,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 print(\"Fulfillment text: {}\\n\".format(response.query_result.fulfillment_text))\n```No preface\n **C#** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [C# \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [.NET \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.Dialogflow.V2/index.html) \u3002\n **PHP** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [PHP \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [PHP \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://cloud.google.com/php/docs/reference/cloud-dialogflow/latest?hl=zh-cn) \u3002\n **Ruby \u7248** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [Ruby \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [Ruby \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://googleapis.dev/ruby/google-cloud-dialogflow/latest/Google/Cloud/Dialogflow.html) \u3002\n## \u751f\u7522\u5316\n\u5728\u751f\u7522\u74b0\u5883\u4e2d\u904b\u884c\u4ee3\u7406\u4e4b\u524d\uff0c\u8acb\u52d9\u5fc5\u5be6\u65bd [\u751f\u7522\u5316\u6700\u4f73\u505a\u6cd5](https://cloud.google.com/dialogflow/es/docs/best-practices?hl=zh-cn#prod) \u3002", "guide": "Dialogflow"}