{"title": "Dialogflow - Implement webhooks", "url": "https://cloud.google.com/dialogflow/cx/docs/how/webhook", "abstract": "# Dialogflow - Implement webhooks\nThis guide provides various samples for implementing [webhooks](/dialogflow/cx/docs/concept/webhook) as well as webhook troubleshooting recommendations.\n", "content": "## Set a session parameter\nThe following samples show how to set a session parameter.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\nSee the\n [Webhooks quick start](/dialogflow/cx/docs/quick/webhook) \n.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow-cx/src/main/java/dialogflow/cx/WebhookConfigureSessionParameters.java) \n```\n// TODO: Change class name to Example// TODO: Uncomment the line below before running cloud function// package com.example;import com.google.cloud.functions.HttpFunction;import com.google.cloud.functions.HttpRequest;import com.google.cloud.functions.HttpResponse;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.google.gson.JsonObject;import java.io.BufferedWriter;public class WebhookConfigureSessionParameters implements HttpFunction {\u00a0 @Override\u00a0 public void service(HttpRequest request, HttpResponse response) throws Exception {\u00a0 \u00a0 JsonObject orderParameter = new JsonObject();\u00a0 \u00a0 orderParameter.addProperty(\"order_number\", \"12345\");\u00a0 \u00a0 JsonObject parameterObject = new JsonObject();\u00a0 \u00a0 parameterObject.add(\"parameters\", orderParameter);\u00a0 \u00a0 // Creates webhook response object\u00a0 \u00a0 JsonObject webhookResponse = new JsonObject();\u00a0 \u00a0 webhookResponse.add(\"session_info\", parameterObject);\u00a0 \u00a0 Gson gson = new GsonBuilder().setPrettyPrinting().create();\u00a0 \u00a0 String jsonResponseObject = gson.toJson(webhookResponse);\u00a0 \u00a0 /** { \"session_info\": { \"parameters\": { \"order_number\": \"12345\" } } } */\u00a0 \u00a0 BufferedWriter writer = response.getWriter();\u00a0 \u00a0 // Sends the webhookResponseObject\u00a0 \u00a0 writer.write(jsonResponseObject.toString());\u00a0 }}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow-cx/webhook-configure-session-parameters.js) \n```\nconst functions = require('@google-cloud/functions-framework');functions.http('configureSessionParams', (request, response) => {\u00a0 // Session parameter configured by the webhook\u00a0 const orderNumber = 123;\u00a0 const jsonResponse = {\u00a0 \u00a0 sessionInfo: {\u00a0 \u00a0 \u00a0 parameters: {\u00a0 \u00a0 \u00a0 \u00a0 orderNumber: orderNumber,\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 },\u00a0 };\u00a0 response.send(jsonResponse);});\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow-cx/webhook_configure_session_parameters.py) \n```\nimport functions_framework# TODO (developer): change entry point to configure_session_params in Cloud Function@functions_framework.httpdef configure_session_params(request):\u00a0 \u00a0 \"\"\"Webhook to validate or configure new session parameters.\"\"\"\u00a0 \u00a0 order_number = 123\u00a0 \u00a0 json_response = {\u00a0 \u00a0 \u00a0 \u00a0 \"sessionInfo\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"parameters\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"orderNumber\": order_number,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 }\u00a0 \u00a0 return json_response\n```\n## Return a fulfillment response\nThe following samples show how to return a fulfillment response.\n**Note:** It is a best practice to set session parameters instead of fulfillment responses. This allows the agent fulfillment to consistently control dynamic responses.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\nSee the\n [Webhooks quick start](/dialogflow/cx/docs/quick/webhook) \n.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/basic-webhook/src/main/java/com/example/dialogflow/cx/BasicWebhook.java) \n```\n// TODO: Change class name to Example// TODO: add GSON dependency to Pom file// (https://mvnrepository.com/artifact/com.google.code.gson/gson/2.8.5)// TODO: Uncomment the line bellow before running cloud function// package com.example;import com.google.cloud.functions.HttpFunction;import com.google.cloud.functions.HttpRequest;import com.google.cloud.functions.HttpResponse;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.google.gson.JsonObject;import com.google.gson.JsonParser;import java.io.BufferedWriter;public class BasicWebhook implements HttpFunction {\u00a0 @Override\u00a0 public void service(HttpRequest request, HttpResponse response) throws Exception {\u00a0 \u00a0 Gson gson = new GsonBuilder().create();\u00a0 \u00a0 JsonObject parsedRequest = gson.fromJson(request.getReader(), JsonObject.class);\u00a0 \u00a0 // For more information on the structure of this object https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/Fulfillment\u00a0 \u00a0 String requestTag = parsedRequest.getAsJsonObject(\"fulfillmentInfo\")\u00a0 \u00a0 \u00a0 \u00a0 .getAsJsonPrimitive(\"tag\").toString();\u00a0 \u00a0 JsonObject responseObject = null;\u00a0 \u00a0 String defaultIntent = \"\\\"Default Welcome Intent\\\"\";\u00a0 \u00a0 String secondIntent = \"\\\"get-agent-name\\\"\";\u00a0 \u00a0 String responseText = \"\";\u00a0 \u00a0 // Compares the Intent Tag to provide the correct response \u00a0 \u00a0 if (requestTag.equals(defaultIntent)) {\u00a0 \u00a0 \u00a0 responseText = \"\\\"Hello from a Java GCF Webhook\\\"\";\u00a0 \u00a0 } else if (requestTag.equals(secondIntent)) {\u00a0 \u00a0 \u00a0 responseText = \"\\\"My name is Flowhook\\\"\";\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 responseText = \"\\\"Sorry I didn't get that\\\"\";\u00a0 \u00a0 }\u00a0 \u00a0 // Constructing the response jsonObject \u00a0 \u00a0 responseObject =\u00a0 \u00a0 \u00a0 \u00a0 JsonParser\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .parseString(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"{ \\\"fulfillment_response\\\": { \\\"messages\\\": [ { \\\"text\\\": { \\\"text\\\": [\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + responseText\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"] } } ] } }\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .getAsJsonObject();\u00a0 \u00a0 BufferedWriter writer = response.getWriter();\u00a0 \u00a0 //Sends the responseObject\u00a0 \u00a0 writer.write(responseObject.toString());\u00a0 }}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow-cx/webhooks.js) \n```\nconst functions = require('@google-cloud/functions-framework');functions.http('handleWebhook', (request, response) => {\u00a0 const tag = request.body.fulfillmentInfo.tag;\u00a0 let text = '';\u00a0 if (tag === 'Default Welcome Intent') {\u00a0 \u00a0 text = 'Hello from a GCF Webhook';\u00a0 } else if (tag === 'get-name') {\u00a0 \u00a0 text = 'My name is Flowhook';\u00a0 } else {\u00a0 \u00a0 text = `There are no fulfillment responses defined for \"${tag}\"\" tag`;\u00a0 }\u00a0 const jsonResponse = {\u00a0 \u00a0 fulfillment_response: {\u00a0 \u00a0 \u00a0 messages: [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 text: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //fulfillment text response to be sent to the agent\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 text: [text],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 },\u00a0 };\u00a0 response.send(jsonResponse);});\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow-cx/webhook.py) \n```\nimport functions_framework# TODO(developer): change entry point to handle_webhook in cloud function@functions_framework.httpdef handle_webhook(request):\u00a0 \u00a0 req = request.get_json()\u00a0 \u00a0 tag = req[\"fulfillmentInfo\"][\"tag\"]\u00a0 \u00a0 if tag == \"Default Welcome Intent\":\u00a0 \u00a0 \u00a0 \u00a0 text = \"Hello from a GCF Webhook\"\u00a0 \u00a0 elif tag == \"get-name\":\u00a0 \u00a0 \u00a0 \u00a0 text = \"My name is Flowhook\"\u00a0 \u00a0 else:\u00a0 \u00a0 \u00a0 \u00a0 text = f\"There are no fulfillment responses defined for {tag} tag\"\u00a0 \u00a0 # You can also use the google.cloud.dialogflowcx_v3.types.WebhookRequest protos instead of manually writing the json object\u00a0 \u00a0 # Please see https://googleapis.dev/python/dialogflow/latest/dialogflow_v2/types.html?highlight=webhookresponse#google.cloud.dialogflow_v2.types.WebhookResponse for an overview\u00a0 \u00a0 res = {\"fulfillment_response\": {\"messages\": [{\"text\": {\"text\": [text]}}]}}\u00a0 \u00a0 # Returns json\u00a0 \u00a0 return res\n```\n## Set form parameters as required\nThe following samples show how to flag a parameter as required.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow-cx/src/main/java/dialogflow/cx/ConfigureWebhookToSetFormParametersAsOptionalOrRequired.java) \n```\n// TODO: Change class name to Example// TODO: Uncomment the line below before running cloud function// package com.example;import com.google.cloud.functions.HttpFunction;import com.google.cloud.functions.HttpRequest;import com.google.cloud.functions.HttpResponse;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.google.gson.JsonArray;import com.google.gson.JsonObject;import java.io.BufferedWriter;public class ConfigureWebhookToSetFormParametersAsOptionalOrRequired implements HttpFunction {\u00a0 @Override\u00a0 public void service(HttpRequest request, HttpResponse response) throws Exception {\u00a0 \u00a0 JsonObject parameterObject = new JsonObject();\u00a0 \u00a0 parameterObject.addProperty(\"display_name\", \"order_number\");\u00a0 \u00a0 parameterObject.addProperty(\"required\", \"true\");\u00a0 \u00a0 parameterObject.addProperty(\"state\", \"VALID\");\u00a0 \u00a0 JsonArray parameterInfoList = new JsonArray();\u00a0 \u00a0 parameterInfoList.add(parameterObject);\u00a0 \u00a0 JsonObject parameterInfoObject = new JsonObject();\u00a0 \u00a0 parameterInfoObject.add(\"parameter_info\", parameterInfoList);\u00a0 \u00a0 JsonObject formInfo = new JsonObject();\u00a0 \u00a0 formInfo.add(\"form_info\", parameterInfoObject);\u00a0 \u00a0 // Constructs the webhook response object\u00a0 \u00a0 JsonObject webhookResponse = new JsonObject();\u00a0 \u00a0 webhookResponse.add(\"page_info\", formInfo);\u00a0 \u00a0 Gson gson = new GsonBuilder().setPrettyPrinting().create();\u00a0 \u00a0 String jsonResponseObject = gson.toJson(webhookResponse);\u00a0 \u00a0 /* {\u00a0 \u00a0 \u00a0* \u00a0 \"page_info\": {\u00a0 \u00a0 \u00a0* \u00a0 \u00a0 \"form_info\": {\u00a0 \u00a0 \u00a0* \u00a0 \u00a0 \u00a0 \"parameter_info\": [\u00a0 \u00a0 \u00a0* \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0* \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"display_name\": \"order_number\",\u00a0 \u00a0 \u00a0* \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"required\": \"true\",\u00a0 \u00a0 \u00a0* \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"state\": \"VALID\"\u00a0 \u00a0 \u00a0* \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0* \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0* \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0* \u00a0 }\u00a0 \u00a0 \u00a0* }\u00a0 \u00a0 \u00a0*/\u00a0 \u00a0 BufferedWriter writer = response.getWriter();\u00a0 \u00a0 // Sends the responseObject\u00a0 \u00a0 writer.write(jsonResponseObject.toString());\u00a0 }}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow-cx/configure-webhook-to-set-form-parameter-as-optional-or-required.js) \n```\nconst functions = require('@google-cloud/functions-framework');functions.http('configureOptionalFormParam', (request, response) => {\u00a0 // The value of the parameter that the webhook will set as optional or required.\u00a0 // Note that the webhook cannot add or remove any form parameter\u00a0 const jsonResponse = {\u00a0 \u00a0 pageInfo: {\u00a0 \u00a0 \u00a0 formInfo: {\u00a0 \u00a0 \u00a0 \u00a0 parameterInfo: [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 displayName: 'order-number',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // if required: false, the agent will not reprompt for this parameter, even if the state is 'INVALID'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 required: true,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 state: 'VALID',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 },\u00a0 };\u00a0 // Info about form parameter that is sent in the webhook response:\u00a0 console.log(\u00a0 \u00a0 'Parameter Info: \\n',\u00a0 \u00a0 jsonResponse.pageInfo.formInfo.parameterInfo[0]\u00a0 );\u00a0 response.send(jsonResponse);});\n```\n## Validate a form parameter\nThe following samples show how to validate a form parameter.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow-cx/src/main/java/dialogflow/cx/WebhookValidateFormParameter.java) \n```\n// TODO: Change class name to Example// TODO: Uncomment the line below before running cloud function// package com.example;import com.google.cloud.functions.HttpFunction;import com.google.cloud.functions.HttpRequest;import com.google.cloud.functions.HttpResponse;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.google.gson.JsonArray;import com.google.gson.JsonObject;import java.io.BufferedWriter;public class WebhookValidateFormParameter implements HttpFunction {\u00a0 @Override\u00a0 public void service(HttpRequest request, HttpResponse response) throws Exception {\u00a0 \u00a0 JsonObject sessionInfo = new JsonObject();\u00a0 \u00a0 JsonObject sessionParameter = new JsonObject();\u00a0 \u00a0 sessionParameter.addProperty(\"order_number\", \"null\");\u00a0 \u00a0 sessionInfo.add(\"parameters\", sessionParameter);\u00a0 \u00a0 JsonObject parameterObject = new JsonObject();\u00a0 \u00a0 parameterObject.addProperty(\"display_name\", \"order_number\");\u00a0 \u00a0 parameterObject.addProperty(\"required\", \"true\");\u00a0 \u00a0 parameterObject.addProperty(\"state\", \"INVALID\");\u00a0 \u00a0 parameterObject.addProperty(\"value\", \"123\");\u00a0 \u00a0 JsonArray parameterInfoList = new JsonArray();\u00a0 \u00a0 parameterInfoList.add(parameterObject);\u00a0 \u00a0 JsonObject parameterInfoObject = new JsonObject();\u00a0 \u00a0 parameterInfoObject.add(\"parameter_info\", parameterInfoList);\u00a0 \u00a0 JsonObject pageInfo = new JsonObject();\u00a0 \u00a0 pageInfo.add(\"form_info\", parameterInfoObject);\u00a0 \u00a0 // Constructs the webhook response object\u00a0 \u00a0 JsonObject webhookResponse = new JsonObject();\u00a0 \u00a0 webhookResponse.add(\"page_info\", pageInfo);\u00a0 \u00a0 webhookResponse.add(\"session_info\", sessionInfo);\u00a0 \u00a0 Gson gson = new GsonBuilder().setPrettyPrinting().create();\u00a0 \u00a0 String jsonResponseObject = gson.toJson(webhookResponse);\u00a0 \u00a0 /**\u00a0 \u00a0 \u00a0* { \"page_info\": { \"form_info\": { \"parameter_info\": [ { \"display_name\": \"order_number\",\u00a0 \u00a0 \u00a0* \"required\": \"true\", \"state\": \"INVALID\", \"value\": \"123\" } ] } }, \"session_info\": {\u00a0 \u00a0 \u00a0* \"parameters\": { \"order_number\": \"null\" } } }\u00a0 \u00a0 \u00a0*/\u00a0 \u00a0 BufferedWriter writer = response.getWriter();\u00a0 \u00a0 // Sends the responseObject\u00a0 \u00a0 writer.write(jsonResponseObject.toString());\u00a0 }}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow-cx/webhook-validate-form-parameter.js) \n```\nconst functions = require('@google-cloud/functions-framework');functions.http('validateParameter', (request, response) => {\u00a0 // Webhook will validate or invalidate parameter based on logic configured by the user.\u00a0 // Access parameter values through the webhook request via `request.body.pageInfo.formInfo.parameterInfo[]`\u00a0 const jsonResponse = {\u00a0 \u00a0 page_info: {\u00a0 \u00a0 \u00a0 form_info: {\u00a0 \u00a0 \u00a0 \u00a0 parameter_info: [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 displayName: 'orderNumber',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 required: true,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 state: 'INVALID',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 value: 123,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 },\u00a0 \u00a0 sessionInfo: {\u00a0 \u00a0 \u00a0 parameters: {\u00a0 \u00a0 \u00a0 \u00a0 // Set session parameter to null if the form parameter is 'INVALID' and your agent needs to reprompt the user\u00a0 \u00a0 \u00a0 \u00a0 orderNumber: null,\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 },\u00a0 };\u00a0 response.send(jsonResponse);});\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow-cx/webhook_validate_form_parameter.py) \n```\nimport functions_framework@functions_framework.httpdef validate_parameter(request):\u00a0 \u00a0 \"\"\"Webhook will validate or invalidate parameter based on logic configured by the user.\"\"\"\u00a0 \u00a0 return {\u00a0 \u00a0 \u00a0 \u00a0 \"page_info\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"form_info\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"parameter_info\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"displayName\": \"orderNumber\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"required\": True,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"state\": \"INVALID\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"value\": 123,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"sessionInfo\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"parameters\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Set session parameter to None if the form parameter is 'INVALID' and your agent needs to reprompt the user\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"orderNumber\": None,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 }\n```\n## Log session ID\nThe following sample shows how to log the `session ID` from a webhook request.\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow-cx/webhook_log_session_info.py) \n```\nimport reimport functions_framework@functions_framework.httpdef log_session_id_for_troubleshooting(request):\u00a0 \u00a0 \"\"\"Webhook will log session id corresponding to request.\"\"\"\u00a0 \u00a0 req = request.get_json()\u00a0 \u00a0 # You can read more about SessionInfo at https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/SessionInfo\u00a0 \u00a0 # Use a regex pattern to get the session ID\u00a0 \u00a0 session_id_regex = r\".+\\/sessions\\/(.+)\"\u00a0 \u00a0 session = req[\"sessionInfo\"][\"session\"]\u00a0 \u00a0 regex_match = re.search(session_id_regex, session)\u00a0 \u00a0 session_id = regex_match.group(1)\u00a0 \u00a0 # Instead of printing, use the logging tools available to you\u00a0 \u00a0 print(f\"Debug Node: session ID = {session_id}\")\u00a0 \u00a0 # Return a generic response\u00a0 \u00a0 res = {\u00a0 \u00a0 \u00a0 \u00a0 \"fulfillment_response\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"messages\": [{\"text\": {\"text\": [f\"Request Session ID: {session_id}\"]}}]\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 \u00a0 # Returns json\u00a0 \u00a0 return res\n```\n## Troubleshooting\nWhen troubleshooting a webhook, it is helpful to log the session ID from your webhook. The `sessionInfo.session` field of the [WebhookRequest](/dialogflow/cx/docs/concept/webhook#webhook-request) contains the session ID. The session ID should be unique for each conversation, and it can help you compare agent logs against webhook logs for requests using the same session ID. The [Log session ID](#session-id) section above shows how to log the session ID from a webhook.\nIn addition, if you are hosting your webhook on [Cloud Functions](/functions) or a similar Google Cloud serverless option, you can use the `trace` field from [log entries](/logging/docs/reference/v2/rest/v2/LogEntry) as a log filter. A single execution of a function results in multiple log entries with the same trace value.\nThe example below uses both the session ID and the trace value to associate a particular Dialogflow agent error log with the corresponding Cloud Functions webhook log entries. The example uses [Cloud Logging Filters](/logging/docs/view/building-queries) for an agent that has enabled [Cloud Logging](/dialogflow/cx/docs/concept/logging#enable) .\n### 1. Filter Dialogflow logs for a particular agent's error logs\nUse the following Cloud logging filter to filter your Dialogflow logs for a particular agent's error logs:\n```\nlabels.location_id=\"global\"\nlabels.agent_id=\"AGENT_ID\"\nseverity=ERROR\n```\nA webhook log error entry looks like the following:\n```\n{\u00a0 \"insertId\": \"-zi368ye1ie3r\",\u00a0 \"jsonPayload\": {\u00a0 \u00a0 \"message\": \"Webhook error: State: URL_UNREACHABLE, Reason: UNREACHABLE_5xx, HTTP status code: 500\",\u00a0 \u00a0 \"code\": 14\u00a0 },\u00a0 \"resource\": {\u00a0 \u00a0 \"type\": \"global\",\u00a0 \u00a0 \"labels\": {\u00a0 \u00a0 \u00a0 \"project_id\": \"PROJECT_ID\"\u00a0 \u00a0 }\u00a0 },\u00a0 \"timestamp\": \"2022-10-05T19:44:53.098938Z\",\u00a0 \"severity\": \"ERROR\",\u00a0 \"labels\": {\u00a0 \u00a0 \"session_id\": \"ec8781-f28-7e6-791-d7e992e8f\",\u00a0 \u00a0 \"location_id\": \"global\",\u00a0 \u00a0 \"agent_id\": \"807346f0-f501-42b5-9642-af59d5e98165\"\u00a0 },\u00a0 \"logName\": \"projects/PROJECT_ID/logs/dialogflow-runtime.googleapis.com%2Frequests\",\u00a0 \"receiveTimestamp\": \"2022-10-05T19:44:53.222552658Z\"}\n```\nNote the `labels.session_id` field, which contains the session ID. You will use the session ID in the next step.\n### 2. Filter Cloud Function logs for the session ID\nUse the following Cloud logging filter to filter your Cloud Function logs for the session ID:\n**Note:** This filter assumes you have logged the session ID using the exact same text as the [Log session ID](#session-id) sample above.\n```\nresource.type = \"cloud_function\"\nresource.labels.function_name = \"CLOUD_FUNCTION_NAME\"\nresource.labels.region = \"CLOUD_FUNCTION_REGION\"\ntextPayload=\"Debug Node: session ID = SESSION_ID\"\n```\nThe resulting logs correspond to webhook logs made during the provided [session](/dialogflow/cx/docs/concept/session) . For example:\n```\n{\u00a0 \"textPayload\": \"Debug Node: session ID = ec8781-f28-7e6-791-d7e992e8f\",\u00a0 \"insertId\": \"632bdb2b000b7c6c77d0cc62\",\u00a0 \"resource\": {\u00a0 \u00a0 \"type\": \"cloud_function\",\u00a0 \u00a0 \"labels\": {\u00a0 \u00a0 \u00a0 \"project_id\": \"PROJECT_ID\",\u00a0 \u00a0 \u00a0 \"function_name\": \"webhook\",\u00a0 \u00a0 \u00a0 \"region\": \"us-central1\"\u00a0 \u00a0 }\u00a0 },\u00a0 \"timestamp\": \"2022-10-05T19:44:53.098938Z\",\u00a0 \"severity\": \"INFO\",\u00a0 \"labels\": {\u00a0 \u00a0 \"execution_id\": \"ozt5bnz50eeo\",\u00a0 \u00a0 \"instance_id\": \"00c61b117c1f116421aa5503bc80f9aa636b9ef117bb2722f3d54414085e62be6e55af0aa0250a63534262b31a3d3a14af8c940203f1915db8b25b\"\u00a0 },\u00a0 \"logName\": \"projects/PROJECT_ID/logs/cloudfunctions.googleapis.com%2Fcloud-functions\",\u00a0 \"trace\": \"projects/PROJECT_ID/traces/e41eefc1fac48665b442bfa400cc2f5e\",\u00a0 \"receiveTimestamp\": \"2022-10-05T19:44:53.222552658Z\"}\n```\nNote the `trace` field which is used in the next step.\n### 3. Filter Cloud Function logs for a particular trace\nUse the following Cloud Logging filter to filter Cloud Function logs for a particular trace:\n```\nresource.type = \"cloud_function\"\nresource.labels.function_name = \"CLOUD_FUNCTION_NAME\"\nresource.labels.region = \"CLOUD_FUNCTION_REGION\"\ntrace=\"projects/PROJECT_ID/traces/TRACE_ID\"\n```\nwhere `TRACE_ID` is the last segment of trace. For example the `TRACE_ID` for `projects/PROJECT_ID/traces/e41eefc1fac48665b442bfa400cc2f5e` is `e41eefc1fac48665b442bfa400cc2f5e` .\nThe resulting logs correspond to all webhook logs generated during the execution of the webhook request associated with the session ID from step 1 and with the trace from step 2.", "guide": "Dialogflow"}