{"title": "Dialogflow - Custom CA certificates", "url": "https://cloud.google.com/dialogflow/cx/docs/concept/custom-ca", "abstract": "# Dialogflow - Custom CA certificates\nDialogflow webhooks require HTTPS endpoints that present valid TLS certificates when they are verified using Google's default trust store. However, you may want to use custom CA certificates, which cannot be signed by a certificate authority recognized by Google's default trust store. For example, webhook servers that are inside Google's private VPC network have this issue. In this case, you can upload the custom certificates to Dialogflow when creating webhooks, and the uploaded certificates will override Google's default trust store.\nCustom CA certificates can be self-signed certificates or custom root certificates. You can upload multiple certificates in case you want to rotate the certificates. The certificates must be in [DER format](https://en.wikipedia.org/wiki/X.509#Certificate_filename_extensions) and must be signed with [subject alternative name](https://en.wikipedia.org/wiki/Subject_Alternative_Name) matching the webhook URL. When the [keyUsage](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.3) extension is present, its value needs to be `digitalSignature` .\n**Note:** Dialogflow does not support customizing the webhook client certificate to perform [mutual TLS authentication](/dialogflow/cx/docs/concept/mtls) .\n", "content": "## Demo self-signed server\nThe following is the configuration of a demo server:\n- Prepare self-signed certificate files.  We use www.example.com as the example domain.```\nopenssl genrsa -out server.key 2048openssl req -nodes -new -sha256 -newkey rsa:2048 -key server.key -subj \"/CN=www.example.com\" -out server.csropenssl x509 -req -days 3650 -sha256 -in server.csr -signkey server.key -out server.crt -extfile <(printf \"\\nsubjectAltName='DNS:www.example.com'\")openssl x509 -in server.crt -out server.der -outform DER\n```\n- Start your HTTPS server using the server certificate (`server.crt`)  and private key (`server.key`) created in previous step.  We assume the server is listening on port 443.\n- Test to connect to the server locally.```\ncurl --cacert server.crt https://www.example.com --resolve www.example.com:443:127.0.0.1\n```## Demo webhook with custom certificate\nAfter you have setup the server with your custom certificate, you may [create a webhook resource](/dialogflow/cx/docs/concept/webhook#create) with the following extra instructions to use the custom certificate:\n- Set the URL matching the domain signed with the certificate (`https://www.example.com`in previous demo). It is your own responsibility to make sure that your domain will correctly resolve to the IP address of the server.\n- Upload the custom certificate in DER format. This is the`server.der`file in previous self-signed demo or the custom root certificate.\n- For webhooks integrated with [Service Directory private network access](/dialogflow/cx/docs/concept/webhook#sd) , Setup your [Service Directory Endpoint](/service-directory/docs/configuring-service-directory#configure_an_endpoint) with the IP address and port of your server, and provide the [Service Directory Service](/service-directory/docs/configuring-service-directory#configure_a_service) when creating webhook.", "guide": "Dialogflow"}