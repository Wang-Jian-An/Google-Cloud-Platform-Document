{"title": "Dialogflow - Dialogflow Console overview", "url": "https://cloud.google.com/dialogflow/es/docs/console", "abstract": "# Dialogflow - Dialogflow Console overview\nDialogflow provides a web user interface called the ( [open console](https://dialogflow.cloud.google.com) ).  You use this console to create, build, and test agents.\nThe Dialogflow Console is different from the Google Cloud Platform (GCP) Console ( [visit documentation](https://support.google.com/cloud/answer/3465889?hl=en&ref_topic=3340599) , [open console](https://console.cloud.google.com/) ). The Dialogflow Console is used to manage Dialogflow agents, while the GCP Console is used to manage GCP-specific Dialogflow settings (for example, billing) and other GCP resources.\nIn most cases you should use the Dialogflow Console to build agents, but you can also use the Dialogflow API to build agents for advanced scenarios.\nMany quickstart, concept, and how-to guides take you through the steps of using the console. This page provides a high-level summary of the user interface layout and what the console is used for.\n", "content": "## How the console is used\nThe console is used to create, build, manage, fine-tune, and test your agents. With it, you can:\n- Create [agents](/dialogflow/docs/agents-overview) that define the conversational experience\n- Create [intents](/dialogflow/docs/intents-overview) that map user input to responses\n- Create [entities](/dialogflow/docs/entities-overview) to extract useful data from user input\n- Control conversation paths with [contexts](/dialogflow/docs/contexts-overview) \n- Add [events](/dialogflow/docs/events-overview) that are triggered by occurrences outside of the conversation\n- [Integrate](/dialogflow/docs/integrations) with other conversational platforms\n- Implement [fulfillment](/dialogflow/docs/fulfillment-overview) to connect your service when using integrations\n- [Analyze](/dialogflow/docs/analytics) agent performance\n- Test your agent via the [simulator](#simulator) \n- And more ...\n**Note:** As an alternative to using the console,  you can use the API to build and test agents.  You should only do this in advanced scenarios,  because it is usually much easier to use the console.\n## Sign in to the console\nWhen you sign in to the Dialogflow console, sign in with your Google account used to access GCP services. When you sign in for the first time, you will be prompted with the following:\n- Allow Dialogflow to access your Google account. Dialogflow uses the following permissions:- **View and manage your data across Google Cloud Platform services** : This permission lets you optionally deploy Cloud Functions for Firebase. See [Fulfillment](/dialogflow/docs/fulfillment-overview) for more information.\n- **View and manage your Google Assistant voice commands, dialog, and grammar** : This permission lets you optionally test your Dialogflow agent on the Google Assistant. See [Google Assistant integration](/dialogflow/docs/integrations/aog) for more information.\n- **View and manage your Actions on Google** : This permission lets you optionally deploy your Dialogflow agent to the Google Assistant and Actions on Google as a conversational action(s).\n- Accept Dialogflow's terms of service.## Console interface layout\nThe console is arranged in three main panels:### Sidebar menu (left)\nOnly one agent is selected at a time, and you select the agent at the top of the sidebar menu. Once you have selected an agent, you use these menu options to build and manage various elements of the agent. For example, if you click **Intents** , you will see a list of intents for the selected agent in the middle panel.\n**Note:** If you're working on a small screen, and the sidebar menu is hidden,  click the menu button in the upper left corner.\n### Main content (middle)\nThis panel shows data and editing controls for the option selected in the sidebar menu. For example, if you have selected **Intents** , you will see an editable list of intents for the selected agent.\n### Dialogflow simulator (right)\nYou can have a conversation with your agent by speaking or typing messages in the Dialogflow simulator. This is a useful tool to test that your agent behaves as expected. There are examples of using the simulator in many quickstart and how-to guides.", "guide": "Dialogflow"}