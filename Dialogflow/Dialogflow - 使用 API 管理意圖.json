{"title": "Dialogflow - \u4f7f\u7528 API \u7ba1\u7406\u610f\u5716", "url": "https://cloud.google.com/dialogflow/es/docs/how/manage-intents?hl=zh-cn", "abstract": "# Dialogflow - \u4f7f\u7528 API \u7ba1\u7406\u610f\u5716\n[\u610f\u5716](https://cloud.google.com/dialogflow/docs/intents-overview?hl=zh-cn) \u6c7a\u5b9a\u7cfb\u7d71\u53ef\u7406\u89e3\u54ea\u4e9b\u7528\u6236\u8acb\u6c42\u4ee5\u53ca\u8981\u63a1\u53d6\u600e\u6a23\u7684\u64cd\u4f5c\u3002\u5728\u5927\u591a\u6578\u60c5\u6cc1\u4e0b\uff0c\u60a8\u5c07\u4f7f\u7528 [Dialogflow ES \u63a7\u5236\u6aaf](https://dialogflow.cloud.google.com?hl=zh-cn) \u4f86\u7ba1\u7406\u610f\u5716\u3002\u5728\u9ad8\u7d1a\u5834\u666f\u4e2d\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528 API \u4f86\u7ba1\u7406\u610f\u5716\u3002\u672c\u9801\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 API \u5275\u5efa\u3001\u5217\u51fa\u548c\u522a\u9664\u610f\u5716\u3002\n", "content": "## \u6e96\u5099\u5de5\u4f5c\n\u5728\u95b1\u8b80\u672c\u6307\u5357\u4e4b\u524d\uff0c\u8acb\u5148\u5b8c\u6210\u4ee5\u4e0b\u4e8b\u9805\uff1a\n- \u95b1\u8b80 [Dialogflow \u57fa\u790e\u77e5\u8b58](https://cloud.google.com/dialogflow/docs/basics?hl=zh-cn) \u3002\n- \u57f7\u884c [\u8a2d\u7f6e\u6b65\u9a5f](https://cloud.google.com/dialogflow/docs/quick/setup?hl=zh-cn) \u3002## \u5275\u5efa\u4ee3\u7406\n\u5982\u679c\u5c1a\u672a\u5275\u5efa\u4ee3\u7406\uff0c\u8acb\u7acb\u5373\u5275\u5efa\u4e00\u500b\uff1a- \u8f49\u5230 [Dialogflow ES \u63a7\u5236\u6aaf](https://dialogflow.cloud.google.com?hl=zh-cn) \u3002\n- \u5982\u679c\u7cfb\u7d71\u8981\u6c42\u767b\u9304 Dialogflow \u63a7\u5236\u6aaf\uff0c\u8acb\u767b\u9304\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Dialogflow \u63a7\u5236\u6aaf\u6982\u89bd](https://cloud.google.com/dialogflow/docs/console?hl=zh-cn) \u3002\n- \u9ede\u64ca\u5de6\u5074\u908a\u6b04\u83dc\u55ae\u4e2d\u7684 **\u5275\u5efa\u4ee3\u7406** (Create Agent)\u3002\u5982\u679c\u60a8\u5df2\u6709\u5176\u4ed6\u4ee3\u7406\uff0c\u8acb\u9ede\u64ca\u4ee3\u7406\u540d\u7a31\uff0c\u6efe\u52d5\u5230\u5e95\u90e8\uff0c\u7136\u5f8c\u9ede\u64ca **\u5275\u5efa\u65b0\u4ee3\u7406** (Create new agent)\u3002\n- \u8f38\u5165\u60a8\u7684\u4ee3\u7406\u540d\u7a31\u3001\u9ed8\u8a8d\u8a9e\u8a00\u548c\u9ed8\u8a8d\u6642\u5340\u3002\n- \u5982\u679c\u60a8\u5df2\u7d93\u5275\u5efa\u4e86\u9805\u76ee\uff0c\u8acb\u8f38\u5165\u8a72\u9805\u76ee\u3002\u5982\u679c\u8981\u5141\u8a31 Dialogflow \u63a7\u5236\u6aaf\u5275\u5efa\u9805\u76ee\uff0c\u8acb\u9078\u64c7 **\u5275\u5efa\u65b0 Google \u9805\u76ee** (Create a new Google project)\u3002\n- \u9ede\u64ca **\u5275\u5efa** (Create) \u6309\u9215\u3002## \u5c07\u793a\u4f8b\u6587\u4ef6\u5c0e\u5165\u4ee3\u7406\n\u672c\u6307\u5357\u4e2d\u7684\u6b65\u9a5f\u5c0d\u60a8\u7684\u4ee3\u7406\u9032\u884c\u4e86\u5047\u8a2d\uff0c\u56e0\u6b64\u60a8\u9700\u8981 [import](https://cloud.google.com/dialogflow/docs/agents-settings?hl=zh-cn#export) \u7232\u672c\u6307\u5357\u6e96\u5099\u7684\u4ee3\u7406\u3002 \u5c0e\u5165\u6642\uff0c\u9019\u4e9b\u6b65\u9a5f\u4f7f\u7528 \u201c\u6062\u5fa9\u201d(restore) \u9078\u9805\uff0c\u8a72\u9078\u9805\u6703\u8986\u84cb\u6240\u6709\u4ee3\u7406\u8a2d\u7f6e\u3001\u610f\u5716\u548c\u5be6\u9ad4\u3002\n\u5982\u9700\u5c0e\u5165\u6587\u4ef6\uff0c\u8acb\u6309\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a\n- \u4e0b\u8f09 [room-booking-agent.zip](https://cloud.google.com/static/dialogflow/es/docs/data/room-booking-agent.zip?hl=zh-cn) \u6587\u4ef6\u3002\n- \u8f49\u5230 [Dialogflow ES \u63a7\u5236\u6aaf](https://dialogflow.cloud.google.com?hl=zh-cn) \u3002\n- \u9078\u64c7\u60a8\u7684\u4ee3\u7406\u3002\n- \u9ede\u64ca\u4ee3\u7406\u540d\u7a31\u65c1\u908a\u7684\u8a2d\u7f6e\u6309\u9215\u3002\n- \u9078\u64c7 **\u5c0e\u51fa\u548c\u5c0e\u5165** \u6a19\u7c64\u9801\u3002\n- \u9078\u64c7 **\u5f9e ZIP \u6587\u4ef6\u6062\u5fa9** (Restore from ZIP)\uff0c\u7136\u5f8c\u6309\u7167\u8aaa\u660e\u6062\u5fa9\u4e0b\u8f09\u7684 zip \u6587\u4ef6\u3002## \u4f7f\u7528 IntentView \u8fd4\u56de\u6240\u6709\u610f\u5716\u6578\u64da\n\u5275\u5efa\u3001\u5217\u51fa\u6216\u7372\u53d6\u610f\u5716\u6642\uff0c\u610f\u5716\u6578\u64da\u6703\u8fd4\u56de\u7d66\u8abf\u7528\u65b9\u3002\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u6b64\u8fd4\u56de\u6578\u64da\u7232\u7e2e\u5beb\u5f62\u5f0f\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528\u6b64\u9ed8\u8a8d\u503c\u3002\n\u5982\u9700\u6aa2\u7d22\u6240\u6709\u610f\u5716\u6578\u64da\uff0c\u5fc5\u9808\u5c07 `IntentView` \u53c3\u6578\u8a2d\u7f6e\u7232 `INTENT_VIEW_FULL` \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u610f\u5716](https://cloud.google.com/dialogflow/docs/reference/common-types?hl=zh-cn#intents) \u985e\u578b\u65b9\u6cd5\u3002\n## \u5275\u5efa\u610f\u5716\n\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u5275\u5efa\u610f\u5716\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u610f\u5716\u53c3\u8003](https://cloud.google.com/dialogflow/docs/reference/common-types?hl=zh-cn#intents) \u3002\n\u5982\u9700\u7232\u4ee3\u7406\u5275\u5efa\u610f\u5716\uff0c\u8acb\u5c0d `intent` \u8cc7\u6e90\u8abf\u7528 `create` \u65b9\u6cd5\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 Google Cloud \u9805\u76ee ID\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://dialogflow.googleapis.com/v2/projects/PROJECT_ID/agent/intents\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"displayName\": \"ListRooms\",\n \"priority\": 500000,\n \"webhookState\": \"WEBHOOK_STATE_UNSPECIFIED\",\n \"trainingPhrases\": [ {\n  \"type\": \"EXAMPLE\",\n  \"parts\": [  {\n   \"text\": \"What rooms are available at 10am today?\"\n  }\n  ]\n }\n ],\n \"action\": \"listRooms\",\n \"messages\": [ {\n  \"text\": {\n  \"text\": [   \"Here are the available rooms:\"\n  ]\n  }\n }\n ]\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a`intents` \u5f8c\u9762\u7684\u8def\u5f91\u6bb5\u5305\u542b\u65b0\u7684\u610f\u5716 ID\u3002\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/dialogflow/intent_management/intent_management.go) \n```\nfunc CreateIntent(projectID, displayName string, trainingPhraseParts, messageTexts []string) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 intentsClient, clientErr := dialogflow.NewIntentsClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if clientErr != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return clientErr\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer intentsClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 if projectID == \"\" || displayName == \"\" {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(fmt.Sprintf(\"Received empty project (%s) or intent (%s)\", projectID, displayName))\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 parent := fmt.Sprintf(\"projects/%s/agent\", projectID)\u00a0 \u00a0 \u00a0 \u00a0 var targetTrainingPhrases []*dialogflowpb.Intent_TrainingPhrase\u00a0 \u00a0 \u00a0 \u00a0 var targetTrainingPhraseParts []*dialogflowpb.Intent_TrainingPhrase_Part\u00a0 \u00a0 \u00a0 \u00a0 for _, partString := range trainingPhraseParts {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 part := dialogflowpb.Intent_TrainingPhrase_Part{Text: partString}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 targetTrainingPhraseParts = []*dialogflowpb.Intent_TrainingPhrase_Part{&part}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 targetTrainingPhrase := dialogflowpb.Intent_TrainingPhrase{Type: dialogflowpb.Intent_TrainingPhrase_EXAMPLE, Parts: targetTrainingPhraseParts}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 targetTrainingPhrases = append(targetTrainingPhrases, &targetTrainingPhrase)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 intentMessageTexts := dialogflowpb.Intent_Message_Text{Text: messageTexts}\u00a0 \u00a0 \u00a0 \u00a0 wrappedIntentMessageTexts := dialogflowpb.Intent_Message_Text_{Text: &intentMessageTexts}\u00a0 \u00a0 \u00a0 \u00a0 intentMessage := dialogflowpb.Intent_Message{Message: &wrappedIntentMessageTexts}\u00a0 \u00a0 \u00a0 \u00a0 target := dialogflowpb.Intent{DisplayName: displayName, WebhookState: dialogflowpb.Intent_WEBHOOK_STATE_UNSPECIFIED, TrainingPhrases: targetTrainingPhrases, Messages: []*dialogflowpb.Intent_Message{&intentMessage}}\u00a0 \u00a0 \u00a0 \u00a0 request := dialogflowpb.CreateIntentRequest{Parent: parent, Intent: &target}\u00a0 \u00a0 \u00a0 \u00a0 _, requestErr := intentsClient.CreateIntent(ctx, &request)\u00a0 \u00a0 \u00a0 \u00a0 if requestErr != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return requestErr\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/snippets/src/main/java/com/example/dialogflow/IntentManagement.java) \n```\n/**\u00a0* Create an intent of the given intent type\u00a0*\u00a0* @param displayName The display name of the intent.\u00a0* @param projectId Project/Agent Id.\u00a0* @param trainingPhrasesParts Training phrases.\u00a0* @param messageTexts Message texts for the agent's response when the intent is detected.\u00a0* @return The created Intent.\u00a0*/public static Intent createIntent(\u00a0 \u00a0 String displayName,\u00a0 \u00a0 String projectId,\u00a0 \u00a0 List<String> trainingPhrasesParts,\u00a0 \u00a0 List<String> messageTexts)\u00a0 \u00a0 throws ApiException, IOException {\u00a0 // Instantiates a client\u00a0 try (IntentsClient intentsClient = IntentsClient.create()) {\u00a0 \u00a0 // Set the project agent name using the projectID (my-project-id)\u00a0 \u00a0 AgentName parent = AgentName.of(projectId);\u00a0 \u00a0 // Build the trainingPhrases from the trainingPhrasesParts\u00a0 \u00a0 List<TrainingPhrase> trainingPhrases = new ArrayList<>();\u00a0 \u00a0 for (String trainingPhrase : trainingPhrasesParts) {\u00a0 \u00a0 \u00a0 trainingPhrases.add(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TrainingPhrase.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addParts(Part.newBuilder().setText(trainingPhrase).build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build());\u00a0 \u00a0 }\u00a0 \u00a0 // Build the message texts for the agent's response\u00a0 \u00a0 Message message =\u00a0 \u00a0 \u00a0 \u00a0 Message.newBuilder().setText(Text.newBuilder().addAllText(messageTexts).build()).build();\u00a0 \u00a0 // Build the intent\u00a0 \u00a0 Intent intent =\u00a0 \u00a0 \u00a0 \u00a0 Intent.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDisplayName(displayName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addMessages(message)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addAllTrainingPhrases(trainingPhrases)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Performs the create intent request\u00a0 \u00a0 Intent response = intentsClient.createIntent(parent, intent);\u00a0 \u00a0 System.out.format(\"Intent created: %s\\n\", response);\u00a0 \u00a0 return response;\u00a0 }}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow/create-intent.js) \n```\n/**\u00a0* TODO(developer): Uncomment the following lines before running the sample.\u00a0*/// const projectId = 'The Project ID to use, e.g. 'YOUR_GCP_ID';// const displayName = 'The display name of the intent, e.g. 'MAKE_RESERVATION';// const trainingPhrasesParts = 'Training phrases, e.g. 'How many people are staying?';// const messageTexts = 'Message texts for the agent's response when the intent is detected, e.g. 'Your reservation has been confirmed';// Imports the Dialogflow libraryconst dialogflow = require('@google-cloud/dialogflow');// Instantiates the Intent Clientconst intentsClient = new dialogflow.IntentsClient();async function createIntent() {\u00a0 // Construct request\u00a0 // The path to identify the agent that owns the created intent.\u00a0 const agentPath = intentsClient.projectAgentPath(projectId);\u00a0 const trainingPhrases = [];\u00a0 trainingPhrasesParts.forEach(trainingPhrasesPart => {\u00a0 \u00a0 const part = {\u00a0 \u00a0 \u00a0 text: trainingPhrasesPart,\u00a0 \u00a0 };\u00a0 \u00a0 // Here we create a new training phrase for each provided part.\u00a0 \u00a0 const trainingPhrase = {\u00a0 \u00a0 \u00a0 type: 'EXAMPLE',\u00a0 \u00a0 \u00a0 parts: [part],\u00a0 \u00a0 };\u00a0 \u00a0 trainingPhrases.push(trainingPhrase);\u00a0 });\u00a0 const messageText = {\u00a0 \u00a0 text: messageTexts,\u00a0 };\u00a0 const message = {\u00a0 \u00a0 text: messageText,\u00a0 };\u00a0 const intent = {\u00a0 \u00a0 displayName: displayName,\u00a0 \u00a0 trainingPhrases: trainingPhrases,\u00a0 \u00a0 messages: [message],\u00a0 };\u00a0 const createIntentRequest = {\u00a0 \u00a0 parent: agentPath,\u00a0 \u00a0 intent: intent,\u00a0 };\u00a0 // Create the intent\u00a0 const [response] = await intentsClient.createIntent(createIntentRequest);\u00a0 console.log(`Intent ${response.name} created`);}createIntent();\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow/intent_management.py) \n```\ndef create_intent(project_id, display_name, training_phrases_parts, message_texts):\u00a0 \u00a0 \"\"\"Create an intent of the given intent type.\"\"\"\u00a0 \u00a0 from google.cloud import dialogflow\u00a0 \u00a0 intents_client = dialogflow.IntentsClient()\u00a0 \u00a0 parent = dialogflow.AgentsClient.agent_path(project_id)\u00a0 \u00a0 training_phrases = []\u00a0 \u00a0 for training_phrases_part in training_phrases_parts:\u00a0 \u00a0 \u00a0 \u00a0 part = dialogflow.Intent.TrainingPhrase.Part(text=training_phrases_part)\u00a0 \u00a0 \u00a0 \u00a0 # Here we create a new training phrase for each provided part.\u00a0 \u00a0 \u00a0 \u00a0 training_phrase = dialogflow.Intent.TrainingPhrase(parts=[part])\u00a0 \u00a0 \u00a0 \u00a0 training_phrases.append(training_phrase)\u00a0 \u00a0 text = dialogflow.Intent.Message.Text(text=message_texts)\u00a0 \u00a0 message = dialogflow.Intent.Message(text=text)\u00a0 \u00a0 intent = dialogflow.Intent(\u00a0 \u00a0 \u00a0 \u00a0 display_name=display_name, training_phrases=training_phrases, messages=[message]\u00a0 \u00a0 )\u00a0 \u00a0 response = intents_client.create_intent(\u00a0 \u00a0 \u00a0 \u00a0 request={\"parent\": parent, \"intent\": intent}\u00a0 \u00a0 )\u00a0 \u00a0 print(\"Intent created: {}\".format(response))\n```No preface\n **C#** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [C# \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [.NET \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.Dialogflow.V2/index.html) \u3002\n **PHP** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [PHP \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [PHP \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://cloud.google.com/php/docs/reference/cloud-dialogflow/latest?hl=zh-cn) \u3002\n **Ruby \u7248** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [Ruby \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [Ruby \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://googleapis.dev/ruby/google-cloud-dialogflow/latest/Google/Cloud/Dialogflow.html) \u3002\n## \u5217\u51fa\u610f\u5716\n\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u5217\u51fa\u610f\u5716\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u610f\u5716\u53c3\u8003](https://cloud.google.com/dialogflow/docs/reference/common-types?hl=zh-cn#intents) \u3002\n\u5982\u9700\u5217\u51fa\u4ee3\u7406\u7684\u610f\u5716\uff0c\u8acb\u5c0d `intents` \u8cc7\u6e90\u8abf\u7528 `list` \u65b9\u6cd5\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 Google Cloud \u9805\u76ee ID\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://dialogflow.googleapis.com/v2/projects/PROJECT_ID/agent/intents\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"intents\": [ {\n  \"name\": \"projects/PROJECT_ID/agent/intents/5b290a94-55d6-4074-96f4-9c4c4879c2bb\",\n  \"displayName\": \"ListRooms\",\n  \"priority\": 500000,\n  \"action\": \"listRooms\",\n  \"messages\": [  {\n   \"text\": {\n   \"text\": [    \"Here are the available rooms:\"\n   ]\n   }\n  }\n  ]\n },\n ...\n ]\n}\n```\n`intents` \u5f8c\u9762\u7684\u8def\u5f91\u6bb5\u5305\u542b\u60a8\u7684 intent ID\u3002\n\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/dialogflow/intent_management/intent_management.go) \n```\nfunc ListIntents(projectID string) ([]*dialogflowpb.Intent, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 intentsClient, clientErr := dialogflow.NewIntentsClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if clientErr != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, clientErr\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer intentsClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 if projectID == \"\" {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, errors.New(fmt.Sprintf(\"Received empty project (%s)\", projectID))\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 parent := fmt.Sprintf(\"projects/%s/agent\", projectID)\u00a0 \u00a0 \u00a0 \u00a0 request := dialogflowpb.ListIntentsRequest{Parent: parent}\u00a0 \u00a0 \u00a0 \u00a0 intentIterator := intentsClient.ListIntents(ctx, &request)\u00a0 \u00a0 \u00a0 \u00a0 var intents []*dialogflowpb.Intent\u00a0 \u00a0 \u00a0 \u00a0 for intent, status := intentIterator.Next(); status != iterator.Done; {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 intents = append(intents, intent)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 intent, status = intentIterator.Next()\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return intents, nil}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/snippets/src/main/java/com/example/dialogflow/IntentManagement.java) \n```\n/**\u00a0* List intents\u00a0*\u00a0* @param projectId Project/Agent Id.\u00a0* @return Intents found.\u00a0*/public static List<Intent> listIntents(String projectId) throws ApiException, IOException {\u00a0 List<Intent> intents = Lists.newArrayList();\u00a0 // Instantiates a client\u00a0 try (IntentsClient intentsClient = IntentsClient.create()) {\u00a0 \u00a0 // Set the project agent name using the projectID (my-project-id)\u00a0 \u00a0 AgentName parent = AgentName.of(projectId);\u00a0 \u00a0 // Performs the list intents request\u00a0 \u00a0 for (Intent intent : intentsClient.listIntents(parent).iterateAll()) {\u00a0 \u00a0 \u00a0 System.out.println(\"====================\");\u00a0 \u00a0 \u00a0 System.out.format(\"Intent name: '%s'\\n\", intent.getName());\u00a0 \u00a0 \u00a0 System.out.format(\"Intent display name: '%s'\\n\", intent.getDisplayName());\u00a0 \u00a0 \u00a0 System.out.format(\"Action: '%s'\\n\", intent.getAction());\u00a0 \u00a0 \u00a0 System.out.format(\"Root followup intent: '%s'\\n\", intent.getRootFollowupIntentName());\u00a0 \u00a0 \u00a0 System.out.format(\"Parent followup intent: '%s'\\n\", intent.getParentFollowupIntentName());\u00a0 \u00a0 \u00a0 System.out.format(\"Input contexts:\\n\");\u00a0 \u00a0 \u00a0 for (String inputContextName : intent.getInputContextNamesList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"\\tName: %s\\n\", inputContextName);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 System.out.format(\"Output contexts:\\n\");\u00a0 \u00a0 \u00a0 for (Context outputContext : intent.getOutputContextsList()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"\\tName: %s\\n\", outputContext.getName());\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 intents.add(intent);\u00a0 \u00a0 }\u00a0 }\u00a0 return intents;}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow/list-intents.js) \n```\n/**\u00a0* TODO(developer): Uncomment the following lines before running the sample.\u00a0*/// const projectId = 'The Project ID to use, e.g. 'YOUR_GCP_ID';// Imports the Dialogflow libraryconst dialogflow = require('@google-cloud/dialogflow');// Instantiates clientsconst intentsClient = new dialogflow.IntentsClient();async function listIntents() {\u00a0 // Construct request\u00a0 // The path to identify the agent that owns the intents.\u00a0 const projectAgentPath = intentsClient.projectAgentPath(projectId);\u00a0 console.log(projectAgentPath);\u00a0 const request = {\u00a0 \u00a0 parent: projectAgentPath,\u00a0 };\u00a0 // Send the request for listing intents.\u00a0 const [response] = await intentsClient.listIntents(request);\u00a0 response.forEach(intent => {\u00a0 \u00a0 console.log('====================');\u00a0 \u00a0 console.log(`Intent name: ${intent.name}`);\u00a0 \u00a0 console.log(`Intent display name: ${intent.displayName}`);\u00a0 \u00a0 console.log(`Action: ${intent.action}`);\u00a0 \u00a0 console.log(`Root folowup intent: ${intent.rootFollowupIntentName}`);\u00a0 \u00a0 console.log(`Parent followup intent: ${intent.parentFollowupIntentName}`);\u00a0 \u00a0 console.log('Input contexts:');\u00a0 \u00a0 intent.inputContextNames.forEach(inputContextName => {\u00a0 \u00a0 \u00a0 console.log(`\\tName: ${inputContextName}`);\u00a0 \u00a0 });\u00a0 \u00a0 console.log('Output contexts:');\u00a0 \u00a0 intent.outputContexts.forEach(outputContext => {\u00a0 \u00a0 \u00a0 console.log(`\\tName: ${outputContext.name}`);\u00a0 \u00a0 });\u00a0 });}listIntents();\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow/intent_management.py) \n```\ndef list_intents(project_id):\u00a0 \u00a0 from google.cloud import dialogflow\u00a0 \u00a0 intents_client = dialogflow.IntentsClient()\u00a0 \u00a0 parent = dialogflow.AgentsClient.agent_path(project_id)\u00a0 \u00a0 intents = intents_client.list_intents(request={\"parent\": parent})\u00a0 \u00a0 for intent in intents:\u00a0 \u00a0 \u00a0 \u00a0 print(\"=\" * 20)\u00a0 \u00a0 \u00a0 \u00a0 print(\"Intent name: {}\".format(intent.name))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Intent display_name: {}\".format(intent.display_name))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Action: {}\\n\".format(intent.action))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Root followup intent: {}\".format(intent.root_followup_intent_name))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Parent followup intent: {}\\n\".format(intent.parent_followup_intent_name))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Input contexts:\")\u00a0 \u00a0 \u00a0 \u00a0 for input_context_name in intent.input_context_names:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 print(\"\\tName: {}\".format(input_context_name))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Output contexts:\")\u00a0 \u00a0 \u00a0 \u00a0 for output_context in intent.output_contexts:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 print(\"\\tName: {}\".format(output_context.name))\n```No preface\n **C#** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [C# \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [.NET \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.Dialogflow.V2/index.html) \u3002\n **PHP** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [PHP \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [PHP \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://cloud.google.com/php/docs/reference/cloud-dialogflow/latest?hl=zh-cn) \u3002\n **Ruby \u7248** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [Ruby \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [Ruby \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://googleapis.dev/ruby/google-cloud-dialogflow/latest/Google/Cloud/Dialogflow.html) \u3002\n## \u522a\u9664\u610f\u5716\n\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u522a\u9664\u610f\u5716\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u610f\u5716\u53c3\u8003](https://cloud.google.com/dialogflow/docs/reference/common-types?hl=zh-cn#intents) \u3002\n\u5982\u9700\u522a\u9664\u4ee3\u7406\u7684\u610f\u5716\uff0c\u8acb\u5c0d `intents` \u8cc7\u6e90\u8abf\u7528 `delete` \u65b9\u6cd5\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 Google Cloud \u9805\u76ee ID\n- \uff1a\u60a8\u7684\u610f\u5716 ID\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nDELETE https://dialogflow.googleapis.com/v2/projects/PROJECT_ID/agent/intents/INTENT_ID\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6703\u6536\u5230\u4e00\u500b\u6210\u529f\u7684\u72c0\u614b\u4ee3\u78bc (2xx) \u548c\u4e00\u500b\u7a7a\u97ff\u61c9\u3002\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/dialogflow/intent_management/intent_management.go) \n```\nfunc DeleteIntent(projectID, intentID string) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 intentsClient, clientErr := dialogflow.NewIntentsClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if clientErr != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return clientErr\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer intentsClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 if projectID == \"\" || intentID == \"\" {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(fmt.Sprintf(\"Received empty project (%s) or intent (%s)\", projectID, intentID))\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 targetPath := fmt.Sprintf(\"projects/%s/agent/intents/%s\", projectID, intentID)\u00a0 \u00a0 \u00a0 \u00a0 request := dialogflowpb.DeleteIntentRequest{Name: targetPath}\u00a0 \u00a0 \u00a0 \u00a0 requestErr := intentsClient.DeleteIntent(ctx, &request)\u00a0 \u00a0 \u00a0 \u00a0 if requestErr != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return requestErr\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/snippets/src/main/java/com/example/dialogflow/IntentManagement.java) \n```\n/**\u00a0* Delete intent with the given intent type and intent value\u00a0*\u00a0* @param intentId The id of the intent.\u00a0* @param projectId Project/Agent Id.\u00a0*/public static void deleteIntent(String intentId, String projectId)\u00a0 \u00a0 throws ApiException, IOException {\u00a0 // Instantiates a client\u00a0 try (IntentsClient intentsClient = IntentsClient.create()) {\u00a0 \u00a0 IntentName name = IntentName.of(projectId, intentId);\u00a0 \u00a0 // Performs the delete intent request\u00a0 \u00a0 intentsClient.deleteIntent(name);\u00a0 }}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow/resource.js) \n```\n// Imports the Dialogflow libraryconst dialogflow = require('@google-cloud/dialogflow');// Instantiates clientsconst intentsClient = new dialogflow.IntentsClient();const intentPath = intentsClient.projectAgentIntentPath(projectId, intentId);const request = {name: intentPath};// Send the request for deleting the intent.const result = await intentsClient.deleteIntent(request);console.log(`Intent ${intentPath} deleted`);return result;\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow/intent_management.py) \n```\ndef delete_intent(project_id, intent_id):\u00a0 \u00a0 \"\"\"Delete intent with the given intent type and intent value.\"\"\"\u00a0 \u00a0 from google.cloud import dialogflow\u00a0 \u00a0 intents_client = dialogflow.IntentsClient()\u00a0 \u00a0 intent_path = intents_client.intent_path(project_id, intent_id)\u00a0 \u00a0 intents_client.delete_intent(request={\"name\": intent_path})\n```No preface\n **C#** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [C# \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [.NET \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.Dialogflow.V2/index.html) \u3002\n **PHP** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [PHP \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [PHP \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://cloud.google.com/php/docs/reference/cloud-dialogflow/latest?hl=zh-cn) \u3002\n **Ruby \u7248** \uff1a \u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [Ruby \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/dialogflow/docs/reference/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [Ruby \u7248 Dialogflow \u53c3\u8003\u6587\u6a94](https://googleapis.dev/ruby/google-cloud-dialogflow/latest/Google/Cloud/Dialogflow.html) \u3002", "guide": "Dialogflow"}