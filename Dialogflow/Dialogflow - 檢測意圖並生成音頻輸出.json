{"title": "Dialogflow - \u6aa2\u6e2c\u610f\u5716\u4e26\u751f\u6210\u97f3\u983b\u8f38\u51fa", "url": "https://cloud.google.com/dialogflow/es/docs/how/detect-intent-tts?hl=zh-cn", "abstract": "# Dialogflow - \u6aa2\u6e2c\u610f\u5716\u4e26\u751f\u6210\u97f3\u983b\u8f38\u51fa\n\u61c9\u7528\u901a\u5e38\u9700\u8981\u804a\u5929\u6a5f\u5668\u4eba\u4f86\u56de\u5fa9\u6700\u7d42\u7528\u6236\u3002Dialogflow \u53ef\u4ee5\u4f7f\u7528\u7531 [DeepMind WaveNet](https://deepmind.com/blog/wavenet-generative-model-raw-audio/) \u63d0\u4f9b\u652f\u6301\u7684 [Cloud Text-to-Speech](https://cloud.google.com/text-to-speech/docs?hl=zh-cn) \u4f86\u751f\u6210\u4ee3\u7406\u7684\u8a9e\u97f3\u97ff\u61c9\u3002\u5c07\u610f\u5716\u6587\u672c\u97ff\u61c9\u8f49\u63db\u7232\u97f3\u983b\u7684\u64cd\u4f5c\u7a31\u7232\u97f3\u983b\u8f38\u51fa \u3001\u8a9e\u97f3\u5408\u6210 \u3001\u6587\u5b57\u8f49\u8a9e\u97f3 \uff0c\u6216 TTS \u3002\n\u672c\u6307\u5357\u63d0\u4f9b\u4e86\u4e00\u500b\u5728\u6aa2\u6e2c\u610f\u5716\u6642\u4f7f\u7528\u97f3\u983b\u9032\u884c\u8f38\u5165\u548c\u8f38\u51fa\u7684\u793a\u4f8b\u3002\u5728\u958b\u767c\u901a\u904e\u7d14\u97f3\u983b\u63a5\u53e3\u8207\u7528\u6236\u6e9d\u901a\u7684\u61c9\u7528\u6642\uff0c\u53ef\u4ee5\u7d93\u5e38\u898b\u5230\u9019\u7a2e\u7528\u4f8b\u3002\n\u5982\u9700\u67e5\u770b\u53d7\u652f\u6301\u8a9e\u8a00\u7684\u5217\u8868\uff0c\u8acb\u53c3\u95b1 [\u8a9e\u8a00](https://cloud.google.com/dialogflow/docs/reference/language?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **TTS** \u5217\u3002\n", "content": "## \u6e96\u5099\u5de5\u4f5c\n\u6b64\u529f\u80fd\u50c5\u9069\u7528\u65bc\u4f7f\u7528 API [\u8207\u6700\u7d42\u7528\u6236\u4e92\u52d5](https://cloud.google.com/dialogflow/docs/api-overview?hl=zh-cn) \u7684\u60c5\u6cc1\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f [\u96c6\u6210](https://cloud.google.com/dialogflow/docs/integrations?hl=zh-cn) \u670d\u52d9\uff0c\u5247\u53ef\u4ee5\u8df3\u904e\u672c\u6307\u5357\u3002\n\u5728\u95b1\u8b80\u672c\u6307\u5357\u4e4b\u524d\uff0c\u8acb\u5148\u5b8c\u6210\u4ee5\u4e0b\u4e8b\u9805\uff1a\n- \u95b1\u8b80 [Dialogflow \u57fa\u790e\u77e5\u8b58](https://cloud.google.com/dialogflow/docs/basics?hl=zh-cn) \u3002\n- \u57f7\u884c [\u8a2d\u7f6e\u6b65\u9a5f](https://cloud.google.com/dialogflow/docs/quick/setup?hl=zh-cn) \u3002## \u5275\u5efa\u4ee3\u7406\n\u5982\u679c\u5c1a\u672a\u5275\u5efa\u4ee3\u7406\uff0c\u8acb\u7acb\u5373\u5275\u5efa\u4e00\u500b\uff1a- \u8f49\u5230 [Dialogflow ES \u63a7\u5236\u6aaf](https://dialogflow.cloud.google.com?hl=zh-cn) \u3002\n- \u5982\u679c\u7cfb\u7d71\u8981\u6c42\u767b\u9304 Dialogflow \u63a7\u5236\u6aaf\uff0c\u8acb\u767b\u9304\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Dialogflow \u63a7\u5236\u6aaf\u6982\u89bd](https://cloud.google.com/dialogflow/docs/console?hl=zh-cn) \u3002\n- \u9ede\u64ca\u5de6\u5074\u908a\u6b04\u83dc\u55ae\u4e2d\u7684 **\u5275\u5efa\u4ee3\u7406** (Create Agent)\u3002\u5982\u679c\u60a8\u5df2\u6709\u5176\u4ed6\u4ee3\u7406\uff0c\u8acb\u9ede\u64ca\u4ee3\u7406\u540d\u7a31\uff0c\u6efe\u52d5\u5230\u5e95\u90e8\uff0c\u7136\u5f8c\u9ede\u64ca **\u5275\u5efa\u65b0\u4ee3\u7406** (Create new agent)\u3002\n- \u8f38\u5165\u60a8\u7684\u4ee3\u7406\u540d\u7a31\u3001\u9ed8\u8a8d\u8a9e\u8a00\u548c\u9ed8\u8a8d\u6642\u5340\u3002\n- \u5982\u679c\u60a8\u5df2\u7d93\u5275\u5efa\u4e86\u9805\u76ee\uff0c\u8acb\u8f38\u5165\u8a72\u9805\u76ee\u3002\u5982\u679c\u8981\u5141\u8a31 Dialogflow \u63a7\u5236\u6aaf\u5275\u5efa\u9805\u76ee\uff0c\u8acb\u9078\u64c7 **\u5275\u5efa\u65b0 Google \u9805\u76ee** (Create a new Google project)\u3002\n- \u9ede\u64ca **\u5275\u5efa** (Create) \u6309\u9215\u3002## \u5c07\u793a\u4f8b\u6587\u4ef6\u5c0e\u5165\u4ee3\u7406\n\u672c\u6307\u5357\u4e2d\u7684\u6b65\u9a5f\u5c0d\u60a8\u7684\u4ee3\u7406\u9032\u884c\u4e86\u5047\u8a2d\uff0c\u56e0\u6b64\u60a8\u9700\u8981 [import](https://cloud.google.com/dialogflow/docs/agents-settings?hl=zh-cn#export) \u7232\u672c\u6307\u5357\u6e96\u5099\u7684\u4ee3\u7406\u3002 \u5c0e\u5165\u6642\uff0c\u9019\u4e9b\u6b65\u9a5f\u4f7f\u7528 \u201c\u6062\u5fa9\u201d(restore) \u9078\u9805\uff0c\u8a72\u9078\u9805\u6703\u8986\u84cb\u6240\u6709\u4ee3\u7406\u8a2d\u7f6e\u3001\u610f\u5716\u548c\u5be6\u9ad4\u3002\n\u5982\u9700\u5c0e\u5165\u6587\u4ef6\uff0c\u8acb\u6309\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a\n- \u4e0b\u8f09 [room-booking-agent.zip](https://cloud.google.com/static/dialogflow/es/docs/data/room-booking-agent.zip?hl=zh-cn) \u6587\u4ef6\u3002\n- \u8f49\u5230 [Dialogflow ES \u63a7\u5236\u6aaf](https://dialogflow.cloud.google.com?hl=zh-cn) \u3002\n- \u9078\u64c7\u60a8\u7684\u4ee3\u7406\u3002\n- \u9ede\u64ca\u4ee3\u7406\u540d\u7a31\u65c1\u908a\u7684\u8a2d\u7f6e\u6309\u9215\u3002\n- \u9078\u64c7 **\u5c0e\u51fa\u548c\u5c0e\u5165** \u6a19\u7c64\u9801\u3002\n- \u9078\u64c7 **\u5f9e ZIP \u6587\u4ef6\u6062\u5fa9** (Restore from ZIP)\uff0c\u7136\u5f8c\u6309\u7167\u8aaa\u660e\u6062\u5fa9\u4e0b\u8f09\u7684 zip \u6587\u4ef6\u3002## \u6aa2\u6e2c\u610f\u5716\n\u5982\u9700\u6aa2\u6e2c\u610f\u5716\uff0c\u8acb\u5c0d [Sessions](https://cloud.google.com/dialogflow/docs/reference/common-types?hl=zh-cn#sessions) \u985e\u578b\u8abf\u7528 `detectIntent` \u65b9\u6cd5\u3002\n### 1. \u6e96\u5099\u97f3\u983b\u5167\u5bb9\u4e0b\u8f09 [book-a-room.wav](https://cloud.google.com/static/dialogflow/es/docs/data/book-a-room.wav?hl=zh-cn) \u793a\u4f8b input_audio \u6587\u4ef6\uff0c\u5176\u4e2d\u6709\u8a9e\u97f3\u63d0\u793a\u201cbook a room\u201d\u3002\u6b64\u793a\u4f8b\u4e2d\u7684\u97f3\u983b\u6587\u4ef6\u5fc5\u9808\u63a1\u7528 base64 \u7de8\u78bc\uff0c\u4ee5\u4fbf\u80fd\u5920\u5728\u4e0b\u9762\u7684 JSON \u8acb\u6c42\u4e2d\u6dfb\u52a0\u8a72\u97f3\u983b\u6587\u4ef6\u3002 \u4e0b\u9762\u662f Linux \u5e73\u81fa\u4e0a\u7684\u4e00\u500b\u793a\u4f8b\uff1a\n```\nwget https://cloud.google.com/dialogflow/es/docs/data/book-a-room.wavbase64 -w 0 book-a-room.wav > book-a-room.b64\n```\n\u5982\u9700\u67e5\u770b\u5176\u4ed6\u5e73\u81fa\u4e0a\u7684\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 Cloud Speech API \u6587\u6a94\u4e2d\u7684 [\u5d4c\u5165\u63a1\u7528 Base64 \u7de8\u78bc\u7684\u97f3\u983b](https://cloud.google.com/speech/docs/base64-encoding?hl=zh-cn) \u3002\n### 2. \u767c\u51fa\u6aa2\u6e2c\u610f\u5716\u8acb\u6c42\u5c0d [Sessions](https://cloud.google.com/dialogflow/docs/reference/common-types?hl=zh-cn#sessions) \u985e\u578b\u8abf\u7528 `detectIntent` \u65b9\u6cd5\uff0c\u4e26\u6307\u5b9a\u63a1\u7528 base64 \u7de8\u78bc\u7684\u97f3\u983b\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1a\u60a8\u7684 Google Cloud \u9805\u76ee ID\n- \uff1a\u6703\u8a71 ID\u3002\n- \uff1a\u4e0a\u8ff0\u8f38\u51fa\u6587\u4ef6\u4e2d\u7684 base64 \u5167\u5bb9\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://dialogflow.googleapis.com/v2/projects/PROJECT_ID/agent/sessions/SESSION_ID:detectIntent\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"queryInput\": {\n \"audioConfig\": {\n  \"languageCode\": \"en-US\"\n }\n },\n \"outputAudioConfig\" : {\n \"audioEncoding\": \"OUTPUT_AUDIO_ENCODING_LINEAR_16\"\n },\n \"inputAudio\": \"BASE64_AUDIO\"\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"responseId\": \"b7405848-2a3a-4e26-b9c6-c4cf9c9a22ee\",\n \"queryResult\": {\n \"queryText\": \"book a room\",\n \"speechRecognitionConfidence\": 0.8616504,\n \"action\": \"room.reservation\",\n \"parameters\": {\n  \"time\": \"\",\n  \"date\": \"\",\n  \"duration\": \"\",\n  \"guests\": \"\",\n  \"location\": \"\"\n },\n \"fulfillmentText\": \"I can help with that. Where would you like to reserve a room?\",\n \"fulfillmentMessages\": [  {\n  \"text\": {\n   \"text\": [   \"I can help with that. Where would you like to reserve a room?\"\n   ]\n  }\n  }\n ],\n \"intent\": {\n  \"name\": \"projects/PROJECT_ID/agent/intents/e8f6a63e-73da-4a1a-8bfc-857183f71228\",\n  \"displayName\": \"room.reservation\"\n },\n \"intentDetectionConfidence\": 1,\n \"diagnosticInfo\": {},\n \"languageCode\": \"en-us\"\n },\n \"outputAudio\": \"UklGRs6vAgBXQVZFZm10IBAAAAABAAEAwF0AAIC7AA...\"\n}\n```\n\u8acb\u6ce8\u610f\uff0c `queryResult.action` \u5b57\u6bb5\u7684\u503c\u7232 `room.reservation` \uff0c\u800c `outputAudio` \u5b57\u6bb5\u5247\u5305\u542b\u4e00\u500b\u8f03\u9577\u7684 base64 \u97f3\u983b\u5b57\u7b26\u4e32\u3002\n### 3. \u64ad\u653e\u8f38\u51fa\u97f3\u983b\u8907\u88fd `outputAudio` \u5b57\u6bb5\u4e2d\u7684\u6587\u672c\u4e26\u5c07\u5176\u4fdd\u5b58\u5728\u4e00\u500b\u540d\u7232 `output_audio.b64` \u7684\u6587\u4ef6\u4e2d\u3002\u60a8\u9700\u8981\u5c07\u6b64\u6587\u4ef6\u8f49\u63db\u7232\u97f3\u983b\u683c\u5f0f\u3002\u4e0b\u9762\u662f Linux \u5e73\u81fa\u4e0a\u7684\u4e00\u500b\u793a\u4f8b\uff1a\n```\nbase64 -d output_audio.b64 > output_audio.wav\n```\n\u5982\u9700\u67e5\u770b\u5176\u4ed6\u5e73\u81fa\u4e0a\u7684\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 Text-to-Speech API \u6587\u6a94\u4e2d\u7684 [\u89e3\u78bc\u63a1\u7528 Base64 \u7de8\u78bc\u7684\u97f3\u983b\u5167\u5bb9](https://cloud.google.com/text-to-speech/docs/base64-decoding?hl=zh-cn) \u3002\n\u60a8\u73fe\u5728\u53ef\u4ee5\u64ad\u653e `output_audio.wav` \u97f3\u983b\u6587\u4ef6\uff0c\u4e26\u807d\u5230\u5b83\u8207\u4e0a\u8ff0 `queryResult.fulfillmentMessages[1].text.text[0]` \u5b57\u6bb5\u4e2d\u7684\u6587\u672c\u76f8\u5339\u914d\u3002\u7cfb\u7d71\u6703\u9078\u64c7\u7b2c\u4e8c\u500b `fulfillmentMessages` \u5143\u7d20\uff0c\u56e0\u7232\u5b83\u662f\u9ed8\u8a8d\u5e73\u81fa\u7684\u6587\u672c\u97ff\u61c9\u3002\n\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/snippets/src/main/java/com/example/dialogflow/DetectIntentWithTextToSpeechResponse.java) \n```\nimport com.google.api.gax.rpc.ApiException;import com.google.cloud.dialogflow.v2.DetectIntentRequest;import com.google.cloud.dialogflow.v2.DetectIntentResponse;import com.google.cloud.dialogflow.v2.OutputAudioConfig;import com.google.cloud.dialogflow.v2.OutputAudioEncoding;import com.google.cloud.dialogflow.v2.QueryInput;import com.google.cloud.dialogflow.v2.QueryResult;import com.google.cloud.dialogflow.v2.SessionName;import com.google.cloud.dialogflow.v2.SessionsClient;import com.google.cloud.dialogflow.v2.TextInput;import com.google.common.collect.Maps;import java.io.IOException;import java.util.List;import java.util.Map;public class DetectIntentWithTextToSpeechResponse {\u00a0 public static Map<String, QueryResult> detectIntentWithTexttoSpeech(\u00a0 \u00a0 \u00a0 String projectId, List<String> texts, String sessionId, String languageCode)\u00a0 \u00a0 \u00a0 throws IOException, ApiException {\u00a0 \u00a0 Map<String, QueryResult> queryResults = Maps.newHashMap();\u00a0 \u00a0 // Instantiates a client\u00a0 \u00a0 try (SessionsClient sessionsClient = SessionsClient.create()) {\u00a0 \u00a0 \u00a0 // Set the session name using the sessionId (UUID) and projectID (my-project-id)\u00a0 \u00a0 \u00a0 SessionName session = SessionName.of(projectId, sessionId);\u00a0 \u00a0 \u00a0 System.out.println(\"Session Path: \" + session.toString());\u00a0 \u00a0 \u00a0 // Detect intents for each text input\u00a0 \u00a0 \u00a0 for (String text : texts) {\u00a0 \u00a0 \u00a0 \u00a0 // Set the text (hello) and language code (en-US) for the query\u00a0 \u00a0 \u00a0 \u00a0 TextInput.Builder textInput =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TextInput.newBuilder().setText(text).setLanguageCode(languageCode);\u00a0 \u00a0 \u00a0 \u00a0 // Build the query with the TextInput\u00a0 \u00a0 \u00a0 \u00a0 QueryInput queryInput = QueryInput.newBuilder().setText(textInput).build();\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 OutputAudioEncoding audioEncoding = OutputAudioEncoding.OUTPUT_AUDIO_ENCODING_LINEAR_16;\u00a0 \u00a0 \u00a0 \u00a0 int sampleRateHertz = 16000;\u00a0 \u00a0 \u00a0 \u00a0 OutputAudioConfig outputAudioConfig =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 OutputAudioConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setAudioEncoding(audioEncoding)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSampleRateHertz(sampleRateHertz)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 \u00a0 DetectIntentRequest dr =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DetectIntentRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setQueryInput(queryInput)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setOutputAudioConfig(outputAudioConfig)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSession(session.toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 \u00a0 // Performs the detect intent request\u00a0 \u00a0 \u00a0 \u00a0 DetectIntentResponse response = sessionsClient.detectIntent(dr);\u00a0 \u00a0 \u00a0 \u00a0 // Display the query result\u00a0 \u00a0 \u00a0 \u00a0 QueryResult queryResult = response.getQueryResult();\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"====================\");\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Query Text: '%s'\\n\", queryResult.getQueryText());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Detected Intent: %s (confidence: %f)\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 queryResult.getIntent().getDisplayName(), queryResult.getIntentDetectionConfidence());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Fulfillment Text: '%s'\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 queryResult.getFulfillmentMessagesCount() > 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ? queryResult.getFulfillmentMessages(0).getText()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 : \"Triggered Default Fallback Intent\");\u00a0 \u00a0 \u00a0 \u00a0 queryResults.put(text, queryResult);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 \u00a0 return queryResults;\u00a0 }}\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow/detect-intent-TTS-response.v2.js) \n```\n// Imports the Dialogflow client libraryconst dialogflow = require('@google-cloud/dialogflow').v2;// Instantiate a DialogFlow client.const sessionClient = new dialogflow.SessionsClient();/**\u00a0* TODO(developer): Uncomment the following lines before running the sample.\u00a0*/// const projectId = 'ID of GCP project associated with your Dialogflow agent';// const sessionId = `user specific ID of session, e.g. 12345`;// const query = `phrase(s) to pass to detect, e.g. I'd like to reserve a room for six people`;// const languageCode = 'BCP-47 language code, e.g. en-US';// const outputFile = `path for audio output file, e.g. ./resources/myOutput.wav`;// Define session pathconst sessionPath = sessionClient.projectAgentSessionPath(\u00a0 projectId,\u00a0 sessionId);const fs = require('fs');const util = require('util');async function detectIntentwithTTSResponse() {\u00a0 // The audio query request\u00a0 const request = {\u00a0 \u00a0 session: sessionPath,\u00a0 \u00a0 queryInput: {\u00a0 \u00a0 \u00a0 text: {\u00a0 \u00a0 \u00a0 \u00a0 text: query,\u00a0 \u00a0 \u00a0 \u00a0 languageCode: languageCode,\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 },\u00a0 \u00a0 outputAudioConfig: {\u00a0 \u00a0 \u00a0 audioEncoding: 'OUTPUT_AUDIO_ENCODING_LINEAR_16',\u00a0 \u00a0 },\u00a0 };\u00a0 sessionClient.detectIntent(request).then(responses => {\u00a0 \u00a0 console.log('Detected intent:');\u00a0 \u00a0 const audioFile = responses[0].outputAudio;\u00a0 \u00a0 util.promisify(fs.writeFile)(outputFile, audioFile, 'binary');\u00a0 \u00a0 console.log(`Audio content written to file: ${outputFile}`);\u00a0 });}detectIntentwithTTSResponse();\n```\u8981\u5411 Dialogflow \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow/detect_intent_with_texttospeech_response.py) \n```\ndef detect_intent_with_texttospeech_response(\u00a0 \u00a0 project_id, session_id, texts, language_code):\u00a0 \u00a0 \"\"\"Returns the result of detect intent with texts as inputs and includes\u00a0 \u00a0 the response in an audio format.\u00a0 \u00a0 Using the same `session_id` between requests allows continuation\u00a0 \u00a0 of the conversation.\"\"\"\u00a0 \u00a0 from google.cloud import dialogflow\u00a0 \u00a0 session_client = dialogflow.SessionsClient()\u00a0 \u00a0 session_path = session_client.session_path(project_id, session_id)\u00a0 \u00a0 print(\"Session path: {}\\n\".format(session_path))\u00a0 \u00a0 for text in texts:\u00a0 \u00a0 \u00a0 \u00a0 text_input = dialogflow.TextInput(text=text, language_code=language_code)\u00a0 \u00a0 \u00a0 \u00a0 query_input = dialogflow.QueryInput(text=text_input)\u00a0 \u00a0 \u00a0 \u00a0 # Set the query parameters with sentiment analysis\u00a0 \u00a0 \u00a0 \u00a0 output_audio_config = dialogflow.OutputAudioConfig(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 audio_encoding=dialogflow.OutputAudioEncoding.OUTPUT_AUDIO_ENCODING_LINEAR_16\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 request = dialogflow.DetectIntentRequest(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 session=session_path,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 query_input=query_input,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 output_audio_config=output_audio_config,\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 response = session_client.detect_intent(request=request)\u00a0 \u00a0 \u00a0 \u00a0 print(\"=\" * 20)\u00a0 \u00a0 \u00a0 \u00a0 print(\"Query text: {}\".format(response.query_result.query_text))\u00a0 \u00a0 \u00a0 \u00a0 print(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Detected intent: {} (confidence: {})\\n\".format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 response.query_result.intent.display_name,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 response.query_result.intent_detection_confidence,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 print(\"Fulfillment text: {}\\n\".format(response.query_result.fulfillment_text))\u00a0 \u00a0 \u00a0 \u00a0 # The response's audio_content is binary.\u00a0 \u00a0 \u00a0 \u00a0 with open(\"output.wav\", \"wb\") as out:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 out.write(response.output_audio)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 print('Audio content written to file \"output.wav\"')\n```\n\u8acb\u53c3\u95b1 [\u6aa2\u6e2c\u610f\u5716\u97ff\u61c9](#response) \u90e8\u5206\uff0c\u77ad\u89e3\u76f8\u95dc\u97ff\u61c9\u5b57\u6bb5\u7684\u8aaa\u660e\u3002\n## \u6aa2\u6e2c\u610f\u5716\u97ff\u61c9\n\u6aa2\u6e2c\u610f\u5716\u8acb\u6c42\u7684\u97ff\u61c9\u7232 `DetectIntentResponse` \u985e\u578b\u3002\n\u4e00\u822c\u7684\u6aa2\u6e2c\u610f\u5716\u8655\u7406\u529f\u80fd\u6703\u63a7\u5236 `DetectIntentResponse.queryResult.fulfillmentMessages` \u5b57\u6bb5\u7684\u5167\u5bb9\u3002\n`DetectIntentResponse.outputAudio` \u5b57\u6bb5\u6240\u586b\u5145\u7684\u97f3\u983b\u53d6\u6c7a\u65bc `DetectIntentResponse.queryResult.fulfillmentMessages` \u5b57\u6bb5\u4e2d\u6240\u5305\u542b\u7684\u9ed8\u8a8d\u5e73\u81fa\u6587\u672c\u97ff\u61c9\u7684\u503c\u3002 \u5982\u679c\u5b58\u5728\u591a\u500b\u9ed8\u8a8d\u6587\u672c\u97ff\u61c9\uff0c\u5728\u751f\u6210\u97f3\u983b\u6642\u5c07\u9023\u63a5\u9019\u4e9b\u97ff\u61c9\u3002\u5982\u679c\u4e0d\u5b58\u5728\u9ed8\u8a8d\u5e73\u81fa\u6587\u672c\u97ff\u61c9\uff0c\u5247\u751f\u6210\u7684\u97f3\u983b\u5167\u5bb9\u5c07\u7232\u7a7a\u3002\n`DetectIntentResponse.outputAudioConfig` \u5b57\u6bb5\u4f7f\u7528\u7528\u65bc\u751f\u6210\u8f38\u51fa\u97f3\u983b\u7684\u97f3\u983b\u8a2d\u7f6e\u586b\u5145\u3002\n## \u5f9e\u97f3\u983b\u6d41\u4e2d\u6aa2\u6e2c\u610f\u5716\n\u5f9e\u97f3\u983b\u6d41\u4e2d\u6aa2\u6e2c\u610f\u5716\u6642\uff0c\u60a8\u767c\u51fa\u7684\u8acb\u6c42\u985e\u4f3c\u65bc\u4e0d\u4f7f\u7528\u8f38\u51fa\u97f3\u983b\u7684\u793a\u4f8b\uff1a [\u5f9e\u97f3\u983b\u6d41\u4e2d\u6aa2\u6e2c\u610f\u5716](https://cloud.google.com/dialogflow/docs/how/detect-intent-stream?hl=zh-cn) \u3002\u4e0d\u904e\uff0c\u60a8\u9700\u8981\u5728\u8acb\u6c42\u4e2d\u63d0\u4f9b [OutputAudioConfig](https://cloud.google.com/dialogflow/docs/reference/rpc/google.cloud.dialogflow.v2?hl=zh-cn#google.cloud.dialogflow.v2.OutputAudioConfig) \u5b57\u6bb5\u3002\u5728\u60a8\u5f9e Dialogflow API \u670d\u52d9\u5668\u7372\u5f97\u7684\u6700\u5f8c\u4e00\u500b\u6d41\u5f0f\u50b3\u8f38\u97ff\u61c9\u4e2d\uff0c `output_audio` \u548c `output_audio_config` \u5b57\u6bb5\u6703\u586b\u5165\u76f8\u95dc\u503c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [StreamingDetectIntentRequest](https://cloud.google.com/dialogflow/docs/reference/rpc/google.cloud.dialogflow.v2?hl=zh-cn#google.cloud.dialogflow.v2.StreamingDetectIntentRequest) \u548c [StreamingDetectIntentResponse](https://cloud.google.com/dialogflow/docs/reference/rpc/google.cloud.dialogflow.v2?hl=zh-cn#streamingdetectintentresponse) \u3002\n## \u8a9e\u97f3\u7684\u4ee3\u7406\u8a2d\u7f6e\n\u60a8\u53ef\u4ee5\u63a7\u5236\u8a9e\u97f3\u5408\u6210\u7684\u5404\u500b\u65b9\u9762\u3002\u8acb\u53c3\u95b1 [\u4ee3\u7406\u8a9e\u97f3\u8a2d\u7f6e](https://cloud.google.com/dialogflow/docs/agents-settings?hl=zh-cn#speech) \u3002\n**\u6ce8\u610f** \uff1a\u63d0\u4f9b\u8f38\u51fa\u97f3\u983b\u914d\u7f6e\u7684 API \u8abf\u7528\u6703\u66ff\u63db\u5df2\u61c9\u7528\u65bc\u4ee3\u7406\u7684\u6240\u6709\u73fe\u6709\u6587\u5b57\u8f49\u8a9e\u97f3\u8a2d\u7f6e\u3002\n## \u4f7f\u7528 Dialogflow \u6a21\u64ec\u5668\n\u60a8\u53ef\u4ee5\u901a\u904e [Dialogflow \u6a21\u64ec\u5668](https://cloud.google.com/dialogflow/docs/console?hl=zh-cn#simulator) \u8207\u4ee3\u7406\u9032\u884c\u4ea4\u4e92\u4e26\u63a5\u6536\u97f3\u983b\u97ff\u61c9\uff1a\n- \u6309\u7167 [\u4e0a\u8ff0\u6b65\u9a5f\u5553\u7528\u81ea\u52d5\u6587\u5b57\u8f49\u8a9e\u97f3](#agent-settings) \u3002\n- \u5728\u6a21\u64ec\u5668\u4e2d\u8f38\u5165\u6216\u8aaa\u51fa\u201c\u9810\u8a02\u623f\u9593\u201d\u3002\n- \u67e5\u770b\u6a21\u64ec\u5668\u5e95\u90e8\u7684 **\u8f38\u51fa\u97f3\u983b** (output audio) \u90e8\u5206\u3002", "guide": "Dialogflow"}