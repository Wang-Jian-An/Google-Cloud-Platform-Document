{"title": "Dialogflow - Inline editor", "url": "https://cloud.google.com/dialogflow/es/docs/fulfillment-inline-editor", "abstract": "# Dialogflow - Inline editor\nThe Dialogflow Console has a built-in code editor, called the that you can use to create fulfillment code and deploy the code to [Cloud Functions](/functions/docs) . Cloud Functions has associated charges, but the service is available for no charge up to a [significant number of monthly invocations](/functions/pricing) . Note that you still must register and provide a valid billing account. Cancel anytime.\nWhen you initially enable the inline editor, Node.js fulfillment code is pre-populated with default handlers for [default intents](/dialogflow/docs/intents-default) that are included for all agents. The code also has commented instructions for adding handlers for developer-defined intents.\nThe inline editor is intended for simple fulfillment testing and prototyping. Once you are ready to build a production application, you should create a [webhook service](/dialogflow/docs/fulfillment-webhook) .\n", "content": "## Dialogflow fulfillment library\nThe inline editor uses the [Dialogflow fulfillment library](https://github.com/dialogflow/dialogflow-fulfillment-nodejs) by default. This library is no longer maintained, but it remains useful as a simple fulfillment library solution. This library should only be used by inline editor code.\nThe Dialogflow fulfillment library does not support [versioning](/dialogflow/es/docs/agents-versions) . If you need to use versioning, choose one of the following options:\n- Overwrite the default inline editor code with your custom webhook code.\n- [Deploy custom webhook code to Cloud Functions directly](/dialogflow/es/docs/fulfillment-webhook#gcf) .\n- Fork and modify the Dialogflow fulfillment library to support versioning.## Using the inline editor\nThe [fulfillment quickstart](/dialogflow/docs/quick/fulfillment) has step-by-step instructions for using the inline editor.\n## Download your code\nOnce you're ready to move your fulfillment code to another system, use the download button on the inline editor.\n## Network calls\nNetwork calls originating from Cloud Functions code to destinations outside of Google's network are [charged by the Cloud Functions service](/functions/pricing#networking) .\n## Limitations\nThe following limitations apply:\n- The inline editor only supports Node.js.\n- If you modify your code with the Cloud Functions console, you can no longer use the inline editor to modify your code. Your function will continue to provide fulfillment for your agent, but future edits must be made in the Cloud Functions console.\n- The inline editor function must be named`dialogflowFirebaseFulfillment`.\n- You cannot save or download code modified in the inline editor without deploying it first.\n- The inline editor only supports two files:- **index.js** : Contains all of your fulfillment code.\n- **package.json** : Modifying this file will install any dependencies you specify upon deployment.\n- See the [Dialogflow fulfillment library](#library) section for limitations of this library that is used by the inline editor by default.", "guide": "Dialogflow"}