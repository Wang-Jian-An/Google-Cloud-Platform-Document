{"title": "Dialogflow - Generative fallback", "url": "https://cloud.google.com/dialogflow/cx/docs/concept/generative/generative-fallback", "abstract": "# Dialogflow - Generative fallback\n**Note:** The feature is excluded from the [DialogflowSLA](/dialogflow/sla) .\nThe feature uses Google's latest generative large language models (LLMs) to generate virtual agent responses when end-user input does not match an intent or parameter for form filling.\nThe feature can be configured with a that instructs the LLM how to respond. You can use a predefined text prompt or add your own prompts. With the predefined prompt, the virtual agent is able to handle basic conversational situations. For example:\n- Greet and say goodbye to the user.\n- Repeat what the agent said in case the user didn't understand.\n- Hold the line when the user asks for it.\n- Summarize the conversation.\nYou can enable generative fallback on used in flows, pages, or during parameter filling. When generative fallback is enabled for a no-match event, whenever that event triggers, Dialogflow will attempt to produce a generated response that will be said back to the user. If the response generation is unsuccessful, the regular prescribed agent response will be issued instead.\n", "content": "## Limitations\nThe feature is currently available in the [languages supported by Vertex AI PaLM API](/vertex-ai/docs/generative-ai/learn/models#language_support) .\n## Enable generative fallback\nYou can enable generative fallback in your agent on , which can be used in flow, page or parameter fulfillment.\n### Enable generative fallback for an entire flow's no-match events:\n- Go to the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Select a project.\n- Select an agent and a flow.\n- Expand the Start page of the flow.\n- Click **sys.no-match-default** under **Event handlers** .\n- Check **Enable generative fallback** under **Agent responses** \n- Click **Save** .\n### Enable generative fallback on specific no-match events:\n- Navigate to the target **No-match** event handler (any event starting with **No-match** , such as **No-match default** , **No-match 1** , and so on).\n- Check **Enable generative fallback** under **Agent responses** .\n- Click **Save** .## Configure generative fallback\nAs mentioned above, the feature passes a request to a large language model in order to produce the generated response. The request takes the form of a that is a mix of natural language and information about the current state of the agent and of the conversation. The prompt and the generated response are checked against a list of . If they contain any banned phrase, or are otherwise deemed unsafe, generation will be unsuccessful, and the regular prescribed response (under in the same fulfilment) will be issued instead.\nThe feature can be configured in multiple ways:\n- Select a predefined prompt.\n- Define a custom prompt.\n- Add or remove phrases from the list of banned phrases.\nWhen creating a prompt, in addition to a natural language description of what kind of context should be generated, the following can also be used:\n| Term     | Definition                    |\n|:---------------------|:-----------------------------------------------------------------------------------------|\n| $conversation  | The conversation between the agent and the user, excluding the very last user utterance. |\n| $last-user-utterance | The last user utterance.                 |\n| $flow-description | The flow description of the active flow.             |\n| $route-descriptions | The intent descriptions of the active intents.           |\nMake sure to have good flow and intent descriptions.\n### Choose a predefined prompt\n- In **Agent Settings** , navigate to the **ML** tab, and then the **Generative AI** sub-tab.\n- Select one of the options in the **Template** dropdown.\n- Click **Save** .\nThe feature provides two template prompts, the **Default** template (which is not visible) and the **Example** template that can serve as a guide for writing your own prompts. Note that if you chose the **Default** template, and you see the **Data store prompt** on the **Generative AI** sub-tab, you can add information about the agent that influences the agent responses.\n### Define your own prompt\n- In **Agent Settings** , navigate to the **ML** tab, and then the **Generative AI** sub-tab.\n- Select **+ new template** in the **Template** dropdown.\n- Add a **Template name** .\n- Add a **Text prompt** .\n- Press **Save** .\n**Note:** To actually make the newly created prompt the active prompt, you need to **Save** the settings.\nYou can also start by editing the **Example** template and saving it as a new template:\n- Select **Example** in the **Template** dropdown.\n- Click **Edit** .\n- Edit the **Template name** .\n- Edit the **Text prompt** .\n- Press **Save** .\n### Modify the list of banned phrases\n- In **Agent Settings** , navigate to the **ML** tab, and then the **Generative AI** sub-tab.\n- In the **Banned phrases** section, inspect, add to, or remove from the list.\n- Click **Save** .## Test generative fallback\nThe feature can be directly tested in the simulator. Whenever a user utterance leads to no-match on a flow/page where the no-match event was configured to produce a generative response (and the generation succeeds), the agent will output the generated response.\n## Codelab\nAlso see the [Generative fallbackCodelab](https://codelabs.developers.google.com/codelabs/dialogflow-generative-fallback) .", "guide": "Dialogflow"}