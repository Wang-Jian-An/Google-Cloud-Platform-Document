{"title": "Dialogflow - Intents", "url": "https://cloud.google.com/dialogflow/cx/docs/concept/intent", "abstract": "# Dialogflow - Intents\nAn categorizes an end-user's intention for one conversation turn. Compared to [ES intents](/dialogflow/docs/intents-overview) , CX intents have been simplified to make them a more reusable resource.\nAn intent contains the following data:\n| Term    | Definition                                                                                |\n|:-----------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Display name  | Name displayed on the console for the intent.                                                                       |\n| Labels   | Labels that help categorize intents. For example: head intent.                                                                   |\n| Training phrases | Training phrases are example phrases for what end-users might type or say, known as end-user input. When end-user input resembles one of these phrases, Dialogflow matches the intent. You don't have to define every possible example, because Dialogflow's built-in machine learning expands on your list with other, similar phrases. |\n| Parameters  | You define your training phrases to use parameters to extract values from specific parts of the end-user input.                                                       |\n", "content": "## Intent matching\nWhen an end-user writes or says something, referred to as end-user input, Dialogflow compares the input to intent training phrases to find the best match. This process is called intent matching. Intent matching can only occur for intents associated with an [intent route](/dialogflow/cx/docs/concept/handler#route) (a state handler with an intent requirement) in [scope](/dialogflow/cx/docs/concept/handler#scope) .\nWhen searching for a matching intent, Dialogflow scores potential matches with an , also known as the . These values range from 0.0 (completely uncertain) to 1.0 (completely certain). Once intents are scored, there are two possible outcomes:\n- If the highest scoring intent has a confidence score greater than or equal to the [classification threshold](/dialogflow/cx/docs/concept/agent#settings-ml) setting, it is returned as a match.\n- If no intents meet the threshold, then a [no-match event](/dialogflow/cx/docs/concept/handler#event-built-in) will be invoked.\nDialogflow ML models have some level of case sensitivity, which may result in slightly different match score for end-user inputs that differ only in capitalization. See more in the [agent design best practices guide](/dialogflow/cx/docs/concept/agent-design#phrase-capitalization-variety) .\n## Training phrases\n**Note:** There are many important best practices for training phrases described in the [agent design best practices guide](/dialogflow/cx/docs/concept/agent-design#input) .\nare example phrases for what end-users might type or say, referred to as . For each intent, you create many training phrases. When an end-user input resembles one of these phrases, Dialogflow matches the intent.\nFor example, the training phrase \"I want pizza\" trains your agent to recognize end-user input that is similar to that phrase, like \"Get a pizza\" or \"Order pizza\".\nYou don't have to define every possible example, because Dialogflow's built-in machine learning expands on your list with other, similar phrases. You should create at least 10-20 (depending on complexity of intent) training phrases, so your agent can recognize a variety of end-user inputs. For example, if you want your intent to recognize an end-user's input about their favorite color, you could define the following training phrases:\n- \"I like red\"\n- \"My favorite color is yellow\"\n- \"black\"\n- \"Blue is my favorite\"\n- ...\n### Annotate training phrases\n**Note:** There are many important best practices for training phrase annotations described in the [agent design best practices guide](/dialogflow/cx/docs/concept/agent-design#input) .\nYou control how end-user data is extracted by parts of your training phrases and configuring the associated [parameters](/dialogflow/cx/docs/concept/parameter) .\nFor example, consider a training phrase like \"What is the forecast tomorrow for Tokyo?\" You should annotate \"tomorrow\" with a `date` parameter and \"Tokyo\" with a `location` parameter. When you annotate parts of a training phrase, Dialogflow recognizes that these parts are just examples of actual values that will be provided by end-users at runtime. For an end-user input like \"What is the forecast on Friday for Sydney?\", Dialogflow would extract the `date` parameter from \"Friday\" and the `location` parameter from \"Sydney\".\nYou must annotate all training phrase parts that are meant to be extracted as parameters. Otherwise, Dialogflow will not extract the values.\nWhen building an agent with the console, most annotations are automatically created for you when you add training phrases that contain parts that can be matched to an existing [entity type](/dialogflow/cx/docs/concept/entity) . These parts are highlighted in the console. You can edit these annotations and parameters as needed.\nTo manually annotate a training phrase with the console:\n- Select the part of the training phrase that you want to annotate.\n- Select the desired entity type from the list.\n- A parameter is created for you in the parameter table below.\nWhen building an agent with the API, you must annotate training phrase parts manually. See the `TrainingPhrase` type used by the `Intent` type.\n### Implicit entities created by training phrases\n**Note:** You should define entities explicitly, rather than rely on implicitly defined custom entity values.\nMost custom entities are defined explicitly by creating entity types and adding entity entries. However, custom entities may also contain implicit values. This happens when you [annotate text of a training phrase](#annot) , where the annotated text is not a value defined by the selected entity type. The annotated text becomes an entity reference value for the implicitly added entity entry. If the entity type is a map entity, the text also becomes a synonym for the entity entry.\n## Default welcome intent\nWhen you create an agent, a default welcome intent is created for you. For [some languages](/dialogflow/cx/docs/reference/language#table) , the intent has simple training phrases like \"Hi\" or \"Hello\" that are meant to match initial end-user input. You can edit this intent as desired.\nWhen using the API, you can reference this intent with the following intent ID:\n```\n00000000-0000-0000-0000-000000000000\n```\nIf your agent initiates the conversation, you can trigger this intent using the API. Use the value `projects/<PROJECT_ID>/locations/<LOCATION_ID>/agents/<AGENT_ID>/intents/00000000-0000-0000-0000-000000000000` in the `QueryInput.intent.intent` field when calling the `detectIntent` or `streamingDetectIntent` method.\n## Default negative intent\nWhen you create an agent, a default negative intent is created for you. You can add training phrases to this intent that act as negative examples. There may be cases where end-user input has a slight resemblance to training phrases in normal intents, but you do not want these inputs to match any normal intents.\nFor example, a room booking agent may have a training phrase like \"I'd like to book a room\". If the end-user wants to purchase a book about rooms, they may say \"I'd like to buy a book about rooms.\" To ensure that the end-user input does not match your intent, you can add that phrase as a negative example.\nIn addition, you should add possible phrases that are out of scope for the agent, so they will not match any intent. However, avoid adding a very large quantity of these phrases. For example, if you define 10,000 default negative intent phrases, this negatively impacts normal intent matching.\nYou should regularly review these phrases, as some of these phrases may have been originally out of scope for the agent, but were subsequently added to intents.\nThe default negative intent has impact across all intent matching. Phrases you add to it could benefit matching for one intent but harm matching for another. For example, you might add \"international calling\" to the default negative intent to avoid matching an international travel intent. However, this will also prevent that phrase from matching an international calling intent.\nWhen using the API, you can reference this intent with the following intent ID:\n```\n00000000-0000-0000-0000-000000000001\n```\n## Cancel intents\nDuring a conversation, the end-user may want to cancel the current conversation topic. For example, the currently active page may be asking for a date for a new appointment, but the end-user has decided against creating a new appointment. The end-user may say something like \"cancel\" or \"I do not want a new appointment\". To handle this situation, you can create one or more for your agent. You can name these cancel intents anything you like, but it is customary to include \"cancel\" in the name. You should associate these cancel intents with intent routes that are in scope at relevant points in the conversation. These intent routes should transition to an appropriate page to handle the cancellation.\nThe training phrases for cancel intents should handle both generic and topic-specific attempts to cancel. For example:\n- Cancel\n- Stop\n- I changed my mind\n- Nevermind\n- Take me back\n- Go back\n- I do not want a new appointment\n- Cancel new appointment\n- Delete new appointment## Create an intent\nTo create an intent:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your Google Cloud project.\n- Select your agent.\n- Select the **Manage** tab.\n- Click **Intents** .\n- Click **+Create** .\n- Enter intent data.\n- Click **Save** .\nSee the `create` method for the `Intent` type.\n## Delete an intent\nTo delete an intent:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your Google Cloud project.\n- Select your agent.\n- Select the **Manage** tab.\n- Click **Intents** .\n- Hover your mouse over the intent you want to delete.\n- Click the deletebutton.\nSee the `delete` method for the `Intent` type.\n## Access intent data\nTo access intent data:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your Google Cloud project.\n- Select your agent.\n- Select the **Manage** tab.\n- Click **Intents** .\n- Click the intent you want to access.\n- View or update intent data.\n- Click **Save** to save any changes.\nSee the `get` and `patch/update` methods for the `Intent` type.\n## Intent suggestions\n**Note:** This feature is currently only available in the global and us-central1 regions. If you need this feature for other regions, contact your Google Cloud account team.\n**Note:** Intent suggestions must be enabled in [general agent settings](/dialogflow/cx/docs/concept/agent#settings-general) .\nDialogflow automatically analyzes no-match occurrences during conversations and can suggest new intents or recommend additional training phrases for existing intents. Accepting these suggestions can help avoid future no-match occurrences.\nWhen using suggestions, you can adjust the **Cluster Size** . Smaller values of cluster size suggests more intents with fewer training phrases per intent. Larger values of cluster size suggests fewer intents with more training phrases per intent.\nTo accept intent suggestions:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your Google Cloud project.\n- Select your agent.\n- Select the **Manage** tab.\n- Click **Intents** .\n- Click the **Suggestions** tab.\n- Adjust the **Cluster Size** as desired.\n- Select a suggestion.\n- Select the training phrases you desire.\n- For the target intent, add the training phrases to an existing intent or a new one.\n- Click **Save** or **Create New** to save any changes. When you accept intent suggestions, the intent remains in the suggestion list.## Split intents\nYou can split one intent into two intents using the console. The interface allows you to select training phrases from a source intent and move them to a new intent:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your project.\n- Select your agent.\n- Select the **Manage** tab.\n- Click **Intents** .\n- Select the intent you want to split.\n- Click **Split** .\n- Select intents from the source intent.\n- Click **Move right** .\n- Provide other details for the target intent.\n- Click **Split** .## Compare and merge intents\nYou can compare or merge two intents to a single intent using the console:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your project.\n- Select your agent.\n- Select the **Manage** tab.\n- Click **Intents** .\n- Select the two intents you want to compare or merge.\n- Click **Compare** .\n- The training phrases are shown side by side for comparison.\n- To merge the two intents, click **Merge** .## Export and import intents\nYou can export and import intents for sharing across agents.\nOne of the export format options is CSV, which has the following columns:\n- Intent Display Name\n- Language\n- Phrase\nEach entry contains either the display name, language and first training phrase; or just a training phrase for the previously declared intent. Dialogflow encodes annotations in exported training phrases, so that annotations are restored when importing. The format for this encoding is:\n```\n(annotated part)[entity, parameter]\n```\nFor example:\n```\nIntent Display Name,Language,Phrase\nShirt Selection,en,I want a (green)[@sys.color, color] shirt\n,,I would like a (yellow)[@sys.color, color] shirt\nStore Hours,en,When are you open?\n,,What are your hours?\n```\nWhen importing intents, there may be merge conflicts when the display name for an intent in your existing agent matches that of an imported intent. You can control the merge behavior when intent display names match by selecting one of the following:\n- **Replace existing intents** : An imported intent overwrites any same-named intent in your existing agent.\n- **Rename and import as new intents** : The imported intent is renamed by appending \"_1\" to the display name.\n- **Merge with existing intents** : The training phrases of an imported intent are added to the existing intent. If the same training phrases exist, they will not be duplicated.\n- **Keep original intents** : The existing intent remains unchanged, and the conflicting intent is ignored. Nonconflicting intents are imported.\nTo export intents:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your Google Cloud project.\n- Select your agent.\n- Select the **Manage** tab.\n- Click **Intents** .\n- Select each intent you want to export.\n- Click **Export selected intents** .\n- Select the desired format and destination.\n- Click **Submit** .\nTo import intents:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your Google Cloud project.\n- Select your agent.\n- Select the **Manage** tab.\n- Click **Intents** .\n- Click **Import** .\n- Select the source.\n- If there are any conflicts, a dialog window is shown which allows to select the merge behavior.\n- Click **Submit** .## Export and import training phrases\nYou can export and import training phrases for an existing intent.\nThe file format for import is CSV with no column heading and a single column. For example:\n```\n\"I want a pony\"\n\"I need a pony\"\n\"I must have a pony\"\n```\nWhen importing training phrases, you can choose one of the following import modes:\n- **Import as new training phrases** : The phrases in the files are added to the list of existing phrases.\n- **Replace existing training phrases** : The existing training phrases are deleted, and the training phrases from the files are added.\nBy default, imported training phrases are automatically [annotated](#annot) . You can disable this behavior by selecting **Skip auto annotation** .\nTo export training phrases for an intent:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your Google Cloud project.\n- Select your agent.\n- Select the **Manage** tab.\n- Click **Intents** .\n- Select an intent.\n- Scroll down to the **Training phrases** section.\n- Select the training phrases you want to export.\n- Click **Export** .\nTo import training phrases for an intent:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your Google Cloud project.\n- Select your agent.\n- Select the **Manage** tab.\n- Click **Intents** .\n- Select an intent.\n- Scroll down to the **Training phrases** section.\n- If desired, select **skip auto annotation** .\n- Click the import button just above the training phrase list.\n- Select a file and import mode.\n- Click **Submit** .## Head and supplemental intents\nWhen designing agents, it is sometimes useful to think of intents as either or .\n**Note:** The label \"head intent\" is a system label that you can apply to an intent. This may be useful when filtering [analytics](/dialogflow/cx/docs/concept/analytics) data.\nA head intent identifies the end-user's primary purpose for interacting with an agent. A supplemental intent identifies an end-user's subsequent questions that are related to the head intent. These subsequent questions may provide additional context for the end-user's needs, or they may be follow-up questions that help the end-user clarify or better understand something.\nA head intent is usually one of the first intents matched in a conversation, and further end-user questions match supplemental intents. For example:\n| Dialogue                                | Explanation     |\n|:----------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------|\n| End-user: Activate new phone Agent: Sure I can help you with that. What are the last 4 digits of the phone number you want to activate? | Head intent is matched   |\n| End-user: 1234 Agent: Are you ready to activate your phone now?                   | A parameter is set    |\n| End-user: Will all of my messages carry over to my new phone? Agent: ...                | Supplemental intent is matched |\n**Note:** A [route group](/dialogflow/cx/docs/concept/handler#route-group) is an easy way to batch add related supplemental intents to multiple pages.", "guide": "Dialogflow"}