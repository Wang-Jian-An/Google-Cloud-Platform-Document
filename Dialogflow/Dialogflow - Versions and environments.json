{"title": "Dialogflow - Versions and environments", "url": "https://cloud.google.com/dialogflow/cx/docs/concept/version", "abstract": "# Dialogflow - Versions and environments\nYou can create multiple versions of your agent flows and deploy them to separate serving environments.\nWhen you edit a flow, you are editing a . At any point, you can save a draft flow as a . A flow version is an immutable snapshot of your flow data and associated agent data like intents, entities, webhooks, pages, route groups, etc.\nWhen you save a draft flow, it is deployed to the . When you create specific flow versions, you can deploy them to . You can create a variety of custom environments for:\n- testing\n- development\n- production\n- etc.\nIn addition, you can create [environment-specific webhooks](/dialogflow/cx/docs/concept/webhook#environment-specific) , so that you can easily isolate your production environment from development and testing environments.\n", "content": "## Production traffic best practices\n### Always use flow versions for production traffic\nA draft flow is updated every time a developer on your team makes a change. It is easy to break a draft flow unintentionally, especially if multiple people have write access to the agent. In addition, a recently edited draft flow may be inconsistent with the trained model, because training may have a delay or require manual execution.\nYou should always use flow versions for your production traffic. Draft flows should be tested before promoting them to production versions, and you can rollback to a previous version if any problems are discovered.\n### Always use environment-specific webhooks\nWhen making updates to your agent, you often have interdependent updates to your webhook code. During development and testing of these changes, you want the following:\n- To test the agent updates against the webhook code updates.\n- To avoid deploying your webhook code to production until you have completed testing.\nUsing [environment-specific webhooks](/dialogflow/cx/docs/concept/webhook#environment-specific) achieves both of these goals.\n### Consider possible agent errors while changing versions\nIf you change a flow version in your production environment while sessions are active, it may cause agent errors for some active sessions. These errors may happen if the previous and new versions are inconsistent with each other in a way that disrupts session state. Due to this, you should plan to change versions during down-time or off-peak hours.\n## Load a flow version to draft\nAt any time, you can load a flow version to draft, so it is editable and used by the default environment.\nLoading a flow version to draft can update multiple resources in an agent, including agent-level resources like intents and entities. When loading a version to draft with either the console or API, you can choose whether agent-level resources will be overwritten.\n## Manage flow versions\nTo manage your flow versions:\nTo list the current versions for a flow:- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your GCP project.\n- Select your agent.\n- Click the **Manage** tab.\n- Click **Versions** .\n- The agent flows are listed. Select one.\n- The versions are listed for the selected flow.\nThe following information is displayed for each flow:- **Display name** : The version display name.\n- **Version ID** : The ID for the version.\n- **NLU Type** : The [NLU type](/dialogflow/cx/docs/concept/agent#settings-ml) for the flow version.\n- **Creation timestamp** : The date and time that the version was created.\n- **Status** : The training status. A flow version is not ready to use until the status is marked as **Ready** .\nTo create a new flow version, click the **Create** button and provide the **Display name** and **Description** for the version.\nTo load a specific flow version as the draft flow:- Hover over a version row.\n- Click the optionbutton.\n- Click the **Load to draft** option.\n- An option is provided to overwrite agent-level data when loading.\nTo delete a specific flow version:- Hover over a version row.\n- Click the optionbutton.\n- Click the **Delete version** option.\nSee the methods for the `Version` type. \n **Note:** The `load` method has a `allowOverrideAgentResources` field, which can be used to control whether agent level resources are overwritten when restoring a flow as the draft flow.\n **Note:** When calling the `delete` method to delete a version, you must first remove all references to the version in environments data.\n## Compare flow versions\nOnce you have created flow versions, you can use the **compare versions** tool to see a side-by-side comparison between flow versions or the draft version. To compare versions:\n- Hover over a version row.\n- Click the optionbutton.\n- Click the **Compare versions** option.\n- Select another flow version or draft flow for comparison.\n- A side-by-side comparison is shown.\nSee the `compareVersions` method for the `Version` type.\n## Manage environments\nTo manage your agent environments:\nTo list the current environments for an agent:- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your GCP project.\n- Select your agent.\n- Click the **Manage** tab.\n- Click **Environments** .\n- The agent environments are listed.\nTo create a new environment, click the **Create** button and provide information.\nTo select flow versions and configure an environment, click an environment and provide information.\nTo view editing history of an environment, click the history button near the right side of an environment in the list.\nTo copy an environment resource name that includes the environment ID, click the copy button near the right side of an environment in the list.\nTo delete an environment, click the delete button near the right side of an environment in the list.\nSee the methods for the `Environment` type. \n **Note:** To reference a draft flow, use `0` as the flow version ID.\n## Specify environment for session calls\nUsing either the [console simulator](/dialogflow/cx/docs/concept/console#simulator) or the API, you can specify an environment when making runtime session calls. If an environment is not specified, the default environment is used.\nWhen using the console simulator, select the **Test agent in environment** option, then select an environment.\nTo specify an environment for `detectIntent` , `streamingDetectIntent` , `matchIntent` , and session entity REST calls; alter the URL by inserting `environments/environment-id` between the `agent` and `sessions` path parameters.\nFor example, the following URL uses the `6db409d7-57ac-41d7-83bd-89b8768e2745` environment ID:\n```\nhttps://dialogflow.googleapis.com/v3/projects/my-project-id/locations/us/agents/my-agent-id/environments/6db409d7-57ac-41d7-83bd-89b8768e2745/sessions/my-session-id:detectIntent\n```\n## Specify flow versions for session calls\nUsing either the [console simulator](/dialogflow/cx/docs/concept/console#simulator) or the API, you can specify a set of flow versions when making runtime session calls. The selected flow versions do not necessarily need to be referenced in any environment.\nWhen using the console simulator, select the **Test agent with specific flow versions** option, then select flow versions.\nTo specify flow versions for `detectIntent` , `streamingDetectIntent` , `matchIntent` , and session entity REST calls; provide the desired flow versions in the `query_parameters.flow_versions` field of the request.", "guide": "Dialogflow"}