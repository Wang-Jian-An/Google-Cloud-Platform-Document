{"title": "Dialogflow - Pages", "url": "https://cloud.google.com/dialogflow/cx/docs/concept/page", "abstract": "# Dialogflow - Pages\nA Dialogflow CX conversation (session) can be described and visualized as a [state machine](https://en.wikipedia.org/wiki/Finite-state_machine) . The states of a CX session are represented by .\nFor each [flow](/dialogflow/cx/docs/concept/flow) , you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the , the current page is considered , and the flow associated with that page is considered . Every flow has a special [start page](/dialogflow/cx/docs/concept/flow#start-page) . When a flow initially becomes active, the start page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page.\nYou configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For example, you might create the pages (in blue) in the diagram below for a flow of a pizza delivery agent. The node of the diagram represents the start page of the flow. When the flow is complete, it transitions to the flow.\n", "content": "## Lifecycle of a page\nOnce a page becomes active, the agent follows several steps which may involve entry fulfillment, prefilling forms, state handler evaluation, form parameter prompting, sending response messages to the end-user, and either a page change or a repeat loop:\nThe details of this process are as follows:\n- If entry [fulfillment](/dialogflow/cx/docs/concept/fulfillment) exists for the page, it is called. Any static responses provided by fulfillment are added to the [response queue](/dialogflow/cx/docs/concept/fulfillment#queue) .If [partial response](/dialogflow/cx/docs/concept/fulfillment#partial-response) is enabled, Dialogflow flushes the and sends all queued messages as a partial response to the streaming API caller.If the fulfillment has a webhook, the webhook is called, which may append additional responses to the queue. These additional responses do not trigger an immediate flush of the .\n- If the page has form parameters, they may be pre-filled:- Any set [session parameter](/dialogflow/cx/docs/concept/parameter#session) with the same name as a [form parameter](/dialogflow/cx/docs/concept/parameter#form) is copied to the form parameter.\n- If a [route](/dialogflow/cx/docs/concept/handler#route) triggered a transition to this page, and the route contains a matched [intent](/dialogflow/cx/docs/concept/intent) , any intent parameter with the same name as a [form parameter](/dialogflow/cx/docs/concept/parameter#form) is copied to the form parameter.\n- If any state handlers are [in scope](/dialogflow/cx/docs/concept/handler#scope) , they are evaluated according to the [handler evaluation order rules](/dialogflow/cx/docs/concept/handler#eval) . This can involve routes, event handlers, or reprompt handlers invoked from the prior loop iteration. If any state handler is called, one or both of the following may happen:- If fulfillment exists for the handler, it is called. Any static responses provided by fulfillment are added to the [response queue](/dialogflow/cx/docs/concept/fulfillment#queue) . Partial response and webhook are also executed if they are enabled.\n- If a target flow or page exists for the handler, the session transitions to the target and the page becomes inactive.\n- If all of the following are true, a form parameter prompt is added to the response queue:- The page has a form.\n- There are required form parameters left to fill.\n- A [reprompt handler](/dialogflow/cx/docs/concept/parameter#reprompt) was not followed in step 3.\n- Partial response and webhook are executed if they are enabled.\n- The remaining response queue messages are sent to the end-user, and the agent waits for end-user input.\n- If end-user input provides a prompted form parameter, fill the parameter. Continue to step 3.## Page lifecycle navigation\nThe [simulator](/dialogflow/cx/docs/concept/console#simulator) execution steps viewer allows you to switch between the steps for a specific conversation turn and brings the related agent builder elements into focus for each step. In the following example, end-user input \"I would like to rent a car\" triggers five execution and transition steps:\n- The executions steps viewer brings you to conversation starting page for the first step. In this case it's the default start page. \n- Transition route for the intent `car_rental.reservation_create` is triggered. The executions steps viewer brings this route to focus, where you can see that the transition target is the `Pickup Location` page. \n- Agent enters page `Pickup Location` . \n- Agent evaluates the entry fulfillment of `Pickup Location` page. The fulfillment is empty, so nothing happens. \n- Agent tries to collect the required form parameter `pickup_location` and the initial prompt fulfillment message for this parameter is shown to the end-user. \nYou can also undo the last utterance and try something else to test different page transitions.\n## Create a page\n**Note:** A page will not appear on the console graph until transitions have been created with a target set to the page.\nTo create a page:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your GCP project.\n- Select your agent.\n- Select a flow for the page in the **Flows** section.\n- Click the addbutton in the **Pages** section.\n- Enter a display name for your page.\n- Click the settingsbutton next to the page display name.\n- Select **Edit** .\n- Enter the fields in the page edit panel that appears.\n- Click **Save** .\nSee the `create` method for the `Page` type.\n## Page data\nTo access a page's data:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose the GCP project for the agent.\n- Select your agent.\n- Click the flow in the **Flows** section.\n- The flow's pages are populated in the **Pages** section.\n- Click the settingsbutton next to the page display name.\n- Select **Edit** .\n- Enter the fields in the page edit panel that appears.\n- Click **Save** to save any changes.\nSee the `get` and `patch/update` methods for the `Page` type.\nThe following data is associated with pages:\n- **Display name** : A human-readable name for your page.\n- **Entry fulfillment** (also known as **Entry dialogue** ): This is the [fulfillment](/dialogflow/cx/docs/concept/fulfillment) to call when the page initially becomes active.\n- **Parameters** : These are the parameter values in a page [form](/dialogflow/cx/docs/concept/parameter#form) that capture structured input from the end-user.\n- **Routes** : These state handlers may be called when the page is active. For details, see [Page-level handler routes](/dialogflow/cx/docs/concept/handler#route-page) \n- **Route groups** : The routes within these groups may be called when the page is active. For details, see [Route groups](/dialogflow/cx/docs/concept/handler#route-group) \n- **Event handlers** : These event handlers may be called when the page is active. For details, see [Page-level event handlers](/dialogflow/cx/docs/concept/handler#event-page) ## Page settings\nThe following settings are available for pages:\n- **Advanced speech settings** : These speech settings can optionally override the same [flow speech settings](/dialogflow/cx/docs/concept/flow#settings) and [agent speech settings](/dialogflow/cx/docs/concept/agent#settings-speech) .\n- **Speech adaptation settings** : Page level speech adaptation settings can optionally override the same [flow speech adaptation settings](/dialogflow/cx/docs/concept/flow#settings) . More detailed instructions in [manual speech adaptation](/dialogflow/cx/docs/concept/speech-adaptation#manual-adaptation) .\nTo access page settings:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your GCP project.\n- Select your agent.\n- Hover your mouse over the page in the **Pages** section.\n- Click the optionsbutton.\n- Select **Page settings** .\n- Browse or edit settings.\n- Click **Save** to save any changes.\nSee the `get` and `patch/update` methods for the `Page` type.\n## Delete a page\nTo delete a page:\n- Open the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your GCP project.\n- Select your agent.\n- Select the flow for the page in the **Flows** section.\n- Click the settingsbutton next to the page display name in the **Pages** section.\n- Select **Delete** .\nSee the `delete` method for the `Page` type.", "guide": "Dialogflow"}