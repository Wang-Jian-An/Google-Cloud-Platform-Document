{"title": "Dialogflow - Prebuilt components overview", "url": "https://cloud.google.com/dialogflow/cx/docs/concept/prebuilt-component", "abstract": "# Dialogflow - Prebuilt components overview\nPrebuilt components are a collection of prebuilt flows provided by Dialogflow for common tasks and scenarios. They can be used to accelerate development for both new and existing agents.\nThere are two types of prebuilt components:\n- **Building blocks:** components that collect specific parameters, such as name and address\n- **Use cases:** components that represent larger user journeys, like making a payment, which may make use of one or more building blocks\nPrebuilt component flows include [intents](/dialogflow/cx/docs/concept/intent) and [entities](/dialogflow/cx/docs/concept/entity) that are ready to use. For components that require integrations with external services, you need to modify the configuration of the [flexible webhooks](/dialogflow/cx/docs/concept/webhook#flexible) to integrate with the proper endpoints.\nThe following building block components are available:\n- [Address collection](/dialogflow/cx/docs/concept/prebuilt-component/address-collection) \n- [Alphanumeric collection](/dialogflow/cx/docs/concept/prebuilt-component/alphanumeric-collection) \n- [Credit card CVV collection](/dialogflow/cx/docs/concept/prebuilt-component/credit-card-cvv-collection) \n- [Credit card expiration date collection](/dialogflow/cx/docs/concept/prebuilt-component/credit-card-expiration-date-collection) \n- [Credit card number collection](/dialogflow/cx/docs/concept/prebuilt-component/credit-card-number-collection) \n- [Date of birth collection](/dialogflow/cx/docs/concept/prebuilt-component/date-of-birth-collection) \n- [Feedback](/dialogflow/cx/docs/concept/prebuilt-component/feedback) \n- [Greeting](/dialogflow/cx/docs/concept/prebuilt-component/greeting) \n- [Name collection](/dialogflow/cx/docs/concept/prebuilt-component/name-collection) \n- [Numeric collection](/dialogflow/cx/docs/concept/prebuilt-component/numeric-collection) \n- [Telephone number collection](/dialogflow/cx/docs/concept/prebuilt-component/telephone-number-collection) \n- [Waiting room](/dialogflow/cx/docs/concept/prebuilt-component/waiting-room) \n- [Zip code collection](/dialogflow/cx/docs/concept/prebuilt-component/zip-code-collection) \nThe following use case components are available:\n- [Account balance](/dialogflow/cx/docs/concept/prebuilt-component/account-balance) \n- [Account statement](/dialogflow/cx/docs/concept/prebuilt-component/account-statement) \n- [Arrange appointment](/dialogflow/cx/docs/concept/prebuilt-component/arrange-appointment) \n- [Authentication](/dialogflow/cx/docs/concept/prebuilt-component/authentication) \n- [Cancel order](/dialogflow/cx/docs/concept/prebuilt-component/cancel-order) \n- [Credit card enrollment](/dialogflow/cx/docs/concept/prebuilt-component/credit-card-enrollment) \n- [Credit card statement](/dialogflow/cx/docs/concept/prebuilt-component/credit-card-statement) \n- [Disputes](/dialogflow/cx/docs/concept/prebuilt-component/disputes) \n- [Exchange order](/dialogflow/cx/docs/concept/prebuilt-component/exchange-order) \n- [Financial services steering](/dialogflow/cx/docs/concept/prebuilt-component/financial-services-steering) \n- [Lock card](/dialogflow/cx/docs/concept/prebuilt-component/lock-card) \n- [Lost and stolen card](/dialogflow/cx/docs/concept/prebuilt-component/lost-stolen-card) \n- [Make a payment](/dialogflow/cx/docs/concept/prebuilt-component/make-a-payment) \n- [Offers and deals](/dialogflow/cx/docs/concept/prebuilt-component/offers-and-deals) \n- [Open account](/dialogflow/cx/docs/concept/prebuilt-component/open-account) \n- [Order status](/dialogflow/cx/docs/concept/prebuilt-component/order-status) \n- [Retail authentication](/dialogflow/cx/docs/concept/prebuilt-component/authentication-retail) \n- [Retail fraud and dispute](/dialogflow/cx/docs/concept/prebuilt-component/fraud-and-dispute-retail) \n- [Return and refund](/dialogflow/cx/docs/concept/prebuilt-component/return-and-refund) \n- [Telecommunications steering](/dialogflow/cx/docs/concept/prebuilt-component/telecommunications-steering) \n- [Transaction history](/dialogflow/cx/docs/concept/prebuilt-component/transaction-history) ", "content": "## Limitations\nThe following limitations apply:\n- Prebuilt components currently only support English (en).## Import a prebuilt component\n**Note:** If your project is within a [VPC Service Controls (VPC-SC)](/vpc-service-controls/docs/overview) perimeter, you may need to add an egress rule that authorizes traffic out from the VPC-SC perimeter to the Google-owned Google Cloud Storage bucket where the latest versions of prebuilt components are stored. See VPC Service Controls below for instructions.\nTo import a prebuilt component to your project:\n- Go to the [Dialogflow CX Console](https://dialogflow.cloud.google.com/cx/projects) .\n- Choose your Google Cloud project.\n- Select your agent or [create a new agent](/dialogflow/cx/docs/concept/agent#create) .\n- Select the **Manage** tab.\n- Click **Prebuilt** in the **Manage** panel.\n- Click the component of interest and click **Import as flow** .\n- Refer to each component-specific documentation to determine whether additional setup for webhook is needed.\n- Start testing and customizing.\n### VPC Service Controls\nIf your project is within a VPC Service Controls (VPC-SC) [perimeter](/vpc-service-controls/docs/service-perimeters) , you may need to add an egress rule to enable import of the latest versions of prebuilt components from the external Google-hosted Google Cloud Storage bucket where they are stored. If your VPC-SC rules prevent egress to the Google-hosted bucket, you may see an error message on import that contains \"Permission denied while accessing Google Cloud Storage URI 'gs://gassets-api-ai/prebuilt_components/cx-standard-prebuilt-components/ '\".\nTo enable import, you will need to [create an egress rule](/vpc-service-controls/docs/configuring-ingress-egress-policies#updating) that allows access to the external Google Cloud project containing the Google Cloud Storage bucket `gs://gassets-api-ai` . The following attributes describe the resource and operations required to enable import from the Google-owned resource:\n- **Resource:** `projects/921279757870`\n- **Service Name:** `storage.googleapis.com`\n- **Method:** `google.storage.objects.get`## Customizations and settings\nTo customize the component and improve settings:\n- Edit agent responses and [custom entities](/dialogflow/cx/docs/concept/entity-custom) to meet your business needs.\n- For voice agents, the following speech settings are recommended:- [Change STT model](/dialogflow/docs/support/troubleshooting#stt-empty-transcripts) to`latest_short`. To see which features are supported by this model for a particular language, check [Speech-to-Text supported languages](/speech-to-text/docs/speech-to-text-supported-languages) .\n- Enable [auto speech adaptation](/dialogflow/cx/docs/concept/speech-adaptation) .\n- If you use a telephony integration that allows parameter values extracted from telephone keypad presses, enable [DTMF for telephony integrations](/dialogflow/cx/docs/concept/parameter#dtmf) .\n- [Test the agent](/dialogflow/cx/docs/concept/console#simulator) using the simulator.\n- To test your component over voice, it is recommended to use [Dialogflow CX Phone Gateway](/dialogflow/cx/docs/concept/integration/phone-gateway) .## Handle exit events\nUpon successful completion of the task, a prebuilt component will exit with the END_FLOW [symbolic transition target](/dialogflow/cx/docs/concept/handler#symbolic) .\nWhen a prebuilt component isn't able to complete the task, the following events will be emitted for the calling page that caused the transition to the prebuilt component flow. It is a best practice to handle these events in your agent by creating the corresponding [event handlers](/dialogflow/cx/docs/concept/handler#event) in the calling page.\nSee [built-in events](/dialogflow/cx/docs/concept/handler#event-built-in) :\n- flow-cancelled\n- flow-failed\n- flow-failed-human-escalation## Additional functionalities\nSome prebuilt components have additional functionality. See the component-specific documentation to check which features are implemented for a particular component.\n### Repeat functionality\nIf the end-user has difficulty interpreting the virtual agent or missed hearing an agent response, they can ask for the last prompt to be repeated.\nSample utterances:\n### Waiting room functionality\nIf the end-user wants to take a minute to get back to the agent and does not have an immediate answer to a prompt, they can ask the virtual agent to hold. When the end-user is ready to continue the conversation, they can tell the agent \"I'm ready\" to resume the conversation. The waiting room feature is enabled in some prebuilt components by calling the waiting room prebuilt component. The waiting room feature can also be enabled anywhere in the agent by following the setup instructions as described in the [waiting room prebuilt component overview](/dialogflow/cx/docs/concept/prebuilt-component/waiting-room) .\nSample utterances:\n### Playback functionality\nIf the end user wants to know what the agent has collected so far, they can ask the agent to playback. The agent will then play back the currently captured parameter(s).\nSample utterances:## Common intents\nCommon intents are intents that are used for common behaviors in multiple components.\n| Common intent       | Description                                       |\n|:-----------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| prebuilt_components_confirmation_yes  | Positive phrases used to express affirmation, assent or to mark the addition of something emphasizing and amplifying a statement in response to a question or request |\n| prebuilt_components_confirmation_no  | Negative phrases used to express dissent, denial, or refusal in response to a question or request                  |\n| prebuilt_components_confirmation_done | Phrases used to express that the end-user is done with a task or request                        |\n| prebuilt_components_escalate_human_agent | Phrases used to request that the virtual agent connect the end-user to a human agent                     |\n| prebuilt_components_start_over   | Phrases used to request that the entire experience starts over from the beginning                      |\n| prebuilt_components_playback    | Specific phrases to request that the currently collected input is played back to the end-user so that the end-user can give confirmation        |\n| prebuilt_components_replay    | Phrases used to request that the previous prompt is said again                          |\n| prebuilt_components_waiting_room   | Phrases used to express the need for time to review, find or provide information in response to a question or request             |\n| prebuilt_components_ready    | Phrases used to notify the virtual agent that the end-user would like to continue an action                   |", "guide": "Dialogflow"}