{"title": "Dialogflow - Custom events", "url": "https://cloud.google.com/dialogflow/es/docs/events-custom", "abstract": "# Dialogflow - Custom events\nCustom events are events that you define. They are used to handle things that happen outside the conversation with the end-user. For example, the end-user clicked a button, a certain amount of time has passed, available inventory has changed during the conversation, and so on.\nYou can invoke these events using either [fulfillment](/dialogflow/docs/fulfillment-overview) or [the API](/dialogflow/docs/api-overview) .\n", "content": "## Invoke events with the API\nThe request for a [Sessions](/dialogflow/docs/reference/common-types#sessions) type `detectIntent` call contains a `queryInput.event` field, which is used to invoke events. The type of this field is a `EventInput` , and it contains fields for the event name, [optional parameters](/dialogflow/docs/events-overview#param) , and the language code.\nWhen you provide an event to a detect intent call, you do not provide other data, like an end-user expression. The call's sole purpose is to invoke an event and trigger an intent.\n## Invoke events with fulfillment\nYou can invoke events via [fulfillment](/dialogflow/docs/fulfillment-overview) by setting the `followupEventInput` field of the [WebhookResponse](/dialogflow/docs/reference/common-types#webhookresponse) . You can optionally set the `followupEventInput.parameters` field to provide [parameters](/dialogflow/docs/events-overview#param) to the intent.\nFor example:\n```\n{\u00a0 \"followupEventInput\": {\u00a0 \u00a0 \"name\": \"event-name\",\u00a0 \u00a0 \"parameters\": {\u00a0 \u00a0 \u00a0 \"parameter-name-1\": \"parameter-value-1\",\u00a0 \u00a0 \u00a0 \"parameter-name-2\": \"parameter-value-2\"\u00a0 \u00a0 },\u00a0 \u00a0 \"languageCode\": \"en-US\"\u00a0 }}\n```\nWhen the `followupEventInput` parameter is set for a `WebhookResponse` , Dialogflow ignores the `fulfillmentText` , `fulfillmentMessages` , and `payload` fields. In addition, the `followupEventInput.languageCode` field is a required field, but Dialogflow ignores this field, because the language was already defined in the originating detect intent request.\nWhen Dialogflow receives a webhook response that includes an event, it immediately triggers the corresponding intent in which it was [defined](/dialogflow/docs/events-overview#config) .\nThe following flow describes the steps:\n- The end-user types or speaks an expression.\n- Dialogflow matches the end-user expression to **Intent-1** , which is configured for fulfillment.\n- Dialogflow sends a webhook request to your server.\n- Your server responds with a webhook response that includes a followup event.\n- Instead of responding to the user for the **Intent-1** match, Dialogflow triggers **Intent-2** , which is configured for the event.\n- Dialogflow proceeds as though the end-user initiated the match for **Intent-2** and handles required parameters and fulfillment as dictated by the configuration of **Intent-2** .## Chaining intent matches with webhook response events\nIt is possible to chain intent matches with webhook response events. In the flow described above, **Intent-2** could also be configured for fulfillment. If your server's webhook response supplies another event, Dialogflow proceeds to match **Intent-3** (configured for the event) without responding to the end-user for **Intent-2** .\nDialogflow does not respond to the end-user until the chain has ended. When chaining intents in such a way, each webhook response must be sent within [timeout restrictions](/dialogflow/docs/fulfillment-how#webhook_response) .\n**Note:** You can chain 3 intent matches in this way.", "guide": "Dialogflow"}