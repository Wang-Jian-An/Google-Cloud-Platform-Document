{"title": "Dialogflow - Knowledge connectors", "url": "https://cloud.google.com/dialogflow/es/docs/knowledge-connectors", "abstract": "# Dialogflow - Knowledge connectors\n**    Beta     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\ncomplement defined intents. They parse (for example, FAQs or articles) to find automated responses. To configure them, you define one or more [knowledge bases](/dialogflow/docs/how/knowledge-bases) , which are collections of knowledge documents.\nYou can enable knowledge bases for your agent, so all detect intent requests can find automated responses using your knowledge bases. Alternatively, you can specify one or more knowledge bases in your individual [detect intent](/dialogflow/docs/api-overview#detect-intent) requests.\nIt is common for an agent using knowledge connectors to also use defined intents. Knowledge connectors offer less response precision and control than intents. You should define your intents to handle complex user requests, and let knowledge connectors handle simple requests.\nFor a list of supported languages, see the column in the [languages reference](/dialogflow/docs/reference/language) .\n", "content": "## Limitations\nThe knowledge connectors feature is only available for the `global` [region](/dialogflow/es/docs/how/region) .\n## Enable beta features\nEnsure that beta features are enabled:\n- Go to the [Dialogflow ES Console](https://dialogflow.cloud.google.com) .\n- Select an agent.\n- Click the settingsbutton next to the agent's name.\n- Scroll down while on the **General** tab and ensure that **Beta Features** is enabled.\n- If you have made changes, click **Save** .## Create a knowledge base and document\nFollow the instructions in the [knowledge bases how-to](/dialogflow/docs/how/knowledge-bases) to create a knowledge base and document.\n## Settings for knowledge connectors\n**Caution:** Knowledge connector settings are not currently included when [exporting, importing, or restoring](/dialogflow/docs/agents-settings#export) agents.\nYou can enable or disable knowledge bases for your agent. Enabled knowledge bases will be considered for all intent matching requests that do not specify knowledge bases. To enable or disable knowledge bases:\n- Go to the [Dialogflow ES Console](https://dialogflow.cloud.google.com) .\n- Select an agent.\n- Click **Knowledge** in the left sidebar menu.\n- Select one or more knowledge bases from the list.\n- Click **Enable** or **Disable** .\nWhen an end-user expression also matches an intent, you can specify how strongly you prefer knowledge results:\n- Scroll down to the **Adjust Knowledge Results Preference** section.\n- Adjust the slider from weaker (preference given to intent) to stronger (preference given to knowledge). For more information, see [Detect intent responses](#response) below.## Configure responses\nBy default, a knowledge base is configured with a single default text response populated with the best matching knowledge answer. You can change this response and add [rich response messages](/dialogflow/docs/intents-rich-messages) . Knowledge responses may contain up to three answers per knowledge base, and you can reference these answers in your configured responses. To add responses:\n- From the **Knowledge** page, click your knowledge base name.\n- Scroll down to the **Responses** section and add responses as desired:- When defining the first response, use`$Knowledge.Question[1]`and`$Knowledge.Answer[1]`where you want the question and answer to be supplied.\n- The index for`$Knowledge.Question`and`$Knowledge.Answer`starts at 1, so increase this index when adding more responses.\n- Click **Save** once you are done editing.\nWhen defining responses, you should consider these points:\n- If the number of defined responses is greater than the number N of knowledge connector response matches, only N responses will be returned.\n- Given that the accuracy could be lower than matching explicitly defined intents, we recommend returning three responses to your users when possible.\n**Caution:** The current behavior when defining multiple response variants is a known issue. Once corrected, the behavior will be as follows:- If there are multiple response variants defined within a singleor Google Assistantbox,  Dialogflow chooses one at random.\n- If there are multiple rich response boxes defined,  Dialogflow chooses one response variant from each box.\nExample:\n## Detect intent with knowledge base\nWhen making a [detect intent request](/dialogflow/docs/api-overview#detect-intent) , you can specify one or more knowledge bases for a possible response. Explicitly supplying knowledge bases in a request overrides the settings for enabled and disabled knowledge bases.\nThe samples below show you how to use the Dialogflow Console, REST API (including command line), or client libraries to detect intent. To use the API, call the `detectIntent` method on the [Sessions](/dialogflow/docs/reference/common-types#sessions) type.\nYou can interact with the agent and receive knowledge connector responses via the\n [Dialogflow simulator](/dialogflow/docs/console#simulator) \n:\n- Follow the [steps above to enable a knowledge base](#settings) .\n- Follow the [steps above to define responses](#response-config) .\n- Type \"How do I sign up?\" in the simulator.Call the\n`detectIntent`\nmethod on the\n [Sessions](/dialogflow/docs/reference/common-types#sessions) \ntype and specify the knowledge base in the\n`queryParams`\nfield.\nBefore using any of the request data, make the following replacements:- : your GCP project ID\n- : your knowledge base ID\nHTTP method and URL:\n```\nPOST https://dialogflow.googleapis.com/v2beta1/projects/PROJECT_ID/agent/sessions/123456789:detectIntent\n```\nRequest JSON body:\n```\n{\n \"queryInput\": {\n \"text\": {\n  \"text\": \"How do I sign up?\",\n  \"languageCode\": \"en-US\"\n }\n },\n \"queryParams\": {\n \"knowledgeBaseNames\": [\"projects/PROJECT_ID/knowledgeBases/KNOWLEDGE_BASE_ID\"]\n }\n}\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:\n```\n{\n ...\n \"queryResult\": {\n \"queryText\": \"How do I sign up?\",\n \"parameters\": {},\n \"allRequiredParamsPresent\": true,\n \"fulfillmentText\": \"Sign up for Cloud Storage by turning on the Cloud Storage service in the Google Cloud Platform Console.\",\n \"intent\": {\n  \"name\": \"projects/my-gcp-project/agent/intents/487c7242-a769-408a-a339-47b95e10dac4\",\n  \"displayName\": \"Knowledge.KnowledgeBase.MzkzNTAyMDE3NDQxNDk3MDg4MA\"\n },\n \"intentDetectionConfidence\": 0.99371547,\n \"languageCode\": \"en-us\",\n \"knowledgeAnswers\": {\n  \"answers\": [  {\n   \"answer\": \"Sign up for Cloud Storage by turning on the Cloud Storage service in the Google Cloud Platform Console.\",\n   \"matchConfidenceLevel\": \"HIGH\",\n   \"matchConfidence\": 0.99371547\n  },\n  {\n   \"answer\": \"Certain types of content are not allowed on this service; please refer to the Terms of Services and Platform Policies for details. If you believe a piece of content is in violation of our policies, report it here (select See more products, then Google Cloud Storage and Cloud Bigtable).\",\n   \"matchConfidenceLevel\": \"LOW\",\n   \"matchConfidence\": 0.0012244871\n  },\n  {\n   \"answer\": \"From the Cloud Storage documentation click \\\"Send feedback\\\" near the top right of the page. This will open a feedback form. Your comments will be reviewed by the Cloud Storage team.\",\n   \"matchConfidenceLevel\": \"LOW\",\n   \"matchConfidence\": 0.0011537358\n  }\n  ]\n }\n }\n}\n```\nTo authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dialogflow/snippets/src/main/java/com/example/dialogflow/DetectIntentKnowledge.java) \n```\nimport com.google.api.gax.rpc.ApiException;import com.google.cloud.dialogflow.v2beta1.DetectIntentRequest;import com.google.cloud.dialogflow.v2beta1.DetectIntentResponse;import com.google.cloud.dialogflow.v2beta1.KnowledgeAnswers;import com.google.cloud.dialogflow.v2beta1.KnowledgeAnswers.Answer;import com.google.cloud.dialogflow.v2beta1.QueryInput;import com.google.cloud.dialogflow.v2beta1.QueryParameters;import com.google.cloud.dialogflow.v2beta1.QueryResult;import com.google.cloud.dialogflow.v2beta1.SessionName;import com.google.cloud.dialogflow.v2beta1.SessionsClient;import com.google.cloud.dialogflow.v2beta1.TextInput;import com.google.common.collect.Maps;import java.io.IOException;import java.util.List;import java.util.Map;public class DetectIntentKnowledge {\u00a0 // DialogFlow API Detect Intent sample with querying knowledge connector.\u00a0 public static Map<String, KnowledgeAnswers> detectIntentKnowledge(\u00a0 \u00a0 \u00a0 String projectId,\u00a0 \u00a0 \u00a0 String knowledgeBaseName,\u00a0 \u00a0 \u00a0 String sessionId,\u00a0 \u00a0 \u00a0 String languageCode,\u00a0 \u00a0 \u00a0 List<String> texts)\u00a0 \u00a0 \u00a0 throws IOException, ApiException {\u00a0 \u00a0 // Instantiates a client\u00a0 \u00a0 Map<String, KnowledgeAnswers> allKnowledgeAnswers = Maps.newHashMap();\u00a0 \u00a0 try (SessionsClient sessionsClient = SessionsClient.create()) {\u00a0 \u00a0 \u00a0 // Set the session name using the sessionId (UUID) and projectID (my-project-id)\u00a0 \u00a0 \u00a0 SessionName session = SessionName.of(projectId, sessionId);\u00a0 \u00a0 \u00a0 System.out.println(\"Session Path: \" + session.toString());\u00a0 \u00a0 \u00a0 // Detect intents for each text input\u00a0 \u00a0 \u00a0 for (String text : texts) {\u00a0 \u00a0 \u00a0 \u00a0 // Set the text and language code (en-US) for the query\u00a0 \u00a0 \u00a0 \u00a0 TextInput.Builder textInput =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TextInput.newBuilder().setText(text).setLanguageCode(languageCode);\u00a0 \u00a0 \u00a0 \u00a0 // Build the query with the TextInput\u00a0 \u00a0 \u00a0 \u00a0 QueryInput queryInput = QueryInput.newBuilder().setText(textInput).build();\u00a0 \u00a0 \u00a0 \u00a0 QueryParameters queryParameters =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 QueryParameters.newBuilder().addKnowledgeBaseNames(knowledgeBaseName).build();\u00a0 \u00a0 \u00a0 \u00a0 DetectIntentRequest detectIntentRequest =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DetectIntentRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSession(session.toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setQueryInput(queryInput)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setQueryParams(queryParameters)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 \u00a0 // Performs the detect intent request\u00a0 \u00a0 \u00a0 \u00a0 DetectIntentResponse response = sessionsClient.detectIntent(detectIntentRequest);\u00a0 \u00a0 \u00a0 \u00a0 // Display the query result\u00a0 \u00a0 \u00a0 \u00a0 QueryResult queryResult = response.getQueryResult();\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Knowledge results:\\n\");\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"====================\\n\");\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\"Query Text: '%s'\\n\", queryResult.getQueryText());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Detected Intent: %s (confidence: %f)\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 queryResult.getIntent().getDisplayName(), queryResult.getIntentDetectionConfidence());\u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Fulfillment Text: '%s'\\n\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 queryResult.getFulfillmentMessagesCount() > 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ? queryResult.getFulfillmentMessages(0).getText()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 : \"Triggered Default Fallback Intent\");\u00a0 \u00a0 \u00a0 \u00a0 KnowledgeAnswers knowledgeAnswers = queryResult.getKnowledgeAnswers();\u00a0 \u00a0 \u00a0 \u00a0 for (Answer answer : knowledgeAnswers.getAnswersList()) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\" - Answer: '%s'\\n\", answer.getAnswer());\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 System.out.format(\" - Confidence: '%s'\\n\", answer.getMatchConfidence());\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 KnowledgeAnswers answers = queryResult.getKnowledgeAnswers();\u00a0 \u00a0 \u00a0 \u00a0 allKnowledgeAnswers.put(text, answers);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 \u00a0 return allKnowledgeAnswers;\u00a0 }}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dialogflow/detect.v2beta1.js) \n```\n// Imports the Dialogflow client libraryconst dialogflow = require('@google-cloud/dialogflow').v2beta1;// Instantiate a DialogFlow client.const sessionClient = new dialogflow.SessionsClient();/**\u00a0* TODO(developer): Uncomment the following lines before running the sample.\u00a0*/// const projectId = 'ID of GCP project associated with your Dialogflow agent';// const sessionId = `user specific ID of session, e.g. 12345`;// const languageCode = 'BCP-47 language code, e.g. en-US';// const knowledgeBaseId = `the ID of your KnowledgeBase`;// const query = `phrase(s) to pass to detect, e.g. I'd like to reserve a room for six people`;// Define session pathconst sessionPath = sessionClient.projectAgentSessionPath(\u00a0 projectId,\u00a0 sessionId);const knowledgeBasePath =\u00a0 'projects/' + projectId + '/knowledgeBases/' + knowledgeBaseId + '';// The audio query requestconst request = {\u00a0 session: sessionPath,\u00a0 queryInput: {\u00a0 \u00a0 text: {\u00a0 \u00a0 \u00a0 text: query,\u00a0 \u00a0 \u00a0 languageCode: languageCode,\u00a0 \u00a0 },\u00a0 },\u00a0 queryParams: {\u00a0 \u00a0 knowledgeBaseNames: [knowledgeBasePath],\u00a0 },};const responses = await sessionClient.detectIntent(request);const result = responses[0].queryResult;console.log(`Query text: ${result.queryText}`);console.log(`Detected Intent: ${result.intent.displayName}`);console.log(`Confidence: ${result.intentDetectionConfidence}`);console.log(`Query Result: ${result.fulfillmentText}`);if (result.knowledgeAnswers && result.knowledgeAnswers.answers) {\u00a0 const answers = result.knowledgeAnswers.answers;\u00a0 console.log(`There are ${answers.length} answer(s);`);\u00a0 answers.forEach(a => {\u00a0 \u00a0 console.log(` \u00a0 answer: ${a.answer}`);\u00a0 \u00a0 console.log(` \u00a0 confidence: ${a.matchConfidence}`);\u00a0 \u00a0 console.log(` \u00a0 match confidence level: ${a.matchConfidenceLevel}`);\u00a0 });}\n```To authenticate to Dialogflow, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dialogflow/detect_intent_knowledge.py) \n```\ndef detect_intent_knowledge(\u00a0 \u00a0 project_id, session_id, language_code, knowledge_base_id, texts):\u00a0 \u00a0 \"\"\"Returns the result of detect intent with querying Knowledge Connector.\u00a0 \u00a0 Args:\u00a0 \u00a0 project_id: The GCP project linked with the agent you are going to query.\u00a0 \u00a0 session_id: Id of the session, using the same `session_id` between requests\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 allows continuation of the conversation.\u00a0 \u00a0 language_code: Language of the queries.\u00a0 \u00a0 knowledge_base_id: The Knowledge base's id to query against.\u00a0 \u00a0 texts: A list of text queries to send.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 from google.cloud import dialogflow_v2beta1 as dialogflow\u00a0 \u00a0 session_client = dialogflow.SessionsClient()\u00a0 \u00a0 session_path = session_client.session_path(project_id, session_id)\u00a0 \u00a0 print(\"Session path: {}\\n\".format(session_path))\u00a0 \u00a0 for text in texts:\u00a0 \u00a0 \u00a0 \u00a0 text_input = dialogflow.TextInput(text=text, language_code=language_code)\u00a0 \u00a0 \u00a0 \u00a0 query_input = dialogflow.QueryInput(text=text_input)\u00a0 \u00a0 \u00a0 \u00a0 knowledge_base_path = dialogflow.KnowledgeBasesClient.knowledge_base_path(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 project_id, knowledge_base_id\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 query_params = dialogflow.QueryParameters(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 knowledge_base_names=[knowledge_base_path]\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 request = dialogflow.DetectIntentRequest(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 session=session_path, query_input=query_input, query_params=query_params\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 response = session_client.detect_intent(request=request)\u00a0 \u00a0 \u00a0 \u00a0 print(\"=\" * 20)\u00a0 \u00a0 \u00a0 \u00a0 print(\"Query text: {}\".format(response.query_result.query_text))\u00a0 \u00a0 \u00a0 \u00a0 print(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Detected intent: {} (confidence: {})\\n\".format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 response.query_result.intent.display_name,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 response.query_result.intent_detection_confidence,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 print(\"Fulfillment text: {}\\n\".format(response.query_result.fulfillment_text))\u00a0 \u00a0 \u00a0 \u00a0 print(\"Knowledge results:\")\u00a0 \u00a0 \u00a0 \u00a0 knowledge_answers = response.query_result.knowledge_answers\u00a0 \u00a0 \u00a0 \u00a0 for answers in knowledge_answers.answers:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 print(\" - Answer: {}\".format(answers.answer))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 print(\" - Confidence: {}\".format(answers.match_confidence))\n```\n## Detect intent responses\nThe response for the [Sessions](/dialogflow/docs/reference/common-types#sessions) type `detectIntent` method is a `DetectIntentResponse` . Multiple factors affect how response fields are populated.\nIf a defined intent and a knowledge base are both potential matches, the match confidence of each and the (see [Settings for knowledge connectors](#settings) ) are used to determine which match is the selected match. The selected match is populated in the `DetectIntentResponse.queryResult` field, and other potential matches are populated in the `DetectIntentResponse.alternativeQueryResults` field. Both of these fields contain `QueryResult` messages.\nIf a knowledge base provides a potential match:\n- `QueryResult.knowledgeAnswers`is populated with a list of potential knowledge answers ordered by decreasing match confidence.\n- If rich responses have been defined for the knowledge base,`QueryResult.fulfillmentMessages`is populated with rich response messages.\nWhen performing a detect intent request, it is possible for the knowledge query to fail. When this happens, defined intents will be selected, so the overall detect intent request will not fail. You can find knowledge query error information in the `DetectIntentResponse.alternativeQueryResults[i].diagnosticInfo` field.\n## Manage knowledge bases\nTo learn more about managing knowledge bases, see [Manage knowledge bases](/dialogflow/docs/how/knowledge-bases) .", "guide": "Dialogflow"}