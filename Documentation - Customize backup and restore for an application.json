{"title": "Documentation - Customize backup and restore for an application", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Customize backup and restore for an application\n**Note:** The steps described on this page are optional and are not required to successfully configure backup and restoration for your workloads.`ProtectedApplication`resources are optional Kubernetes resources in namespaces that customize the backup and restore of individual stateful applications. Without`ProtectedApplication`resources, the following restrictions apply:- You restrict the backup and restore scope granularity to the namespace  level.\n- No flush and quiesce operations occur on workloads during backup execution.  This might result in virtual machines with multiple disks not being  crash-consistent after restoration.\n`ProtectedApplication` resources are optional Kubernetes namespace resources used to customize the backup and restore of individual stateful applications. The `ProtectedApplication` resource defines which Kubernetes resources belong to an application instance. You can manually set up a specialized orchestration using the `kubectl` command to create a backup and restore of those applications in the following scenarios:\n- To identify a set of resources in a namespace that might be backed up or restored independently of the other resources in that namespace. A`ProtectedApplication`is the most fine-grained namespace entity that you can identify for a backup or restore scope.\n- To provide specialized backup orchestration whenever the`ProtectedApplication`falls within the scope of a backup. In particular, if the`ProtectedApplication`contains`PersistentVolumeClaim`(PVC) resources either directly or through a template from a`StatefulSet`, you can runbefore and after backing up the volumes. Hooks are commands that run in application containers. These hooks are often used for flush, quiesce, or unquiesce operations, and provide an application-consistent backup.\nTo use `ProtectedApplications` , you must define them before creating a `BackupPlan` . Specific resources can be filtered within a namespace by using Kubernetes labels or selectors.\nHere is an example of a `Deployment` with a `ProtectedApplication` that backs up all of the resources associated with the application during backup, and restores all resources during the restore.\n```\napiVersion: v1kind: Namespacemetadata:\u00a0 name: \"applications\"---apiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: protected-application-deployment\u00a0 namespace: applications\u00a0 labels:\u00a0 \u00a0 app: protectedspec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app: nginx\u00a0 replicas: 2\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 app: nginx\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: nginx\u00a0 \u00a0 \u00a0 \u00a0 image: nginx:1.14.2\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 80---apiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: unprotected-application-deployment\u00a0 namespace: applications\u00a0 labels:\u00a0 \u00a0 app: unprotectedspec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app: nginx\u00a0 replicas: 2\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 app: nginx\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: nginx\u00a0 \u00a0 \u00a0 \u00a0 image: nginx:1.14.2\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 80---apiVersion: gkebackup.gke.io/v1kind: ProtectedApplicationmetadata:\u00a0 name: protected-application-test\u00a0 namespace: applicationsspec:\u00a0 applicationName: protectedApplication\u00a0 resourceSelection:\u00a0 \u00a0 type: Selector\u00a0 \u00a0 selector:\u00a0 \u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 \u00a0 app: protected\u00a0 components:\u00a0 \u00a0 - name: protect-application-deployment\u00a0 \u00a0 \u00a0 resourceKind: Deployment\u00a0 \u00a0 \u00a0 resourceNames:\u00a0 \u00a0 \u00a0 \u00a0 - protected-application-deployment\u00a0 \u00a0 \u00a0 strategy:\u00a0 \u00a0 \u00a0 \u00a0 type: BackupAllRestoreAll\n```\nSpecify the `ProtectedApplication` in the list of `selectedApplications` in the `backupScope` . For example:\n```\napiVersion: backup.gdc.goog/v1kind: BackupPlanmetadata:\u00a0 name: protected-application-backupplan-test\u00a0 namespace: applicationsspec:\u00a0 clusterName: \"cluster-sample\"\u00a0 backupSchedule:\u00a0 \u00a0 cronSchedule: \"*/30 * * * *\"\u00a0 \u00a0 paused: true\u00a0 backupConfig:\u00a0 \u00a0 backupScope:\u00a0 \u00a0 \u00a0 selectedApplications:\u00a0 \u00a0 \u00a0 \u00a0 namespacedNames:\u00a0 \u00a0 \u00a0 \u00a0 - name: protected-application-test\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 namespace: applications\u00a0 \u00a0 backupRepository: \"backup-repository\"\u00a0 retentionPolicy:\u00a0 \u00a0 backupDeleteLockDays: 10\u00a0 \u00a0 backupRetainDays: 10\n```\nThis example includes the following values:\n| Value    | Description                                                                                                                         |\n|:------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| resourceSelection | Defines how to identify resources that belong to the protected application: type: Specify one of: ApplicationName: Backs up a sig-apps application within the same namespace. Selector: Backs up resources that match a given selector within the same namespace. applicationName: If type is ApplicationName, specifies the name of the sig-apps Application within the same namespace. selector: If type is Selector, specifies the label selector to select resources within the same namespace. |\n| components  | The list of components for the protected application, such as deployments or stateful sets: name: The unique name of the component. resourceKind: Choose between Deployment or StatefulSet. resourceNames: The list of names identifying the resourceKind in the namespace. strategy: Additional details on how to back up or restore this component. For more information, see Protected application strategies.                      ", "content": "|", "guide": "Documentation"}