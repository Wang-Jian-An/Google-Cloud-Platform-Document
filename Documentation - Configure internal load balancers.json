{"title": "Documentation - Configure internal load balancers", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Configure internal load balancers\nInternal load balancers (ILB) expose services within the organization from an internal IP pool assigned to the organization. An ILB service is never accessible from any endpoint outside of the organization.\nBy default, you can access ILB services within the same project from any cluster in the organization. The default [project network policy](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/configure-traffic-between-projects) doesn't let you access any project resources from outside the project, and this restriction applies to ILB services as well. If the Platform Administrator (PA) configures project network policies that allow access to your project from other projects, then the ILB service is also accessible from those other projects in the same organization.\nCreate internal load balancers in GDCH by creating a Kubernetes `Service` of type `LoadBalancer` in a user cluster.\nTo create an ILB service, do the following:\n- Create a YAML file for the `Service` definition of type `LoadBalancer` . You must design the ILB service as internal using the `networking.gke.io/load-balancer-type: internal` annotation.The following `Service` object is an example of an ILB service:```\napiVersion: v1kind: Servicemetadata:\u00a0 annotations:\u00a0 \u00a0 networking.gke.io/load-balancer-type: internal\u00a0 name: ILB_SERVICE_NAME\u00a0 namespace: PROJECTspec:\u00a0 ports:\u00a0 - port: 1234\u00a0 \u00a0 protocol: TCP\u00a0 \u00a0 targetPort: 1234\u00a0 selector:\u00a0 \u00a0 k8s-app: my-app\u00a0 type: LoadBalancer\n```Replace the following:- ``: the name of the ILB service.\n- ``: the namespace of your project that contains the backend workloads.\nThe `port` field configures the frontend port you expose on the VIP address. The `targetPort` field configures the backend port to which you want to forward the traffic on the backend workloads. The load balancer supports Network Address Translation (NAT). The frontend and backend ports can be different.\n- On the `selector` field of the `Service` definition, specify pods or virtual machines as the backend workloads.The selector defines which workloads to take as backend workloads for this service, based on matching the labels you specify with labels on the workloads. The `Service` can only select backend workloads in the same project and same cluster where you define the `Service` .For more information about service selection, see [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/) \n- Save the `Service` definition file in the same project as the backend workloads. The ILB service can only select workloads that are in the same cluster as the `Service` definition.\n- Apply the `Service` definition file to the cluster:```\nkubectl apply -f ILB_FILE\n```Replace `` with the name of the `Service` definition file for the ILB service.\nWhen you create an ILB service, the service gets an IP address. You can obtain the IP address of the ILB service by viewing the service status:\n```\nkubectl -n PROJECT get svc ILB_SERVICE_NAME\n```\nReplace the following:\n- ``: the namespace of your project that contains the backend workloads.\n- ``: the name of the ILB service.\nYou must obtain an output similar to the following example:\n```\nNAME \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0TYPE \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 CLUSTER-IP \u00a0 \u00a0EXTERNAL-IP \u00a0 \u00a0 PORT(S) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0AGEilb-service \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LoadBalancer \u00a0 10.0.0.1 \u00a0 \u00a0 \u00a010.0.0.1 \u00a0 \u00a0 \u00a0 \u00a01234:31930/TCP \u00a0 22h\n```\nThe `CLUSTER-IP` and `EXTERNAL-IP` fields must show the same value, which is the IP of the ILB service. This IP address is now accessible from other clusters in the organization, in accordance with [the project network policies](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/configure-traffic-between-projects) that the project has.\nIf you don't obtain an output, ensure that you created the ILB service successfully.\nGDCH supports Domain Name System (DNS) names for services. However, those names only work in the same cluster for ILB services. From other clusters, you must use the IP address to access the ILB service.\n**Important:** If the `CLUSTER-IP` and `EXTERNAL-IP` values are not the same, then you configured the service as an external load balancer (ELB) service. Ensure that the `networking.gke.io/load-balancer-type: internal` annotation is correct on the `Service` definition. Annotation keys and values are case sensitive", "content": ".", "guide": "Documentation"}