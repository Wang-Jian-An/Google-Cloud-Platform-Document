{"title": "Vertex AI - Control access to Vertex AI endpoints", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Control access to Vertex AI endpoints\nThis page discusses how to control access to an Vertex AI endpoint by setting an IAM policy on it. It assumes that you're already familiar with IAM concepts such as policies, roles, permissions, and principals as described in [Vertex AI access control with IAM](/vertex-ai/docs/general/access-control) and [Concepts related to access management](/iam/docs/overview#concepts_related_to_access_management) .\nAn IAM [policy](/iam/docs/policies#structure) includes one or more role bindings that define which IAM roles are associated with which principals. A role is a collection of permissions that you grant to a [principal](/iam/docs/overview#concepts_related_identity) . Vertex AI provides [predefined roles](/vertex-ai/docs/general/access-control#predefined-roles) that you can use in your policies. Or you can create your own custom roles.\n", "content": "## Get an IAM policy\nYou can view the current IAM policy on a Vertex AI endpoint by using the REST API. To do so, you must have `endpoints.getIamPolicy` permission on the endpoint or the project. The Vertex AI Administrator role ( `roles/aiplatform.admin` ) grants this permission.\nTo get the IAM policy from a resource, send a `POST` request that uses the [getIamPolicy](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.endpoints/getIamPolicy) method.\nBefore using any of the request data, make the following replacements:- : The region where the endpoint is located, for example,`us-central1`.\n- : Your Google Cloud project ID.\n- : The ID for the endpoint.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:getIamPolicy\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d \"\" \\ \"https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:getIamPolicy\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -Uri \"https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:getIamPolicy\" | Select-Object -Expand Content\n```\nYou should receive a JSON response with the current IAM policy:\n```\n{\n \"version\": 1,\n \"etag\": \"BwXTmICm7mI\",\n \"bindings\": [ {\n  \"role\": \"roles/aiplatform.user\",\n  \"members\": [  \"user:example@example.com\"\n  ]\n }\n ]\n}\n```\n## Set an IAM policy\nYou can set an IAM policy on an endpoint by using the REST API. To do so, you must have `endpoints.setIamPolicy` permission on the endpoint or the project. The Vertex AI Administrator role ( `roles/aiplatform.admin` ) grants this permission.\nTo set the IAM policy on a resource, send a `POST` request that uses the [setIamPolicy](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.endpoints/setIamPolicy) method.\nSetting an IAM policy overrides any existing policy; changes are not appended. To modify a resource's existing policy, use the `getIamPolicy` method to get its existing policy and then make modifications. Include your modified policy along with the `etag` in your `setIamPolicy` request.\nIf you receive a `409` error code, this means that a concurrent `setIamPolicy` request already updated the policy. Use the `getIamPolicy` method to get the policy's updated `etag` , and then retry the `setIamPolicy` request with the new `etag` .\nBefore using any of the request data, make the following replacements:- : The region where the endpoint is located, for example,`us-central1`.\n- : Your Google Cloud project ID.\n- : The ID for the endpoint.\n- : An IAM role that includes the permissions  to grant, such as`roles/aiplatform.user`.\n- : The principal that is granted the role's  permissions, such as`user:myuser@example.com`.\n- : A string value that is used to prevent simultaneous  updates of a policy from overwriting each other. This value is returned as  part of the`getIamPolicy`response.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:setIamPolicy\n```\nRequest JSON body:\n```\n{\n \"policy\": {\n \"bindings\": [  {\n  \"role\": \"ROLE\",\n  \"members\": [   \"PRINCIPAL\"\n  ]\n  },\n  ...\n ],\n \"etag\": \"ETAG\"\n }\n}\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:setIamPolicy\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:setIamPolicy\" | Select-Object -Expand Content\n```\nYou should receive a JSON response with the current IAM policy:\n```\n{\n \"version\": 1,\n \"etag\": \"BwXTmICm7mI\",\n \"bindings\": [ {\n  \"role\": \"roles/aiplatform.user\",\n  \"members\": [  \"user:example@example.com\"\n  ]\n }\n ]\n}\n```\n## Verify a user's IAM permissions for an endpoint\nYou can verify whether the currently authenticated user has specific IAM permissions for an endpoint.\nTo verify whether a user has specific IAM permissions for a resource, send a `POST` request that uses the [testIamPermissions](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.endpoints/testIamPermissions) method. The following example lets you test whether the currently authenticated user has a set of IAM permissions for an endpoint.\nBefore using any of the request data, make the following replacements:- : The region where the endpoint is located, for example,`us-central1`.\n- : Your Google Cloud project ID.\n- : The ID for the endpoint.\nHTTP method and URL:\n```\nPOST https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:testIamPermissions -d\n```\nRequest JSON body:\n```\n{\n \"permissions\": [ \"aiplatform.googleapis.com/aiplatform.endpoints.get\",\n \"aiplatform.googleapis.com/aiplatform.endpoints.predict\"\n ]\n}\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:testIamPermissions -d\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION_ID-aiplatform.googleapis.com/v1beta1/projects/PROJECT_ID/locations/LOCATION_ID/endpoints/ENDPOINT_ID:testIamPermissions -d\" | Select-Object -Expand Content\n```You should receive a JSON response similar to the following. The response includes only those permissions from the request JSON body that are available to the currently authenticated user.\n```\n{\n \"permissions\": [ \"aiplatform.googleapis.com/aiplatform.endpoints.get\",\n \"aiplatform.googleapis.com/aiplatform.endpoints.predict\"\n ]\n}\n```", "guide": "Vertex AI"}