{"title": "Apigee - Step 4: Create service accounts", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 4: Create service accounts\nYou are currently viewing version 1.9 of the Apigee hybrid documentation. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis step explains how to create the Google Cloud service accounts that are required for Apigee hybrid to operate.\n", "content": "## Create the service accounts\nApigee hybrid uses Google Cloud [ service accounts](/iam/docs/service-accounts) to allow hybrid components to communicate by making authorized API calls.\nIn this step, you use an Apigee hybrid command-line tool to create a set of service accounts and download the service account private key files.\nIn a production hybrid environment Apigee recommends using a separate service account for each component. For the purposes of this tutorial, you can create a single service account named \"apigee-non-prod\" that you can use for all components.\nTo learn more about service accounts and read the full list of service accounts recommended for  production environments, see the following:\n- [About service accounts](/apigee/docs/hybrid/v1.9/sa-about) \n- [Service accounts and roles used by hybrid components](/apigee/docs/hybrid/v1.9/sa-about#recommended-sas) \nApigee provides a tool, `create-service-account` , that creates the service accounts, assigns the roles to the service accounts, and creates and downloads the key files for the service account in a single command.\n- To learn more about`create-service-account`and all its  options see, [create-service-account](/apigee/docs/hybrid/v1.9/create-service-account) .\n- To learn about the related Google Cloud concepts, see [Creating and managing service accounts](https://cloud.google.com/iam/docs/creating-managing-service-accounts) and [Creating and managing service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys) .\n- Make sure your **HYBRID_FILES** and **PROJECT_ID** environment variables are set. **PROJECT_ID** must be set to your Google cloud project ID, because the `create-service-account` tool reads the **PROJECT_ID** environment variable to  create the service accounts in the correct project.```\necho $HYBRID_FILES\necho $PROJECT_ID\n```\n- Create aservice account with the following command. This command creates a  single service account named`apigee-non-prod`for use in non-production environments  and places the downloaded key file in the`$HYBRID_FILES/service-accounts`directory.```\n$HYBRID_FILES/tools/create-service-account --env non-prod --dir $HYBRID_FILES/service-accounts\n``` **Note:** If you would prefer to create all the individual service  accounts for a production environment, use the following command:```\n$HYBRID_FILES/tools/create-service-account --env prod --dir $HYBRID_FILES/service-accounts\n```If you see the following prompt, enter :```\n[INFO]: gcloud configured project ID is project_id.\u00a0Enter: y to proceed with creating service account in project: project_id\u00a0Enter: n to abort.\n```If this is the first time you are creating an SA with a particular name assigned, then the  tool creates it without further prompts.If, however, you see the following message and prompt, enter to generate  new keys:```\n[INFO]: Service account apigee-non-prod@project_id.iam.gserviceaccount.com already exists....\u00a0[INFO]: The service account might have keys associated with it. It is recommended to use existing keys.\u00a0Press: y to generate new keys.(this does not deactivate existing keys)\u00a0Press: n to skip generating new keys.\n``` **Note:** The Cloud Pub/Sub API must be enabled in the Google Cloud project that  owns the service account for Synchronizer. To see if you enabled this API, see [Enable APIs](/apigee/docs/hybrid/v1.9/precog-enableapi) .\n- Verify that the service account key was created using the following command. You are responsible for storing these  private keys securely. The key filenames are prefixed with the name of your Google Cloud project.```\nls $HYBRID_FILES/service-accounts\n```The result should look something like the following:```\nproject_id-apigee-non-prod.json\n```\n**Tip:** Apigee hybrid includes a validator that checks your service accounts' key files and permissions when [apigeectl](/apigee/docs/hybrid/v1.9/cli-reference) applies the Apigee hybrid runtime components to your cluster. This validation is enabled by default. For more information, see [Service account validation](/apigee/docs/hybrid/v1.9/sa-validation) .\nYou now have created service accounts and assigned the roles needed by the Apigee hybrid components. Next, create the TLS certificates required by the hybrid ingress gateway.\n## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled [1](/apigee/docs/hybrid/v1.9/install-create-cluster) If the button's step matches the current step in the process, make the button disabled [2](/apigee/docs/hybrid/v1.9/install-cert-manager) If the button's step matches the current step in the process, make the button disabled [3](/apigee/docs/hybrid/v1.9/install-apigeectl) If the button's step matches the current step in the process, make the button disabled If the button's step matches the next step [4](/apigee/docs/hybrid/v1.9/install-service-accounts) If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 5: Create TLS certificates](/apigee/docs/hybrid/v1.9/install-create-tls-certificates) If the button's step matches the current step in the process, make the button disabled [6](/apigee/docs/hybrid/v1.9/install-configure-cluster) If the button's step matches the current step in the process, make the button disabled [7](/apigee/docs/hybrid/v1.9/install-enable-synchronizer-access) If the button's step matches the current step in the process, make the button disabled [8](/apigee/docs/hybrid/v1.9/install-hybrid-runtime) If the button's step matches the current step in the process, make the button disabled [9](/apigee/docs/hybrid/v1.9/install-expose-apigee-ingress) If the button's step matches the current step in the process, make the button disabled [10](/apigee/docs/hybrid/v1.9/install-deploy-proxy)", "guide": "Apigee"}