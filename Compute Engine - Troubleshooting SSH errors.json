{"title": "Compute Engine - Troubleshooting SSH errors", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Troubleshooting SSH errors\nThis document describes common errors that you may run into when connecting to virtual machine (VM) instances using SSH, ways to resolve errors, and methods for diagnosing failed SSH connections.\n", "content": "## SSH troubleshooting tool\nUse the SSH troubleshooting tool to help determine why an SSH connection failed. The troubleshooting tool performs the following tests to check for the cause of failed SSH connections:\n- **User permissions tests:** Checks if you have the required IAM permissions to connect to the VM using SSH.\n- **Network connectivity tests:** Checks if the VM is connected to the network.\n- **VM instance status tests:** Checks the VM's CPU status to see if the VM is running.\n- **VPC settings tests:** Checks the default SSH port.\n### Run the troubleshooting tool\nYou can use the Google Cloud console or the Google Cloud CLI to check for networking problems and user permission errors that might cause SSH connections to fail.\nAfter an SSH connection fails, you have the option to **Retry** the connection, or **Troubleshoot** the connection using the SSH-in-browser troubleshooting tool.\nTo run the troubleshooting tool, click **Troubleshoot** .Run the troubleshooting tool by using the [gcloud compute ssh command](/sdk/gcloud/reference/compute/ssh) :\n```\ngcloud compute ssh VM_NAME \\\n --troubleshoot\n```\nReplace `` with the name of the VM that you can't connect to.\nThe tool prompts you to provide permission to perform the troubleshooting tests.\n### Review the results\nAfter running the troubleshooting tool, do the following:\n- Review the test results to understand why the VM's SSH connection isn't working.\n- Resolve SSH connections by performing the remediation steps provided by the tool.\n- Try reconnecting to the VM.If the connection isn't successful, try manually troubleshooting by doing the following:- [Debug issues using the serial console](#debug_with_serial_console) \n- [Ensure the VM is booting normally](/compute/docs/troubleshooting/vm-startup) \n## Common SSH errors\nThe following are examples of common errors you might encounter when you use SSH to connect to Compute Engine VMs.\n### SSH-in-Browser errors\nThe following error might occur when you connect to your VM using the [SSH-in-browser](/compute/docs/ssh-in-browser) from the Google Cloud console:\n```\nUnauthorized\nError 401\n```\nThis error occurs if your user is part of an organization that is managed from within Google Workspace and there is an active restriction in the Workspace policy that prevents users from accessing SSH-in-browser and the serial console within Google Cloud.\nTo resolve this issue, have a Google Workspace admin do the following:\n- [Confirm that Google Cloud is enabled for the organization](https://support.google.com/a/answer/9197205) .If Google Cloud is disabled, enable it and retry the connection.\n- [Confirm that services that aren't controlled individually are enabled.](https://support.google.com/a/answer/7646040) If these services are disabled, enable them and retry the connection.\nIf the problem persists after enabling Google Cloud settings in Google Workspace, do the following:\n- [Capture the network traffic in an HTTP Archive Format (HAR) file](https://toolbox.googleapps.com/apps/har_analyzer/) starting from when you start the SSH-in-Browser SSH connection.\n- [Create a Cloud Customer Care case](/support/docs/manage-cases#creating_cases) and attach the HAR file.The following error might occur when you start an SSH session:\n```\nCould not connect, retrying ...\n```\nTo resolve this issue, do the following:\n- After the VM has finished booting, retry the connection. If the connection is not successful, verify that the VM did not boot in emergency mode by running the following command:```\ngcloud compute instances get-serial-port-output VM_NAME \\\n| grep \"emergency mode\"\n```If the VM boots in emergency mode, troubleshoot the [VM startup process](/compute/docs/troubleshooting/vm-startup) to identify where the boot process is failing.\n- Verify that the `google-guest-agent.service` service is running, by running the following command in the [serial console](/compute/docs/troubleshooting/troubleshooting-using-serial-console#connectserialconsole) .```\nsystemctl status google-guest-agent.service\n```If the service is disabled, enable and start the service, by running the following commands:```\nsystemctl enable google-guest-agent.service\nsystemctl start google-guest-agent.service\n```\n- Verify that the Linux Google Agent scripts are installed and running. For more information, see [Determining Google Agent Status](/compute/docs/images/install-guest-environment#wgei_console_logs) . If the Linux Google Agent is not installed, [re-install it](/compute/docs/images/install-guest-environment) .\n- Verify that you have the required roles to connect to the VM. If your VM uses OS Login, see [Assign OS Login IAM role](/compute/docs/oslogin/set-up-oslogin#configure_users) . If the VM doesn't use OS Login, you need the [compute instance admin role](/compute/docs/access#granting_users_ssh_access_to_vm_instances) or the [service account user role](/iam/docs/service-accounts#user-role) (if the VM is set up to run as a service account). The roles are needed to update the instance or project SSH keys-metadata.\n- Verify that there is a firewall rule that allows SSH access by running the following command:```\ngcloud compute firewall-rules list | grep \"tcp:22\"\n```\n- Verify that there is a default route to the Internet (or to the bastion host). For more information, see [Checking routes](/vpc/docs/routes) .\n- Make sure that the root volume is not out of disk space. For more information, see [Troubleshooting full disks and disk resizing](/compute/docs/troubleshooting/troubleshooting-disk-full-resize) .\n- Make sure the VM has not run out of memory, by running the following command:```\ngcloud compute instances get-serial-port-output instance-name \\\n| grep \"Out of memory: Kill process\" - e \"Kill process\" -e \"Memory cgroup out of memory\" -e \"oom\"\n```If the VM is out of memory, connect to [serial console](/compute/docs/troubleshooting/troubleshooting-using-serial-console#connectserialconsole) to troubleshoot.\n### Linux errors\nThe following error might occur when you connect to your VM:\n```\nUSERNAME@VM_EXTERNAL_IP: Permission denied (publickey).\n```\nThis error can occur for several reasons. The following are some of the most common causes of this error:\n- **You used an SSH key stored in metadata to connect to a VM that has OS Loginenabled.** If OS Login is enabled on your project, your VM doesn't accept SSH keys that are stored in metadata. If you aren't sure if OS Login is enabled, see [Checking if OS Login is configured](/compute/docs/troubleshooting/troubleshoot-os-login#checking_if_os_login_is_enabled) .To resolve this issue, try one of the following:- Connect to your VM using the Google Cloud console or the Google Cloud CLI. For more information, see [Connecting to VMs](/compute/docs/instances/connecting-to-instance) .\n- Add your SSH keys to OS Login. For more information, see [Add keys to VMs that use OS Login](/compute/docs/connect/add-ssh-keys#os-login) .\n- Disable OS Login. For more information, see [Disabling OS Login](/compute/docs/instances/managing-instance-access#enable_oslogin) .\n- **You used an SSH key stored in an OS Login profile to connect to a VM thatdoesn't have OS Login enabled.** If you disable OS Login, your VM doesn't accept SSH keys that were stored in your OS Login profile. If you aren't sure if OS Login is enabled, see [Checking if OS Login is configured](/compute/docs/troubleshooting/troubleshoot-os-login#checking_if_os_login_is_enabled) .To resolve this issue, try one of the following:- Connect to your VM using the Google Cloud console or the Google Cloud CLI. For more information, see [Connecting to VMs](/compute/docs/instances/connecting-to-instance) .\n- Enable OS Login. For more information, see [Enabling OS Login](/compute/docs/instances/managing-instance-access#enable_oslogin) .\n- Add your SSH keys to metadata. For more information, see [Add SSH keys to VMs that use metadata-based SSH keys](/compute/docs/connect/add-ssh-keys#metadata) .\n- **The VM has OS Login enabled, but you don't have sufficient IAM permissionsto use OS Login.** To connect to a VM that has OS Login enabled, you must have the permissions required for OS Login. If you aren't sure if OS Login is enabled, see [Checking if OS Login is configured](/compute/docs/troubleshooting/troubleshoot-os-login#checking_if_os_login_is_enabled) .To resolve this issue, [grant the required OS Login IAM roles](/compute/docs/instances/managing-instance-access#grant-iam-roles) .\n- **Your key expired and Compute Engine deleted your ~/.ssh/authorized_keysfile.** If you manually added SSH keys to your VM and then connected to your VM using the Google Cloud console, Compute Engine created a new key pair for your connection. After the new key pair expired, Compute Engine deleted your `~/.ssh/authorized_keys` file in the VM, which included your manually added SSH key.To resolve this issue, try one of the following:- Connect to your VM using the Google Cloud console or the Google Cloud CLI. For more information, see [Connecting to VMs](/compute/docs/instances/connecting-to-instance) .\n- Re-add your SSH key to metadata. For more information, see [Add SSH keys to VMs that use metadata-based SSH keys](/compute/docs/connect/add-ssh-keys#metadata) .\n- **You connected using a third-party tool and your SSH command ismisconfigured.** If you connect using the `ssh` command but don't specify a path to your private key or you specify an incorrect path to your private key, your VM refuses your connection.To resolve this issue, try one of the following:- Run the following command:```\nssh -i PATH_TO_PRIVATE_KEY USERNAME@EXTERNAL_IP\n```Replace the following:- ``: the  path to your private SSH key file.\n- ``: the username of the user connecting  to the instance. If you manage your SSH keys in metadata, the username  is what you specified when you [created the SSH key](/compute/docs/connect/create-ssh-keys) .  For [OS Login accounts](/compute/docs/connect/add-ssh-keys#os-login) ,  the username is defined in your Google profile.\n- ``: The external IP address for your  VM.- Connect to your VM using the Google Cloud console or the Google Cloud CLI. When you use these tools to connect, Compute Engine manages key creation for you. For more information, see [Connecting to VMs](/compute/docs/instances/connecting-to-instance) .\n- **Your VM's guest environment is not running.** If this is the first time that you are connecting to your VM and the guest environment is not running, then the VM might refuse your SSH connection request.To resolve this issue, do the following:- Restart the VM.\n- In the Google Cloud console, inspect the system startup logs in the serial port output to determine if the guest environment is running. For more information, see [Validating the guest environment](/compute/docs/images/install-guest-environment#wgei) .\n- If the guest environment is not running, manually [install the guestenvironment by cloning VM's boot disk and using a startup script](/compute/docs/images/install-guest-environment#startup_script) .\n- **The OpenSSH Daemon (sshd) isn't running or configured properly.** The `sshd` provides secure remote access to the system via SSH protocol. If it's misconfigured or not running, you can't connect to your VM via SSH. **Note:** To troubleshoot the issue with `sshd` , you need to [connect to the VM's serial console as the root user](/compute/docs/troubleshooting/troubleshooting-ssh#debug_with_serial_console) .To resolve this issue, try one or more of the following:- Review the user guide for your operating system to ensure that your [sshd_config](https://linux.die.net/man/5/sshd_config) is set up correctly.\n- Ensure the you have the required ownership and permission settings for the following:- `$HOME`and`$HOME/.ssh`directories\n- `$HOME/.ssh/authorized_keys`fileThe guest environment stores authorized SSH public keys in the `$HOME/.ssh/authorized_keys` file. The owner of the `$HOME` and `$HOME/.ssh` directories and the `$HOME/.ssh/authorized_keys` file must be the same as the user connecting to the VM.\nThe guest environment requires the following Linux permissions:\n| Path      | Permissions   |\n|:---------------------------|:-----------------------|\n| /home      | 0755     |\n| $HOME      | 0700 or 0750 or 0755 * |\n| $HOME/.ssh     | 0700     |\n| $HOME/.ssh/authorized_keys | 0600     |\nAlternatively, you can create a new VM based on the same image and check its default permissions for `$HOME` .\nTo learn how to change permissions and ownership, read about [chmod](https://linux.die.net/man/1/chmod) and [chown](https://linux.die.net/man/1/chown) .\n- Restart the `sshd` by running the following command:```\nsystemctl restart sshd.service\n```Check if there are any errors in the status by running the following command:```\nsystemctl status sshd.service\n```The status output may contain information such as the exit code, the reason for the failure, etc. You can use these details for further troubleshooting.\n- **The VM's boot disk is full.** When an SSH connection is established, the guest environment adds the session's public SSH key to the `~/.ssh/authorized_keys` file. If the disk is full, the connection fails.To resolve this issue, do one or more of the following:- Confirm the boot disk is full by [debugging with the serial console](#debug_with_serial_console) to identify`no space left errors`.\n- [Resize](/compute/docs/disks/resize-persistent-disk) the disk.\n- If you know which files are using the disk space, [create a startup script](/compute/docs/startupscript) that deletes unnecessary files and frees space. After the VM starts and you connect to it, delete the`startup-script`metadata.\n- **The permissions or ownership on $HOME, $HOME/.ssh, or$HOME/.ssh/authorized_keys is wrong.** \nThe guest environment stores authorized SSH public keys in the `$HOME/.ssh/authorized_keys` file. The owner of the `$HOME` and `$HOME/.ssh` directories and the `$HOME/.ssh/authorized_keys` file must be the same as the user connecting to the VM.\nThe guest environment requires the following Linux permissions:\n| Path      | Permissions   |\n|:---------------------------|:-----------------------|\n| /home      | 0755     |\n| $HOME      | 0700 or 0750 or 0755 * |\n| $HOME/.ssh     | 0700     |\n| $HOME/.ssh/authorized_keys | 0600     |\nAlternatively, you can create a new VM based on the same image and check its default permissions for `$HOME` .\nTo learn how to change permissions and ownership, read about [chmod](https://linux.die.net/man/1/chmod) and [chown](https://linux.die.net/man/1/chown) .The following errors might occur when you connect to your VM from the Google Cloud console or the gcloud CLI:\n- The Google Cloud console:```\nConnection Failed\nWe are unable to connect to the VM on port 22.\n```\n- The gcloud CLI:```\nERROR: (gcloud.compute.ssh) [/usr/bin/ssh] exited with return code [255].\n```\nThese errors can occur for several reasons. The following are some of the most common causes of the errors:\n- **The VM is booting up and sshd is not running yet.** You can't connect to a VM before it is running.To resolve this issue, wait until the VM has finished booting and try to connect again.\n- **sshd is running on a custom port.** If you configured `sshd` to run on a port other than port 22, you won't be able to connect to your VM.To resolve this issue, create a custom firewall rule allowing `tcp` traffic on the port that your `sshd` is running on using the following command:```\ngcloud compute firewall-rules create FIREWALL_NAME \\\n --allow tcp:PORT_NUMBER\n```For more information about creating custom firewall rules, see [Creating firewall rules](/vpc/docs/using-firewalls#creating_firewall_rules) .\n- **The SSH firewall rule is missing or doesn't allow traffic fromIAP or the public internet.** SSH connections are refused if firewall rules do not allow connections from IAP or TCP ingress traffic for IP range `0.0.0.0/0` .To resolve this issue, do one of the following:- If you use Identity-Aware Proxy (IAP) for TCP forwarding, update your custom firewall rule to accept traffic from IAP, then check your IAM permissions.- Update your custom firewall rule to allow traffic from`35.235.240.0/20`, the IP address range that IAP uses for TCP forwarding. For more information, see [Create a firewall rule](/iap/docs/using-tcp-forwarding#create-firewall-rule) .\n- [Grant permissions to use IAP TCP forwarding](/iap/docs/using-tcp-forwarding#grant-permission) , if you haven't already done so.\n- If you don't use IAP update your custom firewall rule to allow ingress SSH traffic.- Update your custom firewall rule to [Allow ingress ssh connections to VMs](/vpc/docs/using-firewalls#common-use-cases-allow-ssh) .\n- **The SSH connection failed after you upgraded the VM's kernel.** A VM might experience a kernel panic after a kernel update, causing the VM to become inaccessible.To resolve this issue, do the following:- [Mount the disk](/compute/docs/disks/detach-reattach-boot-disk) to another VM.\n- [Update the grub.cfg file](/compute/docs/import/import-existing-image#configure_bootloader) to use the previous version of the kernel.\n- [Attach the disk](/compute/docs/disks/detach-reattach-boot-disk) to the unresponsive VM.\n- Verify that the status of the VM is`RUNNING`by using the [gcloud compute instances describe command](/sdk/gcloud/reference/compute/instances/describe) .\n- [Reinstall the kernel](/compute/docs/images/install-guest-environment#installing_guest_environment) .\n- Restart the VM.\nAlternatively, if you created a snapshot of the boot disk before upgrading the VM, [use the snapshot to create a VM](/compute/docs/instances/create-start-instance#createsnapshot) .\n- **The OpenSSH Daemon (sshd) isn't running or configured properly.** The `sshd` provides secure remote access to the system via SSH protocol. If it's misconfigured or not running, you can't connect to your VM via SSH. **Note:** To troubleshoot the issue with `sshd` , you need to [connect to the VM's serial console as the root user](/compute/docs/troubleshooting/troubleshooting-ssh#debug_with_serial_console) .To resolve this issue, try one or more of the following:- Review the user guide for your operating system to ensure that your [sshd_config](https://linux.die.net/man/5/sshd_config) is set up correctly.\n- Ensure the you have the required ownership and permission settings for the following:- `$HOME`and`$HOME/.ssh`directories\n- `$HOME/.ssh/authorized_keys`fileThe guest environment stores authorized SSH public keys in the `$HOME/.ssh/authorized_keys` file. The owner of the `$HOME` and `$HOME/.ssh` directories and the `$HOME/.ssh/authorized_keys` file must be the same as the user connecting to the VM.\nThe guest environment requires the following Linux permissions:\n| Path      | Permissions   |\n|:---------------------------|:-----------------------|\n| /home      | 0755     |\n| $HOME      | 0700 or 0750 or 0755 * |\n| $HOME/.ssh     | 0700     |\n| $HOME/.ssh/authorized_keys | 0600     |\nAlternatively, you can create a new VM based on the same image and check its default permissions for `$HOME` .\nTo learn how to change permissions and ownership, read about [chmod](https://linux.die.net/man/1/chmod) and [chown](https://linux.die.net/man/1/chown) .\n- Restart the `sshd` by running the following command:```\nsystemctl restart sshd.service\n```Check if there are any errors in the status by running the following command:```\nsystemctl status sshd.service\n```The status output may contain information such as the exit code, the reason for the failure, etc. You can use these details for further troubleshooting.\n- **The VM isn't booting and you can't connect using SSH or the serialconsole.** If the VM is inaccessible, then your OS might be corrupted. If the boot disk doesn't boot, you can [diagnose theissue](/compute/docs/troubleshooting/vm-startup#identify_the_reason_why_the_boot_disk_isnt_booting) . If you want to recover the corrupted VM and retrieve data, see [Recovering acorrupted VM or a full boot disk](/compute/docs/disks/recover-vm) .\n- **The VM is booting in maintenance mode.** When booting in maintenance mode, the VM doesn't accept SSH connections, but you can connect to the VM's serial console and log in as the root user.To resolve this issue, do the following:- If you haven't set a root password for the VM, use a [metadata startup script](/compute/docs/instances/startup-scripts) to run the following command during boot:```\necho \"root:NEW_PASSWORD\" | chpasswd\n```Replace ` with a password of your choice.\n- Restart the VM.\n- [Connect to the VM's serial console](/compute/docs/troubleshooting/troubleshooting-using-serial-console) and log in as the root user.\nThe following error might occur when you try to connect to a Linux VM:\n```\nConnection Failed\nYou cannot connect to the VM instance because of an unexpected error. Wait a few moments and then try again.\n```\nThis issue can occur for several reasons. The following are some common causes of the error:\n- **The OpenSSH Daemon (sshd) isn't running or configured properly.** The `sshd` provides secure remote access to the system via SSH protocol. If it's misconfigured or not running, you can't connect to your VM via SSH. **Note:** To troubleshoot the issue with `sshd` , you need to [connect to the VM's serial console as the root user](/compute/docs/troubleshooting/troubleshooting-ssh#debug_with_serial_console) .To resolve this issue, try one or more of the following:- Review the user guide for your operating system to ensure that your [sshd_config](https://linux.die.net/man/5/sshd_config) is set up correctly.\n- Ensure the you have the required ownership and permission settings for the following:- `$HOME`and`$HOME/.ssh`directories\n- `$HOME/.ssh/authorized_keys`fileThe guest environment stores authorized SSH public keys in the `$HOME/.ssh/authorized_keys` file. The owner of the `$HOME` and `$HOME/.ssh` directories and the `$HOME/.ssh/authorized_keys` file must be the same as the user connecting to the VM.\nThe guest environment requires the following Linux permissions:\n| Path      | Permissions   |\n|:---------------------------|:-----------------------|\n| /home      | 0755     |\n| $HOME      | 0700 or 0750 or 0755 * |\n| $HOME/.ssh     | 0700     |\n| $HOME/.ssh/authorized_keys | 0600     |\nAlternatively, you can create a new VM based on the same image and check its default permissions for `$HOME` .\nTo learn how to change permissions and ownership, read about [chmod](https://linux.die.net/man/1/chmod) and [chown](https://linux.die.net/man/1/chown) .\n- Restart the `sshd` by running the following command:```\nsystemctl restart sshd.service\n```Check if there are any errors in the status by running the following command:```\nsystemctl status sshd.service\n```The status output may contain information such as the exit code, the reason for the failure, etc. You can use these details for further troubleshooting.\n- **Unknown SSH daemon issue** . To diagnose an unknown SSH daemon issue, check the [serial console logs](/compute/docs/troubleshooting/viewing-serial-port-output#viewing_serial_port_output) for errors.Depending on the output of the serial console logs, try to rescue the VM and fix the SSH daemon related issues by doing the following:- [Attach the disk](/compute/docs/disks/detach-reattach-boot-disk) to another Linux VM.\n- Connect to the VM that has the mounted disk.\n- [Mount the disk](https://cloud.google.com/compute/docs/disks/format-mount-disk-linux#mounting) inside OS to a directoryinside VM..\n- View the SSH-related logs,`/var/log/secure`or`/var/log/auth.log`for any issues/errors. If you see any issues that you can fix, attempt to fix them. Otherwise, [create a support case](https://cloud.google.com/support-hub) and attach the logs.\n- Unmount the disk from the OS using `umount` command:```\ncd ~/\numount /mnt\n```\n- [Detach the disk](/compute/docs/disks/detach-reattach-boot-disk#detach_disk) from the VM.\n- [Attach the disk](/compute/docs/disks/detach-reattach-boot-disk#attach_disk) to the original VM.\n- Start the VM.\nThe following errors might occur when you connect to your VM from the Google Cloud console or the gcloud CLI:\n- The Google Cloud console:```\n-- Connection via Cloud Identity-Aware Proxy Failed\n-- Code: 4003\n-- Reason: failed to connect to backend\n```\n- The gcloud CLI:```\nERROR: (gcloud.compute.start-iap-tunnel) Error while connecting [4003: 'failed to connect to backend'].\n```\nThese errors occur when you try to use SSH to connect to a VM that doesn't have a public IP address and for which you haven't configured Identity-Aware Proxy on port 22.\nTo resolve this issue [Create a firewall rule](/iap/docs/using-tcp-forwarding#create-firewall-rule) on port 22 that allows ingress traffic from Identity-Aware Proxy.\nThe following error might occur when you connect to your VM:\n```\nHost key for server IP_ADDRESS does not match\n```\nThis error occurs when the host key in the `~/.ssh/known_hosts` file doesn't match the VM's host key.\nTo resolve this issue, delete the host key from the `~/.ssh/known_hosts` file, then retry the connection.\nThe following error might occur when you try to add a new SSH key to metadata:\n```\nERROR:\"Value for field 'metadata.items[X].value' is too large: maximum size 262144 character(s); actual size NUMBER_OF_CHARACTERS.\"\n```\nMetadata values have a [maximum limit of 256 KB](/compute/docs/metadata/setting-custom-metadata#limitations) . To mitigate this limitation, do one of the following:\n- Delete expired or duplicated SSH keys from project or instance metadata. For more information, see [Update metadata on a running VM](/compute/docs/metadata/setting-custom-metadata#update_metadata) .\n- Use [OS Login](/compute/docs/oslogin) .\n### Windows errors\n**    Preview    \u2014 SSH for Windows ** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nThe following error might occur when you connect to your VM:\n```\nUSERNAME@compute.INSTANCE_ID's password:\nPermission denied, please try again.\n```\nThis error indicates the user trying to connect to the VM doesn't exist on the VM. The following are some of the most common causes of this error:\n- **Your version of gcloud CLI is out of date** If gcloud CLI is out of date, you may be attempting to connect using a username that is not configured. To resolve this issue, [update the gcloud CLI](/sdk/docs/components#updating_components) .\n- **You tried to connect to a Windows VM that doesn't have SSH enabled.** To resolve this error, set the `enable-windows-ssh` key to `TRUE` in project or instance metadata. For more information about setting medata, see [Set custom metadata](/compute/docs/metadata/setting-custom-metadata) .The following error might occur when you connect to a VM that doesn't have SSH enabled:\n```\nPermission denied (publickey,keyboard-interactive).\n```\nTo resolve this error, set the `enable-windows-ssh` key to `TRUE` in project or instance metadata. For more information about setting medata, see [Set custom metadata](/compute/docs/metadata/setting-custom-metadata) .\nThe following error might occur when you connect to your VM from the gcloud CLI:\n```\nERROR: (gcloud.compute.ssh) Could not SSH into the instance.\nIt is possible that your SSH key has not propagated to the instance yet.\nTry running this command again. If you still cannot connect, verify that the firewall and instance are set to accept ssh traffic.\n```\nThis error can occur for several reasons. The following are some of the most common causes of the errors:\n- **You tried to connect to a Windows VM that doesn't have SSH installed.** To resolve this issue, follow the instructions to [Enable SSH for Windows on a running VM](/compute/docs/connect/windows-ssh#running_vm) .\n- **The OpenSSH Server (sshd) isn't running or isn't configured properly.** The `sshd` provides secure remote access to the system via SSH protocol. If it's misconfigured or not running, you can't connect to your VM via SSH.To resolve this issue, review [OpenSSH Server configuration for Windows Server and Windows](https://docs.microsoft.com/windows-server/administration/openssh/openssh_server_configuration) to ensure that `sshd` is set up correctly.Timed out SSH connections might be caused by one of the following:\n- **The VM hasn't finished booting.** Allow a short time for the VM to boot.To resolve this issue, wait until the VM has finished booting and try to connect again.\n- **The SSH package isn't installed.** Windows VMs require you to install the `google-compute-engine-ssh` package before you can connect using SSH.To resolve this issue, [install the SSH package](/compute/docs/connect/windows-ssh#running_vm) .## Diagnose failed SSH connections\nThe following sections describe steps you can take to diagnose the cause of failed SSH connections and the steps you can take to fix your connections.\nBefore you diagnose failed SSH connections, complete the following steps:\n- Install or update to the latest version of the [Google Cloud CLI](/compute/docs/gcloud-compute) .\n- [Run connectivity tests](/network-intelligence-center/docs/connectivity-tests/how-to/running-connectivity-tests) .\n- If you are using a custom Linux image that isn't running the guest environment, [Install the Linux guest environment](/compute/docs/images/install-guest-environment#startup_script) .\n- If you use OS Login, view [Troubleshooting OS Login](/compute/docs/oslogin/troubleshoot-os-login) .\n### Diagnosis methods for Linux and Windows VMs\nYou might not be able to SSH to a VM instance because of connectivity issues linked to firewalls, network connection, or the user account. Follow the steps in this section to identify any connectivity issues.\nCompute Engine provisions each project with a default set of firewall rules that permit SSH traffic. If you are unable to access your instance, use the `gcloud compute` command-line tool to [check your list of firewalls](/sdk/gcloud/reference/compute/firewall-rules/list) and ensure that the `default-allow-ssh` rule is present.\nOn your local workstation, run the following command:\n```\ngcloud compute firewall-rules list\n```\nIf the firewall rule is missing, add it back:\n```\ngcloud compute firewall-rules create default-allow-ssh \\\n --allow tcp:22\n```\nTo view all data associated with the `default-allow-ssh` firewall rule in your project, use the [gcloud compute firewall-rules describe command](/sdk/gcloud/reference/compute/firewall-rules/describe) :\n```\ngcloud compute firewall-rules describe default-allow-ssh \\\n --project=project-id\n```\nFor more information about firewall rules, see [Firewall rules in Google Cloud](/vpc/docs/firewalls#firewall-rules-in-google-cloud) .\nTo determine whether the network connection is working, test the TCP handshake:\n- Obtain the external `natIP` for your VM:```\ngcloud compute instances describe VM_NAME \\\n --format='get(networkInterfaces[0].accessConfigs[0].natIP)'\n```Replace `` with the name of the VM you can't connect to. **Note:** The IP address may vary if you are using IAP to access the instance via the internal IP address. Also, if the IP address is internal, the instance is accessible from inside the VPC network only.\n- Test the network connection to your VM from your workstation:\n```\ncurl -vso /dev/null --connect-timeout 5 EXTERNAL_IP:PORT_NUMBER\n```\nReplace the following:- ``: the external IP address you obtained in the previous step\n- ``: the port number\nIf the TCP handshake is successful, the output is similar to the following:\n```\nExpire in 0 ms for 6 (transfer 0x558b3289ffb0)\nExpire in 5000 ms for 2 (transfer 0x558b3289ffb0)\nTrying 192.168.0.4...\nTCP_NODELAY set\nExpire in 200 ms for 4 (transfer 0x558b3289ffb0)\nConnected to 192.168.0.4 (192.168.0.4) port 443 (#0)\n> GET / HTTP/1.1\n> Host: 192.168.0.4:443\n> User-Agent: curl/7.64.0\n> Accept: */*\n>\nEmpty reply from server\nConnection #0 to host 192.168.0.4 left intact\n```\nThe `Connected to` line indicates a successful TCP handshake.\n```\nPS C:> New-Object System.Net.Sockets.TcpClient('EXTERNAL_IP',PORT_NUMBER)\n```\nReplace the following:- ``: the external IP you obtained in the previous step\n- ``: the port number\nIf the TCP handshake is successful, the output is similar to the following:\n```\nAvailable   : 0\nClient    : System.Net.Sockets.Socket\nConnected   : True\nExclusiveAddressUse : False\nReceiveBufferSize : 131072\nSendBufferSize  : 131072\nReceiveTimeout  : 0\nSendTimeout   : 0\nLingerState   : System.Net.Sockets.LingerOption\nNoDelay    : False\n```\nThe `Connected: True` line indicates a successful TCP handshake.\nIf the TCP handshake completes successfully, a software firewall rule is not blocking the connection, the OS is correctly forwarding packets, and a server is listening on the destination port. If the TCP handshake completes successfully but the VM doesn't accept SSH connections, the issue might be with that the `sshd` daemon is misconfigured or not running properly. Review the user guide for your operating system to ensure that your [sshd_config](https://linux.die.net/man/5/sshd_config) is set up correctly.\nTo run connectivity tests for analyzing the VPC network path configuration between two VMs and check whether the programmed configuration should allow the traffic, see [Check for misconfigured firewall rules in Google Cloud](/vpc/docs/ts-vm-vm-internal#check-firewall-rules) .\nThe issue that prevents you from logging in might be limited to your user account. For example, the permissions on the `~/.ssh/authorized_keys` file on the instance might not be set correctly for the user.\nTry logging in as a different user with the gcloud CLI by specifying `` with the SSH request. The gcloud CLI updates the project's metadata to add the new user and allow SSH access.\n```\ngcloud compute ssh ANOTHER_USERNAME@VM_NAME\n```\nReplace the following:\n- ``is a username other than your own username\n- ``is the name of the VM you want to connect toWe recommend that you review the logs from the [serial console](/compute/docs/troubleshooting/troubleshooting-using-serial-console) for connection errors. You can access the serial console as the root user from your local workstation by using a browser. This approach is useful when you cannot log in with SSH, or if the instance has no connection to the network. The serial console remains accessible in both of these situations.\nTo log into the VM's serial console and troubleshoot problems with the VM, follow these steps::\n- [Enable interactive access](/compute/docs/troubleshooting/troubleshooting-using-serial-console#enable_instance_access) to the VM's serial console.\n- For Linux VMs, modify the root password, add the following [startup script](/compute/docs/instances/startup-scripts#startupscriptrunninginstances) to your VM:```\necho root:PASSWORD | chpasswd\n```Replace with a password of your choice.\n- Use the serial console to [connect to your VM](/compute/docs/troubleshooting/troubleshooting-using-serial-console#connectserialconsole) .\n- For Linux VMs, after you're done debugging all the errors, disable the root account login:```\nsudo passwd -l root\n```\n### Diagnosis methods for Linux VMs\nYou might have an instance that you cannot connect to that continues to correctly serve production traffic. In this case, you might want to inspect the disk without interrupting the instance.\nTo inspect and troubleshoot the disk:\n- Back up your boot disk by [creating a snapshot of the disk](/compute/docs/disks/create-snapshots) .\n- Create a regular persistent disk from that snapshot.\n- Create a temporary instance.\n- Attach and mount the regular persistent disk to your new temporary instance.\nThis procedure creates an isolated network that only allows SSH connections. This setup prevents any unintended consequences of the cloned instance interfering with your production services.\n- Create a new VPC network to host your cloned instance:```\ngcloud compute networks create debug-network\n```Replace `` with the name you want to call your new network.\n- Add a firewall rule to allow SSH connections to the network:```\ngcloud compute firewall-rules create debug-network-allow-ssh \\\n --network debug-network \\\n --allow tcp:22\n```\n- Create a snapshot of the boot disk.```\ngcloud compute disks snapshot BOOT_DISK_NAME \\\n --snapshot-names debug-disk-snapshot\n```Replace `` with the name of the boot disk.\n- Create a new disk with the snapshot you just created:```\ngcloud compute disks create example-disk-debugging \\\n --source-snapshot debug-disk-snapshot\n```\n- Create a new debugging instance without an external IP address:```\ngcloud compute instances create debugger \\\n --network debug-network \\\n --no-address\n```\n- Attach the debugging disk to the instance:```\ngcloud compute instances attach-disk debugger \\\n --disk example-disk-debugging\n```\n- Follow the instructions to [Connect to a VM using a bastion host](/compute/docs/connect/ssh-using-bastion-host) .\n- After you have logged into the debugger instance, troubleshoot the instance. For example, you can look at the instance logs:```\nsudo su \n``````\nmkdir /mnt/VM_NAME\n``````\nmount /dev/disk/by-id/scsi-0Google_PersistentDisk_example-disk-debugging /mnt/VM_NAME\n``````\ncd /mnt/VM_NAME/var/log\n``````\n# Identify the issue preventing ssh from working\nls\n```Replace `` with the name of the VM you can't connect to.If none of the preceding helped, you can create a startup script to collect information right after the instance starts. Follow the instructions for [running a startup script](/compute/docs/startupscript) .\nAfterward, you also need to reset your instance before the metadata takes effect by using [gcloud compute instances reset](/sdk/gcloud/reference/compute/instances/reset) .\nAlternatively, you can also recreate your instance by running a diagnostic startup script:\n- Run `gcloud compute instances delete` with the `--keep-disks` flag.```\ngcloud compute instances delete VM_NAME \\\n --keep-disks boot\n```Replace `` with the name of the VM you can't connect to.\n- Add a new instance with the same disk and specify your startup script.```\ngcloud compute instances create NEW_VM_NAME \\\n --disk name=BOOT_DISK_NAME,boot=yes \\\n --metadata startup-script-url URL\n```Replace the following:- ``is the name of the new VM you're creating\n- ``is the name of the boot disk from the VM you can't connect to\n- ``is the Cloud Storage URL to the script, in either`gs://` `` `/` ``or`https://storage.googleapis.com/` `` `/` ``format.\nIf you still need to recover data from your persistent boot disk, you can detach the boot disk and then attach that disk as a secondary disk on a new instance.\n- Delete the VM you can't connect to and keep its boot disk:```\ngcloud compute instances delete VM_NAME \\\n --keep-disks=boot \n```Replace `` with the name of the VM you can't connect to.\n- [Create a new VM with your old VM's boot disk](/compute/docs/instances/create-start-instance#create_a_vm_instance_with_additional_non-boot_disks) . Specify the name of the boot disk of the VM you just deleted.\n- Connect to your new VM using SSH:```\ngcloud compute ssh NEW_VM_NAME\n```Replace `` with the name of your new VM.Your VM might become inaccessible if its boot disk is full. This scenario can be difficult to troubleshoot as it's not always obvious when the VM connectivity issue is due to a full boot disk. For more information about this scenario, see [Troubleshooting a VM that is inaccessible due to a full boot disk](/compute/docs/troubleshooting/troubleshooting-disk-full-resize#inaccessible-vm) .\n### Diagnosis methods for Windows VMs\n**    Preview    \u2014 SSH for Windows ** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nIf you can't connect to a Windows VM using SSH, try unsetting the `enable-windows-ssh` metadata key and re-enabling SSH for Windows.\n- Set the `enable-windows-ssh` metadata key to `FALSE` . For information about how to set metadata, see [Set custom metadata](/compute/docs/metadata/setting-custom-metadata) .Wait a few seconds for the change to take place.\n- [Re-enable SSH for Windows](/compute/docs/connect/windows-ssh#running_vm) \n- [Reconnect to the VM](/compute/docs/connect/windows-ssh#connect) .If you can't diagnose and resolve the cause of failed SSH connections to your Windows VM, [connect using RDP](/compute/docs/instances/connecting-to-windows) .\nAfter you establish a connection to the VM, review the [OpenSSH logs](https://github.com/PowerShell/Win32-OpenSSH/wiki/Logging-Facilities) .\n## What's Next?\n- Learn how [SSH connections to Linux VMs](/compute/docs/instances/ssh) work on Compute Engine.", "guide": "Compute Engine"}