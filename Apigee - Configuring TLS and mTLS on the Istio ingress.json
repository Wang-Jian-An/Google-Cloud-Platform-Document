{"title": "Apigee - Configuring TLS and mTLS on the Istio ingress", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Configuring TLS and mTLS on the Istio ingress\nYou are currently viewing version 1.3 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis topic explains how to enable on-way TLS and mTLS on the Istio ingress.\n", "content": "## \n Configuring one-way TLS\nUse one-way TLS to secure API proxy endpoints on the Istio ingress. To enable one-way TLS, you configure the ingress with TLS cert/key pairs or with a Kubernetes Secret, as explained in the following options.\n### Option 1: key/cert pair\nProvide SSL cert and key files in the `virtualhosts` property in your overrides file:\n```\nvirtualhosts:\u00a0 - name: $ENVIRONMENT_GROUP_NAME\u00a0 \u00a0 sslCertPath: \"$CERT_FILE\"\u00a0 \u00a0 sslKeyPath: \"$KEY_FILE\"\n```\nWhere is the name of an environment group with corresponding host aliases, and and are TLS key and certificate files. See [Create TLS certificates](/apigee/docs/hybrid/v1.3/install-download-install#create-tls-certificates) .\n### Option 2: Kubernetes Secret\nCreate a [Kubernetes Secret](https://kubernetes.io/docs/concepts/configuration/secret/) in the `istio-system` namespace and add the Secret name to your overrides file:\n- Create the Secret:```\nkubectl create -n istio-system secret generic $SECRET_NAME \\\n--from-file=key=$KEY_FILE \\\n--from-file=cert=$CERT_FILE\n```\n- Configure the`virtualhosts`property in your overrides file:```\nvirtualhosts:\u00a0 - name: $ENVIRONMENT_GROUP_NAME\u00a0 \u00a0 tlsMode: SIMPLE \u00a0# Note: SIMPLE is the default, so it is optional.\u00a0 \u00a0 sslSecret: $SECRET_NAME\n```## \n Configuring mTLS\nInstead of one-way TLS, you can configure [mTLS](https://en.wikipedia.org/wiki/Mutual_authentication) on the Istio ingress. There are two options for configuring mTLS, as explained below.\n### Option 1: key/cert pair and CA file\nProvide a Certificate Authority (CA) certificate with SSL cert and key files in the `virtualhosts` property in your overrides file:\n```\nvirtualhosts:\u00a0 - name: $ENVIRONMENT_GROUP_NAME\u00a0 \u00a0 tlsMode: MUTUAL\u00a0 \u00a0 caCertPath: \"$CA_FILE\"\u00a0 \u00a0 sslCertPath: \"$CERT_FILE\"\u00a0 \u00a0 sslKeyPath: \"$KEY_FILE\"\n```\nWhere is the name of an environment group with corresponding host aliases, is an authorized certificate, and and are TLS key and certificate files. See [Create TLS certificates](/apigee/docs/hybrid/v1.3/install-download-install#create-tls-certificates) .\n### Option 2: Kubernetes Secrets\n`istio-system`\n- Create two Kubernetes secrets in the`istio-system`namespace. The first secret is for the CA and the second is for the SSL cert/key pair:```\nkubectl create -n istio-system secret generic $SECRET_NAME \\\n--from-file=key=$KEY_FILE \\\n--from-file=cert=$CERT_FILE\n```\n- Create a secret for the CA:```\nkubectl create -n istio-system secret generic $SECRET_NAME-cacert \\\n--from-file=cacert=$CA_FILE\n```\n- Configure the`virtualhosts`property in your overrides file:```\nvirtualhosts:\u00a0 - name: $ENVIRONMENT_GROUP_NAME\u00a0 \u00a0 tlsMode: MUTUAL \u00a0# Note: Be sure to specify MUTUAL\u00a0 \u00a0 sslSecret: $SECRET_NAME\n```", "guide": "Apigee"}