{"title": "Apigee - Step 10: Check cluster readiness", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 10: Check cluster readiness\n", "content": "## Check hybrid cluster readiness\nBefore applying your configuration and installing the hybrid helm charts, you should check that your Kubernetes cluster is ready for Apigee hybrid installation.\nTo check the readiness of your cluster, you will create a YAML file with a Kubernetes Job definition and apply that file with `kubectl` commands to check the cluster. You then check the status of the Kubernetes test job with a `kubectl get jobs` command.\n- Verify that`kubectl`is set to the correct context using the following command.  The current context should be set to the cluster to which you are deploying Apigee hybrid.```\nkubectl config current-context\n```The result should include the name of the cluster you are deploying Apigee hybrid in. For  example, on GKE, the context name is usually in the form `gke_` `` `_` `` `_` `` , as  in:```\ngke_my-project_us-central1_my-cluster\n```If the name cluster name in the context does not match, the following command will get the `gcloud` credentials of the cluster and set the `kubectl` context:\n```\ngcloud container clusters get-credentials $CLUSTER_NAME \\\n--region $CLUSTER_LOCATION \\\n--project $PROJECT_ID\n``````\ngcloud container clusters get-credentials $CLUSTER_NAME \\\n--zone $CLUSTER_LOCATION \\\n--project $PROJECT_ID\n```\n- In your helm-charts directory, create a`cluster-check`directory:```\nmkdir $APIGEE_HELM_CHARTS_HOME/cluster-check\n```\n- In the`$APIGEE_HELM_CHARTS_HOME/cluster-check`directory, create a file named`apigee-k8s-cluster-ready-check.yaml`with the following contents:```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n name: apigee-k8s-cluster-ready-check\n--apiVersion: batch/v1\nkind: Job\nmetadata:\n name: apigee-k8s-cluster-ready-check\nspec:\n template:\n spec:\n  hostNetwork: true\n  serviceAccountName: apigee-k8s-cluster-ready-check\n  containers:\n  - name: manager\n   image: gcr.io/apigee-release/hybrid/apigee-operators:1.11.1\n   command:\n   - /manager\n   args:\n   - --k8s-cluster-ready-check\n   env:\n   - name: POD_IP\n   valueFrom:\n    fieldRef:\n    fieldPath: status.podIP\n   securityContext:\n   runAsGroup: 998\n   runAsNonRoot: true\n   runAsUser: 999\n  restartPolicy: Never\n backoffLimit: 1\n```\n- Apply the`apigee-k8s-cluster-ready-check.yaml`with the following`kubectl`command. This will run the test:```\nkubectl apply -f $APIGEE_HELM_CHARTS_HOME/cluster-check/apigee-k8s-cluster-ready-check.yaml\n```\n- Check the status of the Kubernetes job with the following command:```\nkubectl get jobs apigee-k8s-cluster-ready-check\n```If your cluster is ready, the output should look something like:```\nNAME       COMPLETIONS DURATION AGE\napigee-k8s-cluster-ready-check 1/1   8s   1h23m\n```If the test failed and your cluster is not ready, the output will look something like:```\nNAME       COMPLETIONS DURATION AGE\napigee-k8s-cluster-ready-check 0/1   44s   44s\n```Look for the number of completions:- **1/1** Success, your cluster is ready for Apigee hybrid installation.\n- **0/1** The test failed. The cluster is not ready. Proceed to the following steps to   troubleshoot the cluster.\n- If the test did not succeed, check the logs with the following commands.- Get the name of the pod for the cluster pre-check job:```\nkubectl get pods | grep apigee-k8s-cluster-ready-check\n```\n- Get the Kubernetes logs for the pod:```\nkubectl logs pod_name\n```Where is the name of the apigee-k8s-cluster-ready-check pod.\n- Clean up before proceeding to the next step. Delete the Kubernetes job with the following  command:```\nkubectl delete -f $APIGEE_HELM_CHARTS_HOME/cluster-check/apigee-k8s-cluster-ready-check.yaml\n```\n**Tip:** On some platforms, like Anthos on Bare Metal or GKE on-prem, you may see DNS resolution errors. If the DNS resolution is not working, try this workaround.Add a static host entry in `/etc/hosts` file of each cassandra worker node  similar to the following:```\necho -e \"\\\\n127.0.1.1 ${HOSTNAME}\" >> \"/etc/hosts\"\n```or```\n\"\\\\nWORKER-NODE-IP ${HOSTNAME}\" >> \"/etc/hosts\"\n```\nYou have now made sure your Apigee hybrid cluster is ready. Next, let's install the charts to apply your configuration to the hybrid runtime.\n## Troubleshooting\n- Cassandra DNS check: If you find error logs similar to`DNS resolution was successful but IP doesn't match POD IP`,`could not resolve hostname`or`error determining hostname`it means your  cluster DNS is not configured correctly for a multi-region setup. You can ignore this error if  you do not intend to set up multi-region.\n- Control Plane connectivity check: If you find error logs similar to`error creating TCP connection with host`then you need to resolve the connectivity  from cluster to apigee.googleapis.com and re-run the job.## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled [1](/apigee/docs/hybrid/v1.11/helm-install-create-cluster) If the button's step matches the current step in the process, make the button disabled [2](/apigee/docs/hybrid/v1.11/helm-install-download-charts) If the button's step matches the current step in the process, make the button disabled [3](/apigee/docs/hybrid/v1.11/helm-install-create-namespace) If the button's step matches the current step in the process, make the button disabled [4](/apigee/docs/hybrid/v1.11/helm-install-service-accounts) If the button's step matches the current step in the process, make the button disabled [5](/apigee/docs/hybrid/v1.11/helm-install-create-tls-certificates) If the button's step matches the current step in the process, make the button disabled [6](/apigee/docs/hybrid/v1.11/helm-install-create-overrides) If the button's step matches the current step in the process, make the button disabled [7](/apigee/docs/hybrid/v1.11/helm-install-enable-synchronizer-access) If the button's step matches the current step in the process, make the button disabled [8](/apigee/docs/hybrid/v1.11/helm-install-cert-manager) If the button's step matches the current step in the process, make the button disabled [9](/apigee/docs/hybrid/v1.11/helm-install-crds) If the button's step matches the current step in the process, make the button disabled If the button's step matches the next step [10](/apigee/docs/hybrid/v1.11/helm-install-check-cluster) If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 11: Install Apigee hybrid using Helm charts](/apigee/docs/hybrid/v1.11/helm-install-helm-charts) If the button's step matches the current step in the process, make the button disabled [12](/apigee/docs/hybrid/v1.11/helm-install-workload-identity)", "guide": "Apigee"}