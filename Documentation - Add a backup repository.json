{"title": "Documentation - Add a backup repository", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Add a backup repository\nA backup repository represents a compatible storage location for your backups. A backup repository is also used to store records of backups, backup plans, restore plans, and restores.\nThis page assumes that you have a compatible endpoint available and that you have [created a bucket](/distributed-cloud/hosted/docs/latest/gdch/platform/pa-user/object-storage#use_storage_buckets) to use as the backup repository.\nTo get the permissions that you need to create a backup repository, ask your Organization IAM Admin to grant you the Backup Repository Admin ( `backup-repository-admin` ) role.\n", "content": "## Create a repository\nCreate a repository by using the GDCH console or the API.\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** . Ensure no project is selected in the project selector.\n- Click **Create repository** .\n- Enter a repository name. The description is optional.\n- In the **Main cluster (read/write)** list, choose a cluster.\n- In the **Linked clusters (read only)** list, choose the linked clusters.\n- In the **S3 URI endpoint** field, enter an endpoint containing the fully-qualified domain name of your object storage site.\n- In the **Bucket name** field, enter the name of the bucket.\n- In the **Bucket region** field, enter the region where the bucket was created.\n- In the **Access Key ID** list, enter the access key ID.\n- In the **Access key** field, enter the access key.\n- Click **Create** .\nTo use the backup and restore APIs, you must configure a valid `BackupRepositoryManager` custom resource to be the location of your backups, and supply the required credentials.- Add the `access-key` and `access-key-id` as a secret in the target cluster. The secret must exist in the org admin cluster when setting up a `BackupRepositoryManager` custom resource. The `BackupRepositoryManager` custom resource propagates the secret to the necessary user clusters when it creates the backup repositories. For example:```\napiVersion: v1kind: Namespacemetadata:\u00a0 name: \"s3-secret-ns\"---apiVersion: v1kind: Secretmetadata:\u00a0 namespace: \"s3-secret-ns\"\u00a0 name: \"s3-secret\"type: Opaquedata:\u00a0 access-key-id: YWNjZXNzS2V5MQ== # echo -n accessKey1 | base64 -w0\u00a0 access-key: \u00a0dmVyeVNlY3JldEtleTE= # echo -n verySecretKey1 | base64 -w0\u2014\n```\n- Add a `BackupRepositoryManager` custom resource to use these credentials and apply the new resource to the org admin cluster. Backup repositories are cluster-scoped:```\napiVersion: backup.gdc.goog/v1kind: BackupRepositoryManagermetadata:\u00a0 name: backup-repository-gcsspec:\u00a0 readWriteCluster:\u00a0 \u00a0 name: user-1-user\u00a0 \u00a0 namespace: user-1-user-cluster\u00a0 backupRepositorySpec:\u00a0 \u00a0 secretReference:\u00a0 \u00a0 \u00a0 namespace: \"gcs-secret-ns\"\u00a0 \u00a0 \u00a0 name: \"gcs-secret\"\u00a0 \u00a0 endpoint: \"http://storage.googleapis.com\"\u00a0 \u00a0 type: \"S3\"\u00a0 \u00a0 s3Options:\u00a0 \u00a0 \u00a0 bucket: \"bucket-name\"\u00a0 \u00a0 \u00a0 region: \"us-east-1\"\u00a0 \u00a0 \u00a0 forcePathStyle: true\u00a0 \u00a0 importPolicy: \"ReadWrite\"\n```This example includes the following values:| Value   | Description                                                                                                     |\n|:-----------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| readWriteCluster | The cluster where the backup repository is created as readWrite.                                                                                        |\n| readOnlyClusters | List of clusters where the backup repository is created as readOnly.                                                                                      |\n| secretReference | A NamespacedName referencing the secret that contains access credentials for the endpoint.                                                                                 |\n| endpoint   | The fully-qualified domain name for the storage system.                                                                                          |\n| type    | The type of backup repository. Only the type of S3 is supported.                                                                                       |\n| s3Options  | The configuration for the S3 endpoint. This is required if the type is S3. bucket: the name of the bucket. region: the region of the given endpoint. The region is storage system specific. forcePathStyle: this option decides whether to force path style URLs for objects.                                    |\n| importPolicy  | Set to one of the following: ReadWrite: This repository can be used to schedule or create backups, backup plans, and restores. ReadOnly: This repository can only be used to import and view backups. No new backups or resources can be created in this repository, but restores can use and reference read-only backups for restoration. There is no restriction on how often a backup repository can be used as ReadOnly. |\nThe `BackupRepositoryManager` propagates the secret into the user cluster and creates a `BackupRepository` resource in the user cluster.\n## Deactivate a backup repository\nTo get the permissions that you need to deactivate a backup repository, ask your Organization IAM Admin to grant you the Backup Repository Admin ( `backup-repository-admin` ) role.\nDeactivate a backup repository using the GDCH console:\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click the **Repos** tab.\n- Click the name of the backup repository that you want to deactivate.\n- Click the **Deactivate Repository** button.\n- Enter the name of the backup repository into the text field.\n- Click the **Deactivate** button to confirm the deletion of the backup repository. **Note:** After deactivation, you are able to reactivate this backup repository.\n### Reactivate a backup repository\nReactivate a backup repository using the GDCH console:\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click the **Repos** tab.\n- Click the name of the backup repository that you want to reactivate.\n- Click the **Activate Repository** button.\n- From the **Main cluster (read/write)** dropdown menu, select the cluster that contains the repository you want to reactivate. **Note:** You can't select the same cluster that populates the **Linked Cluster (read-only)** field. This results in an error.\n- Click the **Activate** button to confirm the reactivation of the backup repository.## Backup repository import policies\nAll clusters must have at least one `ReadWrite` repository to successfully use Backup and Restore features. `ReadOnly` repositories are optional, have no limit, and are used to gain visibility into other cluster backups for cross-cluster restores.\n`ReadOnly` repositories cannot be used as storage locations for additional backups or for backup plans within the cluster they were imported.\nImporting a repository as `ReadWrite` claims the repository for that cluster, preventing other clusters from importing the same repository as `ReadWrite` . After importing a `ReadWrite` repository, all records of previous backups, backup plans, and restores in that repository are imported into the target cluster as local custom resources.\nImporting a repository as `ReadOnly` does not claim the repository, it only imports the backups, backup plans, restores, and restore plans. Backup plans in read-only repositories do not schedule backups, they exist to provide visibility into what backup plans exist in the cluster you are importing from. Removing a `ReadOnly` repository cleans up any imported resources from the cluster and has no effect on the resources in the storage location as no write operations occur to object storage for read-only repositories.\nWhen a `ReadWrite` repository is removed from the cluster:\n- All local custom resources associated with that repository, such as backups and restores, are removed from the current cluster.\n- That cluster's claim on the repository is removed, allowing the repository to be used as`ReadWrite`by another cluster. However, these resources are not removed from the storage endpoint.", "guide": "Documentation"}