{"title": "Apigee - Step 7: Enable Synchronizer access", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 7: Enable Synchronizer access\nYou are currently viewing version 1.8 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\n", "content": "## \n Get an authorization token\nTo make the Apigee API calls described later in this topic, you need to get an authorization token that has the Apigee Organization Admin role.\n- If you are not the owner of the Google Cloud project that is associated with your Apigee hybrid  organization, be sure that your Google Cloud user account has the **roles/apigee.admin** (Apigee  Organization Admin) role. You can check the roles assigned to you with this command:```\ngcloud projects get-iam-policy ${PROJECT_ID} \\\n--flatten=\"bindings[].members\" \\\n--format='table(bindings.role)' \\\n--filter=\"bindings.members:your_account_email\"\n```For example:```\ngcloud projects get-iam-policy my-project \u00a0\\--flatten=\"bindings[].members\" \\--format='table(bindings.role)' \\--filter=\"bindings.members:myusername@example.com\"\n```The output should look something like:```\nROLEroles/apigee.adminroles/compute.adminroles/container.adminroles/gkehub.adminroles/iam.serviceAccountAdminroles/iam.serviceAccountKeyAdminroles/meshconfig.adminroles/ownerroles/resourcemanager.projectIamAdminroles/servicemanagement.adminroles/serviceusage.serviceUsageAdmin\n```\n- If you do not have`roles/apigee.admin`in your roles, add the **Apigee\n Organization Admin** role to your user account. Use the following command to add the  role to your user account:```\ngcloud projects add-iam-policy-binding ${PROJECT_ID} \\\n --member user:your_account_email \\\n --role roles/apigee.admin\n```For example:```\ngcloud projects add-iam-policy-binding my-project \\\n --member user:myusername@example.com \\\n --role roles/apigee.admin\n```\n- On the command line, get your `gcloud` authentication  credentials using the following command:\n```\nexport TOKEN=$(gcloud auth print-access-token)\n```\nTo check that your token was populated, use `echo` , as the   following example shows:\n```\necho $TOKEN\n```\nThis should display your token as an encoded string.```\nfor /f \"tokens=*\" %a in ('gcloud auth print-access-token') do set TOKEN=%a\n```\nTo check that your token was populated, use `echo` , as the   following example shows:\n```\necho %TOKEN%\n```\nThis should display your token as an encoded string.\n## \n Enable synchronizer access\nTo enable synchronizer access:\n- Get the email address for the service account to which you are granting synchronizer access.  For non-production environments (as suggested in this tutorial) it should be`apigee-non-prod`. For production environments, it should be`apigee-synchronizer`. Use the following command:\n```\ngcloud iam service-accounts list --filter \"apigee-non-prod\"\n```\nIf it matches the pattern `apigee-non-prod` ` **@${ORG_NAME}** ` `.iam.gserviceaccount.com` , you   can use that pattern in the next step.```\ngcloud iam service-accounts list --filter \"apigee-synchronizer\"\n```\nIf it matches the pattern `apigee-synchronizer` ` **@${ORG_NAME}** ` `.iam.gserviceaccount.com` , you   can use that pattern in the next step.\n- Call the [setSyncAuthorization](/apigee/docs/reference/apis/apigee/rest/v1/organizations/setSyncAuthorization) API to enable the required permissions for Synchronizer using the following command:\n```\ncurl -X POST -H \"Authorization: Bearer ${TOKEN}\" \\\n -H \"Content-Type:application/json\" \\\n \"https://apigee.googleapis.com/v1/organizations/${ORG_NAME}:setSyncAuthorization\" \\\n -d '{\"identities\":[\"'\"serviceAccount:apigee-non-prod@${ORG_NAME}.iam.gserviceaccount.com\"'\"]}'\n``````\ncurl -X POST -H \"Authorization: Bearer ${TOKEN}\" \\\n -H \"Content-Type:application/json\" \\\n \"https://apigee.googleapis.com/v1/organizations/${ORG_NAME}:setSyncAuthorization\" \\\n -d '{\"identities\":[\"'\"serviceAccount:apigee-synchronizer@${ORG_NAME}.iam.gserviceaccount.com\"'\"]}'\n```\nWhere:- **${ORG_NAME}** : The name of your hybrid organization.\n- **apigee-non-prod${ORG_NAME}.iam.gserviceaccount.com** or **apigee-synchronizer${ORG_NAME}.iam.gserviceaccount.com** : The email   address of the service account.\n **Tip:** Some shells may return an error like`bad substitution`. In this case, replacewith the name of  your organization and replace the`\"'\"`with`\"`as follows:\n```\ncurl -X POST -H \"Authorization: Bearer $TOKEN\" \\\n -H \"Content-Type:application/json\" \\\n \"https://apigee.googleapis.com/v1/organizations/YOUR_ORG_NAME:setSyncAuthorization\" \\\n -d '{\"identities\":[\"serviceAccount:apigee-non-prod@YOUR_ORG_NAME.iam.gserviceaccount.com\"]}'\n``````\ncurl -X POST -H \"Authorization: Bearer $TOKEN\" \\\n -H \"Content-Type:application/json\" \\\n \"https://apigee.googleapis.com/v1/organizations/YOUR_ORG_NAME:setSyncAuthorization\" \\\n -d '{\"identities\":[\"serviceAccount:apigee-synchronizer@YOUR_ORG_NAME.iam.gserviceaccount.com\"]}'\n```\n- To verify that the service account was set, use the following command to call the API to get a list of service accounts:```\ncurl -X GET -H \"Authorization: Bearer $TOKEN\" \\\n -H \"Content-Type:application/json\" \\\n \"https://apigee.googleapis.com/v1/organizations/${ORG_NAME}:getSyncAuthorization\"\n```The output looks similar to the following:\n```\n{\u00a0 \u00a0\"identities\":[\u00a0 \u00a0 \u00a0 \"serviceAccount:apigee-non-prod@my_project_id.iam.gserviceaccount.com\"\u00a0 \u00a0],\u00a0 \u00a0\"etag\":\"BwWJgyS8I4w=\"}\n``````\n{\u00a0 \u00a0\"identities\":[\u00a0 \u00a0 \u00a0 \"serviceAccount:apigee-synchronizer@my_project_id.iam.gserviceaccount.com\"\u00a0 \u00a0],\u00a0 \u00a0\"etag\":\"BwWJgyS8I4w=\"}\n```\n **Note:** The call to the Apigee API uses, and  the results from the IAM service account mappings use. In most cases, the values are the same. One  uncommon exception is when using a [multi-org cluster](/apigee/docs/hybrid/latest/multi-org) ,  where there would be more than one org name, and the service accounts  could be different per org.\nYou have now made it possible for your Apigee hybrid runtime and management planes to  communicate. Next, let's apply your configuration to the hybrid runtime and complete your  installation of Apigee hybrid.\n## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled [1](/apigee/docs/hybrid/v1.8/install-create-cluster) If the button's step matches the current step in the process, make the button disabled [2](/apigee/docs/hybrid/v1.8/install-cert-manager) If the button's step matches the current step in the process, make the button disabled [3](/apigee/docs/hybrid/v1.8/install-apigeectl) If the button's step matches the current step in the process, make the button disabled [4](/apigee/docs/hybrid/v1.8/install-service-accounts) If the button's step matches the current step in the process, make the button disabled [5](/apigee/docs/hybrid/v1.8/install-create-tls-certificates) If the button's step matches the current step in the process, make the button disabled [6](/apigee/docs/hybrid/v1.8/install-configure-cluster) If the button's step matches the current step in the process, make the button disabled If the button's step matches the next step [7](/apigee/docs/hybrid/v1.8/install-enable-synchronizer-access) If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 8: Install the hybrid runtime](/apigee/docs/hybrid/v1.8/install-hybrid-runtime) If the button's step matches the current step in the process, make the button disabled [9](/apigee/docs/hybrid/v1.8/install-expose-apigee-ingress) If the button's step matches the current step in the process, make the button disabled [10](/apigee/docs/hybrid/v1.8/install-deploy-proxy)", "guide": "Apigee"}