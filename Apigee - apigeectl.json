{"title": "Apigee - apigeectl", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - apigeectl\nYou are currently viewing version 1.2 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\n`apigeectl` is a command-line interface (CLI) for installing and managing Apigee hybrid in a Kubernetes cluster. For information on downloading and installing `apigeectl` , see [Download and install apigeectl](/apigee/docs/hybrid/v1.2/install-download-install#download-and-install-apigeectl) .\n**NOTE:** You must have [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) installed and set up on your Kubernetes administration machine to use the`apigeectl`command.\n", "content": "## apigeectl syntax\n```\napigeectl [command] [flags]\n```\nWhere:\n- : Specifies the operation you want to  perform. For a complete list of commands, see [apigeectl commands](#commands) .\n- : Specifies command  parameters. For a complete list of flags, see [apigeectl flags](#options) .## apigeectl commands\nThe following table lists the `apigeectl` commands:\n| Command  | Description                                                                                                            |\n|:------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| apply  | Applies configurations for Apigee hybrid runtime components to your Kubenetes cluster. Use the -c flag to specify one or more (comma-separated) components. If you do not specify the -c flag, then the apply command applies all of the components to the cluster. NOTE: You must call apigeectl init before calling apigeectl apply.                           |\n| check\u2011ready | Checks the status of the hybrid component pods. When all component pods are ready, the message \"All containers ready\" is output. For automated scripting, note that the command exits with a status of 0 when the containers are all ready. When there is at least one pod not ready, the command exits with a status of 1. If you do not specify the -c flag, then the check-ready command applies to all components in the cluster.   |\n| delete  | Deletes hybrid components from the cluster. Use the --all flag to remove ALL of the components. If you omit --all, only the Apigee-specific components are removed (the components installed with apigeectl init are not deleted). Apigee-specific components are the components that are installed with the apply command. If you do not specify the -c flag, then the delete command applies to all of the components deployed in the cluster. |\n| help  | Prints online help.                                                                                                          |\n| init  | Applies configurations for prerequisite components, such as Istio and Apigee Deployment, to the cluster. Use the -c flag to specify one or more (comma-separated) components.                                                                  |\n| version  | Prints the CLI version information.                                                                                                      |\n## apigeectl flags\nThe following table lists the `apigeectl` flags:\n| Flag      | Description                                                                                                                      |\n|:---------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| -c, --components   | Specifies a single component to which the command applies. If you do not specify this flag, then the command applies to all components (the entire deployment) in the cluster. Possible values include: cassandra logger mart metrics runtime synchronizer udca For example, -c cassandra Or, to specify multiple components add comma-separated values: -c cassandra, runtime                            |\n| --dry-run     | Executes the specified command without changing the cluster. Use with \u2011\u2011print-yaml to output the rendered object spec to a file.                                                                                        |\n| \u2011f,\u00a0\u2011\u2011file\u2011override\u2011config | Specifies a YAML file containing custom configuration properties for the hybrid deployment. The default value is ./overrides.yaml. An overrides file is required for the apply, check-ready, delete, and init commands. You must specify the full path with this flag. For more information, see Managing runtime plane components.                                      |\n| -h, --help     | Displays help for the command.                                                                                                                 |\n| --print-yaml    | Prints the configuration template output to stdout. For an example that uses this flag, see Print the configuration to a file.                                                                                         |\n| -s, --settings    | Specifies a configuration to which the command applies. Currently, this flag is only supported for the virtualhosts configuration, which is part of the runtime component. Use this flag if you make changes to the virtualhosts property, and nothing else. (Added v1.2.0) For example, if you make a change to the virtualhosts configuration in your overrides file, apply it to the cluster with this command: apigeectl apply -f my-overrides.yaml --settings virtualhosts -c runtime |\nThe `apigeectl` command uses `kubectl` behind the scenes to do  its work. The `apigeectl` command options ( `apply` and `delete` ,  and the use of YAML configuration files, are similar to their kubectl counterparts.  To learn more about how objects are managed in a Kubernetes cluster, see the following topics:- [  Imperative Management of Kubernetes Objects Using Configuration Files](https://kubernetes.io/docs/tasks/manage-kubernetes-objects/imperative-config/) \n- [Overview of kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) ## \n Examples\n### \n Initialize the cluster configuration\nApply prerequisite component configurations to your cluster with `init` . You must run the `init` command before `apply` .\n```\napigeectl init -f my_overrides.yaml\n```\n### Apply the cluster configuration\nTo apply hybrid configurations to your Kubernetes cluster, use the `apply` command. The first time you run `apply` all of the hybrid runtime components are created in your cluster. If you make configuration changes, rerun `apply` to apply only the changes or use `-c` to apply a specific component only.\nThe following example applies the configuration for hybrid runtime plane components to your cluster:\n```\napigeectl apply -f my_overrides.yaml\n```\n### \n Apply the configuration for a single component\nTo restrict the `apply` command to a particular component, use the `-c` flag, as described in [apigeectl flags](#options) .\nThe following example only applies the configuration for the Synchronizer component:\n```\napigeectl apply -c synchronizer -f my_overrides.yaml\n```\nThe following example only applies the configuration for the Cassandra and runtime components:\n```\napigeectl apply -c cassandra,runtime -f my_overrides.yaml\n```\n### Print the configuration to a file\nIf you're debugging an installation problem, it's useful to print out the entire cluster configuration to a file so that you can inspect the configuration settings. The `--print-yaml` flag prints the hybrid configuration to stdout, and the `--dry-run` flag allows the command to run without making any changes to the cluster.\n```\napigeectl apply -f my_overrides.yaml --dry-run --print-yaml > apigee-hybrid.yaml\n```\n**NOTE:** It is a good practice to save a copy of the YAML output in source control for future reference. But be aware that the output file contains passwords and secrets that you may not want to store.\n### Check pod status\nThe following example checks the status of pods deployed to your cluster:\n```\napigeectl check-ready\nAll containers ready in namespace 'my-namespace'\n```\n### Delete hybrid from the cluster\nThe following example deletes only the hybrid runtime components to your Kubernetes cluster. To delete everything, use the `--all` flag.\n**NOTE:** To uninstall successfully, you must have`kubectl`version 1.11.x or later installed.\n```\napigeectl delete -f my_overrides.yaml\n```", "guide": "Apigee"}