{"title": "Compute Engine - Deploying Microsoft Exchange Server 2016 on Compute Engine", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Deploying Microsoft Exchange Server 2016 on Compute Engine\nThis tutorial describes how you can deploy Microsoft Exchange Server 2016 on Compute Engine and configure it for [high availability and site resilience](https://docs.microsoft.com/en-us/exchange/high-availability/high-availability?view=exchserver-2016) .\nThe Exchange deployment will span two zones within a single region. In each zone, you will deploy a mailbox server and an edge transport server. The mailbox servers will be part of a database availability group so that mailbox data is replicated across zones.\nThe following diagram illustrates the deployment:The article assumes that you have already deployed Active Directory on [Google Cloud](/) and that you have basic knowledge of Exchange Server 2016, Active Directory, and Compute Engine.", "content": "## Objectives\n- Set up a project and a VPC network, and prepare them for the deployment of Exchange Server 2016.\n- Deploy Exchange mailbox servers across two zones and create a [database availability group](https://docs.microsoft.com/en-us/exchange/high-availability/database-availability-groups/database-availability-groups?view=exchserver-2016) .\n- Deploy Exchange edge transport servers across two zones.\n- Configure load balancing and firewall rules.\n## CostsThis tutorial uses billable components of Google Cloud, including:- [Compute Engine](/compute/vm-instance-pricing) \n- [Cloud Load Balancing](/vpc/network-pricing#lb) \nUse the [Pricing Calculator](/products/calculator) to generate a cost estimate based on your projected usage.## Before you beginTo complete this guide, you need the following:- An existing Active Directory domain with at least one domain controller. The Active Directory domain must use a valid, publicly routable DNS domain name. Local domain names such as `corp.local` or [reserved domain names](https://tools.ietf.org/html/rfc2606) such as `example.com` can't be used.Refer to [Deploying a fault-tolerant Microsoft Active Directory environment](/solutions/deploy-fault-tolerant-active-directory-environment) for further details on how you can deploy an Active Directory environment on Compute Engine.\n- A private DNS forwarding zone for the DNS domain name of Active Directory that forwards DNS queries to your domain controllers.\n- Administrative access to your Active Directory domain.\n- A Google Cloud project and VPC with connectivity to your Active Directory domain controllers.\n- A subnet to use for the Exchange VM instances. The subnet must span at least two zones.\n **Note:** Deploying Exchange Server requires that you extend the schema of your Active Directory domain. Managed AD currently does not support schema extensions. The tutorial therefore requires you to use self-managed Active Directory domain controllers.\nBefore you begin the deployment, review the [high availability and site resilience requirements for Exchange Server.](https://docs.microsoft.com/en-us/exchange/high-availability/plan-ha?view=exchserver-2016) .- In the Google Cloud console, on the project selector page,   select or [create a Google Cloud project](/resource-manager/docs/creating-managing-projects) . **Note** : If you don't plan to keep the  resources that you create in this procedure, create a project instead of  selecting an existing project. After you finish these steps, you can  delete the project, removing all resources associated with the project. [Go to project selector](https://console.cloud.google.com/projectselector2/home/dashboard) \n- [Make sure that billing is enabled for your Google Cloud project](/billing/docs/how-to/verify-billing-enabled#console) .\nWhen you finish the tasks that are described in this document, you can avoid continued billing by deleting the resources that you created. For more information, see [Clean up](#clean-up) .## Preparing the project and networkTo prepare your Google Cloud project and VPC for the deployment of Exchange Server, do the following:- Switch to your project in the Google Cloud console and open Cloud Shell. [Open Cloud Shell](https://console.cloud.google.com/?cloudshell=true) \n- Initialize the following variables:```\nVPC_NAME=VPC_NAME\nSUBNET_NAME=SUBNET_NAME\nSUBNET_REGION=SUBNET_REGION\nSUBNET_ZONE_1=$SUBNET_REGION-a\nSUBNET_ZONE_2=$SUBNET_REGION-b\n```Where:- is the name of your VPC.\n- is the name of your subnet.\n- is the region of your subnet.\n- Set your default [project ID](/resource-manager/docs/creating-managing-projects) :```\ngcloud config set project PROJECT_ID\n```Replace with the ID of your Google Cloud project.\n### Creating an installation diskYou now create a disk that contains the installation Exchange Server installation media. By creating a disk that you can attach to multiple VM instances, you avoid having to download the installation media to each VM instance individually.- Follow the instructions in [Creating an image from an ISO file](/compute/docs/images/creating-an-image-from-an-iso-file) . Use the following URL as download URL:```\nhttps://download.microsoft.com/download/6/6/F/66F70200-E2E8-4E73-88F9-A1F6E3E04650/ExchangeServer2016-x64-cu11.iso\n```\n- Use the new image to create a disk in the first zone:```\ngcloud compute disks create exchange-media-1 \\\n --zone=$SUBNET_ZONE_1 \\\n --image-project=$GOOGLE_CLOUD_PROJECT \\\n --image=IMAGE\n```Replace with the name of the image that you created in the previous step.\n- Create a disk in the second zone:```\ngcloud compute disks create exchange-media-2 \\\n --zone=$SUBNET_ZONE_2 \\\n --image-project=$GOOGLE_CLOUD_PROJECT \\\n --image=IMAGE\n```Replace with the name of the image that you created in the first step.\n### Creating firewall rulesTo allow [clients to connect to Exchange and to enable communication between Exchange servers](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/deployment-ref/network-ports?view=exchserver-2016) , you need to create several firewall rules. To simplify the creation of these firewall rules, you use [network tags](/vpc/docs/add-remove-network-tags) :- Edge transport servers are annotated with the`exchange-transport`tag.\n- Mailbox servers are annotated with the`exchange-mailbox`tag.\n- The witness server is annotated with the`exchange-witness`tag.\n- All servers are annotated with the`exchange`tag.\nCreate firewall rules that use these network tags:- Return to your existing Cloud Shell session.\n- Create firewall rules for the mailbox servers:```\ngcloud compute firewall-rules create allow-all-between-exchange-servers \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp,udp,icmp \\\n --enable-logging \\\n --source-tags=exchange \\\n --target-tags=exchange \\\n --network=$VPC_NAME \\\n --priority 10000\ngcloud compute firewall-rules create allow-smtp-from-transport-to-mailbox \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:25 \\\n --enable-logging \\\n --source-tags=exchange-transport \\\n --target-tags=exchange-mailbox \\\n --network=$VPC_NAME \\\n --priority 10000\ngcloud compute firewall-rules create allow-edgesync-from-mailbox-to-transport \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:50636 \\\n --enable-logging \\\n --source-tags=exchange-mailbox \\\n --target-tags=exchange-transport \\\n --network=$VPC_NAME \\\n --priority 10000\ngcloud compute firewall-rules create allow-mail-to-mailbox \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:25,tcp:110,tcp:135,tcp:143,tcp:443,tcp:993,tcp:995 \\\n --enable-logging \\\n --target-tags=exchange-mailbox \\\n --network=$VPC_NAME \\\n --priority 10000\ngcloud compute firewall-rules create allow-smb-within-dag \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:135,tcp:445,udp:445,tcp:49152-65535 \\\n --enable-logging \\\n --source-tags=exchange-mailbox,exchange-witness \\\n --target-tags=exchange-mailbox,exchange-witness \\\n --network=$VPC_NAME \\\n --priority 10000\n```\n- Create a firewall rule for the edge transport server:```\ngcloud compute firewall-rules create allow-smtp-to-transport \\\n --direction=INGRESS \\\n --action=allow \\\n --rules=tcp:25 \\\n --enable-logging \\\n --target-tags=exchange-transport \\\n --network=$VPC_NAME \\\n --priority 10000\n```\nYour project and VPC are now ready for the deployment of Exchange Server.## Deploying the mailbox roleYou now deploy the [mailbox servers](https://docs.microsoft.com/en-us/exchange/architecture/architecture?view=exchserver-2016#mailbox-servers) and a management server that you use to administer Exchange.\nThe VM instances will use the `n1-standard-8` [machine type](/compute/docs/machine-types) . For a more detailed analysis of your needs and their system requirements, see the [Exchange Server Role Requirements Calculator](https://gallery.technet.microsoft.com/Exchange-2013-Server-Role-f8a61780) .\n### Deploying the management serverFollow these steps to create a VM instance that serves as the management server:- Return to your existing Cloud Shell session.\n- Create a [specialize script](/compute/docs/startupscript#providing_a_startup_script_for_windows_instances) for the VM instance. The script runs during VM initialization and installs the [client prerequisites for the Exchange 2016 management tools](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/prerequisites?view=exchserver-2016#windows-client-prerequisites-for-the-exchange-2016-management-tools) :```\ncat << \"EOF\" > specialize-admin.ps1\n$ErrorActionPreference = \"stop\"\n# Install required Windows features\nInstall-WindowsFeature RSAT-ADDS,RSAT-DNS-Server\nEnable-WindowsOptionalFeature -Online -FeatureName IIS-ManagementScriptingTools, `\n IIS-ManagementScriptingTools, `\n IIS-IIS6ManagementCompatibility, `\n IIS-LegacySnapIn, `\n IIS-ManagementConsole, `\n IIS-Metabase, `\n IIS-WebServerManagementTools, `\n IIS-WebServerRole\n# Install Visual C++ Redistributable Package for Visual Studio 2012\n(New-Object System.Net.WebClient).DownloadFile(\n 'http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU3/vcredist_x64.exe',\n \"$env:Temp\\vcredist_2012_x64.exe\")\n& $env:Temp\\vcredist_2012_x64.exe /passive /norestart | Out-Default\nEOF\n```\n- Create a VM instance that uses `specialize-admin.ps1` as a specialize script and attach the Exchange installation disk as a secondary disk. You use the secondary disk later to install the Exchange management tools:```\ngcloud compute instances create exchange-admin \\\n --image-family=windows-2019 \\\n --image-project=windows-cloud \\\n --machine-type=n1-standard-2 \\\n --subnet=$SUBNET_NAME \\\n --zone=$SUBNET_ZONE_1 \\\n --tags=exchange \\\n --disk=name=exchange-media-1,auto-delete=no,mode=ro \\\n --metadata-from-file=sysprep-specialize-script-ps1=specialize-admin.ps1\n```\n- Monitor the initialization process of the VM by viewing its serial port output:```\ngcloud compute instances tail-serial-port-output exchange-admin --zone=$SUBNET_ZONE_1\n```Wait about 5 minutes until you see the output `Instance setup finished` , then press Ctrl+C. At this point, the VM instance is ready to be used.\n- [Create a username and password](/compute/docs/instances/windows/creating-passwords-for-windows-instances) for the VM instance\n- [Connect to the VM by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in using the username and password created in the previous step.\n- Right-click the **Start** button (or press **Win+X** ) and click **Command Prompt (Admin)** .\n- Confirm the elevation prompt by clicking **Yes** .\n- In the elevated command prompt, start a PowerShell session:```\npowershell\n```\n- Join the computer to your Active Directory domain:```\nAdd-Computer -Domain DOMAIN\n```Replace with the DNS name of your Active Directory domain.\n- Restart the computer:```\nRestart-Computer\n```Wait approximately 1 minute for the restart to complete.\n- [Connect to the VM by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in using a domain user that is a member of the **Enterprise Admins** group.\n- Follow the instructions to [prepare the Active Directory schema and domains for Exchange Server](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/prepare-ad-and-domains?view=exchserver-2016) . You can find the Exchange installation media on drive `D:` .\n- Follow the instructions to [install the Exchange management tools](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/post-installation-tasks/install-management-tools?view=exchserver-2016) .\n### Deploying the mailbox serversYou are now ready to deploy the VM instances that serve as mailbox servers:- Return to your existing Cloud Shell session.\n- Create a specialize script for the VM instance. The script runs during VM initialization and installs the [prerequisites for installing mailbox servers](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/prerequisites?view=exchserver-2016#exchange-2016-mailbox-servers-on-windows-server-2016) :```\ncat << \"EOF\" > specialize-mailbox.ps1\n$ErrorActionPreference = \"stop\"\n# Install required Windows features\nInstall-WindowsFeature RSAT-ADDS\nInstall-WindowsFeature `\n NET-Framework-45-Features, `\n Server-Media-Foundation, `\n RPC-over-HTTP-proxy, `\n RSAT-Clustering, `\n RSAT-Clustering-CmdInterface, `\n RSAT-Clustering-Mgmt, `\n RSAT-Clustering-PowerShell, `\n WAS-Process-Model, `\n Web-Asp-Net45, `\n Web-Basic-Auth, `\n Web-Client-Auth, `\n Web-Digest-Auth, `\n Web-Dir-Browsing, `\n Web-Dyn-Compression, `\n Web-Http-Errors, `\n Web-Http-Logging, `\n Web-Http-Redirect, `\n Web-Http-Tracing, `\n Web-ISAPI-Ext, `\n Web-ISAPI-Filter, `\n Web-Lgcy-Mgmt-Console, `\n Web-Metabase, `\n Web-Mgmt-Console, `\n Web-Mgmt-Service, `\n Web-Net-Ext45, `\n Web-Request-Monitor, `\n Web-Server, `\n Web-Stat-Compression, `\n Web-Static-Content, `\n Web-Windows-Auth, `\n Web-WMI, `\n Windows-Identity-Foundation, `\n RSAT-ADDS\n# Install Visual C++ Redistributable Package for Visual Studio 2012\n(New-Object System.Net.WebClient).DownloadFile(\n 'http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU3/vcredist_x64.exe',\n \"$env:Temp\\vcredist_2012_x64.exe\")\n& $env:Temp\\vcredist_2012_x64.exe /passive /norestart | Out-Default\n# Visual C++ Redistributable Package for Visual Studio 2013\n(New-Object System.Net.WebClient).DownloadFile(\n 'http://download.microsoft.com/download/2/E/6/2E61CFA4-993B-4DD4-91DA-3737CD5CD6E3/vcredist_x64.exe',\n \"$env:Temp\\vcredist_2013_x64.exe\")\n& $env:Temp\\vcredist_2013_x64.exe /passive /norestart | Out-Default\n# Install Microsoft Unified Communications Managed API\n(New-Object System.Net.WebClient).DownloadFile(\n 'https://download.microsoft.com/download/2/C/4/2C47A5C1-A1F3-4843-B9FE-84C0032C61EC/UcmaRuntimeSetup.exe',\n \"$env:Temp\\UcmaRuntimeSetup.exe\")\n& $env:Temp\\UcmaRuntimeSetup.exe /passive /norestart | Out-Default\nEOF\n```\n- Create a VM instance in the first zone and pass `specialize-mailbox.ps1` as the specialize script. Attach the Exchange installation disk as secondary disk. You use the secondary disk later to install the Exchange Server mailbox role:```\ngcloud compute instances create mailbox-1-a \\\n --image-family=windows-2016 \\\n --image-project=windows-cloud \\\n --machine-type=n1-standard-8 \\\n --subnet=$SUBNET_NAME \\\n --tags exchange,exchange-mailbox \\\n --zone=$SUBNET_ZONE_1 \\\n --boot-disk-type pd-ssd \\\n --disk=name=exchange-media-1,auto-delete=no,mode=ro \\\n --metadata-from-file=sysprep-specialize-script-ps1=specialize-mailbox.ps1\n```\n- Create another VM instance in the second zone:```\ngcloud compute instances create mailbox-1-b \\\n --image-family=windows-2016 \\\n --image-project=windows-cloud \\\n --machine-type=n1-standard-8 \\\n --subnet=$SUBNET_NAME \\\n --tags exchange,exchange-mailbox \\\n --zone=$SUBNET_ZONE_2 \\\n --boot-disk-type pd-ssd \\\n --disk=name=exchange-media-2,auto-delete=no,mode=ro \\\n --metadata-from-file=sysprep-specialize-script-ps1=specialize-mailbox.ps1\n```\n- Monitor the initialization process of the VM by viewing its serial port output:```\ngcloud compute instances tail-serial-port-output mailbox-1-b --zone=$SUBNET_ZONE_2\n```Wait about 5 minutes until you see the output `Instance setup finished` and then press Ctrl+C. At this point, the VM instance is ready to use.\n- For each of the two VM instances, perform the following steps:- [Create a username and password](/compute/docs/instances/windows/creating-passwords-for-windows-instances) for the VM instance\n- [Connect to the VM by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in using the username and password created in the previous step.\n- Right-click the **Start** button (or press **Win+X** ) and click **Command Prompt (Admin)** .\n- Confirm the elevation prompt by clicking **Yes** .\n- In the elevated command prompt, start a PowerShell session:```\npowershell\n```\n- Join the computer to your Active Directory domain:```\nAdd-Computer -Domain DOMAIN\n```Replace with the DNS name of your Active Directory domain.\n- Restart the computer:```\nRestart-Computer\n```Wait for approximately 1 minute for the restart to complete.\n- [Connect to the VM by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in using a domain user that is a member of the **Enterprise Admins** group.\n- Install the Exchange Server mailbox role by using the [setup wizard](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/deploy-new-installations/install-mailbox-role?view=exchserver-2016) or [unattended mode](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/deploy-new-installations/unattended-installs?view=exchserver-2016) . You can find the Exchange installation media on drive `D:` .\n### Deploying the witness ServerTo set up a database availability group (DAG) for the two mailbox servers, you need an extra VM instance to serve as witness server. To deploy the witness server, follow these steps:- Return to your existing Cloud Shell session.\n- Create a witness server in the first zone:```\ngcloud compute instances create witness \\\n --image-family=windows-2016 \\\n --image-project=windows-cloud \\\n --machine-type n1-standard-8 \\\n --subnet $SUBNET_NAME \\\n --tags exchange,exchange-witness \\\n --zone $SUBNET_ZONE_1 \\\n --boot-disk-type pd-ssd \\\n \"--metadata=sysprep-specialize-script-ps1=add-windowsfeature FS-FileServer\"\n```\n- Monitor the initialization process of the VM by viewing its serial port output:```\ngcloud compute instances tail-serial-port-output witness --zone=$SUBNET_ZONE_1\n```Wait about 3 minutes until you see the output `Instance setup finished` , then press Ctrl+C. At this point, the VM instance is ready to be used.\n- [Create a username and password](/compute/docs/instances/windows/creating-passwords-for-windows-instances) for the VM instance\n- [Connect to the VM by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in using the username and password created in the previous step.\n- Right-click the **Start** button (or press **Win+X** ) and click **Command Prompt (Admin)** .\n- Confirm the elevation prompt by clicking **Yes** .\n- In the elevated command prompt, start a PowerShell session:```\npowershell\n```\n- Join the computer to your Active Directory domain:```\nAdd-Computer -Domain DOMAIN\n```Replace with the DNS name of your Active Directory domain.\n- Restart the computer:```\nRestart-Computer\n```Wait approximately 1 minute for the restart to complete.\n- [Connect to the VM by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in using a domain user that is a member of the **Enterprise Admins** group.\n- Right-click the **Start** button (or press **Win+X** ) and click **Command Prompt (Admin)** .\n- Confirm the elevation prompt by clicking **Yes** .\n- In the elevated command prompt, start a PowerShell session:```\npowershell\n```\n- Add the **Exchange Trusted Subsystem** universal security group to the local **Administrators** group:```\nAdd-LocalGroupMember -Group Administrators -Member \"DOMAIN\\Exchange Trusted Subsystem\"\n```Replace with the NetBIOS name of your Active Directory domain.\nThe two mailbox servers and the witness server are now fully deployed, but you still need to add them to a database availability group.\n### Creating a database availability groupTo create a DAG, follow these steps:- [Connect to the management VM by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in using a domain user that is a member of the **Enterprise Admins** group.\n- Right-click the **Start** button (or press **Win+X** ) and click **Command Prompt (Admin)** .\n- Confirm the elevation prompt by clicking **Yes** .\n- In the elevated command prompt, start a PowerShell session:```\npowershell\n```\n- Download and install the Chrome browser:```\nStart-BitsTransfer `\n -Source 'https://dl.google.com/chrome/install/latest/chrome_installer.exe' `\n -Destination \"$env:Temp\\chrome_installer.exe\"\n& $env:Temp\\chrome_installer.exe\n```\n- To open the Exchange Admin Center (EAC), launch Chrome and navigate to the following URL:```\nhttps://mailbox-1-a/ecp/?ExchClientVer=15\n```\n- Sign in using a domain user that is a member of the **Enterprise Admins** group.\n- In the EAC menu, select **servers > database availability groups** .\n- Click **+** .\n- In the dialog, enter the following settings to [create a database availability group](https://docs.microsoft.com/en-us/exchange/high-availability/manage-ha/create-dags?view=exchserver-2016) :- **Database availability group name: mailbox** \n- **Witness server: witness** \n- Click **Save** .\n- Click the **Managed DAG membership** icon.\n- In the dialog, click **+** to add a member server.\n- Select **mailbox-1-a** and **mailbox-1-b** and click **add.** \n- Click **OK.** \n- Click **Save** .\nOptionally, perform any [Exchange Server post-installation tasks](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/post-installation-tasks/post-installation-tasks?view=exchserver-2016) .\n### Setting up load balancingTo allow clients to connect to the mailbox servers, you now create an [internal load balancer](/load-balancing/docs/internal) resource:- Return to your existing Cloud Shell session.\n- Create one [unmanaged instance group](/compute/docs/instance-groups/creating-groups-of-unmanaged-instances) per zone:```\ngcloud compute instance-groups unmanaged create mailbox-a --zone=$SUBNET_ZONE_1\ngcloud compute instance-groups unmanaged create mailbox-b --zone=$SUBNET_ZONE_2\n```\n- Add the VM instances running the mailbox servers to the instance groups:```\ngcloud compute instance-groups unmanaged add-instances mailbox-a \\\n --zone=$SUBNET_ZONE_1 \\\n --instances=mailbox-1-a\ngcloud compute instance-groups unmanaged add-instances mailbox-b \\\n --zone=$SUBNET_ZONE_2 \\\n --instances=mailbox-1-b\n```\n- Create a health check that probes the HTTP path `/owa/healthcheck.htm` :```\ngcloud compute health-checks create http http-80\\\n --port=80 \\\n --request-path=/owa/healthcheck.htm\n```\n- Create a load balancer backend and add the two instance groups:```\ngcloud compute backend-services create mailbox-backend \\\n --load-balancing-scheme=internal \\\n --protocol=tcp \\\n --region=$SUBNET_REGION \\\n --health-checks=http-80 \\\n --session-affinity=CLIENT_IP_PORT_PROTO\ngcloud compute backend-services add-backend mailbox-backend \\\n --region=$SUBNET_REGION \\\n --instance-group=mailbox-a \\\n --instance-group-zone=$SUBNET_ZONE_1\ngcloud compute backend-services add-backend mailbox-backend \\\n --region=$SUBNET_REGION \\\n --instance-group=mailbox-b \\\n --instance-group-zone=$SUBNET_ZONE_2\n```\n- Reserve a static IP address for the load balancer:```\ngcloud compute addresses create mailbox-frontend \\\n --region=$SUBNET_REGION \\\n --subnet=$SUBNET_NAME\n```\n- Create a forwarding rule for the load balancer:```\ngcloud compute forwarding-rules create mailbox-frontend \\\n --region=$SUBNET_REGION \\\n --address=mailbox-frontend \\\n --load-balancing-scheme=internal \\\n --network=$VPC_NAME \\\n --subnet=$SUBNET_NAME \\\n --ip-protocol=TCP \\\n --ports=ALL \\\n --backend-service=mailbox-backend \\\n --backend-service-region=$SUBNET_REGION\n```\n- Look up the IP address of the load balancer:```\ngcloud compute addresses describe mailbox-frontend \\\n --region=$SUBNET_REGION \\\n --format=value\\(address\\)\n```\n### Testing the mailbox serversTo verify that the mailbox servers have been deployed successfully, perform the following steps:- On the management VM, open Chrome and navigate to`https://<var>IP</var>/owa/`, whereis the IP address of the load balancer that you looked up earlier.\n- Sign in using a domain user.You should now see the user interface of Outlook Web Access.\n## Deploying the edge transport roleYou now deploy the [edge transport servers](https://docs.microsoft.com/en-us/exchange/architecture/edge-transport-servers/edge-transport-servers?view=exchserver-2016) . The edge transport servers [handle all inbound and outbound mail flow](https://docs.microsoft.com/en-us/exchange/mail-flow/mail-flow?view=exchserver-2016#understanding-the-transport-pipeline) .\nUnlike mailbox servers, edge transport servers are exposed to the internet. In an on-premises deployment, you might therefore deploy edge transport servers into a perimeter network that is isolated from the internal network by firewalls.\nOn Google Cloud, deploying edge transport servers into a separate VPC or subnet is not necessary. Instead, you use firewall rules to micro-segment your network and restrict network communication from and to the edge transport servers.\nUnlike mailbox servers, the edge transport servers are not members of your Active Directory domain.\nThe VM instances will use the `n1-standard-8` [machine type](/compute/docs/machine-types) . Depending on how you plan to use the Exchange deployment, you might need to use larger machine types. Consult the [Exchange Server Role Requirements Calculator](https://gallery.technet.microsoft.com/Exchange-2013-Server-Role-f8a61780) for a more detailed analysis of your needs and their system requirements.\n### Deploying the edge transport serversTo deploy the edge transport servers, follow these steps:- Return to your existing Cloud Shell session.\n- Create a [specialize script](/compute/docs/startupscript#providing_a_startup_script_for_windows_instances) for the VM instance. The script runs during VM initialization and installs the [prerequisites for installing edge transport servers](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/prerequisites?view=exchserver-2016#exchange-2016-edge-transport-servers-on-windows-server-2016) :```\ncat << \"EOF\" > specialize-transport.ps1\n# Install required Windows features\nInstall-WindowsFeature ADLDS\n# Install Visual C++ Redistributable Package for Visual Studio 2012\n(New-Object System.Net.WebClient).DownloadFile(\n 'http://download.microsoft.com/download/1/6/B/16B06F60-3B20-4FF2-B699-5E9B7962F9AE/VSU3/vcredist_x64.exe',\n \"$env:Temp\\vcredist_2012_x64.exe\")\n& $env:Temp\\vcredist_2012_x64.exe /passive /norestart | Out-Default\nEOF\n```\n- Create a VM instance in the first zone and pass `specialize-transport.ps1` as the specialize script. Attach the Exchange installation disk in read-only mode so that you can later install the Exchange Server transport server role:```\ngcloud compute instances create transport-1-a \\\n --image-family=windows-2016 \\\n --image-project=windows-cloud \\\n --machine-type=n1-standard-8 \\\n --subnet=$SUBNET_NAME \\\n --tags exchange,exchange-transport \\\n --zone=$SUBNET_ZONE_1 \\\n --boot-disk-type pd-ssd \\\n --disk=name=exchange-media-1,auto-delete=no,mode=ro \\\n --metadata-from-file=sysprep-specialize-script-ps1=specialize-transport.ps1\n```\n- Create another VM instance in the second zone:```\ngcloud compute instances create transport-1-b \\\n --image-family=windows-2016 \\\n --image-project=windows-cloud \\\n --machine-type=n1-standard-8 \\\n --subnet=$SUBNET_NAME \\\n --tags exchange,exchange-transport \\\n --zone=$SUBNET_ZONE_2 \\\n --boot-disk-type pd-ssd \\\n --disk=name=exchange-media-2,auto-delete=no,mode=ro \\\n --metadata-from-file=sysprep-specialize-script-ps1=specialize-transport.ps1\n```\n- Monitor the initialization process of the VM by viewing its serial port output:```\ngcloud compute instances tail-serial-port-output transport-1-b --zone=$SUBNET_ZONE_2\n```Wait about 5 minutes until you see the output `Instance setup finished` , then press Ctrl+C. At this point, the VM instance is ready to be used.\n- For each of the two edge transport server VM instances, perform the following steps:- [Create a username and password](/compute/docs/instances/windows/creating-passwords-for-windows-instances) for the VM instance.\n- [Connect to the VM by using Remote Desktop](/compute/docs/instances/connecting-to-windows#windows_gui) and log in using the username and password created in the previous step.\n- [Configure the primary DNS suffix](https://docs.microsoft.com/en-us/exchange/primary-dns-suffix-is-missing-exchange-2013-help?redirectedfrom=MSDN) to match the DNS domain name used by your Active Directory domain.\n- Install the Exchange Server edge transport server role by using the [setup wizard](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/deploy-new-installations/install-edge-transport-role?view=exchserver-2016) or [unattended mode](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/deploy-new-installations/unattended-installs?view=exchserver-2016) . You can find the Exchange installation media on drive`D:`.\n### Registering the edge transport servers in DNSBefore you can set up an edge subscription for the edge transport servers, you have to assign DNS names to the server. Because the edge transport servers are not members of your Active Directory domain, you have to assign these names manually:- On the management server, open a PowerShell console.\n- Create a CNAME record for `transport-1-a` and `transport-1-b` :```\nAdd-DnsServerResourceRecordCName `\n -ComputerName (Get-ADDomainController).Hostname `\n -HostNameAlias \"transport-1-a.REGION-a.c.PROJECT-ID.internal.\" `\n -Name \"transport-1-a\" `\n -ZoneName \"DOMAIN\"\nAdd-DnsServerResourceRecordCName `\n -ComputerName (Get-ADDomainController).Hostname `\n -HostNameAlias \"transport-1-b.REGION-b.c.PROJECT-ID.internal.\" `\n -Name \"transport-1-b\" `\n -ZoneName \"DOMAIN\"\n```Where:- is the project ID of the project in which your Exchange VM instances are deployed.\n- is the region in which your Exchange VM instances are deployed.\n- is the DNS domain of your Active Directory domain.\n### Setting up edge subscriptionsTo populate the Active Directory Lightweight Directory Services (AD LDS) instances on the edge transport server with Active Directory data, you now set up [edge subscriptions](https://docs.microsoft.com/en-us/Exchange/architecture/edge-transport-servers/edge-subscriptions?view=exchserver-2016) .\n **Note:** Perform the following steps on each of the two edge transport servers.- Open an elevated Exchange management shell by right-clicking **Start** > **Exchange Management Shell** and selecting **More** > **Run as Administrator** .\n- Create an edge subscription:```\nNew-EdgeSubscription -FileName \"$env:UserProfile\\Desktop\\EdgeSubscriptionInfo-$env:computername.xml\"\n```You should now see the subscription file on the desktop.\n- Export the Exchange AD LDS server certificate:- Open the Microsoft Management Console by clicking **Start** > **Run** , entering`mmc`and selecting **OK** .\n- Select **File** > **Add/remove snap-in.** \n- In the list of snap-ins, select **Certificates** and click **Add** .\n- Select **Service account** , then click **Next** .\n- Select **Local computer** , then click **Next** .\n- Select **Microsoft Exchange ADAM** , then click **Finish** .\n- Click **OK** .\n- In the left pane, navigate to **Certificates** > **ADAM_MSExchange\\Personal** > **Certificates** \n- Right-click the certificate in the right pane and select **All tasks** > **Export** .\n- Click **Next** .\n- Select **No, do not export the private key** and click **Next** .\n- Select **Base-64 encoded X.509 (.cer)** and click **Next** .\n- Select a location to save the certificate to and click **Next** .\n- For each of the two mailbox server VM instances, perform the following steps:- Copy the Exchange AD LDS server certificate of both edge transport servers to a temporary location.\n- Copy the subscription files of both edge transport servers to a temporary location.\n- Open an elevated Exchange management shell by right-clicking **Start** > **Exchange Management Shell** and selecting **More** > **Run as Administrator** .\n- Import the Exchange AD LDS server certificate of `transport-1-a` :```\nImport-Certificate -FilePath \"PATH\" -CertStoreLocation cert:\\LocalMachine\\Root\n```Replace with the path to the Exchange AD LDS server certificate of `transport-1-a` .\n- Import the Exchange AD LDS server certificate of `transport-1-b` :```\nImport-Certificate -FilePath \"PATH\" -CertStoreLocation cert:\\LocalMachine\\Root\n```Replace with the path to the Exchange AD LDS server certificate of `transport-1-b` .\n- [Import the Edge Subscription files](https://docs.microsoft.com/en-us/exchange/architecture/edge-transport-servers/edge-subscriptions?view=exchserver-2016#import-the-edge-subscription-file-on-a-mailbox-server) of `transport-1-a` and `transport-1-b` .\n- [Manually start the EdgeSync process](https://docs.microsoft.com/en-us/exchange/architecture/edge-transport-servers/edge-subscription-procedures?view=exchserver-2016#run-edgesync-manually) on a mailbox server and [verify that the synchronization succeeded](https://docs.microsoft.com/en-us/exchange/architecture/edge-transport-servers/edge-subscription-procedures?view=exchserver-2016#verify-edgesync-results) .\n### Setting up load balancing for inbound mail flowTo enable inbound email flow to the edge transport servers, you now create a [network load balancer](/load-balancing/docs/network) resource:- Return to your existing Cloud Shell session.\n- Create a target pool:```\ngcloud compute target-pools create transport-pool --region $SUBNET_REGION\n```\n- Add the edge transport server VM instances to the target pool:```\ngcloud compute target-pools add-instances transport-pool \\\n --instances-zone $SUBNET_ZONE_1 \\\n --instances transport-1-a\ngcloud compute target-pools add-instances transport-pool \\\n --instances-zone $SUBNET_ZONE_2 \\\n --instances transport-1-b\n```\n- Reserve an external IP address for the load balancer:```\ngcloud compute addresses create transport-frontend --region=$SUBNET_REGION\n```\n- Create a forwarding rule:```\ngcloud compute forwarding-rules create www-rule \\\n --region $SUBNET_REGION \\\n --ports 25 \\\n --address transport-frontend \\\n --target-pool transport-pool\n```\n- Look up the IP address of the load balancer:```\ngcloud compute addresses describe transport-frontend \\\n --region=$SUBNET_REGION \\\n --format=value\\(address\\)\n```The transport servers are now available to receive email on port 25 of this IP address and will pass incoming email to the mailbox servers.\n- Verify that email delivery works by following the instructions in [Use Telnet to test SMTP communication on Exchange servers](https://docs.microsoft.com/en-us/exchange/mail-flow/test-smtp-with-telnet?view=exchserver-2016) . **Note:** To prevent potential email service abuse and protect IP address reputation, outgoing connections to port 25 are [blocked for VM instances and Cloud Shell](/compute/docs/tutorials/sending-mail) . To test SMTP communication, perform the tests on your workstations instead of on a VM instance or Cloud Shell.\n- To complete the setup of your edge transport servers, follow the steps in [Configure mail flow and client access on Exchange servers](https://docs.microsoft.com/en-us/exchange/plan-and-deploy/post-installation-tasks/configure-mail-flow-and-client-access?view=exchserver-2016) .\n### Setting up outbound email flow by using SendGridBecause Google Cloud [does not allow outbound connections on port 25](/compute/docs/tutorials/sending-mail#using_standard_email_ports) , you now set up a custom send connector to handle outbound email.\n **Note:** This section shows how to use SendGrid to deliver internet email. You can use other third-party providers such as Mailgun or Mailjet to deliver internet email.- Use the [Google Cloud Marketplace](https://console.cloud.google.com/marketplace/details/sendgrid-app/sendgrid-email) to sign up for the SendGrid email service.\n- On the SendGrid website, create a new API key.\n- Add the public IP addresses of the VM instances`transport-1-a`and`transport-1-b`to the list of allowed IP addresses.\nYou now create an [outbound send connector](https://docs.microsoft.com/en-us/exchange/architecture/edge-transport-servers/edge-subscriptions?view=exchserver-2016#outbound-send-connector-to-send-messages-to-the-internet) that uses SendGrid as smart host:- Return to the Exchange Admin Center (EAC).\n- In the EAC menu, select **mail flow** > **send connectors** .\n- Click **+** .\n- In the **New send connector** dialog, enter the following settings:- **Name** :`SendGrid`\n- **Type** : **Internet (for example, to send internet mail)** \n- Click **Next** .\n- Under **Network settings** , select **Route mail through smart hosts** and click **+** .\n- On the **Add smart host** page, enter`smtp.sendgrid.net`.\n- Click **Save** .\n- Click **Next** .\n- Under **Smart host authentication** , select **Basic authentication** .\n- Enter the following information:- **User name** :`apikey`\n- **Password** : Paste the API key created on the SendGrid website\n- Click **Next** .\n- Under **Address space** , click **+** .\n- Enter the following information:- **Type: SMTP** \n- **Full Qualified Domain Name (FQDN)** :`*`\n- **Cost** :`1`\n- Click **Next** .\n- Under **Source server** , click **+** .\n- Select`transport-1-a`and`transport-1-b`and click **OK** .\n- Click **Finish** .\nYou now configure the send connector to use a custom port:- On one of the mailbox servers, open the Exchange management shell by right-clicking **Start** > **Exchange Management Shell** .\n- Modify the send connector to use port `2525` :```\nSet-SendConnector -Identity \"SendGrid\" -port 2525\n```\n- Trigger an edge synchronization to ensure that the configuration change is propagated to all edge transport servers:```\nStart-EdgeSynchronization -ForceFullSync\n```\n **Note:** To troubleshoot issues related to outbound email flow, check the [Send connectors log file](https://docs.microsoft.com/en-us/exchange/mail-flow/transport-logs/transport-logs?view=exchserver-2019#protocol-logging) on the edge transport servers.## Clean upTo avoid incurring further costs after you have completed this tutorial, delete the entities that you've created.\n### Delete the Google Cloud project\n- **Caution** : Deleting a project has the following effects:- **Everything in the project is deleted.** If you used an existing project for  the tasks in this document, when you delete it, you also delete any other work you've  done in the project.\n- **Custom project IDs are lost.** When you created this project, you might have created a custom project ID that you want to use in  the future. To preserve the URLs that use the project ID, such as an`appspot.com`URL, delete selected resources inside the project instead of deleting the whole project.\n- In the Google Cloud console, go to the **Manage resources** page. [Go to Manage resources](https://console.cloud.google.com/iam-admin/projects) \n- In the project list, select the project that you  want to delete, and then click **Delete** .\n- In the dialog, type the project ID, and then click **Shut down** to delete the project.\n## What's next\n- Explore reference architectures, diagrams, and best practices about Google Cloud. Take a look at our [Cloud Architecture Center](/architecture) .", "guide": "Compute Engine"}