{"title": "Cloud Architecture Center - Networking for internet-facing application delivery: Reference architectures", "url": "https://cloud.google.com/architecture/reference-patterns/overview", "abstract": "# Cloud Architecture Center - Networking for internet-facing application delivery: Reference architectures\nLast reviewed 2023-11-13 UTC\nThis document is part of a series that describes networking and security architectures for enterprises that are migrating data center workloads to Google Cloud.\nThe series consists of the following documents:\n- [Designing networks for migrating enterprise workloads: Architectural approaches](/architecture/network-architecture) \n- [Networking for secure intra-cloud access: Reference architectures](/architecture/network-secure-intra-cloud-access) \n- Networking for internet-facing application delivery: Reference architectures (this document)\n- [Networking for hybrid and multi-cloud workloads: Reference architectures](/architecture/network-hybrid-multicloud) \nGoogle offers a set of products and capabilities that make it easy to help secure and scale your most critical internet-facing applications. Figure 1 shows an architecture that uses Google Cloud services to deploy a web application with multiple tiers.\n**Figure 1** . Typical multi-tier web application deployed on Google Cloud.\n**Note:** You need to consider limitations of using Application Load Balancers. For more information, see the [Limitations](/load-balancing/docs/https#limitations) section in the \"External Application Load Balancer overview\" documentation.\n", "content": "## Lift-and-shift architecture\nAs internet-facing applications move to the cloud, they must be able to scale, and they must have security controls and visibility that are equivalent to those controls in the on-premises environment. You can provide these controls by using network virtual appliances that are available in the marketplace.\n**Figure 2** . Application deployed with an appliance-based external load balancer.\nThese virtual appliances provide functionality and visibility that is consistent with your on-premises environments. When you use a network virtual appliance, you deploy the software appliance image by using autoscaled managed instance groups. It's up to you to monitor and manage the health of the VM instances that run the appliance, and you also maintain software updates for the appliance.\nAfter you perform your initial shift, you might want to transition from self-managed network virtual appliances to managed services. Google Cloud offers a number of managed services that make it easy to deliver applications at scale.\nFigure 2 shows a network virtual appliance configured as the frontend of a web tier application. For a list of partner ecosystem solutions, see the [Google Cloud Marketplace](https://console.cloud.google.com/marketplace/browse?filter=category:networking) page in the Google Cloud console.\n## Hybrid services architecture\nGoogle Cloud offers the following approaches to make it easy to manage internet-facing applications at scale:\n- Use Google's global network of anycast DNS name servers that provide high availability and low latency to translate requests for domain names into IP addresses.\n- Use Google's global fleet of external Application Load Balancers to route traffic to an application that's hosted inside Google Cloud, hosted on-premises, or hosted on another public cloud. These load balancers scale automatically with your traffic and ensure that each request is directed to a healthy backend. By setting up [hybrid connectivity network endpoint groups](/load-balancing/docs/negs/hybrid-neg-concepts) , you can bring the benefits of external Application Load Balancer networking capabilities to services that are running on your existing infrastructure outside of Google Cloud. The on-premises network or the other public cloud networks are privately connected to your Google Cloud network through a VPN tunnel or through Cloud Interconnect.\n- Use other network edge services such as Cloud CDN to distribute content, Google Cloud Armor to protect your content, and Identity-Aware Proxy (IAP) to control access to your services.Figure 3 shows hybrid connectivity that uses external Application Load Balancer. **Figure 3** . Hybrid connectivity configuration using external Application Load Balancer and network edge services.Figure 4 shows a different connectivity option\u2014using hybrid connectivity network endpoint groups. **Figure 4** . External Application Load Balancer configuration using hybrid connectivity network endpoint groups.\n- Use a Application Load Balancer (HTTP/HTTPS) to route requests based on their attributes, such as the HTTP uniform resource identifier (URI). Use a proxy Network Load Balancer to implement TLS offload, TCP proxy, or support for external load balancing to backends in multiple regions. Use a passthrough Network Load Balancer to preserve client source IP addresses, avoid the overhead of proxies, and to support additional protocols like UDP, ESP, and ICMP.\n- Protect your service with [Google Cloud Armor](/armor) . This product is an edge DDoS defense and WAF security product that's available to all services that are accessed through a global external Application Load Balancer.\n- Use [Google-managed SSL certificates](/load-balancing/docs/ssl-certificates/google-managed-certs) . You can reuse certificates and private keys that you already use for other Google Cloud products. This eliminates the need to manage separate certificates.\n- Enable caching on your application to take advantage of the distributed application delivery footprint of Cloud CDN.\n- Use network virtual appliances to inspect and filter both north-south (to and from the internet) and east-west (to and from on-premises network or VPC networks) traffic, as shown in figure 5. **Figure 5** . Configuration of highly available network virtual appliance using an internal passthrough Network Load Balancer and VPC Network Peering for inspecting traffic.\n- Use Cloud IDS to detect threats in north-south traffic, as shown in figure 6. **Figure 6** . Cloud IDS configuration to mirror and inspect all internet and internal traffic.## Zero Trust Distributed Architecture\nYou can expand Zero Trust Distributed Architecture to include application delivery from the internet. In this model, the Google external Application Load Balancer provides global load balancing across GKE clusters that have Anthos Service Mesh meshes in distinct clusters. For this scenario, you adopt a composite ingress model. The first-tier load balancer provides cluster selection, and then an Anthos Service Mesh-managed ingress gateway provides cluster-specific load balancing and ingress security. An example of this multi-cluster ingress is the [Cymbal Bank reference architecture](/architecture/enterprise-application-blueprint/cymbal-bank) as described in the enterprise application blueprint. For more information about Anthos Service Mesh edge ingress, see [From edge to mesh: Exposing service mesh applications through GKE Ingress](/architecture/exposing-service-mesh-apps-through-gke-ingress) .\nFigure 7 shows a configuration in which a external Application Load Balancer directs traffic from the [internet to the service mesh](/architecture/exposing-service-mesh-apps-through-gke-ingress) through an [ingress gateway](/architecture/exposing-service-mesh-apps-through-gke-ingress) . The gateway is a dedicated proxy in the service mesh.\n**Figure 7** . Application delivery in a zero-trust microservices environment.\n## What's next\n- [Networking for secure intra-cloud access: Reference architectures](/architecture/network-secure-intra-cloud-access) .\n- [Networking for hybrid and multi-cloud workloads: Reference architectures](/architecture/network-hybrid-multicloud) .\n- [Migration to Google Cloud](/solutions/migration-to-gcp-getting-started) can help you to plan, design, and implement the process of migrating your workloads to Google Cloud.\n- [Landing zone design in Google Cloud](/architecture/landing-zones) has guidance for creating a landing zone network.\n- For more reference architectures, diagrams, and best practices, explore the [Cloud Architecture Center](/architecture) .", "guide": "Cloud Architecture Center"}