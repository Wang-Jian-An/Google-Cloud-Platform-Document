{"title": "Cloud Architecture Center - Logging on-premises resources with BindPlane", "url": "https://cloud.google.com/architecture/reference-patterns/overview", "abstract": "# Cloud Architecture Center - Logging on-premises resources with BindPlane\nThis document is one part of a two-part series on extending [Cloud Logging](/logging) and [Cloud Monitoring](/monitoring) to include on-premises infrastructure and apps.\n- Logging (this document): Read about how Logging supports logging from on-premises resources.\n- [Monitoring](/architecture/monitoring-on-premises-resources-with-bindplane) : Read about how Monitoring supports monitoring on-premises resources.\nYou might consider using Logging and Monitoring for logging and monitoring of your on-premises resources for the following reasons:\n- You want a temporary solution while you move infrastructure to Google Cloud and you want to log and monitor your on-premises resources until they're decommissioned.\n- You might have a diverse computing environment with multiple clouds and on-premises resources.\nIn either case, with the Logging and Monitoring APIs and [BindPlane](https://observiq.com/solutions/bindplane-comparison/) you can gain visibility into your on-premises resources. This document is intended for DevOps practitioners, managers, and executives who are interested in a logging strategy for resources in Google Cloud and their remaining on-premises infrastructure and apps.\n", "content": "## Ingesting logs with Logging\nYou can get logs into Logging by using the API in two supported ways:\n- Use [BindPlane](https://observiq.com/solutions/bindplane-comparison/) from observIQ to ingest logs from your on-premises or other cloud sources.\n- Use the Cloud Logging API directly from your app or by using a custom agent.\n### Using BindPlane to ingest Logging logs\nThe following diagram shows the architecture of how BindPlane ingests logs and then how those logs are ingested into Logging.\nBindPlane enables users to remotely deploy and manage collectors on the hosts they want to gather logs from. For more information, read about [the architecture of BindPlane](https://docs.bindplane.observiq.com/docs) . This option requires the least amount of effort to deploy because it requires configuration to set up rather than development.\nAdvantages:\n- Requires configuration, not development.\n- Included in the cost of using [Logging](/stackdriver/pricing) .\n- Is a supported configuration by Logging product and support.\n- Can extend to logs not provided by the default configuration.\nDisadvantages:\n- Requires the use of a third-party tool.\n- Might need to provide a custom configuration if the log source isn't provided by default. The provided list of logs is available in [Sources](https://docs.bindplane.observiq.com/docs/sources) .\n### Using the Logging API directly\nThe following diagram shows the architecture of how logs are collected by instrumentation and ingested into Logging.\nUsing the APIs directly means that you need to instrument your applications to send logs directly to the API or develop a custom agent to send logs to the API. This is the option that requires the highest level of effort because it requires development effort.\nAdvantages:\n- Provides flexibility because you can implement the instrumentation with client logging libraries.\nDisadvantages:\n- Requires separate solution for infrastructure logs, such as a custom agent.\n- Requires code instrumentation, which might mean higher cost to implement.\n- Requires the use of batching and other scalable ingestion techniques for proper ingestion performance.\n- Support is provided for the Logging API only, not custom-developed code.## Using BindPlane\nThis document covers using the BindPlane tool from observIQ to ingest logs into Logging. Because it's included in the cost of Logging, BindPlane doesn't require development and provides a product-supported solution.\n### Agents, sources, and destinations\nFor detailed information about agents, sources, and destinations, see the BindPlane [QuickstartGuide](https://docs.bindplane.observiq.com/docs/getting-started) .\n### Example use case\nEnterprise customers use BindPlane to ingest logs in the following on-premises logging scenarios:\n- Custom parsing and filtering of log data from custom application logs.\n- Collection of operating-system events from Linux or Windows virtual machines.\n- Ingestion of syslog streams from network or other compatible devices.\n- Collection of Kubernetes system and application logs.\n### Send logs from on-premises to Logging\nAfter you set up BindPlane and start sending logs, those logs are sent to Logging. To view, process, and export logs, go to the [Google Cloud console](https://console.cloud.google.com/logs/query) . The logs are listed as `generic_node` or `generic_task` resource types. For more information about the labels included in each resource type, see the [Logging resource list](/logging/docs/api/v2/resource-list) .\nCloud Logging supports non-Cloud Logging logs through the use of two resource types:\n- **Generic node** : Identifies a machine or other computational resource for which no other resource type is applicable. The label values must uniquely identify the node.\n- **Generic task** : Identifies an app process for which no other resource is applicable, such as a process scheduled by a custom orchestration system. The label values must uniquely identify the task.\n### View logs in Logging\nIn the Google Cloud console, **Generic Node** appears as a resource type in the list on the Logging page.\nThe following logs were captured as the `generic_node` resource type and appear in Logging.\nThe following log entry uses a [structured logging](/logging/docs/structured-logging) format, which provides a richer format for searching the logs because the log payload is stored as a `jsonPayload` . The structured logging format makes logs more accessible because you can use the fields in the payload as a part of the search. The BindPlane logging agent provides a mapping from the original log entry to the structured log in Logging.\n## Conclusion\nWith logs available in Logging, you can take advantage of the full use of the Logging features. Logs appear in the Google Cloud console. You can export logs with Logging exports and use them to create metrics and alerts in Monitoring by using [logs-based metrics](/logging/docs/logs-based-metrics) .\n## What's next\n- [Logging and Monitoring](/stackdriver) \n- [BindPlane set-up instructions for Cloud Monitoring and Logging](https://docs.bindplane.observiq.com/docs/google-cloud) \n- [Set up logs-based metrics in Logging](/logging/docs/logs-based-metrics) \n- Explore reference architectures, diagrams, and best practices about Google Cloud. Take a look at our [Cloud Architecture Center](/architecture) .", "guide": "Cloud Architecture Center"}