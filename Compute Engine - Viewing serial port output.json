{"title": "Compute Engine - Viewing serial port output", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Viewing serial port output\nA virtual machine (VM) instance has four virtual serial ports. The instance's operating system, BIOS, and other system-level entities often write output to the serial ports, which makes serial port output useful for troubleshooting crashes, failed boots, startup issues, or shutdown issues.\nThis page describes methods to serial port output, including using Cloud Logging to retain serial port output even after an instance is stopped or deleted. If you need to commands to a serial port while an instance is running, see [Interacting with the serial console](/compute/docs/instances/interacting-with-serial-console) .\nSerial port output is accessible through the Google Cloud console, the gcloud CLI, and REST, but only while the VM instance is running. Logs are limited to the most recent 1\u00a0MB of output per port.\nIf you enable serial port output logging, Cloud Logging [provides the first50\u00a0gibibytes (GiB) per month of logging for free](/stackdriver/pricing) and retains logs for [30 days](/logging/quotas#logs_retention_periods) .\n", "content": "## Before you begin\n- If you want to log serial port output in Cloud Logging, familiarize yourself with [Cloud Logging](/logging) .\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\nTo use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```## Enabling and disabling serial port output logging\nYou can control whether your instances send serial port output to Cloud Logging by [setting project- or instance-level metadata](#setting_project_and_instance_metadata) . You can also disable the feature for all of the users in your organization by [setting an organization policy](#setting_an_organization_policy) .\n**Note:** Serial port output is useful for troubleshooting VM crashes, failed boots, and startup or shutdown issues. Disabling these logs might limit Google's ability to troubleshoot such issues.\n### Setting project and instance metadata\nBy default, serial port output logging to Cloud Logging is disabled. If serial port output logging to Cloud Logging is not [constrained for your organization](#setting_an_organization_policy) , then you can enable or disable it for projects and for individual VM instances by setting the `serial-port-logging-enable` metadata entry to `true` or `false` .\nIf you set a project-wide metadata entry, all VM instances in the project inherit that setting implicitly. If you set an instance metadata entry, the metadata entry is enabled for that VM only, regardless of the project setting.\nYou can set a metadata entry by using the Google Cloud console, the gcloud CLI, or the Compute Engine API. For more information, see [Setting custom metadata](/compute/docs/metadata/setting-custom-metadata) .\nFor example, the following gcloud CLI command enables serial port output logging to Cloud Logging for your project:\n```\ngcloud compute project-info add-metadata \\\n --metadata serial-port-logging-enable=true\n```\nSimilarly, the following gcloud CLI command enables serial port output logging to Cloud Logging for a specific instance instead:\n```\ngcloud compute instances add-metadata INSTANCE_NAME \\\n --metadata serial-port-logging-enable=true\n```\nTo disable serial port output logging to Cloud Logging, set `serial-port-logging-enable` to `false` :\n```\ngcloud compute instances add-metadata INSTANCE_NAME \\\n --metadata serial-port-logging-enable=false\n```\nFrom within Cloud Logging, you can [create an exclusion filter](/logging/docs/exclusions#exclusion-filters) to remove specific serial port entries from the Logs Explorer. For example, with a project-wide metadata entry that is set to `serial-port-logging-enable=true` , you can disable serial port output logging for specific VM instances by using an advanced filter:\n```\nlogName = \"projects/PROJECT_ID/logs/serialconsole.googleapis.com%2Fserial_port_1_output\"\nresource.type = \"gce_instance\"\nresource.labels.instance_id != \"INSTANCE_1_ID\"\nresource.labels.instance_id != \"INSTANCE_2_ID\"\n```\n### Setting an organization policy\nYou can disable serial port output logging to Cloud Logging for your entire organization by setting an [Organization Policy](/resource-manager/reference/rest/v1/Policy) , which constrains certain configurations of Google Cloud resources. Specifically, set the following boolean constraint: `constraints/compute.disableSerialPortLogging` . For more information, see [Creating and managing organization policies](/resource-manager/docs/organization-policy/creating-managing-policies#creating_and_editing_policies) .\nDisabling serial port logging by setting `constraints/compute.disableSerialPortLogging` to `true` is not retroactive. Existing VM instances with a metadata entry that enables serial port logging to Cloud Logging continue to log to Cloud Logging unless you [reset the metadata](#setting_project_and_instance_metadata) for those instances.\nAfter setting this organization constraint to `true` , you cannot set instance or project metadata to enable serial port output logging to Cloud Logging for any instances within the organization.\n## Viewing serial port output\n- In the Google Cloud console, go to the **VM instances** page. [Go to the VM instances page](https://console.cloud.google.com/compute/instances) \n- Select the VM instance for which you want to view serial port output.\n- Under **Logs** , click **Serial port 1** , **2** , **3** , or **4** . System-level entities typically use the first serial port (port 1), which is also known as the [serial console](/compute/docs/instances/interacting-with-serial-console) .\nUse the [gcloud compute instances get-serial-port-output command](/sdk/gcloud/reference/compute/instances/get-serial-port-output) .\n```\ngcloud compute instances get-serial-port-output INSTANCE_NAME \\\n --port PORT \\\n --start START \\\n --zone ZONE\n```\nReplace the following:- ``: the name of the instance.\n- ``: the number of the port (`1`,`2`,`3`, or`4`) for which you want to view output. System-level entities typically use the first serial port (port 1), which is also known as the serial console. By default, the output of the first serial port is returned.\n- ``: the byte index (zero-based) of the first byte you want returned. Use this flag if you want to continue getting the output from a previous request that was too long to return in one attempt.\n- ``: the zone of your instance.\nIn the API, create a `get` request to the [instances.getSerialPortOutput method](/compute/docs/reference/rest/v1/instances/getSerialPortOutput) .\n```\nGET https://compute.googleapis.com/compute/projects/PROJECT_ID/zones/ZONE/instances/INSTANCE_NAME/serialPort\n```- [Enable serial port logging to Cloud Logging](#enable-stackdriver) .\n- Go to the **VM instances** page. [Go to the VM instances page](https://console.cloud.google.com/compute/instances) \n- Select the VM instance for which you want to view startup agent logs.\n- Under **Logs** , click **Cloud Logging** to view Cloud Logging logs.\n- Expand the **All logs** drop-down menu and select the serial port output that you want to see. System-level entities typically use the first serial port (port 1), which is also known as the serial console. If a port does not appear in the drop-down menu, it has no available output.\n- Optionally, expand the **Any log level** drop-down menu to mute logs that are below the severity level that you want to see. For example, if you select the \"Info\" log level, you will mute \"Debug\" log entries. \"Debug\" entries are typically used only by the BIOS at boot time.\nFor more information, including information about filtering, see [Using the Logs Explorer](/logging/docs/view/logs-explorer-interface) .\n## Handling non-UTF8 characters\nSerial port output is escaped by using the open source [Abseil](https://github.com/abseil) C++ library's [CHexEscape() method](https://github.com/abseil/abseil-cpp/blob/master/absl/strings/escaping.h#L92) , so non-UTF8 characters are encoded as hex strings. You can use the corresponding [CUnescape() method](https://github.com/abseil/abseil-cpp/blob/master/absl/strings/escaping.h#L38) to get the exact output that was sent to the serial port.\n## Common serial port errors\nThe following are examples of common errors you might encounter in serial port output.\n### Error configuring IPv6\nThe following error might occur in OS journal logs when IPv6 isn't configured:\n```\nERROR addresses.go:301 Error configuring IPv6: Internet Systems Consortium DHCP Client 4.2.5\n```\nIgnore this error. This error doesn't affect your VM.", "guide": "Compute Engine"}