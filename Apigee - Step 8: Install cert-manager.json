{"title": "Apigee - Step 8: Install cert-manager", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 8: Install cert-manager\nThis step explains how to download and install [cert-manager](https://cert-manager.io/docs/) , required for Apigee hybrid to operate.\n**Installations on Anthos** You do not need to install cert-manager if you are performing a fresh installation on one of the following Anthos platforms:- Anthos on-premises - (VMware)\n- Anthos on Bare Metal\nAnthos comes with its own version of cert-manager. Apigee can use this Anthos version of cert-manager.  If it is installed in a namespace other than `cert-manager` , you will need to include  the namespace with the [certManager.namespace](/apigee/docs/hybrid/v1.11/config-prop-ref#certmanager) property in your overrides file.  For more information about Anthos and cert-manager, see [Conflicting  cert-manager installation](/anthos/clusters/docs/on-prem/1.12/known-issues#conflicting-cert-manager-installation) . **Installations on OpenShift** If you are installing Apigee hybrid on OpenShift, install cert-manager by following the  instructions in [Installation](https://cert-manager.io/docs/installation/) in the cert-manager documentation.See a [Known Issue about cert-manager version 1.10 on OpenShift](https://cloud.google.com/apigee/docs/release/known-issues#271689008) .\n", "content": "## \n Install cert-manager\n- Use the following command to install cert-manager v1.11.1 from GitHub.```\nkubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.1/cert-manager.yaml\n```You should see a response that the cert-manager namespace and several cert-manager resources  have been created. For example:```\ncustomresourcedefinition.apiextensions.k8s.io/certificaterequests.cert-manager.io configured\ncustomresourcedefinition.apiextensions.k8s.io/certificates.cert-manager.io configured\n...\nmutatingwebhookconfiguration.admissionregistration.k8s.io/cert-manager-webhook configured\nvalidatingwebhookconfiguration.admissionregistration.k8s.io/cert-manager-webhook configured\n```\n- Use the following command to verify the successful creation of cert-manager namespace and its corresponding components:```\nkubectl get all -n cert-manager -o wide\n```Your output should be similar to the following example. You should see pods for `cert-manager` , `cert-manager-cainjector` , and `cert-manager-webhook` .```\n NAME           READY STATUS RESTARTS AGE  IP   NODE         NOMINATED NODE READINESS GATES\n pod/cert-manager-abcd1234-7hkt9    1/1  Running 0   35s 10.20.x.x gke-hybrid-on-apigee-data-abcd1234-3d54    \n pod/cert-manager-cainjector-abcd1234-6lb4k 1/1  Running 0   35s 10.20.x.x gke-hybrid-apigee-runtime-abcd1234-5hmn    \n pod/cert-manager-webhook-abcd1234-c8bg9  1/1  Running 0   35s 10.20.x.x gke-hybrid-apigee-runtime-abcd1234-fk39    \n NAME       TYPE  CLUSTER-IP  EXTERNAL-IP PORT(S) AGE SELECTOR\n service/cert-manager   ClusterIP 10.24.x.x    9402/TCP 35s app.kubernetes.io/component=controller,app.kubernetes.io/instance=cert-manager,app.kubernetes.io/name=cert-manager\n service/cert-manager-webhook ClusterIP 10.24.x.x    443/TCP 35s app.kubernetes.io/component=webhook,app.kubernetes.io/instance=cert-manager,app.kubernetes.io/name=webhook\n NAME          READY UP-TO-DATE AVAILABLE AGE CONTAINERS    IMAGES            SELECTOR\n deployment.apps/cert-manager    1/1  1   1   35s cert-manager-controller quay.io/jetstack/cert-manager-controller:v1.11.0 app.kubernetes.io/component=controller,app.kubernetes.io/instance=cert-manager,app.kubernetes.io/name=cert-manager\n deployment.apps/cert-manager-cainjector 1/1  1   1   35s cert-manager-cainjector quay.io/jetstack/cert-manager-cainjector:v1.11.0 app.kubernetes.io/component=cainjector,app.kubernetes.io/instance=cert-manager,app.kubernetes.io/name=cainjector\n deployment.apps/cert-manager-webhook  1/1  1   1   35s cert-manager-webhook  quay.io/jetstack/cert-manager-webhook:v1.11.0  app.kubernetes.io/component=webhook,app.kubernetes.io/instance=cert-manager,app.kubernetes.io/name=webhook\n NAME            DESIRED CURRENT READY AGE CONTAINERS    IMAGES            SELECTOR\n replicaset.apps/cert-manager-abcd1234    1   1   1  35s cert-manager-controller quay.io/jetstack/cert-manager-controller:v1.11.0 app.kubernetes.io/component=controller,app.kubernetes.io/instance=cert-manager,app.kubernetes.io/name=cert-manager,pod-template-hash=abcd1234\n replicaset.apps/cert-manager-cainjector-abcd1234  1   1   1  35s cert-manager-cainjector quay.io/jetstack/cert-manager-cainjector:v1.11.0 app.kubernetes.io/component=cainjector,app.kubernetes.io/instance=cert-manager,app.kubernetes.io/name=cainjector,pod-template-hash=abcd1234\n replicaset.apps/cert-manager-webhook-abcd1234  1   1   1  35s cert-manager-webhook  quay.io/jetstack/cert-manager-webhook:v1.11.0  app.kubernetes.io/component=webhook,app.kubernetes.io/instance=cert-manager,app.kubernetes.io/name=webhook,pod-template-hash=abcd1234\n```## \n Summary\nYou now have cert-manager installed, and you are ready to install the Apigee hybrid custom resource definitions (CRDs).\n## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled [1](/apigee/docs/hybrid/v1.11/helm-install-create-cluster) If the button's step matches the current step in the process, make the button disabled [2](/apigee/docs/hybrid/v1.11/helm-install-download-charts) If the button's step matches the current step in the process, make the button disabled [3](/apigee/docs/hybrid/v1.11/helm-install-create-namespace) If the button's step matches the current step in the process, make the button disabled [4](/apigee/docs/hybrid/v1.11/helm-install-service-accounts) If the button's step matches the current step in the process, make the button disabled [5](/apigee/docs/hybrid/v1.11/helm-install-create-tls-certificates) If the button's step matches the current step in the process, make the button disabled [6](/apigee/docs/hybrid/v1.11/helm-install-create-overrides) If the button's step matches the current step in the process, make the button disabled [7](/apigee/docs/hybrid/v1.11/helm-install-enable-synchronizer-access) If the button's step matches the current step in the process, make the button disabled If the button's step matches the next step [8](/apigee/docs/hybrid/v1.11/helm-install-cert-manager) If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 9: Install the CRDs](/apigee/docs/hybrid/v1.11/helm-install-crds) If the button's step matches the current step in the process, make the button disabled [10](/apigee/docs/hybrid/v1.11/helm-install-check-cluster) If the button's step matches the current step in the process, make the button disabled [11](/apigee/docs/hybrid/v1.11/helm-install-helm-charts) If the button's step matches the current step in the process, make the button disabled [12](/apigee/docs/hybrid/v1.11/helm-install-workload-identity)", "guide": "Apigee"}