{"title": "Apigee - Enabling Workload Identity with apigeectl", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Enabling Workload Identity with apigeectl\nThis topic explains how to enable Workload Identity for Apigee hybrid using `apigeectl` .\nIf you are using Helm charts to install and manage Apigee hybrid, see [Enabling Workload Identity with Helm charts](/apigee/docs/hybrid/v1.11/enable-workload-identity-helm) .\n**Note:** Apigee hybrid v.1.11 only supports Workload Identity federation on GKE.\n", "content": "## Overview\nWorkload Identity is a way for applications running within GKE (Google Kubernetes Engine) to access Google Cloud services. For overviews of Workload Identity, see:\n- [ Introducing Workload Identity: Better authentication for your GKE applications](https://cloud.google.com/blog/products/containers-kubernetes/introducing-workload-identity-better-authentication-for-your-gke-applications) \n- [Using Workload Identity](/kubernetes-engine/docs/how-to/workload-identity) \nA Google Cloud IAM service account is an identity that an application can use to make requests to Google APIs. These service accounts are referred to as GSA (Google Service Accounts) in the document. For more information about GSAs, see [Service accounts](/iam/docs/service-accounts) .\nSeparately, Kubernetes also has the concept of service accounts. A service account provides an identity for processes that run in a Pod. Kubernetes service accounts are Kubernetes resources, while Google service accounts are specific to Google Cloud. For information on Kubernetes service accounts, see [ Configure Service Accounts for Pods](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/) in the Kubernetes documentation.\nWith Apigee hybrid 1.4 and later, Apigee creates and uses a Kubernetes service account for each type of component. Enabling Workload Identity allows the hybrid components to interact with the Kubernetes service accounts.\n### Google service accounts in Apigee hybrid without Workload Identity\nWithout using Workload Identity, you must link the Google service accounts to each component in your overrides.yaml file with either a reference to a cert file or a Kubernetes secret. For example:\n- Cert files:```\nwatcher:\n serviceAccountPath: ./apigee-org/my-hybrid-project-apigee-watcher.json\n```See:| 0                                                             | 1                                        |\n|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| cassandra.backup.serviceAccountPath cassandra.restore.serviceAccountPath connectAgent.serviceAccountPath diagnostic.serviceAccountPath envs[].serviceAccountPaths.runtime envs[].serviceAccountPaths.synchronizer envs[].serviceAccountPaths.udca | logger.serviceAccountPath mart.serviceAccountPath metrics.serviceAccountPath synchronizer.serviceAccountPath udca.serviceAccountPath watcher.serviceAccountPath |\n- Kubernetes secret:```\nwatcher:\n serviceAccountRef: my-watcher-k8s-secret\n```See:| 0                                                           | 1                                       |\n|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------|\n| cassandra.backup.serviceAccountRef cassandra.restore.serviceAccountRef connectAgent.serviceAccountRef diagnostic.serviceAccountRef envs[].serviceAccountRefs.runtime envs[].serviceAccountRefs.synchronizer envs[].serviceAccountRefs.udca | logger.serviceAccountRef mart.serviceAccountRef metrics.serviceAccountRef synchronizer.serviceAccountRef udca.serviceAccountRef watcher.serviceAccountRef |\n### Environment variables used in these procedures\nThese procedures make use of the following environment variables. Either set these in your command shell or replace them in the code samples with the actual values:\n- **APIGEECTL_HOME** : The directory where you have installed`apigeectl`.\n- **CLUSTER_LOCATION** : The region or zone of your cluster, for example:`us-west1`.\n- **ENV_NAME** : Then name of the Apigee environment.\n- **HYBRID_FILES** : Your hybrid files directory, for example`` `/hybrid-files`.\n- **ORG_NAME** : The name of your Apigee organization.\n- **PROJECT_ID** : The ID of your Google Cloud project.\n- **NAMESPACE** : Your Apigee namespace (usually \"apigee\").\nVerify the environment variables:\n```\necho $PROJECT_ID\necho $ORG_NAME\necho $ENV_NAME\necho $NAMESPACE\necho $CLUSTER_LOCATION\necho $APIGEECTL_HOME\necho $HYBRID_FILES\n```\nInitialize any of the variables you need:\n```\nexport PROJECT_ID=my-project-id\nexport ORG_NAME=$PROJECT_ID\nexport ENV_NAME=my-environment-name\nexport NAMESPACE=apigee\nexport CLUSTER_LOCATION=my-cluster-location\nexport APIGEECTL_HOME=hybrid-base-directory/apigeectl\nexport HYBRID_FILES=hybrid-base-directory/hybrid-files\n```\n## Workload Identity and service account key files\nWhen running Apigee hybrid on GKE, the standard practice is to create and download private keys ( `.json` files) for each of the service accounts. When using Workload Identity, you do not need to download service account private keys and add them to GKE clusters.\nIf you have downloaded service account key files as part of your Apigee hybrid installation, you can delete them after enabling Workload Identity. In most installations, they reside in the `` `/hybrid-files/service-accounts/` directory.\n## Enable Workload Identity for Apigee hybrid\nTo begin, follow the instructions in [Prepare to enable Workload Identity](#prepare) to update node pools and initialize variables prior to enabling Workload Identity.\nThen, follow the instructions in [Set workloadIdentityEnabled: true and create service accounts](#enable-fresh-install) to enable Workload Identity on your Apigee hybrid installation.\n### Prepare to enable Workload Identity\nBefore starting the install process, follow the steps in this section.\n- Set the project to the project you're modifying:```\ngcloud config set project $PROJECT_ID\n```\n- Get the`gcloud`credentials of the cluster on which you are enabling Workload  Identity with the following command:```\ngcloud container clusters get-credentials ${CLUSTER_NAME} \\\n --region ${CLUSTER_LOCATION} \\\n --project ${PROJECT_ID}\n``` **Note:** If you created a zonal cluster instead of a regional cluster,  get the credentials with the following command:```\ngcloud container clusters get-credentials ${CLUSTER_NAME} \\\n --zone ${CLUSTER_LOCATION} \\\n --project ${PROJECT_ID}\n```\n- Verify that Workload Identity is enabled for the GKE cluster running Apigee with the following  command:```\ngcloud container clusters describe $CLUSTER_NAME --region $CLUSTER_LOCATION --project $PROJECT_ID\n``` **Note:** For zonal clusters use:```\ngcloud container clusters describe $CLUSTER_NAME --zone $CLUSTER_LOCATION --project $PROJECT_ID\n```The output should include something like the following:```\n\u2026\u00a0 \u2026\u00a0 status: RUNNING\u00a0 subnetwork: default\u00a0 workloadIdentityConfig:\u00a0 \u00a0 workloadPool: my-project-id.svc.id.goog\n```If needed, enable workload identity on the cluster. This operation can take  up to 30 minutes:```\n gcloud container clusters update $CLUSTER_NAME \\\n --workload-pool=$PROJECT_ID.svc.id.goog \\\n --project $PROJECT_ID \\\n --region $CLUSTER_LOCATION\n``` **Note:** If you created a zonal cluster instead of a regional   cluster, use the`--zone`argument instead of`--region`as in the   following command:```\n gcloud container clusters update $CLUSTER_NAME \\\n --workload-pool=$PROJECT_ID.svc.id.goog \\\n --zone $CLUSTER_LOCATION \\\n --project $PROJECT_ID\n```For more information, see [Enable Workload Identity](/kubernetes-engine/docs/how-to/workload-identity#enable) .\n- Ensure Workload Identity is enabled on each node pool.- List your node pools with the following command:```\ngcloud container node-pools list \\\n --cluster $CLUSTER_NAME \\\n --region $CLUSTER_LOCATION \\\n --project $PROJECT_ID\n```Your output should look something like:```\n NAME   MACHINE_TYPE DISK_SIZE_GB NODE_VERSION\n apigee-runtime e2-standard-4 100   1.23.12-gke.100\n apigee-data  e2-standard-4 100   1.23.12-gke.100\n```\n- Ensure Workload Identity is enabled per node pool using the following command for each   node pool:```\ngcloud container node-pools update NODE_POOL_NAME \\\n --cluster=$CLUSTER_NAME \\\n --region $CLUSTER_LOCATION \\\n --project $PROJECT_ID \\\n --workload-metadata=GKE_METADATA\n```Where is the name of each node pool.\n### Verify or create Google service accounts\nGoogle service accounts are created for many Apigee hybrid components during installation. Use this procedure to verify the Google service accounts and create any that are needed.\n- Check the names of the Google service accounts for your project with the following command:```\ngcloud iam service-accounts list --project $PROJECT_ID\n```Your output should look something like:\nFor non-production environments:\n```\nDISPLAY NAME   EMAIL              DISABLED\napigee-cassandra  apigee-cassandra@my_project_id.iam.gserviceaccount.com  False\napigee-logger  apigee-logger@my_project_id.iam.gserviceaccount.com  False\napigee-mart   apigee-mart@my_project_id.iam.gserviceaccount.com   False\napigee-metrics  apigee-metrics@my_project_id.iam.gserviceaccount.com  False\napigee-runtime  apigee-runtime@my_project_id.iam.gserviceaccount.com  False\napigee-synchronizer apigee-synchronizer@my_project_id.iam.gserviceaccount.com False\napigee-udca   apigee-udca@my_project_id.iam.gserviceaccount.com   False\napigee-watcher  apigee-watcher@my_project_id.iam.gserviceaccount.com  False\n```For non-production environments:\n```\nDISPLAY NAME   EMAIL              DISABLED\napigee-non-prod  apigee-non-prod@my_project_id.iam.gserviceaccount.com  False\n```\n **Tip:** If you have custom names for your service accounts that do not  correspond easily with the names of the Apigee components, you can determine the role of each  service account by checking the roles assigned to it and comparing the roles with the roles  recommended in [About service accounts](/apigee/docs/hybrid/v1.11/sa-about#recommended-sas) .Use the following command to check the roles assigned to a service account:```\ngcloud projects get-iam-policy ${PROJECT_ID} \\\n --flatten=\"bindings[].members\" \\\n --format='table(bindings.role)' \\\n --filter=\"SERVICE_ACCOUNT_NAME\"\n```If you need to create the Google service accounts for your project, there are two methods you  can use:- Use the [create-service-account](/apigee/docs/hybrid/v1.11/create-service-account) tool included with apigee in the`apigeectl/tools/`directory. This tool can   create all the service accounts with a single command or let you create them individually.`create-service-account`generates key files for each service   account and downloads them. Using Workload Identity, you will not need these key files. If   you are concerned about the security of these key files, you may want to delete them.   Alternatively you can use`gcloud`to create the service accounts and assign   the appropriate roles to them.\n- Use the`gcloud iam service-accounts create`command to create the service   accounts one at a time and the`gcloud projects add-iam-policy-binding`command   to assign the appropriate roles to each service account. This method requires you to create   each service account individually, but lets you avoid downloading the key files.Use the following command to create a Google service account per component:\nFor non-production environments:\n```\n$APIGEECTL_HOME/tools/create-service-account --env prod --dir $APIGEECTL_HOME/../service-accounts\n```\nThis command will create the following service accounts:- `apigee-cassandra`\n- `apigee-logger`\n- `apigee-mart`\n- `apigee-metrics`\n- `apigee-runtime`\n- `apigee-synchronizer`\n- `apigee-udca`\n- `apigee-watcher`\nFor non-production environments:\n```\n$APIGEECTL_HOME/tools/create-service-account --env non-prod --dir $APIGEECTL_HOME/../service-accounts\n```\nThis command will create a single service accounts, `apigee-non-prod` , with    all the roles assigned needed to manage all Apigee components.\nCreate the following service accounts and assign roles to them.\n **Tip:** If you want to use custom names, change the red service   account name in the code sample to the name you want to use.- **Service account: ** `apigee-cassandra`, **role: ** `roles/storage.objectAdmin`Create the account:```\ngcloud iam service-accounts create apigee-cassandra \\\n --display-name=\"apigee-cassandra\" \\\n --project $PROJECT_ID\n   \n```Assign the role:```\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n --member=\"serviceAccount:apigee-cassandra@$PROJECT_ID.iam.gserviceaccount.com\" \\\n --role=\"roles/storage.objectAdmin\"\n   \n```\n- **Service account: ** `apigee-logger`, **role: ** `roles/logging.logWriter`Create the account:```\ngcloud iam service-accounts create apigee-logger \\\n --display-name=\"apigee-logger\" \\\n --project $PROJECT_ID\n   \n```Assign the role:```\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n --member=\"serviceAccount:apigee-logger@$PROJECT_ID.iam.gserviceaccount.com\" \\\n --role=\"roles/logging.logWriter\"\n   \n```\n- **Service account: ** `apigee-mart`, **role: ** `roles/apigeeconnect.Agent`Create the account:```\ngcloud iam service-accounts create apigee-mart \\\n --display-name=\"apigee-mart\" \\\n --project $PROJECT_ID\n   \n```Assign the role:```\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n --member=\"serviceAccount:apigee-mart@$PROJECT_ID.iam.gserviceaccount.com\" \\\n --role=\"roles/apigeeconnect.Agent\"\n   \n```\n- **Service account: ** `apigee-metrics`, **role: ** `roles/monitoring.metricWriter`Create the account:```\ngcloud iam service-accounts create apigee-metrics \\\n --display-name=\"apigee-metrics\" \\\n --project $PROJECT_ID\n   \n```Assign the role:```\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n --member=\"serviceAccount:apigee-metrics@$PROJECT_ID.iam.gserviceaccount.com\" \\\n --role=\"roles/monitoring.metricWriter\"\n   \n```\n- **Service account: ** `apigee-runtime`, **role: ** Create the account:```\ngcloud iam service-accounts create apigee-runtime \\\n --display-name=\"apigee-runtime\" \\\n --project $PROJECT_ID\n   \n```\n- **Service account: ** `apigee-synchronizer`, **role: ** `roles/apigee.synchronizerManager`Create the account:```\ngcloud iam service-accounts create apigee-synchronizer \\\n --display-name=\"apigee-synchronizer\" \\\n --project $PROJECT_ID\n   \n```Assign the role:```\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n --member=\"serviceAccount:apigee-synchronizer@$PROJECT_ID.iam.gserviceaccount.com\" \\\n --role=\"roles/apigee.synchronizerManager\"\n   \n```\n- **Service account: ** `apigee-udca`, **role: ** `roles/apigee.analyticsAgent`Create the account:```\ngcloud iam service-accounts create apigee-udca \\\n --display-name=\"apigee-udca\" \\\n --project $PROJECT_ID\n   \n```Assign the role:```\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n --member=\"serviceAccount:apigee-udca@$PROJECT_ID.iam.gserviceaccount.com\" \\\n --role=\"roles/apigee.analyticsAgent\"\n   \n```\n- **Service account: ** `apigee-watcher`, **role: ** `roles/apigee.runtimeAgent`Create the account:```\ngcloud iam service-accounts create apigee-watcher \\\n --display-name=\"apigee-watcher\" \\\n --project $PROJECT_ID\n   \n```Assign the role:```\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n --member=\"serviceAccount:apigee-watcher@$PROJECT_ID.iam.gserviceaccount.com\" \\\n --role=\"roles/apigee.runtimeAgent\"\n   \n```\n### \n Set workloadIdentityEnabled: true and create service accounts\n`apigeectl` creates Kubernetes service accounts for each Apigee hybrid component when you set `workloadIdentityEnabled: true` in your overrides file and apply the changes.\n- Add the bolded line below to your`overrides.yaml`file under the`gcp`stanza. This enables Workload Identity for your installation  and triggers`apigeectl`to create the Kubernetes service accounts when you apply the  configuration:```\ngcp:\n projectID: \"my-project-id\"\n name: \"my-project-id\"\n region: \"analytics-region\"\n workloadIdentityEnabled: true\n```\n- Add the bolded lines below to your`overrides.yaml`file under the`cassandra`stanza. This triggers the creation of the`apigee-cassandra-backup`Kubernetes service account:```\ncassandra:\n ...\n backup:\n enabled: true\n```\n- Apply the changes with`apigeectl`with the`--restore`flag:```\n$APIGEECTL_HOME/apigeectl apply -f overrides/overrides.yaml --restore\n``` **Note:** The`--restore`flag triggers creation of the`apigee-cassandra-restore`Kubernetes service account.\n- Verify the service accounts with the following command:```\nkubectl get sa -n $NAMESPACE\n```Your output should look something like the following. The Kubernetes service accounts in **bold** are the ones you will need to annotate with your Google service accounts:```\nNAME               SECRETS AGE\napigee-cassandra-backup          1   11m\napigee-cassandra-restore          1   11m\napigee-cassandra-schema-setup-my-project-id-123abcd-sa  1   11m\napigee-cassandra-schema-val-my-project-id-123abcd   1   11m\napigee-cassandra-user-setup-my-project-id-123abcd-sa   1   11m\napigee-connect-agent-my-project-id-123abcd-sa    1   11m\napigee-datastore-default-sa         1   11m\napigee-ingressgateway          1   11m\napigee-ingressgateway-my-project-id-123abcd     1   11m\napigee-ingressgateway-manager        1   11m\napigee-init             1   11m\napigee-mart-my-project-id-123abcd-sa       1   11m\napigee-metrics-sa           1   11m\napigee-mint-task-scheduler-my-project-id-123abcd-sa   1   11m\napigee-redis-default-sa          1   11m\napigee-redis-envoy-default-sa        1   11m\napigee-runtime-my-project-id-env-name-234bcde-sa    1   11m\napigee-synchronizer-my-project-id-env-name-234bcde-sa  1   11m\napigee-udca-my-project-id-123abcd-sa       1   11m\napigee-udca-my-project-id-env-name-234bcde-sa    1   11m\napigee-watcher-my-project-id-123abcd-sa      1   11m\ndefault              1   11m\n \n```\n### Annotate the Kubernetes service accounts with the Google service accounts\nFor each Apigee component annotate the corresponding Kubernetes service accounts with the Google service account for the component.\nYou will have only one instance of each Kubernetes service account for your Apigee org.\n| Component  | Kubernetes Service Account        | Google Service Account |\n|:-----------------|:-------------------------------------------------------|:-------------------------|\n| Cassandra  | apigee-cassandra-backup        | apigee-cassandra   |\n| Cassandra  | apigee-cassandra-restore        | apigee-cassandra   |\n| Cassandra  | apigee-cassandra-schema-setup-my-project-id-num-id1-sa | apigee-cassandra   |\n| Cassandra  | apigee-cassandra-schema-val-my-project-id-num-id1  | apigee-cassandra   |\n| Cassandra  | apigee-cassandra-user-setup-my-project-id-num-id1-sa | apigee-cassandra   |\n| Cassandra  | apigee-datastore-default-sa       | apigee-cassandra   |\n| Apigee Connect | apigee-connect-agent-my-project-id-num-id1-sa   | apigee-mart    |\n| MART    | apigee-mart-my-project-id-num-id1-sa     | apigee-mart    |\n| Metrics   | apigee-metrics-sa          | apigee-metrics   |\n| UDCA (org-level) | apigee-udca-my-project-id-num-id1-sa     | apigee-udca    |\n| Watcher   | apigee-watcher-my-project-id-num-id1-sa    | apigee-watcher   |\nYou will have one instance of each Kubernetes service account for each Apigee environment.\n| Component  | Kubernetes Service Account       | Google Service Account |\n|:-----------------|:------------------------------------------------------|:-------------------------|\n| Apigee Runtime | apigee-runtime-my-project-id-env-name-num-id2-sa  | apigee-runtime   |\n| Synchronizer  | apigee-synchronizer-my-project-id-env-name-num-id2-sa | apigee-synchronizer  |\n| UDCA (env-level) | apigee-udca-my-project-id-env-name-num-id2-sa   | apigee-udca    |\n**IMPORTANT:** If your service account names do not match the default names created by`create-service-account`, in the following commands replace the red service account name with the correct service account name for the component. For example, if your Cassandra service account is named`my-cassandra-accnt-1`, then replace``with that name in the command.\nIn the following commands use the Kubernetes service account names returned by the `kubectl get sa -n $NAMESPACE` command, for example: `apigee-cassandra-schema-val-hybrid-example-project-123abcd` .\nIn this procedure, for each Kubernetes service account, you will:\n- Bind the Kubernetes service account and the principal Google service account to the`roles/iam.workloadIdentityUser`IAM role.\n- Annotate the Kubernetes service account with the Google service account.\n- Bind the roles and annotate the service accounts.Annotate Kubernetes service accounts for the org-level components. You will need to do this  once for each component in your Apigee organization.- **Cassandra** The Cassandra component has six associated Kubernetes service accounts:- `apigee-cassandra-backup`\n- `apigee-cassandra-restore`\n- `apigee-cassandra-schema-setup`\n- `apigee-cassandra-schema-val`\n- `apigee-cassandra-user-setup`\n- `apigee-datastore-default`\n **apigee-cassandra-backup** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-cassandra\"\nKSA_NAME=\"apigee-cassandra-backup\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-cassandra-restore** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-restore\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-cassandra-schema-setup-service-account-name** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-schema-setup-service-account-name\"\n```Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-cassandra-schema-val-service-account-name** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-schema-val-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-cassandra-user-setup-service-account-name** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-user-setup-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-datastore-default-sa** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-datastore-default-sa\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-cassandra-backup** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-non-prod\"\nKSA_NAME=\"apigee-connect-agent-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-cassandra-restore** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-restore\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-cassandra-schema-setup-service-account-name** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-schema-setup-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-cassandra-schema-val-service-account-name** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-schema-val-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-cassandra-user-setup-service-account-name** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-user-setup-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n **apigee-datastore-default-sa** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-datastore-default-sa\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n- **Apigee Connect** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-mart\"\nKSA_NAME=\"apigee-connect-agent-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Define the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-connect-agent-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n- **MART** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-mart\"\nKSA_NAME=\"apigee-mart-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Define the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-mart-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n- **Apigee metrics** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-metrics\"\nKSA_NAME=\"apigee-metrics-sa\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Define the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-metrics-sa\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n- **UDCA (org-level)** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-udca\"\nKSA_NAME=\"apigee-udca-org-level-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Define the`KSA_NAME`environment variables:```\nKSA_NAME=\"apigee-udca-org-level-service-account-name\"\n```\n- Bind the IAM role:```\n gcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\n kubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n- **Apigee Watcher** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-watcher\"\nKSA_NAME=\"apigee-watcher-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Define the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-watcher-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\nFor each environment:- **Runtime** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-runtime\"\nKSA_NAME=\"apigee-runtime-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Define the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-runtime-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n- **Synchronizer** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-synchronizer\"\nKSA_NAME=\"apigee-synchronizer-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Define the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-synchronizer-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n- **UDCA (env-level)** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-udca\"\nKSA_NAME=\"apigee-udca-env-level-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Define the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-udca-env-level-service-account-name\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=apigee-non-prod@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Validate if the steps worked:```\ngcloud config set project $PROJECT_ID\n``````\nkubectl run --rm -it --image google/cloud-sdk:slim \\\n --namespace $NAMESPACE workload-identity-test\\\n -- gcloud auth list\n```If you don't see a command prompt, try pressing .If the steps were correctly run, you should see a response like the following:```\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Credentialed AccountsACTIVE \u00a0ACCOUNT* \u00a0 \u00a0 \u00a0 GSA@PROJECT_ID.iam.gserviceaccount.com\n```\n- If upgrading from a previous install, clean up secrets that contained service account private keys:```\nkubectl delete secrets -n $NAMESPACE $(k get secrets -n $NAMESPACE | grep svc-account | awk '{print $1}')\n```\n- Check logs:```\nkubectl logs -n $NAMESPACE -l app=apigee=synchronizer,env=$ENV_NAME,org=$ORG_NAME apigee-synchronizer\n```\n- (Optional) You can see the status of your Kubernetes service accounts in the **Kubernetes:\n Workloads Overview** page in the Google Cloud Console. [Go to Workloads](https://console.cloud.google.com/kubernetes/workload/overview) **Note:** You may see an error status for the`apigee-cassandra-backup`and`apigee-cassandra-restore`service accounts.  This is because you are not currently running backup or restore, and these processes have not  been fully configured yet. For more information on Cassandra backup and restore, see [feedbackCassandra backup overview](/apigee/docs/hybrid/v1.11/cassandra-backup-overview) .", "guide": "Apigee"}