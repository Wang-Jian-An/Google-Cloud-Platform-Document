{"title": "Documentation - Query and view open AO alerts", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Query and view open AO alerts\nAfter [creating alert rules](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/create-alert-rules) in your GDCH project, you can [query and view alerts on dashboards](#query-and-view-alerts-on-dashboards) from the user interface (UI) of the project's system monitoring instance or [query alerts from the GDCH Observability HTTP API](#query-alerts-from-http-api) .\n", "content": "## Query and view alerts on dashboards\nYou can view alerts on dashboards from the system monitoring instance of your project.\nThe system monitoring instance includes project-level metrics, logs, and alerts to perform monitoring processes such as network monitoring and server monitoring.\n### Before you begin\nBefore querying and viewing alerts on dashboards, you must obtain access to the system monitoring instance. For more information, see [Get access to dashboards](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/get-access-dashboards) .\n### System monitoring instance endpoint\nThe following URL is the endpoint of the monitoring instance of your project:\n```\nhttps://GDCH_URL/PROJECT_NAMESPACE/grafana\n```\nReplace the following:\n- : the URL of your organization in GDCH\n- : the namespace of your project\nThe user interface (UI) of the system monitoring instance contains default dashboards such as the **Alerts - Overview** dashboard with information about alerts for data observability. Querying alerts from the UI lets you visually retrieve alerting information from your project and get an integrated view of resources for awareness and quick resolution of problems.\n## Query alerts from the HTTP API\nQuery alerts directly from the Observability HTTP API to set up automated tasks, adapt responses, and build integrations according to your use case. For example, insert the output into another command, export details to text file formats, or configure a Linux cron job. You can call the Observability HTTP API from the command-line interface (CLI) or a web browser and obtain the result in JSON format.\nThis section explains how to call the Observability HTTP API endpoint from the CLI using the API specification to query alerts.\n### Before you begin\nYou must obtain authorization to query alerts from the CLI. To get the permissions you need to access the Observability HTTP API endpoint, ask your Project IAM Admin to grant you the corresponding viewer role in your project namespace.\nFor information about setting role bindings from the GDCH console, see [Grant access to project resources](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/iam/role-bindings) .\n### HTTP API endpoint\nThe following URL is the HTTP endpoint for accessing alerts:\n```\nhttps://GDCH_URL/PROJECT_NAME/cortex/alertmanager/\n```\nReplace the following:\n- : the URL of your organization in GDCH\n- : the name of your project\n**Note:** You can directly open the URL in a web browser to query alerts. The instructions in the following section use the `curl` command to call the API endpoint, but the same applies to a web browser.\n### Authenticate the cURL request\n- [Download and install the gdcloud CLI](/distributed-cloud/hosted/docs/latest/gdch/resources/gdcloud-overview) .\n- [Set](/distributed-cloud/hosted/docs/latest/gdch/resources/gdcloud-reference/gdcloud-config-set) the gdcloud `core/organization_console_url` property:```\ngdcloud config set core/organization_console_url https://GDCH_URL\n```Replace with the URL of an organization in GDCH.\n- [Sign in with the configured identity provider](/distributed-cloud/hosted/docs/latest/gdch/resources/gdcloud-auth#sign-in-with-idp) :```\ngdcloud auth login\n```\n- Use your user and password to authenticate and sign in.\nWhen the login is successful, you can use the authorization header in your cURL request through the `gdcloud auth print-identity-token` command. For more information, see [gdcloud auth](/distributed-cloud/hosted/docs/latest/gdch/resources/gdcloud-reference/gdcloud-auth) .\n### Call the API endpoint\nFollow these steps to reach the HTTP API endpoint from the CLI and query alerts:\n- Ensure you meet the [prerequisites](#before-you-begin-http) and [the login authentication for the cURL request](#auth-curl-login) .\n- Open the CLI.\n- Use the `curl` tool to call the [HTTP API endpoint](#http-api-endpoint) and extend the URL using the standard [https://prometheus.io/docs/prometheus/latest/querying/api/#alertmanagers](https://prometheus.io/docs/prometheus/latest/querying/api/#alertmanagers) to query alerts. For example:```\ncurl https://GDCH_URL/PROJECT_NAME/cortex/alertmanager/api/v1/alertmanagers \\\n-H \"Authorization: Bearer $(gdcloud auth print-identity-token \\\n--audiences=https://GDCH_URL)\"\n```Replace the following:- ``: the URL of an organization in GDCH\n- ``: the name of your projectYou obtain the output following the command. The API response is in JSON format.\n**Note:** Add the `api/v1/alertmanagers` endpoint to query active and eliminated alerts from the URL.", "guide": "Documentation"}