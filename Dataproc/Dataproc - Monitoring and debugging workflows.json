{"title": "Dataproc - Monitoring and debugging workflows", "url": "https://cloud.google.com/dataproc/docs/concepts/workflows/debugging", "abstract": "# Dataproc - Monitoring and debugging workflows\nThis page provides information to help you monitor and debug [Dataprocworkflows](/dataproc/docs/concepts/workflows/overview) .\n", "content": "## Listing workflows\nAn instantiated [WorkflowTemplate](/dataproc/docs/reference/rest/v1/projects.locations.workflowTemplates#resource-workflowtemplate) is a called a \"workflow\" and is modeled as an \"operation.\"\nRun the following `gcloud` command to list your project's workflows:\n```\ngcloud dataproc operations list \\\n\u00a0\u00a0\u00a0\u00a0--region=region \\\n\u00a0\u00a0\u00a0\u00a0--filter=\"operationType = WORKFLOW\"\n```\n```\n...\nOPERATION_NAME            DONE\nprojects/.../operations/07282b66-2c60-4919-9154-13bd4f03a1f2 True\nprojects/.../operations/1c0b0fd5-839a-4ad4-9a57-bbb011956690 True\n```\nHere's a sample request to list all workflows started from a \"terasort\" template:\n```\ngcloud dataproc operations list \\\n\u00a0\u00a0\u00a0\u00a0--region=region \\\n\u00a0\u00a0\u00a0\u00a0--filter=\"labels.goog-dataproc-workflow-template-id=terasort\"\n```\n```\n...\nOPERATION_NAME          DONE\nprojects/.../07282b66-2c60-4919-9154-13bd4f03a1f2 True\nprojects/.../1c0b0fd5-839a-4ad4-9a57-bbb011956690 True\n```\nNote that only the UUID portion of `OPERATION_NAME` is used in subsequent queries.\n## Using WorkflowMetadata\nThe `operation.metadata` field provides information to help you diagnose workflow failures.\nHere's a sample [WorkflowMetadata](/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata) , including a graph of nodes (jobs), embedded in an operation:\n```\n{\n \"name\": \"projects/my-project/regions/us-central1/operations/671c1d5d-9d24-4cc7-8c93-846e0f886d6e\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.dataproc.v1.WorkflowMetadata\",\n \"template\": \"terasort\",\n \"version\": 1,\n \"createCluster\": {\n  \"operationId\": \"projects/my-project/regions/us-central1/operations/8d472870-4a8b-4609-9f7d-48daccb028fc\",\n  \"Done\": true\n },\n \"graph\": {\n  \"nodes\": [  {\n   \"stepId\": \"teragen\",\n   \"jobId\": \"teragen-vtrprwcgepyny\",\n   \"state\": \"COMPLETED\"\n  },\n  {\n   \"stepId\": \"terasort\",\n   \"prerequisiteStepIds\": [   \"teragen\"\n   ],\n   \"jobId\": \"terasort-vtrprwcgepyny\",\n   \"state\": \"FAILED\",\n   \"error\": \"Job failed\"\n  },\n  {\n   \"stepId\": \"teravalidate\",\n   \"prerequisiteStepIds\": [   \"terasort\"\n   ],\n   \"state\": \"FAILED\",\n   \"error\": \"Skipped, node terasort failed\"\n  }\n  ]\n },\n \"deleteCluster\": {\n  \"operationId\": \"projects/my-project/regions/us-central1/operations/9654c67b-2642-4142-a145-ca908e7c81c9\",\n  \"Done\": true\n },\n \"state\": \"DONE\",\n \"clusterName\": \"terasort-cluster-vtrprwcgepyny\"\n },\n \"done\": true,\n \"error\": {\n \"message\": \"Workflow failed\"\n }\n}\nDone!\n```\n## Retrieving a template\nAs shown in the previous example, the `metadata` contains the template id and version.\n```\n\"template\": \"terasort\",\n\"version\": 1,\n```\nIf a template is not deleted, instantiated template versions can be retrieved by a describe-with-version request.\n```\ngcloud dataproc workflow-templates describe terasort \\\n\u00a0\u00a0\u00a0\u00a0--region=region \\\n\u00a0\u00a0\u00a0\u00a0--version=1\n```\nList cluster operations started by a template:\n```\ngcloud dataproc operations list \\\n\u00a0\u00a0\u00a0\u00a0--region=region \\\n\u00a0\u00a0\u00a0\u00a0--filter=\"labels.goog-dataproc-workflow-instance-id = 07282b66-2c60-4919-9154-13bd4f03a1f2\"\n```\n```\n...\nOPERATION_NAME          DONE\nprojects/.../cf9ce692-d6c9-4671-a909-09fd62041024 True\nprojects/.../1bbaefd9-7fd9-460f-9adf-ee9bc448b8b7 True\n```\nHere's a sample request to list jobs submitted from a template:\n```\ngcloud dataproc jobs list \\\n\u00a0\u00a0\u00a0\u00a0--region=region \\\n\u00a0\u00a0\u00a0\u00a0--filter=\"labels.goog-dataproc-workflow-template-id = terasort\"\n```\n```\n...\nJOB_ID    TYPE  STATUS\nterasort2-ci2ejdq2ta7l6 pyspark DONE\nterasort2-ci2ejdq2ta7l6 pyspark DONE\nterasort1-ci2ejdq2ta7l6 pyspark DONE\nterasort3-3xwsy6ubbs4ak pyspark DONE\nterasort2-3xwsy6ubbs4ak pyspark DONE\nterasort1-3xwsy6ubbs4ak pyspark DONE\nterasort3-ajov4nptsllti pyspark DONE\nterasort2-ajov4nptsllti pyspark DONE\nterasort1-ajov4nptsllti pyspark DONE\nterasort1-b262xachbv6c4 pyspark DONE\nterasort1-cryvid3kreea2 pyspark DONE\nterasort1-ndprn46nesbv4 pyspark DONE\nterasort1-yznruxam4ppxi pyspark DONE\nterasort1-ttjbhpqmw55t6 pyspark DONE\nterasort1-d7svwzloplbni pyspark DONE\n```\nList jobs submitted from a workflow instance:\n```\ngcloud dataproc jobs list \\\n\u00a0\u00a0\u00a0\u00a0--region=region \\\n\u00a0\u00a0\u00a0\u00a0--filter=\"labels.goog-dataproc-workflow-instance-id = 07282b66-2c60-4919-9154-13bd4f03a1f2\"\n```\n```\n...\nJOB_ID    TYPE  STATUS\nterasort3-ci2ejdq2ta7l6 pyspark DONE\nterasort2-ci2ejdq2ta7l6 pyspark DONE\nterasort1-ci2ejdq2ta7l6 pyspark DONE\n```\n## Workflow timeouts\nYou can set a workflow timeout that will cancel the workflow if the workflow's jobs do not finish within the timeout period. The timeout period applies to the [DAG (Directed Acyclic Graph)](https://en.wikipedia.org/wiki/Directed_acyclic_graph) of jobs in the workflow (the sequence of jobs in the workflow), not to the entire workflow operation. The timeout period starts when the first workflow job starts\u2014it does not include the time taken to create a [managed cluster](/dataproc/docs/concepts/workflows/using-workflows#configuring_or_selecting_a_cluster) . If any job is running at the end of the timeout period, all running jobs are stopped, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.\n**Benefit:** Use this feature to avoid having to manually end a workflow that does not complete due to stuck jobs.\n### Setting a workflow template timeout\nYou can set a workflow template timeout period when you [create a workflow template](/dataproc/docs/concepts/workflows/using-workflows#creating_a_template) . You can also add a workflow timeout to an existing workflow template by [updating the workflow template](#updating_a_workflow_template_timeout) .\nWorkflow timeouts apply to any workflow [instantiated](/dataproc/docs/concepts/workflows/using-workflows#running_a_workflow) after the timeout is set on the template. Existing workflows are not affected by a new or updated template.\nTo set a workflow timeout on a new template, use the `--dag-timeout` flag with the [gcloud dataproc workflow-templates create](/sdk/gcloud/reference/dataproc/workflow-templates/create) command. You can use \"s\", \"m\", \"h\", and \"d\" suffixes to set second, minute, hour, and day duration values, respectively. The timeout duration must be from 10 minutes (\"10m\") to 24 hours (\"24h\" or \"1d\").\n```\ngcloud dataproc workflow-templates create template-id (such as \"my-workflow\") \\\n\u00a0\u00a0\u00a0\u00a0--region=region \\\n\u00a0\u00a0\u00a0\u00a0--dag-timeout=duration (from \"10m\" to \"24h\" or \"1d\"\") \\\n\u00a0\u00a0\u00a0\u00a0... other args ...\n```To set a workflow timeout, complete the `WorkflowTemplate` [dagTimeout](/dataproc/docs/reference/rest/v1/projects.regions.workflowTemplates#WorkflowTemplate.FIELDS.dag_timeout) field as part of a [workflowTemplates.create](/dataproc/docs/reference/rest/v1/projects.regions.workflowTemplates/create) request.Currently, the Google Cloud console does not support creating a [workflow template](https://console.cloud.google.com/dataproc/workflows/templates) .### Updating a workflow template timeout\nYou can update an existing workflow template to change, add, or remove a workflow timeout.\nWorkflow timeouts apply to any workflow [instantiated](/dataproc/docs/concepts/workflows/using-workflows#running_a_workflow) after the timeout is set on the template. Existing workflows are not affected by a new or updated template.\n**Adding or changing a workflow timeout** \nTo add or change a workflow timeout on an existing template, use the `--dag-timeout` flag with the [gcloud dataproc workflow-templates set-dag-timeout](/sdk/gcloud/reference/dataproc/workflow-templates/set-dag-timeout) command. You can use \"s\", \"m\", \"h\", and \"d\" suffixes to set second, minute, hour, and day duration values, respectively. The timeout duration must be from 10 minutes (\"10m\") to 24 hours (\"24h\").\n```\ngcloud dataproc workflow-templates set-dag-timeout template-id (such as \"my-workflow\") \\\n\u00a0\u00a0\u00a0\u00a0--region=region \\\n\u00a0\u00a0\u00a0\u00a0--dag-timeout=duration (from \"10m\" to \"24h\" or \"1d\")\n```\n **Removing a workflow timeout** \nTo remove a workflow timeout from an existing template, use the [gcloud dataproc workflow-templates remove-dag-timeout](/sdk/gcloud/reference/dataproc/workflow-templates/remove-dag-timeout) command.\n```\ngcloud dataproc workflow-templates remove-dag-timeout template-id (such as \"my-workflow\") \\\n\u00a0\u00a0\u00a0\u00a0--region=region\n``` **Adding or changing a workflow timeout** \nTo add or change a workflow timeout on an existing template, [update the workflow template](/dataproc/docs/concepts/workflows/using-workflows#updating_a_workflow_template) by filling in the template's [dagTimeout](/dataproc/docs/reference/rest/v1/projects.regions.workflowTemplates#WorkflowTemplate.FIELDS.dag_timeout) field with the new or changed timeout value.\n **Removing a workflow timeout** \nTo remove a workflow timeout from an existing template, [update the workflow template](/dataproc/docs/concepts/workflows/using-workflows#updating_a_workflow_template) by removing the template's [dagTimeout](/dataproc/docs/reference/rest/v1/projects.regions.workflowTemplates#WorkflowTemplate.FIELDS.dag_timeout) field.\nCurrently, the Google Cloud console does not support updating a [workflow template](https://console.cloud.google.com/dataproc/workflows/templates) .", "guide": "Dataproc"}