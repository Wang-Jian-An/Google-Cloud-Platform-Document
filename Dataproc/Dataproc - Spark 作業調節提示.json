{"title": "Dataproc - Spark \u4f5c\u696d\u8abf\u7bc0\u63d0\u793a", "url": "https://cloud.google.com/dataproc/docs/support/spark-job-tuning?hl=zh-cn", "abstract": "# Dataproc - Spark \u4f5c\u696d\u8abf\u7bc0\u63d0\u793a\n\u4ee5\u4e0b\u90e8\u5206\u63d0\u4f9b\u4e86\u4e00\u4e9b\u63d0\u793a\uff0c\u53ef\u5e6b\u52a9\u60a8\u5fae\u8abf Dataproc Spark \u61c9\u7528\u3002\n", "content": "## \u4f7f\u7528\u81e8\u6642\u96c6\u7fa3\n\u4f7f\u7528 Dataproc\u201c\u81e8\u6642\u201d\u96c6\u7fa3\u6a21\u578b\u6642\uff0c\u60a8\u53ef\u4ee5\u7232\u6bcf\u500b\u4f5c\u696d\u5275\u5efa\u4e00\u500b\u5c08\u7528\u96c6\u7fa3\uff0c\u4e26\u5728\u4f5c\u696d\u5b8c\u6210\u5f8c\u522a\u9664\u96c6\u7fa3\u3002\u85c9\u52a9\u81e8\u6642\u6a21\u578b\uff0c\u60a8\u53ef\u4ee5\u55ae\u7368\u8655\u7406\u5b58\u5132\u548c\u8a08\u7b97\uff0c\u5c07\u4f5c\u696d\u8f38\u5165\u548c\u8f38\u51fa\u6578\u64da\u4fdd\u5b58\u5728 Cloud Storage \u6216 BigQuery \u4e2d\uff0c\u50c5\u5c07\u96c6\u7fa3\u7528\u65bc\u8a08\u7b97\u548c\u81e8\u6642\u6578\u64da\u5b58\u5132\u3002\n### \u6c38\u4e45\u6027\u96c6\u7fa3\u9677\u9631\n\u4f7f\u7528\u81e8\u6642\u55ae\u4f5c\u696d\u96c6\u7fa3\u53ef\u907f\u514d\u8207\u4f7f\u7528\u9577\u6642\u9593\u904b\u884c\u7684\u201c\u6c38\u4e45\u6027\u201d\u5171\u4eab\u96c6\u7fa3\u76f8\u95dc\u7684\u4ee5\u4e0b\u9677\u9631\u548c\u6f5b\u5728\u554f\u984c\uff1a\n- \u55ae\u9ede\u6545\u969c\uff1a\u5171\u4eab\u96c6\u7fa3\u932f\u8aa4\u72c0\u614b\u53ef\u80fd\u6703\u5c0e\u81f4\u6240\u6709\u4f5c\u696d\u5931\u6557\uff0c\u9032\u800c\u963b\u6b62\u6574\u500b\u6578\u64da\u6d41\u6c34\u7dda\u3002\u8abf\u67e5\u932f\u8aa4\u4e26\u5f9e\u932f\u8aa4\u4e2d\u6062\u5fa9\u53ef\u80fd\u9700\u8981\u6578\u5c0f\u6642\u3002\u7531\u65bc\u81e8\u6642\u96c6\u7fa3\u50c5\u4fdd\u7559\u81e8\u6642\u96c6\u7fa3\u5167\u72c0\u614b\uff0c\u56e0\u6b64\u5728\u767c\u751f\u932f\u8aa4\u6642\uff0c\u60a8\u53ef\u4ee5\u5feb\u901f\u522a\u9664\u4e26\u91cd\u65b0\u5275\u5efa\u9019\u4e9b\u81e8\u6642\u96c6\u7fa3\u3002\n- \u96e3\u4ee5\u7dad\u8b77\u548c\u9077\u79fb HDFS\u3001MySQL \u6216\u672c\u5730\u6587\u4ef6\u7cfb\u7d71\u4e2d\u7684\u96c6\u7fa3\u72c0\u614b\n- \u6703\u5c0d SLO \u7522\u751f\u8ca0\u9762\u5f71\u97ff\u7684\u4f5c\u696d\u4e4b\u9593\u7684\u8cc7\u6e90\u722d\u7528\n- \u5167\u5b58\u58d3\u529b\u5c0e\u81f4\u7684\u670d\u52d9\u5b88\u8b77\u7a0b\u5e8f\u7121\u97ff\u61c9\n- \u53ef\u80fd\u6703\u8d85\u51fa\u78c1\u76e4\u5bb9\u91cf\u7684\u65e5\u8a8c\u548c\u81e8\u6642\u6587\u4ef6\u7d2f\u7a4d\n- \u7531\u65bc\u96c6\u7fa3\u53ef\u7528\u5340\u7f3a\u8ca8\u800c\u5f15\u8d77\u7684\u64f4\u5bb9\u5931\u6557\n- \u7f3a\u4e4f\u5c0d [\u904e\u6642\u7684\u96c6\u7fa3\u6620\u50cf\u7248\u672c](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-version-clusters?hl=zh-cn#unsupported_dataproc_versions) \u7684\u652f\u6301\u3002\n### \u81e8\u6642\u96c6\u7fa3\u512a\u52e2\n\u5f9e\u7a4d\u6975\u7684\u65b9\u9762\u4f86\u770b\uff0c\u81e8\u6642\u96c6\u7fa3\u53ef\u8b93\u60a8\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u4f7f\u7528\u4e0d\u540c\u7684 [Dataproc \u865b\u64ec\u6a5f\u670d\u52d9\u5e33\u865f](https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals?hl=zh-cn#vm_service_account_data_plane_identity) \u7232\u4e0d\u540c\u7684\u4f5c\u696d\u914d\u7f6e\u4e0d\u540c\u7684 IAM \u6b0a\u9650\u3002\n- \u7232\u6bcf\u500b\u4f5c\u696d\u512a\u5316\u96c6\u7fa3\u7684\u786c\u4ef6\u548c\u8edf\u4ef6\u914d\u7f6e\uff0c\u4e26\u6839\u64da\u9700\u8981\u66f4\u6539\u96c6\u7fa3\u914d\u7f6e\u3002\n- \u5347\u7d1a\u65b0\u96c6\u7fa3\u4e2d\u7684\u6620\u50cf\u7248\u672c\uff0c\u4ee5\u7372\u53d6\u6700\u65b0\u7684\u5b89\u5168\u88dc\u4e01\u3001bug \u4fee\u5fa9\u548c\u512a\u5316\u3002\n- \u5728\u9694\u96e2\u7684\u55ae\u4f5c\u696d\u96c6\u7fa3\u4e0a\u66f4\u5feb\u5730\u6392\u67e5\u554f\u984c\u3002\n- \u60a8\u53ea\u9700\u7232\u81e8\u6642\u96c6\u7fa3\u904b\u884c\u6642\u9593\u4ed8\u8cbb\uff0c\u800c\u4e0d\u662f\u7232\u5171\u4eab\u96c6\u7fa3\u4e0a\u4f5c\u696d\u4e4b\u9593\u7684\u7a7a\u9592\u6642\u9593\u4ed8\u8cbb\uff0c\u5f9e\u800c\u7bc0\u7701\u8cbb\u7528\u3002## \u4f7f\u7528 Spark SQL\n[Spark SQL](https://spark.apache.org/docs/latest/sql-programming-guide.html) DataFrame API \u5c0d RDD API \u9032\u884c\u4e86\u91cd\u5927\u512a\u5316\u3002\u5982\u679c\u60a8\u8207\u4f7f\u7528 RDD \u7684\u4ee3\u78bc\u4ea4\u4e92\uff0c\u8acb\u8003\u616e\u5148\u4ee5 DataFrame \u5f62\u5f0f\u8b80\u53d6\u6578\u64da\uff0c\u7136\u5f8c\u518d\u5728\u4ee3\u78bc\u4e2d\u50b3\u905e RDD\u3002\u5728 Java \u6216 Scala \u4ee3\u78bc\u4e2d\uff0c\u8acb\u8003\u616e\u4f7f\u7528 [Spark SQL](https://spark.apache.org/docs/latest/sql-programming-guide.html) Dataset API \u4f5c\u7232 RDD \u548c DataFrame \u7684\u8d85\u96c6\u3002\n## \u4f7f\u7528 Apache Spark 3\n[Dataproc 2.0](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-release-2.0?hl=zh-cn) \u53ef\u4ee5\u5b89\u88dd Spark 3\uff0c\u5176\u4e2d\u5305\u542b\u4ee5\u4e0b\u529f\u80fd\u548c\u6027\u80fd\u6539\u9032\uff1a\n- GPU \u652f\u6301\n- \u80fd\u5920\u8b80\u53d6\u4e8c\u9032\u5236\u6587\u4ef6\n- \u6027\u80fd\u6539\u9032\n- \u52d5\u614b\u5206\u5340\u522a\u6e1b\n- [\u81ea\u9069\u61c9\u67e5\u8a62\u57f7\u884c](https://spark.apache.org/docs/latest/sql-performance-tuning.html#adaptive-query-execution) \uff0c\u53ef\u5be6\u6642\u512a\u5316 Spark \u4f5c\u696d\nSpark 3 \u7684\u6539\u9032\u4e3b\u8981\u6e90\u81ea\u5f8c\u81fa\u66f4\u6539\uff0c\u4e26\u4e14\u53ea\u9700\u8981\u6975\u5c11\u91cf\u7684\u7528\u6236\u4ee3\u78bc\u66f4\u6539\u3002\u5982\u9700\u77ad\u89e3\u5f9e Spark 2 \u9077\u79fb\u5230 Spark 3 \u6642\u7684\u6ce8\u610f\u4e8b\u9805\uff0c\u8acb\u53c3\u95b1 [Apache Spark \u6587\u6a94](https://spark.apache.org/docs/latest/migration-guide.html) \u3002\n## \u4f7f\u7528\u52d5\u614b\u5206\u914d\nApache Spark \u5305\u542b **\u52d5\u614b\u5206\u914d** \u529f\u80fd\uff0c\u8a72\u529f\u80fd\u53ef\u64f4\u7e2e\u96c6\u7fa3\u5167\u5de5\u4f5c\u5668\u4e0a\u7684 Spark \u57f7\u884c\u7a0b\u5e8f\u7684\u6578\u91cf\u3002\u5373\u4f7f\u96c6\u7fa3\u7e31\u5411\u64f4\u5bb9\uff0c\u6b64\u529f\u80fd\u4e5f\u5141\u8a31\u4f5c\u696d\u4f7f\u7528\u5b8c\u6574\u7684 Dataproc \u96c6\u7fa3\u3002\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0cDataproc \u4e0a\u5553\u7528\u6b64\u529f\u80fd\uff08 `spark.dynamicAllocation.enabled` \u8a2d\u7f6e\u7232 `true` \uff09\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Spark \u52d5\u614b\u5206\u914d](https://spark.apache.org/docs/latest/configuration.html#dynamic-allocation) \u3002\n## \u4f7f\u7528 Dataproc \u81ea\u52d5\u64f4\u7e2e\u529f\u80fd\nDataproc [\u81ea\u52d5\u64f4\u7e2e](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling?hl=zh-cn) \u529f\u80fd\u6703\u5728\u96c6\u7fa3\u4e2d\u52d5\u614b\u6dfb\u52a0 Dataproc \u5de5\u4f5c\u5668\u4ee5\u53ca\u5f9e\u96c6\u7fa3\u4e2d\u52d5\u614b\u79fb\u9664 Dataproc \u5de5\u4f5c\u5668\uff0c\u4ee5\u5e6b\u52a9\u78ba\u4fdd Spark \u4f5c\u696d\u5177\u6709\u5feb\u901f\u5b8c\u6210\u6240\u9700\u7684\u8cc7\u6e90\u3002\n[\u6700\u4f73\u505a\u6cd5](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling?hl=zh-cn#avoid_scaling_primary_workers) \u662f\u5c07\u81ea\u52d5\u64f4\u7e2e\u653f\u7b56\u914d\u7f6e\u7232\u50c5\u64f4\u7e2e [\u8f14\u52a9\u5de5\u4f5c\u5668](https://cloud.google.com/dataproc/docs/concepts/compute/secondary-vms?hl=zh-cn) \u3002\n## \u4f7f\u7528 Dataproc \u589e\u5f37\u7684\u9748\u6d3b\u6a21\u5f0f\n\u5982\u679c\u5de5\u4f5c\u5668\u5728\u5b8c\u6210\u5411\u7e2e\u6e1b\u5668\u8655\u7406 shuffle \u6578\u64da\u4e4b\u524d\u88ab\u6436\u4f54\u6216\u79fb\u9664\uff0c\u5177\u6709\u6436\u4f54\u5f0f\u865b\u64ec\u6a5f\u6216\u81ea\u52d5\u64f4\u7e2e\u653f\u7b56\u7684\u96c6\u7fa3\u53ef\u80fd\u6703\u6536\u5230 FetchFailed \u7570\u5e38\u3002\u6b64\u7570\u5e38\u53ef\u80fd\u6703\u5c0e\u81f4\u4efb\u52d9\u91cd\u8a66\u548c\u66f4\u9577\u7684\u4f5c\u696d\u5b8c\u6210\u6642\u9593\u3002\n\u5efa\u8b70\uff1a\u4f7f\u7528 Dataproc [\u589e\u5f37\u578b\u9748\u6d3b\u6a21\u5f0f](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/flex?hl=zh-cn) \uff0c\u8a72\u6a21\u5f0f\u4e0d\u6703\u5728\u8f14\u52a9\u5de5\u4f5c\u5668\u4e0a\u5b58\u5132\u4e2d\u9593 Shuffle \u6578\u64da\uff0c\u4ee5\u4fbf\u8f14\u52a9\u5de5\u4f5c\u5668\u53ef\u4ee5\u88ab\u5b89\u5168\u6436\u4f54\u6216\u7e2e\u6e1b\u3002\n## \u914d\u7f6e\u5206\u5340\u548c\u91cd\u6392\nSpark \u5c07\u6578\u64da\u5b58\u5132\u5728\u96c6\u7fa3\u4e0a\u7684\u81e8\u6642\u5206\u5340\u4e2d\u3002\u5982\u679c\u60a8\u7684\u61c9\u7528\u5c0d DataFrame \u9032\u884c\u5206\u7d44\u6216\u806f\u63a5\uff0c\u5b83\u6703\u6839\u64da\u5206\u7d44\u548c [\u4f4e\u7d1a\u5225\u914d\u7f6e](#configuring_partitions) \u5c07\u6578\u64da\u91cd\u6392\u5230\u65b0\u5206\u5340\u3002\n\u6578\u64da\u5206\u5340\u53ef\u986f\u8457\u5f71\u97ff\u61c9\u7528\u6027\u80fd\uff1a\u592a\u5c11\u7684\u5206\u5340\u6703\u9650\u5236\u4f5c\u696d\u4e26\u884c\u6027\u548c\u96c6\u7fa3\u8cc7\u6e90\u5229\u7528\u7387\uff1b\u592a\u591a\u7684\u5206\u5340\u6703\u56e0\u7232\u9700\u8981\u9032\u884c\u984d\u5916\u7684\u5206\u5340\u8655\u7406\u548c\u91cd\u6392\u800c\u964d\u4f4e\u4f5c\u696d\u901f\u5ea6\u3002\n### \u914d\u7f6e\u5206\u5340\n\u4ee5\u4e0b\u5c6c\u6027\u7528\u65bc\u63a7\u5236\u5206\u5340\u7684\u6578\u91cf\u548c\u5927\u5c0f\uff1a\n- `spark.sql.files.maxPartitionBytes` \uff1a\u5f9e Cloud Storage \u8b80\u53d6\u6578\u64da\u6642\u7684\u5206\u5340\u5927\u5c0f\u4e0a\u9650\u3002\u9ed8\u8a8d\u503c\u7232 128 MB\uff0c\u9019\u5c0d\u5927\u591a\u6578\u8655\u7406\u5c0f\u65bc 100 TB \u7684\u61c9\u7528\u4f86\u8aaa\u5df2\u7d93\u8db3\u5920\u5927\u3002\n- `spark.sql.shuffle.partitions` \uff1a\u57f7\u884c\u91cd\u6392\u5f8c\u7684\u5206\u5340\u6578\u91cf\u3002\u9ed8\u8a8d\u503c\u7232 200\uff0c\u9019\u9069\u7528\u65bc vCPU \u7e3d\u6578\u5c11\u65bc 100 \u500b\u7684\u96c6\u7fa3\u3002\u5efa\u8b70\uff1a\u8acb\u5c07\u6b64\u5c6c\u6027\u8a2d\u7f6e\u7232\u96c6\u7fa3\u4e2d\u7684 vCPU \u6578\u91cf\u7684 3 \u500d\u3002\n- `spark.default.parallelism` \uff1a\u57f7\u884c\u9700\u8981 shuffle \u7684 RDD \u8f49\u63db\u5f8c\u8fd4\u56de\u7684\u5206\u5340\u6578\uff0c\u4f8b\u5982 `join` \u3001 `reduceByKey` \u548c `parallelize` \u3002\u9ed8\u8a8d\u503c\u662f\u96c6\u7fa3\u4e2d\u7684 vCPU \u7e3d\u6578\u3002\u5728 Spark \u4f5c\u696d\u4e2d\u4f7f\u7528 RDD \u6642\uff0c\u60a8\u53ef\u4ee5\u5c07\u6b64\u6578\u91cf\u8a2d\u7f6e\u7232 vCPU \u7684 3 \u500d\u4f7f\u7528 [\u81ea\u52d5\u64f4\u7e2e](#use_dataproc_autoscaling) \u529f\u80fd\u6642\uff0c\u8acb\u5c07\u9019\u4e9b\u6578\u91cf\u8a2d\u7f6e\u7232\u6700\u5927\u96c6\u7fa3\u6838\u5fc3\u7e3d\u6578\u7684 3 \u500d\uff0c\u5982\u81ea\u52d5\u64f4\u7e2e\u653f\u7b56\u7684\u5de5\u4f5c\u5668\u914d\u7f6e\u4e2d`maxInstances`\u6240\u5b9a\u7fa9\u7684\u90a3\u6a23\u3002\n### \u9650\u5236\u6587\u4ef6\u6578\u91cf\n\u5982\u679c Spark \u8b80\u53d6\u5927\u91cf\u5c0f\u6587\u4ef6\uff0c\u6703\u9020\u6210\u6027\u80fd\u640d\u5931\u3002\u4ee5\u8f03\u5927\u7684\u6587\u4ef6\u5927\u5c0f\u5b58\u5132\u6578\u64da\uff0c\u4f8b\u5982 256 MB-512 MB \u7bc4\u570d\u5167\u7684\u6587\u4ef6\u5927\u5c0f\u3002\u540c\u6a23\uff0c\u9650\u5236\u8f38\u51fa\u6587\u4ef6\u7684\u6578\u91cf\uff08\u5982\u9700\u5f37\u5236 shuffle\uff0c\u8acb\u53c3\u95b1 [\u907f\u514d\u4e0d\u5fc5\u8981\u7684 shuffle](#avoid_unnecessary_shuffles) \uff09\u3002\n### \u914d\u7f6e\u81ea\u9069\u61c9\u67e5\u8a62\u57f7\u884c (Spark 3)\n[\u81ea\u9069\u61c9\u67e5\u8a62\u57f7\u884c](https://spark.apache.org/docs/latest/sql-performance-tuning.html#adaptive-query-execution) \uff08\u5728 Dataproc \u6620\u50cf\u7248\u672c 2.0 \u4e2d\u9ed8\u8a8d\u5553\u7528\uff09\u53ef\u63d0\u9ad8 Spark \u4f5c\u696d\u6027\u80fd\uff0c\u5305\u62ec\uff1a\n- [\u91cd\u6392\u5f8c\u5408\u4f75\u5206\u5340](https://spark.apache.org/docs/latest/sql-performance-tuning.html#coalescing-post-shuffle-partitions) \n- [\u5c07\u6392\u5e8f\u5408\u4f75\u806f\u63a5\u8f49\u63db\u7232\u5ee3\u64ad\u806f\u63a5](https://spark.apache.org/docs/latest/sql-performance-tuning.html#converting-sort-merge-join-to-broadcast-join) \n- [\u91dd\u5c0d\u504f\u5dee\u806f\u63a5\u7684\u512a\u5316](https://spark.apache.org/docs/latest/sql-performance-tuning.html#optimizing-skew-join) \u3002\n\u96d6\u7136\u9ed8\u8a8d\u914d\u7f6e\u8a2d\u7f6e\u9069\u7528\u65bc\u5927\u591a\u6578\u7528\u4f8b\uff0c\u4f46\u5c07 `spark.sql.adaptive.advisoryPartitionSizeInBytes` \u8a2d\u7f6e\u7232 `spark.sqlfiles.maxPartitionBytes` \uff08\u9ed8\u8a8d\u503c\u7232 128 MB\uff09\u6703\u5f88\u6709\u5e6b\u52a9\u3002\n### \u907f\u514d\u4e0d\u5fc5\u8981\u7684\u91cd\u6392\nSpark \u5141\u8a31\u7528\u6236\u624b\u52d5\u89f8\u767c\u91cd\u6392\u4ee5\u4f7f\u7528 `repartition` \u51fd\u6578\u91cd\u65b0\u5e73\u8861\u5176\u6578\u64da\u3002\u91cd\u6392\u7684\u8cbb\u7528\u5f88\u9ad8\uff0c\u56e0\u6b64\u61c9\u8b39\u614e\u91cd\u6392\u6578\u64da\u3002\u9069\u7576\u8a2d\u7f6e\u5206\u5340 [\u914d\u7f6e](#configuring_partitions) \u61c9\u8a72\u8db3\u4ee5\u8b93 Spark \u81ea\u52d5\u5c0d\u60a8\u7684\u6578\u64da\u9032\u884c\u5206\u5340\u3002\n**\u4f8b\u5916\u60c5\u6cc1** \uff1a\u5c07\u5217\u5206\u5340\u6578\u64da\u5beb\u5165 Cloud Storage \u6642\uff0c\u5c0d\u7279\u5b9a\u5217\u9032\u884c\u91cd\u65b0\u5206\u5340\u53ef\u907f\u514d\u5beb\u5165\u8a31\u591a\u5c0f\u6587\u4ef6\uff0c\u5f9e\u800c\u7e2e\u77ed\u5beb\u5165\u6642\u9593\u3002\n```\ndf.repartition(\"col_name\").write().partitionBy(\"col_name\").save(\"gs://...\")\n```\n## \u5c07\u6578\u64da\u5b58\u5132\u5728 Parquet \u6216 Avro \u4e2d\nSpark SQL \u9ed8\u8a8d\u5728 Snappy \u58d3\u7e2e\u7684 [Parquet](https://parquet.apache.org/) \u6587\u4ef6\u4e2d\u8b80\u53d6\u548c\u5beb\u5165\u6578\u64da\u3002Parquet \u63a1\u7528\u9ad8\u6548\u7684\u5217\u5f0f\u6587\u4ef6\u683c\u5f0f\uff0c\u4f7f Spark \u50c5\u8b80\u53d6\u57f7\u884c\u61c9\u7528\u6240\u9700\u7684\u6578\u64da\u3002\u5728\u8655\u7406\u5927\u578b\u6578\u64da\u96c6\u6642\uff0c\u9019\u662f\u4e00\u500b\u91cd\u8981\u512a\u52e2\u3002\u5176\u4ed6\u5217\u5f0f\u683c\u5f0f\uff08\u4f8b\u5982 [Apache ORC](https://orc.apache.org/) \uff09\u4e5f\u6548\u679c\u826f\u597d\u3002\n\u5c0d\u65bc\u975e\u5217\u5f0f\u6578\u64da\uff0c [Apache Avro](https://avro.apache.org/docs/current/) \u63d0\u4f9b\u9ad8\u6548\u7684\u4e8c\u9032\u5236\u884c\u6587\u4ef6\u683c\u5f0f\u3002\u96d6\u7136\u901a\u5e38\u6bd4 Parquet \u6162\uff0c\u4f46 Avro \u7684\u6027\u80fd\u512a\u65bc\u57fa\u65bc\u6587\u672c\u7684\u683c\u5f0f\uff08\u4f8b\u5982 CSV \u6216 JSON\uff09\u3002\n## \u512a\u5316\u78c1\u76e4\u5927\u5c0f\n\u6c38\u4e45\u6027\u78c1\u76e4\u7684\u541e\u5410\u91cf\u6703\u96a8\u7740\u78c1\u76e4\u5927\u5c0f\u800c\u64f4\u7e2e\uff0c\u9019\u53ef\u80fd\u6703\u5f71\u97ff Spark \u4f5c\u696d\u7684\u6027\u80fd\uff0c\u56e0\u7232\u4f5c\u696d\u6703\u5c07\u5143\u6578\u64da\u548c\u91cd\u6392\u6578\u64da\u5beb\u5165\u78c1\u76e4\u3002\u4f7f\u7528\u6a19\u6e96\u6c38\u4e45\u6027\u78c1\u76e4\u6642\uff0c\u6bcf\u500b\u5de5\u4f5c\u5668\u7684\u78c1\u76e4\u5927\u5c0f\u61c9\u81f3\u5c11\u7232 1 TB\uff08\u8acb\u53c3\u95b1 [\u6c38\u4e45\u6027\u78c1\u76e4\u5927\u5c0f\u7684\u6027\u80fd](https://cloud.google.com/compute/docs/disks/performance?hl=zh-cn#performance_by_disk_size) \uff09\u3002\n\u5982\u9700\u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\u76e3\u63a7\u5de5\u4f5c\u5668\u78c1\u76e4\u541e\u5410\u91cf\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u9ede\u64ca [\u96c6\u7fa3](https://console.cloud.google.com/dataproc/clusters?hl=zh-cn) \u9801\u9762\u4e0a\u7684\u96c6\u7fa3\u540d\u7a31\u3002\n- \u9ede\u64ca\u201c\u865b\u64ec\u6a5f\u5be6\u4f8b\u201d\u6a19\u7c64\u9801\u3002\n- \u9ede\u64ca\u4efb\u610f\u5de5\u4f5c\u5668\u540d\u7a31\u3002\n- \u9ede\u64ca\u201c\u76e3\u63a7\u201d\u6a19\u7c64\u9801\uff0c\u7136\u5f8c\u5411\u4e0b\u6efe\u52d5\u5230\u201c\u78c1\u76e4\u541e\u5410\u91cf\u201d\u4ee5\u67e5\u770b\u5de5\u4f5c\u5668\u541e\u5410\u91cf\u3002\n\u7232\u4e86\u7372\u5f97\u6700\u4f73\u6027\u80fd\u800c\u64f4\u7e2e\u6c38\u4e45\u6027\u78c1\u76e4\u5927\u5c0f\u6642\uff0c\u53ef\u4ee5\u5c07\u78c1\u76e4\u5927\u5c0f\u8a2d\u7f6e\u7232\u9060\u5927\u65bc\u8981\u5206\u914d\u7d66\u6bcf\u500b\u5de5\u4f5c\u5668\u7684\u6578\u64da\u91cf\uff0c\u4ee5\u63d0\u9ad8\u5de5\u4f5c\u5668\u7684\u541e\u5410\u91cf\u4e0a\u9650\u3002\n### \u78c1\u76e4\u6ce8\u610f\u4e8b\u9805\n\u81e8\u6642 Dataproc \u96c6\u7fa3\uff08\u7121\u6cd5\u53d7\u76ca\u65bc\u6c38\u4e45\u6027\u5b58\u5132\uff09\u53ef\u4ee5\u4f7f\u7528 [\u672c\u5730 SSD](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-local-ssds?hl=zh-cn) \u3002\u672c\u5730 SSD \u4ee5\u7269\u7406\u65b9\u5f0f\u639b\u63a5\u5230\u96c6\u7fa3\uff0c\u8207\u6c38\u4e45\u6027\u78c1\u76e4\u76f8\u6bd4\uff0c\u5b83\u63d0\u4f9b\u66f4\u9ad8\u7684\u541e\u5410\u91cf\uff08\u8acb\u53c3\u95b1 [\u6027\u80fd\u8868](https://cloud.google.com/compute/docs/disks/local-ssd?hl=zh-cn#performance) \uff09\u3002\u672c\u5730 SSD \u5177\u6709 375 GB \u7684\u56fa\u5b9a\u5927\u5c0f\uff0c\u4f46\u60a8\u53ef\u4ee5\u6dfb\u52a0\u591a\u500b SSD \u4ee5\u63d0\u9ad8\u6027\u80fd\u3002\n\u96c6\u7fa3\u95dc\u9589\u5f8c\uff0c\u672c\u5730 SSD \u4e0d\u6703\u4fdd\u7559\u6578\u64da\u3002\u5982\u679c\u9700\u8981\u6c38\u4e45\u6027\u5b58\u5132\u7a7a\u9593\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 SSD \u6c38\u4e45\u6027\u78c1\u76e4\uff0c\u8207\u6a19\u6e96\u6c38\u4e45\u6027\u78c1\u76e4\u76f8\u6bd4\uff0c\u9019\u7a2e\u78c1\u76e4\u53ef\u91dd\u5c0d\u78c1\u76e4\u5927\u5c0f\u63d0\u4f9b [\u66f4\u9ad8\u7684\u541e\u5410\u91cf](https://cloud.google.com/compute/docs/disks/performance?hl=zh-cn#ssd_persistent_disk) \u3002\u5982\u679c\u5206\u5340\u5927\u5c0f\u5c0f\u65bc 8 KB\uff0c\u5247 SSD \u6c38\u4e45\u6027\u78c1\u76e4\u4e5f\u662f\u4e00\u500b\u4e0d\u932f\u7684\u9078\u64c7\uff08\u4e0d\u904e\uff0c\u8acb [\u907f\u514d\u4f7f\u7528\u5c0f\u578b\u5206\u5340](#configure_partitioning_and_shuffling) \uff09\u3002\n## \u5c07 GPU \u639b\u63a5\u5230\u60a8\u7684\u96c6\u7fa3\nSpark 3 \u652f\u6301 GPU\u3002\u901a\u904e\u5c07 GPU \u8207 [RAPIDS \u521d\u59cb\u5316\u64cd\u4f5c](https://github.com/GoogleCloudDataproc/initialization-actions/tree/master/rapids) \u642d\u914d\u4f7f\u7528\uff0c\u901a\u904e [RAPIDS SQL Accelerator](https://www.nvidia.com/en-us/deep-learning-ai/solutions/data-science/apache-spark-3/) \u52a0\u901f Spark \u4f5c\u696d\u3002 [GPU \u9a45\u52d5\u7a0b\u5e8f\u521d\u59cb\u5316\u64cd\u4f5c](https://github.com/GoogleCloudDataproc/initialization-actions/tree/master/gpu) \uff0c\u7528\u65bc\u914d\u7f6e\u5177\u6709 GPU \u7684\u96c6\u7fa3\u3002\n## \u5e38\u898b\u7684\u4f5c\u696d\u6545\u969c\u548c\u4fee\u5fa9\u65b9\u6848\n### \u5167\u5b58\u4e0d\u8db3\n\u793a\u4f8b\uff1a\n- \u201c\u57f7\u884c\u5668\u4e1f\u5931\u201d\n- \u201cjava.lang.OutOfMemoryError\uff1a\u5df2\u8d85\u51fa GC \u958b\u92b7\u9650\u5236\u201d\n- \u201c\u7531\u65bc\u8d85\u51fa\u5167\u5b58\u9650\u5236\uff0cYARN \u5df2\u7d42\u6b62\u5bb9\u5668\u201d\u53ef\u80fd\u7684\u4fee\u5fa9\u65b9\u6848\uff1a\n- \u5982\u679c\u4f7f\u7528 PySpark\uff0c\u8acb\u63d0\u9ad8`spark.executor.memoryOverhead`\uff0c\u964d\u4f4e`spark.executor.memory`\u3002\n- \u4f7f\u7528 [\u9ad8\u5167\u5b58](https://cloud.google.com/compute/docs/machine-types?hl=zh-cn#memory-optimized_machine_type_family) \u6a5f\u5668\u985e\u578b\u3002\n- [\u4f7f\u7528\u8f03\u5c0f\u7684\u5206\u5340](#using_smaller_files_increased_partitioning) \u3002### \u91cd\u6392\u63d0\u53d6\u5931\u6557\n\u793a\u4f8b\uff1a\n- \u201cFetchFailedException\u201d\uff08Spark \u932f\u8aa4\uff09\n- \u201c\u7121\u6cd5\u9023\u63a5...\u201d\uff08Spark \u932f\u8aa4\uff09\n- \u201c\u7121\u6cd5\u63d0\u53d6\u201d\uff08MapReduce \u932f\u8aa4\uff09\u9019\u901a\u5e38\u662f\u7531\u65bc\u63d0\u524d\u79fb\u9664\u4ecd\u5177\u6709 Shuffle \u6578\u64da\u7684\u5de5\u4f5c\u5668\u6240\u81f4\u3002\n\u53ef\u80fd\u7684\u539f\u56e0\u548c\u89e3\u6c7a\u65b9\u6cd5\uff1a\n- \u6436\u4f54\u5f0f\u5de5\u4f5c\u5668\u865b\u64ec\u6a5f\u88ab\u6536\u56de\uff0c\u6216\u975e\u6436\u4f54\u5f0f\u5de5\u4f5c\u5668\u865b\u64ec\u6a5f\u5df2\u88ab\u81ea\u52d5\u64f4\u7e2e\u5668\u79fb\u9664\u3002\u89e3\u6c7a\u65b9\u6848\uff1a\u4f7f\u7528 [\u589e\u5f37\u578b\u9748\u6d3b\u6a21\u5f0f](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/flex?hl=zh-cn) \u53ef\u4f7f\u8f14\u52a9\u5de5\u4f5c\u5668\u5b89\u5168\u5730\u6436\u4f54\u6216\u53ef\u4f38\u7e2e\u3002\n- \u7531\u65bc OutOfMemory \u932f\u8aa4\uff0c\u57f7\u884c\u5668\u6216\u6620\u5c04\u5668\u5d29\u6f70\u3002\u89e3\u6c7a\u65b9\u6848\uff1a\u589e\u52a0\u57f7\u884c\u5668\u6216\u6620\u5c04\u5668\u7684\u5167\u5b58\u3002\n- Spark Shuffle \u670d\u52d9\u53ef\u80fd\u6703\u904e\u8f09\u3002\u89e3\u6c7a\u65b9\u6848\uff1a\u6e1b\u5c11\u4f5c\u696d\u5206\u5340\u7684\u6578\u91cf\u3002### YARN \u7bc0\u9ede\u904b\u884c\u72c0\u6cc1\u4e0d\u4f73\n\u793a\u4f8b\uff08\u4f86\u81ea YARN \u65e5\u8a8c\uff09\uff1a\n```\n...reported UNHEALTHY with details: 1/1 local-dirs usable space is below\nconfigured utilization percentage/no more usable space\n[ /hadoop/yarn/nm-local-dir : used space above threshold of 90.0% ]\n```\n\u901a\u5e38\u8207 shuffle \u6578\u64da\u7684\u78c1\u76e4\u7a7a\u9593\u4e0d\u8db3\u6709\u95dc\u3002\u901a\u904e\u67e5\u770b\u65e5\u8a8c\u6587\u4ef6\u9032\u884c\u8a3a\u65b7\uff1a\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\u6253\u958b\u9805\u76ee\u7684 [\u96c6\u7fa3](https://console.cloud.google.com/dataproc/clusters?hl=zh-cn) \u9801\u9762\uff0c\u7136\u5f8c\u9ede\u64ca\u96c6\u7fa3\u7684\u540d\u7a31\u3002\n- \u9ede\u64ca\u201c\u67e5\u770b\u65e5\u8a8c\u201d\u3002\n- \u6309`hadoop-yarn-nodemanager`\u904e\u6ffe\u65e5\u8a8c\u3002\n- \u641c\u7d22\u201cUNHEALTHY\u201d\u3002\u53ef\u80fd\u7684\u89e3\u6c7a\u65b9\u6cd5\uff1a\n- \u7528\u6236\u7de9\u5b58\u5b58\u5132\u5728`yarn-site.xml file`\u4e2d\u7684`yarn.nodemanager.local-dirs`\u5c6c\u6027\u6307\u5b9a\u7684\u76ee\u9304\u4e2d\u3002\u6b64\u6587\u4ef6\u4f4d\u65bc`/etc/hadoop/conf/yarn-site.xml`\u3002\u60a8\u53ef\u4ee5\u67e5\u770b`/hadoop/yarn/nm-local-dir`\u8def\u5f91\u4e2d\u7684\u53ef\u7528\u7a7a\u9593\uff0c\u4e26\u522a\u9664`/hadoop/yarn/nm-local-dir/usercache`\u7528\u6236\u7de9\u5b58\u6587\u4ef6\u593e\u4ee5\u91cb\u653e\u7a7a\u9593\u3002\n- \u5982\u679c\u65e5\u8a8c\u5831\u544a\u201cUNHEALTHY\u201d\u72c0\u614b\uff0c\u8acb\u4f7f\u7528\u66f4\u5927\u7684\u78c1\u76e4\u7a7a\u9593\u91cd\u65b0\u5275\u5efa\u96c6\u7fa3\uff0c\u9019\u5c07 [\u63d0\u9ad8\u541e\u5410\u91cf\u4e0a\u9650](#optimize_disk_size) \u3002\n### \u7531\u65bc\u9a45\u52d5\u7a0b\u5e8f\u5167\u5b58\u4e0d\u8db3\uff0c\u4f5c\u696d\u5931\u6557\n\u5728\u96c6\u7fa3\u6a21\u5f0f\u4e0b\u904b\u884c\u4f5c\u696d\u6642\uff0c\u5982\u679c\u4e3b\u7bc0\u9ede\u7684\u5167\u5b58\u5927\u5c0f\u660e\u986f\u5927\u65bc\u5de5\u4f5c\u5668\u7bc0\u9ede\u7684\u5167\u5b58\u5927\u5c0f\uff0c\u5247\u4f5c\u696d\u5c07\u5931\u6557\u3002\n\u9a45\u52d5\u7a0b\u5e8f\u65e5\u8a8c\u4e2d\u7684\u793a\u4f8b\uff1a\n```\n'Exception in thread \"main\" java.lang.IllegalArgumentException:\nRequired AM memory (32768+3276 MB) is above the max threshold (12288 MB) of this cluster!\nPlease check the values of 'yarn.scheduler.maximum -allocation-mb' and/or 'yarn.nodemanager.resource.memory-mb'.'\n```\n\u53ef\u80fd\u7684\u89e3\u6c7a\u65b9\u6cd5\uff1a\n- \u5c07`spark:spark.driver.memory`\u8a2d\u7f6e\u7232\u5c0f\u65bc`yarn:yarn.scheduler.maximum-allocation-mb`\u3002\n- \u7232\u4e3b\u7bc0\u9ede\u548c\u5de5\u4f5c\u5668\u7bc0\u9ede\u4f7f\u7528\u76f8\u540c\u7684\u6a5f\u5668\u985e\u578b\u3002## \u5982\u9700\u6df1\u5165\u77ad\u89e3\n- \u8acb\u53c3\u95b1 [Spark \u6027\u80fd\u8abf\u6574](https://spark.apache.org/docs/latest/sql-performance-tuning.html)", "guide": "Dataproc"}