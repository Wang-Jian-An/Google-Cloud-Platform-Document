{"title": "Dataproc - Scale Dataproc on GKE clusters", "url": "https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-scale-cluster", "abstract": "# Dataproc - Scale Dataproc on GKE clusters\nTo scale a Dataproc on GKE cluster, update the autoscaler configuration of the [node pool(s)](/dataproc/docs/guides/dpgke/dataproc-gke-nodepools) associated with the Spark driver or Spark executor roles. You specify Dataproc on GKE [node pools and their associated roles](/dataproc/docs/guides/dpgke/dataproc-gke-nodepools#role_to_node_pool_mapping) when you [create a Dataproc on GKE cluster](/dataproc/docs/guides/dpgke/quickstarts/dataproc-gke-quickstart-create-cluster#create_a_on_cluster) .\n", "content": "## Set node pool autoscaling\nYou can set the bounds for Dataproc on GKE node pool autoscaling when you [create a Dataproc on GKE virtual cluster](/dataproc/docs/guides/dpgke/quickstarts/dataproc-gke-quickstart-create-cluster) . If not specified, Dataproc on GKE node pools are autoscaled with default values (at Dataproc on GKE GA release, defaults set to minimum = 1 and maximum = 10, which are subject to change). To obtain specific minimum and maximum node pool autoscaling values, set them when you create your Dataproc on GKE virtual cluster.\n## Update node pool autoscaling\n**Note:** Updating a Dataproc on GKE node pool configuration to [disable autoscaling](/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_limits) is not recommended.\nUse the following GKE [gcloud container node-pools update](/sdk/gcloud/reference/container/node-pools/update) command to change the autoscaling configuration of a Dataproc on GKE node pool.\n```\ngcloud container node-pools update NODE_POOL_NAME \\\n\u00a0\u00a0\u00a0\u00a0--cluster=GKE_CLUSTER_NAME \\\n\u00a0\u00a0\u00a0\u00a0--region=region \\\n\u00a0\u00a0\u00a0\u00a0--enable-autoscaling \\\n\u00a0\u00a0\u00a0\u00a0--min-nodes=min nodes (must be <= max-nodes) \\\n\u00a0\u00a0\u00a0\u00a0--max-nodes=max nodes (must be >= min-nodes) \\\n```\n## How Spark autoscaling works\n- When a job is submitted, the driver pod is scheduled to run on the node pool associated with the [Spark driver role](/dataproc/docs/reference/rest/v1/projects.regions.clusters#role) .\n- The driver pod calls the GKE scheduler to create executor pods.\n- Executor pods are scheduled on the node pool associated with the [Spark executor role](/dataproc/docs/reference/rest/v1/projects.regions.clusters#role) .\n- If the node pools have capacity for the pods, the pods start running immediately. If there is insufficient capacity, the GKE cluster autoscaler scales up the node pool to provide the requested resources, up to the user-specified limit. When node pools have excess capacity, the GKE cluster autoscaler scales down the node pool to its user-specified limit.", "guide": "Dataproc"}