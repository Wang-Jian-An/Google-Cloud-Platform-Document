{"title": "Dataproc - Manage Dataproc resources using custom constraints", "url": "https://cloud.google.com/dataproc/docs/concepts/dataproc-custom-constraints", "abstract": "# Dataproc - Manage Dataproc resources using custom constraints\n# Manage Dataproc resources using custom constraints\nGoogle Cloud Organization Policy gives you centralized, programmatic control over your organization's resources. As the [organization policy administrator](/resource-manager/docs/organization-policy/using-constraints#add-org-policy-admin) , you can define an organization policy, which is a set of restrictions called constraints that apply to Google Cloud resources and descendants of those resources in the [Google Cloud resource hierarchy](/resource-manager/docs/cloud-platform-resource-hierarchy) . You can enforce organization policies at the organization, folder, or project level.\nOrganization Policy provides [predefined constraints](/resource-manager/docs/organization-policy/org-policy-constraints) for various Google Cloud services. However, if you want more granular, customizable control over the specific fields that are restricted in your organization policies, you can also create and use those custom constraints in a custom organization policy.\n", "content": "## Benefits\nYou can use a custom organization policy to allow or deny specific operations on Dataproc clusters. For example, if a request to create or update a cluster fails to satisfy custom constraint validation as set by your organization policy, the request will fail, and an error will be returned to the caller.\n## Policy inheritance\nBy default, organization policies are inherited by the descendants of the resources on which you enforce the policy. For example, if you enforce a policy on a folder, Google Cloud enforces the policy on all projects in the folder. To learn more about this behavior and how to change it, refer to [Hierarchy evaluation rules](/resource-manager/docs/organization-policy/understanding-hierarchy#disallow_inheritance) .\n## Pricing\nThe Organization Policy Service, including predefined and custom organization policies, is offered at no charge.\n## Before you begin\n- **Set up your project** \n- Ensure that you know your [organization ID](/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id) .### Required roles\nTo get the permissions that you need to manage organization policies,   ask your administrator to grant you the  following IAM roles:\n- [Organization policy administrator ](https://cloud.google.com/iam/docs/understanding-roles#orgpolicy.policyAdmin) (`roles/orgpolicy.policyAdmin`)    on the organization resource\n- To create or update a Dataproc cluster: [Dataproc Admin or Dataproc Editor](/dataproc/docs/concepts/iam/iam#roles) (`roles/dataproc.admin`or`roles/dataproc.editor`)     on the project resource\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nThese predefined roles contain     the permissions required to manage organization policies. To see the exact permissions that are   required, expand the **Required permissions** section:\nYou might also be able to get   these permissions  with [custom roles](/iam/docs/creating-custom-roles) or  other [predefined roles](/iam/docs/understanding-roles) .\n## Create a custom constraint\nA custom constraint is defined in a YAML file by the resources, methods, conditions, and actions it is applied to. Dataproc supports custom constraints that are applied to the `CREATE` and `UPDATE` methods of the `CLUSTER` resource (see [Dataproc constraints on resources and operations](#supported_resources) ).\nTo create a YAML file for a Dataproc custom constraint:\n```\nname: organizations/ORGANIZATION_ID/customConstraints/CONSTRAINT_NAMEresourceTypes:- dataproc.googleapis.com/ClustermethodTypes: - METHODcondition: \"CONDITION\"actionType: ACTIONdisplayName: DISPLAY_NAMEdescription: DESCRIPTION\n```\nReplace the following:\n- `` : your organization ID, such as `123456789` .\n- `` : the name you want for your new custom constraint. This field has a maximum length of 100 characters, not counting the prefix (for example, `organizations/123456789/customConstraints/` ). A custom constraint must start with `custom.` . For example, `custom.dataprocEnableComponentGateway` .- ``: When creating a cluster creation constraint, specify`CREATE`. When creating a cluster`UPDATE`constraint, specify both as follows:```\nmethodTypes:\n- CREATE\n- UPDATE\n```\n- `` : a [CEL condition](/resource-manager/docs/organization-policy/creating-managing-custom-constraints#common_expression_language) that is written against a representation of a supported service resource. This field has a maximum length of 1000 characters. See [Supported resources](#supported_resources) for more information about the resources available to write conditions against. For example, `\"resource.config.endpointConfig.enableHttpPortAccess==true\"` .\n- `` : the action to take if the `condition` is met. This can be either `ALLOW` or `DENY` .\n- `` : a human-friendly name for the constraint, for example, \"Enforce enabling Dataproc Component Gateway\". This field has a maximum length of 200 characters.\n- `` : a human-friendly description of the constraint to display as an error message when the policy is violated, for example, \"Only allow Dataproc cluster creation if the Component Gateway is enabled\". This field has a maximum length of 2000 characters.\nFor more information about how to create a custom constraint, see [Defining custom constraints](/resource-manager/docs/organization-policy/creating-managing-custom-constraints#defining_custom_constraints) .\n## Set up a custom constraint\n`gcloud org-policies set-custom-constraint`\n```\ngcloud org-policies set-custom-constraint CONSTRAINT_PATH\n```\n``\n`/home/user/customconstraint.yaml`\n`gcloud org-policies list-custom-constraints`\n```\ngcloud org-policies list-custom-constraints --organization=ORGANIZATION_ID\n```\n``\n[Viewing organization policies](/resource-manager/docs/organization-policy/creating-managing-policies#viewing_organization_policies)\n## Enforce a custom constraint\nTo enforce a boolean constraint:- Open the **Organization policies** page in the Google Cloud console. [Open Organization policies page](https://console.cloud.google.com/iam-admin/orgpolicies) \n- Select the project picker at the top of the page.\n- From the project picker, select the project for which you want to set the   organization policy.\n- Select your constraint from the list on the **Organization policies** page.   The **Policy details** page for that constraint should appear.\n- To customize the organization policy for this resource, click **Manage policy** .\n- On the **Edit policy** page, select **Customize** .\n- Click **Add rule** .\n- Under **Enforcement** , select whether enforcement of this organization policy   should be on or off.\n- Optionally, to make the organization policy conditional on a tag, click **Add condition** . Note that if you add a conditional rule to an organization   policy, you must add at least one unconditional rule or the policy cannot be saved. For more   details, see [Setting an organization policy with tags](/resource-manager/docs/organization-policy/tags-organization-policy) .\n- If this is a custom constraint, you can click **Test changes** to simulate the   effect of this organization policy. For more information, see [Test organization policy changes with Policy Simulator](/policy-intelligence/docs/test-organization-policies) .\n- To finish and apply the organization policy, click **Set policy** . The policy will   take up to 15 minutes to take effect.\nTo create an organization policy that enforces a boolean constraint, create a policy  YAML file that references the constraint:\n```\n\u00a0 \u00a0 \u00a0 name: projects/PROJECT_ID/policies/CONSTRAINT_NAME\u00a0 \u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 \u00a0 rules:\u00a0 \u00a0 \u00a0 \u00a0 - enforce: true\u00a0 \u00a0 \n```\nReplace the following:- ``: the project on which you want to enforce your   constraint.\n- ``: the name you defined for your custom constraint. For  example,`custom.dataprocEnableComponentGateway`.\nTo enforce the organization policy containing the constraint, run the following command:\n```\n\u00a0 \u00a0 gcloud org-policies set-policy POLICY_PATH\u00a0 \u00a0 \n```\nReplace `` with the full path to your organization policy  YAML file. The policy will take up to 15 minutes to take effect.\n## Test the custom constraint\nThe following cluster creation example assumes a custom organization policy has been created and enforced on cluster creation to require enabling the [Component Gateway](/dataproc/docs/concepts/accessing/dataproc-gateways#creating_a_cluster_with_component_gateway) ( `resource.config.endpointConfig.enableHttpPortAccess==true` ).\n```\ngcloud dataproc clusters create example-cluster \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 --zone=COMPUTE_ZONE\n```\nSample output (by default, the Component Gateway is not enabled when a Dataproc cluster is created):\n```\nOperation denied by custom org policies: [\"customConstraints/custom.dataprocEnableComponentGateway\": \"Only allow Dataproc cluster creation if the Component Gateway is enabled\"]\n```\n## Dataproc constraints on resources and operations\nThe following Dataproc custom constraint fields are available to use when you **create or update a Dataproc cluster** . Note that when updating a cluster, only the constraints related to editable cluster parameters are supported (see [Updating a cluster](/dataproc/docs/guides/manage-cluster#updating_a_cluster) ).\n- [Compute Engine network configuration](/dataproc/docs/reference/rest/v1/ClusterConfig#GceClusterConfig) (networkUri, internalIpOnly, serviceAccount and metadata)- `resource.config.gceClusterConfig.networkUri`\n- `resource.config.gceClusterConfig.internalIpOnly`\n- `resource.config.gceClusterConfig.serviceAccount`\n- `resource.config.gceClusterConfig.metadata`\n- [Compute Engine instance group configuration](/dataproc/docs/reference/rest/v1/ClusterConfig#instancegroupconfig) (imageUri and machineTypeUri)- `resource.config.masterConfig.imageUri`\n- `resource.config.masterConfig.machineTypeUri`\n- `resource.config.workerConfig.imageUri`\n- `resource.config.workerConfig.machineTypeUri`\n- `resource.config.secondaryWorkerConfig.imageUri`\n- `resource.config.secondaryWorkerConfig.machineTypeUri`\n- [Initialization actions](/dataproc/docs/reference/rest/v1/ClusterConfig#nodeinitializationaction) (executableFile)- `resource.config.initializationActions.executableFile`\n- [Software config](/dataproc/docs/reference/rest/v1/ClusterConfig#softwareconfig) (imageVersion, properties and optionalComponents)- `resource.config.softwareConfig.imageVersion`\n- `resource.config.softwareConfig.properties`\n- `resource.config.softwareConfig.optionalComponents`\n- [Kerberos config](/dataproc/docs/reference/rest/v1/ClusterConfig#kerberosconfig) (enableKerberos and crossRealmTrustKdc)- `resource.config.securityConfig.kerberosConfig.enableKerberos`\n- `resource.config.securityConfig.kerberosConfig.crossRealmTrustKdc`\n- [Component gateway](/dataproc/docs/reference/rest/v1/ClusterConfig#endpointconfig) (enableHttpPortAccess)- `resource.config.endpointConfig.enableHttpPortAccess`\n- [Metastore config](/dataproc/docs/reference/rest/v1/ClusterConfig#metastoreconfig) (dataprocMetastoreService)- `resource.config.metastoreConfig.dataprocMetastoreService`\n- [Persistent Disk CMEK](/dataproc/docs/concepts/configuring-clusters/customer-managed-encryption) (gcePdKmsKeyName)- `resource.config.encryptionConfig.gcePdKmsKeyName`\n- [Cluster labels](/dataproc/docs/guides/creating-managing-labels) - `resource.labels`\n- [Cluster size](/dataproc/docs/concepts/configuring-clusters/scaling-clusters) - `resource.config.masterConfig.numInstances`\n- `resource.config.workerConfig.numInstances`\n- `resource.config.secondaryWorkerConfig.numInstances`\n- [Autoscaling](/dataproc/docs/concepts/configuring-clusters/autoscaling) - `resource.config.autoscalingConfig.policyUri`\n## Example custom constraints for common use cases\nThe following table provides examples of custom constraints:\n| Description                       | Constraint syntax                                                                                                                            |\n|:-------------------------------------------------------------------------------------------------------||\n| Restrict the number of Dataproc worker instances to 10 or fewer when a cluster is created or updated. | name: organizations/ORGANIZATION_ID/customConstraints/custom.dataprocNoMoreThan10Workers resourceTypes: - dataproc.googleapis.com/Cluster methodTypes: - CREATE - UPDATE condition: \"resource.config.workerConfig.numInstances + resource.config.secondaryWorkerConfig.numInstances > 10\" actionType: DENY displayName: Total number of worker instances cannot be larger than 10 description: Cluster cannot have more than 10 workers, including primary and secondary workers.         |\n| Prevent application master from running on Dataproc cluster preemptible workers.      | name: organizations/ORGANIZATION_ID/customConstraints/custom.dataprocAmPrimaryOnlyEnforced resourceTypes: - dataproc.googleapis.com/Cluster methodTypes: - CREATE condition: \"('dataproc:am.primary_only' in resource.config.softwareConfig.properties) && (resource.config.softwareConfig.properties['dataproc:am.primary_only']==true)\" actionType: ALLOW displayName: Application master cannot run on preemptible workers description: Property \"dataproc:am.primary_only\" must be \"true\".      |\n| Disallow custom Hive properties on Dataproc clusters.             | name: organizations/ORGANIZATION_ID/customConstraints/custom.dataprocNoCustomHiveProperties resourceTypes: - dataproc.googleapis.com/Cluster methodTypes: - CREATE condition: \"resource.config.softwareConfig.properties.all(p, !p.startsWith('hive:'))\" actionType: ALLOW displayName: Cluster cannot have custom Hive properties description: Only allow Dataproc cluster creation if no property starts with Hive prefix \"hive:\".                     |\n| Disallow the use of the n1-standard-2 machine type for Dataproc master instances.      | name: organizations/ORGANIZATION_ID/customConstraints/custom.dataprocMasterMachineType resourceTypes: - dataproc.googleapis.com/Cluster methodTypes: - CREATE condition: \"resource.config.masterConfig.machineTypeUri.contains('n1-standard-2')\" actionType: DENY displayName: Master cannot use the n1-standard-2 machine type description: Prevent Dataproc cluster creation if the master machine type is n1-standard-2.                       |\n| Enforce the use of a specified initialization action script.           | name: organizations/ORGANIZATION_ID/customConstraints/custom.dataprocInitActionScript resourceTypes: - dataproc.googleapis.com/Cluster methodTypes: - CREATE condition: \"resource.config.initializationActions.exists(action, action.executableFile=='gs://some/init-action.sh')\" actionType: ALLOW displayName: Initialization action script \"gs://some/init-action.sh\" must be used description: Only allow Dataproc cluster creation if the \"gs://some/init-action.sh\". initialization action script is used.  |\n| Enforce the use of a specified persistent disk encryption key.           | name: organizations/ORGANIZATION_ID/custom.dataprocPdCmek resourceTypes: - dataproc.googleapis.com/Cluster methodTypes: - CREATE condition: \"resource.config.encryptionConfig.gcePdKmsKeyName == 'projects/project-id/locations/global/keyRings/key-ring-name/cryptoKeys/key-name'\" actionType: ALLOW displayName: Cluster PD must be encrypted with \"key-name\" from \"key-ring-name\" key-ring description: Only allow Dataproc cluster creation if the PD is encrypted with \"key-name\" from \"key-ring-name\" key-ring. |\n| Enforce cluster label restrictions.                 | name: organizations/ORGANIZATION_ID/customConstraints/custom.dataprocEnvLabel resourceTypes: - dataproc.googleapis.com/Cluster methodTypes: - CREATE - UPDATE condition: \"('env' in resource.labels) && (resource.labels.env=='test')\" actionType: DENY displayName: Cluster cannot have the \"env=test\" label description: Deny Dataproc cluster creation or update if the cluster will be labeled \"env=test\".                          |\n| Enforce the use of a non-default network.                | name: organizations/ORGANIZATION_ID/customConstraints/custom.dataprocNoDefaultNetwork resourceTypes: - dataproc.googleapis.com/Cluster methodTypes: - CREATE condition: \"resource.config.gceClusterConfig.networkUri.contains('networks/default')\" actionType: DENY displayName: Cluster cannot be created in the default network description: Deny Dataproc cluster creation if the cluster will be created in the default network.                     |\n## What's next\n- See [Introduction to the Organization Policy Service](/resource-manager/docs/organization-policy/overview) to learn more about organization policies.\n- Learn more about how to [create and manage organization policies](/resource-manager/docs/organization-policy/using-constraints) .\n- See the full list of predefined [Organization policy constraints](/resource-manager/docs/organization-policy/org-policy-constraints) .", "guide": "Dataproc"}