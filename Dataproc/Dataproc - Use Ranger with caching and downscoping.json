{"title": "Dataproc - Use Ranger with caching and downscoping", "url": "https://cloud.google.com/dataproc/docs/concepts/components/ranger-caching-downscoping", "abstract": "# Dataproc - Use Ranger with caching and downscoping\n**Objective:** Learn how to use Ranger properties to enable caching and downscoping on a Dataproc cluster.\n", "content": "## Enable caching\nThis section lists the steps to enable caching with Ranger in order to reduce Ranger Key Management System (KMS) round trips to encrypt and decrypt tokens.\n**Note:** Ranger caching is available with Dataproc on Compute Engine image versions starting with image version `2.0.92` .\n- Install [memcached](https://memcached.org/) on Dataproc cluster VMs. By default, the memcached server starts on VM port 11211 ( `localhost:11211` ).```\nsudo apt-get install -y memcached\n```\n- Set the following properties in the `/etc/dataproc-ranger-gcs-plugin/conf/ranger-gcs-site.xml` Ranger config file on Dataproc cluster VMs.```\n<property>\n<name>authorization.service.remoteCaching.address</name>\n<value>localhost:11211</value>\n</property>\n<property>\n<name>authorization.service.remoteCaching.class</name>\n<value>com.google.cloud.hadoop.ranger.gcs.authorization.caching.MemcachedCache</value>\n</property>\n<property>\n<name>authorization.service.remoteCaching.encryption.key.uri</name>\n<value>gcp-kms://projects/PROJECT_ID_OF_KMS_KEY/locations/REGION/keyRings/KEYRING_NAME/cryptoKeys/KEY_NAME</value>\n</property>\n```\n- Restart the authorization service.```\nsudo systemctl restart ranger-gcs-plugin-authorization-server \n```\n### View cache status\nYou can use [telnet](https://en.wikipedia.org/wiki/Telnet) to view Ranger cache status.\n- Install `telnet` .```\nsudo apt-get install -y telnet \n```\n- Use telnet to connect to `memcache` on VM port `11211` .```\nsudo telnet 127.0.0.1 11211\n```\n- Use `telnet` commands to view cache status, including the following commands:- `stats items`: List the status of cache items. Sample output:```\nSTAT items:17:number 2\nSTAT items:17:number_hot 0\nSTAT items:17:number_warm 0\nSTAT items:17:number_cold 2\n```\n- `stats cachedump`: List keys stored in the cache. Sample output:```\nstats cachedump 17 2\nITEM 0616eeeeb54e23a09505da5bf75cd7fafe733eacf0d07bd7b1ac9cf46d17c188 [3051 b; 1707948281 s]\nITEM d23645df9c79290d59ddb1b9710ff04fee37aa0b5de866b9b6d56b54641d68b4 [3078 b; 1707948281 s]\n```\n- `flush_all`: Invalidate cache items.\n## Downscope Cloud Storage access tokens\nYou might need to downscope Ranger access tokens to move up (upscope) the Cloud Storage paths that an external Hive table points to.\nTo move all partitions and subpartitions up to the table level, set the `downscope.table.partition-name.pruning.enabled` property to `true` in the `ranger-gcs-site.xml` config file on Dataproc cluster VMs.\n```\n<property>\n <name>downscope.table.partition-name.pruning.enabled</name>\n <value>true</value>\n</property>\n```\nExample:\n- Cloud Storage bucket name:`gs://warehouse`\n- Original access token path:`warehouse/hive/table/type=debit/year=2017/month=Aug/day=01/`\n- After setting`downscope.table.partition-name.pruning.enabled`to`true`, upscoped access token path:`warehouse/hive/table/`\n**Note:** You can verify access token paths in the `/var/log/ranger-gcs-plugin-authorization-server.log` when `log4j.properties` is set to `debug` .", "guide": "Dataproc"}