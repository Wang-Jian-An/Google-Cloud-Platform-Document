{"title": "Dataproc - Back up and restore a Ranger schema", "url": "https://cloud.google.com/dataproc/docs/concepts/components/backup-ranger-schema", "abstract": "# Dataproc - Back up and restore a Ranger schema\nThis page shows you how to back up and restore a Ranger schema on [Dataproc with Ranger clusters](/dataproc/docs/concepts/components/ranger) .\n", "content": "## Before you begin\n- Create a bucket if needed. You must have access to a Cloud Storage bucket, which you will use to store and restore a Ranger schema.To create a bucket:- In the Google Cloud console, go to the Cloud Storage **Buckets** page. [Go to Buckets page](https://console.cloud.google.com/storage/browser) \n- Click **Create bucket** .\n- On the **Create a bucket** page, enter your bucket information. To go to the next step, click **Continue** .- For **Name your bucket** , enter a name that meets the [bucket naming requirements](/storage/docs/bucket-naming#requirements) .\n- For **Choose where to store your data** , do the following:- Select a **Location type** option.\n- Select a **Location** option.\n- For **Choose a default storage class for your data** , select a [storage class](/storage/docs/storage-classes) .\n- For **Choose how to control access to objects** , select an **Access control** option.\n- For **Advanced settings (optional)** , specify  an [encryption method](/storage/docs/encryption) ,  a [retention policy](/storage/docs/bucket-lock) ,  or [bucket labels](/storage/docs/tags-and-labels#bucket-labels) .\n- Click **Create** .\n## Back up a Ranger schema\n- Use [SSH](/dataproc/docs/concepts/accessing/ssh) to connect to the Dataproc master node of the cluster with the Ranger schema. **Run the commands in this section in the SSH terminal session running onthe master node.** \n- Set environment variables.```\nBUCKET_NAME=bucket name \\\n\u00a0\u00a0MYSQL_PASSWORD=MySQL password\n\u00a0\u00a0SCHEMA_FILE=schema filename\n```Replace the following:- : You can open `/etc/mysql/my.cnf` on the cluster master node to copy the MySQL password.\n- : The name of the Cloud Storage bucket to use to store the Ranger schema.\n- : Specify a filename, without the `.sql` filename extension. The Ranger schema is saved to this file on the master node, then saved in in Cloud Storage .\n- Stop Hive services.```\nsudo systemctl stop hive-metastore.service\nsudo systemctl stop hive-server2.service\n```\n- Prevent changes to the Ranger schema tables.```\nmysql -u root -p${MYSQL_PASSWORD}\nREVOKE ALL PRIVILEGES ON ranger.* from 'rangeradmin'@'localhost';\nGRANT SELECT ON ranger.* TO 'rangeradmin'@'localhost';\nFLUSH PRIVILEGES;\nSHOW GRANTS FOR 'rangeradmin'@'localhost';\nexit;\n```\n- Save the Ranger schema to an `.sql` file.```\nmysqldump -u root -p${MYSQL_PASSWORD} ranger > ${SCHEMA_FILE}.sql\n```\n- Reset Ranger privileges.```\nmysql -u root -p${MYSQL_PASSWORD}\nREVOKE SELECT ON ranger.* from 'rangeradmin'@'localhost';\nGRANT ALL PRIVILEGES ON ranger.* to 'rangeradmin'@'localhost';\nFLUSH PRIVILEGES;\nSHOW GRANTS FOR 'rangeradmin'@'localhost';\nexit;\n```\n- Restart Hive and Ranger services.```\nsudo systemctl start hive-metastore.service\n\u00a0\u00a0sudo systemctl start hive-server2.service\n\u00a0\u00a0sudo systemctl restart ranger-admin.service\n\u00a0\u00a0sudo systemctl restart ranger-usersync.service\n```\n- Copy the Ranger schema to Cloud Storage.```\ngsutil cp ${SCHEMA_FILE}.sql gs://${BUCKET_NAME}\n```## Restore a Ranger schema\n**Note:** If you back up then restore the schema to same cluster, you may be able to use the SSH session and environment variables used in your [Ranger schema backup session](#back_up_a_ranger_schema) .\n- Use [SSH](/dataproc/docs/concepts/accessing/ssh) to connect to the Dataproc master node of the cluster where you will restore the cluster schema. **Run the commands in this section in the SSH terminal session running onthe master node.** \n- Set environment variables.```\nBUCKET_NAME=bucket name \\\n\u00a0\u00a0MYSQL_PASSWORD=MySQL password\n\u00a0\u00a0SCHEMA_FILE=schema filename\n```Replace the following:- : You can open `/etc/mysql/my.cnf` on the cluster master node to copy the MySQL password.\n- : The name of the Cloud Storage bucket that contains the saved Ranger schema.\n- : The name of the Ranger schema filename, without the `.sql` filename extension, saved in in Cloud Storage.\n- Stop Hive services.```\nsudo systemctl stop hive-metastore.service\nsudo systemctl stop hive-server2.service\n```\n- Prevent changes to the Ranger schema tables.```\nmysql -u root -p${MYSQL_PASSWORD}\nREVOKE ALL PRIVILEGES ON ranger.* from 'rangeradmin'@'localhost';\nGRANT SELECT ON ranger.* TO 'rangeradmin'@'localhost';\nFLUSH PRIVILEGES;\nSHOW GRANTS FOR 'rangeradmin'@'localhost';\nexit;\n```\n- Copy the Ranger schema `.sql` file in Cloud Storage to the cluster master node.```\ngsutil cp ${BUCKET_NAME}/${SCHEMA_FILE}.sql .\n```\n- Restore the Ranger schema. **This step overwrites the contents of theexisting Ranger schema.** ```\nmysqldump -u root -p${MYSQL_PASSWORD} ranger < ${SCHEMA_FILE}.sql\n```\n- Reset Ranger privileges.```\nmysql -u root -p${MYSQL_PASSWORD}\nREVOKE SELECT ON ranger.* from 'rangeradmin'@'localhost';\nGRANT ALL PRIVILEGES ON ranger.* to 'rangeradmin'@'localhost';\nFLUSH PRIVILEGES;\nSHOW GRANTS FOR 'rangeradmin'@'localhost';\nexit;\n```\n- Update Ranger configuration files. Change the Ranger DB host to a new database hostname in the following files with the following properties:| File      | Property       |\n|:-------------------------|:-----------------------------------|\n| ranger-hdfs-security.xml | ranger.plugin.hdfs.policy.rest.url |\n| ranger-yarn-security.xml | ranger.plugin.yarn.policy.rest.url |\n- Restart Hive and Ranger services.```\nsudo systemctl start hive-metastore.service\n\u00a0\u00a0sudo systemctl start hive-server2.service\n\u00a0\u00a0sudo systemctl restart ranger-admin.service\n\u00a0\u00a0sudo systemctl restart ranger-usersync.service\n```", "guide": "Dataproc"}