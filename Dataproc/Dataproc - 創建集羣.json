{"title": "Dataproc - \u5275\u5efa\u96c6\u7fa3", "url": "https://cloud.google.com/dataproc/docs/guides/create-cluster?hl=zh-cn", "abstract": "# Dataproc - \u5275\u5efa\u96c6\u7fa3\nDataproc \u6703\u963b\u6b62\u5275\u5efa\u4f7f\u7528 1.3.95\u30011.4.77\u30011.5.53 \u548c 2.0.27 \u4e4b\u524d\u7684\u6620\u50cf\u7248\u672c\u7684\u96c6\u7fa3\uff0c\u9019\u4e9b\u7248\u672c\u53d7 [Apache Log4j \u5b89\u5168\u6f0f\u6d1e](https://logging.apache.org/log4j/2.x/security.html) \u7684\u5f71\u97ff\u3002Dataproc \u9084\u6703\u963b\u6b62\u7232 Dataproc \u6620\u50cf\u7248\u672c 0.x\u30011.0.x\u30011.1.x \u548c 1.2.x \u5275\u5efa\u96c6\u7fa3\u3002Dataproc \u5efa\u8b70\u5118\u53ef\u80fd\u4f7f\u7528\u6700\u65b0\u7684\u6b21\u8981\u6620\u50cf\u7248\u672c\u5275\u5efa Dataproc \u96c6\u7fa3\u3002| \u6620\u50cf\u7248\u672c       | log4j \u7248\u672c | \u5ba2\u6236\u6307\u5c0e |\n|:------------------------------------|:-------------|:-----------|\n| 2.0.29\u30011.5.55 \u548c 1.4.79 \u6216\u66f4\u9ad8\u7248\u672c | log4j.2.17.1 | \u5efa\u8b70  |\n| 2.0.28\u30011.5.54 \u548c 1.4.78   | log4j.2.17.0 | \u5efa\u8b70  |\n| 2.0.27\u30011.5.53 \u548c 1.4.77   | log4j.2.16.0 | \u5f37\u70c8\u5efa\u8b70 |\n| 2.0.26\u30011.5.52 \u548c 1.4.76 \u6216\u66f4\u65e9\u7248\u672c | \u820a\u7248   | \u505c\u6b62\u4f7f\u7528 |\u5982\u9700\u77ad\u89e3\u7279\u5b9a\u6620\u50cf\u548c `log4j` \u66f4\u65b0\u4fe1\u606f\uff0c\u8acb\u53c3\u95b1 [Dataproc \u7248\u672c\u8aaa\u660e](https://cloud.google.com/dataproc/docs/release-notes?hl=zh-cn) \u3002\n", "content": "## \u5982\u4f55\u5275\u5efa Dataproc \u96c6\u7fa3\n\u8981\u6c42\uff1a\n- **\u540d\u7a31** \uff1a\u96c6\u7fa3\u540d\u7a31\u5fc5\u9808\u4ee5\u5c0f\u5beb\u5b57\u6bcd\u958b\u982d\uff0c\u5f8c\u9762\u6700\u591a\u53ef\u8ddf 51 \u500b\u5c0f\u5beb\u5b57\u6bcd\u3001\u6578\u5b57\u548c\u9023\u5b57\u7b26\uff0c\u4f46\u4e0d\u80fd\u4ee5\u9023\u5b57\u7b26\u7d50\u5c3e\u3002 [](None) \n- **\u96c6\u7fa3\u5340\u57df** \uff1a\u60a8\u5fc5\u9808\u7232\u96c6\u7fa3\u6307\u5b9a\u4e00\u500b Compute Engine \u5340\u57df\uff08\u4f8b\u5982 `us-east1` \u6216 `europe-west1` \uff09\uff0c\u4ee5\u4fbf\u5728\u8a72\u5340\u57df\u5167\u9694\u96e2\u96c6\u7fa3\u8cc7\u6e90\uff08\u4f8b\u5982\u5b58\u5132\u5728 Cloud Storage \u4e2d\u7684\u865b\u64ec\u6a5f\u5be6\u4f8b\u548c\u96c6\u7fa3\u5143\u6578\u64da\uff09\u3002- \u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5340\u57df\u7aef\u9ede\uff0c\u8acb\u53c3\u95b1 [\u5340\u57df\u7aef\u9ede](https://cloud.google.com/dataproc/docs/concepts/regional-endpoints?hl=zh-cn) \u3002\n- \u5982\u9700\u77ad\u89e3\u5982\u4f55\u9078\u64c7\u5340\u57df\uff0c\u8acb\u53c3\u95b1 [\u53ef\u7528\u7684\u5340\u57df\u548c\u53ef\u7528\u5340](https://cloud.google.com/compute/docs/regions-zones/regions-zones?hl=zh-cn#available) \u3002\u60a8\u9084\u53ef\u4ee5\u904b\u884c`gcloud compute regions list`\u547d\u4ee4\u4f86\u986f\u793a\u53ef\u7528\u5340\u57df\u7684\u5217\u8868\u3002\n- **\u9023\u63a5** \uff1aDataproc \u96c6\u7fa3\u4e2d\u7684 [Compute Engine \u865b\u64ec\u6a5f\u5be6\u4f8b](https://cloud.google.com/compute/docs/instances?hl=zh-cn) \uff08\u5305\u542b\u4e3b\u5be6\u4f8b\u548c\u5de5\u4f5c\u5668\u865b\u64ec\u6a5f\uff09\u9700\u8981\u5b8c\u6574\u7684\u5167\u90e8 IP \u7db2\u7d61\u8de8\u9023\u63a5\u3002 [default VPC \u7db2\u7d61](https://cloud.google.com/vpc/docs/vpc?hl=zh-cn#default-network) \u63d0\u4f9b\u6b64\u9023\u63a5\uff08\u8acb\u53c3\u95b1 [Dataproc \u96c6\u7fa3\u7db2\u7d61\u914d\u7f6e](https://cloud.google.com/dataproc/docs/concepts/network?hl=zh-cn) \uff09\u3002\n\u53e6\u8acb\u53c3\u95b1\uff1a- [Dataproc \u6700\u4f73\u5be6\u8e10\u6307\u5357\u3002](https://cloud.google.com/blog/topics/developers-practitioners/dataproc-best-practices-guide?hl=zh-cn) \n- [\u5275\u5efa\u4f7f\u7528 ARM \u6a5f\u5668\u985e\u578b\u7684\u96c6\u7fa3](https://cloud.google.com/dataproc/docs/concepts/compute/supported-machine-types?hl=zh-cn#create_a_cluster_with_an_arm_machine_type) \u3002\n\u5982\u9700\u901a\u904e\u547d\u4ee4\u884c\u5275\u5efa Dataproc \u96c6\u7fa3\uff0c\u8acb\u5728\u7d42\u7aef\u7a97\u53e3\u6216 [Cloud Shell](https://console.cloud.google.com/?cloudshell=true&hl=zh-cn) \u4e2d\u672c\u5730\u904b\u884c [gcloud dataproc clusters create](https://cloud.google.com/sdk/gcloud/reference/dataproc/clusters/create?hl=zh-cn) \u547d\u4ee4\u3002\n```\ngcloud dataproc clusters create CLUSTER_NAME \\\n\u00a0\u00a0\u00a0\u00a0--region=REGION\n```\n\u8a72\u547d\u4ee4\u6703\u5275\u5efa\u4e00\u500b\u96c6\u7fa3\uff0c\u5176\u4e2d\u5305\u542b\u60a8\u7684\u4e3b\u5be6\u4f8b\u548c\u5de5\u4f5c\u5668\u865b\u64ec\u6a5f\u5be6\u4f8b\u7684\u9ed8\u8a8d Dataproc \u670d\u52d9\u8a2d\u7f6e\u3001\u78c1\u76e4\u5927\u5c0f\u548c\u985e\u578b\u3001\u7db2\u7d61\u985e\u578b\u3001\u90e8\u7f72\u96c6\u7fa3\u7684\u5340\u57df\u548c\u53ef\u7528\u5340\u4ee5\u53ca\u5176\u4ed6\u96c6\u7fa3\u8a2d\u7f6e\u3002\u8981\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u547d\u4ee4\u884c\u6a19\u8a18\u81ea\u5b9a\u7fa9\u96c6\u7fa3\u8a2d\u7f6e\uff0c\u8acb\u53c3\u95b1 [gcloud dataproc clusters create](https://cloud.google.com/sdk/gcloud/reference/dataproc/clusters/create?hl=zh-cn) \u547d\u4ee4\u3002\n### \u4f7f\u7528 YAML \u6587\u4ef6\u5275\u5efa\u96c6\u7fa3- \u904b\u884c\u4ee5\u4e0b`gcloud`\u547d\u4ee4\u5c07\u73fe\u6709 Dataproc \u96c6\u7fa3\u7684\u914d\u7f6e\u5c0e\u51fa\u5230`cluster.yaml`\u6587\u4ef6\u3002```\ngcloud dataproc clusters export EXISTING_CLUSTER_NAME \\\n\u00a0\u00a0\u00a0\u00a0--region=REGION \\\n\u00a0\u00a0\u00a0\u00a0--destination=cluster.yaml\n```\n- \u901a\u904e\u5c0e\u5165 YAML \u6587\u4ef6\u914d\u7f6e\u4f86\u5275\u5efa\u65b0\u96c6\u7fa3\u3002```\ngcloud dataproc clusters import NEW_CLUSTER_NAME \\\n\u00a0\u00a0\u00a0\u00a0--region=REGION \\\n\u00a0\u00a0\u00a0\u00a0--source=cluster.yaml\n```\n **\u6ce8\u610f** \uff1a\u5728\u5c0e\u51fa\u64cd\u4f5c\u671f\u9593\uff0c\u7279\u5b9a\u65bc\u96c6\u7fa3\u7684\u5b57\u6bb5\uff08\u4f8b\u5982\u96c6\u7fa3\u540d\u7a31\u3001\u50c5\u9650\u8f38\u51fa\u7684\u5b57\u6bb5\u548c\u81ea\u52d5\u61c9\u7528\u7684\u6a19\u7c64\uff09\u6703\u88ab\u6ffe\u9664\u3002\u5728\u7528\u65bc\u5275\u5efa\u96c6\u7fa3\u7684\u5c0e\u5165\u7684 YAML \u6587\u4ef6\u4e2d\uff0c\u4e0d\u5141\u8a31\u4f7f\u7528\u9019\u4e9b\u5b57\u6bb5\u3002\n **\u6ce8\u610f** \uff1a\u60a8\u53ef\u4ee5\u9ede\u64ca Dataproc Google Cloud \u63a7\u5236\u6aaf [\u5275\u5efa\u96c6\u7fa3](https://console.cloud.google.com/dataproc/clustersAdd?hl=zh-cn) \u9801\u9762\u5de6\u5074\u9762\u677f\u5e95\u90e8\u7684 **\u7b49\u6548 REST \u6216\u547d\u4ee4\u884c** \u93c8\u63a5\uff0c\u8b93\u63a7\u5236\u6aaf\u69cb\u5efa\u7b49\u6548\u7684 API REST \u8acb\u6c42\u6216`gcloud`\u5de5\u5177\u547d\u4ee4\uff0c\u4f9b\u60a8\u5728\u4ee3\u78bc\u4e2d\u4f7f\u7528\uff0c\u6216\u8005\u5f9e\u547d\u4ee4\u884c\u7528\u65bc\u5275\u5efa\u96c6\u7fa3\u3002\u672c\u90e8\u5206\u4ecb\u7d39\u5982\u4f55\u5275\u5efa\u63a1\u7528\u6240\u9700\u503c\u548c\u9ed8\u8a8d\u914d\u7f6e\uff081 \u500b\u4e3b\u7bc0\u9ede\uff0c2 \u500b\u5de5\u4f5c\u5668\u7bc0\u9ede\uff09\u7684\u96c6\u7fa3\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \uff1aGoogle Cloud \u9805\u76ee ID\n- \uff1a [\u96c6\u7fa3\u5730\u5340](https://cloud.google.com/dataproc/docs/guides/create-cluster?hl=zh-cn#cluster-region) \n- \uff1a\u96c6\u7fa3\u540d\u7a31\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://dataproc.googleapis.com/v1/projects/project-id/regions/region/clusters\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"clusterName\": \"cluster-name\",\n \"config\": {}\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n\"name\": \"projects/project-id/regions/region/operations/b5706e31......\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.dataproc.v1.ClusterOperationMetadata\",\n \"clusterName\": \"cluster-name\",\n \"clusterUuid\": \"5fe882b2-...\",\n \"status\": {\n  \"state\": \"PENDING\",\n  \"innerState\": \"PENDING\",\n  \"stateStartTime\": \"2019-11-21T00:37:56.220Z\"\n },\n \"operationType\": \"CREATE\",\n \"description\": \"Create cluster with 2 workers\",\n \"warnings\": [  \"For PD-Standard without local SSDs, we strongly recommend provisioning 1TB ...\"\"\n ]\n }\n}\n```\n **\u6ce8\u610f** \uff1a\u60a8\u53ef\u4ee5\u9ede\u64ca Dataproc Google Cloud \u63a7\u5236\u6aaf\u5de6\u5074\u9762\u677f\u5e95\u90e8\u7684 **\u7b49\u6548 REST \u6216\u547d\u4ee4\u884c** \u93c8\u63a5\u3002 [\u5275\u5efa\u96c6\u7fa3](https://console.cloud.google.com/dataproc/clustersAdd?hl=zh-cn) \u9801\u9762\uff0c\u8b93\u63a7\u5236\u6aaf\u69cb\u5efa\u4e00\u500b\u7b49\u6548\u7684 API REST \u8acb\u6c42\u6216`gcloud`\u5de5\u5177\u547d\u4ee4\uff0c\u4f9b\u60a8\u5728\u4ee3\u78bc\u4e2d\u4f7f\u7528\uff0c\u6216\u8005\u5f9e\u547d\u4ee4\u884c\u7528\u65bc\u5275\u5efa\u96c6\u7fa3\u3002\u5728\u700f\u89bd\u5668\u4e2d\u6253\u958b Google Cloud \u63a7\u5236\u6aaf\u4e2d\u7684 Dataproc [\u5275\u5efa\u96c6\u7fa3](https://console.cloud.google.com/dataproc/clustersAdd?hl=zh-cn) \u9801\u9762\uff0c\u7136\u5f8c\u5728 **\u5728 Compute Engine** \u4e0a\u5275\u5efa Dataproc \u96c6\u7fa3\u9801\u9762\u4e0a\u7684 **Compute Engine** \u884c\u4e2d\u9ede\u64ca **\u5275\u5efa** \u3002\u9078\u64c7\u201c\u8a2d\u7f6e\u96c6\u7fa3\u201d\u9762\u677f\uff0c\u5176\u4e2d\u7684\u5b57\u6bb5\u586b\u5145\u9ed8\u8a8d\u503c\u3002\u60a8\u53ef\u4ee5\u9078\u64c7\u6bcf\u500b\u9762\u677f\uff0c\u7136\u5f8c\u78ba\u8a8d\u6216\u66f4\u6539\u9ed8\u8a8d\u503c\u4ee5\u81ea\u5b9a\u7fa9\u60a8\u7684\u96c6\u7fa3\u3002\n\u55ae\u64ca **\u5275\u5efa** \u4ee5\u5275\u5efa\u96c6\u7fa3\u3002\u96c6\u7fa3\u540d\u7a31\u6703\u986f\u793a\u5728 **\u96c6\u7fa3** \u9801\u9762\u4e2d\uff0c\u9810\u914d\u96c6\u7fa3\u540e\uff0c\u5176\u72c0\u614b\u6703\u66f4\u65b0\u7232\u201c\u6b63\u5728\u904b\u884c\u201d\u3002\u9ede\u64ca\u96c6\u7fa3\u540d\u7a31\u53ef\u6253\u958b\u96c6\u7fa3\u8a73\u60c5\u9801\u9762\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u6aa2\u67e5\u96c6\u7fa3\u7684\u4f5c\u696d\u3001\u5be6\u4f8b\u548c\u914d\u7f6e\u8a2d\u7f6e\uff0c\u4e26\u9023\u63a5\u5230\u96c6\u7fa3\u4e0a\u904b\u884c\u7684\u7db2\u9801\u754c\u9762\u3002\n- [\u5b89\u88dd\u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/dataproc/docs/reference/libraries?hl=zh-cn#installing_the_client_library) \u3002\n- [\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002](https://cloud.google.com/dataproc/docs/reference/libraries?hl=zh-cn#setting_up_authentication) \n- \u904b\u884c\u4ee3\u78bc\u3002\u8acb\u53c3\u95b1 [\u8a2d\u7f6e\u958b\u767c\u74b0\u5883](https://cloud.google.com/go/docs/setup?hl=zh-cn) \u3002 [dataproc/create_cluster.go](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/dataproc/create_cluster.go) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/dataproc/create_cluster.go) ```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 dataproc \"cloud.google.com/go/dataproc/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/dataproc/apiv1/dataprocpb\"\u00a0 \u00a0 \u00a0 \u00a0 \"google.golang.org/api/option\")func createCluster(w io.Writer, projectID, region, clusterName string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"your-project-id\"\u00a0 \u00a0 \u00a0 \u00a0 // region := \"us-central1\"\u00a0 \u00a0 \u00a0 \u00a0 // clusterName := \"your-cluster\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 // Create the cluster client.\u00a0 \u00a0 \u00a0 \u00a0 endpoint := region + \"-dataproc.googleapis.com:443\"\u00a0 \u00a0 \u00a0 \u00a0 clusterClient, err := dataproc.NewClusterControllerClient(ctx, option.WithEndpoint(endpoint))\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"dataproc.NewClusterControllerClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer clusterClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 // Create the cluster config.\u00a0 \u00a0 \u00a0 \u00a0 req := &dataprocpb.CreateClusterRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProjectId: projectID,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Region: \u00a0 \u00a0region,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Cluster: &dataprocpb.Cluster{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProjectId: \u00a0 projectID,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ClusterName: clusterName,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Config: &dataprocpb.ClusterConfig{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MasterConfig: &dataprocpb.InstanceGroupConfig{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 NumInstances: \u00a0 1,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MachineTypeUri: \"n1-standard-2\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 WorkerConfig: &dataprocpb.InstanceGroupConfig{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 NumInstances: \u00a0 2,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MachineTypeUri: \"n1-standard-2\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Create the cluster.\u00a0 \u00a0 \u00a0 \u00a0 op, err := clusterClient.CreateCluster(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"CreateCluster: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"CreateCluster.Wait: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Output a success message.\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Cluster created successfully: %s\", resp.ClusterName)\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\n- [\u5b89\u88dd\u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/dataproc/docs/reference/libraries?hl=zh-cn#installing_the_client_library) \u3002\n- [\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002](https://cloud.google.com/dataproc/docs/reference/libraries?hl=zh-cn#setting_up_authentication) \n- \u904b\u884c\u4ee3\u78bc\u3002\u8acb\u53c3\u95b1 [\u8a2d\u7f6e Java \u958b\u767c\u74b0\u5883](https://cloud.google.com/java/docs/setup?hl=zh-cn) \u3002 [  Dataproc/src/main/java/CreateCluster.java ](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dataproc/src/main/java/CreateCluster.java) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/dataproc/src/main/java/CreateCluster.java) ```\nimport com.google.api.gax.longrunning.OperationFuture;import com.google.cloud.dataproc.v1.Cluster;import com.google.cloud.dataproc.v1.ClusterConfig;import com.google.cloud.dataproc.v1.ClusterControllerClient;import com.google.cloud.dataproc.v1.ClusterControllerSettings;import com.google.cloud.dataproc.v1.ClusterOperationMetadata;import com.google.cloud.dataproc.v1.InstanceGroupConfig;import java.io.IOException;import java.util.concurrent.ExecutionException;public class CreateCluster {\u00a0 public static void createCluster() throws IOException, InterruptedException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"your-project-id\";\u00a0 \u00a0 String region = \"your-project-region\";\u00a0 \u00a0 String clusterName = \"your-cluster-name\";\u00a0 \u00a0 createCluster(projectId, region, clusterName);\u00a0 }\u00a0 public static void createCluster(String projectId, String region, String clusterName)\u00a0 \u00a0 \u00a0 throws IOException, InterruptedException {\u00a0 \u00a0 String myEndpoint = String.format(\"%s-dataproc.googleapis.com:443\", region);\u00a0 \u00a0 // Configure the settings for the cluster controller client.\u00a0 \u00a0 ClusterControllerSettings clusterControllerSettings =\u00a0 \u00a0 \u00a0 \u00a0 ClusterControllerSettings.newBuilder().setEndpoint(myEndpoint).build();\u00a0 \u00a0 // Create a cluster controller client with the configured settings. The client only needs to be\u00a0 \u00a0 // created once and can be reused for multiple requests. Using a try-with-resources\u00a0 \u00a0 // closes the client, but this can also be done manually with the .close() method.\u00a0 \u00a0 try (ClusterControllerClient clusterControllerClient =\u00a0 \u00a0 \u00a0 \u00a0 ClusterControllerClient.create(clusterControllerSettings)) {\u00a0 \u00a0 \u00a0 // Configure the settings for our cluster.\u00a0 \u00a0 \u00a0 InstanceGroupConfig masterConfig =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InstanceGroupConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setMachineTypeUri(\"n1-standard-2\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setNumInstances(1)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 InstanceGroupConfig workerConfig =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InstanceGroupConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setMachineTypeUri(\"n1-standard-2\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setNumInstances(2)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 ClusterConfig clusterConfig =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ClusterConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setMasterConfig(masterConfig)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setWorkerConfig(workerConfig)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 // Create the cluster object with the desired cluster config.\u00a0 \u00a0 \u00a0 Cluster cluster =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Cluster.newBuilder().setClusterName(clusterName).setConfig(clusterConfig).build();\u00a0 \u00a0 \u00a0 // Create the Cloud Dataproc cluster.\u00a0 \u00a0 \u00a0 OperationFuture<Cluster, ClusterOperationMetadata> createClusterAsyncRequest =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 clusterControllerClient.createClusterAsync(projectId, region, cluster);\u00a0 \u00a0 \u00a0 Cluster response = createClusterAsyncRequest.get();\u00a0 \u00a0 \u00a0 // Print out a success message.\u00a0 \u00a0 \u00a0 System.out.printf(\"Cluster created successfully: %s\", response.getClusterName());\u00a0 \u00a0 } catch (ExecutionException e) {\u00a0 \u00a0 \u00a0 System.err.println(String.format(\"Error executing createCluster: %s \", e.getMessage()));\u00a0 \u00a0 }\u00a0 }}\n```\n- [\u5b89\u88dd\u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/dataproc/docs/reference/libraries?hl=zh-cn#installing_the_client_library) \u3002\n- [\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002](https://cloud.google.com/dataproc/docs/reference/libraries?hl=zh-cn#setting_up_authentication) \n- \u904b\u884c\u4ee3\u78bc\u3002\u8acb\u53c3\u95b1 [\u8a2d\u7f6e Node.js \u958b\u767c\u74b0\u5883](https://cloud.google.com/nodejs/docs/setup?hl=zh-cn) \u3002 [  Dataproc/createCluster.js ](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dataproc/createCluster.js) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/dataproc/createCluster.js) ```\nconst dataproc = require('@google-cloud/dataproc');// TODO(developer): Uncomment and set the following variables// projectId = 'YOUR_PROJECT_ID'// region = 'YOUR_CLUSTER_REGION'// clusterName = 'YOUR_CLUSTER_NAME'// Create a client with the endpoint set to the desired cluster regionconst client = new dataproc.v1.ClusterControllerClient({\u00a0 apiEndpoint: `${region}-dataproc.googleapis.com`,\u00a0 projectId: projectId,});async function createCluster() {\u00a0 // Create the cluster config\u00a0 const request = {\u00a0 \u00a0 projectId: projectId,\u00a0 \u00a0 region: region,\u00a0 \u00a0 cluster: {\u00a0 \u00a0 \u00a0 clusterName: clusterName,\u00a0 \u00a0 \u00a0 config: {\u00a0 \u00a0 \u00a0 \u00a0 masterConfig: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 numInstances: 1,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 machineTypeUri: 'n1-standard-2',\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 workerConfig: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 numInstances: 2,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 machineTypeUri: 'n1-standard-2',\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 },\u00a0 };\u00a0 // Create the cluster\u00a0 const [operation] = await client.createCluster(request);\u00a0 const [response] = await operation.promise();\u00a0 // Output a success message\u00a0 console.log(`Cluster created successfully: ${response.clusterName}`);\n```\n- [\u5b89\u88dd\u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/dataproc/docs/reference/libraries?hl=zh-cn#installing_the_client_library) \u3002\n- [\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002](https://cloud.google.com/dataproc/docs/reference/libraries?hl=zh-cn#setting_up_authentication) \n- \u904b\u884c\u4ee3\u78bc\u3002\u8acb\u53c3\u95b1 [\u8a2d\u7f6e Python \u958b\u767c\u74b0\u5883](https://cloud.google.com/python/docs/setup?hl=zh-cn) \u3002 [  Dataproc/snippets/create_cluster.py ](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dataproc/snippets/create_cluster.py) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/dataproc/snippets/create_cluster.py) ```\nfrom google.cloud import dataproc_v1 as dataprocdef create_cluster(project_id, region, cluster_name):\u00a0 \u00a0 \"\"\"This sample walks a user through creating a Cloud Dataproc cluster\u00a0 \u00a0 using the Python client library.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 project_id (string): Project to use for creating resources.\u00a0 \u00a0 \u00a0 \u00a0 region (string): Region where the resources should live.\u00a0 \u00a0 \u00a0 \u00a0 cluster_name (string): Name to use for creating a cluster.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 # Create a client with the endpoint set to the desired cluster region.\u00a0 \u00a0 cluster_client = dataproc.ClusterControllerClient(\u00a0 \u00a0 \u00a0 \u00a0 client_options={\"api_endpoint\": f\"{region}-dataproc.googleapis.com:443\"}\u00a0 \u00a0 )\u00a0 \u00a0 # Create the cluster config.\u00a0 \u00a0 cluster = {\u00a0 \u00a0 \u00a0 \u00a0 \"project_id\": project_id,\u00a0 \u00a0 \u00a0 \u00a0 \"cluster_name\": cluster_name,\u00a0 \u00a0 \u00a0 \u00a0 \"config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"master_config\": {\"num_instances\": 1, \"machine_type_uri\": \"n1-standard-2\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"worker_config\": {\"num_instances\": 2, \"machine_type_uri\": \"n1-standard-2\"},\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 }\u00a0 \u00a0 # Create the cluster.\u00a0 \u00a0 operation = cluster_client.create_cluster(\u00a0 \u00a0 \u00a0 \u00a0 request={\"project_id\": project_id, \"region\": region, \"cluster\": cluster}\u00a0 \u00a0 )\u00a0 \u00a0 result = operation.result()\u00a0 \u00a0 # Output a success message.\u00a0 \u00a0 print(f\"Cluster created successfully: {result.cluster_name}\")\n```", "guide": "Dataproc"}