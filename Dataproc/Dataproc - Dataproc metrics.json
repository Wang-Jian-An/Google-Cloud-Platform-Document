{"title": "Dataproc - Dataproc metrics", "url": "https://cloud.google.com/dataproc/docs/guides/dataproc-metrics", "abstract": "# Dataproc - Dataproc metrics\n[Cloud Monitoring](/monitoring/docs) provides visibility into the performance, uptime, and overall health of cloud-powered applications. Google Cloud Observability collects and ingests metrics, events, and metadata from Dataproc clusters, including per-cluster HDFS, YARN, job, and operation metrics, to generate insights via dashboards and charts (see [Cloud Monitoring Dataproc metrics](/monitoring/api/metrics_gcp#gcp-dataproc) ).\n- See [Cloud Monitoring Pricing](/stackdriver/pricing) to understand your costs.\n- See [Monitoring Quotas and limits](/monitoring/quotas#data_retention_policy) for information on metric data retention.", "content": "## Dataproc resource metric collection\nCloud Monitoring collects metrics related to the following Dataproc resources:\n- Cloud Dataproc Cluster\n- Cloud Dataproc Job\n- Cloud Dataproc Batch\n- Cloud Dataproc Session\nDataproc resource metrics are collected in the following format: `dataproc.googleapis.com/` `` `/` `` , and include the collection of several OSS metrics.\n### View Dataproc resource metrics\nYou can select and view the Dataproc resource metrics in the [Metrics Explorer](https://console.cloud.google.com/monitoring/metrics-explorer%7B:%20class=%22external%22%20target=%22console%22%0Atrack-type=%22task%22%20track-name=%22stackdriverConsoleLink%22%20track-metadata-position=%22body%22%7D) by typing \"dataproc\" in the `Filter by resource or metric name` box, then selecting a \"Cloud Dataproc\" resource.\n## Custom metric collection\nWhen you create a Dataproc cluster, you can enable the collection of metrics from one or more custom metric sources. A standard set of metrics is collected from each enabled metric source unless you specify the metrics to collect from a metric source (user-specified metrics are called metric \"overrides\").\nCustom OSS metrics are collected in the following format: `custom.googleapis.com/` `` `/` ``\nCustom OSS metric examples:\n```\ncustom.googleapis.com/spark/driver/DAGScheduler/job/allJobs\ncustom.googleapis.com/hiveserver2/memory/MaxNonHeapMemory\n```\n**Note:** You can also enable the collection of [Dataproc monitoring agent metrics](#monitoring_agent_metrics) , which have an `agent.googleapis.com` prefix.\n### Enable custom metric collection\nYou can use the gcloud CLI or the Dataproc API to enable the collection of [custom metrics](#custom_metrics) from one or more metric sources.\n**Custom metric collection** \nUse the [gcloud dataproc clusters create --metric-sources](/sdk/gcloud/reference/dataproc/clusters/create#--metric-sources) flag to enable the collection of [custom metrics](#custom_metrics) from one or more metric sources.\n```\ngcloud dataproc clusters create cluster-name \\\n\u00a0\u00a0\u00a0\u00a0--metric-sources=METRIC_SOURCE(s) \\\n\u00a0\u00a0\u00a0\u00a0... other flags\n```\nNotes:- `--metric-sources`: Required to enable custom metric collection.  Specify one or more of the following metric sources: [spark](#spark_metrics) , [flink](#flink_metrics) , [hdfs](#hdfs_metrics) , [yarn](#yarn_metrics) , [spark-history-server](#spark_history_server_metrics) , [hiveserver2](#hiveserver_2_metrics) , [hivemetastore](#hive_metastore_metrics) , and [monitoring-agent-defaults](#monitoring_agent_metrics) . The metric source name is case insensitive, for example, either \"yarn\" or \"YARN\" is acceptable.\n- [monitoring-agent-defaults](#monitoring_agent_metrics) are not available in 2.2 image version clusters unless the [Ops Agent](/stackdriver/docs/solutions/agents/ops-agent) is installed.\n **Override metric collection** \nOptionally, add the [--metric-overrides](/sdk/gcloud/reference/dataproc/clusters/create#--metric-sources) or [--metric-overrides-file](/sdk/gcloud/reference/dataproc/clusters/create#--metric-sources) flag to enable the collection of one or more of the [custom metrics](#custom_metrics) from one or more metric sources.- Any of the [custom metrics](#custom_metrics) and all [Spark metrics](https://spark.apache.org/docs/latest/monitoring.html#metrics) ,  can be listed for collection as a metric override. Override metric values  are case sensitive, and must be provided, if appropriate, in CamelCase format.Examples:- `sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed`\n- `hiveserver2:JVM:Memory:NonHeapMemoryUsage.used`\n- `yarn:ResourceManager:JvmMetrics:MemHeapMaxM`\n- Only the specified overridden metrics will be collected from a given  metric source. For example, if one or more`spark:executor`metrics  are listed as metric overrides, other`SPARK`metrics will not be  collected. The collection of custom metrics from other metric sources is  unaffected. For example, if both`SPARK`and`YARN`metric sources are enabled, and overrides are provided for Spark metrics only,  the standard set of enabled YARN metrics will be collected.\n- The source of the specified metric override must be enabled. For  example, if one or more`spark:driver`metrics are  provided as metric overrides, the`spark`metric source must be enabled (`--metric-sources=spark`).\n **Override metrics list** \n```\ngcloud dataproc clusters create cluster-name \\\n\u00a0\u00a0\u00a0\u00a0--metric-sources=METRIC_SOURCE(s) \\\n\u00a0\u00a0\u00a0\u00a0--metric-overrides=LIST_OF_METRIC_OVERRIDES \\\n\u00a0\u00a0\u00a0\u00a0... other flags\n```\nNotes:- `--metric-sources`: Required to enable custom metric collection. Specify one or more of the following metric sources: [spark](#spark_metrics) , [flink](#flink_metrics) , [hdfs](#hdfs_metrics) , [yarn](#yarn_metrics) , [spark-history-server](#spark_history_server_metrics) , [hiveserver2](#hiveserver_2_metrics) , [hivemetastore](#hive_metastore_metrics) , and [monitoring-agent-defaults](#monitoring_agent_metrics) . The metric source name is case insensitive, for example, either \"yarn\" or \"YARN\" is acceptable.\n- `--metric-overrides`: Provide a list of metrics in the following format: : : : Example: `--metric-overrides=sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed`This flag is an alternative to and cannot be used with  the `--metric-overrides-file` flag.\n **Override metrics file** \n```\ngcloud dataproc clusters create cluster-name \\\n\u00a0\u00a0\u00a0\u00a0--metric-sources=METRIC-SOURCE(s) \\\n\u00a0\u00a0\u00a0\u00a0--metric-overrides-file=METRIC_OVERRIDES_FILENAME \\\n\u00a0\u00a0\u00a0\u00a0... other flags\n```\nNotes:- `--metric-sources`: Required to enable custom metric collection.  Specify one or more of the following metric sources: [spark](#spark_metrics) , [flink](#flink_metrics) , [hdfs](#hdfs_metrics) , [yarn](#yarn_metrics) , [spark-history-server](#spark_history_server_metrics) , [hiveserver2](#hiveserver_2_metrics) , [hivemetastore](#hive_metastore_metrics) , and [monitoring-agent-defaults](#monitoring_agent_metrics) . The metric source name is case insensitive, for example, either \"yarn\" or \"YARN\" is acceptable.\n- `--metric-overrides-file`: Specify a local or Cloud Storage  file (`gs://` `` `/` ``) that contains  one or more metrics in the following format: : : : Use camelcase format as appropriate.Examples:- `--metric-overrides-file=gs://my-bucket/my-filename.txt`\n- `--metric-overrides-file=./local-directory/local-filename.txt`This flag is an alternative to and cannot be used with  the `--metric-overrides` flag.\nUse [DataprocMetricConfig](/dataproc/docs/reference/rest/v1/ClusterConfig#dataprocmetricconfig) as part of a [clusters.create](/dataproc/docs/reference/rest/v1/projects.regions.clusters/create) request to enable the collection of custom metrics. Note: [monitoring-agent-defaults](#monitoring_agent_metrics) are not available in 2.2 image version clusters unless the [Ops Agent](/stackdriver/docs/solutions/agents/ops-agent) is installed.\n### View custom metrics\nYou can select and view the Dataproc resource metrics in the [Metrics Explorer](https://console.cloud.google.com/monitoring/metrics-explorer%7B:%20class=%22external%22%20target=%22console%22%0Atrack-type=%22task%22%20track-name=%22stackdriverConsoleLink%22%20track-metadata-position=%22body%22%7D) by selecting the `VM Instance` resource, then selecting `Custom metrics` .\n## Custom metrics\nYou can enable Dataproc to collect the custom metrics listed in the following tables.\n- The **Enabled metrics** column is marked with \"y\" if Dataproc collects the metric when you **enable the associated metric source** .\n- Any of the metrics listed for a metric source, and all [Spark metrics](https://spark.apache.org/docs/latest/monitoring.html#metrics) ), can be enabled for collection if you override the collection of the standard set of enabled metrics for the metric source (see [Enable custom metric collection](/dataproc/docs/guides/monitoring#enable_custom_metric_collection) ).\n- Dataproc uses the monitoring agent to collect metrics. Enabling any metric source enables the collection of [agent metrics](/monitoring/api/metrics_agent#agent-agent) . These metrics are not billed to users; Dataproc uses them to diagnose metric collection issues.\n### Hadoop metrics\n| Metric              | Metrics Explorer name       | Enabled metrics |\n|:-----------------------------------------------------------|:-------------------------------------------------|:------------------|\n| hdfs:NameNode:FSNamesystem:CapacityTotalGB     | dfs/FSNamesystem/CapacityTotalGB     | y     |\n| hdfs:NameNode:FSNamesystem:CapacityUsedGB     | dfs/FSNamesystem/CapacityUsedGB     | y     |\n| hdfs:NameNode:FSNamesystem:CapacityRemainingGB    | dfs/FSNamesystem/CapacityRemainingGB    | y     |\n| hdfs:NameNode:FSNamesystem:FilesTotal      | dfs/FSNamesystem/FilesTotal      | y     |\n| hdfs:NameNode:FSNamesystem:MissingBlocks     | dfs/FSNamesystem/MissingBlocks     | n     |\n| hdfs:NameNode:FSNamesystem:ExpiredHeartbeats    | dfs/FSNamesystem/ExpiredHeartbeats    | n     |\n| hdfs:NameNode:FSNamesystem:TransactionsSinceLastCheckpoint | dfs/FSNamesystem/TransactionsSinceLastCheckpoint | n     |\n| hdfs:NameNode:FSNamesystem:TransactionsSinceLastLogRoll | dfs/FSNamesystem/TransactionsSinceLastLogRoll | n     |\n| hdfs:NameNode:FSNamesystem:LastWrittenTransactionId  | dfs/FSNamesystem/LastWrittenTransactionId  | n     |\n| hdfs:NameNode:FSNamesystem:CapacityTotal     | dfs/FSNamesystem/CapacityTotal     | n     |\n| hdfs:NameNode:FSNamesystem:CapacityUsed     | dfs/FSNamesystem/CapacityUsed     | n     |\n| hdfs:NameNode:FSNamesystem:CapacityRemaining    | dfs/FSNamesystem/CapacityRemaining    | n     |\n| hdfs:NameNode:FSNamesystem:CapacityUsedNonDFS    | dfs/FSNamesystem/CapacityUsedNonDFS    | n     |\n| hdfs:NameNode:FSNamesystem:TotalLoad      | dfs/FSNamesystem/TotalLoad      | n     |\n| hdfs:NameNode:FSNamesystem:SnapshottableDirectories  | dfs/FSNamesystem/SnapshottableDirectories  | n     |\n| hdfs:NameNode:FSNamesystem:Snapshots      | dfs/FSNamesystem/Snapshots      | n     |\n| hdfs:NameNode:FSNamesystem:BlocksTotal      | dfs/FSNamesystem/BlocksTotal      | n     |\n| hdfs:NameNode:FSNamesystem:PendingReplicationBlocks  | dfs/FSNamesystem/PendingReplicationBlocks  | n     |\n| hdfs:NameNode:FSNamesystem:UnderReplicatedBlocks   | dfs/FSNamesystem/UnderReplicatedBlocks   | n     |\n| hdfs:NameNode:FSNamesystem:CorruptBlocks     | dfs/FSNamesystem/CorruptBlocks     | n     |\n| hdfs:NameNode:FSNamesystem:ScheduledReplicationBlocks  | dfs/FSNamesystem/ScheduledReplicationBlocks  | n     |\n| hdfs:NameNode:FSNamesystem:PendingDeletionBlocks   | dfs/FSNamesystem/PendingDeletionBlocks   | n     |\n| hdfs:NameNode:FSNamesystem:ExcessBlocks     | dfs/FSNamesystem/ExcessBlocks     | n     |\n| hdfs:NameNode:FSNamesystem:PostponedMisreplicatedBlocks | dfs/FSNamesystem/PostponedMisreplicatedBlocks | n     |\n| hdfs:NameNode:FSNamesystem:PendingDataNodeMessageCourt  | dfs/FSNamesystem/PendingDataNodeMessageCourt  | n     |\n| hdfs:NameNode:FSNamesystem:MillisSinceLastLoadedEdits  | dfs/FSNamesystem/MillisSinceLastLoadedEdits  | n     |\n| hdfs:NameNode:FSNamesystem:BlockCapacity     | dfs/FSNamesystem/BlockCapacity     | n     |\n| hdfs:NameNode:FSNamesystem:StaleDataNodes     | dfs/FSNamesystem/StaleDataNodes     | n     |\n| hdfs:NameNode:FSNamesystem:TotalFiles      | dfs/FSNamesystem/TotalFiles      | n     |\n| hdfs:NameNode:JvmMetrics:MemHeapUsedM      | dfs/jvm/MemHeapUsedM        | n     |\n| hdfs:NameNode:JvmMetrics:MemHeapCommittedM     | dfs/jvm/MemHeapCommittedM      | n     |\n| hdfs:NameNode:JvmMetrics:MemHeapMaxM      | dfs/jvm/MemHeapMaxM        | n     |\n| hdfs:NameNode:JvmMetrics:MemMaxM       | dfs/jvm/MemMaxM         | n     |\n| Metric               | Metrics Explorer name       | Enabled metrics |\n|:---------------------------------------------------------------|:-----------------------------------------------|:------------------|\n| yarn:ResourceManager:ClusterMetrics:NumActiveNMs    | yarn/ClusterMetrics/NumActiveNMs    | y     |\n| yarn:ResourceManager:ClusterMetrics:NumDecommissionedNMs  | yarn/ClusterMetrics/NumDecommissionedNMs  | n     |\n| yarn:ResourceManager:ClusterMetrics:NumLostNMs     | yarn/ClusterMetrics/NumLostNMs     | n     |\n| yarn:ResourceManager:ClusterMetrics:NumUnhealthyNMs   | yarn/ClusterMetrics/NumUnhealthyNMs   | n     |\n| yarn:ResourceManager:ClusterMetrics:NumRebootedNMs    | yarn/ClusterMetrics/NumRebootedNMs    | n     |\n| yarn:ResourceManager:QueueMetrics:running_0     | yarn/QueueMetrics/running_0     | y     |\n| yarn:ResourceManager:QueueMetrics:running_60     | yarn/QueueMetrics/running_60     | y     |\n| yarn:ResourceManager:QueueMetrics:running_300     | yarn/QueueMetrics/running_300     | y     |\n| yarn:ResourceManager:QueueMetrics:running_1440     | yarn/QueueMetrics/running_1440     | y     |\n| yarn:ResourceManager:QueueMetrics:AppsSubmitted    | yarn/QueueMetrics/AppsSubmitted    | y     |\n| yarn:ResourceManager:QueueMetrics:AvailableMB     | yarn/QueueMetrics/AvailableMB     | y     |\n| yarn:ResourceManager:QueueMetrics:PendingContainers   | yarn/QueueMetrics/PendingContainers   | y     |\n| yarn:ResourceManager:QueueMetrics:AppsRunning     | yarn/QueueMetrics/AppsRunning     | n     |\n| yarn:ResourceManager:QueueMetrics:AppsPending     | yarn/QueueMetrics/AppsPending     | n     |\n| yarn:ResourceManager:QueueMetrics:AppsCompleted    | yarn/QueueMetrics/AppsCompleted    | n     |\n| yarn:ResourceManager:QueueMetrics:AppsKilled     | yarn/QueueMetrics/AppsKilled     | n     |\n| yarn:ResourceManager:QueueMetrics:AppsFailed     | yarn/QueueMetrics/AppsFailed     | n     |\n| yarn:ResourceManager:QueueMetrics:AllocatedMB     | yarn/QueueMetrics/AllocatedMB     | n     |\n| yarn:ResourceManager:QueueMetrics:AllocatedVCores    | yarn/QueueMetrics/AllocatedVCores    | n     |\n| yarn:ResourceManager:QueueMetrics:AllocatedContainers   | yarn/QueueMetrics/AllocatedContainers   | n     |\n| yarn:ResourceManager:QueueMetrics:AggregateContainersAllocated | yarn/QueueMetrics/AggregateContainersAllocated | n     |\n| yarn:ResourceManager:QueueMetrics:AggregateContainersReleased | yarn/QueueMetrics/AggregateContainersReleased | n     |\n| yarn:ResourceManager:QueueMetrics:AvailableVCores    | yarn/QueueMetrics/AvailableVCores    | n     |\n| yarn:ResourceManager:QueueMetrics:PendingMB     | yarn/QueueMetrics/PendingMB     | n     |\n| yarn:ResourceManager:QueueMetrics:PendingVCores    | yarn/QueueMetrics/PendingVCores    | n     |\n| yarn:ResourceManager:QueueMetrics:ReservedMB     | yarn/QueueMetrics/ReservedMB     | n     |\n| yarn:ResourceManager:QueueMetrics:ReservedVCores    | yarn/QueueMetrics/ReservedVCores    | n     |\n| yarn:ResourceManager:QueueMetrics:ReservedContainers   | yarn/QueueMetrics/ReservedContainers   | n     |\n| yarn:ResourceManager:QueueMetrics:ActiveUsers     | yarn/QueueMetrics/ActiveUsers     | n     |\n| yarn:ResourceManager:QueueMetrics:ActiveApplications   | yarn/QueueMetrics/ActiveApplications   | n     |\n| yarn:ResourceManager:QueueMetrics:FairShareMB     | yarn/QueueMetrics/FairShareMB     | n     |\n| yarn:ResourceManager:QueueMetrics:FairShareVCores    | yarn/QueueMetrics/FairShareVCores    | n     |\n| yarn:ResourceManager:QueueMetrics:MinShareMB     | yarn/QueueMetrics/MinShareMB     | n     |\n| yarn:ResourceManager:QueueMetrics:MinShareVCores    | yarn/QueueMetrics/MinShareVCores    | n     |\n| yarn:ResourceManager:QueueMetrics:MaxShareMB     | yarn/QueueMetrics/MaxShareMB     | n     |\n| yarn:ResourceManager:QueueMetrics:MaxShareVCores    | yarn/QueueMetrics/MaxShareVCores    | n     |\n| yarn:ResourceManager:JvmMetrics:MemHeapUsedM     | yarn/jvm/MemHeapUsedM       | n     |\n| yarn:ResourceManager:JvmMetrics:MemHeapCommittedM    | yarn/jvm/MemHeapCommittedM      | n     |\n| yarn:ResourceManager:JvmMetrics:MemHeapMaxM     | yarn/jvm/MemHeapMaxM       | n     |\n| yarn:ResourceManager:JvmMetrics:MemMaxM      | yarn/jvm/MemMaxM        | n     |\n### Spark metrics\n| Metric           | Metrics Explorer name       | Enabled metrics |\n|:------------------------------------------------|:------------------------------------------------|:------------------|\n| spark:driver:BlockManager:disk.diskSpaceUsed_MB | spark/driver/BlockManager/disk/diskSpaceUsed_MB | y     |\n| spark:driver:BlockManager:memory.maxMem_MB  | spark/driver/BlockManager/memory/maxMem_MB  | y     |\n| spark:driver:BlockManager:memory.memUsed_MB  | spark/driver/BlockManager/memory/memUsed_MB  | y     |\n| spark:driver:DAGScheduler:job.allJobs   | spark/driver/DAGScheduler/job/allJobs   | y     |\n| spark:driver:DAGScheduler:stage.failedStages | spark/driver/DAGScheduler/stage/failedStages | y     |\n| spark:driver:DAGScheduler:stage.waitingStages | spark/driver/DAGScheduler/stage/waitingStages | y     |\n| Metric          | Metrics Explorer name    | Enabled metrics |\n|:----------------------------------------------|:-------------------------------------|:------------------|\n| spark:executor:executor:bytesRead    | spark/executor/bytesRead    | y     |\n| spark:executor:executor:bytesWritten   | spark/executor/bytesWritten   | y     |\n| spark:executor:executor:cpuTime    | spark/executor/cpuTime    | y     |\n| spark:executor:executor:diskBytesSpilled  | spark/executor/diskBytesSpilled  | y     |\n| spark:executor:executor:recordsRead   | spark/executor/recordsRead   | y     |\n| spark:executor:executor:recordsWritten  | spark/executor/recordsWritten  | y     |\n| spark:executor:executor:runTime    | spark/executor/runTime    | y     |\n| spark:executor:executor:shuffleRecordsRead | spark/executor/shuffleRecordsRead | y     |\n| spark:executor:executor:shuffleRecordsWritten | spark/executor/shuffleRecordsWritten | y     |\n### Flink metrics\n| Metric               | Metrics Explorer name            | Enabled metrics |\n|:------------------------------------------------------------------|:------------------------------------------------------------------|:------------------|\n| flink:jobmanager:numRegisteredTaskManagers      | flink/jobmanager/numRegisteredTaskManagers      | n     |\n| flink:jobmanager:numRunningJobs         | flink/jobmanager/numRunningJobs         | n     |\n| flink:jobmanager:Status.JVM.ClassLoader.ClassesLoaded    | flink/jobmanager/Status.JVM.ClassLoader.ClassesLoaded    | n     |\n| flink:jobmanager:Status.JVM.ClassLoader.ClassesUnloaded   | flink/jobmanager/Status.JVM.ClassLoader.ClassesUnloaded   | n     |\n| flink:jobmanager:Status.JVM.CPU.Load        | flink/jobmanager/Status.JVM.CPU.Load        | n     |\n| flink:jobmanager:Status.JVM.CPU.Time        | flink/jobmanager/Status.JVM.CPU.Time        | y     |\n| flink:jobmanager:Status.JVM.GarbageCollector.PSMarkSweep.Count | flink/jobmanager/Status.JVM.GarbageCollector.PSMarkSweep.Count | n     |\n| flink:jobmanager:Status.JVM.GarbageCollector.PSMarkSweep.Time  | flink/jobmanager/Status.JVM.GarbageCollector.PSMarkSweep.Time  | n     |\n| flink:jobmanager:Status.JVM.GarbageCollector.PSScavenge.Count  | flink/jobmanager/Status.JVM.GarbageCollector.PSScavenge.Count  | n     |\n| flink:jobmanager:Status.JVM.GarbageCollector.PSScavenge.Time  | flink/jobmanager/Status.JVM.GarbageCollector.PSScavenge.Time  | n     |\n| flink:jobmanager:Status.JVM.Memory.Direct.Count     | flink/jobmanager/Status.JVM.Memory.Direct.Count     | y     |\n| flink:jobmanager:Status.JVM.Memory.Direct.MemoryUsed    | flink/jobmanager/Status.JVM.Memory.Direct.MemoryUsed    | y     |\n| flink:jobmanager:Status.JVM.Memory.Direct.TotalCapacity   | flink/jobmanager/Status.JVM.Memory.Direct.TotalCapacity   | y     |\n| flink:jobmanager:Status.JVM.Memory.Heap.Committed     | flink/jobmanager/Status.JVM.Memory.Heap.Committed     | y     |\n| flink:jobmanager:Status.JVM.Memory.Heap.Max      | flink/jobmanager/Status.JVM.Memory.Heap.Max      | y     |\n| flink:jobmanager:Status.JVM.Memory.Heap.Used      | flink/jobmanager/Status.JVM.Memory.Heap.Used      | y     |\n| flink:jobmanager:Status.JVM.Memory.Mapped.Count     | flink/jobmanager/Status.JVM.Memory.Mapped.Count     | y     |\n| flink:jobmanager:Status.JVM.Memory.Mapped.MemoryUsed    | flink/jobmanager/Status.JVM.Memory.Mapped.MemoryUsed    | y     |\n| flink:jobmanager:Status.JVM.Memory.Mapped.TotalCapacity   | flink/jobmanager/Status.JVM.Memory.Mapped.TotalCapacity   | y     |\n| flink:jobmanager:Status.JVM.Memory.Metaspace.Committed   | flink/jobmanager/Status.JVM.Memory.Metaspace.Committed   | n     |\n| flink:jobmanager:Status.JVM.Memory.Metaspace.Max     | flink/jobmanager/Status.JVM.Memory.Metaspace.Max     | n     |\n| flink:jobmanager:Status.JVM.Memory.Metaspace.Used     | flink/jobmanager/Status.JVM.Memory.Metaspace.Used     | n     |\n| flink:jobmanager:Status.JVM.Memory.NonHeap.Committed    | flink/jobmanager/Status.JVM.Memory.NonHeap.Committed    | n     |\n| flink:jobmanager:Status.JVM.Memory.NonHeap.Max     | flink/jobmanager/Status.JVM.Memory.NonHeap.Max     | n     |\n| flink:jobmanager:Status.JVM.Memory.NonHeap.Used     | flink/jobmanager/Status.JVM.Memory.NonHeap.Used     | n     |\n| flink:jobmanager:Status.JVM.Threads.Count       | flink/jobmanager/Status.JVM.Threads.Count       | n     |\n| flink:jobmanager:taskSlotsAvailable        | flink/jobmanager/taskSlotsAvailable        | y     |\n| flink:jobmanager:taskSlotsTotal         | flink/jobmanager/taskSlotsTotal         | y     |\n| flink:operator:numRecordsIn          | flink/operator/numRecordsIn          | n     |\n| flink:operator:numRecordsInPerSecond.count      | flink/operator/numRecordsInPerSecond.count      | n     |\n| flink:operator:numRecordsInPerSecond.rate       | flink/operator/numRecordsInPerSecond.rate       | n     |\n| flink:operator:numRecordsOut          | flink/operator/numRecordsOut          | n     |\n| flink:operator:numRecordsOutPerSecond.count      | flink/operator/numRecordsOutPerSecond.count      | n     |\n| flink:operator:numRecordsOutPerSecond.rate      | flink/operator/numRecordsOutPerSecond.rate      | n     |\n| flink:operator:numSplitsProcessed         | flink/operator/numSplitsProcessed         | n     |\n| flink:task:buffers.inPoolUsage         | flink/task/buffers.inPoolUsage         | n     |\n| flink:task:buffers.inputExclusiveBuffersUsage      | flink/task/buffers.inputExclusiveBuffersUsage      | n     |\n| flink:task:buffers.inputFloatingBuffersUsage      | flink/task/buffers.inputFloatingBuffersUsage      | n     |\n| flink:task:buffers.inputQueueLength        | flink/task/buffers.inputQueueLength        | n     |\n| flink:task:buffers.outPoolUsage         | flink/task/buffers.outPoolUsage         | n     |\n| flink:task:buffers.outputQueueLength        | flink/task/buffers.outputQueueLength        | n     |\n| flink:task:idleTimeMsPerSecond.count        | flink/task/idleTimeMsPerSecond.count        | n     |\n| flink:task:idleTimeMsPerSecond.rate        | flink/task/idleTimeMsPerSecond.rate        | n     |\n| flink:task:numBuffersInLocal          | flink/task/numBuffersInLocal          | n     |\n| flink:task:numBuffersInLocalPerSecond.count      | flink/task/numBuffersInLocalPerSecond.count      | n     |\n| flink:task:numBuffersInLocalPerSecond.rate      | flink/task/numBuffersInLocalPerSecond.rate      | n     |\n| flink:task:numBuffersInRemote          | flink/task/numBuffersInRemote          | n     |\n| flink:task:numBuffersInRemotePerSecond.count      | flink/task/numBuffersInRemotePerSecond.count      | n     |\n| flink:task:numBuffersInRemotePerSecond.rate      | flink/task/numBuffersInRemotePerSecond.rate      | n     |\n| flink:task:numBuffersOut           | flink/task/numBuffersOut           | n     |\n| flink:task:numBuffersOutPerSecond.count       | flink/task/numBuffersOutPerSecond.count       | n     |\n| flink:task:numBuffersOutPerSecond.rate       | flink/task/numBuffersOutPerSecond.rate       | n     |\n| flink:task:numBytesIn            | flink/task/numBytesIn            | n     |\n| flink:task:numBytesInLocal          | flink/task/numBytesInLocal          | n     |\n| flink:task:numBytesInLocalPerSecond.count       | flink/task/numBytesInLocalPerSecond.count       | n     |\n| flink:task:numBytesInLocalPerSecond.rate       | flink/task/numBytesInLocalPerSecond.rate       | n     |\n| flink:task:numBytesInPerSecond.count        | flink/task/numBytesInPerSecond.count        | n     |\n| flink:task:numBytesInPerSecond.rate        | flink/task/numBytesInPerSecond.rate        | n     |\n| flink:task:numBytesInRemote          | flink/task/numBytesInRemote          | n     |\n| flink:task:numBytesInRemotePerSecond.count      | flink/task/numBytesInRemotePerSecond.count      | n     |\n| flink:task:numBytesInRemotePerSecond.rate       | flink/task/numBytesInRemotePerSecond.rate       | n     |\n| flink:task:numBytesOut           | flink/task/numBytesOut           | n     |\n| flink:task:numBytesOutPerSecond.count        | flink/task/numBytesOutPerSecond.count        | n     |\n| flink:task:numBytesOutPerSecond.rate        | flink/task/numBytesOutPerSecond.rate        | n     |\n| flink:task:numRecordsIn           | flink/task/numRecordsIn           | n     |\n| flink:task:numRecordsInPerSecond.count       | flink/task/numRecordsInPerSecond.count       | n     |\n| flink:task:numRecordsInPerSecond.rate        | flink/task/numRecordsInPerSecond.rate        | n     |\n| flink:task:numRecordsOut           | flink/task/numRecordsOut           | n     |\n| flink:task:numRecordsOutPerSecond.count       | flink/task/numRecordsOutPerSecond.count       | n     |\n| flink:task:numRecordsOutPerSecond.rate       | flink/task/numRecordsOutPerSecond.rate       | n     |\n| flink:task:Shuffle.Netty.Input.Buffers.inPoolUsage    | flink/task/Shuffle.Netty.Input.Buffers.inPoolUsage    | n     |\n| flink:task:Shuffle.Netty.Input.Buffers.inputExclusiveBuffersUsage | flink/task/Shuffle.Netty.Input.Buffers.inputExclusiveBuffersUsage | n     |\n| flink:task:Shuffle.Netty.Input.Buffers.inputFloatingBuffersUsage | flink/task/Shuffle.Netty.Input.Buffers.inputFloatingBuffersUsage | n     |\n| flink:task:Shuffle.Netty.Input.Buffers.inputQueueLength   | flink/task/Shuffle.Netty.Input.Buffers.inputQueueLength   | n     |\n| flink:task:Shuffle.Netty.Input.numBuffersInLocal     | flink/task/Shuffle.Netty.Input.numBuffersInLocal     | n     |\n| flink:task:Shuffle.Netty.Input.numBuffersInLocalPerSecond.count | flink/task/Shuffle.Netty.Input.numBuffersInLocalPerSecond.count | n     |\n| flink:task:Shuffle.Netty.Input.numBuffersInLocalPerSecond.rate | flink/task/Shuffle.Netty.Input.numBuffersInLocalPerSecond.rate | n     |\n| flink:task:Shuffle.Netty.Input.numBuffersInRemote     | flink/task/Shuffle.Netty.Input.numBuffersInRemote     | n     |\n| flink:task:Shuffle.Netty.Input.numBuffersInRemotePerSecond.count | flink/task/Shuffle.Netty.Input.numBuffersInRemotePerSecond.count | n     |\n| flink:task:Shuffle.Netty.Input.numBuffersInRemotePerSecond.rate | flink/task/Shuffle.Netty.Input.numBuffersInRemotePerSecond.rate | n     |\n| flink:task:Shuffle.Netty.Input.numBytesInLocal     | flink/task/Shuffle.Netty.Input.numBytesInLocal     | n     |\n| flink:task:Shuffle.Netty.Input.numBytesInLocalPerSecond.count  | flink/task/Shuffle.Netty.Input.numBytesInLocalPerSecond.count  | n     |\n| flink:task:Shuffle.Netty.Input.numBytesInLocalPerSecond.rate  | flink/task/Shuffle.Netty.Input.numBytesInLocalPerSecond.rate  | n     |\n| flink:task:Shuffle.Netty.Input.numBytesInRemote     | flink/task/Shuffle.Netty.Input.numBytesInRemote     | n     |\n| flink:task:Shuffle.Netty.Input.numBytesInRemotePerSecond.count | flink/task/Shuffle.Netty.Input.numBytesInRemotePerSecond.count | n     |\n| flink:task:Shuffle.Netty.Input.numBytesInRemotePerSecond.rate  | flink/task/Shuffle.Netty.Input.numBytesInRemotePerSecond.rate  | n     |\n| flink:task:Shuffle.Netty.Output.Buffers.outPoolUsage    | flink/task/Shuffle.Netty.Output.Buffers.outPoolUsage    | n     |\n| flink:task:Shuffle.Netty.Output.Buffers.outputQueueLength   | flink/task/Shuffle.Netty.Output.Buffers.outputQueueLength   | n     |\n| flink:taskmanager:Status.flink.Memory.Managed.Total    | flink/taskmanager/Status.flink.Memory.Managed.Total    | n     |\n| flink:taskmanager:Status.flink.Memory.Managed.Used    | flink/taskmanager/Status.flink.Memory.Managed.Used    | n     |\n| flink:taskmanager:Status.JVM.ClassLoader.ClassesLoaded   | flink/taskmanager/Status.JVM.ClassLoader.ClassesLoaded   | n     |\n| flink:taskmanager:Status.JVM.ClassLoader.ClassesUnloaded   | flink/taskmanager/Status.JVM.ClassLoader.ClassesUnloaded   | n     |\n| flink:taskmanager:Status.JVM.CPU.Load        | flink/taskmanager/Status.JVM.CPU.Load        | n     |\n| flink:taskmanager:Status.JVM.CPU.Time        | flink/taskmanager/Status.JVM.CPU.Time        | y     |\n| flink:taskmanager:Status.JVM.GarbageCollector.PSMarkSweep.Count | flink/taskmanager/Status.JVM.GarbageCollector.PSMarkSweep.Count | n     |\n| flink:taskmanager:Status.JVM.GarbageCollector.PSMarkSweep.Time | flink/taskmanager/Status.JVM.GarbageCollector.PSMarkSweep.Time | n     |\n| flink:taskmanager:Status.JVM.GarbageCollector.PSScavenge.Count | flink/taskmanager/Status.JVM.GarbageCollector.PSScavenge.Count | n     |\n| flink:taskmanager:Status.JVM.GarbageCollector.PSScavenge.Time  | flink/taskmanager/Status.JVM.GarbageCollector.PSScavenge.Time  | n     |\n| flink:taskmanager:Status.JVM.Memory.Direct.Count     | flink/taskmanager/Status.JVM.Memory.Direct.Count     | y     |\n| flink:taskmanager:Status.JVM.Memory.Direct.MemoryUsed    | flink/taskmanager/Status.JVM.Memory.Direct.MemoryUsed    | y     |\n| flink:taskmanager:Status.JVM.Memory.Direct.TotalCapacity   | flink/taskmanager/Status.JVM.Memory.Direct.TotalCapacity   | y     |\n| flink:taskmanager:Status.JVM.Memory.Heap.Committed    | flink/taskmanager/Status.JVM.Memory.Heap.Committed    | y     |\n| flink:taskmanager:Status.JVM.Memory.Heap.Max      | flink/taskmanager/Status.JVM.Memory.Heap.Max      | y     |\n| flink:taskmanager:Status.JVM.Memory.Heap.Used      | flink/taskmanager/Status.JVM.Memory.Heap.Used      | y     |\n| flink:taskmanager:Status.JVM.Memory.Mapped.Count     | flink/taskmanager/Status.JVM.Memory.Mapped.Count     | y     |\n| flink:taskmanager:Status.JVM.Memory.Mapped.MemoryUsed    | flink/taskmanager/Status.JVM.Memory.Mapped.MemoryUsed    | y     |\n| flink:taskmanager:Status.JVM.Memory.Mapped.TotalCapacity   | flink/taskmanager/Status.JVM.Memory.Mapped.TotalCapacity   | y     |\n| flink:taskmanager:Status.JVM.Memory.Metaspace.Committed   | flink/taskmanager/Status.JVM.Memory.Metaspace.Committed   | n     |\n| flink:taskmanager:Status.JVM.Memory.Metaspace.Max     | flink/taskmanager/Status.JVM.Memory.Metaspace.Max     | n     |\n| flink:taskmanager:Status.JVM.Memory.Metaspace.Used    | flink/taskmanager/Status.JVM.Memory.Metaspace.Used    | n     |\n| flink:taskmanager:Status.JVM.Memory.NonHeap.Committed    | flink/taskmanager/Status.JVM.Memory.NonHeap.Committed    | n     |\n| flink:taskmanager:Status.JVM.Memory.NonHeap.Max     | flink/taskmanager/Status.JVM.Memory.NonHeap.Max     | n     |\n| flink:taskmanager:Status.JVM.Memory.NonHeap.Used     | flink/taskmanager/Status.JVM.Memory.NonHeap.Used     | n     |\n| flink:taskmanager:Status.JVM.Threads.Count      | flink/taskmanager/Status.JVM.Threads.Count      | n     |\n| flink:taskmanager:Status.Network.AvailableMemorySegments   | flink/taskmanager/Status.Network.AvailableMemorySegments   | n     |\n| flink:taskmanager:Status.Network.TotalMemorySegments    | flink/taskmanager/Status.Network.TotalMemorySegments    | n     |\n| flink:taskmanager:Status.Shuffle.Netty.AvailableMemory   | flink/taskmanager/Status.Shuffle.Netty.AvailableMemory   | n     |\n| flink:taskmanager:Status.Shuffle.Netty.AvailableMemorySegments | flink/taskmanager/Status.Shuffle.Netty.AvailableMemorySegments | n     |\n| flink:taskmanager:Status.Shuffle.Netty.TotalMemory    | flink/taskmanager/Status.Shuffle.Netty.TotalMemory    | n     |\n| flink:taskmanager:Status.Shuffle.Netty.TotalMemorySegments  | flink/taskmanager/Status.Shuffle.Netty.TotalMemorySegments  | n     |\n| flink:taskmanager:Status.Shuffle.Netty.UsedMemory     | flink/taskmanager/Status.Shuffle.Netty.UsedMemory     | n     |\n| flink:taskmanager:Status.Shuffle.Netty.UsedMemorySegments   | flink/taskmanager/Status.Shuffle.Netty.UsedMemorySegments   | n     |\n### Spark History Server metrics\nDataproc collects the following Spark history service JVM memory metrics:\n| Metric              | Metrics Explorer name       | Enabled metrics |\n|:-----------------------------------------------------------|:-------------------------------------------------|:------------------|\n| sparkHistoryServer:JVM:Memory:HeapMemoryUsage.committed | sparkHistoryServer/memory/CommittedHeapMemory | y     |\n| sparkHistoryServer:JVM:Memory:HeapMemoryUsage.used   | sparkHistoryServer/memory/UsedHeapMemory   | y     |\n| sparkHistoryServer:JVM:Memory:HeapMemoryUsage.max   | sparkHistoryServer/memory/MaxHeapMemory   | y     |\n| sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed | sparkHistoryServer/memory/CommittedNonHeapMemory | y     |\n| sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.used  | sparkHistoryServer/memory/UsedNonHeapMemory  | y     |\n| sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.max  | sparkHistoryServer/memory/MaxNonHeapMemory  | y     |\n### HiveServer 2 metrics\n| Metric            | Metrics Explorer name      | Enabled metrics |\n|:----------------------------------------------------|:------------------------------------------|:------------------|\n| hiveserver2:JVM:Memory:HeapMemoryUsage.committed | hiveserver2/memory/CommittedHeapMemory | y     |\n| hiveserver2:JVM:Memory:HeapMemoryUsage.used   | hiveserver2/memory/UsedHeapMemory   | y     |\n| hiveserver2:JVM:Memory:HeapMemoryUsage.max   | hiveserver2/memory/MaxHeapMemory   | y     |\n| hiveserver2:JVM:Memory:NonHeapMemoryUsage.committed | hiveserver2/memory/CommittedNonHeapMemory | y     |\n| hiveserver2:JVM:Memory:NonHeapMemoryUsage.used  | hiveserver2/memory/UsedNonHeapMemory  | y     |\n| hiveserver2:JVM:Memory:NonHeapMemoryUsage.max  | hiveserver2/memory/MaxNonHeapMemory  | y     |\n### Hive Metastore metrics\n| Metric           | Metrics Explorer name       | Enabled metrics |\n|:-----------------------------------------------|:-----------------------------------------------|:------------------|\n| hivemetastore:API:GetDatabase:Mean    | hivemetastore/get_database/mean    | y     |\n| hivemetastore:API:CreateDatabase:Mean   | hivemetastore/create_database/mean    | y     |\n| hivemetastore:API:DropDatabase:Mean   | hivemetastore/drop_database/mean    | y     |\n| hivemetastore:API:AlterDatabase:Mean   | hivemetastore/alter_database/mean    | y     |\n| hivemetastore:API:GetAllDatabases:Mean   | hivemetastore/get_all_databases/mean   | y     |\n| hivemetastore:API:CreateTable:Mean    | hivemetastore/create_table/mean    | y     |\n| hivemetastore:API:DropTable:Mean    | hivemetastore/drop_table/mean     | y     |\n| hivemetastore:API:AlterTable:Mean    | hivemetastore/alter_table/mean     | y     |\n| hivemetastore:API:GetTable:Mean    | hivemetastore/get_table/mean     | y     |\n| hivemetastore:API:GetAllTables:Mean   | hivemetastore/get_all_tables/mean    | y     |\n| hivemetastore:API:AddPartitionsReq:Mean  | hivemetastore/add_partitions_req/mean   | y     |\n| hivemetastore:API:DropPartition:Mean   | hivemetastore/drop_partition/mean    | y     |\n| hivemetastore:API:AlterPartition:Mean   | hivemetastore/alter_partition/mean    | y     |\n| hivemetastore:API:GetPartition:Mean   | hivemetastore/get_partition/mean    | y     |\n| hivemetastore:API:GetPartitionNames:Mean  | hivemetastore/get_partition_names/mean   | y     |\n| hivemetastore:API:GetPartitionsPs:Mean   | hivemetastore/get_partitions_ps/mean   | y     |\n| hivemetastore:API:GetPartitionsPsWithAuth:Mean | hivemetastore/get_partitions_ps_with_auth/mean | y     |\n**Note:** By default, **mean** value metrics are collected for the previously listed Hive Metastore APIs. You can also enable the collection of the following statistical measures. A sample metric and its Metric Explorer name are shown for each statistical measure.\n| Statistical measure | Sample metric         | Sample metric name       |\n|:----------------------|:------------------------------------------------|:--------------------------------------------|\n| Max     | hivemetastore:API:GetDatabase:Max    | hivemetastore/get_database/max    |\n| Min     | hivemetastore:API:GetDatabase:Min    | hivemetastore/get_database/min    |\n| Mean     | hivemetastore:API:GetDatabase:Mean    | hivemetastore/get_database/mean    |\n| Count     | hivemetastore:API:GetDatabase:Count    | hivemetastore/get_database/count   |\n| 50thPercentile  | hivemetastore:API:GetDatabase:50thPercentile | hivemetastore/get_database/median   |\n| 75thPercentile  | hivemetastore:API:GetDatabase:75thPercentile | hivemetastore/get_database/75th_percentile |\n| 95thPercentile  | hivemetastore:API:GetDatabase:95thPercentile | hivemetastore/get_database/95th_percentile |\n| 98thPercentile  | hivemetastore:API:GetDatabase:98thPercentile | hivemetastore/get_database/98th_percentile |\n| 99thPercentile  | hivemetastore:API:GetDatabase:99thPercentile | hivemetastore/get_database/99th_percentile |\n| 999thPercentile  | hivemetastore:API:GetDatabase:999thPercentile | hivemetastore/get_database/999th_percentile |\n| StdDev    | hivemetastore:API:GetDatabase:StdDev   | hivemetastore/get_database/stddev   |\n| FifteenMinuteRate  | hivemetastore:API:GetDatabase:FifteenMinuteRate | hivemetastore/get_database/15min_rate  |\n| FiveMinuteRate  | hivemetastore:API:GetDatabase:FiveMinuteRate | hivemetastore/get_database/5min_rate  |\n| OneMinuteRate   | hivemetastore:API:GetDatabase:OneMinuteRate  | hivemetastore/get_database/1min_rate  |\n| MeanRate    | hivemetastore:API:GetDatabase:MeanRate   | hivemetastore/get_database/mean_rate  |\n### Dataproc monitoring agent metrics\nDataproc collects the following Dataproc monitoring agent metrics when you set [--metric-sources=monitoring-agent-defaults](#enable_custom_metric_collection) . These metrics are published with the `agent.googleapis.com` prefix.\n**Note:** The `monitoring-agent-defaults` setting is not available for [2.2 image version](/dataproc/docs/concepts/versioning/dataproc-release-2.2) clusters. You can install the [Ops Agent](/stackdriver/docs/solutions/agents/ops-agent) , which collects [syslog logs and host metrics](/stackdriver/docs/solutions/agents/ops-agent/configuration#default) .\n[CPU](https://cloud.google.com/monitoring/api/metrics_agent#agent-cpu)  agent.googleapis.com/cpu/load_15m agent.googleapis.com/cpu/load_1m agent.googleapis.com/cpu/load_5m agent.googleapis.com/cpu/usage_time* agent.googleapis.com/cpu/utilization*\n**Note:** `cpu/utilization` and `cpu/usage_time` are mutually exclusive metrics. By default, Dataproc collects `cpu/utilization` . See [Configuring reported CPU metrics](/monitoring/agent/monitoring/configuration#cpu_metrics) to enable `cpu/usage_time` .\n[Disk](https://cloud.google.com/monitoring/api/metrics_agent#agent-disk)  agent.googleapis.com/disk/bytes_used agent.googleapis.com/disk/io_time agent.googleapis.com/disk/merged_operations agent.googleapis.com/disk/operation_count agent.googleapis.com/disk/operation_time agent.googleapis.com/disk/pending_operations agent.googleapis.com/disk/percent_used agent.googleapis.com/disk/read_bytes_count\n[Swap](https://cloud.google.com/monitoring/api/metrics_agent#agent-swap)  agent.googleapis.com/swap/bytes_used agent.googleapis.com/swap/io agent.googleapis.com/swap/percent_used\n[Memory](https://cloud.google.com/monitoring/api/metrics_agent#agent-memory)  agent.googleapis.com/memory/bytes_used agent.googleapis.com/memory/percent_used\n[Processes](https://cloud.google.com/monitoring/api/metrics_agent#agent-processes) - (follows slightly different quota policy for few attributes) agent.googleapis.com/processes/count_by_state agent.googleapis.com/processes/cpu_time agent.googleapis.com/processes/disk/read_bytes_count agent.googleapis.com/processes/disk/write_bytes_count agent.googleapis.com/processes/fork_count agent.googleapis.com/processes/rss_usage agent.googleapis.com/processes/vm_usage\n[Interface](https://cloud.google.com/monitoring/api/metrics_agent#agent-interface)  agent.googleapis.com/interface/errors agent.googleapis.com/interface/packets agent.googleapis.com/interface/traffic\n[Network](https://cloud.google.com/monitoring/api/metrics_agent#agent-network)  agent.googleapis.com/network/tcp_connections\n## Build a Monitoring dashboard\nYou can build a Monitoring dashboard that displays charts of selected Dataproc metrics.\n- Select **+ CREATE DASHBOARD** from the Monitoring [Dashboards Overview](https://console.cloud.google.com/monitoring/dashboards) page. Provide a name for the dashboard, then click **Add Chart** in the upper-right menu to open the Add Chart window. Select \"Cloud Dataproc Cluster\" as the resource type. Select one or more metrics and metric and chart properties. Then **Save** the chart.\n- You can add additional charts to your dashboard. After you **Save** the dashboard, its title appears in the Monitoring **Dashboards Overview** page. Dashboard charts can be viewed, updated, and deleted from the dashboard display page.## Whats next\n- See the [Cloud Monitoring documentation](/monitoring/docs) \n- Learn how to [Create Dataproc metric alerts](/dataproc/docs/guides/dataproc-alerts)", "guide": "Dataproc"}