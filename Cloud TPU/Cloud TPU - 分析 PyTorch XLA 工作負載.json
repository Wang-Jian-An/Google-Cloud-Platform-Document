{"title": "Cloud TPU - \u5206\u6790 PyTorch XLA \u5de5\u4f5c\u8ca0\u8f09", "url": "https://cloud.google.com/tpu/docs/pytorch-xla-performance-profiling-tpu-vm?hl=zh-cn", "abstract": "# Cloud TPU - \u5206\u6790 PyTorch XLA \u5de5\u4f5c\u8ca0\u8f09\n# \u5206\u6790 PyTorch XLA \u5de5\u4f5c\u8ca0\u8f09\n\u6027\u80fd\u5206\u6790\u662f\u5206\u6790\u548c\u63d0\u5347\u6a21\u578b\u6027\u80fd\u7684\u4e00\u7a2e\u65b9\u5f0f\u3002\u5118\u7ba1\u5b83\u7684\u529f\u80fd\u9060\u4e0d\u6b62\u65bc\u6b64\uff0c\u4f46\u6709\u6642\u5c07\u5206\u6790\u8996\u7232\u5728\u8a2d\u5099 (TPU) \u548c\u4e3b\u6a5f (CPU) \u4e0a\u904b\u884c\u7684\u8a08\u6642\u64cd\u4f5c\u548c\u4ee3\u78bc\u90e8\u5206\u6703\u5f88\u6709\u5e6b\u52a9\u3002\u672c\u6307\u5357\u7c21\u8981\u4ecb\u7d39\u77ad\u5982\u4f55\u5206\u6790\u4ee3\u78bc\u4ee5\u9032\u884c\u8a13\u7df4\u6216\u63a8\u65b7\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u5206\u6790\u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8acb\u53c3\u95b1\u4ee5\u4e0b\u6307\u5357\u3002\n- [\u5728 TPU \u865b\u64ec\u6a5f\u4e0a\u8abf\u8a66 PyTorch XLA \u6027\u80fd - \u7b2c 1 \u90e8\u5206](https://cloud.google.com/blog/topics/developers-practitioners/pytorchxla-performance-debugging-tpu-vm-part-1?hl=zh-cn) \n- [\u5728 TPU \u865b\u64ec\u6a5f\u4e0a\u8abf\u8a66 PyTorch XLA \u6027\u80fd - \u7b2c 2 \u90e8\u5206](https://cloud.google.com/blog/topics/developers-practitioners/pytorchxla-performance-debugging-cloud-tpu-vm-part-ii?hl=zh-cn) \n- [\u5728 TPU \u865b\u64ec\u6a5f\u4e0a\u8abf\u8a66 PyTorch XLA \u6027\u80fd - \u7b2c 3 \u90e8\u5206](https://cloud.google.com/blog/topics/developers-practitioners/pytorchxla-performance-debugging-cloud-tpu-vm-part-iii?hl=zh-cn) ", "content": "## \u958b\u59cb\u4f7f\u7528\n### \u5275\u5efa TPU\n- \u5c0e\u51fa\u74b0\u5883\u8b8a\u91cf\uff1a```\n$ export TPU_NAME=your_tpu_name$ export ZONE=us-central2-b$ export PROJECT_ID=project-id$ export ACCELERATOR_TYPE=v4-8$ export RUNTIME_VERSION=tpu-vm-v4-pt-2.0\n```\n- \u5553\u52d5 TPU \u8cc7\u6e90```\n$ gcloud compute tpus tpu-vm create ${TPU_NAME} \\--zone us-central2-b \\--accelerator-type ${ACCELERATOR_TYPE} \\--version ${RUNTIME_VERSION} \\--project $PROJECT_ID \\--subnetwork=tpusubnet\n```\n- \u4f7f\u7528 [gcloud scp](https://cloud.google.com/sdk/gcloud/reference/compute/tpus/tpu-vm/scp?hl=zh-cn) \u547d\u4ee4\u5c07\u60a8\u7684\u4ee3\u78bc\u79fb\u81f3 TPU \u865b\u64ec\u6a5f\u4e0a\u7684\u4e3b\u76ee\u9304\u3002\u4f8b\u5982\uff1a```\n$ gcloud compute tpus tpu-vm scp my-code-file ${TPU_NAME}: --zone ${ZONE}\n```## \u5206\u6790\n**\u6ce8\u610f** \uff1av4-8 \u5305\u542b 4 \u500b TPU \u8a2d\u5099\u3002\u6bcf\u500b\u5de5\u4f5c\u5668\u50c5\u5206\u6790 4 \u500b\u53ef\u7528\u8a2d\u5099\u4e2d\u7684 1 \u500b TPU \u8a2d\u5099\u3002\u6211\u5011\u5f88\u5feb\u5c07\u652f\u6301\u7232\u6bcf\u500b\u5de5\u4f5c\u5668\u5c0d\u6240\u6709 4 \u500b TPU \u8a2d\u5099\u9032\u884c\u6027\u80fd\u5206\u6790\u3002\n\u60a8\u53ef\u4ee5\u901a\u904e `capture_profile.py` \u624b\u52d5\u6355\u7372\u914d\u7f6e\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 `torch_xla.debug.profiler` API \u5728\u8a13\u7df4\u8173\u672c\u4e2d\u4ee5\u7de8\u7a0b\u65b9\u5f0f\u6355\u7372\u914d\u7f6e\u6587\u4ef6\u3002\n### \u5553\u52d5\u914d\u7f6e\u6587\u4ef6\u670d\u52d9\u5668\n\u7232\u4e86\u6355\u7372\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u6587\u4ef6\u670d\u52d9\u5668\u5fc5\u9808\u5728\u8a13\u7df4\u8173\u672c\u4e2d\u904b\u884c\u3002\u4f7f\u7528\u60a8\u9078\u64c7\u7684\u7aef\u53e3\u865f\uff08\u4f8b\u5982 `9012` \uff09\u5553\u52d5\u670d\u52d9\u5668\uff0c\u5982\u4ee5\u4e0b\u547d\u4ee4\u6240\u793a\u3002\n**\u6ce8\u610f** \uff1a\u60a8\u53ef\u4ee5\u53c3\u8003\u6b64 [\u793a\u4f8b\u8173\u672c](https://github.com/pytorch/xla/blob/master/test/test_profile_mp_mnist.py) \uff0c\u5176\u4e2d\u5305\u542b\u4ee5\u4e0b\u6b65\u9a5f\u3002\n```\nimport torch_xla.debug.profiler as xpserver = xp.start_server(9012)\n```\n\u8a72\u670d\u52d9\u5668\u53ef\u5728 `main` \u51fd\u6578\u7684\u958b\u982d\u5553\u52d5\u3002\n**\u6ce8\u610f** \uff1a\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f [Lightning](https://www.pytorchlightning.ai/index.html) \u6a21\u584a\uff0c\u8acb\u4e0d\u8981\u5553\u52d5\u670d\u52d9\u5668\uff0c\u800c\u662f\u5c07 `profiler=\"xla\"` \u50b3\u905e\u7d66 `trainer` \uff0c\u5b83\u6703\u81ea\u52d5\u5728\u7aef\u53e3 9012 \u5553\u52d5\u670d\u52d9\u5668\u3002\n\u60a8\u73fe\u5728\u53ef\u4ee5\u6355\u7372\u914d\u7f6e\u6587\u4ef6\uff0c\u5982\u4e0b\u4e00\u90e8\u5206\u6240\u8ff0\u3002\u8a72\u8173\u672c\u6703\u5206\u6790\u4e00\u81fa TPU \u8a2d\u5099\u4e0a\u767c\u751f\u7684\u6240\u6709\u64cd\u4f5c\u3002\n### \u6dfb\u52a0\u8ddf\u8e64\u8a18\u9304\n\u5982\u679c\u60a8\u9084\u60f3\u5c0d\u5bbf\u4e3b\u6a5f\u4e0a\u7684\u64cd\u4f5c\u9032\u884c\u6027\u80fd\u5206\u6790\uff0c\u53ef\u4ee5\u5728\u4ee3\u78bc\u4e2d\u6dfb\u52a0 `xp.StepTrace` \u6216 `xp.Trace` \u3002\u9019\u4e9b\u51fd\u6578\u53ef\u8ddf\u8e64\u5bbf\u4e3b\u6a5f\u4e0a\u7684 Python \u4ee3\u78bc\u3002 \uff08\u60a8\u53ef\u4ee5\u5c07\u5176\u8996\u7232\u6e2c\u91cf\u5728\u5c07\u201c\u5716\u201d\u50b3\u905e\u7d66 TPU \u8a2d\u5099\u4e4b\u524d\u5728\u4e3b\u6a5f (CPU) \u4e0a\u57f7\u884c Python \u4ee3\u78bc\u6240\u9700\u7684\u6642\u9593\u3002\u56e0\u6b64\uff0c\u5b83\u4e3b\u8981\u7528\u65bc\u5206\u6790\u8ddf\u8e64\u958b\u92b7\uff09\u3002\u60a8\u53ef\u4ee5\u5728\u4ee3\u78bc\u8655\u7406\u6279\u91cf\u6578\u64da\u7684\u8a13\u7df4\u5faa\u74b0\u4e2d\u6dfb\u52a0\u6b64\u4ee3\u78bc\uff0c\u4f8b\u5982\uff0c\n```\nfor step, batch in enumerate(train_dataloader):\u00a0 \u00a0 with xp.StepTrace('Training_step', step_num=step):\u00a0 \u00a0 \u00a0 \u00a0...\n```\n\u6216\u8005\u4f7f\u7528\n```\n\u00a0with xp.Trace('loss'):\u00a0 \u00a0 loss = ...\n```\n**\u91cd\u8981\u63d0\u793a** \uff1a\u8acb\u907f\u514d\u4f7f\u7528 `xp.Trace` \u5c01\u88dd `xm.mark_step()` \u3002\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u4ee3\u78bc\u5c07\u5d29\u6f70\uff0c\u4e26\u986f\u793a\u985e\u4f3c\u65bc `\"RuntimeError: Expecting scope to be empty but it is train_loop.\"` `xp.StepTrace` \u7684\u932f\u8aa4\u6d88\u606f\uff0c\u9019\u8868\u793a\u4ee3\u78bc\u4e0d\u6703\u51fa\u73fe\u6b64\u554f\u984c\uff0c\u56e0\u7232\u5b83\u5728\u9000\u51fa\u4f5c\u7528\u57df\u6642\u81ea\u52d5\u6dfb\u52a0 `xm.mark_step()` \u3002\u6b64\u5916\uff0c\u4f7f\u7528 [torchdynamo](https://pytorch.org/docs/stable/torch.compiler_deepdive.html) \u6642\uff0c\u60a8\u53ef\u80fd\u6703\u9047\u5230\u6b64\u932f\u8aa4\uff0c\u56e0\u7232 torchdynamo \u53ef\u80fd\u6703\u5728\u5167\u90e8\u8abf\u7528 `xm.mark_step` \u3002\u7576\u524d\u7684\u6b0a\u5b9c\u89e3\u6c7a\u65b9\u6cd5\u4e0d\u662f\u4f7f\u7528 `xp.Trace` \u3002\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5149\u7167\uff0c\u5247\u53ef\u4ee5\u8df3\u904e\u6dfb\u52a0\u8ecc\u8de1\u7684\u6b65\u9a5f\uff0c\u56e0\u7232\u4ee3\u78bc\u7684\u67d0\u4e9b\u90e8\u5206\u6703\u81ea\u52d5\u5b8c\u6210\u6dfb\u52a0\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u6dfb\u52a0\u5176\u4ed6\u8ddf\u8e64\u8a18\u9304\uff0c\u6b61\u8fce\u5c07\u5b83\u5011\u63d2\u5165\u5230\u8a13\u7df4\u5faa\u74b0\u4e2d\u3002\n\u60a8\u5c07\u80fd\u5920\u5728\u521d\u59cb\u7de8\u8b6f\u5f8c\u6355\u7372\u8a2d\u5099\u6d3b\u52d5\uff1b\u7b49\u5230\u6a21\u578b\u958b\u59cb\u8a13\u7df4\u6216\u63a8\u7406\u6b65\u9a5f\u3002\n### \u624b\u52d5\u6355\u7372\nPytorch XLA \u4ee3\u78bc\u5eab\u4e2d\u7684 `capture_profile.py` \u8173\u672c\u53ef\u5feb\u901f\u6355\u7372\u914d\u7f6e\u6587\u4ef6\u3002\u7232\u6b64\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u5c07 [\u62cd\u651d\u914d\u7f6e\u6587\u4ef6](https://raw.githubusercontent.com/pytorch/xla/master/scripts/capture_profile.py) \u8907\u88fd\u5230\u60a8\u7684 TPU \u865b\u64ec\u6a5f\u3002\u4ee5\u4e0b\u547d\u4ee4\u6703\u5c07\u5b83\u8907\u88fd\u5230\u4e3b\u76ee\u9304\u3002\n```\n$ gcloud compute tpus tpu-vm ssh ${TPU_NAME} \\--zone us-central2-b \\--worker=all \\--command=\"wget https://raw.githubusercontent.com/pytorch/xla/master/scripts/capture_profile.py\"\n```\n\u5728\u8a13\u7df4\u904b\u884c\u6642\uff0c\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u6355\u7372\u914d\u7f6e\u6587\u4ef6\uff1a\n```\n$ gcloud compute tpus tpu-vm ssh ${TPU_NAME} \\--zone us-central2-b \\--worker=all \\--command=\"python3 capture_profile.py --service_addr \"localhost:9012\" --logdir ~/profiles/ --duration_ms 2000\"\n```\n\u6b64\u547d\u4ee4\u6703\u5c07 `.xplane.pb` \u6587\u4ef6\u4fdd\u5b58\u5728 `logdir` \u4e2d\u3002\u60a8\u53ef\u4ee5\u5c07\u65e5\u8a8c\u8a18\u9304\u76ee\u9304 `~/profiles/` \u66f4\u6539\u7232\u60a8\u504f\u597d\u7684\u4f4d\u7f6e\u548c\u540d\u7a31\u3002\u60a8\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4fdd\u5b58\u5728 Cloud Storage \u5b58\u5132\u6876\u4e2d\u3002\u7232\u6b64\uff0c\u8acb\u5c07 `logdir` \u8a2d\u7232 `gs://your_bucket_name/` \u3002\n### \u7a0b\u5e8f\u5316\u6355\u7372\n\u60a8\u53ef\u4ee5\u5c07\u8a13\u7df4\u8173\u672c\u914d\u7f6e\u7232\u901a\u904e\u5728\u6a21\u584a\u5e8f\u5217\u8173\u672c\u4e2d\u4f7f\u7528 [torch_xla.debug.profiler.trace_detached](https://github.com/pytorch/xla/blob/6d73ca8ecf8e5ef7a76296ac95dbbbe78878f6b3/torch_xla/debug/profiler.py#L93) API \u81ea\u52d5\u89f8\u767c\u914d\u7f6e\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u901a\u904e\u89f8\u767c\u8173\u672c\u624b\u52d5\u6355\u7372\u914d\u7f6e\u6587\u4ef6\u3002\n**\u6ce8\u610f** \uff1a `trace_detached` API \u50c5\u9069\u7528\u65bc\u6bcf\u591c build \u6216 2.2 \u7248\u672c\u4e4b\u5f8c\u7684\u7248\u672c\u3002\u5982\u9700\u5728\u65e9\u671f\u7684 torch_xla \u7248\u672c\u4e2d\u4ee5\u7a0b\u5e8f\u5316\u65b9\u5f0f\u6355\u7372\u6578\u64da\uff0c\u60a8\u53ef\u4ee5\u8907\u88fd\u65b9\u6cd5\u7684\u6b63\u6587\u4ee5\u76f4\u63a5\u5275\u5efa\u5f8c\u81fa\u6355\u7372\u7dda\u7a0b\u3002\n\u4f8b\u5982\uff0c\u5982\u9700\u5728\u7279\u5b9a\u9031\u671f\u548c\u6b65\u9a5f\u81ea\u52d5\u6355\u7372\u914d\u7f6e\u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u5c07\u8a13\u7df4\u8173\u672c\u914d\u7f6e\u7232\u4f7f\u7528 `PROFILE_STEP` \u3001 `PROFILE_EPOCH` \u548c `PROFILE_LOGDIR` \u74b0\u5883\u8b8a\u91cf\uff1a\n```\nimport osimport torch_xla.debug.profiler as xp# Within the training script, read the step and epoch to profile from the# environment.profile_step = int(os.environ.get('PROFILE_STEP', -1))profile_epoch = int(os.environ.get('PROFILE_EPOCH', -1))...for epoch in range(num_epoch):\u00a0 \u00a0...\u00a0 \u00a0for step, data in enumerate(epoch_dataloader):\u00a0 \u00a0 \u00a0 if epoch == profile_epoch and step == profile_step:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0profile_logdir = os.environ['PROFILE_LOGDIR']\u00a0 \u00a0 \u00a0 \u00a0 \u00a0# Use trace_detached to capture the profile from a background thread\u00a0 \u00a0 \u00a0 \u00a0 \u00a0xp.trace_detached('localhost:9012', profile_logdir)\u00a0 \u00a0 \u00a0 ...\n```\n\u9019\u6703\u5c07 `.xplane.pb` \u6587\u4ef6\u4fdd\u5b58\u5728 `PROFILE_LOGDIR` \u74b0\u5883\u8b8a\u91cf\u6307\u5b9a\u7684\u76ee\u9304\u4e2d\u3002\n### \u5728 TensorBoard \u4e2d\u5206\u6790\n\u5982\u9700\u9032\u4e00\u6b65\u5206\u6790\u914d\u7f6e\u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u5728\u540c\u4e00\u81fa\u6a5f\u5668\u4e0a\u6216\u53e6\u4e00\u81fa\u6a5f\u5668\u4e0a\u5c07 [TensorBoard](https://www.tensorflow.org/tensorboard?hl=zh-cn) \u8207 [TPU TensorBoard \u63d2\u4ef6](https://cloud.google.com/tpu/docs/profile-tpu-vm?hl=zh-cn#install-tensorboard) \u642d\u914d\u4f7f\u7528\uff08\u63a8\u85a6\uff09\u3002\n\u5982\u9700\u5728\u9060\u7a0b\u6a5f\u5668\u4e0a\u904b\u884c TensorBoard\uff0c\u8acb\u4f7f\u7528 SSH \u9023\u63a5\u5230 TensorBoard \u4e26\u5553\u7528\u7aef\u53e3\u8f49\u767c\u3002\u4f8b\u5982\uff0c\n```\n$ ssh -L 6006:localhost:6006 remote server address\n```\n\u6216\n```\n$ gcloud compute tpus tpu-vm ssh $TPU_NAME --zone=$ZONE --ssh-flag=\"-4 -L 6006:localhost:6006\"\n```\n\u5728\u9060\u7a0b\u6a5f\u5668\u4e0a\uff0c\u5b89\u88dd\u6240\u9700\u7684\u8edf\u4ef6\u5305\u4e26\u5553\u52d5 TensorBoard\uff08\u5047\u8a2d\u8a72\u6a5f\u5668\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u65bc `~/profiles/` \u4e0b\uff09\u3002\u5982\u679c\u60a8\u5c07\u914d\u7f6e\u6587\u4ef6\u5b58\u5132\u5728\u5176\u4ed6\u76ee\u9304\u6216 Cloud Storage \u5b58\u5132\u6876\u4e2d\uff0c\u8acb\u52d9\u5fc5\u6b63\u78ba\u6307\u5b9a\u8def\u5f91\uff0c\u4f8b\u5982 `gs://your_bucket_name/profiles` \u3002\n```\n(vm)$ pip install tensorflow tensorboard-plugin-profile\n```\n```\n(vm)$ tensorboard --logdir ~/profiles/ --port 6006\n```\n**\u6ce8\u610f** \uff1a\u5728\u6355\u7372\u914d\u7f6e\u6587\u4ef6\u6642\uff0c\u8acb\u52d9\u5fc5\u5c07 `.xplane` \u6587\u4ef6\u7f6e\u65bc\u751f\u6210\u7684\u540c\u4e00\u5d4c\u5957\u7d50\u69cb\u4e2d\u3002\u4f8b\u5982\uff1a `~/profiles/plugins/profile/2023_04_10_21_40_22/localhost_9012.xplane.pb`\n**\u6ce8\u610f** \uff1a\u5982\u679c\u60a8\u9047\u5230\u201c\u91cd\u8907\u7684\u63d2\u4ef6\u201d\u932f\u8aa4\uff0c\u53ef\u80fd\u662f\u56e0\u7232 TensorBoard \u6709\u591a\u500b\u8edf\u4ef6\u5305\u3002\u5378\u8f09\u6240\u6709\u9019\u4e9b\u8edf\u4ef6\u5305\uff0c\u7136\u5f8c\u518d\u6b21\u904b\u884c `pip install` \u547d\u4ee4\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\n(vm)$ pip uninstall tensorflow tf-nightly tensorboard tb-nightly tbp-nightly\n```\n\u5728\u672c\u5730\u700f\u89bd\u5668\u4e2d\uff0c\u8f49\u5230 [http://localhost:6006/](http://localhost:6006/) \uff0c\u7136\u5f8c\u5f9e\u4e0b\u62c9\u83dc\u55ae\u4e2d\u9078\u64c7 `PROFILE` \u4ee5\u52a0\u8f09\u914d\u7f6e\u6587\u4ef6\u3002\n\u5982\u9700\u77ad\u89e3 TensorBoard \u5de5\u5177\u4ee5\u53ca\u5982\u4f55\u89e3\u8b80\u8f38\u51fa\uff0c\u8acb\u53c3\u95b1 [TPU \u5de5\u5177](https://cloud.google.com/tpu/docs/cloud-tpu-tools?hl=zh-cn) \u3002", "guide": "Cloud TPU"}