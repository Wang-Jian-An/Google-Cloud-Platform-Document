{"title": "Cloud TPU - Preemptible TPUs", "url": "https://cloud.google.com/tpu/docs/preemptible", "abstract": "# Cloud TPU - Preemptible TPUs\n# Preemptible TPUs\nPreemptible TPUs cost much less than non-preemptible TPUs. The Cloud TPU service might preempt (shut down) these TPUs at any time, if it requires additional TPU resources.\nIf you are creating a preemptible TPU VM, use the [gcloud command](/tpu/docs/preemptible#create-tpuvm) . If you are creating a preemptible TPU Node, you can use the `gcloud` command or the [Console](https://console.cloud.google.com/compute/tpus) . For information on the differences between TPU VMs and TPU Nodes, see [System Architecture](/tpu/docs/system-architecture-tpu-vm) .\n", "content": "## Creating a preemptible TPU VM\n```\n$ gcloud compute tpus tpu-vm create demo-tpu \\\u00a0 --zone=europe-west4-a \\\u00a0 --accelerator-type=v3-8 \\\u00a0 --version=tpu-vm-tf-2.16.1-pjrt \\\u00a0 --preemptible\u00a0 \n```\nwhere:- `demo-tpu`is a name for the TPU.\n- `--accelerator-type`specifies the type of TPU.\n- `--version`specifies the version of TPU VM software to install.\n- `--preemptible`allows Cloud TPU to preempt the TPU.## Creating a preemptible TPU Node\n- [Go to the TPUs page](https://console.cloud.google.com/compute/tpus) under Compute Engine on the main page.\n- Click **CREATE TPU NODE** to open the TPU node creation page.\n- Type a name for your TPU node.\n- Select the zone in which to create the TPU node.\n- Select a [TPU type](/tpu/docs/system-architecture-tpu-vm#versions) for your TPU node.\n- Click **Turn on preemtibility for this node** to make your TPU node preemptible.\n- Select the TensorFlow or PyTorch version to install on your VM.\n```\n$ gcloud compute tpus execution-groups create \\\u00a0 --name=demo-tpu \\\u00a0 --zone=europe-west4-a \\\u00a0 --accelerator-type=v3-8 \\\u00a0 --tf-version=2.12.0 \\\u00a0 --preemptible\u00a0 \n```\nwhere:- `demo-tpu`is a name for the TPU.\n- `--accelerator-type specifies the type of TPU.\n- `--tf-version`specifies the version of Tensorflow or PyTorch to install on your VM.\n- `--preemptible`allows Cloud TPU to preempt the TPU.\nWith TPU Nodes, the preemptible status of a TPU is independent of the preemptible status of your VM instance.\n## Pricing and quota for preemptible TPUs\nPricing for preemptible TPUs is significantly lower than for normal TPUs. For details, see the [pricing page](/tpu/pricing) . You are not charged for TPUs if they are preempted in the first minute after you create them.\nQuota for preemptible TPUs is generally higher, and is separate from the quota for normal TPUs. See the [quota page](/tpu/docs/quota) .\n## Detecting if a TPU has been preempted\nYou use the following `gcloud` command to check whether the Cloud TPU service has preempted your TPU:\nList your available TPUs:\n```\ngcloud compute tpus tpu-vm list --zone=us-central1-b\n```\n```\n(vm)$ gcloud compute tpus list --zone=us-central1-b\n```\nThe output of the command displays the details of the TPUs created in your project. If a TPU has been preempted, the status changes from `READY` to `PREEMPTED` .\nFor example:\n```\nNAME \u00a0 \u00a0 \u00a0 ZONE \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ACCELERATOR_TYPE \u00a0NETWORK_ENDPOINT \u00a0 NETWORK \u00a0RANGE \u00a0 \u00a0 \u00a0 \u00a0 \u00a0STATUSdemo-tpu \u00a0 us-central1-b \u00a0v2-8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a010.240.1.2:8470 \u00a0 \u00a0default \u00a010.240.1.0/29 \u00a0PREEMPTED\n```\n**Note:** If your Cloud TPU is preempted, you must delete it and create a new one as described in [Managing TPUs](/tpu/docs/managing-tpus-tpu-vm) .\n## Preemptible VMs and TPUs (TPU Nodes only)\nAs described in the [quickstart guide](/tpu/docs/quickstart) for your framework, you need a Compute Engine virtual machine (VM) in order to connect to a TPU. Note that the preemptible status of the TPU is independent of the preemptible status of the VM. You can define your TPU as preemptible and the VM as not preemptible, or the other way round. You can also define them both as preemptible.\nThe most likely combination is a **preemptible TPU** and a **non-preemptible VM** . Note the following points:\n- The charges for the VM are likely to be low in relation to the charges for the TPU. The VM charges depend on the machine type you use. See the [pricing page](/tpu/pricing) for a simple example of the relative costs.\n- Cloud TPU does not coordinate the preempting of the VM and the TPU. If you define them both as preemptible, the VM and the TPU can be preempted at different times.\n- If Compute Engine preempts your VM, you are still charged for the TPU (unless the TPU is itself preempted). Note that the TPU is idle while the VM is preempted.\n- Preemptible instances, both Compute Engine VM and Cloud TPU instances, are always preempted after they run for 24 hours. [Certain actions](/compute/docs/instances/preemptible#preemption_selection) reset this 24-hour counter.## Detecting if a VM instance has been preempted (TPU Nodes only)\nTo check whether the VM instance has been preempted, use the `gcloud compute operations list` command to get a list of recent system operations. Add a `name` filter to only display the instances you have running or add the `operationType` filter to only display resources that have been preempted. For example, use the following command to display only the instances with the specified instance name:\n```\n$ gcloud compute operations list--filter=\"name=( 'NAME' my-vm)\"\n```\nThe following example displays only the resources that have been preempted:\n```\n$ gcloud compute operations list --filter=\"operationType=compute.instances.preempted\"\n```\nFor more details, see the [Compute Engine guide](/compute/docs/instances/preemptible) .\n## Designing your machine learning application to run on preemptible TPUs\nMake sure your application is resilient to restarts of the VM and TPU, by saving model checkpoints regularly and by configuring your application to restore the most recent checkpoint on restart.", "guide": "Cloud TPU"}