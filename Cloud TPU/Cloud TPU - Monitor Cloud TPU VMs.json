{"title": "Cloud TPU - Monitor Cloud TPU VMs", "url": "https://cloud.google.com/tpu/docs/troubleshooting/tpu-vm-monitoring", "abstract": "# Cloud TPU - Monitor Cloud TPU VMs\n# Monitor Cloud TPU VMs\nThis guide explains how to use [Google Cloud Monitoring](https://cloud.google.com/monitoring) to monitor your Cloud TPU VMs. Google Cloud Monitoring automatically collects [metrics](https://cloud.google.com/monitoring/api/metrics_gcp) and [logs](https://cloud.google.com/logging) from your Cloud TPU and its host Compute Engine. These data can be used to monitor the health of your Cloud TPU and Compute Engine.\nMetrics enable you to track a numerical quantity over time, for example, CPU utilization, network usage, or TensorCore idle duration. Logs capture events at a specific point in time. Log entries are written by your own code, Google Cloud services, third-party applications, and the Google Cloud infrastructure. You can also generate metrics from the data present in a log entry by creating a [log-based metric](/logging/docs/logs-based-metrics) . You can also set [alert policies](https://cloud.google.com/monitoring/alerts) based on metric values or log entries.\nThis guide discusses Google Cloud Monitoring and shows you how to:\n- View Cloud TPU metrics\n- Set up Cloud TPU metrics alert policies\n- Query Cloud TPU logs\n- Create log-based metrics for setting up alerts and visualizing dashboards", "content": "## Prerequisites\nThis document assumes some basic knowledge of [Google Cloud Monitoring](https://cloud.google.com/monitoring) . You **must** have a Compute Engine VM and Cloud TPU resources created before you can begin generating and working with [Google Cloud Monitoring](https://cloud.google.com/monitoring) . See the [Cloud TPU Quickstart](/tpu/docs/quickstart) for more details.\n## Metrics\nGoogle Cloud metrics are automatically generated by Compute Engine VMs and the Cloud TPU runtime. The following metrics are generated by Cloud TPU VMs:\n- `memory/usage`\n- `network/received_bytes_count`\n- `network/sent_bytes_count`\n- `cpu/utilization`\n- `tpu/tensorcore/idle_duration`\nIt can take up to 180 seconds between the time a metric value is generated and when it's displayed in the Metrics Explorer.\nFor more information on TPU related metrics, see [TPU metrics](/monitoring/api/metrics_gcp#gcp-tpu) .\n### Memory usage\nThe `memory/usage` metric tracks the memory used by the TPU VM in bytes. This metric is sampled every 60 seconds.\n### Network received bytes count\nThe `network/received_bytes_count` metric tracks the number of cumulative bytes of data the TPU VM received over the network at a point in time.\n### Network sent bytes count\nThe `network/sent_bytes_count` metric tracks the number of cumulative bytes the TPU VM sent over the network at a point in time.\n### CPU utilization\nThe `cpu/utilization` metric tracks the current CPU utilization on the TPU worker, represented as a percentage, sampled once a minute. Values are typically between 0.0 and 100.0, but might exceed 100.0.\n### TensorCore idle duration\nThe `tpu/tensorcore/idle_duration` metric tracks the number of seconds each TPU chip's TensorCore has been idle. This metric is available for each chip on all TPUs in use. If a TensorCore is in use, the idle duration value is reset to zero. When the TensorCore is no longer in use, the idle duration value starts to increase.\nThe following graph shows the `tpu/tensorcore/idle_duration` metric for a v2-8 TPU VM which has one worker. Each worker has four chips. In this example, all four chips have the same values for `tpu/tensorcore/idle_duration` , so the graphs are superimposed on each other.\nFor a complete list of metrics generated by Cloud TPU, see [Google Cloud Cloud TPU metrics](/monitoring/api/metrics_gcp#gcp-tpu) .\n### Viewing metrics\nYou can view metrics using the [Metrics Explorer](/monitoring/charts/metrics-explorer) in the Google Cloud console.\nIn the Metrics Explorer, click **SELECT A METRIC** and search for `TPU Worker` . If **Show only active resources and metrics** is on, only metrics from active resources are displayed. Click **TPU Worker** to display all available metrics.\nYou can also access metrics using `curl` HTTP calls:\nUse the **Try it!** button in the [projects.timeSeries.query documentation](/monitoring/api/ref_v3/rest/v3/projects.timeSeries/query) to retrieve the value for a metric within the specified timeframe.\n- Fill in the name in the following format: projects/{project-name}.\n- Add a query to the **Request body** section. The following is a sample query for retrieving the idle duration metric for the specified zone for the last five minutes.`fetch tpu_worker | filter zone = 'us-central2-b' | metric tpu.googleapis.com/tpu/tensorcore/idle_duration | within 5m`\n- Click **Execute** to make the call and see the results of the HTTP POST message.\nThe [Monitoring Query Language reference](/monitoring/mql/reference) document has more information on how to customize this query.\n**Note:** Not all metrics listed in [Cloud TPU metrics](/monitoring/api/metrics_gcp#gcp-tpu) are generated by Cloud TPU VMs. Use the **Show only active resources and metrics** setting in the [Metrics Explorer](/monitoring/charts/metrics-explorer) to see what metrics are available when you run your training script.\nYou can create [alert policies](/monitoring/alerts) that tell Cloud Monitoring to send an alert when a condition is met.\n### Creating alerts\nThe steps in this section show an example of how to add an alert policy for the **TensorCore Idle Duration** metric. Whenever this metric exceeds 24 hours, Cloud Monitoring sends an email to the registered email address.\n- [Go to the Monitoring console](https://console.cloud.google.com/monitoring) .\n- In the navigation pane click **Alerting** .\n- Click **EDIT NOTIFICATION CHANNELS** .\n- Under **Email** , click **ADD NEW** . Type an email address, a display name, and click **SAVE** .\n- Click **CREATE POLICY** .\n- Click **SELECT A METRIC** and then select **Tensorcore Idle Duration** and click **APPLY** .\n- Click **NEXT** and then **Threshold** .\n- For **Alert trigger** , select **Any time series violates** .\n- For **Threshold Position** , select **Above threshold** .\n- For **Threshold Value** , type`86400000`.\n- Click **NEXT** .\n- Under **Notification Channels** select your email notification channel and click **OK** .\n- Type a name for the alert policy.\n- Click **NEXT** and then **CREATE POLICY** .\nWhen the TensorCore Idle Duration exceeds 24 hours, an email is sent to the email address you specified.\n## Logging\nLog entries are written by Google Cloud services, third party services, ML frameworks or your code. You can view logs using the Logs Explorer or Logs API. For more information about Google Cloud logging, see [Google Cloud Logging](https://cloud.google.com/logging) .\nIn the Logs Explorer, select a resource type:\n- **Cloud TPU Worker** -> **Zone** -> **Node ID** \n- **Audited Resource** -> **Cloud TPU** -> API (`google.cloud.tpu.v2alpha1.Tpu.CreateNode`,`google.cloud.tpu.v2alpha1.Tpu.DeleteNode`,`google.cloud.tpu.v2alpha1.Tpu.UpdateNode`)\nCloud TPU worker logs contain information about a specific Cloud TPU worker in a specific zone, for example the amount of memory available on the Cloud TPU worker ( `system_available_memory_GiB` ).\nAudited Resource logs contain information about when a specific Cloud TPU API was called and who made the call. For example `CreateNode` , `UpdateNode` , and `DeleteNode` .\nML frameworks can generate logs to stdout and stderr. These logs are controlled by environment variables and are read by your training script.\nYour code can write logs to Google Cloud Logging. For more information, see [Write standard logs](/logging/docs/samples/logging-stdlogging) and [Write structured logs](/logging/docs/samples/logging-write-log-entry) .\nTo view Cloud TPU logs:\n- Go to the Google Cloud Logs Viewer\n- Click the **Resource** drop-down\n- Click **Cloud TPU Worker** \n- Select a zone\n- Select the Cloud TPU you're interested in\n- Click **Apply** . Logs are displayed in the query results\nTo view Audited Resource logs:\n- Go to the Google Cloud Logs Viewer\n- Click the **Resource** drop-down\n- Click **Audited Resource** and then **Cloud TPU** \n- Choose the Cloud TPU API that you're interested in\n- Click **Apply** . Logs are displayed in the query results\n- Choose the APIs that begin with`google.cloud.tpu.v2alpha1.Tpu`\n### Query Google Cloud Logs\nWhen you view logs in the Google Cloud console, the page performs a default query. You can view the query by selecting the `Show query` toggle switch. You can modify the default query or create a new one. For more information, see [Build Queries in the Logs Explorer](/logging/docs/view/building-queries) .\n### Audited resource logs\nClick any log entry to expand it, and you will find a field called `protoPayload` . Expand `protoPayload` , and you will see a number of subfields:\n- **logName** : the name of the log\n- **protoPayload -> @type** : the type of the log\n- **resourceName** : the name of your Cloud TPU\n- **methodName** : the name of the method called (audit logs only)\n- **request -> @type** : the request type\n- **request -> node** : details about the Cloud TPU node\n- **request -> node_id** : the name of the TPU\n- **severity** : the severity of the log\n### TPU Worker logs\nClick any log entry to expand it, and you will find a field called `jsonPayload` . Expand `jsonPayload` and you will see a number of subfields:\n- **accelerator_type** : the accelerator type\n- **consumer_project** : the project where the Cloud TPU lives\n- **evententry_timestamp** : the time when the log was generated\n- **system_available_memory_GiB** : the available memory on the Cloud TPU worker (0 ~ 350 GiB)## Creating log-based metrics\nThis section describes how to create [log-based metrics](/logging/docs/logs-based-metrics) used for setting up monitoring dashboards and alerts. For information about programmatically creating log-based metrics, see [Creating log-based metrics programmatically using the Cloud Logging REST API](#rest_api) .\nThe following example uses the **system_available_memory_GiB** subfield to demonstrate how to create a log-based metric for monitoring Cloud TPU worker available memory.\n- Navigate to the Logs Explorer\n- In the query box, enter the following query to extract all log entries that have **system_available_memory_GiB** defined for the primary Cloud TPU worker:```\nresource.type=tpu_worker\nresource.labels.project_id=your-project\nresource.labels.zone=your-tpu-zone\nresource.labels.node_id=your-tpu-name\nresource.labels.worker_id=0\nlogName=projects/your-project/logs/tpu.googleapis.com%2Fruntime_monitor\njsonPayload.system_available_memory_GiB:*\n```\n- Click **Create metric** to display the **Metric Editor** \n- Under **Metric Type** , choose **Distribution** \n- Type a name, optional description, and unit of measurement for your metric. Type \"matrix_unit_utilization_percent\" and \"MXU utilization\" in the **Name** and **Description** fields, respectively\n- The filter is pre-populated with the script that you entered in the Logs Explorer\n- Click **CREATE METRIC** \n- Click **Explore Metrics** to view your new metric. It make take a few minutes before your metrics are displayed\n### Creating log-based metrics with the Cloud Logging REST API\nYou can also create log-based metrics through the [Cloud Logging API](/logging/docs/reference/v2/rest) . For more information, see [Creating a distribution metric](/logging/docs/logs-based-metrics/distribution-metrics) .\n## Creating dashboards and alerts using log-based metrics\nDashboards are useful for visualizing metrics (expect ~2 minute delay); alerts are helpful for sending notifications when errors occur. For more information, see:\n- [Monitoring and logging dashboards](/tpu/docs/troubleshooting/dashboards) \n- [Manage custom dashboards](https://cloud.google.com/monitoring/charts/dashboards) \n- [Create metric-based alert policies](https://cloud.google.com/monitoring/alerts/using-alerting-ui) \n### Creating dashboards\nTo create a dashboard in Cloud Monitoring for the **Tensorcore idle duration** metric:\n- [Go to the Monitoring console](https://console.cloud.google.com/monitoring) \n- In the navigation pane, click **Dashboards** \n- Click **CREATE DASHBOARD** and then **Add Widget** \n- Choose the chart type that you want to add. For this example, choose **Line** \n- Type a title for the widget\n- Click the **Select a metric** drop-down menu and type \"Tensorcore idle duration\" in the filter field\n- In the list of metrics, select **TPU Worker** -> **Tpu** -> **Tensorcore idle duration** \n- To filter the dashboard contents, click the **Filter** drop-down menu\n- Under **Resource labels** , select **project_id** \n- Choose a comparator and type a value in the **Value** field\n- Click **Apply**", "guide": "Cloud TPU"}