{"title": "Cloud TPU - Cloud TPU v5e \u63a8\u65b7\u7c21\u4ecb", "url": "https://cloud.google.com/tpu/docs/v5e-inference?hl=zh-cn", "abstract": "# Cloud TPU - Cloud TPU v5e \u63a8\u65b7\u7c21\u4ecb\n# Cloud TPU v5e \u63a8\u65b7\u7c21\u4ecb\n", "content": "## \u6982\u89bd\u548c\u512a\u52e2\nCloud TPU v5e \u662f Google Cloud \u6700\u65b0\u4e00\u4ee3 AI \u52a0\u901f\u5668\u3002 v5e Pod \u6bcf\u500b Pod \u53ef\u6e1b\u5c11 256 \u500b\u82af\u7247\uff0c\u91dd\u5c0d\u57fa\u65bc\u8f49\u63db\u5668\u3001\u6587\u672c\u5230\u5716\u50cf\u548c\u57fa\u65bc CNN \u7684\u8a13\u7df4\u3001\u5fae\u8abf\u548c\u670d\u52d9\u9032\u884c\u4e86\u512a\u5316\u3002\n## \u6982\u5ff5\n\u5982\u679c\u60a8\u525b\u958b\u59cb\u63a5\u89f8 Cloud TPU\uff0c\u8acb\u53c3\u95b1 [TPU \u6587\u6a94\u9996\u9801](https://cloud.google.com/tpu/docs/tpus?hl=zh-cn) \u3002\n### \u689d\u72c0\u6a19\u7c64\n\u55ae\u500b v5e \u4e2d\u6709 256 \u500b\u82af\u7247\uff0c\u6bcf\u500b\u4e3b\u6a5f\u6709 8 \u500b\u82af\u7247\u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7cfb\u7d71\u67b6\u69cb](https://cloud.google.com/tpu/docs/system-architecture-tpu-vm?hl=zh-cn) \u3002\n### \u6838\u5fc3\nTPU \u82af\u7247\u5177\u6709\u4e00\u500b\u6216\u5169\u500b TensorCore\uff0c\u7528\u65bc\u904b\u884c\u77e9\u9663\u4e58\u6cd5\u3002\u8207 v2 \u548c v3 Pod \u985e\u4f3c\uff0cv5e \u7684\u6bcf\u500b\u82af\u7247\u90fd\u6709\u4e00\u500b TensorCore\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cv4 Pod \u7684\u6bcf\u500b\u82af\u7247\u6709 2 \u500b TensorCore\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3 v5e TensorCore\uff0c\u8acb\u53c3\u95b1 [\u7cfb\u7d71\u67b6\u69cb](https://cloud.google.com/tpu/docs/system-architecture-tpu-vm?hl=zh-cn) \u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3 TensorCore\uff0c\u8acb\u53c3\u95b1\u9019\u7bc7 [ACM \u6587\u7ae0](https://dl.acm.org/doi/pdf/10.1145/3360307) \u3002\n### \u4e3b\u6a5f\n\u4e3b\u6a5f\u662f\u904b\u884c\u865b\u64ec\u6a5f\u7684\u7269\u7406\u8a08\u7b97\u6a5f (CPU)\u3002\u4e00\u500b\u4e3b\u6a5f\u53ef\u4ee5\u540c\u6642\u904b\u884c\u591a\u500b\u865b\u64ec\u6a5f\u3002\n### \u6279\u91cf\u63a8\u65b7\n\u6279\u91cf\u6216\u96e2\u7dda\u63a8\u65b7\u662f\u6307\u5728\u751f\u7522\u6d41\u6c34\u7dda\u4e4b\u5916\u9032\u884c\u63a8\u65b7\uff0c\u901a\u5e38\u662f\u5c0d\u5927\u91cf\u8f38\u5165\u9032\u884c\u63a8\u65b7\u3002\u6279\u91cf\u63a8\u65b7\u53ef\u7528\u65bc\u7232\u6578\u64da\u52a0\u6a19\u7c64\u7b49\u96e2\u7dda\u4efb\u52d9\uff0c\u4e5f\u53ef\u7528\u65bc\u8a55\u4f30\u7d93\u904e\u8a13\u7df4\u7684\u6a21\u578b\u3002\u5ef6\u9072\u6642\u9593 SLO \u4e0d\u662f\u6279\u91cf\u63a8\u65b7\u7684\u512a\u5148\u7d1a\u3002\n### \u63d0\u4f9b\u670d\u52d9\n\u670d\u52d9\u662f\u6307\u5c07\u7d93\u904e\u8a13\u7df4\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u90e8\u7f72\u5230\u751f\u7522\u74b0\u5883\u7684\u904e\u7a0b\uff0c\u6b64\u74b0\u5883\u53ef\u7528\u65bc\u9032\u884c\u9810\u6e2c\u6216\u6c7a\u7b56\u3002\u5ef6\u9072\u6642\u9593 SLO \u662f\u670d\u52d9\u512a\u5148\u7d1a\u3002\n### \u55ae\u500b\u4e3b\u6a5f\u8207\u591a\u4e3b\u6a5f\n\u4f7f\u7528\u5c11\u65bc 8 \u500b\u689d\u72c0\u6a19\u7c64\u7684\u5207\u7247\u6700\u591a\u6703\u4f7f\u7528 1 \u500b\u4e3b\u6a5f\u3002\u8d85\u904e 8 \u500b\u82af\u7247\u7684\u5207\u7247\u53ef\u4ee5\u8a2a\u554f\u591a\u500b\u4e3b\u6a5f\uff0c\u4e26\u4e14\u53ef\u4ee5\u4f7f\u7528\u591a\u500b\u4e3b\u6a5f\u904b\u884c\u5206\u4f48\u5f0f\u8a13\u7df4\u3002\n### \u5df2\u52a0\u5165\u968a\u5217\u7684\u8cc7\u6e90\nTPU \u8cc7\u6e90\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u7528\u65bc\u7232\u55ae\u5207\u7247\u6216\u591a\u5207\u7247 TPU \u74b0\u5883\u52a0\u5165\u968a\u5217\u548c\u7ba1\u7406\u8acb\u6c42\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6392\u968a\u8cc7\u6e90\u7528\u6236\u6307\u5357](https://cloud.google.com/tpu/docs/queued-resources?hl=zh-cn) \u3002\n### TPU \u865b\u64ec\u6a5f\n\u4e00\u500b\u904b\u884c Linux \u4e14\u53ef\u4ee5\u8a2a\u554f\u5e95\u5c64 TPU \u7684\u865b\u64ec\u6a5f\u3002\u5c0d\u65bc v5e TPU\uff0c\u6bcf\u500b TPU \u865b\u64ec\u6a5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 1 \u500b\u30014 \u500b\u6216 8 \u500b\u82af\u7247\uff0c\u5177\u9ad4\u53d6\u6c7a\u65bc\u7528\u6236\u6307\u5b9a\u7684\u52a0\u901f\u5668\u985e\u578b\u3002TPU \u865b\u64ec\u6a5f\u4e5f\u7a31\u7232\u201c\u5de5\u4f5c\u5668\u201d\u3002 ****\n## \u958b\u59cb\u4f7f\u7528\n### \u4fdd\u8b77\u5bb9\u91cf\n\u806f\u7e6b [Cloud \u92b7\u552e\u5718\u968a](https://cloud.google.com/contact?hl=zh-cn) \uff0c\u958b\u59cb\u7232\u60a8\u7684 AI \u5de5\u4f5c\u8ca0\u8f09\u4f7f\u7528 Cloud TPU v5e\u3002\n**\u6ce8\u610f** \uff1a\u5275\u5efa\u7528\u65bc\u63a8\u65b7\u7684 v5e \u5be6\u4f8b\uff08v5litepod-1\u3001v5litepod-4\u3001v5litepod-8\uff09\u9700\u8981\u670d\u52d9\u914d\u984d\u985e\u578b\uff1a\u6309\u9700 TPU \u7232 `tpu-v5s-litepod-serving` \uff0c\u6436\u4f54\u5f0f TPU \u7232 `tpu-v5s-litepod-serving-preemptible` \uff0c\u9810\u7559 TPU \u7232 `tpu-v5s-litepod-serving-reserved` \u3002\n### \u6e96\u5099 Google Cloud \u9805\u76ee\n- [\u767b\u9304](https://accounts.google.com/Login?hl=zh-cn) \u60a8\u7684 Google \u5e33\u865f\u3002 [\u8a3b\u518a\u65b0\u5e33\u865f](https://accounts.google.com/SignUp?hl=zh-cn) \uff08\u5982\u679c\u60a8\u5c1a\u672a\u8a3b\u518a\uff09\u3002\n- \u5728 [Cloud Console](https://console.cloud.google.com/?hl=zh-cn) \u4e2d\uff0c\u5f9e\u9805\u76ee\u9078\u64c7\u5668\u9801\u9762 [\u9078\u64c7](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#get_an_existing_project) \u6216 [\u5275\u5efa](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#creating_a_project) \u4e00\u500b Cloud \u9805\u76ee\u3002\n- \u6240\u6709 Google Cloud \u7528\u91cf\u90fd\u9700\u8981 [\u8a2d\u7f6e\u7d50\u7b97\u4fe1\u606f](https://cloud.google.com/billing/docs?hl=zh-cn) \uff0c\u56e0\u6b64\u8acb\u78ba\u4fdd\u60a8\u7684\u9805\u76ee\u5df2\u5553\u7528\u7d50\u7b97\u529f\u80fd\u3002\n- \u5b89\u88dd [gcloud alpha components](https://cloud.google.com/sdk/gcloud/reference/components/install?hl=zh-cn) \u3002\n- \u5728 Cloud Shell \u4e2d\uff0c\u4f7f\u7528\u4ee5\u4e0b `gcloud` \u547d\u4ee4\u5553\u7528 TPU API\u3002\uff08\u60a8\u4e5f\u53ef\u4ee5 [\u901a\u904e Google Cloud \u63a7\u5236\u6aaf](https://console.cloud.google.com/apis/library/tpu.googleapis.com?hl=zh-cn) \u5553\u7528\u8a72\u529f\u80fd\u3002\uff09```\ngcloud services enable tpu.googleapis.com\n```\n- \u5553\u7528 TPU \u670d\u52d9\u5e33\u865f\u3002\u670d\u52d9\u5e33\u865f\u5141\u8a31 Cloud TPU \u670d\u52d9\u8a2a\u554f\u5176\u4ed6 Google Cloud \u670d\u52d9\u3002\u4f7f\u7528\u7528\u6236\u4ee3\u7ba1\u5f0f\u670d\u52d9\u5e33\u865f\u662f [\u5efa\u8b70](https://cloud.google.com/run/docs/securing/service-identity?hl=zh-cn) \u7684 Google Cloud \u505a\u6cd5\u3002\u8acb\u6309\u7167\u9019\u4e9b\u6307\u5357\u7232\u60a8\u7684\u670d\u52d9\u5e33\u865f [\u5275\u5efa](https://cloud.google.com/iam/docs/service-accounts-create?hl=zh-cn) \u4e26 [\u6388\u4e88](https://cloud.google.com/iam/docs/granting-changing-revoking-access?hl=zh-cn) \u4ee5\u4e0b\u89d2\u8272\u3002\u4ee5\u4e0b\u89d2\u8272\u662f\u5fc5\u9700\u7684\uff1a- TPU Admin\n- Storage Admin\n- Logs Writer\n- Monitoring Metric Writer\n- \u914d\u7f6e\u9805\u76ee\u548c\u5340\u57df\u3002\u60a8\u7684\u9805\u76ee ID \u662f [\u986f\u793a\u5728 Cloud \u63a7\u5236\u6aaf\u4e0a](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifying_projects) \u7684\u9805\u76ee\u7684\u540d\u7a31\u3002Cloud TPU v5e \u7684\u9ed8\u8a8d\u53ef\u7528\u5340\u662f `us-west4-a` \u3002```\nexport PROJECT_ID=project-IDexport ZONE=us-west4-agcloud alpha compute tpus tpu-vm service-identity create --zone=${ZONE}gcloud auth logingcloud config set project ${PROJECT}gcloud config set compute/zone ${ZONE}\n```\n- \u9810\u914d Cloud TPU v5e \u74b0\u5883\u3002v5e \u4f5c\u7232\u201c\u5df2\u52a0\u5165\u968a\u5217\u7684\u8cc7\u6e90\u201d [](https://cloud.google.com/tpu/docs/queued-resources?hl=zh-cn) \u9032\u884c\u7ba1\u7406\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 `queued-resource create` \u547d\u4ee4\u9810\u914d\u5bb9\u91cf\u3002\u7232\u9805\u76ee ID\u3001\u52a0\u901f\u5668\u985e\u578b\u3001\u5730\u5340\u3001\u904b\u884c\u6642\u7248\u672c\u548c TPU \u540d\u7a31\u5275\u5efa\u74b0\u5883\u8b8a\u91cf\u3002```\nexport PROJECT_ID=project_IDexport ACCELERATOR_TYPE=v5litepod-1export ZONE=us-west4-aexport RUNTIME_VERSION=v2-alpha-tpuv5-liteexport SERVICE_ACCOUNT=service_accountexport TPU_NAME=tpu-nameexport QUEUED_RESOURCE_ID=queued_resource_id\n```\n- \u5275\u5efa TPU \u8cc7\u6e90\u3002```\ngcloud alpha compute tpus queued-resources create ${QUEUED_RESOURCE_ID} \\--node-id ${TPU_NAME} \\--project ${PROJECT_ID} \\--zone ${ZONE} \\--accelerator-type ${ACCELERATOR_TYPE} \\--runtime-version ${RUNTIME_VERSION} \\--service-account ${SERVICE_ACCOUNT} \\--${QUOTA_TYPE}\n``` **\u6ce8\u610f** \uff1a `QUOTA_TYPE` \u6a19\u8a8c\u53ef\u4ee5\u662f `reserved` \u6216 `best-effort` \u3002\u5982\u9700\u77ad\u89e3 Cloud TPU \u652f\u6301\u7684\u4e0d\u540c\u985e\u578b\u7684\u914d\u984d\uff0c\u8acb\u53c3\u95b1 [\u914d\u984d\u985e\u578b](https://cloud.google.com/tpu/docs/quota?hl=zh-cn#quota_types) \u3002\u5982\u679c\u8981\u522a\u9664\u5df2\u9810\u7559\u7684\u8cc7\u6e90\uff0c\u60a8\u9700\u8981\u5148\u522a\u9664\u8cc7\u6e90 TPU_NAME\uff0c\u7136\u5f8c\u518d\u522a\u9664\u5df2\u52a0\u5165\u968a\u5217\u7684\u8cc7\u6e90\u8acb\u6c42\u3002```\ngcloud alpha compute tpus delete $TPU_NAME --zone ${ZONE} --project ${PROJECT_ID}gcloud alpha compute tpus queued-resources delete ${QUEUED_RESOURCE_ID} \\--project ${PROJECT_ID} \\--zone ${ZONE}\n```\n- \u4f7f\u7528 SSH \u9023\u63a5\u5230 TPU vM\u5982\u9700\u5728 TPU \u865b\u64ec\u6a5f\u4e0a\u904b\u884c\u4ee3\u78bc\uff0c\u60a8\u9700\u8981 `SSH` \u9032\u5165\u6bcf\u500b TPU \u865b\u64ec\u6a5f\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0cv5litepod-1 \u53ea\u6709\u4e00\u500b TPU \u865b\u64ec\u6a5f\u3002```\ngcloud compute config-sshgcloud compute tpus tpu-vm ssh $TPU_NAME --zone $ZONE --project $PROJECT_ID\n```\n### \u7ba1\u7406\u60a8\u7684 TPU \u865b\u64ec\u6a5f\n\u5982\u9700\u77ad\u89e3\u9069\u7528\u65bc\u60a8\u7684 TPU \u865b\u64ec\u6a5f\u7684\u6240\u6709 TPU \u7ba1\u7406\u9078\u9805\uff0c\u8acb\u53c3\u95b1 [\u7ba1\u7406 TPU](https://cloud.google.com/tpu/docs/managing-tpus-tpu-vm?hl=zh-cn) \u3002\n### \u958b\u767c\u548c\u904b\u884c\n\u672c\u90e8\u5206\u4ecb\u7d39\u5728 Cloud TPU v5e \u4e0a\u4f7f\u7528 JAX \u6216 PyTorch \u9032\u884c\u81ea\u5b9a\u7fa9\u6a21\u578b\u63a8\u65b7\u7684\u5e38\u898f\u8a2d\u7f6e\u904e\u7a0b\u3002TensorFlow \u652f\u6301\u5f88\u5feb\u5c31\u6703\u5553\u7528\u3002\n\u5982\u9700\u77ad\u89e3 v5e \u8a13\u7df4\u8aaa\u660e\uff0c\u8acb\u53c3\u95b1 [v5e \u8a13\u7df4\u6307\u5357](https://cloud.google.com/tpu/docs/v5e-training?hl=zh-cn) \u3002\n## \u5728 v5e \u4e0a\u904b\u884c\u63a8\u65b7\n### \u63a8\u65b7\u8edf\u4ef6\u68e7\n\u4ee5\u4e0b\u90e8\u5206\u8a73\u7d30\u4ecb\u7d39\u4e86\u63a8\u65b7\u8edf\u4ef6\u5806\u68e7\u3002\u672c\u6587\u6a94\u91cd\u9ede\u4ecb\u7d39\u4f7f\u7528 JAX\u3001TensorFlow (TF) \u548c PyTorch \u8a13\u7df4\u7684\u6a21\u578b\u7684\u55ae\u4e3b\u6a5f\u50b3\u9001\u3002\n\u672c\u90e8\u5206\u5047\u5b9a\u60a8\u5df2\u6839\u64da [\u6e96\u5099 Google Cloud \u9805\u76ee](#prepare-a-project) \u4e2d\u7684\u8aaa\u660e\u8a2d\u7f6e\u4e86 Google Cloud \u9805\u76ee\u3002\n## JAX \u6a21\u578b\u63a8\u65b7\u548c\u670d\u52d9\n\u4ee5\u4e0b\u90e8\u5206\u4ecb\u7d39\u4e86 JAX \u6a21\u578b\u63a8\u65b7\u7684\u5de5\u4f5c\u6d41\u3002 JAX \u63a8\u65b7\u6709\u5169\u7a2e\u8def\u5f91\uff0c\u5982\u5716\u6240\u793a\u3002\u672c\u90e8\u5206\u4ecb\u7d39\u901a\u904e `jax2tf` \u548c Cloud TPU Serving \u7684 JAX \u6a21\u578b\u7684\u751f\u7522\u8def\u5f91\u3002\n- \u4f7f\u7528`jax2tf`\u5c07\u6a21\u578b\u8f49\u63db\u7232 Cloud TPU 2 \u4e26\u4fdd\u5b58\u6a21\u578b\n- \u4f7f\u7528\u63a8\u65b7\u8f49\u63db\u5668\u8f49\u63db\u5df2\u4fdd\u5b58\u7684\u6a21\u578b\n- \u4f7f\u7528 Cloud TPU Serving \u4f86\u904b\u884c\u6a21\u578b\n### \u4f7f\u7528 jax2tf \u8f49\u63db\u4e26\u4fdd\u5b58\u6a21\u578b\n\u8acb\u53c3\u95b1 [JAX \u548c Cloud TPU \u4e92\u64cd\u4f5c](https://github.com/google/jax/blob/main/jax/experimental/jax2tf/README.md) \u4ee5\u8f49\u63db JAX \u6a21\u578b\u4e26\u5c07\u5176\u4fdd\u5b58\u5230 Cloud TPU\u3002\n```\n# Inference functiondef model_jax(params, inputs):\u00a0 return params[0] + params[1] * inputs# Wrap the parameter constants as tf.Variables; this will signal to the model# saving code to save those constants as variables, separate from the# computation graph.params_vars = tf.nest.map_structure(tf.Variable, params)# Build the prediction function by closing over the `params_vars`. If you# instead were to close over `params` your SavedModel would have no variables# and the parameters will be included in the function graph.prediction_tf = lambda inputs: jax2tf.convert(model_jax)(params_vars, inputs)my_model = tf.Module()# Tell the model saver what the variables are.my_model._variables = tf.nest.flatten(params_vars)my_model.f = tf.function(prediction_tf, jit_compile=True, autograph=False)tf.saved_model.save(my_model)\n```\n### \u4f7f\u7528\u63a8\u65b7\u8f49\u63db\u5668\u8f49\u63db\u5df2\u4fdd\u5b58\u7684\u6a21\u578b\n[\u63a8\u65b7\u8f49\u63db\u5668\u6307\u5357](https://cloud.google.com/tpu/docs/v5e-inference-converter?hl=zh-cn) \u4e2d\u4ecb\u7d39\u4e86\u63a8\u65b7\u8f49\u63db\u5668\u7684\u6b65\u9a5f\u3002\n### \u4f7f\u7528 Cloud TPU Serving\n[Cloud TPU \u670d\u52d9](#tensorflow-serving) \u4e2d\u4ecb\u7d39\u4e86 Cloud TPU \u670d\u52d9\u7684\u6b65\u9a5f\u3002\n### E2E JAX \u6a21\u578b\u670d\u52d9\u793a\u4f8b\n\u60a8\u9700\u8981\u8a2d\u7f6e Docker \u6191\u64da\u4e26\u62c9\u53d6\u63a8\u65b7\u8f49\u63db\u5668\u548c Cloud TPU Serving Docker \u6620\u50cf\u3002\u5982\u679c\u60a8\u5c1a\u672a\u57f7\u884c\u6b64\u64cd\u4f5c\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\nsudo usermod -a -G docker ${USER}newgrp dockergcloud auth configure-docker \\\u00a0 \u00a0 us-docker.pkg.devdocker pull us-docker.pkg.dev/cloud-tpu-images/inference/tpu-inference-converter-cli:2.13.0docker pull us-docker.pkg.dev/cloud-tpu-images/inference/tf-serving-tpu:2.13.0\n```\n\u4e0b\u8f09\u6f14\u793a\u4ee3\u78bc\uff1a\u901a\u904e SSH \u9023\u63a5\u5230\u60a8\u7684 TPU \u865b\u64ec\u6a5f\u4e26\u5b89\u88dd\u63a8\u7406\u6f14\u793a\u4ee3\u78bc\u3002\n```\ngsutil -m cp -r \\\u00a0 \"gs://cloud-tpu-inference-public/demo\" \\\u00a0 .\n```\n\u5b89\u88dd JAX \u6f14\u793a\u4f9d\u8cf4\u9805\u3002\u5728 TPU \u865b\u64ec\u6a5f\u4e0a\u5b89\u88dd `requirements.txt` \u3002\n```\npip install -r ./demo/jax/requirements.txt\n```\n### \u904b\u884c JAX BERT E2E Serving \u6f14\u793a\n[\u9810\u8a13\u7df4\u7684 BERT \u6a21\u578b](https://huggingface.co/bert-base-uncased) \u4f86\u81ea Hugging Face\u3002\n**\u6ce8\u610f** \uff1a\u4ee5\u4e0b\u4ee3\u78bc\u4e5f\u53ef\u4ee5\u652f\u6301\u5f9e JAX \u6a21\u578b\u5c0e\u51fa\u7684 TF2 \u5df2\u4fdd\u5b58\u6a21\u578b\u3002\u4e0d\u652f\u6301\u5c0e\u51fa PyTorch \u5df2\u4fdd\u5b58\u7684\u6a21\u578b\u3002\n- \u5f9e Flax BERT \u6a21\u578b\u4e2d\u5c0e\u51fa\u8207 TPU \u517c\u5bb9\u7684 TF2 \u6a21\u578b\uff1a```\ncd demo/jax/bert\n``````\npython3 export_bert_model.py\n```\n- \u5553\u52d5\u6a21\u578b\u7684 Cloud TPU \u6a21\u578b\u670d\u52d9\u5668\u5bb9\u5668\uff1a```\ndocker run -t --rm --privileged -d \\\u00a0-p 8500:8500 -p 8501:8501 \\\u00a0--mount type=bind,source=/tmp/jax/bert_tpu,target=/models/bert \\\u00a0-e MODEL_NAME=bert \\\u00a0us-docker.pkg.dev/cloud-tpu-images/inference/tf-serving-tpu:2.13.0\n```\u6aa2\u67e5\u6a21\u578b\u670d\u52d9\u5668\u5bb9\u5668\u65e5\u8a8c\uff0c\u4e26\u78ba\u4fdd gRPC \u548c HTTP \u670d\u52d9\u5668\u5df2\u5553\u52d5\uff1a```\nCONTAINER_ID=$(docker ps | grep \"tf-serving-tpu\" | awk '{print $1}')docker logs ${CONTAINER_ID}\n```\u5982\u679c\u60a8\u770b\u5230\u4ee5\u4ee5\u4e0b\u4fe1\u606f\u7d50\u5c3e\u7684\u65e5\u8a8c\uff0c\u5247\u8868\u793a\u670d\u52d9\u5668\u5df2\u6e96\u5099\u597d\u8655\u7406\u8acb\u6c42\u3002\u9019\u500b\u904e\u7a0b\u5927\u7d04\u9700\u8981 30 \u79d2\u3002```\n2023-04-08 00:43:10.481682: I tensorflow_serving/model_servers/server.cc:409] Running gRPC ModelServer at 0.0.0.0:8500 ...[warn] getaddrinfo: address family for nodename not supported2023-04-08 00:43:10.520578: I tensorflow_serving/model_servers/server.cc:430] Exporting HTTP/REST API at:localhost:8501 ...[evhttp_server.cc : 245] NET_LOG: Entering the event loop ...\n```\n- \u5411\u6a21\u578b\u670d\u52d9\u5668\u767c\u9001\u8acb\u6c42\u3002```\npython3 bert_request.py\n```\u8f38\u51fa\u5c07\u5982\u4e0b\u6240\u793a\uff1a```\nFor input \"The capital of France is [MASK].\", the result is \". the capital of france is paris..\"For input \"Hello my name [MASK] Jhon, how can I [MASK] you?\", the result is \". hello my name is jhon, how can i help you?.\"\n```\n- \u6e05\u7406\u3002\u5728\u904b\u884c\u5176\u4ed6\u6f14\u793a\u4e4b\u524d\uff0c\u8acb\u52d9\u5fc5\u6e05\u7406 Docker \u5bb9\u5668\u3002```\nCONTAINER_ID=$(docker ps | grep \"tf-serving-tpu\" | awk '{print $1}')docker stop ${CONTAINER_ID}\n```\u6e05\u7406\u6a21\u578b\u5de5\u4ef6\uff1a```\nsudo rm -rf /tmp/jax/\n```\n### \u904b\u884c JAX Stable Diffusion E2E Serving \u6f14\u793a\n[\u9810\u8a13\u7df4\u7684 Stable Diffusion \u6a21\u578b](https://huggingface.co/CompVis/stable-diffusion-v1-4/tree/bf16) \u4f86\u81ea Hugging Face\u3002\n- \u5f9e Flax Stable Diffusion \u6a21\u578b\u4e2d\u5c0e\u51fa\u8207 TPU \u517c\u5bb9\u7684 TF2 \u6a21\u578b\uff1a **\u6ce8\u610f** \uff1a\u5c0e\u51fa\u904e\u7a0b\u5927\u7d04\u9700\u8981 3 \u5206\u9418\u3002```\ncd demo/jax/stable_diffusion\n``````\npython3 export_stable_diffusion_model.py\n```\n- \u5553\u52d5\u6a21\u578b\u7684 Cloud TPU \u6a21\u578b\u670d\u52d9\u5668\u5bb9\u5668\uff1a```\ndocker run -t --rm --privileged -d \\\u00a0-p 8500:8500 -p 8501:8501 \\\u00a0--mount type=bind,source=/tmp/jax/stable_diffusion_tpu,target=/models/stable_diffusion \\\u00a0-e MODEL_NAME=stable_diffusion \\\u00a0us-docker.pkg.dev/cloud-tpu-images/inference/tf-serving-tpu:2.13.0\n```\u6aa2\u67e5\u6a21\u578b\u670d\u52d9\u5668\u5bb9\u5668\u65e5\u8a8c\uff0c\u78ba\u4fdd gRPC \u548c HTTP \u670d\u52d9\u5668\u5df2\u5553\u52d5\uff1a```\nCONTAINER_ID=$(docker ps | grep \"tf-serving-tpu\" | awk '{print $1}')docker logs ${CONTAINER_ID}\n```\u5982\u679c\u60a8\u770b\u5230\u4ee5\u4ee5\u4e0b\u4fe1\u606f\u7d50\u5c3e\u7684\u65e5\u8a8c\uff0c\u5247\u8868\u793a\u670d\u52d9\u5668\u5df2\u6e96\u5099\u597d\u8655\u7406\u8acb\u6c42\u3002\u6b64\u904e\u7a0b\u5927\u7d04\u9700\u8981 2 \u5206\u9418\u3002```\n2023-04-08 00:43:10.481682: I tensorflow_serving/model_servers/server.cc:409] Running gRPC ModelServer at 0.0.0.0:8500 ...[warn] getaddrinfo: address family for nodename not supported2023-04-08 00:43:10.520578: I tensorflow_serving/model_servers/server.cc:430] Exporting HTTP/REST API at:localhost:8501 ...[evhttp_server.cc : 245] NET_LOG: Entering the event loop ...\n```\n- \u5411\u6a21\u578b\u670d\u52d9\u5668\u767c\u9001\u8acb\u6c42\u3002```\npython3 stable_diffusion_request.py\n```\u63d0\u793a\u7232\u201cPainting of a squirrel in New York in New York\u201d\uff0c\u8f38\u51fa\u5716\u7247\u5c07\u4f5c\u7232 `stable_diffusion_images.jpg` \u4fdd\u5b58\u5230\u7576\u524d\u76ee\u9304\u4e2d\u3002\n- \u6e05\u7406\u3002\u5728\u904b\u884c\u5176\u4ed6\u6f14\u793a\u4e4b\u524d\uff0c\u8acb\u52d9\u5fc5\u6e05\u7406 Docker \u5bb9\u5668\u3002```\nCONTAINER_ID=$(docker ps | grep \"tf-serving-tpu\" | awk '{print $1}')docker stop ${CONTAINER_ID}\n```\u6e05\u7406\u6a21\u578b\u5de5\u4ef6```\nsudo rm -rf /tmp/jax/\n``` **\u6ce8\u610f** \uff1a\u9019\u53ea\u662f\u53c3\u8003\u793a\u4f8b\uff0c\u4e26\u975e\u53ef\u7528\u65bc\u57fa\u6e96\u5316\u5206\u6790\u6216\u751f\u7522\u4f7f\u7528\u5834\u666f\u7684\u6027\u80fd\u512a\u5316\u7248\u6a21\u578b\u3002\n### Cloud TPU \u6a21\u578b\u63a8\u65b7\u548c\u670d\u52d9\n\u4ee5\u4e0b\u90e8\u5206\u4ecb\u7d39\u4e86 Cloud TPU \u6a21\u578b\u63a8\u65b7\u7684\u5de5\u4f5c\u6d41\u3002\n- \u4f7f\u7528\u63a8\u65b7\u8f49\u63db\u5668\u8f49\u63db\u6a21\u578b\n- \u4f7f\u7528 Cloud TPU Serving \u4f86\u904b\u884c\u6a21\u578b\n### \u63a8\u65b7\u8f49\u63db\u5668\nCloud TPU \u63a8\u65b7\u8f49\u63db\u5668\u53ef\u6e96\u5099\u548c\u512a\u5316\u5f9e TensorFlow \u6216 JAX \u5c0e\u51fa\u7684\u6a21\u578b\u4ee5\u9032\u884c TPU \u63a8\u65b7\u3002\u8a72\u8f49\u63db\u5668\u5728\u672c\u5730 shell \u6216 TPU \u865b\u64ec\u6a5f shell \u4e2d\u904b\u884c\u3002\u5efa\u8b70\u4f7f\u7528 TPU \u865b\u64ec\u6a5f shell\uff0c\u56e0\u7232\u5b83\u9810\u5b89\u88dd\u4e86\u8f49\u63db\u5668\u6240\u9700\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u63a8\u65b7\u8f49\u63db\u5668\uff0c\u8acb\u53c3\u95b1 [\u63a8\u65b7\u8f49\u63db\u5668\u7528\u6236\u6307\u5357](https://cloud.google.com/tpu/docs/v5e-inference-converter?hl=zh-cn) \u3002\n### \u524d\u63d0\u689d\u4ef6\n- \u6a21\u578b\u5fc5\u9808\u4ee5 [SavedModel](https://www.tensorflow.org/guide/saved_model?hl=zh-cn) \u683c\u5f0f\u5f9e TensorFlow \u6216 JAX \u4e2d\u5c0e\u51fa\u3002\n- \u6a21\u578b\u5fc5\u9808\u5177\u6709 TPU \u51fd\u6578\u7684\u51fd\u6578\u5225\u540d\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u57f7\u884c\u6b64\u64cd\u4f5c\uff0c\u8acb\u53c3\u95b1 [\u63a8\u65b7\u8f49\u63db\u5668\u7528\u6236\u6307\u5357](https://cloud.google.com/tpu/docs/v5e-inference-converter?hl=zh-cn) \u4e2d\u7684\u4ee3\u78bc\u793a\u4f8b\u3002\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528 `tpu_func` \u4f5c\u7232 TPU \u51fd\u6578\u5225\u540d\u3002\n- \u78ba\u4fdd\u60a8\u7684\u6a5f\u5668 CPU \u652f\u6301\u9ad8\u7d1a\u77e2\u91cf\u64f4\u5c55 (AVX) \u6307\u4ee4\uff0c\u56e0\u7232 TensorFlow \u5eab\uff08Cloud TPU \u63a8\u65b7\u8f49\u63db\u5668\u7684\u4f9d\u8cf4\u9805\uff09\u6703\u88ab\u7de8\u8b6f\u7232\u4f7f\u7528 AVX \u6307\u4ee4\u3002 [\u5927\u591a\u6578 CPU](https://en.wikipedia.org/wiki/Advanced_Vector_Extensions#CPUs_with_AVX) \u90fd\u652f\u6301 AVX\u3002- \u60a8\u53ef\u4ee5\u904b\u884c`lscpu | grep avx`\u4f86\u6aa2\u67e5\u7cfb\u7d71\u662f\u5426\u652f\u6301 AVX \u6307\u4ee4\u96c6\u3002\n### \u958b\u59cb\u4f7f\u7528\n- \u8a2d\u7f6e TPU \u865b\u64ec\u6a5f\u74b0\u5883\u3002\u6839\u64da\u60a8\u4f7f\u7528\u7684 shell\uff0c\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u8a2d\u7f6e\u74b0\u5883\uff1a\n- \u5728 TPU \u865b\u64ec\u6a5f shell \u4e2d\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4ee5\u5141\u8a31\u975e\u6839 Docker \u4f7f\u7528\uff1a\n```\nsudo usermod -a -G docker ${USER}newgrp docker\n```- \u521d\u59cb\u5316 Docker \u6191\u64da\u5e6b\u52a9\u7a0b\u5e8f\uff1a\n```\ngcloud auth configure-docker \\\u00a0 us-docker.pkg.dev\n```\n\u5728\u672c\u5730 shell \u4e2d\uff0c\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u8a2d\u7f6e\u74b0\u5883\uff1a- \u5b89\u88dd [Cloud SDK](https://cloud.google.com/sdk/install?hl=zh-cn) \uff0c\u5176\u4e2d\u5305\u542b `gcloud` \u547d\u4ee4\u884c\u5de5\u5177\u3002\n- \u5b89\u88dd [Docker](https://docs.docker.com/engine/install/) \uff1a\n- \u5141\u8a31\u4f7f\u7528\u975e\u6839 Docker \uff1a```\nsudo usermod -a -G docker ${USER}newgrp docker\n```\n- \u767b\u9304\u60a8\u7684\u74b0\u5883\uff1a```\ngcloud auth login\n```\n- \u521d\u59cb\u5316 Docker \u6191\u64da\u5e6b\u52a9\u7a0b\u5e8f\uff1a```\ngcloud auth configure-docker \\us-docker.pkg.dev\n```- \u62c9\u53d6\u63a8\u65b7\u8f49\u63db\u5668 Docker \u6620\u50cf\uff1a```\n\u00a0 CONVERTER_IMAGE=us-docker.pkg.dev/cloud-tpu-images/inference/tpu-inference-converter-cli:2.13.0\u00a0 docker pull ${CONVERTER_IMAGE}\u00a0 \n```\n### \u8f49\u63db\u5668\u5716\u7247\n\u5716\u7247\u7528\u65bc\u9032\u884c\u4e00\u6b21\u6027\u6a21\u578b\u8f49\u63db\u3002\u8a2d\u7f6e\u6a21\u578b\u8def\u5f91\u4e26\u6839\u64da\u60a8\u7684\u9700\u6c42\u8abf\u6574 [\u8f49\u63db\u5668\u9078\u9805](https://cloud.google.com/tpu/docs/v5e-inference-converter?hl=zh-cn#converter-options) \u3002 [\u63a8\u65b7\u8f49\u63db\u5668\u7528\u6236\u6307\u5357](https://cloud.google.com/tpu/docs/v5e-inference-converter?hl=zh-cn) \u4e2d\u7684\u201c\u7528\u6cd5\u793a\u4f8b\u201d\u90e8\u5206\u4ecb\u7d39\u4e86\u4e00\u4e9b\u5e38\u898b\u7684\u4f7f\u7528\u5834\u666f\u3002\n```\ndocker run \\--mount type=bind,source=${MODEL_PATH},target=/tmp/input,readonly \\--mount type=bind,source=${CONVERTED_MODEL_PATH},target=/tmp/output \\${CONVERTER_IMAGE} \\--input_model_dir=/tmp/input \\--output_model_dir=/tmp/output \\--converter_options_string='\u00a0 \u00a0 tpu_functions {\u00a0 \u00a0 \u00a0 function_alias: \"tpu_func\"\u00a0 \u00a0 }\u00a0 \u00a0 batch_options {\u00a0 \u00a0 \u00a0 num_batch_threads: 2\u00a0 \u00a0 \u00a0 max_batch_size: 8\u00a0 \u00a0 \u00a0 batch_timeout_micros: 5000\u00a0 \u00a0 \u00a0 allowed_batch_sizes: 2\u00a0 \u00a0 \u00a0 allowed_batch_sizes: 4\u00a0 \u00a0 \u00a0 allowed_batch_sizes: 8\u00a0 \u00a0 \u00a0 max_enqueued_batches: 10\u00a0 \u00a0 }'\n```\n\u4ee5\u4e0b\u90e8\u5206\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528 TensorFlow \u6a21\u578b\u670d\u52d9\u5668\u904b\u884c\u6b64\u6a21\u578b\u3002\n### TensorFlow Serving\n\u4ee5\u4e0b\u8aaa\u660e\u6f14\u793a\u77ad\u5982\u4f55\u5728 TPU \u865b\u64ec\u6a5f\u4e0a\u63d0\u4f9b TensorFlow \u6a21\u578b\u3002\n\u5fc5\u5099\u77e5\u8b58\uff1a\n\u5982\u679c\u60a8\u5c1a\u672a\u8a2d\u7f6e [Docker \u6191\u64da](#getting-started-serving) \uff0c\u8acb\u57f7\u884c\u6b64\u64cd\u4f5c\uff1a\n- \u7232\u60a8\u7684 TPU \u865b\u64ec\u6a5f\u4e0b\u8f09 TensorFlow Serving Docker \u6620\u50cf\u3002\u8a2d\u7f6e\u793a\u4f8b\u74b0\u5883\u8b8a\u91cf```\nexport YOUR_LOCAL_MODEL_PATH=model-pathexport MODEL_NAME=model-name# Note: this image name may change later.export IMAGE_NAME=us-docker.pkg.dev/cloud-tpu-images/inference/tf-serving-tpu:2.13.0\n```\u4e0b\u8f09 Docker \u6620\u50cf```\ndocker pull ${IMAGE_NAME}\n```\n- \u5728 TPU \u865b\u64ec\u6a5f\u4e0a\u4f7f\u7528 TensorFlow Serving Docker \u6620\u50cf\u63d0\u4f9b TensorFlow \u6a21\u578b\u3002```\n# PORT 8500 is for gRPC model server and 8501 is for HTTP/REST model server.docker run -t --rm --privileged -d \\\u00a0-p 8500:8500 -p 8501:8501 \\\u00a0--mount type=bind,source=${YOUR_LOCAL_MODEL_PATH},target=/models/${MODEL_NAME} \\\u00a0-e MODEL_NAME=${MODEL_NAME} \\\u00a0${IMAGE_NAME}\n```\n- \u6309\u7167 Serving Client API \u67e5\u8a62\u60a8\u7684\u6a21\u578b\u3002- [REST \u5ba2\u6236\u7aef API](https://www.tensorflow.org/tfx/serving/api_rest?hl=zh-cn) \n- [gRPC \u5ba2\u6236\u7aef API](https://github.com/tensorflow/serving/tree/master/tensorflow_serving/apis) \n\u524d\u63d0\u689d\u4ef6\uff1a\u78ba\u4fdd\u60a8\u5df2\u8a2d\u7f6e Docker \u6191\u64da\u4e26\u62c9\u53d6\u4e86\u63a8\u65b7\u8f49\u63db\u5668\u548c TensorFlow Serving Docker \u6620\u50cf\u3002\u5982\u679c\u6c92\u6709\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\nsudo usermod -a -G docker ${USER}newgrp dockergcloud auth configure-docker \\\u00a0 \u00a0 us-docker.pkg.devdocker pull us-docker.pkg.dev/cloud-tpu-images/inference/tpu-inference-converter-cli:2.13.0docker pull us-docker.pkg.dev/cloud-tpu-images/inference/tf-serving-tpu:2.13.0\n```\n\u4e0b\u8f09\u6f14\u793a\u4ee3\u78bc\uff1a\n```\ngsutil -m cp -r \\\u00a0 \"gs://cloud-tpu-inference-public/demo\" \\\u00a0 .\n```\n\u5b89\u88dd TensorFlow \u6f14\u793a\u4f9d\u8cf4\u9805\uff1a\n```\npip install -r ./demo/tf/requirements.txt\n```- \u5f9e Keras ResNet-50 \u6a21\u578b\u4e2d\u5c0e\u51fa\u8207 TPU \u517c\u5bb9\u7684 TF2 \u4fdd\u5b58\u6a21\u578b\u3002```\ncd demo/tf/resnet-50\n``````\npython3 export_resnet_model.py\n```\n- \u5553\u52d5\u6a21\u578b\u7684 TensorFlow \u6a21\u578b\u670d\u52d9\u5668\u5bb9\u5668\u3002```\ndocker run -t --rm --privileged -d \\\u00a0-p 8500:8500 -p 8501:8501 \\\u00a0--mount type=bind,source=/tmp/tf/resnet_tpu,target=/models/resnet \\\u00a0-e MODEL_NAME=resnet \\\u00a0us-docker.pkg.dev/cloud-tpu-images/inference/tf-serving-tpu:2.13.0\n```\u6aa2\u67e5\u6a21\u578b\u670d\u52d9\u5668\u5bb9\u5668\u65e5\u8a8c\uff0c\u78ba\u4fdd gRPC \u548c HTTP \u670d\u52d9\u5668\u5df2\u5553\u52d5\uff1a```\nCONTAINER_ID=$(docker ps | grep \"tf-serving-tpu\" | awk '{print $1}')docker logs ${CONTAINER_ID}\n```\u5982\u679c\u60a8\u770b\u5230\u4ee5\u4ee5\u4e0b\u4fe1\u606f\u7d50\u5c3e\u7684\u65e5\u8a8c\uff0c\u5247\u8868\u793a\u670d\u52d9\u5668\u5df2\u6e96\u5099\u597d\u8655\u7406\u8acb\u6c42\u3002\u9019\u500b\u904e\u7a0b\u5927\u7d04\u9700\u8981 30 \u79d2\u3002```\n2023-04-08 00:43:10.481682: I tensorflow_serving/model_servers/server.cc:409] Running gRPC ModelServer at 0.0.0.0:8500 ...[warn] getaddrinfo: address family for nodename not supported2023-04-08 00:43:10.520578: I tensorflow_serving/model_servers/server.cc:430] Exporting HTTP/REST API at:localhost:8501 ...[evhttp_server.cc : 245] NET_LOG: Entering the event loop ...\n```\n- \u5411\u6a21\u578b\u670d\u52d9\u5668\u767c\u9001\u8acb\u6c42\u3002\u8acb\u6c42\u5716\u7247\u662f\u4f86\u81ea https://i.imgur.com/j9xCCzn.jpeg \u7684\u9999\u8549\u3002```\npython3 resnet_request.py\n```\u8f38\u51fa\u5c07\u5982\u4e0b\u6240\u793a\uff1a```\nPredict result: [[('n07753592', 'banana', 0.94921875), ('n03532672', 'hook', 0.022338867), ('n07749582', 'lemon', 0.005126953)]]\n```\n- \u6e05\u7406\u3002\u5728\u904b\u884c\u5176\u4ed6\u6f14\u793a\u4e4b\u524d\uff0c\u8acb\u52d9\u5fc5\u6e05\u7406 Docker \u5bb9\u5668\u3002```\nCONTAINER_ID=$(docker ps | grep \"tf-serving-tpu\" | awk '{print $1}')docker stop ${CONTAINER_ID}\n```\u6e05\u7406\u6a21\u578b\u5de5\u4ef6\uff1a```\nsudo rm -rf /tmp/tf/\n```## PyTorch \u6a21\u578b\u63a8\u65b7\u548c\u670d\u52d9\n\u4ee5\u4e0b\u90e8\u5206\u4ecb\u7d39\u4e86 PyTorch \u6a21\u578b\u63a8\u65b7\u7684\u5de5\u4f5c\u6d41\uff1a\n- \u7de8\u5beb Python \u6a21\u578b\u8655\u7406\u7a0b\u5e8f\uff0c\u4ee5\u4f7f\u7528 TorchDynamo \u548c PyTorch/XLA \u9032\u884c\u52a0\u8f09\u548c\u63a8\u65b7\n- \u4f7f\u7528 TorchModelArchiver \u5275\u5efa\u6a21\u578b\u6b78\u6a94\n- \u4f7f\u7528 TorchServe \u50b3\u9001\u6a21\u578b\n### TorchDynamo \u548c PyTorch/XLA\n[TorchDynamo](https://github.com/pytorch/torchdynamo) (Dynamo) \u662f\u4e00\u7a2e Python \u7d1a JIT \u7de8\u8b6f\u5668\uff0c\u65e8\u5728\u52a0\u5feb\u672a\u7d93\u4fee\u6539\u7684 PyTorch \u7a0b\u5e8f\u7684\u904b\u884c\u901f\u5ea6\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u500b\u4e7e\u6de8\u7684 API\uff0c\u4f9b\u7de8\u8b6f\u5668\u5f8c\u7aef\u63a5\u5165\u3002\u5b83\u6700\u5927\u7684\u529f\u80fd\u662f\u5728\u57f7\u884c\u4e4b\u524d\u52d5\u614b\u4fee\u6539 Python \u5b57\u7bc0\u78bc\u3002\u5728 PyTorch/XLA 2.0 \u7248\u672c\u4e2d\uff0c\u7232\u63a8\u65b7\u548c\u8a13\u7df4\u63d0\u4f9b\u4e86 Dynamo \u7684\u5be6\u9a57\u6027\u5f8c\u7aef\u3002\nDynamo \u5728\u8b58\u5225\u51fa\u6a21\u578b\u6a21\u5f0f\u6642\u6703\u63d0\u4f9b [Torch FX](https://pytorch.org/docs/stable/fx.html) (FX) \u5716\uff0c\u800c PyTorch/XLA \u4f7f\u7528\u5ef6\u9072\u5f35\u91cf\u65b9\u6cd5\u7de8\u8b6f FX \u5716\u4e26\u8fd4\u56de\u7de8\u8b6f\u5f8c\u7684\u51fd\u6578\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u6709\u95dc PyTorch/XLA \u7684 Synamo \u5be6\u73fe\u7684\u6280\u8853\u7d30\u7bc0\uff0c\u8acb\u53c3\u95b1\u958b\u767c\u8a0e\u8ad6\u5e16\u5b50 [Pytorch \u958b\u767c\u8a0e\u8ad6\u5e16](https://dev-discuss.pytorch.org/t/torchdynamo-update-10-integrating-with-pytorch-xla-for-inference-and-training/935) \u548c [TorchDynamo \u6587\u6a94](https://github.com/pytorch/xla/blob/r2.0/docs/dynamo.md) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1\u6b64 [\u535a\u5ba2](https://pytorch.org/blog/pytorch-2.0-xla/) \u3002\n\u4e0b\u9762\u662f\u4e00\u500b\u4f7f\u7528 `torch.compile` \u904b\u884c densenet161 \u63a8\u65b7\u7684\u5c0f\u4ee3\u78bc\u793a\u4f8b\u3002\n```\nimport torchimport torchvisionimport torch_xla.core.xla_model as xmdef eval_model(loader):\u00a0 device = xm.xla_device()\u00a0 xla_densenet161 = torchvision.models.densenet161().to(device)\u00a0 xla_densenet161.eval()\u00a0 dynamo_densenet161 = torch.compile(\u00a0 \u00a0 \u00a0 xla_densenet161, backend='torchxla_trace_once')\u00a0 for data, _ in loader:\u00a0 \u00a0 output = dynamo_densenet161(data)\n```\n### TorchServe\n\u85c9\u52a9 Cloud TPU TorchServe Docker Image\uff0c\u60a8\u53ef\u4ee5\u5728 TPU \u865b\u64ec\u6a5f\u4e0a\u4f7f\u7528 TorchServe \u63d0\u4f9b PyTorch Eager \u6a21\u5f0f\u6a21\u578b\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u63d0\u4f9b\u7684 `torchserve-tpu` Docker \u6620\u50cf\uff0c\u8a72\u6620\u50cf\u5df2\u6e96\u5099\u597d\u5728 TPU \u865b\u64ec\u6a5f\u4e0a\u63d0\u4f9b\u5df2\u6b78\u6a94\u7684 pytorch \u6a21\u578b\u3002\n\u7232 Docker \u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49\uff1a\n```\nsudo usermod -a -G docker ${USER}newgrp dockergcloud auth configure-docker \\\u00a0 \u00a0 us-docker.pkg.dev\n```\n\u5c07 Cloud TPU TorchServe Docker \u6620\u50cf\u62c9\u53d6\u5230\u60a8\u7684 TPU \u865b\u64ec\u6a5f\uff1a\n```\nCLOUD_TPU_TORCHSERVE_IMAGE_URL=us-docker.pkg.dev/cloud-tpu-images/inference/torchserve-tpu:v0.9.0-2.1docker pull ${CLOUD_TPU_TORCHSERVE_IMAGE_URL}\n```\n\u9996\u5148\uff0c\u60a8\u9700\u8981\u63d0\u4f9b\u4e00\u500b\u6a21\u578b\u8655\u7406\u7a0b\u5e8f\uff0c\u7528\u65bc\u6307\u793a TorchServe \u6a21\u578b\u670d\u52d9\u5668\u5de5\u4f5c\u5668\u52a0\u8f09\u60a8\u7684\u6a21\u578b\u3001\u8655\u7406\u8f38\u5165\u6578\u64da\u4e26\u904b\u884c\u63a8\u65b7\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 [TorchServe \u9ed8\u8a8d\u63a8\u65b7\u8655\u7406\u7a0b\u5e8f](https://pytorch.org/serve/default_handlers.html) \uff08 [\u4f86\u6e90](https://github.com/pytorch/serve/tree/master/ts/torch_handler) \uff09\uff0c\u4e5f\u53ef\u4ee5\u6309\u7167 [base_handler.py](https://github.com/pytorch/serve/blob/master/ts/torch_handler/base_handler.py) \u958b\u767c\u81ea\u5df1\u7684\u81ea\u5b9a\u7fa9\u6a21\u578b\u8655\u7406\u7a0b\u5e8f\u3002\u60a8\u53ef\u80fd\u9084\u9700\u8981\u63d0\u4f9b\u7d93\u904e\u8a13\u7df4\u7684\u6a21\u578b\u548c\u6a21\u578b\u5b9a\u7fa9\u6587\u4ef6\u3002\n**\u6ce8\u610f** \uff1a\u6240\u6709 TorchServe \u9ed8\u8a8d\u6a21\u578b\u8655\u7406\u7a0b\u5e8f\u90fd\u652f\u6301 PyTorch/XLA\n\u5728\u4e0b\u9762\u7684 Densenet 161 \u793a\u4f8b\u4e2d\uff0c\u6211\u5011\u4f7f\u7528\u4e86\u6a21\u578b\u5de5\u4ef6\u548c TorchServe \u63d0\u4f9b\u7684\u9ed8\u8a8d\u5716\u7247\u5206\u985e\u5668\u8655\u7406\u7a0b\u5e8f\uff1a\n- [model.py](https://github.com/pytorch/serve/tree/master/examples/image_classifier/densenet_161/model.py) \n- [index_to_name.json](https://github.com/pytorch/serve/tree/master/examples/image_classifier/index_to_name.json) \n- [image_classifier.py](https://github.com/pytorch/serve/tree/master/ts/torch_handler/image_classifier.py) \n\u5de5\u4f5c\u76ee\u9304\u5982\u4e0b\u6240\u793a\u3002\n```\nCWD=\"$(pwd)\"WORKDIR=\"${CWD}/densenet_161\"mkdir -p ${WORKDIR}/model-storemkdir -p ${WORKDIR}/logs\n```\n- \u5f9e TorchServe \u5716\u7247\u5206\u985e\u5668\u793a\u4f8b\u4e2d\u4e0b\u8f09\u548c\u8907\u88fd\u6a21\u578b\u5de5\u4ef6\uff1a```\ngit clone https://github.com/pytorch/serve.gitcp ${CWD}/serve/examples/image_classifier/densenet_161/model.py ${WORKDIR}cp ${CWD}/serve/examples/image_classifier/index_to_name.json ${WORKDIR}\n```\n- \u4e0b\u8f09\u6a21\u578b\u6b0a\u91cd\uff1a```\nwget https://download.pytorch.org/models/densenet161-8d451a50.pth -O densenet161-8d451a50.pthmv densenet161-8d451a50.pth ${WORKDIR}\n```\n- \u5275\u5efa TorchServe \u6a21\u578b\u914d\u7f6e\u6587\u4ef6\u4ee5\u4f7f\u7528 Dynamo \u5f8c\u7aef\uff1a```\necho 'pt2: \"torchxla_trace_once\"' >> ${WORKDIR}/model_config.yaml\n```\u60a8\u61c9\u8a72\u6703\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u6587\u4ef6\u548c\u76ee\u9304\uff1a```\n>> ls ${WORKDIR}model_config.yamlindex_to_name.jsonlogsmodel.pydensenet161-8d451a50.pthmodel-store\n```\u5982\u9700\u4f7f\u7528 Cloud TPU TorchServe \u63d0\u4f9b PyTorch \u6a21\u578b\uff0c\u60a8\u9700\u8981\u4f7f\u7528 [Torch Model Archiver](https://github.com/pytorch/serve/blob/master/model-archiver/README.md) \u5c07\u6a21\u578b\u8655\u7406\u7a0b\u5e8f\u548c\u6240\u6709\u6a21\u578b\u5de5\u4ef6\u6253\u5305\u5230\u6a21\u578b\u6b78\u6a94\u6587\u4ef6 `(*.mar)` \u4e2d\u3002\n\u4f7f\u7528 torch-model-archiver \u751f\u6210\u6a21\u578b\u6b78\u6a94\u6587\u4ef6\uff1a\n```\nMODEL_NAME=Densenet161docker run \\\u00a0 \u00a0 --privileged \u00a0\\\u00a0 \u00a0 --shm-size 16G \\\u00a0 \u00a0 --name torch-model-archiver \\\u00a0 \u00a0 -it \\\u00a0 \u00a0 -d \\\u00a0 \u00a0 --rm \\\u00a0 \u00a0 --mount type=bind,source=${WORKDIR},target=/home/model-server/ \\\u00a0 \u00a0 ${CLOUD_TPU_TORCHSERVE_IMAGE_URL} \\\u00a0 \u00a0 torch-model-archiver \\\u00a0 \u00a0 \u00a0 \u00a0 --model-name ${MODEL_NAME} \\\u00a0 \u00a0 \u00a0 \u00a0 --version 1.0 \\\u00a0 \u00a0 \u00a0 \u00a0 --model-file model.py \\\u00a0 \u00a0 \u00a0 \u00a0 --serialized-file densenet161-8d451a50.pth \\\u00a0 \u00a0 \u00a0 \u00a0 --handler image_classifier \\\u00a0 \u00a0 \u00a0 \u00a0 --export-path model-store \\\u00a0 \u00a0 \u00a0 \u00a0 --extra-files index_to_name.json \\\u00a0 \u00a0 \u00a0 \u00a0 --config-file model_config.yaml\n```\n\u60a8\u61c9\u8a72\u6703\u770b\u5230\u5728 model-store \u76ee\u9304\u4e2d\u751f\u6210\u7684\u6a21\u578b\u6b78\u6a94\u6587\u4ef6\uff1a\n```\n>> ls ${WORKDIR}/model-storeDensenet161.mar\n```\n\u73fe\u5728\u60a8\u5df2\u7372\u5f97\u6a21\u578b\u6b78\u6a94\u6587\u4ef6\uff0c\u63a5\u4e0b\u4f86\u53ef\u4ee5\u5553\u52d5 TorchServe \u6a21\u578b\u670d\u52d9\u5668\u4e26\u8655\u7406\u63a8\u65b7\u8acb\u6c42\u3002\n- \u5553\u52d5 TorchServe \u6a21\u578b\u670d\u52d9\u5668\uff1a```\ndocker run \\\u00a0 \u00a0--privileged \u00a0\\\u00a0 \u00a0--shm-size 16G \\\u00a0 \u00a0--name torchserve-tpu \\\u00a0 \u00a0-it \\\u00a0 \u00a0-d \\\u00a0 \u00a0--rm \\\u00a0 \u00a0-p 7070:7070 \\\u00a0 \u00a0-p 7071:7071 \\\u00a0 \u00a0-p 8080:8080 \\\u00a0 \u00a0-p 8081:8081 \\\u00a0 \u00a0-p 8082:8082 \\\u00a0 \u00a0-p 9001:9001 \\\u00a0 \u00a0-p 9012:9012 \\\u00a0 \u00a0--mount type=bind,source=${WORKDIR}/model-store,target=/home/model-server/model-store \\\u00a0 \u00a0--mount type=bind,source=${WORKDIR}/logs,target=/home/model-server/logs \\\u00a0 \u00a0${CLOUD_TPU_TORCHSERVE_IMAGE_URL} \\\u00a0 \u00a0torchserve \\\u00a0 \u00a0 \u00a0 \u00a0--start \\\u00a0 \u00a0 \u00a0 \u00a0--ncs \\\u00a0 \u00a0 \u00a0 \u00a0--models ${MODEL_NAME}.mar \\\u00a0 \u00a0 \u00a0 \u00a0--ts-config /home/model-server/config.properties\n```\n- \u67e5\u8a62\u6a21\u578b\u670d\u52d9\u5668\u904b\u884c\u72c0\u6cc1\uff1a```\ncurl http://localhost:8080/ping\n```\u5982\u679c\u6a21\u578b\u670d\u52d9\u5668\u5df2\u5553\u52d5\u4e26\u904b\u884c\uff0c\u60a8\u6703\u770b\u5230\uff1a```\n{\u00a0\"status\": \"Healthy\"}\n```\u5982\u9700\u67e5\u8a62\u7576\u524d\u8a3b\u518a\u6a21\u578b\u7684\u9ed8\u8a8d\u7248\u672c\uff0c\u8acb\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ncurl http://localhost:8081/models\n```\u60a8\u61c9\u8a72\u6703\u770b\u5230\u5df2\u8a3b\u518a\u7684\u6a21\u578b\uff1a```\n{\u00a0\"models\": [\u00a0 \u00a0{\u00a0 \u00a0 \u00a0\"modelName\": \"Densenet161\",\u00a0 \u00a0 \u00a0\"modelUrl\": \"Densenet161.mar\"\u00a0 \u00a0}\u00a0]}\n```\u5982\u9700\u4e0b\u8f09\u5716\u7247\u9032\u884c\u63a8\u7406\uff0c\u8acb\u4f7f\u7528\uff1a```\ncurl -O https://raw.githubusercontent.com/pytorch/serve/master/docs/images/kitten_small.jpgmv kitten_small.jpg ${WORKDIR}\n```\u5982\u9700\u5411\u6a21\u578b\u670d\u52d9\u5668\u767c\u9001\u63a8\u65b7\u8acb\u6c42\uff0c\u8acb\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ncurl http://localhost:8080/predictions/${MODEL_NAME} -T ${WORKDIR}/kitten_small.jpg\n```\u60a8\u61c9\u8a72\u6703\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u97ff\u61c9\uff1a```\n{\u00a0\"tabby\": 0.47878125309944153,\u00a0\"lynx\": 0.20393909513950348,\u00a0\"tiger_cat\": 0.16572578251361847,\u00a0\"tiger\": 0.061157409101724625,\u00a0\"Egyptian_cat\": 0.04997897148132324}\n```\n- \u6a21\u578b\u670d\u52d9\u5668\u65e5\u8a8c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8a2a\u554f\u65e5\u8a8c\uff1a```\nls ${WORKDIR}/logs/cat ${WORKDIR}/logs/model_log.log\n```\u60a8\u61c9\u8a72\u6703\u5728\u65e5\u8a8c\u4e2d\u770b\u5230\u4ee5\u4e0b\u6d88\u606f\uff1a```\n\"Compiled model with backend torchxla\\_trace\\_once\"\n```\u505c\u6b62 Docker \u5bb9\u5668\uff1a\n```\nrm -rf serverm -rf ${WORKDIR}docker stop torch-model-archiverdocker stop torchserve-tpu\n```\n## \u5927\u8a9e\u8a00\u6a21\u578b\u670d\u52d9\n[](https://github.com/google/saxml) SAX \u662f\u4e00\u7a2e\u670d\u52d9\u6846\u67b6\uff0c\u53ef\u652f\u6301\u53ef\u80fd\u9700\u8981\u591a\u500b\u4e3b\u6a5f\u4e0a\u7684 TPU \u4f86\u904b\u884c [GSPMD](https://arxiv.org/abs/2105.04663) \u7684\u5927\u578b\u6a21\u578b\uff0c\u4f8b\u5982\u57fa\u65bc PAX \u7684\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u3002 [PAX](https://github.com/google/paxml) \u662f\u57fa\u65bc JAX \u7684\u6846\u67b6\uff0c\u7528\u65bc\u8a13\u7df4\u5927\u578b\u6a21\u578b\uff0c\u53ef\u5be6\u73fe\u5b8c\u5168\u53ef\u914d\u7f6e\u7684\u9ad8\u7d1a\u5be6\u9a57\u548c\u4e26\u884c\u5316\u3002\nSAX \u96c6\u7fa3\u90e8\u5206\u4ecb\u7d39\u4e86\u5e6b\u52a9\u60a8\u77ad\u89e3 SAX \u5de5\u4f5c\u539f\u7406\u7684\u95dc\u9375\u5143\u7d20\u3002SAX \u6a21\u578b\u670d\u52d9\u90e8\u5206\u8a73\u7d30\u4ecb\u7d39\u4e86 [\u4f7f\u7528 GPTJ6B \u6a21\u578b\u7684\u55ae\u4e3b\u6a5f\u6a21\u578b\u670d\u52d9\u793a\u4f8b](#single-host-example) \u3002SAX \u9084\u5728 Cloud TPU \u4e0a\u63d0\u4f9b\u591a\u4e3b\u6a5f\u670d\u52d9\uff0c\u7528\u6236\u53ef\u4ee5\u5728\u66f4\u5927\u7684 TPU \u62d3\u64b2\u4e0a\u904b\u884c\u6a21\u578b\uff0c\u4ee5\u4fbf\u9032\u884c\u5be6\u9a57\u6027\u591a\u4e3b\u6a5f\u670d\u52d9\u3002 [\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528 175B \u6e2c\u8a66\u6a21\u578b](#multi-host-preview) \u5c55\u793a\u77ad\u5982\u4f55\u4f7f\u7528\u6b64\u8a2d\u7f6e\u9032\u884c\u5be6\u9a57\u3002\n### SAX \u96c6\u7fa3\uff08SAX \u55ae\u5143\uff09\nSAX \u7ba1\u7406\u670d\u52d9\u5668\u548c SAX \u6a21\u578b\u670d\u52d9\u5668\u662f\u904b\u884c SAX \u96c6\u7fa3\u7684\u5169\u500b\u57fa\u672c\u7d44\u4ef6\u3002\nSAX \u7ba1\u7406\u670d\u52d9\u5668\u76e3\u63a7\u548c\u5354\u8abf SAX \u96c6\u7fa3\u4e2d\u7684\u6240\u6709 SAX \u6a21\u578b\u670d\u52d9\u5668\u3002\u5728 SAX \u96c6\u7fa3\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5553\u52d5\u591a\u500b SAX \u7ba1\u7406\u670d\u52d9\u5668\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u500b SAX \u7ba1\u7406\u670d\u52d9\u5668\u901a\u904e\u9818\u5c0e\u8005\u9078\u8209\u7232\u6d3b\u8e8d\u72c0\u614b\uff0c\u5176\u4ed6\u670d\u52d9\u5668\u662f\u5099\u7528\u670d\u52d9\u5668\u3002\u7576\u6d3b\u8e8d\u7ba1\u7406\u670d\u52d9\u5668\u767c\u751f\u6545\u969c\u6642\uff0c\u5099\u7528\u7ba1\u7406\u670d\u52d9\u5668\u5c07\u8b8a\u7232\u6d3b\u8e8d\u72c0\u614b\u3002\u6d3b\u8e8d\u7684 SAX \u7ba1\u7406\u670d\u52d9\u5668\u5c07\u6a21\u578b\u526f\u672c\u548c\u63a8\u65b7\u8acb\u6c42\u5206\u914d\u7d66\u53ef\u7528\u7684 SAX \u6a21\u578b\u670d\u52d9\u5668\u3002\n\u6bcf\u500b SAX \u96c6\u7fa3\u90fd\u9700\u8981\u4e00\u500b Cloud Storage \u5b58\u5132\u6876\uff0c\u624d\u80fd\u5c07 SAX \u7ba1\u7406\u670d\u52d9\u5668\u548c SAX \u6a21\u578b\u670d\u52d9\u5668\u7684\u914d\u7f6e\u548c\u4f4d\u7f6e\u5b58\u5132\u5728 SAX \u96c6\u7fa3\u4e2d\u3002\nSAX \u6a21\u578b\u670d\u52d9\u5668\u52a0\u8f09\u6a21\u578b\u6aa2\u67e5\u9ede\uff0c\u4e26\u4f7f\u7528 [GSPMD](https://arxiv.org/abs/2105.04663) \u9032\u884c\u63a8\u65b7\u3002SAX \u6a21\u578b\u670d\u52d9\u5668\u5728\u55ae\u500b TPU \u865b\u64ec\u6a5f\u5de5\u4f5c\u5668\u4e0a\u904b\u884c\u3002\u55ae\u4e3b\u6a5f TPU \u6a21\u578b\u670d\u52d9\u9700\u8981\u5728\u55ae\u4e3b\u6a5f TPU \u865b\u64ec\u6a5f\u4e0a\u8a2d\u7f6e\u4e00\u500b SAX \u6a21\u578b\u670d\u52d9\u5668\u3002\u591a\u4e3b\u6a5f TPU \u6a21\u578b\u670d\u52d9\u9700\u8981\u5728\u591a\u4e3b\u6a5f TPU \u5207\u7247\u4e0a\u914d\u7f6e\u4e00\u7d44 SAX \u6a21\u578b\u670d\u52d9\u5668\u3002\n### SAX \u6a21\u578b\u670d\u52d9\n\u4ee5\u4e0b\u90e8\u5206\u4ecb\u7d39\u4e86\u4f7f\u7528 SAX \u63d0\u4f9b\u8a9e\u8a00\u6a21\u578b\u7684\u5de5\u4f5c\u6d41\u3002\u5b83\u5728\u55ae\u4e3b\u6a5f\u6a21\u578b\u6295\u653e\u4e2d\u4f7f\u7528 GPT-J 6B \u6a21\u578b\uff0c\u5728\u591a\u4e3b\u6a5f\u6a21\u578b\u6295\u653e\u4e2d\u4f7f\u7528 175B \u6e2c\u8a66\u6a21\u578b\u3002\n\u5728\u958b\u59cb\u4e4b\u524d\uff0c\u8acb\u5728\u60a8\u7684 TPU \u865b\u64ec\u6a5f\u4e0a\u5b89\u88dd Cloud TPU SAX Docker \u6620\u50cf\uff1a\n```\nsudo usermod -a -G docker ${USER}newgrp dockergcloud auth configure-docker us-docker.pkg.devSAX_ADMIN_SERVER_IMAGE_NAME=\"us-docker.pkg.dev/cloud-tpu-images/inference/sax-admin-server\"SAX_MODEL_SERVER_IMAGE_NAME=\"us-docker.pkg.dev/cloud-tpu-images/inference/sax-model-server\"SAX_UTIL_IMAGE_NAME=\"us-docker.pkg.dev/cloud-tpu-images/inference/sax-util\"SAX_VERSION=v1.1.0export SAX_ADMIN_SERVER_IMAGE_URL=${SAX_ADMIN_SERVER_IMAGE_NAME}:${SAX_VERSION}export SAX_MODEL_SERVER_IMAGE_URL=${SAX_MODEL_SERVER_IMAGE_NAME}:${SAX_VERSION}export SAX_UTIL_IMAGE_URL=\"${SAX_UTIL_IMAGE_NAME}:${SAX_VERSION}\"docker pull ${SAX_ADMIN_SERVER_IMAGE_URL}docker pull ${SAX_MODEL_SERVER_IMAGE_URL}docker pull ${SAX_UTIL_IMAGE_URL}\n```\n\u8a2d\u7f6e\u7a0d\u5f8c\u8981\u4f7f\u7528\u7684\u4e00\u4e9b\u5176\u4ed6\u8b8a\u91cf\uff1a\n```\nexport SAX_ADMIN_SERVER_DOCKER_NAME=\"sax-admin-server\"export SAX_MODEL_SERVER_DOCKER_NAME=\"sax-model-server\"export SAX_CELL=\"/sax/test\"\n```\n\u55ae\u4e3b\u6a5f\u6a21\u578b\u670d\u52d9\u9069\u7528\u65bc\u55ae\u4e3b\u6a5f TPU \u5207\u7247\uff0c\u5373 v5litepod-1\u3001v5litepod-4 \u548c v5litepod-8\u3002\n- \u5275\u5efa SAX \u96c6\u7fa3- \u7232 SAX \u96c6\u7fa3\u5275\u5efa Cloud Storage \u5b58\u5132\u6876\uff1a```\nSAX_ADMIN_STORAGE_BUCKET=${your_admin_storage_bucket}gcloud storage buckets create gs://${SAX_ADMIN_STORAGE_BUCKET} \\--project=${PROJECT_ID}\n```\u60a8\u53ef\u80fd\u9700\u8981\u53e6\u4e00\u500b Cloud Storage \u5b58\u5132\u6876\u4f86\u5b58\u5132\u6aa2\u67e5\u9ede\u3002```\nSAX_DATA_STORAGE_BUCKET=${your_data_storage_bucket}\n```\n- \u5728\u7d42\u7aef\u4e2d\u4f7f\u7528 SSH \u9023\u63a5\u5230\u60a8\u7684 TPU \u865b\u64ec\u6a5f\uff0c\u4ee5\u5553\u52d5 SAX \u7ba1\u7406\u670d\u52d9\u5668\uff1a **\u6ce8\u610f** \uff1a\u60a8\u9084\u53ef\u4ee5\u901a\u904e\u672c\u5730 shell\uff08\u800c\u4e0d\u662f TPU \u865b\u64ec\u6a5f\uff09\u5553\u52d5 SAX \u7ba1\u7406\u670d\u52d9\u5668\u3002```\ndocker run \\--name ${SAX_ADMIN_SERVER_DOCKER_NAME} \\-it \\-d \\--rm \\--network host \\--env GSBUCKET=${SAX_ADMIN_STORAGE_BUCKET} \\${SAX_ADMIN_SERVER_IMAGE_URL}\n```\u60a8\u53ef\u4ee5\u901a\u904e\u4ee5\u4e0b\u65b9\u5f0f\u67e5\u770b Docker \u65e5\u8a8c\uff1a```\ndocker logs -f ${SAX_ADMIN_SERVER_DOCKER_NAME}\n```\u65e5\u8a8c\u4e2d\u7684\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nI0829 01:22:31.184198 \u00a0 \u00a0 \u00a0 7 config.go:111] Creating config fs_root: \"gs://test_sax_admin/sax-fs-root\"I0829 01:22:31.347883 \u00a0 \u00a0 \u00a0 7 config.go:115] Created config fs_root: \"gs://test_sax_admin/sax-fs-root\"I0829 01:22:31.360837 \u00a0 \u00a0 \u00a024 admin_server.go:44] Starting the serverI0829 01:22:31.361420 \u00a0 \u00a0 \u00a024 ipaddr.go:39] Skipping non-global IP address 127.0.0.1/8.I0829 01:22:31.361455 \u00a0 \u00a0 \u00a024 ipaddr.go:39] Skipping non-global IP address ::1/128.I0829 01:22:31.361462 \u00a0 \u00a0 \u00a024 ipaddr.go:39] Skipping non-global IP address fe80::4001:aff:fe8e:fc8/64.I0829 01:22:31.361469 \u00a0 \u00a0 \u00a024 ipaddr.go:39] Skipping non-global IP address fe80::42:bfff:fef9:1bd3/64.I0829 01:22:31.361474 \u00a0 \u00a0 \u00a024 ipaddr.go:39] Skipping non-global IP address fe80::20fb:c3ff:fe5b:baac/64.I0829 01:22:31.361482 \u00a0 \u00a0 \u00a024 ipaddr.go:56] IPNet address 10.142.15.200I0829 01:22:31.361488 \u00a0 \u00a0 \u00a024 ipaddr.go:56] IPNet address 172.17.0.1I0829 01:22:31.456952 \u00a0 \u00a0 \u00a024 admin.go:305] Loaded config: fs_root: \"gs://test_sax_admin/sax-fs-root\"I0829 01:22:31.609323 \u00a0 \u00a0 \u00a024 addr.go:105] SetAddr /gcs/test_sax_admin/sax-root/sax/test/location.proto \"10.142.15.200:10000\"I0829 01:22:31.656021 \u00a0 \u00a0 \u00a024 admin.go:325] Updated config: fs_root: \"gs://test_sax_admin/sax-fs-root\"I0829 01:22:31.773245 \u00a0 \u00a0 \u00a024 mgr.go:781] Loaded manager stateI0829 01:22:31.773260 \u00a0 \u00a0 \u00a024 mgr.go:784] Refreshing manager state every 10sI0829 01:22:31.773285 \u00a0 \u00a0 \u00a024 admin.go:350] Starting the server on port 10000I0829 01:22:31.773292 \u00a0 \u00a0 \u00a024 cloud.go:506] Starting the HTTP server on port 8080\n```\n- \u5c07\u55ae\u4e3b\u6a5f SAX \u6a21\u578b\u670d\u52d9\u5668\u5553\u52d5\u5230 SAX \u96c6\u7fa3\u4e2d\uff1a\u6b64\u6642\uff0cSAX \u96c6\u7fa3\u50c5\u5305\u542b SAX \u7ba1\u7406\u670d\u52d9\u5668\u3002\u60a8\u53ef\u4ee5\u5728\u7b2c\u4e8c\u500b\u7d42\u7aef\u4e2d\u901a\u904e SSH \u9023\u63a5\u5230 TPU \u865b\u64ec\u6a5f\uff0c\u4ee5\u4fbf\u5728 SAX \u96c6\u7fa3\u4e2d\u5553\u52d5 SAX \u6a21\u578b\u670d\u52d9\u5668\uff1a```\ndocker run \\\u00a0 \u00a0 --privileged \u00a0\\\u00a0 \u00a0 -it \\\u00a0 \u00a0 -d \\\u00a0 \u00a0 --rm \\\u00a0 \u00a0 --network host \\\u00a0 \u00a0 --name ${SAX_MODEL_SERVER_DOCKER_NAME} \\\u00a0 \u00a0 --env SAX_ROOT=gs://${SAX_ADMIN_STORAGE_BUCKET}/sax-root \\\u00a0 \u00a0 ${SAX_MODEL_SERVER_IMAGE_URL} \\\u00a0 \u00a0 \u00a0 \u00a0--sax_cell=${SAX_CELL} \\\u00a0 \u00a0 \u00a0 \u00a0--port=10001 \\\u00a0 \u00a0 \u00a0 \u00a0--platform_chip=tpuv4 \\\u00a0 \u00a0 \u00a0 \u00a0--platform_topology=1x1\n```\u60a8\u53ef\u4ee5\u901a\u904e\u4ee5\u4e0b\u65b9\u5f0f\u67e5\u770b Docker \u65e5\u8a8c\uff1a```\ndocker logs -f ${SAX_MODEL_SERVER_DOCKER_NAME}\n```\n- \u8f49\u63db\u6a21\u578b\u6aa2\u67e5\u9ede\uff1a\u60a8\u9700\u8981\u5b89\u88dd PyTorch \u548c Transformer\uff0c\u624d\u80fd\u5f9e EleutherAI \u4e0b\u8f09 GPT-J \u6aa2\u67e5\u9ede\uff1a```\npip3 install acceleratepip3 install torchpip3 install transformers\n```\u5982\u9700\u5c07\u8a72\u6aa2\u67e5\u9ede\u8f49\u63db\u7232 SAX \u6aa2\u67e5\u9ede\uff0c\u60a8\u9700\u8981\u5b89\u88dd `paxml` \uff1a```\npip3 install paxml==1.1.0\n```\u7136\u5f8c\uff0c\u8a2d\u7f6e\u4ee5\u4e0b\u8b8a\u91cf\uff1a```\n>>PT_CHECKPOINT_PATH=./fine_tuned_pt_checkpoint\n```\u5c07\u7d93\u904e\u5fae\u8abf\u7684 PyTorch \u6aa2\u67e5\u9ede\u4e0b\u8f09\u5230 `${PT_CHECKPOINT_PATH}` \uff0c\u9075\u5faa `https://github.com/mlcommons/inference/blob/master/language/gpt-j/README.md#download-gpt-j-model` \u4e26\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\nls ${PT_CHECKPOINT_PATH}\n```\u5176\u4e2d\u61c9\u6703\u5217\u51fa\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nadded_tokens.json generation_config.json\npytorch_model.bin.index.json\npytorch_model-00001-of-00003.bin\npytorch_model-00002-of-00003.bin\npytorch_model-00003-of-00003.bin\nspecial_tokens_map.json\ntrainer_state.json\nconfig.json\nmerges.txt\ntokenizer_config.json\nvocab.json\n```\u4ee5\u4e0b [\u8173\u672c](https://github.com/google/saxml/blob/main/saxml/tools/convert_gptj_ckpt.py) \u6703\u5c07 GPT-J \u6aa2\u67e5\u9ede\u8f49\u63db\u7232 SAX \u6aa2\u67e5\u9ede\uff0c\u6211\u5011\u5c07 `${PT_CHECKPOINT_PATH}` \u7528\u4f5c\u57fa\u672c\u6a21\u578b\u6aa2\u67e5\u9ede\uff0c\u8f49\u63db\u5f8c\uff0c\u60a8\u5c07\u5728 `${CONVERTED_CHECKPOINT_PATH}` \u4e2d\u627e\u5230\u8f49\u63db\u5f8c\u7684\u6aa2\u67e5\u9ede\uff1a```\nwget https://raw.githubusercontent.com/google/saxml/main/saxml/tools/convert_gptj_ckpt.pypython3 -m convert_gptj_ckpt --base ${PT_CHECKPOINT_PATH} --pax ${CONVERTED_CHECKPOINT_PATH}\n```\u9019\u61c9\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\u7684\u8f38\u51fa\uff1a```\ntransformer.wte.weight (50401, 4096)\ntransformer.h.0.ln_1.weight (4096,)\ntransformer.h.0.ln_1.bias (4096,)\ntransformer.h.0.attn.k_proj.weight (4096, 4096)\n.\n.\n.\ntransformer.ln_f.weight (4096,)\ntransformer.ln_f.bias (4096,)\nlm_head.weight (50401, 4096)\nlm_head.bias (50401,)\nSaving the pax model to .\ndone\n```\u8f49\u63db\u5b8c\u6210\u5f8c\uff0c\u8f38\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a```\nls checkpoint_00000000/\n```\u5176\u4e2d\u61c9\u6703\u5217\u51fa\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nmetadate\nstate\n```\u60a8\u9700\u8981\u5275\u5efa\u4e00\u500b `commit_success` \u6587\u4ef6\uff0c\u4e26\u5c07\u5176\u7f6e\u65bc\u5b50\u76ee\u9304\u4e2d\uff1a```\nCHECKPOINT_PATH=gs://${SAX_DATA_STORAGE_BUCKET}/path/to/checkpoint_00000000gsutil -m cp -r checkpoint_00000000 ${CHECKPOINT_PATH}touch commit_success.txtgsutil cp commit_success.txt ${CHECKPOINT_PATH}/gsutil cp commit_success.txt ${CHECKPOINT_PATH}/metadata/gsutil cp commit_success.txt ${CHECKPOINT_PATH}/state/\n```\n- \u5c07\u6a21\u578b\u767c\u4f48\u5230 SAX \u96c6\u7fa3\u73fe\u5728\uff0c\u60a8\u53ef\u4ee5\u767c\u4f48\u5177\u6709\u5728 [\u4e0a\u4e00\u6b65](#convert-checkpoint) \u4e2d\u8f49\u63db\u7684\u6aa2\u67e5\u9ede\u7684 GPT-J\u3002```\nMODEL_NAME=gptj4bf16bs32MODEL_CONFIG_PATH=saxml.server.pax.lm.params.gptj.GPTJ4BF16BS32REPLICA=1\n```\u5982\u9700\u767c\u4f48 GPT-J\uff08\u4ee5\u53ca\u4e4b\u5f8c\u7684\u6b65\u9a5f\uff09\uff0c\u8acb\u5728\u7b2c\u4e09\u500b\u7d42\u7aef\u4e2d\u4f7f\u7528 SSH \u9023\u63a5\u5230\u60a8\u7684 TPU \u865b\u64ec\u6a5f\uff1a```\ndocker run \\\u00a0${SAX_UTIL_IMAGE_URL} \\\u00a0 \u00a0--sax_root=gs://${SAX_ADMIN_STORAGE_BUCKET}/sax-root \\\u00a0 \u00a0publish \\\u00a0 \u00a0 \u00a0${SAX_CELL}/${MODEL_NAME} \\\u00a0 \u00a0 \u00a0${MODEL_CONFIG_PATH} \\\u00a0 \u00a0 \u00a0${CHECKPOINT_PATH} \\\u00a0 \u00a0 \u00a0${REPLICA}\n```\u60a8\u5c07\u770b\u5230\u6a21\u578b\u670d\u52d9\u5668 Docker \u65e5\u8a8c\u4e2d\u6709\u5927\u91cf\u6d3b\u52d5\uff0c\u76f4\u5230\u60a8\u770b\u5230\u5982\u4e0b\u5167\u5bb9\u8868\u793a\u6a21\u578b\u5df2\u6210\u529f\u52a0\u8f09\uff1a```\nI0829 01:33:49.287459 139865140229696 servable_model.py:697] loading completed.\n```\u5982\u9700\u5217\u51fa\u5df2\u767c\u4f48\u7684\u6a21\u578b\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a```\ndocker run \\\u00a0${SAX_UTIL_IMAGE_URL} \\\u00a0 \u00a0--sax_root=gs://${SAX_ADMIN_STORAGE_BUCKET}/sax-root \\\u00a0 \u00a0list ${SAX_CELL}\n```\u60a8\u6703\u770b\u5230\uff1a```\n+---+---------------+| # | \u00a0 MODEL ID \u00a0 \u00a0|+---+---------------+| 0 | gptj4bf16bs32 |+---+---------------+\n```\u5982\u679c\u8981\u4f7f\u7528\u4ee4\u724c\u5316\u8f38\u5165\u4e26\u751f\u6210\u4ee4\u724c\u5316\u8f38\u51fa\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u4e0a\u9762\u7684\u6a21\u578b\u914d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u78bc\u9032\u884c\u767c\u4f48\uff1a```\nMODEL_NAME=gptj4tokenizedbf16bs32MODEL_CONFIG_PATH=saxml.server.pax.lm.params.gptj.GPTJ4TokenizedBF16BS32REPLICA=1\n```\n- \u751f\u6210\u63a8\u65b7\u7d50\u679c\u5982\u9700\u4f7f\u7528 `GPTJ4BF16BS32` \u751f\u6210\u5831\u9053\u7684\u6458\u8981\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a```\nTEXT = (\"Below is an instruction that describes a task, paired withan input that provides further context. Write a response thatappropriately completes the request.\\n\\n\n### Instruction\\:\\nSummarize thefollowing news article\\:\\n\\n\n### Input\\:\\nMarch 10, 2015 . We're trulyinternational in scope on Tuesday. We're visiting Italy, Russia, theUnited Arab Emirates, and the Himalayan Mountains. Find out who'sattempting to circumnavigate the globe in a plane powered partially by thesun, and explore the mysterious appearance of craters in northern Asia.You'll also get a view of Mount Everest that was previously reserved forclimbers. On this page you will find today's show Transcript and a placefor you to request to be on the CNN Student News Roll Call. TRANSCRIPT .Click here to access the transcript of today's CNN Student News program.Please note that there may be a delay between the time when the video isavailable and when the transcript is published. CNN Student News iscreated by a team of journalists who consider the Common Core StateStandards, national standards in different subject areas, and statestandards when producing the show. ROLL CALL . For a chance to bementioned on the next CNN Student News, comment on the bottom of this pagewith your school name, mascot, city and state. We will be selectingschools from the comments of the previous show. You must be a teacher or astudent age 13 or older to request a mention on the CNN Student News RollCall! Thank you for using CNN Student News!\\n\\n\n### Response\\:\")\n``````\ndocker run \\\u00a0${SAX_UTIL_IMAGE_URL} \\\u00a0 \u00a0--sax_root=gs://${SAX_ADMIN_STORAGE_BUCKET}/sax-root \\\u00a0 \u00a0lm.generate \\\u00a0 \u00a0 \u00a0${SAX_CELL}/${MODEL_NAME} \\\u00a0 \u00a0 \u00a0${TEXT}\n```\u60a8\u61c9\u8a72\u6703\u770b\u5230\u985e\u4f3c\u5982\u4e0b\u5167\u5bb9\uff1a```\n+--------------------------------+------------+| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0GENERATE \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| \u00a0 SCORE \u00a0 \u00a0|+--------------------------------+------------+| \u00a0This page includes the \u00a0 \u00a0 \u00a0 \u00a0| -1.0517541 || show Transcript. \u00a0The daily \u00a0 \u00a0| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| transcript is a written \u00a0 \u00a0 \u00a0 \u00a0| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| version of each day's CNN \u00a0 \u00a0 \u00a0| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| Student News program. Use the \u00a0| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| Transcript to help students \u00a0 \u00a0| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| with reading comprehension and | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| vocabulary. At the bottom of \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| the page, comment for a chance | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| to be mentioned on CNN Student | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| News. \u00a0You must be a teacher \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| or a student age 13 or older \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| to request a mention on the \u00a0 \u00a0| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| CNN Student News Roll Call. \u00a0 \u00a0| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|| \u00a0... \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0|+--------------------------------+------------+\n```\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f `GPTJ4TokenizedBF16BS32` \uff0c\u5247\u8f38\u5165\u5167\u5bb9\u7684\u683c\u5f0f\u5fc5\u9808\u7232\u4ee5\u82f1\u6587\u9017\u865f\u5206\u9694\u7684\u4ee4\u724c ID \u5b57\u7b26\u4e32\u3002\u60a8\u9700\u8981\u5c07\u6587\u672c\u8f38\u5165\u9032\u884c\u6a19\u8a18\u5316\u3002```\nTEXT=(\"Below is an instruction that describes a task, paired with \"\"an input that provides further context. Write a response that \"\"appropriately completes the request.\\n\\n\n### Instruction\\:\\nSummarize the \"\"following news article\\:\\n\\n\n### Input\\:\\nMarch 10, 2015 . We're truly \"\"international in scope on Tuesday. We're visiting Italy, Russia, the \"\"United Arab Emirates, and the Himalayan Mountains. Find out who's \"\"attempting to circumnavigate the globe in a plane powered partially by the \"\"sun, and explore the mysterious appearance of craters in northern Asia. \"\"You'll also get a view of Mount Everest that was previously reserved for \"\"climbers. On this page you will find today's show Transcript and a place \"\"for you to request to be on the CNN Student News Roll Call. TRANSCRIPT . \"\"Click here to access the transcript of today's CNN Student News program. \"\"Please note that there may be a delay between the time when the video is \"\"available and when the transcript is published. CNN Student News is \"\"created by a team of journalists who consider the Common Core State \"\"Standards, national standards in different subject areas, and state \"\"standards when producing the show. ROLL CALL . For a chance to be \"\"mentioned on the next CNN Student News, comment on the bottom of this page \"\"with your school name, mascot, city and state. We will be selecting \"\"schools from the comments of the previous show. You must be a teacher or a \"\"student age 13 or older to request a mention on the CNN Student News Roll \"\"Call! Thank you for using CNN Student News!\\n\\n\n### Response\\:\")\n```\u60a8\u53ef\u4ee5\u901a\u904e EleutherAI/gpt-j-6b \u6a19\u8a18\u751f\u6210\u5668\u7372\u53d6\u4ee4\u724c ID \u5b57\u7b26\u4e32\uff1a```\nfrom transformers import GPT2Tokenizertokenizer = GPT2Tokenizer.from_pretrained(${PT_CHECKPOINT_PATH})\n```\u5c0d\u8f38\u5165\u6587\u672c\u9032\u884c\u8a5e\u5143\u5316\u8655\u7406\uff1a```\nencoded_example = tokenizer(TEXT)input_ids = encoded_example.input_idsINPUT_STR = \",\".join([str(input_id) for input_id in input_ids])\n```\u60a8\u61c9\u8a72\u5f97\u5230\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\u7684\u4ee4\u724c ID \u5b57\u7b26\u4e32\uff1a```\n>>> INPUT_STR'21106,318,281,12064,326,8477,257,4876,11,20312,351,281,5128,326,3769,2252,4732,13,19430,257,2882,326,20431,32543,262,2581,13,198,198,21017,46486,25,198,13065,3876,1096,262,1708,1705,2708,25,198,198,21017,23412,25,198,16192,838,11,1853,764,775,821,4988,3230,287,8354,319,3431,13,775,821,10013,8031,11,3284,11,262,1578,4498,24880,11,290,262,42438,22931,21124,13,9938,503,508,338,9361,284,2498,4182,615,10055,262,13342,287,257,6614,13232,12387,416,262,4252,11,290,7301,262,11428,5585,286,1067,8605,287,7840,7229,13,921,1183,635,651,257,1570,286,5628,41336,326,373,4271,10395,329,39311,13,1550,428,2443,345,481,1064,1909,338,905,42978,290,257,1295,329,345,284,2581,284,307,319,262,8100,13613,3000,8299,4889,13,48213,6173,46023,764,6914,994,284,1895,262,14687,286,1909,338,8100,13613,3000,1430,13,4222,3465,326,612,743,307,257,5711,1022,262,640,618,262,2008,318,1695,290,618,262,14687,318,3199,13,8100,13613,3000,318,2727,416,257,1074,286,9046,508,2074,262,8070,7231,1812,20130,11,2260,5423,287,1180,2426,3006,11,290,1181,5423,618,9194,262,905,13,15107,3069,42815,764,1114,257,2863,284,307,4750,319,262,1306,8100,13613,3000,11,2912,319,262,4220,286,428,2443,351,534,1524,1438,11,37358,11,1748,290,1181,13,775,481,307,17246,4266,422,262,3651,286,262,2180,905,13,921,1276,307,257,4701,393,257,3710,2479,1511,393,4697,284,2581,257,3068,319,262,8100,13613,3000,8299,4889,0,6952,345,329,1262,8100,13613,3000,0,198,198,21017,18261,25'\n```\u5982\u9700\u751f\u6210\u5831\u9053\u7684\u6458\u8981\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a```\ndocker run \\\u00a0${SAX_UTIL_IMAGE_URL} \\\u00a0 \u00a0--sax_root=gs://${SAX_ADMIN_STORAGE_BUCKET}/sax-root \\\u00a0 \u00a0lm.generate \\\u00a0 \u00a0 \u00a0${SAX_CELL}/${MODEL_NAME} \\\u00a0 \u00a0 \u00a0${INPUT_STR}\n```\u60a8\u61c9\u8a72\u6703\u770b\u5230\u985e\u4f3c\u5982\u4e0b\u5167\u5bb9\uff1a```\n+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------+| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0GENERATE \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| \u00a0 \u00a0SCORE \u00a0 \u00a0 |+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------+| 1212,2443,3407,262,905,42978,764,198,11041,262,42978,284,1037,2444,351,3555,35915,290,25818,764,198,2953,262,4220,286,262,2443,11,2912,329,257,2863,284,307,4750,319,8100,13613,3000,13,220,921,1276,307,257,4701,393,257,3710,2479,1511,393,4697,284,2581,257,3068,319,262,8100,13613,3000,8299,4889,13,50256 | -0.023136413 || 1212,2443,3407,262,905,42978,764,198,11041,262,42978,284,1037,2444,351,3555,35915,290,25818,764,198,2953,262,4220,286,262,2443,11,2912,329,257,2863,284,307,4750,319,8100,13613,3000,13,220,921,1276,307,257,4701,393,257,3710,2479,1511,393,4697,284,2581,257,3068,319,262,8100,13613,3000,8299,4889,0,50256 \u00a0| \u00a0-0.91842502 || 1212,2443,3407,262,905,42978,764,198,11041,262,42978,284,1037,2444,351,3555,35915,290,25818,764,198,2953,262,4220,286,262,2443,11,2912,329,257,2863,284,307,4750,319,8100,13613,3000,13,921,1276,307,257,4701,393,257,3710,2479,1511,393,4697,284,2581,257,3068,319,262,8100,13613,3000,8299,4889,13,50256 \u00a0 \u00a0 | \u00a0 -1.1726116 || 1212,2443,3407,262,905,42978,764,198,11041,262,42978,284,1037,2444,351,3555,35915,290,25818,764,198,2953,262,4220,286,262,2443,11,2912,329,257,2863,284,307,4750,319,8100,13613,3000,13,220,921,1276,307,1511,393,4697,284,2581,257,3068,319,262,8100,13613,3000,8299,4889,13,50256 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| \u00a0 -1.2472695 |+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------+\n```\u5982\u9700\u5c0d\u8f38\u51fa\u4ee4\u724c ID \u5b57\u7b26\u4e32\u9032\u884c\u53bb\u4ee4\u724c\u5316\u8655\u7406\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a```\noutput_token_ids = [int(token_id) for token_id in OUTPUT_STR.split(',')]OUTPUT_TEXT = tokenizer.decode(output_token_ids, skip_special_tokens=True)\n```\u53bb\u6a19\u8a18\u5316\u7684\u6587\u672c\u61c9\u5982\u4e0b\u6240\u793a\uff1a```\n>>> OUTPUT_TEXT'This page includes the show Transcript.\\nUse the Transcript to helpstudents with reading comprehension and vocabulary.\\nAt the bottom ofthe page, comment for a chance to be mentioned on CNN Student News.You must be a teacher or a student age 13 or older to request a mention onthe CNN Student News Roll Call.'\n```\n- [\u6e05\u7406](#cleanup) Docker \u5bb9\u5668\u548c Cloud Storage \u5b58\u5132\u5206\u5340\u3002\u4e00\u4e9b\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u9700\u8981\u591a\u4e3b\u6a5f TPU \u5207\u7247\uff0c\u5373 v5litepod-16 \u53ca\u66f4\u9ad8\u7248\u672c\u3002\u5728\u9019\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u6240\u6709\u591a\u4e3b\u6a5f TPU \u4e3b\u6a5f\u90fd\u9700\u8981\u6709\u4e00\u500b SAX \u6a21\u578b\u670d\u52d9\u5668\u7684\u526f\u672c\uff0c\u4e26\u4e14\u6240\u6709\u6a21\u578b\u670d\u52d9\u5668\u5145\u7576 SAX \u6a21\u578b\u670d\u52d9\u5668\u7d44\uff0c\u4ee5\u5728\u591a\u4e3b\u6a5f TPU \u5207\u7247\u4e0a\u63d0\u4f9b\u5927\u578b\u6a21\u578b\u3002\n- \u5275\u5efa\u65b0\u7684 SAX \u96c6\u7fa3\u60a8\u53ef\u4ee5\u6309\u7167 [GPT-J \u6f14\u793a](#single-host-example) \u4e2d\u201c\u5275\u5efa SAX\u201d\u96c6\u7fa3\u7684\u76f8\u540c\u6b65\u9a5f\u9032\u884c\u64cd\u4f5c\uff0c\u4ee5\u5275\u5efa\u65b0\u7684 SAX \u96c6\u7fa3\u548c SAX \u7ba1\u7406\u670d\u52d9\u5668\u3002\u6216\u8005\uff0c\u5982\u679c\u60a8\u5df2\u6709 SAX \u96c6\u7fa3\uff0c\u5247\u53ef\u4ee5\u5c07\u591a\u4e3b\u6a5f\u6a21\u578b\u670d\u52d9\u5668\u5553\u52d5\u5230 SAX \u96c6\u7fa3\u4e2d\u3002\n- \u5c07\u591a\u4e3b\u6a5f SAX \u6a21\u578b\u670d\u52d9\u5668\u5553\u52d5\u5230 SAX \u96c6\u7fa3\u4e2d\u4f7f\u7528\u8207\u55ae\u4e3b\u6a5f TPU \u5207\u7247\u76f8\u540c\u7684\u547d\u4ee4\u5275\u5efa\u591a\u4e3b\u6a5f TPU \u5207\u7247\uff0c\u53ea\u9700\u6307\u5b9a\u9069\u7576\u7684\u591a\u4e3b\u6a5f\u52a0\u901f\u5668\u985e\u578b\u5373\u53ef\uff1a```\nACCELERATOR_TYPE=v5litepod-32ZONE=us-east1-cgcloud alpha compute tpus queued-resources create ${QUEUED_RESOURCE_ID} \\\u00a0--node-id ${TPU_NAME} \\\u00a0--project ${PROJECT_ID} \\\u00a0--zone ${ZONE} \\\u00a0--accelerator-type ${ACCELERATOR_TYPE} \\\u00a0--runtime-version ${RUNTIME_VERSION} \\\u00a0--service-account ${SERVICE_ACCOUNT} \\\u00a0--${QUOTA_TYPE}\n```\u6ce8\u610f\uff1a`QUOTA_TYPE`\u6a19\u8a8c\u53ef\u4ee5\u662f`reserved`\u6216`best-effort`\u3002\u5982\u9700\u77ad\u89e3 Cloud TPU \u652f\u6301\u7684\u4e0d\u540c\u985e\u578b\u7684\u914d\u984d\uff0c\u8acb\u53c3\u95b1 [\u914d\u984d\u985e\u578b](https://cloud.google.com/tpu/docs/quota?hl=zh-cn#quota_types) \u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5c07 SAX \u6a21\u578b\u670d\u52d9\u5668\u6620\u50cf\u62c9\u53d6\u5230\u6240\u6709 TPU \u4e3b\u6a5f/\u5de5\u4f5c\u5668\u4e26\u5553\u52d5\u5b83\u5011\uff1a\u5982\u9700\u5c07 SAX \u6a21\u578b\u670d\u52d9\u5668\u6620\u50cf\u62c9\u53d6\u5230\u6240\u6709 TPU \u4e3b\u6a5f/\u5de5\u4f5c\u5668\u4e26\u5553\u52d5\u5b83\u5011\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a```\ngcloud alpha compute tpus tpu-vm ssh ${TPU_NAME} \\\u00a0--project ${PROJECT_ID} \\\u00a0--zone ${ZONE} \\\u00a0--worker=all \\\u00a0--command=\"\u00a0 \u00a0gcloud auth configure-docker \\\u00a0 \u00a0 \u00a0us-docker.pkg.dev\u00a0 \u00a0# Pull SAX model server image\u00a0 \u00a0docker pull ${SAX_MODEL_SERVER_IMAGE_URL}\u00a0 \u00a0# Run model server\u00a0 \u00a0docker run \\\u00a0 \u00a0 \u00a0--privileged \u00a0\\\u00a0 \u00a0 \u00a0-it \\\u00a0 \u00a0 \u00a0-d \\\u00a0 \u00a0 \u00a0--rm \\\u00a0 \u00a0 \u00a0--network host \\\u00a0 \u00a0 \u00a0--name ${SAX_MODEL_SERVER_DOCKER_NAME} \\\u00a0 \u00a0 \u00a0--env SAX_ROOT=gs://${SAX_ADMIN_STORAGE_BUCKET}/sax-root \\\u00a0 \u00a0 \u00a0${SAX_MODEL_SERVER_IMAGE_URL} \\\u00a0 \u00a0 \u00a0 \u00a0--sax_cell=${SAX_CELL} \\\u00a0 \u00a0 \u00a0 \u00a0--port=10001 \\\u00a0 \u00a0 \u00a0 \u00a0--platform_chip=tpuv4 \\\u00a0 \u00a0 \u00a0 \u00a0--platform_topology=1x1\"\n```\n- \u5c07\u6a21\u578b\u767c\u4f48\u5230 SAX \u96c6\u7fa3\u6b64\u793a\u4f8b\u4f7f\u7528 [LmCloudSpmd175B32Test](https://github.com/google/saxml/blob/main/saxml/server/pax/lm/params/lm_cloud.py) \u6a21\u578b\uff1a```\nMODEL_NAME=lmcloudspmd175b32testMODEL_CONFIG_PATH=saxml.server.pax.lm.params.lm_cloud.LmCloudSpmd175B32TestCHECKPOINT_PATH=NoneREPLICA=1\n```\u5982\u9700\u767c\u4f48\u6e2c\u8a66\u6a21\u578b\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a```\ndocker run \\\u00a0${SAX_UTIL_IMAGE_URL} \\\u00a0 \u00a0--sax_root=gs://${SAX_ADMIN_STORAGE_BUCKET}/sax-root \\\u00a0 \u00a0publish \\\u00a0 \u00a0 \u00a0${SAX_CELL}/${MODEL_NAME} \\\u00a0 \u00a0 \u00a0${MODEL_CONFIG_PATH} \\\u00a0 \u00a0 \u00a0${CHECKPOINT_PATH} \\\u00a0 \u00a0 \u00a0${REPLICA}\n```\n- \u751f\u6210\u63a8\u65b7\u7d50\u679c```\ndocker run \\\u00a0${SAX_UTIL_IMAGE_URL} \\\u00a0 \u00a0--sax_root=gs://${SAX_ADMIN_STORAGE_BUCKET}/sax-root \\\u00a0 \u00a0lm.generate \\\u00a0 \u00a0 \u00a0${SAX_CELL}/${MODEL_NAME} \\\u00a0 \u00a0 \u00a0\"Q: \u00a0Who is Harry Porter's mother? A\\: \"\n```\u8acb\u6ce8\u610f\uff0c\u7531\u65bc\u6b64\u793a\u4f8b\u4f7f\u7528\u5177\u6709\u96a8\u6a5f\u6b0a\u91cd\u7684\u6e2c\u8a66\u6a21\u578b\uff0c\u56e0\u6b64\u8f38\u51fa\u53ef\u80fd\u6c92\u6709\u610f\u7fa9\u3002\n- \u6e05\u7406\u505c\u6b62 Docker \u5bb9\u5668\uff1a```\ndocker stop ${SAX_ADMIN_SERVER_DOCKER_NAME}docker stop ${SAX_MODEL_SERVER_DOCKER_NAME}\n```\u5982\u4e0b\u6240\u793a\uff0c\u4f7f\u7528 `gsutil` \u522a\u9664 Cloud Storage \u7ba1\u7406\u54e1\u5b58\u5132\u6876\u548c\u4efb\u4f55\u6578\u64da\u5b58\u5132\u6876\u3002```\ngsutil rm -rf gs://${SAX_ADMIN_STORAGE_BUCKET}gsutil rm -rf gs://${SAX_DATA_STORAGE_BUCKET}\n```## \u5206\u6790\n\u8a2d\u7f6e\u63a8\u65b7\u5f8c\uff0c\u6027\u80fd\u5206\u6790\u5668\u53ef\u7528\u65bc\u5206\u6790\u6027\u80fd\u548c TPU \u5229\u7528\u7387\u3002\u4e0b\u9762\u986f\u793a\u4e86\u5c0d\u4e00\u4e9b\u8207\u6027\u80fd\u5206\u6790\u76f8\u95dc\u7684\u6587\u6a94\u7684\u5f15\u7528\uff1a\n- [\u5728 Cloud TPU \u4e0a\u57f7\u884c\u6027\u80fd\u5256\u6790](https://cloud.google.com/tpu/docs/cloud-tpu-tools?hl=zh-cn) \n- [TensorFlow \u6027\u80fd\u5206\u6790](https://www.tensorflow.org/guide/profiler?hl=zh-cn) \n- [PyTorch \u6027\u80fd\u5256\u6790](https://cloud.google.com/tpu/docs/pytorch-xla-performance-profiling-tpu-vm?hl=zh-cn) \n- [JAX \u6027\u80fd\u5206\u6790](https://jax.readthedocs.io/en/latest/profiling.html#profiling-jax-programs) ## \u652f\u6301\u8207\u53cd\u994b\n\u6b61\u8fce\u63d0\u4f9b\u53cd\u994b\uff01\u5982\u9700\u63d0\u4f9b\u53cd\u994b\u6216\u8acb\u6c42\u652f\u6301\uff0c\u8acb\u9ede\u64ca [\u6b64\u8655](https://forms.gle/pLFRKSdWZ97o2o867) \u8207\u6211\u5011\u806f\u7e6b\uff0c\u6216\u767c\u9001\u96fb\u5b50\u90f5\u4ef6\u81f3 [cloudtpu-support@google.com](mailto:cloudtpu-support@google.com)\n## \u689d\u6b3e\nGoogle \u5411\u60a8\u63d0\u4f9b\u7684\u6709\u95dc\u6b64\u8edf\u4ef6\u7248\u672c\u7684\u6240\u6709\u4fe1\u606f\u5747\u7232 Google \u7684\u6a5f\u5bc6\u4fe1\u606f\uff0c\u53d7 [Google Cloud Platform \u670d\u52d9\u689d\u6b3e](https://cloud.google.com/terms?hl=zh-cn) \uff08\u6216\u60a8\u5728\u4f7f\u7528 Google Cloud Platform \u6642\u9808\u9075\u5b88\u7684\u5176\u4ed6\u5354\u8b70\uff09\u4e2d\u7684\u6a5f\u5bc6\u6027\u689d\u6b3e\u7684\u7d04\u675f\u3002", "guide": "Cloud TPU"}