{"title": "Apigee - Obtain TLS credentials: An example", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Obtain TLS credentials: An example\nYou are currently viewing version 1.1 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis topic is intended as an example only. It explains how to obtain a TLS certificate from the certificate authority (CA) [Let's Encrypt](https://letsencrypt.org) . These steps are provided primarily as an example to follow if you do not have another ready way to obtain a certificate/key pair that is authorized by a CA. The example shows how to generate certificates using the [Let's Encrypt](https://letsencrypt.org) CA, the [Certbot client](https://certbot.eff.org/about/) , and Google Cloud Platform [Cloud DNS](https://cloud.google.com/dns/docs/) .\n", "content": "## \n Where you can use these credentials\nYou must provide TLS credentials for two Istio ingress gateways that are exposed outside the cluster:\n| Gateway     | TLS requirement                |\n|:------------------------|:------------------------------------------------------------------------------|\n| MART ingress gateway | Requires an authorized TLS certificate/key pair.        |\n| Runtime ingress gateway | You can use a self-signed certificate/key pair or authorized TLS credentials. |\n[External connections](/apigee/docs/hybrid/v1.1/ports#external)\n## \n Requirements\n- You will need a domain name obtained through a domain name registrar. You can register a domain name through  Google Domains or another domain registrar of your choice.## \n Configure Cloud DNS\n[Google Cloud DNS](https://cloud.google.com/dns/)\n- Open the [Google Cloud console](https://console.cloud.google.com) and log in with the account you created in [Step 1: Create a Google Cloud account](/apigee/docs/hybrid/v1.1/precog-gcpaccount) .\n- Select the project that you created in [Step 2: Create a GCP project](/apigee/docs/hybrid/v1.1/precog-gcpproject) .\n- Enable the DNS API. See [Enabling APIs](https://cloud.google.com/apis/docs/getting-started#enabling_apis) .\n- Create two static IP addresses:- If you are on GKE, follow the instructions in [ Reserving a static external IP address](https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address) to create two static IP addresses. You can give the addresses any name you wish, for example:`apigee-hybrid-mart`and`apigee-hybrid-runtime`. When you finish, you will have two IP numbers to use in the cluster configuration in the next step. For example:`35.225.131.189`and`34.66.75.196`\n- If you are on Anthos GKE, follow instructions in the [  Anthos GKE documentation](/anthos/clusters/docs/on-prem/1.5/how-to/install-static-ips#configuring_static_ips) to  create two static IP addresses.\n- Create a managed public zone. For instructions, see [ Create a managed public zone](https://cloud.google.com/dns/docs/set-up-dns-records-domain-name#create_a_managed_public_zone) .\n- Get the External IP you reserved for the`apigee-hybrid-mart`.\n- Create record set for the MART endpoint. Enter the External IP you obtained in the previous  step and add a prefix to the domain name, such as`mart`. For instructions, see [Create a new record](https://cloud.google.com/dns/docs/set-up-dns-records-domain-name#create_a_new_record) .\n- Get the External IP that you reserved for`apigee-hybrid-runtime`.\n- Create record set for the Istio ingress endpoint. This is the address for making API  calls to the hybrid gateway. Enter the External IP you obtained in the previous  step and add a prefix to the domain name, such as`apitest`. For instructions, see [Create a new record](https://cloud.google.com/dns/docs/set-up-dns-records-domain-name#create_a_new_record) .\n- Copy the DNS record data, as shown in the following example:\n- Return to your domain page at [Google Domains](https://domains.google.com) .\n- Select your domain.\n- Select **DNS** .\n- In the Name Servers section, click **Edit** .\n- Enter the domain name servers that you copied from the Network Services Cloud DNS  page:\nNow, your Google Cloud DNS will manage the DNS records for your domain.\n## \n Install Certbot on a VM\nNow that you have Cloud DNS set up to manage your domain servers, you will install the Certbot client with the [dns_google](https://certbot-dns-google.readthedocs.io/en/stable/) plugin on a Cloud VM. The client enables you to get authorized certificates for your domain from a Let's Encrypt endpoint.\n- Open the [Google Cloud console](https://console.cloud.google.com) and log in with the account you created in [Step 1: Create a Google Cloud account](/apigee/docs/hybrid/v1.1/precog-gcpaccount) .\n- Select the project that you created in [Step 2: Create a GCP project](/apigee/docs/hybrid/v1.1/precog-gcpproject) .\n- Select **IAM & admin > Service accounts** .The **Service accounts view** displays a list of the project\u2019s service accounts.\n- To create a new service account, click **+Create Service Account** at the top of  the view.The **Service account details** view displays.\n- In the **Service account name** field, enter the name of the service account.You can optionally add a description in the **Service account description** field. Descriptions are helpful at reminding you what a particular service account is used  for.\n- Click **Create** .GCP creates a new service account and displays the **Service account permissions** view. Use this view to assign a role to your new service account.\n- Click the **Select a role** drop-down list.\n- Select the **Project Owner** role.\n- Click **Continue** .\n- Click **Done** .\n- In the GCP console, select **Compute Engine > VM Instances** .\n- Create a VM instance named **certmanager** .\n- Under the Boot Disk section, choose CentOS7 and 20 GB for the  SSD persistent drive.\n- Set the Service Account to the one you created above.\n- Install Certbot and the [dns_google](https://certbot-dns-google.readthedocs.io/en/stable/) plugin on the machine and run the Certbot client:```\n\u00a0 sudo su -\u00a0 yum -y install yum-utils\u00a0 yum install certbot -y\u00a0 yum install certbot-dns-google -y\u00a0 certbot certonly --dns-google -d *.your_domain_name,*.your_domain_name --server https://acme-v02.api.letsencrypt.org/directory\u00a0 \n```For example:```\nsudo su -yum -y install yum-utilsyum install certbot -yyum install certbot-dns-google -ycertbot certonly --dns-google -d *.apigee-hybrid-docs.net,*.apigee-hybrid-docs.net --server https://acme-v02.api.letsencrypt.org/directory\n```\n- You can now find your authorized certificate and private key files in this directory:`cd /etc/letsencrypt/live/` `` `/`For example:```\ncd /etc/letsencrypt/live/apigee-hybrid-docs.netls\u00a0 cert.pem \u00a0chain.pem \u00a0fullchain.pem \u00a0privkey.pem \u00a0README\n```\n- Copy the files`fullchain.pem`and`privkey.pem`to your local machine.\n- Update your overrides file to point to the certificate and private key. For the`hostAlias`, use the DNS name that you created previously.For example:```\nenvs:\n - name: test\n sslCertPath: \"$HOME/hybrid/apigee-hybrid-setup/tls/fullchain.pem\"\n sslKeyPath: \"$HOME/hybrid/apigee-hybrid-setup/tls/privkey.pem\"\n hostAlias: \"apitest.apigee-hybrid-docs.net\"\nmart:\n nodeSelector:\n key: cloud.google.com/gke-nodepool\n value: apigee-runtime\n sslCertPath: \"$HOME/hybrid/apigee-hybrid-setup/tls/fullchain.pem\"\n sslKeyPath: \"$HOME/hybrid/apigee-hybrid-setup/tls/privkey.pem\"\n replicaCountMin: 1\n replicaCountMax: 1\n hostAlias: \"mart.apigee-hybrid-docs.net\"\n```\n- Apply the changes:If you changed the `mart` configuration, apply the changes:```\napigeectl apply -f your_overrides_file -c mart\n```If you changed the `envs` configuration, apply the changes:```\napigeectl apply -f your_overrides_file -c runtime\n```## \n Test the configuration\n- Deploy and test a proxy, as explained in [Create and deploy a new API proxy](/apigee/docs/hybrid/v1.1/test-new-proxy) .\n-", "guide": "Apigee"}