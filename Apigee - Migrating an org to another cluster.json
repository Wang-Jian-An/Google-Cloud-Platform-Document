{"title": "Apigee - Migrating an org to another cluster", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Migrating an org to another cluster\nYou are currently viewing version 1.8 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis page describes how to migrate an Apigee hybrid org from one Kubernetes cluster to another. Some cases in which you might need to migrate an org to another cluster are the following:\n- The data center hosting the existing cluster has no more capacity, or is  being decommissioned.\n- The cluster is running old infrastructure or an old version of Kubernetes, and you  want to migrate to a cluster with newer infrastructure.\n- You want to move orgs from multi-org clusters into separate clusters.\nNote that there are risks and limitations when migrating an org to another hybrid cluster.  Read the details in the [Limitations](#limitations) section before performing a migration.\n", "content": "## Limitations\nThe following limitations apply when migrating a hybrid org to another Kubernetes cluster:\n- There is a risk of data loss when moving org data to a new Kubernetes cluster.  You should back up the data for all orgs in the Kubernetes cluster, using the [hybrid backup  instructions](/apigee/docs/hybrid/v1.8/cassandra-backup-overview) , before migrating an org.\n- The maximum data size supported for org migration is 5GB across all keyspaces of an org,  excluding cache and quota.\n- Cache data will not be migrated. Hybrid rebuilds cache data.\n- Quota data will not be migrated. Hybrid resets quota data.\n- You can only migrate orgs to a Kubernetes cluster that contains no existing  hybrid deployment.  Migrating to a cluster with an existing hybrid deployment is not supported.\n- The org being migrated can only be moved to a new cluster with a single region deployment.  After the single region deployment is up and running, you can follow the region  expansion process, described in [Multi-region deployment](/apigee/docs/hybrid/v1.8/multi-region) , to expand to other regions.\n- The Cassandra cluster should be operating in good health across all regions.## Migrating an org\nFollow the instructions below to migrate a hybrid org from one Kubernetes cluster to another:\n- If not already enabled, enable backups on the Kubernetes cluster containing the hybrid org  to be migrated. See [Cassandra backup overview](/apigee/docs/hybrid/v1.8/cassandra-backup-overview) for information on hybrid backups.\n- Start a hybrid backup job using the following command:```\nkubectl create job -n apigee --from=cronjob/apigee-cassandra-backup <backup job name>\n```The `<backup job name>` can be any valid container name.\n- Once the backup job is completed, use the instructions in the following sections of [Monitoring  backups](/apigee/docs/hybrid/v1.8/monitor-cassandra-backups) to verify that the backup has successfully completed:- \"Check the status of the backup job\"\n- \"Check the backup logs\"\n- After verifying that the backup was successful, make a note of the ID number at the end of the backup log. For example, a successful backup log should contain a line like the following:```\nINFO: completed upload for 20230207004250\n```Make a note of the multi-digit number at the end of the line. You will need this number later.\n- Switch the Kubernetes context to the destination Kubernetes cluster:```\nkubectl config use-context <destination cluster name> # <destination cluster name>\n```where `<destination cluster name>` is the name of the destination Kubernetes  cluster.\n- Restore the backup data into the destination Kubernetes cluster using the instructions in [  Restoring in a single region](https://cloud.google.com/apigee/docs/hybrid/v1.8/restore-cassandra-single-region) .- Use the overrides.yaml file for the org that is being migrated to the destination hybrid   deployment.\n- Remember to set the`restore:snapshotTimestamp`value to the multi-digit   number shown by the backup log in step 4. See [  Restoring in a single region](https://cloud.google.com/apigee/docs/hybrid/v1.8/restore-cassandra-single-region) .\n- Once the restoration is complete, delete any org data, other than the data for the org being  migrated, from the destination Kubernetes cluster. Hybrid backup files contain the data for all  orgs, including ones you may not want to migrate. After the destination hybrid  deployment is restored, you need to remove any extra org data that was copied to the  deployment, using the following steps:- Verify that the current context is the correct context for the destination Kubernetes cluster:```\nkubectl config current-context\n```\n- Exec into the`apigee-cassandra-default-0`pod:```\nkubectl exec -it -n apigee apigee-cassandra-default-0 -- /bin/bash\n```\n- Execute the following command:```\nfind /opt/apigee/data/apigee-cassandra/ -iname '*_hybrid' -not -iname '*<migrated org name>*' -type d -maxdepth 2 -printf \"%f\\n\"\n```See [Get the name of the migrated org](#get-the-name-of-the-migrated-org) for instructions on finding `<migrated org name>` .Copy the list of all names that are shown in the   output. You will need this list in step 7. f.\n- Exit the`apigee-cassandra-default-0`pod.\n- Create a Cassandra debug client pod using the instructions in [ Create a client container for debugging](/apigee/docs/api-platform/troubleshoot/playbooks/cassandra/ts-cassandra#create-a-client-container-for-debugging) . Move on to the next step after getting a`cqlsh`prompt.\n- Execute the following commands in the`cqlsh`prompt:- ```\ndesc keyspaces;\n```Make sure this command returns no errors.\n- For each name in the list created in step 7. c., run the following command:```\ndrop keyspace <name>\n```\n- Exit the Cassandra debug client pod.\n- After executing the`cqlsh`commands, run the following commands on all Cassandra pods   in the destination Kubernetes cluster:- ```\nkubectl exec -it -n apigee -- /bin/bash\n```\n- ```\nfind /opt/apigee/data/apigee-cassandra/ -iname '*_hybrid' -not -iname '*<migrated org name>*' -type d -maxdepth 2\n```See [Get the name of the migrated org](#get-the-name-of-the-migrated-org) for instructions on finding `<migrated org name>` .\n- ```\nfind /opt/apigee/data/apigee-cassandra/ -iname '*_hybrid' -not -iname '**' -type d -maxdepth 2 -exec rm -rf {} +\n```- Exit the Cassandra pod.\n- Switch the Kubernetes context to the source Kubernetes cluster:```\nkubectl config use-context <source cluster name>\n```where `<source cluster name>` is the name of the source Kubernetes cluster.\n- Delete the migrated org from the source Kubernetes cluster. Be sure to use the`overrides.yaml`file for the org in the delete command:- Verify the current context is the correct context for the source Kubernetes cluster:```\nkubectl config current-context\n```\n- ```\napigeectl delete --settings virtualhost -f \n```\n- ```\napigeectl delete --all-envs -f <overrides.yaml>\n```\n- ```\napigeectl delete -f <overrides.yaml> --org\n```\n- Exec into the apigee-cassandra-default-0 pod:```\nkubectl exec -it -n apigee apigee-cassandra-default-0 -- /bin/bash\n```\n- Execute the following command:```\nfind /opt/apigee/data/apigee-cassandra/ -iname '*<migrated org name>_hybrid' -type d -maxdepth 2 -printf \"%f\\n\"\n```See [Get the name of the migrated org](#get-the-name-of-the-migrated-org) for instructions on finding `<migrated org name>` .Copy the list of all the names that are shown in the output. You will need this list   in step 9. j.\n- Exit the`apigee-cassandra-default-0`pod.\n- Create a Cassandra debug client pod using the instructions in [   Create a client container for debugging](/apigee/docs/api-platform/troubleshoot/playbooks/cassandra/ts-cassandra#create-a-client-container-for-debugging) . Move on to the next step   after getting a`cqlsh`prompt.\n- Execute the following commands at the`cqlsh`prompt:```\ndesc keyspaces;\n```Make sure this command returns no errors.\n- For each name in the list created in step 10. f.,   run the following command:```\ndrop keyspace <name>;\n```\n- Exit the Cassandra debug client pod.\n- After executing the\n- `cqlsh`\n- commands, run the following commands on all Cassandra pods   in the source Kubernetes cluster:- ```\nkubectl exec -it -n apigee <cassandra pod name> -- /bin/bash\n```\n- ```\nfind /opt/apigee/data/apigee-cassandra/ -iname '*<migrated org name>_hybrid' -type d -maxdepth 2\n```See [Get the name of the migrated org](#get-the-name-of-the-migrated-org) for instructions on finding `<migrated org name>` .\n- ```\nfind /opt/apigee/data/apigee-cassandra/ -iname '*<migrated org name>_hybrid' -type d -maxdepth 2 -exec rm -rf {} +\n```\n- Exit the Cassandra pod.\n### Get the name of the migrated org\nSeveral of the steps in the procedure described in the previous section require the name of  the migrated org. To get the migrated org name, do the following:\n- Get the org name from the org's overrides.yaml file. Make sure to check the   overrides.yaml file for the org being migrated.\n- If the org name contains any dashes \"-\", replace all dashes \"-\" with underscores \"_\".", "guide": "Apigee"}