{"title": "Compute Engine - Troubleshooting Metadata Server access issues", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Troubleshooting Metadata Server access issues\nThis document shows you how to resolve issues with the Compute Engine metadata server.\nCompute Engine VMs store metadata on a metadata server. VMs automatically have access to the metadata server API without any additional authorization. However, sometimes VMs might lose access to the metadata server due to one of the following causes:\n- Failure to resolve the metadata server domain name\n- Connection to the metadata server is blocked by one of the following:- OS level firewall configuration\n- Proxy setup\n- Custom routingWhen VMs can't access the metadata server, some processes might fail.\n", "content": "## Before you begin\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\nTo use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```## Common errors\nThe following are examples of that you might encounter if your VM fails to reach the metadata server:\n```\ncurl: (6) Could not resolve host: metadata.google.internal\n```\n```\npostAttribute error: Put \"http://metadata.google.internal/computeMetadata/v1/instance/guest-attributes/guestInventory/ShortName\": dial tcp: lookup metadata.google.internal on [::1]:53: read udp [::1]:58319->[::1]:53: read: connection refused\n```\n## Troubleshooting failed requests to the metadata server\nIf your VM has lost access to the metadata server, do the following:\n- [Connect](/compute/docs/connect/standard-ssh) to your Linux VM.\n- From your Linux VM, run the following commands to test connectivity to the metadata server:- Query the Domain Name Server:```\nnslookup metadata.google.internal\n```The output should look similar to the following:```\nServer:   169.254.169.254\nAddress:  169.254.169.254#53\nNon-authoritative answer:\nName: metadata.google.internal\nAddress: 169.254.169.254\n```\n- Check that the metadata server is reachable. To verify, run the following commands:```\nping -c 3 metadata.google.internal\n```The output should look similar to the following:```\nPING metadata.google.internal (169.254.169.254) 56(84) bytes of data.\n64 bytes from metadata.google.internal (169.254.169.254): icmp_seq=1 ttl=255 time=0.812 ms\n``````\nping -c 3 169.254.169.254\n```The output should look similar to the following:```\nPING 169.254.169.254 (169.254.169.254) 56(84) bytes of data.\n64 bytes from 169.254.169.254: icmp_seq=1 ttl=255 time=1.11 ms\n```\n- If the output of the preceding commands matches the suggested output, your VM is connected to the metadata server and no further action is required. If the commands fail, do the following:- Check that the name server is configured to the Metadata server:```\ncat /etc/resolv.conf\n```The output should look similar to the following:```\ndomain ZONE.c.PROJECT_ID.internal\nsearch ZONE.c.PROJECT_ID.internal. c.PROJECT_ID.internal. google.internal.\nnameserver 169.254.169.254\n```If the output doesn't have the preceding lines, refer to your operating system documentation for information about how to edit the [DHCP Policy](https://kb.isc.org/docs/isc-dhcp-41-manual-pages-dhclientconf) to persist the name server configuration to `169.254.169.254` . This is because changes to `/etc/resolv.conf` will be overwritten in one hour if [zonal DNS](/compute/docs/internal-dns#zonal-dns-config) settings are applied to the VMs within your project. In case your project is still using a [global DNS](/compute/docs/internal-dns#global-dns-config) , the `resolv.conf` file will be reverted to the default DHCP in 24 hours.\n- Check that the mapping between the metadata server domain name and its IP address exist:```\ncat /etc/hosts\n```The following line should be in the output:```\n169.254.169.254 metadata.google.internal # Added by Google\n```If the output doesn't have the preceding line, run the following command:```\necho \"169.254.169.254 metadata.google.internal\" >> /etc/hosts\n```\n- [Connect](/compute/docs/instances/connecting-to-windows) to your Windows VM.\n- From your Windows VM, run the following commands:- Query the Domain Name Server:```\nnslookup metadata.google.internal\n```The output should look similar to the following:```\nServer: UnKnown\nAddress: 10.128.0.1\nNon-authoritative answer:\nName: metadata.google.internal\nAddress: 169.254.169.254\n```\n- Check that the metadata server is reachable. To verify, run the following commands:```\nping -n 3 metadata.google.internal\n```The output should look similar to the following:```\nPinging metadata.google.internal [169.254.169.254] with 32 bytes of data:\nReply from 169.254.169.254: bytes=32 time=1ms TTL=255\n``````\nping -n 3 169.254.169.254\n```The output should look similar to the following:```\nPinging metadata.google.internal [169.254.169.254] with 32 bytes of data:\nReply from 169.254.169.254: bytes=32 time=1ms TTL=255\n```\n- If the output of the preceding commands matches the suggested output, your VM is connected to the metadata server and no further action is required. If the commands fail, do the following:- Check that there's a persistent route to the metadata server by running the command:```\nroute print\n```The output should contain the following:```\nPersistent Routes:\nNetwork Address   Netmask Gateway Address Metric\n169.254.169.254 255.255.255.255   On-link  1\n```If the output doesn't have the preceding line, add the route using the following commands:```\n$Adapters = Get-NetKVMAdapterRegistry$FirstAdapter = $Adapters | Select-Object -First 1route /p add 169.254.169.254 mask 255.255.255.255 0.0.0.0 'if' $FirstAdapter.InterfaceIndex metric 1\n```\n- Check that the mapping between the metadata server domain name and its IP address exists:```\ntype %WINDIR%\\System32\\Drivers\\Etc\\Hosts\n```The following line should be in the output:```\n169.254.169.254 metadata.google.internal # Added by Google\n```If the output doesn't have the preceding line, run the following command:```\necho 169.254.169.254 metadata.google.internal >> %WINDIR%\\System32\\Drivers\\Etc\\Hosts\n```## Troubleshooting failed requests while using a network proxy\nA network proxy server prevents VM's direct access to the Internet. All queries sent from within a VM are handled by the proxy server instead.\nWhen using an application that gets credentials from the metadata server, like an authentication token, the VM requires direct access to the metadata server. If the VM is behind a proxy, you must set the `NO_PROXY` configuration for both the IP address and Hostname.\nIf you don't set the `NO_PROXY` configuration, you might see errors when running Google Cloud CLI commands or querying the metadata server directly since the calls to `metadata.google.internal` will be sent to the proxy without having them resolved locally on the instance itself.\nThe following is an example of an error that you might see:\n```\nERROR 403 (Forbidden): Your client does not have permission to get URL\n```\nTo resolve this proxy issue, add the metadata server hostname and IP address to the environment variable `NO_PROXY` by doing the following:\n- [Connect](/compute/docs/connect/standard-ssh) to your Linux VM.\n- From your Linux VM, run the following commands:```\nexport no_proxy=169.254.169.254,metadata,metadata.google.internal\n```To save the changes, run the following command:```\necho no_proxy=169.254.169.254,metadata,metadata.google.internal >> /etc/environment\n```\n- [Connect](/compute/docs/instances/connecting-to-windows) to your Windows VM.\n- From your Windows VM, run the following commands:```\nset NO_PROXY=169.254.169.254,metadata,metadata.google.internal\n```To save the changes, run the following command:```\nsetx NO_PROXY 169.254.169.254,metadata,metadata.google.internal /m\n```## Incorrect header format\nThe metadata server performs formatting checks to ensure that headers comply with the header formatting guideline [RFC 7230 Section 3.2](https://datatracker.ietf.org/doc/html/rfc7230#section-3.2) . If the header format fails these checks the following occurs:\n- The request is accepted. However, you'll receive recommendations that you have VMs making requests to the metadata server with incorrectly formatted headers. Recommendations are sent once per VM. You can access these recommendations by using the Google Cloud CLI, or the Recommender REST API.After you have applied the recommendation, [set the recommendation state tosucceeded](/recommender/docs/using-api#changing_the_state_of_a_recommendation) .\n- Starting January 20, 2024, the metadata server denies any request with an incorrectly formatted header.\nThe following shows examples of valid and invalid header request formats.\nNot valid : contains whitespace between the header name and colon\n```\nMetadata-Flavor : Google\n```\nValid : no whitespace between header name and colon, whitespace after the colon is ignored by the checker\n```\nMetadata-Flavor: Google\n```\nValid : no whitespace in header\n```\nMetadata-Flavor:Google\n```\nFor more information about making queries to metadata server, see [Access VM metadata](/compute/docs/metadata/querying-metadata#query) .", "guide": "Compute Engine"}