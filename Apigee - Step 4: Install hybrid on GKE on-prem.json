{"title": "Apigee - Step 4: Install hybrid on GKE on-prem", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 4: Install hybrid on GKE on-prem\nYou are currently viewing version 1.1 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\n", "content": "## \n Apply the configuration to the cluster\nTo install Apigee hybrid into your cluster:\n- Be sure that you are in the`` `/hybrid-files`directory.\n- Execute the`init`command:```\n$APIGEECTL_HOME/apigeectl init -f overrides/overrides.yaml\n```The `init` command installs the [ Apigee deployment services](/apigee/docs/hybrid/v1.1/apigee-deployment-services) Apigee Deployment Controller and Apigee Admission Webhook, and it deploys non-Apigee  components [Istio](https://istio.io/) and [Cert Manager](https://docs.cert-manager.io/en/latest/) .\n- To check the status of the deployment, you can use these commands:```\n$APIGEECTL_HOME/apigeectl check-ready -f overrides/overrides.yaml\n```and```\nkubectl get pods -n apigee-system\n```and```\nkubectl get pods -n istio-system\n```When the pods are ready, go to the next step.\n- Do a \"dry run\" install. Execute the`apply`command with the`--dry-run=true`flag. Doing a dry  run lets you check for any errors before any changes are made to the cluster.```\n$APIGEECTL_HOME/apigeectl apply -f overrides/overrides.yaml --dry-run=true\n```\n- If there are no errors, you can apply the [Apigee-specific runtime components](/apigee/docs/hybrid/v1.1/what-is-hybrid#about-the-runtime-plane) to the cluster:```\n$APIGEECTL_HOME/apigeectl apply -f overrides/overrides.yaml\n```\n- To check the status of the deployment:```\n$APIGEECTL_HOME/apigeectl check-ready -f overrides/overrides.yaml\n```Repeat this step until the pods are all ready.  The pods may take several minutes  to start up.## \n Add a static hostname for Cassandra in /etc/hosts\nIn this step, you will get the IP and hostname of the worker node(s) assigned to Cassandra, and add them to your `/etc/hosts` file. When using the host network, the pod uses the node hostname and IP. The node hostname is not in DNS; therefore, you must add a static hostname entry in `/etc/hosts` for each Cassandra worker node.\n- Execute this command to get the Cassandra worker nodes. The parameter`apigee-data`is the default node label to which Cassandra is assigned. If you used a different node label,  substitute the one you used. See [How to label the worker nodes](/apigee/docs/hybrid/v1.1/configure-dedicated-nodes#how-to-label-the-worker-nodes) .```\nkubectl get nodes -l apigee.com/apigee-nodepool=apigee-data -o wide\n```Example output:```\nkubectl get nodes -o wide my-cluster1-844788cc8c-2gx7d\nNAME       STATUS ROLES AGE VERSION   INTERNAL-IP EXTERNAL-IP OS-IMAGE    KERNEL-VERSION  CONTAINER-RUNTIME\nmy-cluster1-844788cc8c-2gx7d Ready none  19d v1.14.7-gke.24 21.0.129.248 21.0.129.248 Ubuntu 18.04.3 LTS 4.15.0-62-generic docker://17.3.2\n```\n- Add the node name(s) and external IP(s) returned by the previous command for each  Cassandra worker node to your`/etc/hosts`file:```\ncat /etc/hosts\n127.0.0.1 localhost\n21.0.129.248 my-cluster1-844788cc8c-2gx7d\n```## \n Enable synchronizer access\n- Create a GCP service account and add the **Apigee Organization Admin** role  to it. This service account will be used to authenticate an API call that you will make  in a later step. An easy way to create the service account is through the GCP console.  For instructions, see [ Creating and managing service accounts](https://cloud.google.com/iam/docs/creating-managing-service-accounts#iam-service-accounts-create-gcloud) in the GCP documentation.\n- Download the service account key to your system. Follow the instructions in [ Creating service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys#iam-service-account-keys-create-gcloud) in the GCP documentation.\n- Move the downloaded service account key into your service accounts directory:`/hybrid-files/service-accounts`.\n- Execute these two commands to get a token:```\nexport GOOGLE_APPLICATION_CREDENTIALS=org-admin-service-account-fileexport TOKEN=$(gcloud auth application-default print-access-token)\n```Where is the path on your system to the service  account key you downloaded with the **Apigee Organization Admin** role.\n- Call the [setSyncAuthorization](/apigee/docs/reference/apis/apigee/rest/v1/organizations/setSyncAuthorization) API to  enable the required permissions for Synchronizer:```\ncurl -X POST -H \"Authorization: Bearer $TOKEN\" \\\n -H \"Content-Type:application/json\" \\\n \"https://apigee.googleapis.com/v1/organizations/your_org_name:setSyncAuthorization\" \\\n -d '{\"identities\":[\"serviceAccount:synchronizer-manager-service-account-email\"]}'\n```Where:- `your_org_name`: The name of your hybrid organization.\n- `synchronizer-manager-service-account-email`: The name of a service account   with the **Apigee Synchronizer Manager** role.   The name is formed like an email address. For example:`apigee-synchronizer@my-project.iam.gserviceaccount.com`\nExample:```\ncurl -X POST -H \"Authorization: Bearer $TOKEN\" \\\n -H \"Content-Type:application/json\" \\\n \"https://apigee.googleapis.com/v1/organizations/my_org:setSyncAuthorization\" \\\n -d '{\"identities\":[\"serviceAccount:apigee-synchronizer@my-project.iam.gserviceaccount.com\"]}'\n```\n- To verify that the service account was set, call the following API to get a list of service accounts:```\ncurl -X POST -H \"Authorization: Bearer $TOKEN\" \\\n -H \"Content-Type:application/json\" \\\n \"https://apigee.googleapis.com/v1/organizations/your_org_name:getSyncAuthorization\" \\\n -d ''\n```The output looks similar to the following:```\n{\n \"identities\":[  \"serviceAccount:my-synchronizer-manager-service_account@my_project_id.iam.gserviceaccount.com\"\n ],\n \"etag\":\"BwWJgyS8I4w=\"\n}\n \n```## \n Add the MART IP to your org\nYou must add the IP address of the [MART](/apigee/docs/hybrid/v1.1/what-is-hybrid#mart) endpoint to your Apigee organization. You set this value previously when set the value of the `mart.hostAlias` property in your overrides file. The management plane needs this address so that it can communicate with the runtime plane over MART.\nFollow these steps to add the MART IP to your organization:\n**NOTE:** Perform this step only after have successfully deployed hybrid into your cluster, as explained in [Deploy hybrid to your cluster](/apigee/docs/hybrid/v1.1/install-hybrid) .\n- Get the value you set previously in your overrides file for the`mart.hostAlias`property. For MART to function, the host alias must  be a fully qualified domain name.\n- Locate the service account key with the **Apigee Organization Admin** role  that you downloaded previously, in the section [  Enable synchronizer access](#enable-synchronizer-access) .\n- Execute these two commands to get a token:```\nexport GOOGLE_APPLICATION_CREDENTIALS=org-admin-service-account-fileexport TOKEN=$(gcloud auth application-default print-access-token)\n```Where is the path on your system to the service  account key you downloaded with the **Apigee Organization Admin** role.\n- Call the following management API to update your organization with the MART endpoint:```\ncurl -v -X PUT \\\n https://apigee.googleapis.com/v1/organizations/your_org_name \\\n -H \"Content-Type: application/json\" \\\n -H \"Authorization: Bearer $TOKEN\" \\\n -d '{\n \"name\" : \"your_org_name\",\n \"properties\" : {\n \"property\" : [ {\n  \"name\" : \"features.hybrid.enabled\",\n  \"value\" : \"true\"\n }, {\n  \"name\" : \"features.mart.server.endpoint\",\n  \"value\" : \"https://HOST_ALIAS_DNS\"\n } ]\n }\n}'\n```Here is an example. Be sure to add the prefix \"https://\" to the domain name.```\ncurl -v -X PUT \\\n https://apigee.googleapis.com/v1/organizations/my_organization \\\n -H \"Content-Type: application/json\" \\\n -H \"Authorization: Bearer $TOKEN\" \\\n -d '{\n \"name\" : \"my_organization\",\n \"properties\" : {\n \"property\" : [ {\n  \"name\" : \"features.hybrid.enabled\",\n  \"value\" : \"true\"\n }, {\n  \"name\" : \"features.mart.server.endpoint\",\n  \"value\" : \"https://foo-mart.example.com\"\n } ]\n }\n}'\n```## \n Save the overrides file\nBe sure to save your overrides file. You will need this file to perform future upgrades, patches, or any other modifications to the cluster configuration.\n**CONGRATULATIONS!** **You've successfully installed Apigee hybrid. You are now ready to test it.**", "guide": "Apigee"}