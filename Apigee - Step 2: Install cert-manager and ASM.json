{"title": "Apigee - Step 2: Install cert-manager and ASM", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 2: Install cert-manager and ASM\nYou are currently viewing version 1.3 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis step explains how to download and install [cert-manager](https://cert-manager.io/docs/) and [ Anthos Service Mesh](https://cloud.google.com/service-mesh/docs/overview) (ASM). These services are required for Apigee hybrid to operate.\n", "content": "## \n Install cert-manager\nUse one of the following two commands to install cert-manager v0.14.2 from GitHub. To find your `kubectl` version use the `kubectl version` command.\n- If you have Kubernetes **1.15** or newer:```\nkubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.14.2/cert-manager.yaml\n```\n- Kubernetes versions older than **1.15** :```\nkubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.14.2/cert-manager-legacy.yaml\n```\nYou will see a response that the `cert-manager` namespace was created and several cert-manager resources were created in that namespace.\n## \n Prerequisites\n- Check your [Cloud SDK configuration](https://cloud.google.com/sdk/gcloud/reference/config) settings using the following command:```\ngcloud config list\n[compute]\nregion = us-central1\n[core]\naccount = user@acme.com\ndisable_usage_reporting = False\nproject = my-hybrid-project\nYour active configuration is: [default]\n```\n- Make sure the compute region or zone is set to the region or zone you used when you created your cluster. If you  created a regional cluster, use`unset`to clear the compute/zone property if it is  set. If you  created a zonal cluster, use`unset`to clear the compute/region property if it is set.  Your config  must have either the compute region or zone set, but not both. For example, to clear the`compute/zone property`using`unset`, use the following command:```\ngcloud config unset compute/zone\n```\n- Set a variable with your`KDUBECONFIG`file path using the following command. This file was created on the admin machine  when you created your cluster.```\nexport KUBECONFIG=KUBECONFIG_PATH\n```For example:```\nexport KUBECONFIG=~/.kube/my-config\n```## \n Set up and download ASM\nNext, use the ASM documentation to set up your environment and download ASM.\nRead the following steps carefully before you begin. We will ask you to perform some of the steps listed in the ASM documentation, then return here to complete the installation.\n- Go to the ASM installation instructions and install the appropriate ASM version for your hybrid  setup:- For **new hybrid installations** , install ASM version 1.6.x:Go to [Installing  Anthos Service Mesh on AWS](https://cloud.google.com/service-mesh/docs/archive/1.6/docs/gke-on-aws-install) and perform all of the ASM steps up to and including [Create  the istio-system namespace](https://cloud.google.com/service-mesh/docs/archive/1.6/docs/gke-on-aws-install#create_the_istio-system_namespace) , then stop and go to the next section [Apply the manifest](#apply-the-manifest) below.\n **Important: ** After completing the steps in the section \" **Create\n the istio-system namespace** \" (if installing ASM 1.6) or \" **Preparing resource\n configuration files** \" (if installing ASM 1.5), stop and continue with the steps listed in the  next section. We recommend that you wait to apply the manifest file until instructed below.## \n Apply the manifest\n**When you have downloaded and unzipped the ASM installation file** , continue with the following steps:\n- Make sure you are in the Istio directory that you downloaded and unzipped. For example:`1.6.11-asm.1`.\n- Execute the following command for the version of Istio you installed:- If you installed ASM version 1.6 or newer (1.7 recommended), execute the  following command:```\n./bin/istioctl install --set profile=asm-multicloud \\\n --set meshConfig.enableAutoMtls=false \\\n --set meshConfig.accessLogFile=/dev/stdout \\\n --set meshConfig.accessLogEncoding=1 \\\n --set meshConfig.accessLogFormat='{\"start_time\":\"%START_TIME%\",\"remote_address\":\"%DOWNSTREAM_DIRECT_REMOTE_ADDRESS%\",\"user_agent\":\"%REQ(USER-AGENT)%\",\"host\":\"%REQ(:AUTHORITY)%\",\"request\":\"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\",\"request_time\":\"%DURATION%\",\"status\":\"%RESPONSE_CODE%\",\"status_details\":\"%RESPONSE_CODE_DETAILS%\",\"bytes_received\":\"%BYTES_RECEIVED%\",\"bytes_sent\":\"%BYTES_SENT%\",\"upstream_address\":\"%UPSTREAM_HOST%\",\"upstream_response_flags\":\"%RESPONSE_FLAGS%\",\"upstream_response_time\":\"%RESPONSE_DURATION%\",\"upstream_service_time\":\"%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%\",\"upstream_cluster\":\"%UPSTREAM_CLUSTER%\",\"x_forwarded_for\":\"%REQ(X-FORWARDED-FOR)%\",\"request_method\":\"%REQ(:METHOD)%\",\"request_path\":\"%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%\",\"request_protocol\":\"%PROTOCOL%\",\"tls_protocol\":\"%DOWNSTREAM_TLS_VERSION%\",\"request_id\":\"%REQ(X-REQUEST-ID)%\",\"sni_host\":\"%REQUESTED_SERVER_NAME%\",\"apigee_dynamic_data\":\"%DYNAMIC_METADATA(envoy.lua)%\"}'\n```\n- Finally, return to the ASM documentation to [Check  the control plane components](https://cloud.google.com/service-mesh/docs/gke-on-aws-install#check_the_control_plane_components) to validate your installation.## \n Customizing the ASM installation\nThe ASM installation you just performed is a minimal installation, sufficient to test and use Apigee hybrid for basic use cases. For information on addressing more advanced use cases, such as adding, removing, or modifying load balancer port numbers, see [Enabling optional features](https://cloud.google.com/service-mesh/docs/enable-optional-features) .\n## \n Summary\nYou now have cert-manager and ASM installed, and you are ready to install the Apigee hybrid command line tool on your local machine.\n## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled [1](/apigee/docs/hybrid/v1.3/install-create-cluster-aws-gke) If the button's step matches the current step in the process, make the button disabled If the button's step matches the next step [2](/apigee/docs/hybrid/v1.3/install-download-cert-manager-istio-aws-gke) If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 3: Install apigeectl](/apigee/docs/hybrid/v1.3/install-download-install-aws-gke) If the button's step matches the current step in the process, make the button disabled [4](/apigee/docs/hybrid/v1.3/install-copy-overrides-aws-gke) If the button's step matches the current step in the process, make the button disabled [5](/apigee/docs/hybrid/v1.3/install-apply-hybrid-aws-gke)", "guide": "Apigee"}