{"title": "Cloud Architecture Center - Automate malware scanning for files uploaded to Cloud Storage", "url": "https://cloud.google.com/architecture/reference-patterns/overview", "abstract": "# Cloud Architecture Center - Automate malware scanning for files uploaded to Cloud Storage\nLast reviewed 2023-05-17 UTC\nThis reference architecture shows you how to build an event-driven pipeline that can help you automate the evaluation of files for malware like trojans, viruses, and other malicious code. Manually evaluating the large number of files that are uploaded to [Cloud Storage](/storage) is too time-consuming for most apps. Automating the process can help you save time and improve efficiency.\nThe pipeline in this architecture uses Google Cloud products along with the open source antivirus engine [ClamAV](https://www.clamav.net/) . You can also use any other anti-malware engine that performs on-demand scanning in Linux containers. In this architecture, ClamAV runs in a Docker container hosted in [Cloud Run](/run) . The pipeline also writes log entries to [Cloud Logging](/logging) and records metrics to [Cloud Monitoring](/monitoring) .\n", "content": "## Architecture\nThe following diagram gives an overview of the architecture:\nThe architecture shows the following pipelines:\n- User-uploaded file scanning pipeline, which checks if an uploaded file contains malware.\n- ClamAV malware database mirror update pipeline, which maintains an up-to-date mirror of the database of malware that ClamAV uses.\nThe pipelines are described in more detail in the following sections.\n### User-uploaded file scanning pipeline\nThe file scanning pipeline operates as follows:\n- End users upload their files to theCloud Storage bucket.\n- The Eventarc service catches this upload event and tells the Cloud Run service about this new file.\n- The Cloud Run service downloads the new file from the unscanned Cloud Storage bucket and passes it to the ClamAV malware scanner.\n- Depending on the result of the malware scan, the service performs one of the following actions:- If ClamAV declares that the file is clean, then it's moved from the unscanned Cloud Storage bucket to theCloud Storage bucket.\n- If ClamAV declares that the file contains malware, then it's moved from the unscanned Cloud Storage bucket to theCloud Storage bucket.\n- The service reports the result of these actions to Logging and Monitoring to allow administrators to take action.\n### ClamAV Malware database mirror update pipeline\nThe ClamAV Malware database mirror update pipeline keeps an up-to-date [private local mirror](https://docs.clamav.net/appendix/CvdPrivateMirror.html) of the database in Cloud Storage. This ensures that the ClamAV public database is only accessed once per update to download the smaller differential updates files, and not the full database, which prevents any rate-limiting.\nThis pipeline operates as follows:\n- A Cloud Scheduler job is configured to trigger every two hours, which is the same as the default update check interval used by the ClamAV freshclam service. This job makes an HTTP`POST`request to the Cloud Run service instructing it to update the malware database mirror.\n- The Cloud Run instance copies the malware database mirror from the Cloud Storage bucket to the local file system.\n- The instance then runs the [ClamAV CVDUpdate](https://github.com/Cisco-Talos/cvdupdate) tool, which downloads any available differential updates and applies them to the database mirror.\n- Then, it copies the updated malware database mirror back to the Cloud Storage bucket.\nOn startup, the [ClamAV freshclam](https://docs.clamav.net/manual/Usage/SignatureManagement.html#freshclam) service running in the Cloud Run instance downloads the malware database from Cloud Storage. During runtime, the service also regularly checks for and downloads any available database updates from the Cloud Storage bucket.\n## Design considerations\nThe following guidelines can help you to develop an architecture that meets your organization's requirements for reliability, cost, and operational efficiency.\n### Reliability\nIn order to scan effectively, the ClamAV malware scanner needs to maintain an up-to-date database of malware signatures. The ClamAV service is run using Cloud Run, which is a stateless service. Upon startup of an instance of the service, ClamAV must always download the latest complete malware database, which is several hundreds of megabytes in size.\nThe public malware database for ClamAV is hosted on a Content Distribution Network (CDN), which rate limits these downloads. If multiple instances start up and attempt to download the full database, rate limiting can be triggered. This causes the external IP address used by Cloud Run to be blocked for 24 hours. This prevents the ClamAV service from starting up, as well as preventing download of malware database updates.\nAlso, Cloud Run uses a shared pool of external IP addresses. As a result, downloads from different projects' malware scanning instances are seen by the CDN as coming from a single address and also trigger the block.\n### Cost optimization\nThis architecture uses the following billable components of Google Cloud:\n- [Cloud Storage](/storage/pricing) \n- [Cloud Run](/run/pricing) \n- [Eventarc](/eventarc/pricing) \nTo generate a cost estimate based on your projected usage, use the [pricing calculator](/products/calculator) .\n### Operational efficiency\nTo [trigger log-based alerts](/monitoring/alerts) for files that are infected, you can use log entries from Logging. However, setting up these alerts is outside the scope of this architecture.\n## Deployment\nTo deploy this architecture, see [Deploy automated malware scanning for files uploaded to Cloud Storage](/architecture/automate-malware-scanning-for-documents-uploaded-to-cloud-storage/deployment) .\n## What's next\n- Explore [Cloud Storage documentation](/storage/docs) .\n- For more reference architectures, diagrams, and best practices, explore the [Cloud Architecture Center](/architecture) .", "guide": "Cloud Architecture Center"}