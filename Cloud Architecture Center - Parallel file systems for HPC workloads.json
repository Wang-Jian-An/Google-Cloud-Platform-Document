{"title": "Cloud Architecture Center - Parallel file systems for HPC workloads", "url": "https://cloud.google.com/architecture/reference-patterns/overview", "abstract": "# Cloud Architecture Center - Parallel file systems for HPC workloads\nLast reviewed 2023-11-16 UTC\nThis document introduces the storage options in Google Cloud for [high performance computing (HPC)](/solutions/hpc) workloads, and explains when to use parallel file systems for HPC workloads. In a parallel file system, several clients use parallel I/O paths to access shared data that's stored across multiple networked storage nodes.\nThe information in this document is intended for architects and administrators who design, provision, and manage storage for data-intensive HPC workloads. The document assumes that you have a conceptual understanding of [network file systems (NFS)](https://wikipedia.org/wiki/Network_File_System) , parallel file systems, [POSIX](https://wikipedia.org/wiki/POSIX) , and the storage requirements of HPC applications.\n", "content": "## What is HPC?\nHPC systems solve large computational problems fast by aggregating multiple computing resources. HPC drives research and innovation across industries such as healthcare, life sciences, media, entertainment, financial services, and energy. Researchers, scientists, and analysts use HPC systems to perform experiments, run simulations, and evaluate prototypes. HPC workloads such as seismic processing, genomics sequencing, media rendering, and climate modeling generate and access large volumes of data at ever increasing data rates and ever decreasing latencies. High-performance storage and data management are critical building blocks of HPC infrastructure.\n## Storage options for HPC workloads in Google Cloud\nSetting up and operating HPC infrastructure on-premises is expensive, and the infrastructure requires ongoing maintenance. In addition, on-premises infrastructure typically can't be scaled quickly to match changes in demand. Planning, procuring, deploying, and decommissioning hardware on-premises takes considerable time, resulting in delayed addition of HPC resources or underutilized capacity. In the cloud, you can efficiently provision HPC infrastructure that uses the latest technology, and you can scale your capacity on-demand.\nGoogle Cloud and our technology partners offer cost-efficient, flexible, and scalable storage options for deploying HPC infrastructure in the cloud and for augmenting your on-premises HPC infrastructure. Scientists, researchers, and analysts can quickly access additional HPC capacity for their projects when they need it.\nTo deploy an HPC workload in Google Cloud, you can choose from the following storage services and products, depending on the requirements of your workload:\n| Workload type                                               | Recommended storage services and products                                                                                                                                     |\n|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------||\n| Workloads that need low-latency access to data but don't require extreme I/O to shared datasets, and that have limited data sharing between clients.             | Use NFS storage. Choose from the following options: Filestore Zonal with a higher capacity band Google Cloud NetApp Volumes                                                                                                                |\n| Workloads that generate complex, interdependent, and large-scale I/O, such as tightly coupled HPC applications that use the Message-Passing Interface (MPI) for reliable inter-process communication. | Use a parallel file system. Choose from the following options: Parallelstore, a fully-managed parallel file system based on the open source DAOS storage project DDN EXAScaler Cloud, an enterprise version of Lustre Weka Data Platform, an enterprise storage platform supporting multiple file service protocols including full POSIX, NFS, SMB and S3, with full data share-ability across protocols Sycomp Storage Fueled by IBM Spectrum Scale For more information about the workload requirements that parallel file systems can support, see When to use parallel file systems. |\n**Note:** For workloads that don't require low latency or concurrent write access, you can use low-cost [Cloud Storage](https://cloud.google.com/storage) , which supports parallel read access and automatically scales to meet your workload's capacity requirement.\n## When to use parallel file systems\nIn a parallel file system, several clients store and access shared data across multiple networked storage nodes by using parallel I/O paths. Parallel file systems are ideal for tightly coupled HPC workloads such as data-intensive artificial intelligence (AI) workloads and analytics workloads that use [SAS](https://www.sas.com/en_us/solutions/analytics.html) applications. Consider using a parallel file system like Lustre for latency-sensitive HPC workloads that have any of the following requirements:\n- **Tightly coupled data processing** : HPC workloads like weather modeling and seismic exploration need to process data repetitively by using many interdependent jobs that run simultaneously on multiple servers. These processes typically use MPI to exchange data at regular intervals, and they use [checkpointing](https://wikipedia.org/wiki/Application_checkpointing) to recover quickly from failures. Parallel file systems enable interdependent clients to store and access large volumes of shared data concurrently over a low-latency network.\n- **Support for POSIX I/O API and for semantics** : Parallel file systems like Lustre are ideal for workloads that need both the POSIX APIsemantics. A file system's API and its semantics are independent capabilities. For example, NFS supports the POSIX API, which is how applications read and write data by using functions like`open()`,`read()`, and`write()`. But the way NFS coordinates data access between different clients is not the same as POSIX semantics for coordinating data access between different threads on a machine. For example, NFS doesn't support POSIX read-after-write cache consistency between clients; it relies on weak consistency in NFSv3 and [close-to-open consistency](https://man7.org/linux/man-pages/man5/nfs.5.html#DATA_AND_METADATA_COHERENCE) in NFSv4.\n- **Petabytes of capacity** : Parallel file systems can be scaled to multiple petabytes of capacity in a single file system namespace. NetApp Volumes and Filestore Zonal support up to 100 TiB per dataset. Cloud Storage offers low-cost and reliable capacity that scales automatically, but might not meet the data-sharing semantics and low-latency requirements of HPC workloads.\n- **Low latency and high bandwidth** : For HPC workloads that need high-speed access to very large files or to millions of small files, parallel file systems can outperform NFS and object storage. The latency offered by parallel file systems (0.5 ms to 10 ms) is significantly lower than object storage, which can affect the maximum IOPS. In addition, the maximum bandwidth that's supported by parallel file systems can be orders of magnitude higher than in NFS-based systems. For example, DDN EXAScaler on Google Cloud has demonstrated 10+ Tbps read bandwidth, greater than 700 GBps write bandwidth, and 1.9 million file`stat()`calls per second using the [IO500 benchmark](/blog/topics/hpc/google-cloud-ranks-on-io500-benchmark-with-lustre) .\n- **Extreme client** **scaling** : While NFS storage can support thousands of clients, parallel file systems can scale to support concurrent access to shared data from over 10,000 clients.## Examples of tightly coupled HPC applications\nThis section describes examples of tightly coupled HPC applications that need the low-latency and high-throughput storage provided by parallel file systems.\n### AI-enabled molecular modeling\nPharmaceutical research is an expensive and data-intensive process. Modern drug research organizations rely on AI to reduce the cost of research and development, to scale operations efficiently, and to accelerate scientific research. For example, researchers use AI-enabled applications to simulate the interactions between the molecules in a drug and to predict the effect of changes to the compounds in the drug. These applications run on powerful, parallelized GPU processors that load, organize, and analyze an extreme amount of data to complete simulations quickly. Parallel file systems provide the storage IOPS and throughput that's necessary to maximize the performance of AI applications.\n### Credit risk analysis using SAS applications\nFinancial services institutions like mortgage lenders and investment banks need to constantly analyze and monitor the credit-worthiness of their clients and of their investment portfolios. For example, large mortgage lenders collect risk-related data about thousands of potential clients every day. Teams of credit analysts use analytics applications to collaboratively review different parts of the data for each client, such as income, credit history, and spending patterns. The insights from this analysis help the credit analysts make accurate and timely lending recommendations.\nTo accelerate and scale analytics for large datasets, financial services institutions use Grid computing platforms such as [SAS](https://www.sas.com/en_us/solutions/analytics.html) Grid Manager. Parallel file systems like [DDN EXAScaler](https://communities.sas.com/t5/Administration-and-Deployment/EXAScaler-Cloud-by-DDN-A-shared-file-system-to-use-with-SAS-Grid/m-p/743021) on Google Cloud support the high-throughput and low-latency storage requirements of multi-threaded SAS applications.\n### Weather forecasting\nTo predict weather patterns in a given geographic region, meteorologists divide the region into several , and deploy monitoring devices such as ground radars and weather balloons in every cell. These devices observe and measure atmospheric conditions at regular intervals. The devices stream data continuously to a weather-prediction application running in an HPC cluster.\nThe weather-prediction application processes the streamed data by using mathematical models that are based on known physical relationships between the measured weather parameters. A separate job processes the data from each cell in the region. As the application receives new measurements, every job iterates through the latest data for its assigned cell, and exchanges output with the jobs for the other cells in the region. To predict weather patterns reliably, the application needs to store and share terabytes of data that thousands of jobs running in parallel generate and access.\n### CFD for aircraft design\nComputational fluid dynamics (CFD) involves the use of mathematical models, physical laws, and computational logic to simulate the behavior of a gas or liquid around a moving object. When aircraft engineers design the body of an airplane, one of the factors that they consider is aerodynamics. CFD enables designers to quickly simulate the effect of design changes on aerodynamics before investing time and money in building expensive prototypes. After analyzing the results of each simulation run, the designers optimize attributes such as the volume and shape of individual components of the airplane's body, and re-simulate the aerodynamics. CFD enables aircraft designers to collaboratively simulate the effect of hundreds of such design changes quickly.\nTo complete design simulations efficiently, CFD applications need submillisecond access to shared data and the ability to store large volumes of data at speeds of up to 100 GBps.\n## Overview of Lustre and EXAScaler Cloud\n[Lustre](https://www.lustre.org/) is an open source parallel file system that provides high-throughput and low-latency storage for tightly coupled HPC workloads. In addition to standard POSIX mount points in Linux, Lustre supports data and I/O libraries such as [NetCDF](https://www.unidata.ucar.edu/software/netcdf/) , [HDF5](https://www.hdfgroup.org/solutions/hdf5/) , and [MPI-IO](https://wikipedia.org/wiki/Message_Passing_Interface#I.2FO) , enabling parallel I/O for a wide range of application domains. Lustre powers many of the [largest HPC deployments](https://wikipedia.org/wiki/Lustre_(file_system)#Deployments) globally. A Lustre file system has a scalable architecture that contains the following components:\n- A management server (MGS) stores and manages configuration information about one or more Lustre file systems, and provides this information to the other components.\n- Metadata servers (MDS) manage client access to a Lustre file system's namespace, using metadata (for example, directory hierarchy, filenames, and access permissions).\n- Object storage servers (OSS) manage client access to the files stored in a Lustre file system.\n- Lustre client software allows clients to mount the Lustre file system.\nMultiple instances of MDS and OSS can exist in a file system. You can add new MDS and OSS instances when required. For more information about the Lustre file system and how it works, see the [Lustre documentation](https://doc.lustre.org/lustre_manual.xhtml#understandinglustre) .\n[EXAScaler Cloud](https://www.ddn.com/partners/google-cloud-platform/) is an enterprise version of Lustre that's offered by DDN, a Google partner. EXAScaler Cloud is a shared-file solution for high-performance data processing and for managing the large volumes of data required to support AI, HPC, and analytics workloads. EXAScaler Cloud is ideal for deep-learning and inference AI workloads in Google Cloud. You can deploy it in a hybrid-cloud architecture to augment your on-premises HPC capacity. EXAScaler Cloud can also serve as a repository for storing longer-term assets from an on-premises EXAScaler deployment.\n## Overview of Sycomp Storage Fueled by IBM Spectrum Scale\n[Sycomp Storage Fueled by IBM Spectrum Scale in Google Cloud Marketplace](https://console.cloud.google.com/marketplace/product/sycomp/sycomp-storage-fueled-by-ibm-spectrum-scale?project=sycomp-storage) lets you run your high performance computing (HPC), artificial intelligence (AI), machine learning (ML), and big data workloads in Google Cloud. With Sycomp Storage you can concurrently access data from thousands of VMs, reduce costs by automatically managing tiers of storage, and run your application on-premises or in Google Cloud. Sycomp Storage Fueled by IBM Spectrum Scale is available in Cloud Marketplace, can be quickly deployed, and supports access to your data through NFS and the IBM Spectrum Scale client.\nIBM Spectrum Scale is a parallel file system that helps to securely manage large volumes (PBs) of data. The IBM Spectrum Scale parallel file system is well suited for HPC, AI, ML, big data, and other applications that require a POSIX-compliant shared file system. With adaptable storage capacity and performance scaling, Sycomp Storage can support small to large HPC, AI, and ML workloads.\nAfter you deploy a cluster in Google Cloud, you decide how you want to use it. Choose whether you want to use it only in the cloud or in hybrid mode by connecting to an existing on-premises IBM Spectrum Scale cluster.\n## What's next\n- Learn more about [DDN EXAScaler Cloud](/architecture/filers-on-compute-engine#DDN) and [DDN's partnership with Google](https://www.ddn.com/partners/google-cloud-platform/) .\n- Read about the [Google Cloud submission](https://cloud.google.com/blog/topics/hpc/google-cloud-ranks-on-io500-benchmark-with-lustre) that demonstrates a 10+ Tbps, Lustre-based scratch file system on the IO500 ranking of HPC storage systems.\n- [Design and size](/architecture/lustre-architecture) a Lustre file system.\n- [Deploy DDN EXAScaler in Google Cloud](/architecture/lustre-architecture#exascaler_cloud_file_system_deployment) .\n- Learn more about [Lustre](https://www.lustre.org/getting-started-with-lustre/) .\n- Learn more about [Sycomp Storage Fueled by IBM Spectrum Scale](https://cloud.google.com/blog/products/storage-data-transfer/announcing-ibm-spectrum-scale-is-now-available-in-google-cloud) .## Contributors\nAuthor: [Kumar Dhanagopal](https://www.linkedin.com/in/kumardhanagopal) | Cross-Product Solution Developer\nOther contributors:\n- [Barak Epstein](https://www.linkedin.com/in/barakepstein1) | Product Manager\n- [Carlos Boneti](https://www.linkedin.com/in/carlosboneti) | Senior Staff Software Engineer\n- [Dean Hildebrand](https://www.linkedin.com/in/dean) | Technical Director\n- [Sean Derrington](https://www.linkedin.com/in/seanderrington) | Group Outbound Product Manager\n- [Wyatt Gorman](https://www.linkedin.com/in/wyattgorman) | HPC Solutions Manager", "guide": "Cloud Architecture Center"}