{"title": "Apigee - Apigee hybrid Helm migration tool", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Apigee hybrid Helm migration tool\n**    Preview    \u2014 Apigee hybrid Helm migration tool ** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\n**Note:** This preview document is applicable for Apigee hybrid 1.10.4.If you are using Apigee hybrid v1.11, see [Apigee hybrid Helm migration tool](/apigee/docs/hybrid/v1.11/helm-migration) in the Apigee hybrid v1.11 documentation.\n**Warning:** This migration tool is a preview release for Apigee hybrid version 1.10. Do not use it to migrate your production clusters.\nThis migration tool assists in migrating an `apigeectl` -based  hybrid cluster to a Helm-based hybrid cluster.  This tool performs no actual  replacement of any cluster components. It is idempotent and can be run many  times on the same cluster, preparing a subset of components and orgs each  time.\n**Important:** This migration tool must be runrunning the Helm upgrade commands.\nYou can migrate all `apigee` components at one time, and Helm  upgrade operations can be done on a per-component basis after the tool is  run.\nSee [Installing and managing Apigee hybrid with Helm charts](/apigee/docs/hybrid/preview/helm-install) for information about managing hybrid clusters you have migrated to Helm  management with this tool.\n", "content": "## Prerequisites\n- Helm version 3.10+.\n- A working`kubeconfig`file pointing to a cluster with a  working Apigee hybrid 1.10 installation.\n- Permissions to modify the metadata and annotations on the Kubernetes  resources of the hybrid components that you wish to migrate.## Scope\nThis tool supports the following options at run-time:\n- Customization of namespace for`apigee`resources. Default   namespace:`apigee`\n- Migration of selected hybrid components only. Default: all components   are migrated\n- Migration of a single org only\n- Migration of a single env only\n- Migration of a single env-group (`apigee-virtualhost`) only\n- Customization of Helm release names for orgs, envs, and env-groups.## Limitations\n- This tool does not support customizing Helm release names for these hybrid  components:`apigee-operator`,`apigee-datastore`,`apigee-redis`,`apigee-telemetry`, and`apigee-ingress-manager`.\n- Interactive customizations made to the Helm release names for orgs, envs,  and env-groups do not automatically persist between runs. You can edit the  temp file and supply it as an option in later runs.\n- Env and env-group filtering is done by name only. In some cases this   could result in multiple envs and env-groups being migrated on multi-org   clusters.For example, on a multi-org cluster with orgs `org1` and `org2` , if the env `prod` is present in both   orgs, and only `--env=prod` is specified, both envs will be   migrated. If you wish to only migrate a single env, you must also   specify an org filter `--org=org1` or `--org=org2` .## Usage\n### Syntax\n```\napigee-helm-migration-tool [--apigee-namespace=] [--components=] [--dry-run] [--env=org1] [--env-group=org2] [--org=baz] [--kubeconfig=] [-y] [-v] [-f /path/to/releaseNames.yaml]\n```\n### Generated Helm release names\nEvery Helm Chart that is deployed on a cluster needs to have a release name,  which must be unique within a namespace. Helm release names don't have any  naming convention or restriction relative to the chart name. The migration  tool generates unique Helm release names for every component.\n| Chart                                           | Single-org cluster                                        | Multi-org cluster                                        |\n|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| apigee-operator                                         | operator                                           | operator                                           |\n| apigee-datastore                                         | datastore                                          | datastore                                          |\n| apigee-telemetry                                         | telemetry                                          | telemetry                                          |\n| apigee-redis                                          | redis                                           | redis                                           |\n| apigee-ingress-manager                                       | ingress-manager                                         | ingress-manager                                         |\n| apigee-org                                          | ORG_NAME                                           | ORG_NAME                                           |\n| apigee-env                                          | ENV_NAME[-env[-n]](1)                                       | ORG_NAME-ENV_NAME[-env[-n]](1)                                     |\n| apigee-virtualhost (envgroup)                                     | VH_NAME[-env-group[-n]](1)                                      | ORG_NAME-VH_NAME[-env-group[-n]](1)                                    |\n| (1) Names are suffixed with -env or -env-group if the generated name conflicts with another generated name. They are further suffixed with -1 or -2 \u2026 if they still conflict. | (1) Names are suffixed with -env or -env-group if the generated name conflicts with another generated name. They are further suffixed with -1 or -2 \u2026 if they still conflict. | (1) Names are suffixed with -env or -env-group if the generated name conflicts with another generated name. They are further suffixed with -1 or -2 \u2026 if they still conflict. |\n### Customizing Helm release names\nThe migration tool allows interactive customization of Helm release names.  If you want to customize the Helm release names non-interactively:\n- Run the tool once and exit at the first prompt to create a temporary file  containing the auto-generated release names. You should see a line like:```\nINFO: 21:32:56 using temp file for release names: \u00a0/tmp/apigee-helm-migration-1229129207-releaseNames\n```\n- Move or copy and then edit this file. You can pass this edited file in   with the `-f` option when you [run the migration tool](#directions) . The auto-generated   release names look like:```\norgs:\u00a0 example-apigee-org:\u00a0 \u00a0 helmReleaseName: example-apigee-org\u00a0 \u00a0 envs:\u00a0 \u00a0 \u00a0 prod:\u00a0 \u00a0 \u00a0 \u00a0 helmReleaseName: prod\u00a0 \u00a0 envGroups:\u00a0 \u00a0 \u00a0 prod-envgroup:\u00a0 \u00a0 \u00a0 \u00a0 helmReleaseName: prod-envgroup\n```To customize the Helm release names for an org, env, or envgroup, edit   the `helmReleaseName` field of that object. For example, to   rename the org release to `custom-org` , the env release to `custom-env` , and the envgroup release to `custom-group` , the resulting file looks like:```\norgs:\u00a0 example-apigee-org:\u00a0 \u00a0 helmReleaseName: custom-org\u00a0 \u00a0 envs:\u00a0 \u00a0 \u00a0 prod:\u00a0 \u00a0 \u00a0 \u00a0 helmReleaseName: custom-env\u00a0 \u00a0 envGroups:\u00a0 \u00a0 \u00a0 prod-envgroup:\u00a0 \u00a0 \u00a0 \u00a0 helmReleaseName: custom-group\n```\n### Using custom namespaces\nApigee hybrid runs in two Kubernetes namespaces:\n- `apigee-system`: The`apigee-operator`component always runs in the`apigee-system`namespace. The Helm migration tool will update the`apigee-operator`component in the`apigee-system`namespace regardless  of what you specify with the`--apigee-namespace`flag.\n- `apigee`: All hybrid components except`apigee-operator`run in this  namespace.`apigee`is the default name. You can use any custom namespace for these  components.If you use a custom namespace, you must specify the it with the `--apigee-namespace` `` flag when you run the  Helm migration tool.You must also add the `namespace:` `` top-level property to your overrides file.\n### Directions\n- Locate the migration tool.The migration tool is packaged with `apigeectl` starting at version 1.10.3, under `/tools/migration/` .\n- Extract the compressed files using one of the following commands:- **Mac:** ```\ntar -xzf apigee-helm-migration_1.0.2_mac_64.tar.gz\n```\n- **Linux:** ```\ntar -xzf apigee-helm-migration_1.0.2_linux_64.tar.gz\n```\n- **Windows:** ```\ntar -xzf apigee-helm-migration_1.0.2_windows_64.zip\n```\n- Run the migration tool. If the default options are acceptable, it is  sufficient to run the tool without any arguments, and approve the prompt  if the generated helm release names are satisfactory. Some example  scenarios are given below:- A simple installation, using the default `kubeconfig` ( `~/.kube/config` ), default `apigee` namespace, and default Helm release names. **The following command should be sufficient for most, if not all,   installations.** Helm upgrade operations can be done on a    per-component basis after the tool is run.```\n./apigee-helm-migration-tool\n```\n- Migrating all components using a custom namespace:```\n./apigee-helm-migration-tool --apigee-namespace my_custom_namespace\n```\n- Migrating only the `operator` and `datastore` components:```\n./apigee-helm-migration-tool --components operator,datastore\n``````\n\u00a0 INFO: 00:22:48 using kubeconfig file \u00a0/usr/local/google/home/example/.kube/config\u00a0 INFO: 00:22:48 namespace for apigee resources:\u00a0 INFO: 00:22:48 \u00a0 \u00a0 \u00a0 \u00a0 apigee\u00a0 INFO: 00:22:48 processing all organizations in cluster\u00a0 INFO: 00:22:48 Components to migrate:\u00a0 INFO: 00:22:48 \u00a0 \u00a0 \u00a0 \u00a0 operator,datastore\u00a0 INFO: 00:22:48 dry-run:\u00a0 INFO: 00:22:48 \u00a0 \u00a0 \u00a0 \u00a0 false\u00a0 Continue with patching apigee resources for Helm migration? [y/n]: y\u00a0 INFO: 00:22:52 Processing component: \u00a0operator\u00a0 INFO: 00:22:54 Processing component: \u00a0datastore\u00a0 INFO: 00:22:55 Migration successful!\n```\n- Pointing to a specific `kubeconfig` file and specifying a    different name for the `apigee` namespace.```\n./apigee-helm-migration-tool --kubeconfig /abs/path/to/kubeconf --namespace org1_namespace\n```\n- Migrating all components, but only a single org:```\n./apigee-helm-migration-tool --org=some-test-org\n```\nThe following shows an example output from a successful migration:```\nINFO: 21:32:55 using kubeconfig file \u00a0/usr/local/google/home/example/.kube/configINFO: 21:32:55 namespace for apigee resources:INFO: 21:32:55 \u00a0 apigeeINFO: 21:32:55 processing all organizations in clusterINFO: 21:32:55 processing all componentsINFO: 21:32:55 dry-run:INFO: 21:32:55 \u00a0 falseINFO: 21:32:55 cluster Apigee information:INFO: 21:32:55 Apigee Organizations found:INFO: 21:32:56 \u00a0 example-hybrid-devINFO: 21:32:56 Apigee Environments found (org: env):INFO: 21:32:56 \u00a0 example-hybrid-dev : prodINFO: 21:32:56 Apigee EnvGroups(apigeerouteconfigs) found (org: envGroup):INFO: 21:32:56 \u00a0 example-hybrid-dev : prod-envgroupINFO: 21:32:56 using temp file for release names: \u00a0/tmp/apigee-helm-migration-1229129207-releaseNamesINFO: 21:32:56 Helm release names for Apigee orgs/envs/envgroups:orgs:example-hybrid-dev:helmReleaseName: example-hybrid-devenvs:\u00a0 prod:\u00a0 \u00a0 helmReleaseName: prodenvGroups:\u00a0 prod-envgroup:\u00a0 \u00a0 helmReleaseName: prod-envgroupMake changes to the release names for Apigee orgs/env/envgroups? [y/n]: nContinue with patching apigee resources for Helm migration? [y/n]: yINFO: 21:32:59 Processing component: \u00a0operatorINFO: 21:33:01 Processing component: \u00a0datastoreINFO: 21:33:01 Processing component: \u00a0redisINFO: 21:33:02 Processing component: \u00a0ingress-managerINFO: 21:33:02 Processing component: \u00a0telemetryINFO: 21:33:03 Processing component: \u00a0orgsINFO: 21:33:05 Processing component: \u00a0envsINFO: 21:33:06 Processing component: \u00a0env-groupsINFO: 21:33:07 Migration successful!\n```Potential errors:- **Error parsing release names file:** Check the passed in    release names file.\n- **Resources not found:** Check that Apigee hybrid is fully    installed, and you have permissions to access the`apigee`resources.\n### Next step\nContinue your installation of the Apigee hybrid Helm charts with the instructions in [Installing and managing Apigee hybrid with Helm charts](/apigee/docs/hybrid/preview/helm-install) .\n**Important: ** When following the instructions for your migrated cluster, you must omit the`\u2011\u2011atomic`flag from any Helm commands to avoid accidentally deleting resources if the`helm upgrade`command fails.\n## Output of -help\n```\n./apigee-helm-migration-tool --help\n```\n```\nUsage of ./apigee-helm-migration-tool:\u00a0 -apigee-namespace string\u00a0 \u00a0 \u00a0 namespace used for apigee resources (default \"apigee\")\u00a0 -components string\u00a0 \u00a0 \u00a0 CSV of components to migrate. If empty then all components are migrated. Valid values are: operator,datastore,redis,ingress-manager,telemetry,orgs,envs,env-groups\u00a0 -dry-run\u00a0 \u00a0 \u00a0 perform a dry-run\u00a0 -env string\u00a0 \u00a0 \u00a0 restrict migration to a singular supplied env. If empty then all envs detected in the cluster are migrated\u00a0 -env-group string\u00a0 \u00a0 \u00a0 restrict migration to a singular supplied envGroup. If empty then all envGroups detected in the cluster are migrated\u00a0 -kubeconfig string\u00a0 \u00a0 \u00a0 (optional) absolute path to the kubeconfig file (default \"/usr/local/google/home/example/.kube/config\")\u00a0 -org string\u00a0 \u00a0 \u00a0 restrict migration to a singular supplied org. If empty then all orgs detected in the cluster are migrated\u00a0 -v \u00a0 \u00a0Increased logging verbosity\u00a0 -y \u00a0 \u00a0don't prompt for confirmation or for configuration of Helm releases\n```", "guide": "Apigee"}