{"title": "Compute Engine - Resource-based committed use discounts", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Resource-based committed use discounts\nThis document describes information about Compute Engine's resource-based commitments, how to purchase them and the resulting CUDs. To learn about Compute Engine flexible CUDs, see [Flexible CUDs](/compute/docs/instances/committed-use-discounts-overview#spend_based) .\nResource-based commitments are ideal for predictable and steady state usage. Compute Engine lets you purchase the following categories of [resource-based commitments](/docs/cuds#resource_based_commitments) :\n- **Hardware commitments** . You can purchase hardware commitments for resources like vCPUs, memory, GPUs, Local SSD disks, and sole tenant nodes. For more information, see [Purchase commitments without attached reservations](#purchasecommitment) and [Purchase commitments with attached reservations](#purchasecommitmentgpuslocalssd) .\n- **Software license commitments** . You can purchase license commitments for applicable premium operating system (OS) licenses. For more information, see [Purchase commitments for licenses](#purchaselicensecommitment) .\nCommitments for hardware resources are separate from commitments for licenses. You can purchase both categories of commitments for a VM instance, but you cannot purchase a single commitment that covers both hardware resources and licenses.\nCommitted use discount [recommendations](#recommendations) give you opportunities to optimize your compute costs by analyzing your VM spending trends with and without a committed use discount contract. By comparing these numbers, you can see how much you can save each month with a committed use contract. To learn more about how commitment recommendations work, you can also review [Understand commitment recommendations](/billing/docs/how-to/cud-analysis-resource-based#understanding_commitment_recommendations) .\nCommitted use discounts work on most Compute Engine machine types, including predefined and custom machine types. Committed use discounts are simple and flexible, and require no upfront costs. Discounts apply to the aggregate number of vCPUs, memory, GPUs, and Local SSD disks within a region, so they are not affected by changes to your instance's machine setup.\nFor machine types that support per VM Tier_1 networking performance, the 50, 75, and 100 Gbps higher bandwidth SKUs are excluded from discounts.\nF1-micro and g1-small shared-core machines are not eligible for committed use discounts.\n**Note:** Purchasing a committed use discount does not affect your VM configurations in any way.\n", "content": "## Before you begin\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\nTo use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```## How committed use discounts work\nWhen you purchase a committed use contract, you purchase Compute Engine resources\u2014such as vCPUs, memory, GPUs, Local SSD disks, and sole-tenant nodes\u2014at a discounted price in return for committing to paying for those resources for 1 year or 3 years. The discount is up to 57% for most resources like machine types or GPUs. The discount is up to 70% for memory-optimized machine types. For committed use prices for different machine types, see [VM instances pricing](/compute/vm-instance-pricing#general-purpose_machine_type_family) .\nDuring your commitment's term, you automatically start receiving CUDs on eligible resource usage in your project that matches the resource types, machine type, and region specified in your commitment. You continue to receive these CUDs for your eligible resource usage until your commitment expires.\nCompute Engine [maintains a lien on your project](/resource-manager/docs/project-liens) for each region in your project where you purchase a commitment. When you purchase a new commitment for any region in your project, Compute Engine associates the lien for that region with the newly created commitment.\nYou can't cancel a commitment after you purchase it. Your commitment expires at the end of its specified term duration of 1 or 3 years. However, you can enable [auto-renewal](/compute/docs/instances/renew-commitments-automatically) on your commitment to ensure that it automatically renews for a new term.\n### Commitment status\nYour commitment can have one of the following statuses:\n- `CREATING`: the commitment is being created.\n- `NOT_YET_ACTIVE` or `PENDING` : the commitment has been created but is not yet active. Compute Engine creates your commitments with this status.- If you're using the Google Cloud CLI or the REST API to purchase your commitment, then this status value shows as`NOT_YET_ACTIVE`.\n- If you're using the Google Cloud console to purchase your commitment, then this status value shows as`PENDING`.\n- `ACTIVE` : the commitment is active.\n- `EXPIRED` : the commitment has expired. Compute Engine reserves the right to remove expired commitments that are older than 210 days from the expiration date.\n- `CANCELED` : Compute Engine canceled the commitment. Compute Engine changes the status of your commitments to `CANCELED` when you combine them to create a new [merged commitment](/compute/docs/instances/merge-and-split-commitments) .\nBetween the time of your commitment purchase and its activation time, the status of your commitment remains as `NOT_YET_ACTIVE` (or as `PENDING` on the Google Cloud console). After activation, the status of your commitment changes to `ACTIVE` . For example, suppose you purchase your commitment on January 20th at 10:00 PM US and Canadian Pacific Time (UTC-8 or UTC-7). Compute Engine creates your commitment immediately with its status as `NOT_YET_ACTIVE` . However, your commitment becomes `ACTIVE` only on January 21st at 12:00 AM US and Canadian Pacific Time (UTC-8 or UTC-7).\n### Efficient usage of your commitments\nIf you have just a few projects, you can purchase commitments just for the specific resources you plan to use. For example, if you purchase a commitment for 8 cores, and you run 24 cores during the month, you will receive committed use discounts for 8 cores. The other 16 cores will be billed at standard, non-committed use rates. Keep in mind that after you purchase a set amount of commitments, you're billed for those commitments monthly, even if you don't use them. For example, if you purchase commitments for 8 cores, you're billed the committed use rates for those 8 cores for the whole month, even if you might have only run these cores for a part of the month. It is to your advantage to purchase commitments only in increments you know you will use.\nCommitments can't be stacked for burst scenarios. For example, if you purchased 10 cores for a month and then ran 20 cores for half the month, your commitments won't apply for the full 20 cores just because their usage was across only half the month.\n### Usage overage\nAny hourly resource usage that is not covered by your commitments is charged based on the on-demand rates and is eligible for any applicable [sustained use discounts (SUDs)](/compute/docs/sustained-use-discounts) . For example, suppose you run an `n2-standard-2` for a portion of the month and run an `n2-standard-8` for another portion of the same month. Compute Engine combines the two and applies SUDs for the portion not covered by committed use discounts because both machine types belong to the `n2-standard` family.\n## Combine reservations with commitments\nA commitment provides a 1- or 3-year discounted price agreement, but it does not reserve capacity in a specific zone. A reservation ensures that capacity is held in a specific zone even if the reserved VMs are not running. To get zonal resources at discounted prices and also ensure that capacity is reserved for them, you must both purchase commitments and create reservations for those zonal resources.\nYou can also attach reservations to your resource-based commitments to ensure that the reservations are specific to those commitments. When you commit to GPU or Local SSD resources, you must also reserve those resources and attach those reservations to your commitment.\nFor more information, see [Combine reservations with committed use discounts](/compute/docs/instances/reservations-with-commitments) .\n## Share committed use discounts across projects\nBy default, committed use discounts apply at the project level and you receive the applicable committed use discounts only for the project in which you purchase the commitment. If you move the project for which you purchased your commitment to a different Cloud Billing account, then you continue to receive the applicable committed use discounts for that project under the new Cloud Billing account.\nHowever, Compute Engine lets you share discounts for hardware commitments across multiple projects that share the same Cloud Billing account. Sharing your committed use discounts for hardware commitments across all your projects reduces the overhead of managing discounts on a per-project basis, and maximizes your savings by pooling all your discounts across your projects' resource usage.\n**Note:** Software license commitments are scoped to the project that you purchase them for. You can't share the discount for software license commitments.\nIf you have multiple projects that share the same Cloud Billing account, you can [enable committed use discount sharing](#turning_on_committed_use_discount_sharing) so all of your projects within that Cloud Billing account share all of your committed use discount contracts.\nFor example, you purchase two commitments for 80 cores each (a total of 160 cores) and you run 200 cores during the month across different projects in your Cloud Billing account. If you've enabled committed use discount sharing for your Cloud Billing account, then you receive the applicable committed use discounts for 160 of those 200 cores that are used across the projects in that Cloud Billing account. The additional 40 cores are billed at on-demand, non-committed use rates. After you purchase your commitments, you're billed for your committed resources monthly, throughout the commitment time period, even if you don't use the resources. See [Understand discount sharing](/billing/docs/how-to/cud-analysis-resource-based#understanding_discount_sharing) for cost-saving utilization recommendations.\n**Note:** Committed use discounts don't differentiate between custom machine types and predefined machine types. The discount will be spread proportionally across all projects under the same Cloud Billing account. See [Attribution when using custom machine type SKUs](/billing/docs/how-to/cud-analysis-resource-based#attribution_when_using_custom_machine_type_skus) for additional information.\nCommitted use discounts are subject to Google Cloud [commitment-based pricing and billing](/terms/service-terms#20-cloud-platform-commitment-based-pricing-and-billing) . By purchasing a committed use discount, you agree to these terms.\n### Use attribution to allocate discounts\nAttribution refers to how your committed use discounts are allocated across your projects. These allocations are reflected in Cloud Billing cost management interfaces, such as the [usage cost export](/docs/cuds-attribution#view-attribution-in-exported-data) or the [Google Cloud console](/docs/cuds-attribution#view-attribution-in-reports) .\nAttribution applies only when discount sharing is enabled. You can choose the type of attribution you want to use before you turn on discount sharing, and then activate the attribution configuration when you enable discount sharing.\nCompute Engine commitments use [proportional attribution](/docs/cuds-attribution#type-proportional%22) by default. Proportional attribution commitments are applied to the projects according to the amount of the total eligible usage consumed by each project. For example, if project A consumed $75 worth of usage and project B consumed $25, project A would be covered by up to 75% of available credit and project B would be covered by up to 25%.\nAlternatively, you can choose [prioritized attribution](/docs/cuds-attribution#type-prioritized%22) for your Compute Engine commitments based on the usage you specify. Any remaining unprioritized commitments are applied proportionally to the eligible usage in your remaining projects. The total amount of the allotments cannot exceed the commitment amount purchased.\n**Preview:** You can prioritize attribution for multiple projects by grouping projects in a folder. Credits are applied proportionally across the projects in the folder. To request access to prioritized attribution by folders, [complete the interest form](https://docs.google.com/forms/d/e/1FAIpQLSfsfMCzLzRHbawuk7PSQOxJEx2U8j_9daP_faomqv5VBA5UXg/viewform?resourcekey=0-_PZOCbJeTc_6NiR2_8GlgA) .\nTo choose proportional or prioritized attribution for your Compute Engine commitments, see [choose attribution for resource-based commitments](/docs/cuds-attribution#choose-attribution-resource-based%22) .\n## Specifications\n- You can only purchase resource-based commitments for resources in a specific region if you have quota available in that region for both of the following:- Commitments\n- Committed resources (with the exception of memory)\nFor more information, see [Quotas for commitments and committed resources](#quota) .\n- Commitments must be purchased on a per-region basis.\n- To use the gcloud CLI to manage commitments, you must be running `gcloud` version 147.0.0 or later. To update the gcloud CLI to the latest version:```\ngcloud components update\n```To check the version of the gcloud CLI you are running:```\ngcloud version\n```## Restrictions\n- Projects that are in the free tier period with free tier credit and projects that do not have any payment history do not qualify for committed use discounts.\n- You can purchase commitments only on a per-region basis.\n- You can't change the project for which you purchase a commitment. If you want to share the discount with multiple projects, [enable discount sharing](#turning_on_committed_use_discount_sharing) . **Note:** If you move the project for which you purchased your commitments to a different Cloud Billing account, then you continue to receive the applicable committed use discounts for that project under the new Cloud Billing account. [Learn about changing the Cloud Billing account for projects](/billing/docs/how-to/modify-project) .\n- For commitments shared across projects under one Cloud Billing account: If any part of the commitment is unutilized, the remaining commitment charge remains in the project that purchased that portion of the commitment.\n- Committed use discounts do not apply to [preemptible VM instances](/compute/docs/instances/create-start-preemptible-instance) , [N1 shared-core machine types](/compute/docs/machine-types#sharedcore) , or [extended memory](/compute/docs/instances/creating-instance-with-custom-machine-type#extendedmemory) .\n- For committed use discounted pricing for GPUs and Local SSD disks, you must reserve your resources and [attach those reservations to your commitment](#purchasecommitmentgpuslocalssd) .\n- Committed use discount prices are independent of on-demand pricing. Any fluctuation in on-demand pricing would not necessarily be reflected in committed use discounts.\n- If a reservation is attached to a committed use discount, the reservation can't be deleted for the duration of the commitment.\n- You can only buy a 1-year commitment on K80 GPUs.## Pricing\nYou're billed monthly for your commitment and must pay your monthly commitment fee even if you don't use all of your committed resources. Your commitment fee is the sum of the discounted prices of all your committed resources. Compute Engine calculates the discounted price of each resource by using its prevailing on-demand price on the day your commitment becomes active. Your monthly commitment fee and the discounted prices for your resources stay the same until the end of your commitment term, even if the on-demand prices change.\n**Note:** If you merge or split your commitments, then the discounted prices for your committed resources might change on the day your merged or split commitments become active.\nThe discounted pricing (also referred to as CUD pricing) for VM instances, with or without GPUs and Local SSD disks, differs depending on the region. For current rates, see [VM instance pricing](/compute/vm-instance-pricing) .\nIf you move the project for which you purchased commitments to a different Cloud Billing account, then you continue to receive committed use discounts for that project under the new Cloud Billing account. [Learn about changing the Cloud Billing account for a project](/billing/docs/how-to/modify-project#change_the_billing_account_for_a_project) .\n## Commitment types\nYou can purchase commitments for the following resources.\n| Commitment types      | Resources for which you can purchase discounts | Applicable to the following resource types                        |\n|:-------------------------------------|:-------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------|\n| General purpose E2 commitments  | vCPUs Memory          | All E2 machine types                              |\n| General purpose N2 commitments  | vCPUs Memory Local SSD       | All N2 machine types All N2 sole-tenant node types                      |\n| General purpose N2D commitments  | vCPUs Memory Local SSD       | All N2D machine types All N2D sole-tenant node types                      |\n| General purpose C3 commitments  | vCPUs Memory Local SSD       | All C3 machine types All C3 sole-tenant node types                      |\n| General purpose C3D commitments  | vCPUs Memory Local SSD       | All C3D machine types All C3D sole-tenant node types                      |\n| General purpose Tau T2D commitments | vCPUs Memory          | Standard Tau T2D machine types                           |\n| General purpose N1 commitments  | vCPUs Memory GPUs Local SSD      | All N1 machine types, excluding shared-core. All N1 sole-tenant node types GPUs: NVIDIA T4 NVIDIA V100 NVIDIA P100 NVIDIA P4 NVIDIA K80 |\n| Compute-optimized H3 commitments  | vCPUs Memory          | All H3 machine types                              |\n| Compute-optimized C2 commitments  | vCPUs Memory Local SSD       | All C2 machine types All C2 sole-tenant node types                      |\n| Compute-optimized C2D commitments | vCPUs Memory Local SSD       | All C2D machine types                             |\n| Memory-optimized M1/M2 commitments | vCPUs Memory Local SSD       | All M1 and M2 machine types All M1 and M2 sole-tenant node types                   |\n| Memory-optimized M3 commitments  | vCPUs Memory Local SSD       | All M3 machine types                              |\n| Accelerator-optimized A2 commitments | vCPUs Memory GPUs Local SSD      | All A2 machine types GPUs: NVIDIA A100                         |\n| Accelerator-optimized A3 commitments | vCPUs Memory GPUs Local SSD      | All A3 machine types GPUs: NVIDIA H100                         |\n| Accelerator-optimized G2 commitments | vCPUs Memory GPUs Local SSD      | All G2 machine types All G2 sole-tenant node types GPUs: NVIDIA L4                  |\nYou can't purchase commitments for `f1-micro` , or `g1-small` machine types or for the sole-tenant premium charge.\n### Commitments for machine types\nPurchase the appropriate commitment type for the machine types you are using.\nDiscounts for general-purpose commitments are applied to resources in the following order:\n- E2, N2, N2D, or N1 custom machine types, depending on which commitment you purchase\n- Sole-tenant nodes\n- E2, N2, N2D, C3, C3D, Tau T2D, or N1 predefined machine types, depending on which commitment you purchase\nWhen you purchase general-purpose commitments, you pick which machine series the commitment applies to. For example, if you purchase general-purpose E2 commitments, they apply to only E2 machine types. Similarly, if you purchase general-purpose N2, N2D, C3, C3D, Tau T2D, or N1 commitments, the commitments never overlap.\nFor example, assume you have a region with the following mix:\n- 10 N2 custom machine type vCPUs\n- 30 GB of custom machine type memory\n- 2`n2-standard-4`predefined machine types\nYou purchase N2 commitments for 15 vCPUs and 13.5 GB of memory for committed use. The committed use discounts would be applied first to the N2 custom machine types, and any remaining discounts would be applied to the N2 predefined machine types. In this case, all 10 vCPUs of the N2 custom machine types would be charged at committed use prices, and 13.5 GB of custom machine type memory would be charged at committed use prices.\nFinally, the remaining 5 vCPUs of committed use would apply to 5 random vCPUs across the two `n2-standard-4 machine` types. Any resources that aren't covered by committed use discounts would qualify for sustained use discounts.\n**Note:** Commitments are aggregated by machine series. If you are unsure of how many commitments to purchase, you might want to purchase a smaller number of commitments, then add more as you need them. For example, you can purchase multiple contracts for 10 vCPUs and zero memory, then purchase separate contracts for additional memory.\nTo purchase a commitment for general-purpose machine types, see [Purchase commitments without attached reservations](#purchasecommitment) .\nMemory-optimized committed use discounts are available at two levels. One level applies to both M1 and M2 machine types. The other level applies to only [M3 machine types](/compute/docs/memory-optimized-machines#m3_machine_types) . You cannot use the same committed use discount for all memory-optimized machine types.\nQuota for these committed use discounts is separate. If you want to use a committed use discount for an M1 machine type, you must have quota for an M1 machine. The same is true for M2 and M3\u2013you must have quota for the committed use discount.\nIf you intend to use memory-optimized machine types, purchase memory-optimized commitments. To purchase a commitment for memory-optimized machine types, see [Purchase commitments without attached reservations](#purchasecommitment) .\nIf you intend to use compute-optimized machine types, purchase compute-optimized commitments. To purchase a commitment:\n- For C2 and C2D compute-optimized machine types, see [Purchase commitments without attached reservations](#purchasecommitment) .\n- For H3 compute-optimized machine types, see [Purchase commitments with attached reservations](#purchasecommitmentgpuslocalssd) .If you intend to use accelerator-optimized machine types, purchase a commitment for A3, A2, or G2 machine types. To purchase a commitment for A3, A2, or G2 machine types, see [Purchase commitments with attached reservations](#purchasecommitmentgpuslocalssd) .\n### Commitments for GPUs and Local SSD resources\nTo purchase commitments for GPUs, Local SSD disks, or both you must also reserve the resources and attach the reservations to your commitment. Reserving these resources is required to ensure that the resources are always available for you (whether you use them or not). There are no additional charges for reserving the resources.\nYou must purchase commitments by specific GPU types. For example, you can purchase GPUs for either NVIDIA P100s or NVIDIA V100s, but you can't purchase commitments for NVIDIA P100 GPUs and apply them to other GPU types.\nTo purchase a commitment for GPUs, Local SSD disks, or both, see [Purchase commitments with attached reservations](#purchasecommitmentgpuslocalssd) in this document.\nTo learn more about commitments with attached reservations, see [Attach reservations to resource-based commitments](/compute/docs/instances/reservations-with-commitments#attach-reservations-to-resource-cuds) .\n## Quotas for commitments and committed resources\nYou can only purchase resource-based commitments for resources in a specific region if you have quota available in that region for both of the following:\n- Commitments\n- Committed resources (with the exception of memory)\nSpecifically, if you want to purchase commitments for any vCPUs, GPUs, or Local SSD disks, then you need to have quota available both for commitments and for those specific committed SKUs in the region where you want to purchase the commitment. There is no quota on memory, so you don't need to have separate quota for committed memory to purchase a commitments for memory.\nFor example, to purchase 5 commitments that cover 32 vCPUs of general-purpose N1 machine type, 16\u00a0GB memory, 4 NVIDIA P4 GPUs, and 2 Local SSD disks in `us-central1` region, you must have quota for each of the following:\n- Five commitments in`us-central1`\n- 32 committed N1 vCPUs in`us-central1`\n- Four committed NVIDIA P4 GPUs in`us-central1`\n- 750\u00a0GB (or 2 Local SSD disks) of committed Local SSD disk space in`us-central1`\n**Note:** If your project is still in the free tier period with free tier credit remaining, or if your project does not have payment history, it does not qualify for committed use discounts. This means that the project is not granted quota to create commitments.\n### Quota limits\nBy default, Compute Engine offers a specific amount of commitment quota for each type of committed resource. These quota limits determine the number of commitments you can purchase and the amount of resources you can commit to. To learn how to view the current quota limits and quota usage values for your commitments and committed resources, see [View quotas in the Google Cloud console](/docs/quotas/view-manage#viewing_your_quota_console) .\nIf you consistently pay for a very high amount of committed vCPUs for your projects across different regions, then you might be eligible for unlimited quota on your committed vCPUs for all machine types (except for memory-optimized machine types) in all regions.\nIf you use up all your commitment quota, you won't be able to purchase new commitments. Likewise, if you exhaust your committed resource quota, then you won't be able to purchase a new commitment for that resource even if you have commitment quota available. For example, if you used up all of your commitment quota, then the server returns the following error when you make a commitment purchase request:\n```\n\"Quota 'COMMITMENTS' exceeded. Limit: 0.0\"\n```\n### Increase quota limits\nIf you don't have enough quota for your commitments or your committed resources, you can always request for a quota increase from the [Quotas page](https://console.cloud.google.com/iam-admin/quotas) . You can request for quota increases at any time. To learn how to submit a request to increase quota limits for your resources, see [Request a higher quota limit](/docs/quotas/view-manage#requesting_higher_quota) .\nFor example, consider a scenario where you purchased two commitments for a total of four `NVIDIA V100` GPUs in `us-central1` and met your quota limits. region. Suppose you want to purchase two new commitments for two `NVIDIA V100 GPUs` each, in the same region, you must do the following:\n- Submit a new quota request to increase your`Committed NVIDIA V100 GPUs`quota in`us-central1`to the new maximum number (eight) that you want.\n- Submit a new quota request to increase your `Commitments` quota in `us-central1` to match the new maximum number (four) that you want.Wait for your requests to be approved and closed. After your requests are approved, your commitment and committed GPU quotas in `us-central1` increase to match your new needs. You can then purchase your new commitments.\nIf you place a request for an increase in quota limit for a resource that already has unlimited quota by default, then the quota value for that resource remains unlimited and you are notified that your requested limit is below the approved limit.\n### Set a cap for quota limits\nYou can set a cap on the quota value for your committed resources by creating a consumer quota override. For resources that have unlimited quota by default, creating a consumer quota override decreases the quota value. To return the default quota to its unlimited value, you must remove the consumer override that was set for your committed SKUs. For more information, see [Creating a consumer quota override](/service-usage/docs/manage-quota#create_consumer_quota_override) and [Deleting a consumer quota override](/service-usage/docs/manage-quota#delete_consumer_quota_override) .\nTo learn more about how to manage quotas for your resources, see [View and manage quotas](/docs/quotas/view-manage) .\n## Purchase commitments without attached reservations\nYou can purchase commitments for vCPUs, memory, or both without attaching any reservations for those resources. You can purchase these commitments using the Google Cloud console, the gcloud CLI, or the API.\nTo learn more about commitments with attached reservations, see [Attach reservations to resource-based commitments](/compute/docs/instances/reservations-with-commitments#attach-reservations-to-resource-cuds)\nTo purchase commitments for GPUs, Local SSDs disks, or both, see [Purchase commitments with attached reservations](#purchasecommitmentgpuslocalssd) .\nBy default, project owners have permission to purchase committed use discount contracts. However, it's possible for owners to create custom roles that include or exclude certain users. Read about [access control](/compute/docs/access) to ensure you have permission to purchase a committed use discount contract.\nAfter you purchase a commitment, your commitment becomes active on the following day at 12 AM US and Canadian Pacific Time (UTC-8, or UTC-7 during daylight saving time). Compute Engine [maintains a lien on your project](/resource-manager/docs/project-liens) for each region in your project where you purchase a commitment. When you purchase a new commitment for any region in your project, Compute Engine associates the lien for that region with the newly created commitment.\nBetween the time of your commitment purchase and its activation time, the status of your commitment remains as `NOT_YET_ACTIVE` (or as `PENDING` on the Google Cloud console). After activation, the status of your commitment changes to `ACTIVE` . For example, suppose you purchase your commitment on January 20th at 10:00 PM US and Canadian Pacific Time (UTC-8 or UTC-7). Compute Engine creates your commitment immediately with its status as `NOT_YET_ACTIVE` . However, your commitment becomes `ACTIVE` only on January 21st at 12:00 AM US and Canadian Pacific Time (UTC-8 or UTC-7).\nThe discounts are automatically applied to applicable instances in the region you specified, and to the projects in which those discounts are purchased.\n**Important:** After you purchase a commitment, you can't cancel it. If you change the Cloud Billing account for the project associated with the commitment, the scope of your [attribution and discount sharing settings](/docs/cuds-attribution) changes to projects in the new Cloud Billing account. If you had discount sharing enabled in the old Cloud Billing account, the projects in the old Cloud Billing account are no longer in the scope of the discount sharing settings.\nBefore you purchase a commitment using the Google Cloud console, select the project that you want to use to purchase the commitment. If discount sharing is enabled for a Cloud Billing account, you can purchase the commitment using any project from that Cloud Billing account. After you select the project, perform the following steps:- In the Google Cloud console, go to the **Committed use discounts** page. [Go to Committed use discounts](https://console.cloud.google.com/compute/commitments) \n- To purchase a new commitment, click **Purchase commitment** .\n- Name your commitment.\n- Choose the region where you want it to apply.\n- Choose the **Commitment type** :- **General-Purpose E2** for E2 machine type resources\n- **General-Purpose N2** for N2 machine type resources\n- **General-Purpose N2D** for N2D machine type resources\n- **General-Purpose C3** for C3 machine type resources\n- **General-Purpose C3D** for C3D machine type resources\n- **General-Purpose T2D** for Tau T2D machine type resources\n- **General-Purpose N1** for N1 machine type resources\n- **Compute-optimized C2** for C2 machine type resources\n- **Compute-optimized C2D** for C2D machine type resources\n- **Memory-optimized M1/M2** for M1 and M2 machine type resources\n- **Memory-optimized M3** for M3 machine type resources\n- **Accelerator-optimized A2** for A2 machine type resources\n- **Accelerator-optimized A3** for A3 machine type resources\n- **Graphics-optimized G2** for G2 machine type resources\n- Choose a commitment **Duration** of 1 or 3 years.\n- Enter the quantity of **Cores** or **Memory** that you want to purchase. There is no lower limit, the number can be zero. The quantity for cores must be entered as a whole number equal to or greater than zero. Memory can be purchased in increments of 0.25 GB.\n- Read the [terms of purchase](/terms/service-terms#20-cloud-platform-commitment-based-pricing-and-billing) .\n- Click the **Purchase** button to purchase the commitment.\nUsing the gcloud CLI, run the [gcloud compute commitments create command](/sdk/gcloud/reference/compute/commitments/create) :\n```\ngcloud compute commitments create COMMITMENT_NAME \\\u00a0 \u00a0 --region REGION \\\u00a0 \u00a0 --project PROJECT_ID \\\u00a0 \u00a0 --resources vcpu=NUMBER_VCPUS,memory=MEMORY \\\u00a0 \u00a0 --plan DURATION \\\u00a0 \u00a0 --type COMMITMENT_TYPE\n```\nReplace the following:- ``: the name you want to identify this commitment with.\n- ``: the region this commitment applies to. Each region has different commitment prices. For current prices, see the [price sheet](/compute/vm-instance-pricing) .\n- ``: the project ID of the project for which you want to create the commitment.\n- ``: the number of vCPUs you are willing to purchase commitments for. The number of vCPUs must be an integer of 0 or more and can be even or odd.\n- ``: the amount, in MB or GB, of memory you are willing to purchase commitments for. For example,`1000MB`. If the units are not specified, the default unit used is GB. Memory can be purchased in increments of 0.25 GB.\n- ``: the term of the commitment, either`12-month`or`36-month`.\n- `` : one of:- `accelerator-optimized`for A2 machine type resources\n- `accelerator-optimized-a3`for A3 machine type resources\n- `compute-optimized`for C2 machine type resources\n- `compute-optimized-c2d`for C2D machine type resources\n- `compute-optimized-c3`for C3 machine type resources\n- `compute-optimized-c3d`for C3D machine type resources\n- `general-purpose`for N1 machine type resources\n- `general-purpose-e2`for E2 machine type resources\n- `general-purpose-n2`for N2 machine type resources\n- `general-purpose-n2d`for N2D machine type resources\n- `general-purpose-t2d`for Tau T2D machine type resources\n- `graphics-optimized`for G2 machine type resources\n- `memory-optimized`for M1 or M2 machine type resources\n- `memory-optimized-m3` for M3 machine type resourcesIf you do not specify the `--type` flag, the default value used is `general-purpose` .\n **Examples** - To create a general-purpose commitment for N1 machine types, you might use the following example:```\ngcloud compute commitments create example-commitment --region us-central1 \\\n --resources vcpu=5,memory=33280MB --plan 12-month \\\n --project=myproject\n```\n- To create a compute-optimized commitment, use the [gcloud compute commitments create command](/sdk/gcloud/reference/compute/commitments/create) , which purchases a 1 year commitment for a compute-optimized machine type:```\ngcloud compute commitments create example-compute-optimized-commitment \\\n --region us-central1 --resources vcpu=2,memory=3814GB --plan 12-month \\\n --type compute-optimized --project=myproject\n```\n- To create a memory-optimized commitment:```\ngcloud compute commitments create example-memory-optimized-commitment \\\n --region us-central1 --resources vcpu=96,memory=1434MB \\\n --plan 12-month --type memory-optimized \\\n --project=myproject\n```\n- To create an accelerator-optimized commitment, you must [purchase your commitment with a supporting attached reservation](/compute/docs/instances/reservations-with-commitments#purchasing_a_commitment_with_a_reservation) by using the [gcloud compute commitments create command](/sdk/gcloud/reference/compute/commitments/create) . You must also specify the total number of resources (including GPUs) that you need.When creating GPU commitments, you need to specify the `--accelerator` and `--resources-accelerator` flags. The `--accelerator` flag specifies the number of GPUs that are attached to each VM. The `--resources-accelerator` flag specifies the total number of GPUs in the commitment.For example, the following commitment includes 96 vCPUs, 680 GB memory, 8 GPUs, and a reservation for those GPUs to be used in 2 VMs in `us-central1-a` .```\ngcloud compute commitments create example-accelerator-optimized-commitment \\\n --region=us-central1 \\\n --project=myproject \\\n --resources=vcpu=96,memory=680GB \\\n --resources-accelerator=count=8,type=nvidia-tesla-a100 \\\n --plan 12-month \\\n --type accelerator-optimized \\\n --reservation=reservation-01 \\\n --reservation-zone=us-central1-a \\\n --machine-type=a2-highgpu-4g \\\n --accelerator=count=4,type=nvidia-tesla-a100 \\\n --vm-count=2\n```\n- To create a commitment for GPUs, Local SSD disks, or both, you must [purchase your commitment with an attached reservation](/compute/docs/instances/reservations-with-commitments#purchasing_a_commitment_with_a_reservation) by using the [gcloud compute commitments create command](/sdk/gcloud/reference/compute/commitments/create) .When creating GPU commitments, you need to specify the `--accelerator` and `--resources-accelerator` flags. The `--accelerator` flag specifies the number of GPUs that are attached to each VM. The `--resources-accelerator` flag specifies the total number of GPUs in the commitment.For example, the following commitment includes 4 GPUs and a reservation for those GPUs to be used in 2 instances in `us-central1-a` .```\ngcloud compute commitments create example-reservation-commitment \\\n --region=us-central1 \\\n --project=myproject \\\n --resources=vcpu=96,memory=624GB \\\n --resources-accelerator=type=nvidia-tesla-v100,count=4 \\\n --plan 12-month \\\n \n --reservation=reservation-01 \\\n --reservation-zone=us-central1-a \\\n --machine-type=n1-standard-32\n --accelerator=type=nvidia-tesla-v100,count=2 \\\n --vm-count=2\n \n```\nIn the API, make a `POST` request to the [regionCommitments.insert method](/compute/docs/reference/rest/beta/regionCommitments/insert) , with a request body that contains information about the commitment:\n```\nhttps://compute.googleapis.com/compute/v1/projects/PROJECT_ID/regions/REGION/commitments?requestId=OPTIONAL_UNIQUE_ID\n```\n **Note:** [requestId](/compute/docs/reference/latest/regionCommitments/insert) is an optional query parameter, but we recommend providing it to help prevent unintended duplicate requests.\nThe resource body should contain the following:- `name`for the name of the commitment\n- `plan`for the term of the commitment, either`TWELVE_MONTH`or`THIRTY_SIX_MONTH`\n- `resources`to specify the amount of memory and vCPU. Memory must be be specified in MB. You must specify both`VCPU`and`MEMORY`in the`resources`section.\n- `type` of commitment, one of the following:- `ACCELERATOR_OPTIMIZED`for A2 machine type resources\n- `ACCELERATOR_OPTIMIZED_A3`for A3 machine type resources\n- `COMPUTE_OPTIMIZED`for C2 machine type resources\n- `COMPUTE_OPTIMIZED_C2D`for C2D machine type resources\n- `COMPUTE_OPTIMIZED_C3`for C3 machine type resources\n- `COMPUTE_OPTIMIZED_C3D`for C3D machine type resources\n- `GENERAL_PURPOSE`for N1 machine type resources\n- `GENERAL_PURPOSE_E2`for E2 machine type resources\n- `GENERAL_PURPOSE_N2`for N2 machine type resources\n- `GENERAL_PURPOSE_N2D`for N2D machine type resources\n- `GENERAL_PURPOSE_T2D`for Tau T2D machine type resources\n- `GRAPHICS_OPTIMIZED`for G2 machine type resources\n- `MEMORY_OPTIMIZED`for M1 or M2 machine type resources\n- `MEMORY_OPTIMIZED_M3`for M3 machine type resources\nFor example, the following creates a commitment for 1 year with 5 vCPUs and 18.75 GB of memory:\n```\n{\u00a0 \"name\": \"example-commitment\",\u00a0 \"plan\": \"TWELVE_MONTH\",\u00a0 \"type\": \"GENERAL_PURPOSE\",\u00a0 \"resources\": [\u00a0 \u00a0 {\u00a0 \u00a0 \"amount\": \"5\",\u00a0 \u00a0 \"type\": \"VCPU\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \"amount\": \"19200\",\u00a0 \u00a0 \"type\": \"MEMORY\"\u00a0 \u00a0 }\u00a0 ]}\n```\nTo create a memory-optimized commitment, include the `type` property. The following example shows a purchase of a 1 year commitment for an `m1-megamem-96` machine type:\n```\n{\u00a0 \"name\": \"example-memory-optimized-commitment\",\u00a0 \"plan\": \"TWELVE_MONTH\",\u00a0 \"type\": \"MEMORY_OPTIMIZED\",\u00a0 \"resources\": [\u00a0 \u00a0 {\u00a0 \u00a0 \"amount\": \"96\",\u00a0 \u00a0 \"type\": \"VCPU\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \"amount\": \"1434\",\u00a0 \u00a0 \"type\": \"MEMORY\"\u00a0 \u00a0 }\u00a0 ]}\n```\nTo create a compute-optimized commitment, include the `type` property. The following example, purchases a 1 year commitment for a `c2-standard-16` machine type:\n```\n{\u00a0 \"name\": \"example-compute-optimized-commitment\",\u00a0 \"plan\": \"TWELVE_MONTH\",\u00a0 \"type\": \"COMPUTE_OPTIMIZED\",\u00a0 \"resources\": [\u00a0 \u00a0 {\u00a0 \u00a0 \"amount\": \"16\",\u00a0 \u00a0 \"type\": \"VCPU\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \"amount\": \"1434\",\u00a0 \u00a0 \"type\": \"MEMORY\"\u00a0 \u00a0 }\u00a0 ]}\n```\n## Purchase commitments with attached reservations\nWhen you purchase a new commitment, you can attach reservations to your commitment in either of the following ways:\n- [Using existing reservations whose properties match with the commitment](#purchase-cuds-attach-existing-reservations) \n- [Creating new matching reservations while purchasing of your commitment](#purchase-cuds-attach-new-reservations) \nAfter you purchase a commitment, your commitment becomes active on the following day at 12 AM US and Canadian Pacific Time (UTC-8, or UTC-7 during daylight saving time). Between the time of your commitment purchase and its activation time, the status of your commitment remains as `NOT_YET_ACTIVE` (or as `PENDING` on the Google Cloud console). After activation, the status of your commitment changes to `ACTIVE` . For example, suppose you purchase your commitment on January 20th at 10:00 PM US and Canadian Pacific Time (UTC-8 or UTC-7). Compute Engine creates your commitment immediately with its status as `NOT_YET_ACTIVE` . However, your commitment becomes `ACTIVE` only on January 21st at 12:00 AM US and Canadian Pacific Time (UTC-8 or UTC-7).\n### Requirements\nBefore you purchase a commitment with attached reservations, review these requirements and make sure that your commitment and reservations meet the following criteria:\n- You must purchase the commitment and create the attached reservations in the same project and region.\n- You must purchase the commitment and create the attached reservations for resources from the same machine family series.\n- You must disable the [auto-delete option](/compute/docs/instances/reservations-overview#auto-delete) on the attached reservations.\n- If your commitment has GPUs, then the GPU type specified in the reservation and the commitment must match.\n- For GPUs and Local SSD disks, the number of reserved resources of each resource type must exactly match with the number of committed resources for that resource type. For example, if you want to purchase a commitment for 4 V100 GPUs, then your commitment's attached reservations must specify a total of 4 V100 GPUs. However, the amount of vCPU and memory that you reserve can be more or less than what you commit to.\n- For GPUs, purchase commitments for the specific GPU types that you intend to use. For example, you can purchase commitments for either NVIDIA P100s or NVIDIA V100s, but you cannot use a commitment that was purchased for NVIDIA P100 GPUs to cover NVIDIA V100 GPUs.\n- If your attached reservation is a shared reservation and you want to receive the applicable CUDs when you consume that reservation outside your commitment's project, then you must do both the following:- Share your reservations only between projects that belong to the same Cloud Billing account as the commitment.\n- [Enable CUD sharing](/compute/docs/instances/signing-up-committed-use-discounts#turning_on_committed_use_discount_sharing) for that Cloud Billing account.\n### Attach existing reservations\nYou can attach existing reservations while purchasing your commitment by using the Google Cloud console, the Google Cloud CLI, or REST.\nBefore you purchase a commitment using the Google Cloud console, select the project that you want to use to purchase the commitment. If [CUD sharing](/compute/docs/instances/signing-up-committed-use-discounts#share-committed-use-discounts-across-projects) is enabled for a Cloud Billing account, you can purchase the commitment using any project from that Cloud Billing account. After you select the project, do the following:- In the Google Cloud console, go to the **Committed use discounts** page. [Go to Committed use discounts](https://console.cloud.google.com/compute/commitments) \n- To purchase a commitment, click add_box **Purchase commitment** . The **Purchase a committed use discount** page opens and displays the **Hardware** tab.\n- In the **Name** field, enter a name for your commitment.\n- In the **Region** field, select the region where you want to commit to Compute Engine resources.\n- In the **Commitment type** field, select the machine family series for your committed resources.\n- In the **Duration** field, select your commitment's term duration.\n- In the **Cores** field, enter the number of vCPUs that you want to commit to.\n- In the **Memory** field, enter the amount, in GB, of memory that you want to commit to.\n- To commit to GPUs, in the **GPUs** section, click add **Add GPU** and then do the following:- In the **GPU type** field, select the type of GPU.\n- In the **Number of GPUs** field, enter the number of GPUs.\n- Optional: If your GPU model supports [NVIDIA RTX Virtual Workstations (vWS) for graphics workloads](/compute/docs/gpus#gpu-virtual-workstations) , and you plan to run graphics-intensive workloads, select the **Enable Virtual Workstation (NVIDIA GRID)** checkbox.\n- To commit to Local SSD disks, in the **Local SSDs** section, click add **Add SSD** and then, in the **Number of SSDs** field, specify the number of disks.\n- To attach one or more existing reservations to the commitment, in the **Reservations** field, select **Attach existing reservations** .The Google Cloud console displays a list of all the reservations in your project whose region, machine type, and GPU type match with the commitment. Then, do the following:- Optional. To view reservations with specific properties, in the **Filter** menu, add or remove filters for the properties that you want.\n- Select all the reservations that you want to attach to the commitment.\n **Important:** The types and total number of GPUs and local SSD disks specified across all your attached reservations must match with what you specified in your commitment. Otherwise, you won't be able to purchase the commitment.\n- To finish purchasing your commitment with the attached reservations, do the following:- Click **Purchase** .\n- In the **Purchase a committed use discount** dialog, if you agree with the [service specific terms](/terms/service-terms) , click **Purchase** again.\nTo purchase a commitment by attaching existing reservations, run the [gcloud compute commitments create command](/sdk/gcloud/reference/compute/commitments/create) . In your command, include the `--existing-reservation` flag to specify an existing reservation that you want to attach to your commitment. Include a new instance of this flag for every existing reservation that you want to attach. You can attach any number of existing reservations to your commitment.\nFor example, to purchase a commitment by attaching two reservations to it, run the following command:\n```\ngcloud compute commitments create COMMITMENT_NAME \\\n --region=REGION \\\n --project=PROJECT_ID \\\n --resources=vcpu=COMMITTED_VCPUS,memory=COMMITTED_MEMORY,local-ssd=COMMITTED_LOCAL_SSD \\\n --resources-accelerator=count=COMMITTED_ACCELERATOR_COUNT,type=COMMITTED_ACCELERATOR_TYPE \\\n --plan=DURATION \\\n --type=COMMITMENT_TYPE \\\n --existing-reservation=name='RESERVATION_NAME_1',zone='RESERVATION_ZONE_1' \\\n --existing-reservation=name='RESERVATION_NAME_2',zone='RESERVATION_ZONE_2'\n```\nReplace the following:- ``: the name of the commitment.\n- ``: the region where the commitment is located.\n- ``: the ID of the project where you want to purchase the commitment with the attached reservations.\n- ``: the term duration of the commitment, either`12-month`or`36-month`.\n- `` : the commitment type. The following commitment types provide options for GPUs, Local SSD disks, or both:- `accelerator-optimized`for machine type resources\n- `compute-optimized`for C2 machine type resources\n- `compute-optimized-c2d`for C2D machine type resources\n- `compute-optimized-c3`for C3 machine type resources\n- `compute-optimized-c3d`for C3D machine type resources\n- `general-purpose`for N1 machine type resources\n- `general-purpose-e2`for E2 machine type resources\n- `general-purpose-n2`for N2 machine type resources\n- `general-purpose-n2d`for N2D machine resources\n- `general-purpose-t2d`for Tau T2D machine type resources\n- `graphics-optimized`for G2 machine type resources\n- `memory-optimized`for M1 or M2 machine type resources\n- `memory-optimized-m3`for memory-optimized M3 machine type\n- `` : the number of vCPUs that you want in your commitment. The number must be a positive integer.\n- `` : the amount, in MB or GB, of memory that you want in your commitment. For example, `10240MB` or `10GB` . If you don't specify a unit, Compute Engine uses GB as the unit. You can purchase memory in increments of 0.25\u00a0GB.\n- `` : the amount, in GB, of Local SSD space that you want in your commitment. Each Local SSD disk is 375\u00a0GB.\n- `` : the number of GPUs that you want in your commitment.\n- `` : the GPU type that you want in your commitment.\n- `` and `` : The names of the existing reservations that you want to attach to the commitment.\n- `` and `` : The zones of the existing reservations that you want to attach to the commitment.\nSuppose you have two reservations `res-01` and `res-02` in the `us-central1-a` and `us-central1-b` zones of the project `myproject` . Suppose that these reservations hold a combined capacity for 4 NVIDIA P100 GPUs and 4 Local SSD disks. To purchase a new commitment in the `us-central1` region of this project for these GPUs and Local SSD disks, and use these existing reservations as attached reservations, run the following command. Note that the example commitment also contains vCPUs and memory.\n```\ngcloud compute commitments create commitment-01 \\\n --region=us-central1 \\\n --project=myproject \\\n --resources=vcpu=96,memory=624GB \\\n --resources-accelerator=type=nvidia-tesla-v100,count=4 \\\n --plan 12-month \\\n --existing-reservation=name=res-01,zone=us-central1-a \\\n --existing-reservation=name=res-02,zone=us-central1-b\n \n```\nTo purchase a commitment by attaching existing reservations, make a `POST` request to the [regionCommitments.insert method](/compute/docs/reference/rest/v1/regionCommitments/insert) . In your request, include the `existingReservations` field to specify a comma-separated list of all the existing reservations that you want to attach to your commitment. You can attach any number of existing reservations to your commitment.\n```\nPOST https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/regions/REGION/commitments\n{\n \"name\": \"COMMITMENT_NAME\",\n \"plan\": \"DURATION\",\n \"type\": COMMITMENT_TYPE,\n \"resources\":\n [ {\n  \"amount\": \"COMMITTED_VCPUS\",\n  \"type\": \"VCPU\"\n },\n {\n  \"amount\": \"COMMITTED_MEMORY\",\n  \"type\": \"MEMORY\"\n },\n {\n  \"acceleratorType\": \"COMMITTED_ACCELERATOR_TYPE\",\n  \"amount\": \"COMMITTED_ACCELERATOR_COUNT\",\n  \"type\": \"ACCELERATOR\"\n }\n {\n  \"amount\": \"COMMITTED_LOCAL_SSD\",\n  \"type\": \"LOCAL_SSD\"\n }\n ],\n \"existingReservations\": \"RESERVATION_URLs\"\n}\n```\nReplace the following:- ``: the name of the commitment.\n- ``: the region where the commitment is located.\n- ``: the ID of the project where you want to purchase the commitment with the attached reservations.\n- ``: the term duration of the commitment, either`TWELVE_MONTH`or`THIRTY_SIX_MONTH`.\n- `` : the commitment type. The following commitment types provide options for GPUs, Local SSD disks, or both:- `GENERAL_PURPOSE_E2`for E2 machine type resources\n- `GENERAL_PURPOSE_N2`for N2 machine type resources\n- `GENERAL_PURPOSE_N2D`for N2D machine resources\n- `COMPUTE_OPTIMIZED_C3`for C3 machine type resources\n- `GENERAL_PURPOSE_C3D`for C3D machine type resources\n- `GENERAL_PURPOSE_T2D`for Tau T2D machine type resources\n- `GENERAL_PURPOSE`for N1 machine type resources\n- `COMPUTE_OPTIMIZED`for C2 machine type resources\n- `COMPUTE_OPTIMIZED_C2D`for C2D machine type resources\n- `MEMORY_OPTIMIZED`for M1 or M2 machine type resources\n- `MEMORY_OPTIMIZED_M3`for memory-optimized M3 machine type\n- `ACCELERATOR_OPTIMIZED`for machine type resources\n- `GRAPHICS_OPTIMIZED`for G2 machine type resources\n- `` : the number of vCPUs that you want in your commitment. The number must be a positive integer.\n- `` : the amount, in MB, of memory that you want in your commitment. For example, `10240MB` . You can purchase memory in increments of 256\u00a0MB.\n- `` : the amount, in GB, of Local SSD storage that you want in your commitment. Each Local SSD disks is 375\u00a0GB.\n- `` : the number of GPUs that you want in your commitment.\n- `` : the GPU type that you want in your commitment.\n- `` : a comma-separated list of URLs of the existing reservations that you want to attach to the commitment. For example, to attach two reservations, `res-1` and `res-2` , specify the following:```\n\"https://www.googleapis.com/compute/v1/projects/my-project/zones/us-central1-a/reservations/example-res-1\",\n\"https://www.googleapis.com/compute/v1/projects/my-project/zones/us-central1-c/reservations/example-res-2\"\n```\nSuppose you have two reservations `res-01` and `res-02` in the `us-central1-a` and `us-central1-b` zones of the project `myproject` . Suppose that these reservations hold a combined capacity for 4 NVIDIA P100 GPUs and 4 Local SSD disks. To purchase a new commitment in the `us-central1` region of this project for these GPUs and Local SSD disks and to use these existing reservations as attached reservations, make the following `POST` request. Note that the example commitment also contains vCPUs and memory.\n```\nPOST https://compute.googleapis.com/compute/v1/projects/my-project/regions/us-central1/commitments\n{\n \"name\": \"commitment-01\",\n \"plan\": \"TWELVE_MONTH\",\n \"type\": \"GENERAL_PURPOSE\"\n \"resources\":\n [ {\n  \"amount\": \"96\",\n  \"type\": \"VCPU\"\n },\n {\n  \"amount\": \"638976\",\n  \"type\": \"MEMORY\"\n },\n {\n  \"acceleratorType\": \"nvidia-tesla-v100\",\n  \"amount\": \"4\",\n  \"type\": \"ACCELERATOR\"\n },\n {\n  \"amount\": \"1536000\",\n  \"type\": \"LOCAL_SSD\"\n }\n ],\n \"existingReservations\":\n [ \"https://www.googleapis.com/compute/v1/projects/my-project/zone/us-central1-a/reservations/res-01\",\n \"https://www.googleapis.com/compute/v1/projects/my-project/zone/us-central1-b/reservations/res-02\"\n ]\n}\n```\n### Create new reservations to attach\nYou can create your attached reservations while purchasing your commitment by using the Google Cloud console, the Google Cloud CLI, or REST.\nBefore you purchase a commitment using the Google Cloud console, select the project that you want to use to purchase the commitment. If [CUD sharing](/compute/docs/instances/signing-up-committed-use-discounts#share-committed-use-discounts-across-projects) is enabled for a Cloud Billing account, you can purchase the commitment using any project from that Cloud Billing account. After you select the project, do the following:- In the Google Cloud console, go to the **Committed use discounts** page. [Go to Committed use discounts](https://console.cloud.google.com/compute/commitments) \n- To purchase a commitment, click add_box **Purchase commitment** . The **Purchase a committed use discount** page opens and displays the **Hardware** tab.\n- In the **Name** field, enter a name for your commitment.\n- In the **Region** field, select the region where you want to commit to Compute Engine resources.\n- In the **Commitment type** field, select the machine family series for your committed resources.\n- In the **Duration** field, select your commitment's term duration.\n- In the **Cores** field, enter the number of vCPUs that you want to commit to.\n- In the **Memory** field, enter the amount, in GB, of memory that you want to commit to.\n- To commit to GPUs, in the **GPUs** section, click add **Add GPU** and then do the following:- In the **GPU type** field, select the type of GPU.\n- In the **Number of GPUs** field, enter the number of GPUs.\n- Optional: If your GPU model supports [NVIDIA RTX Virtual Workstations (vWS) for graphics workloads](/compute/docs/gpus#gpu-virtual-workstations) , and you plan to run graphics-intensive workloads, select the **Enable Virtual Workstation (NVIDIA GRID)** checkbox.\n- To commit to Local SSD disks, in the **Local SSDs** section, click add **Add SSD** and then, in the **Number of SSDs** field, specify the number of disks.\n- To create a new reservation and attach it to the commitment, in the **Reservations** field, select **Create reservations** and then do the following. Repeat this step for every new reservation that you want to create and attach.- Click **Add a reservation** . The **New reservation** section appears.\n- In the **Name** field, enter a name for your attached reservation.\n- In the **Region** field, select the same region as your commitment.\n- In the **Zone** field, select the zone where you want to reserve your resources.\n- In the **Share type** section, specify how you want to share this reservation in one of the following ways:- To create a single-project reservation, select **Local** .\n- To create a reservation that is shared with multiple projects, select **Shared** . Then, to specify the projects to share the this reservation with, clickadd **Add projects** , and then select the projects that you want from the current project's organization.\n- In the **Use with VM instance** field, select how you want VMs to consume your reservation in one of the following ways:- To allow VMs with matching properties to automatically consume this reservation, click **Use reservation automatically** (default).\n- To consume this reservation's resources only when creating VMs with matching properties that specifically target this reservation by name, click select **Select specific reservation** .\n- In the **Resource details** section, do the following:- In the **Number of VM instances** field, enter the number of VM instances that you want to reserve.\n- In the **Machine configuration** section, specify the properties of your reserved VMs in one of the following ways:- To specify your the properties of your VMs using an existing [instance template](/compute/docs/instance-templates/create-instance-templates) , select **Use instance template** .In the **Instance template** field, select an instance template that specifies the same machine family series as your commitment. If you select a regional instance template, the region of that instance template must also match with the region specified in your commitment.\n- To manually specify the properties of your VMs, select **Select machine type** and then do the following:- Select the machine family that applies to the machine series that you specified for the commitment:- **General purpose** for general-purpose machine series\n- **Compute optimized** for compute-optimized machine series\n- **Memory optimized** for memory-optimized machine series\n- **GPUs** for accelerator-optimized machine series\n- In the table that has **Series** column, select the same machine series that you specified for the commitment.\n- In the **Machine type** field, specify a predefined or custom machine type in one of the following ways:- To choose a predefined machine type, select **Preset** and then select the machine type that you want.\n- To choose a custom machine type, select **Custom** and then specify **Cores** and **Memory** that you want.\n- To specify a minimum CPU platform, GPUs, or both, expand the expand_more **CPU Platform and GPU** menu and do the following:- Optional: To specify a minimum CPU platform, in the **CPU Plaform** list, select an option.\n- Optional: To reserve GPUs, click add **Add GPU** . Then, in the **GPU type** and **Number of GPUs** fields, select the type and number of GPUs for each VM. **Important:** The types and total number of GPUs specified across all your attached reservations must match with what you specified in your commitment. Otherwise, you won't be able to purchase the commitment.\n- To reserve local SSD disks, do the following:- In the **Number of disks** field, select the number of local SSD disks that you want for each VM.\n- In the **Interface type** field, select the interface for the local SSD disks.\n **Important:** The total number of local SSD disks specified across all your attached reservations must must match with what you specified in your commitment. Otherwise, you won't be able to purchase the commitment.\n- To finish specifying the properties for this reservation, click **Done** .\n- To finish purchasing your commitment with the attached reservations, do the following:- Click **Purchase** .\n- In the **Purchase a committed use discount** dialog, if you agree with the [service specific terms](/terms/service-terms) , click **Purchase** again.\nTo create your attached reservations while purchasing your commitment, run the [gcloud compute commitments create command](/sdk/gcloud/reference/compute/commitments/create) .\n **Note:** You can't use the Google Cloud CLI to create your attached reservations using instance templates. Instead, you must manually specify the VM properties for your reservations.\nDepending on whether you want to attach a single reservation or multiple reservations, run the command in one of the following ways:- To create and attach a single reservation to your commitment, define the properties of the attached reservation by running the following command:```\ngcloud compute commitments create COMMITMENT_NAME \\\n --region=REGION \\\n --project=PROJECT_ID \\\n --plan DURATION \\\n --type COMMITMENT_TYPE\n --resources=vcpu=COMMITTED_VCPUS,memory=COMMITTED_MEMORY,local-ssd=COMMITTED_LOCAL_SSD \\\n --resources-accelerator=count=COMMITTED_ACCELERATOR_COUNT,type=COMMITTED_ACCELERATOR_TYPE \\\n --reservation=RESERVATION_NAME \\\n --reservation-zone=RESERVATION_ZONE \\\n --machine-type=RESERVED_MACHINE_TYPE \\\n --require-specific-reservation=REQUIRE_SPECIFIC_RESERVATION_VALUE \\\n --vm-count=NUMBER_OF_RESERVED_VMs \\\n --accelerator=type=RESERVED_ACCELERATOR_TYPE,count=RESERVED_ACCELERATOR_COUNT \\\n --local-ssd=interface=INTERFACE_1,size=375 \\\n --local-ssd=interface=INTERFACE_2,size=375 \\\n --minimum-cpu-platform=MINIMUM_CPU_PLATFORM \\\n --share-setting=SHARE_SETTING \\\n --share-with=CONSUMER_PROJECT_ID_1,CONSUMER_PROJECT_ID_2\n```\n- To create and attach multiple reservations to your commitment, define the reservation's properties using a YAML file and then specify that YAML file in the command that you use to purchase your commitment. Optionally, you can also use this YAML file approach to create and attach a single reservation to your commitment. To create your attached reservations using this approach, do the following:- Create the YAML file in the current directory and specify the configuration that you want for each attached reservation. For example, to specify the configuration of a shared reservation shared with two projects that specifies GPUs, two Local SSD disks, and a minimum CPU platform, include the following text in your YAML file:```\n- reservation: RESERVATION_NAME\u00a0 reservation_zone: RESERVATION_ZONE\u00a0 require_specific_reservation: REQUIRE_SPECIFIC_RESERVATION_VALUE\u00a0 vm_count: NUMBER_OF_RESERVED_VMs\u00a0 machine_type: RESERVED_MACHINE_TYPE\u00a0 accelerator:\u00a0 - count: RESERVED_ACCELERATOR_COUNT\u00a0 \u00a0 type: RESERVED_ACCELERATOR_TYPE\u00a0 localssd:\u00a0 - interface: INTERFACE_1\u00a0 \u00a0 size: 375\u00a0 - interface: INTERFACE_2\u00a0 \u00a0 size: 375\u00a0 project: OWNER_PROJECT_ID\u00a0 minimum-cpu-platform: MINIMUM_CPU_PLATFORM\u00a0 share-setting: SHARE_SETTING\u00a0 share-with:\u00a0 - CONSUMER_PROJECT_ID_1\u00a0 - CONSUMER_PROJECT_ID_2\n```To specify the configuration for multiple reservations, repeat these properties for each reservation that you want to create. You can attach any number of existing reservations that you want to your commitment.\n- Run the `gcloud compute commitments create` command and include the `--reservation-from-file` flag.```\ngcloud compute commitments create COMMITMENT_NAME \\\n --region REGION \\\n --project PROJECT_ID \\\n --plan DURATION \\\n --type COMMITMENT_TYPE \\\n --resources=vcpu=COMMITTED_VCPUS,memory=COMMITTED_MEMORY,local-ssd=COMMITTED_LOCAL_SSD \\\n --resources-accelerator=count=COMMITTED_ACCELERATOR_COUNT,type=COMMITTED_ACCELERATOR_TYPE \\\n --reservations-from-file=YAML_FILE\n```\nReplace the following with the corresponding properties of the commitment and the attached reservations:\n- ``: the name of the commitment.\n- ``: the region where the commitment is located.\n- ``: the ID of the project where you want to purchase the commitment with the attached reservations.\n- ``: the term duration of the commitment, either`12-month`or`36-month`.\n- `` : the commitment type. The following commitment types provide options for GPUs, Local SSD disks, or both:- `general-purpose-e2`for E2 machine type resources\n- `general-purpose-n2`for N2 machine type resources\n- `general-purpose-n2d`for N2D machine resources\n- `compute-optimized-c3`for C3 machine type resources\n- `general-purpose-c3d`for C3D machine type resources\n- `general-purpose-t2d`for Tau T2D machine type resources\n- `general-purpose`for N1 machine type resources\n- `compute-optimized`for C2 machine type resources\n- `compute-optimized-c2d`for C2D machine type resources\n- `memory-optimized`for M1 or M2 machine type resources\n- `memory-optimized-m3`for memory-optimized M3 machine type\n- `accelerator-optimized`for machine type resources\n- `graphics-optimized`for G2 machine type resources\n- `` : the number of vCPUs that you want in your commitment. The number must be a positive integer.\n- `` : the amount, in MB or GB, of memory that you want in your commitment. For example, `10GB` or `10240MB` . If you don't specify a unit, Compute Engine uses GB as the unit. You can purchase memory in increments of 0.25\u00a0GB.\n- `` : the amount, in GB, of Local SSD storage that you want in your commitment. Each Local SSD disk is 375\u00a0GB.\n- `` : the number of GPUs that you want in your commitment.\n- `` : the GPU type that you want in your commitment.\n- `` : The path to the YAML file that contains the configuration of the attached reservations.\n- ``: the name of the attached reservation.\n- ``: the zone of the attached reservation.\n- ``: specifies if the attached reservation is a specifically targeted reservation; either`true`or`false`. For more information about specifically targeted reservations, see [How reservations work](/compute/docs/instances/reservations-overview#how-reservations-work) .\n- ``: the number of VMs that you want to reserve in the attached reservation.\n- `` : the [machine type](/compute/docs/machine-types) that you want for the VMs in your attached reservation.- For **predefined** machine types, use the format`` `-standard-` ``; for example,`n2-standard-4`.\n- For **custom** machine types, use the format `` `-custom-` `` `-` `` ; for example `n2-custom-4-5120` . For a full list of restrictions, read the [specifications](/compute/docs/instances/creating-instance-with-custom-machine-type#specifications) for custom machine types.Replace the following:- ``: the family of machine types; for example, specify`n2`for N2 VMs.\n- ``: the number of [vCPUs](/compute/docs/cpu-platforms) .\n- ``: the total memory for a reserved VM. Memory must be a multiple of 256\u00a0MB and must be supplied in MB; for example, to create an N2 VM with 4 vCPUs and 5\u00a0GB of memory, which is 5120\u00a0MB, use`n2-custom-4-5120`.\n- `` : the number of GPUs you want to add, per VM, in the attached reservation.\n- `` : the [type of accelerator](/compute/docs/gpus) you want to add in the attached reservation.\n- `` and `` : the type of interface you want the [Local SSD disks](/compute/docs/disks#localssds) for each reserved VM to use. Valid options are: `scsi` and `nvme` . Each Local SSD disk is 375\u00a0GB. Repeat the `local_ssd` parameter for each Local SSD disk that you want to add. You can specify up to 24 Local SSD disks.\n- `` : the ID of the project where you want to purchase the commitment with the attached reservation. Specify this field if you want to share your attached reservation across multiple consumer projects.\n- `` : the minimum CPU platform that you want to specify for the attached reservation.\n- `` : the type of sharing for the attached reservation. Specify this field with the value as `projects` if you want to share your attached reservation across multiple consumer projects. Exclude this field if you want create a single-project reservation.\n- `` and `` : the [project IDs](/resource-manager/docs/creating-managing-projects#identifying_projects) of the projects that can share this reservation, for example `project-1` and `project-2` . You can include up to 100 consumer projects. These projects must be in the same organization as the owner project. Don't include the ID of the project where you create this reservation, as that project is allowed to consume this reservation by default. Exclude these fields if you want to create a single-project reservation.\nCompute Engine creates the commitment and the attached reservations only if there are enough resources of the specified machine type in the target zone, and sufficient quota, at the time of your request. If your purchase was successful, you see a success message similar to the following:\n```\nCreated[https://www.googleapis.com/compute/v1/projects/your-project/regions/your-region/commitments/your-commitment-name]\n```\n### Examples for purchasing commitments by creating new reservations to attachThe following example scenarios and commands show how you can purchase a commitment for GPUs, Local SSD disks, or both by creating new reservations to attach to that commitment.Suppose you want to purchase a commitment `commitment-01` in the `us-central1` region that includes 4 NVIDIA V100 GPUs. You want to create a new reservation `reservation-01` as the attached reservation for those GPUs. Suppose you also want to specify Compute Engine to use those reserved GPUs across 2 `n1-standard-32` VMs in the `us-central1-a` zone. To purchase this example commitment with its attached reservation, run the following command:\n```\ngcloud compute commitments create commitment-01 \\\n --region=us-central1 \\\n --project=myproject \\\n --resources=vcpu=96,memory=624GB \\\n --resources-accelerator=type=nvidia-tesla-v100,count=4 \\\n --plan 12-month \\\n --reservation=reservation-01 \\\n --reservation-zone=us-central1-a \\\n --machine-type=n1-standard-32 \\\n --accelerator=type=nvidia-tesla-v100,count=2 \\\n --vm-count=2\n```To commit to and reserve GPUs and Local SSD disks without committing to vCPUs or memory, specify `0` as the value for vCPU and memory quantities. For example, suppose you want to purchase a commitment `commitment-02` for a single NVIDIA P4 GPU in the `us-west2` region. You also want to create a new reservation as the attached reservation and specify Compute Engine to use the reserved GPU on an `n1-standard-2` VM in the `us-west2-b` zone. To purchase this example commitment with its attached reservation, run the following command:\n```\ngcloud compute commitments create commitment-02 \\\n --region=us-west2 \\\n --project=myproject \\\n --resources=vcpu=0,memory=0 \\\n --resources-accelerator=type=nvidia-tesla-p4,count=1 \\\n --plan 12-month \\\n --reservation=reservation-01 \\\n --reservation-zone=us-west2-b \\\n --machine-type=n1-standard-2 \\\n --accelerator=type=nvidia-tesla-p4,count=1 \\\n --vm-count=1\n```Suppose you want to purchase a commitment `commitment-03` for 1 NVIDIA V 100 GPU and 2 Local SSD disks in the `us-central1` region. You also want to create and attach two reservations in the `us-central1-a` zone. In the first reservation, `res-01` , you want to reserve 1 `n1-standard-2` VM with 1 GPU. You want to make `res-01` a targeted reservation, which means that you must specifically target that reservation by name to use its reserved VMs. In the second reservation, `res-02` , you want to reserve 1 `n1-standard-8` VM with 2 types of attached Local SSD disks.\nTo purchase this example commitment with the attached reservations, first create the YAML file with the properties of both reservations.\n```\n- reservation: res-01\n reservation_zone: us-central1-a\n require_specific_reservation: true\n vm_count: 1\n machine_type: n1-standard-2\n accelerator:\n - count: 1\n type: nvidia-tesla-v100\n- reservation: res-02\n reservation_zone: us-central1-a\n vm_count: 1\n machine_type: n1-standard-8\n local_ssd:\n - interface: scsi\n size: 375\n - interface: nvme\n size: 375\n```\nAfter you create the YAML file, to finish purchasing the commitment with its attached reservations, run the following command. Note that the example commitment also contains vCPU and memory resources.\n```\ngcloud compute commitments create commitment-03 \\\n --region=us-central1 \\\n --project=myproject \\\n --resources=vcpu=96,memory=624,local-ssd=750 \\\n --resources-accelerator=type=nvidia-tesla-v100,count=1 \\\n --plan 12-month \\\n --reservations-from-file=YAML_FILE\n```\nTo create your attached reservations while purchasing your commitment, make a `POST` request to the [regionCommitments.insert method](/compute/docs/reference/rest/v1/regionCommitments/insert) . In your request, include the `reservations` field to define a list of all the new reservations that you want to create and attach. You can attach any number of existing reservations that you want to your commitment.- To create your new reservation by manually specifying all the VM properties, include the `instanceProperties` field and exclude the `sourceInstanceTemplate` field.For example, to manually specify the configuration of a shared reservation shared with two projects that specifies GPUs, two Local SSD disks, and a minimum CPU platform, make the following request:```\nPOST https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/regions/REGION/commitments\n{\n\"name\": \"COMMITMENT_NAME\",\n\"plan\": \"DURATION\",\n\"type\": COMMITMENT_TYPE,\n\"resources\":\n[ {\n \"amount\": \"COMMITTED_VCPUS\",\n \"type\": \"VCPU\"\n },\n {\n \"amount\": \"COMMITTED_MEMORY\",\n \"type\": \"MEMORY\"\n },\n {\n \"acceleratorType\": \"COMMITTED_ACCELERATOR_TYPE\",\n \"amount\": \"COMMITTED_ACCELERATOR_COUNT\",\n \"type\": \"ACCELERATOR\"\n }\n {\n \"amount\": \"COMMITTED_LOCAL_SSD\",\n \"type\": \"LOCAL_SSD\"\n }\n],\n\"reservations\":\n[ {\n \"name\": \"RESERVATION_NAME\",\n \"specificReservation\":\n {\n  \"count\": \"NUMBER_OF_RESERVED_VMS\",\n  \"instanceProperties\":\n  {\n  \"guestAccelerators\":\n  [   {\n   \"acceleratorCount\": \"RESERVED_ACCELERATOR_COUNT\",\n   \"acceleratorType\": \"RESERVED_ACCELERATOR_TYPE\"\n   }\n  ],\n  \"localSsds\":\n  [   {\n   \"diskSizeGb\": \"375\",\n   \"interface\": \"RESERVED_INTERFACE_1\"\n   },\n   {\n   \"diskSizeGb\": \"375\",\n   \"interface\": \"RESERVED_INTERFACE_2\"\n   }\n  ],\n  \"machineType\": \"RESERVED_MACHINE_TYPE\",\n  \"minCpuPlatform\": \"MINIMUM_CPU_PLATFORM\"\n  }\n },\n \"specificReservationRequired\": REQUIRE_SPECIFIC_RESERVATION_VALUE\",\n \"zone\": \"RESERVED_ZONE\",\n \"shareSettings\":\n {\n  \"shareType\": \"SPECIFIC_PROJECTS\",\n  \"projectMap\":\n  {\n  \"CONSUMER_PROJECT_ID_1\":\n  {\n   \"projectId\": \"CONSUMER_PROJECT_ID_1\"\n  },\n  \"CONSUMER_PROJECT_ID_2\":\n  {\n   \"projectId\": \"CONSUMER_PROJECT_ID_2\"\n  }\n  }\n }\n }\n]\n}\n```\n- To create your new reservation by specifying an instance template, include the `sourceInstanceTemplate` field and exclude the `instanceProperties` field.```\nPOST https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/regions/REGION/commitments\n{\n\"name\": \"COMMITMENT_NAME\",\n\"plan\": \"DURATION\",\n\"type\": COMMITMENT_TYPE,\n\"resources\":\n[ {\n \"amount\": \"COMMITTED_VCPUS\",\n \"type\": \"VCPU\"\n },\n {\n \"amount\": \"COMMITTED_MEMORY\",\n \"type\": \"MEMORY\"\n },\n {\n \"acceleratorType\": \"COMMITTED_ACCELERATOR_TYPE\",\n \"amount\": \"COMMITTED_ACCELERATOR_COUNT\",\n \"type\": \"ACCELERATOR\"\n }\n {\n \"amount\": \"COMMITTED_LOCAL_SSD\",\n \"type\": \"LOCAL_SSD\"\n }\n],\n\"reservations\":\n[ {\n \"name\": \"RESERVATION_NAME\",\n \"specificReservation\":\n {\n  \"count\": \"NUMBER_OF_RESERVED_VMS\",\n  \"sourceInstanceTemplate\": \"projects/PROJECT_ID/LOCATION/instanceTemplates/INSTANCE_TEMPLATE_NAME\"\n },\n \"specificReservationRequired\": REQUIRE_SPECIFIC_RESERVATION_VALUE\",\n \"zone\": \"RESERVED_ZONE\",\n \"shareSettings\":\n {\n  \"shareType\": \"SPECIFIC_PROJECTS\",\n  \"projectMap\":\n  {\n  \"CONSUMER_PROJECT_ID_1\":\n  {\n   \"projectId\": \"CONSUMER_PROJECT_ID_1\"\n  },\n  \"CONSUMER_PROJECT_ID_2\":\n  {\n   \"projectId\": \"CONSUMER_PROJECT_ID_2\"\n  }\n  }\n }\n }\n]\n}\n```\nReplace the following with the corresponding properties of the commitment and the attached reservations:\n- ``: the name of the commitment.\n- ``: the region where the commitment is located.\n- ``: the ID of the project where you want to purchase the commitment with the attached reservations.\n- ``: the term duration of the commitment, either`TWELVE_MONTH`or`THIRTY_SIX_MONTH`.\n- `` : the commitment type. The following commitment types provide options for GPUs, Local SSD disks, or both:- `ACCELERATOR_OPTIMIZED`for machine type resources\n- `COMPUTE_OPTIMIZED`for C2 machine type resources\n- `COMPUTE_OPTIMIZED_C2D`for C2D machine type resources\n- `COMPUTE_OPTIMIZED_C3`for C3 machine type resources\n- `COMPUTE_OPTIMIZED_C3D`for C3D machine type resources\n- `GENERAL_PURPOSE`for N1 machine type resources\n- `GENERAL_PURPOSE_E2`for E2 machine type resources\n- `GENERAL_PURPOSE_N2`for N2 machine type resources\n- `GENERAL_PURPOSE_N2D`for N2D machine resources\n- `GENERAL_PURPOSE_T2D`for Tau T2D machine type resources\n- `GRAPHICS_OPTIMIZED`for G2 machine type resources\n- `MEMORY_OPTIMIZED`for M1 or M2 machine type resources\n- `MEMORY_OPTIMIZED_M3`for memory-optimized M3 machine type\n- `` : the number of vCPUs that you want in your commitment. The number must be a positive integer.\n- `` : the amount, in MB, of memory that you want in your commitment. For example, `10240MB` . You can purchase memory in increments of 256\u00a0MB.\n- `` : the amount, in GB, of Local SSD storage that you want in your commitment. Each Local SSD disk is 375\u00a0GB.\n- `` : the number of GPUs that you want in your commitment.\n- `` : the GPU type that you want in your commitment.\n- ``: the name of the attached reservation.\n- ``: the zone of the attached reservation.\n- ``: specifies if the attached reservation is a specifically targeted reservation; either`true`or`false`. For more information about specifically targeted reservations, see [How reservations work](/compute/docs/instances/reservations-overview#how-reservations-work) .\n- ``: the number of VMs that you want to reserve in the attached reservation.\n- `` : the [machine type](/compute/docs/machine-types) that you want for the VMs in your attached reservation.- For **predefined** machine types, use the format`` `-standard-` ``; for example,`n2-standard-4`.\n- For **custom** machine types, use the format `` `-custom-` `` `-` `` ; for example `n2-custom-4-5120` . For a full list of restrictions, read the [specifications](/compute/docs/instances/creating-instance-with-custom-machine-type#specifications) for custom machine types.Replace the following:- ``: the family of machine types; for example, specify`n2`for N2 VMs.\n- ``: the number of [vCPUs](/compute/docs/cpu-platforms) .\n- ``: the total memory for a reserved VM. Memory must be a multiple of 256\u00a0MB and must be supplied in MB; for example, to create an N2 VM with 4 vCPUs and 5\u00a0GB of memory, which is 5120\u00a0MB, use`n2-custom-4-5120`.\n- `` : the number of GPUs you want to add, per VM, in the attached reservation.\n- `` : the [type of accelerator](/compute/docs/gpus) you want to add in the attached reservation.\n- `` and `` : the type of interface you want the [Local SSD disks](/compute/docs/disks#localssds) for each reserved VM to use. Valid options are: `scsi` and `nvme` . Each Local SSD disk is 375\u00a0GB. Repeat the `localSsds` parameter for each Local SSD disk that you want to add. You can specify up to 24 Local SSD disks.\n- `` : the minimum CPU platform that you want to specify for the attached reservation.\n- `` : the name of the instance template that you want to use to create your attached reservation.\n- `` : the type of sharing for the attached reservation. Specify this field with the value as `SPECIFIC_PROJECTS` if you want to share your attached reservation across multiple consumer projects. Exclude this field if you want create a single-project reservation.\n- `` and `` : the [project IDs](/resource-manager/docs/creating-managing-projects#identifying_projects) of the projects that can share this reservation; for example, `project-1` and `project-2` . You can include up to 100 consumer projects. These projects must be in the same organization as the owner project. Don't include the ID of the project where you create this reservation, as that project is allowed to consume this reservation by default. Exclude these fields if you want to create a single-project reservation.\nCompute Engine creates the commitment and the attached reservations only if there are enough resources of the specified machine type in the target zone, and sufficient quota, at the time of your request. If your purchase was successful, Compute Engine returns a `200` status for your REST API request.\n### Examples for purchasing commitments by creating new reservations to attachThe following example scenarios and commands show how you can purchase a commitment for GPUs, Local SSD disks, or both by creating new reservations to attach to that commitment.Suppose you want to purchase a commitment `commitment-01` in the `us-central1` region that includes 4 NVIDIA V100 GPUs. You want to create a new reservation `reservation-01` as the attached reservation for those GPUs. Suppose you also want to specify Compute Engine to use those reserved GPUs across 2 `n1-standard-8` VMs in the `us-central1-a` zone. To purchase this example commitment with its attached reservation, make the following `POST` request:\n```\nPOST https://compute.googleapis.com/compute/v1/projects/my-project/regions/us-central1/commitments\n{\n \"name\": \"commitment-01\",\n \"plan\": \"TWELVE_MONTH\",\n \"type\": \"GENERAL_PURPOSE\"\n \"resources\":\n [ {\n  \"amount\": \"96\",\n  \"type\": \"VCPU\"\n },\n {\n  \"amount\": \"638976\",\n  \"type\": \"MEMORY\"\n },\n {\n  \"acceleratorType\": \"nvidia-tesla-v100\",\n  \"amount\": \"4\",\n  \"type\": \"ACCELERATOR\"\n }\n ],\n \"reservations\":\n [ {\n  \"name\": \"reservation-01\",\n  \"specificReservation\":\n  {\n  \"count\": \"2\",\n  \"instanceProperties\":\n  {\n   \"guestAccelerators\":\n   [   {\n    \"acceleratorCount\": 2,\n    \"acceleratorType\": \"nvidia-tesla-v100\"\n   }\n   ],\n   \"machineType\": \"n1-standard-8\"\n  }\n  },\n  \"specificReservationRequired\": false,\n  \"zone\": \"us-central1-a\"\n }\n ]\n}\n```To commit to and reserve GPUs and Local SSD disks without committing to vCPUs or memory, specify `0` as the value for vCPU and memory quantities. For example, suppose you want to purchase a commitment `commitment-02` for a single NVIDIA P4 GPU in the `us-west2` region. You also want to create a new reservation as the attached reservation and specify Compute Engine to use the reserved GPU on an `n1-standard-2` VM in the `us-west2-b` zone. To purchase this example commitment with its attached reservation, make the following `POST` request:\n```\nPOST https://compute.googleapis.com/compute/v1/projects/my-project/regions/us-west2/commitments\n{\n \"name\": \"commitment-02\",\n \"plan\": \"TWELVE_MONTH\",\n \"type\": \"GENERAL_PURPOSE\",\n \"resources\":\n [ {\n  \"amount\": \"0\",\n  \"type\": \"VCPU\"\n },\n {\n  \"amount\": \"0\",\n  \"type\": \"MEMORY\"\n },\n {\n  \"acceleratorType\": \"nvidia-tesla-p4\",\n  \"amount\": \"4\",\n  \"type\": \"ACCELERATOR\"\n }\n ],\n \"reservations\":\n [ {\n  \"name\": \"reservation-01\",\n  \"specificReservation\":\n  {\n  \"count\": \"1\",\n  \"instanceProperties\":\n  {\n   \"guestAccelerators\":\n   [   {\n    \"acceleratorCount\": 4,\n    \"acceleratorType\": \"nvidia-tesla-p4\"\n   }\n   ],\n   \"machineType\": \"n1-standard-2\"\n  }\n  },\n  \"specificReservationRequired\": false,\n  \"zone\": \"us-west2-b\"\n }\n ]\n}\n```Suppose you want to purchase a commitment `commitment-03` for 1 NVIDIA V 100 GPU and 2 Local SSD disks in the `us-central1` region. You also want to create and attach two reservations in the `us-central1-a` zone. In the first reservation, `res-01` , you want to reserve 1 `n1-standard-2` VM with 1 GPU. You want to make `res-01` a targeted reservation, which means that you must specifically target that reservation by name to use its reserved VMs. In the second reservation, `res-02` , you want to reserve 1 `n1-standard-8` VM with 2 types of attached Local SSD disks. To purchase this example commitment with the attached reservations, make the following `POST` request. Note that the example commitment also contains vCPU and memory resources.\n```\nPOST https://compute.googleapis.com/compute/v1/projects/my-project/regions/us-central1/commitments\n{\n \"name\": \"commitment-03\",\n \"plan\": \"TWELVE_MONTH\",\n \"type\": \"GENERAL_PURPOSE\",\n \"resources\":\n [ {\n  \"amount\": \"96\",\n  \"type\": \"VCPU\"\n },\n {\n  \"amount\": \"638976\",\n  \"type\": \"MEMORY\"\n },\n {\n  \"acceleratorType\": \"nvidia-tesla-v100\",\n  \"amount\": \"1\",\n  \"type\": \"ACCELERATOR\"\n },\n {\n  \"amount\": \"768000\",\n  \"type\": \"LOCAL_SSD\"\n }\n ],\n \"reservations\":\n [ {\n  \"name\": \"res-01\",\n  \"specificReservation\":\n  {\n  \"count\": \"1\",\n  \"instanceProperties\":\n  {\n   \"guestAccelerators\":\n   [   {\n    \"acceleratorCount\": 1,\n    \"acceleratorType\": \"nvidia-tesla-v100\"\n   }\n   ],\n   \"machineType\": \"n1-standard-2\"\n  }\n  },\n  \"specificReservationRequired\": true,\n  \"zone\": \"us-central1-a\"\n },\n {\n  \"name\": \"res-02\",\n  \"specificReservation\":\n  {\n  \"count\": \"1\",\n  \"instanceProperties\":\n  {\n   \"localSsds\":\n   [   {\n    \"diskSizeGb\": \"375\",\n    \"interface\": \"SCSI\"\n   },\n   {\n    \"diskSizeGb\": \"375\",\n    \"interface\": \"NVME\"\n   }\n   ]\n   \"machineType\": \"n1-standard-8\"\n  }\n  },\n  \"specificReservationRequired\": false,\n  \"zone\": \"us-central1-a\"\n }\n ]\n}\n```\nAfter you purchase a commitment with attached reservations, the reservations remain active as long as the commitment is active. When your commitment expires, Compute Engine automatically deletes any attached reservations. Deletion of these reservations has no effect on any running VM instances that were tied to those reservations. The running VMs continue to run and you are still charged for those VMs.\nFor the duration of your commitment's term, you cannot delete or resize any attached reservations that contain GPUs, local SSDs, or both. However, you can replace the commitment's existing attached reservations with new ones. For more information on what can and cannot be changed for your attached reservations, see [Replace reservations that are attached to commitments](/compute/docs/instances/reservations-with-commitments#modifying_reservations_that_are_attached_to_commitments) .\n## Purchase commitments for licenses\nYou can purchase commitments for your licenses if you run your workloads on VMs that use the following operating system (OS) images:\n- **SUSE Linux Enterprise Server (SLES) images** \n- **SLES for SAP images** \n- **Red Hat Enterprise Linux (RHEL) images** \n- **RHEL for SAP images** \nThe CUD percentages that you receive for license commitments of each OS image depends on the number of vCPUs that your VM uses. The following tables show the CUD percentages for each type of software license commitment:\nWhen you purchase a commitment for licenses, the commitment forms a \"pool\" of licenses that automatically apply to any running VM instances within a selected project in a specified region. The licenses in the commitment are not tied to any one particular VM. When a VM starts, it takes a committed license from the pool, and when the VM stops it returns the license to the pool, where the license can be used by another VM. As long as there are available committed licenses in the pool, you continue to receive discounts for the premium OS usage.\nFor example, if you need to run 10 VMs in two regions (5 VMs in `us-central1` and 5 VMs in `us-west1` ) and under the same project ID, you must purchase 5 licenses in each region to cover those running VMs. For each commitment, your committed licenses can apply to any 5 concurrently running VMs at any time during the year in the respective region. You are billed monthly for the commitments regardless of your usage.\nAfter you purchase a commitment, your commitment becomes active on the following day at 12 AM US and Canadian Pacific Time (UTC-8, or UTC-7 during daylight saving time). Compute Engine [maintains a lien on your project](/resource-manager/docs/project-liens) for each region in your project where you purchase a commitment. When you purchase a new commitment for any region in your project, Compute Engine associates the lien for that region with the newly created commitment.\nBetween the time of your commitment purchase and its activation time, the status of your commitment remains as `NOT_YET_ACTIVE` (or as `PENDING` on the Google Cloud console). After activation, the status of your commitment changes to `ACTIVE` . For example, suppose you purchase your commitment on January 20th at 10:00 PM US and Canadian Pacific Time (UTC-8 or UTC-7). Compute Engine creates your commitment immediately with its status as `NOT_YET_ACTIVE` . However, your commitment becomes `ACTIVE` only on January 21st at 12:00 AM US and Canadian Pacific Time (UTC-8 or UTC-7).\nYou can't cancel a license commitment after you purchase it. When your license commitments expire, your running VMs continue to run and you are charged for the licenses at on-demand image prices.\n**Important:** Always verify that committed use discount contracts or commitments for your licenses are in the correct project ID and regions to avoid being double charged. You must purchase your license commitment in the same project and region as the machine using the license. For example, if you purchase your license commitment in Project A, but the running VMs that require the OS images are in Project B, you are charged for the license commitment in Project A and the on-demand image price for the VMs running in Project B.\nPurchase a license commitment using the Google Cloud console, the Google Cloud CLI, or REST.\nBefore you purchase a commitment using the Google Cloud console, select the project that you want to use to purchase the commitment. If discount sharing is enabled for a billing account, you can purchase the commitment using any project from that billing account. After you select the project, perform the following steps:- In the Google Cloud console, go to the **Committed Use Discounts** page. [Go to the Committed Use Discounts page](https://console.cloud.google.com/compute/commitments) \n- Click **Purchase commitment** to purchase a new commitment.\n- Click **New license committed use discount** to purchase a new license commitment.\n- **Name** your commitment and choose the **region** where you want it to apply.\n- Choose a **duration** amount of the commitment, either 1 or 3 years.\n- Choose a **License family** .\n- Choose the **License type and quantity** .\n- Choose the **Number of licenses** .\n- Click **Purchase** .\nUsing the gcloud CLI, run the [gcloud compute commitments create-license](/sdk/gcloud/reference/compute/commitments/create-license) command to purchase a license commitment.\n```\ngcloud compute commitments create-license COMMITMENT_NAME \\\n --license `LICENSE_URI`\n --amount NUMBER_OF_LICENSES \\\n --cores-per-license CORES_PER_LICENSE \\\n --plan PLAN \\\n --region REGION \\\n```\nReplace the following:- ``: the name for your commitment.\n- ``: the license URI. For example:`https://www.googleapis.com/compute/v1/projects/myproject/global/licenses/sles-sap-12`\n- ``: the number of licenses you plan to purchase.\n- ``: the number of cores per license. Enter`1-2``3-4`, or`5+`.\n- ``: enter the plan length:`12-month`or`36-month`.\n- ``: the region where this commitment applies.\nFor example, the following commitment is for 4 SAP licenses with 3-4 cores per license for 36 months in the `us-central1` region:\n```\ngcloud compute commitments create-license commitment-1\n --license https://www.googleapis.com/compute/v1/projects/myproject/global/licenses/sles-12\n --amount=4\n --cores-per-license=3-4\n --plan=36-month\n --region=us-central1\n```\nFor example, the following commitment is for 2 SLES for SAP licenses with 1-2 cores per license for 12 months in the `us-central1` region:\n```\ngcloud compute commitments create-license commitment-2\n --license https://www.googleapis.com/compute/v1/projects/myproject/global/licenses/sles-sap-12\n --amount=2\n --cores-per-license=1-2\n --plan=12-month\n --region=us-central1\n```\nUse the [regionCommitments.insert method](/compute/docs/reference/rest/v1/regionCommitments/insert) and include the `licenseResource` field to define the license commitment's properties.\n```\nPOST https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/regions/REGION/commitments?requestId=OPTIONAL_UNIQUE_ID\n{\n \"name\": COMMITMENT_NAME,\n \"plan\": PLAN,\n \"category\": \"LICENSE\",\n \"licenseResource\": {\n  \"coresPerLicense\": CORES_PER_LICENSE,\n  \"amount\": NUMBER_OF_LICENSES,\n  \"license\": `LICENSE_URI`\n  }\n}\n```\nReplace the following:- ``: the name for your commitment.\n- ``: the license URI. For example:`https://www.googleapis.com/compute/v1/projects/myproject/global/licenses/sles-sap-12`\n- ``: the number of licenses you plan to purchase.\n- ``: the number of cores per license. Enter`1-2``3-4`, or`5+`.\n- ``: enter the plan length:`12-month`or`36-month`.\n- ``: the region where this commitment applies.\nFor example, the following commitment is for 4 SLES for SAP licenses with 3-4 cores per license for 36 months in the `us-central1` region.\n```\nPOST https://compute.googleapis.com/compute/v1/projects/myproject/regions/us-central1/commitments\n{\n \"name\": \"commitment-3\",\n \"plan\": \"THIRTY_SIX_MONTH\",\n \"category\": \"LICENSE\",\n \"licenseResource\": {\n  \"coresPerLicense\": \"3-4\",\n  \"amount\": \"4\",\n  \"license\": \"https://www.googleapis.com/compute/v1/projects/suse-sap-cloud/global/licenses/sles-sap-12\"\n  }\n}\n```\n## Apply committed use discount recommendations\nCommitted use discount recommendations are available in the Google Cloud console. The [Recommender](/recommender/docs) generates a card with information about your VM usage over the last 30 days. If your VMs show a trend of uncommitted usage over 30 days, the Recommender classifies this as an opportunity to purchase committed use discounts to reduce your VM costs.\nUsage is considered uncommitted and eligible if the following is true.\n- The VM was active for the entire duration of the 30 days.\n- The VM's SKU is part of an eligible committed use discount bucket.\n- The VM's usage was not already covered by an existing commitment.\nRecommendations are refreshed once per day and take the last 30 days of usage history into consideration.\nRecommendations for committed use discounts are generated by two separate algorithms, which you can select from when purchasing (or accepting) them on the summary card.\n- cover minimum stable usage over time.\n- are based on overall usage and might cover resources that are not on all the time.\nYou can read more about commitment recommendations in the [committed use discount recommender](/docs/cuds-recommender) documentation.\n### Limitations\nCommitted use discount recommendations are available for the CPU and memory component of machine type commitments only. Committed use discount recommendations are not available for SSD, GPU or license commitments.\n### Review and accept a recommendation\nFor how to purchase the recommended commitments, see [purchasing recommendations](/docs/cuds-recommender#purchasing-recommendations) .\n### Dismiss a recommendation\nFor how to dismiss your commitment recommendations or to restore recommendations that were previously dismissed, see [dismissing recommendations](/docs/cuds-recommender#dismissing-recommendations) .\n### History of recommendations\nTo view the history of your applied and dismissed commitment recommendations, see [viewing the history of recommendations](/docs/cuds-recommender#recommendations-history) .\n## Enable discount sharing for hardware commitments\nBy default, hardware resource-based CUDs are applied to the project where you purchased your resource-based commitments and are discounts. If you move the project for which you purchased your commitments to a different Cloud Billing account, then you continue to receive the applicable committed use discounts for that project under the new Cloud Billing account.\nTo share the discount for hardware commitments across eligible usage in all projects linked to your , enable committed use discount sharing from the Google Cloud console.\n**Note:** Software license commitments are scoped to the project that you purchase them for. You can't share the discount for software license commitments.\nWhen you enable committed use discount sharing, the [commitment scope is changed from Project to Billing account](/billing/docs/how-to/cud-analysis-resource-based#understanding_discount_sharing) . After you change your commitment scope to by enabling discount sharing, to revert back to scope. Rather, [Cloud Billing Support](/support/billing) must perform this action for you.\nDiscount sharing works in conjunction with your attribution configuration. You can choose to use [proportional attribution](/docs/cuds-attribution#type-proportional) or [prioritized attribution](/docs/cuds-attribution#type-prioritized) .\nUnless you configure your attribution preferences first, when you enable discount sharing, it defaults to using [proportional attribution](/docs/cuds-attribution#type-proportional) for your Compute Engine resource-based commitments.\nIf you want to configure your attribution configuration , see [choose attribution for resource-based commitments](/docs/cuds-attribution#choose-attribution-resource-based) for more information and how to enable each type of attribution.\nComplete the following steps to enable committed use discount sharing:\n- Sign in to your Cloud Billing account in the Google Cloud console. [Sign in to your Cloud Billing account](https://console.cloud.google.com/billing/overview) \n- At the prompt, **choose the Cloud Billing account** for which you'd like to configure your committed use discounts to use discount sharing. The Billing page opens for the selected Cloud Billing account.\n- From the Billing navigation menu, select **CUD analysis** to view the Committed use discounts analysis page.\n- On the page, from the **Commitment type** menu, select **Resource-based commitments** .\n- Below the report title, locate the **Commitment scope** .- **Project** scope indicates that discount sharing isfor resource-based committed use discounts.discounts are only applied to eligible usage in the project in which the commitments are purchased.\n- **Billing account** scope indicates that discount sharing is already enabled for the resource-based commitments.commitments apply the committed use discounts acrossinassociated with the Cloud Billing account.\n- To change the commitment scope setting, select **Edit** .- If the is **Project** , in the text entry box, type **Enable** to enable discount sharing across the billing account, then click **Enable Billing Account Scope** to save your changes. **Caution:** After you change your commitment scope to , discount sharing is enabled on all of the current and future projects associated with the Cloud Billing account. You cannot disable discount sharing to revert back to scope. Rather, [Cloud Billing Support](/support/billing) must perform this action for you.\n- If the is **Billing account** , then discount sharing is already enabled. To and revert to -scoped commitments, click **Contact support** .**Important:** It can take up to 24 hours for a new discount sharing commitment scope to take effect. After 24 hours, confirm that your billing scope is set to **Billing Account** . If it isn't, contact [Cloud Billing Support](/support/billing) .\nYou only need to enable discount sharing on one project-scoped resource-based commitment to affect the scope of all resource-based commitments in the same Cloud Billing account. When you enable committed use discount sharing, your commitment scope changes as follows:\n- All of your current and active resource-based committed use discounts in all of the projects under the same Cloud Billing account, including those you previously purchased and new ones you purchase in the future, are shared across your Cloud Billing account.\n- When you change your commitment scope configuration, such as creating a new project linked to the Cloud Billing account, or linking an existing project to the Cloud Billing account, the change takes effect on the following day at 12 AM (midnight) US and Canadian Pacific Time (UTC-8 or UTC-7).\n- If you move the project that had the original commitment to a new Cloud Billing account, your discount sharing settings change. For information on the effects of changing the Cloud Billing account for a project, see [Change the Cloud Billing account linked to a project](/billing/docs/how-to/modify-project#change_the_billing_account_for_a_project) .\nTo get a better understanding of how committed use discounts impact and appear on your bill, see [Understand your bill with committed use discounts](#understand-your-bill-with-committed-use-discounts) .\n**Important:** After you enable discount sharing through the console, you can only disable it with the assistance of Cloud Billing support. If you disable discount sharing with the assistance of Cloud Billing support, all committed use discounts revert to the default setting of applying only to the projects through which with they were purchased. The reverted setting becomes effective at the beginning of the following month.\n## View your commitments\nView the list of all your commitments in the Google Cloud console, the Google Cloud CLI, or REST.\nIn the Google Cloud console, view a list of commitments in the **Committed use discounts** page.\n [Go to Committed use discounts](https://console.cloud.google.com/compute/commitments) \nMake a request using the `commitments list` command:\n```\ngcloud compute commitments list\n```\nThe tool returns a list of commitments:\n```\n NAME    REGION END_TIMESTAMP     STATUS\n my-commitment  us-east1 2018-03-17T00:00:00.000-07:00 NOT_YET_ACTIVE\n```\nYou can get a list of commitments across all regions by making an [aggregatedList request](/compute/docs/reference/latest/regionCommitments/aggregatedList) to the following URL:\n```\nhttps://compute.googleapis.com/compute/v1/projects/PROJECT_ID/aggregated/commitments\n```\nWhich returns a list of commitments:\n```\n\"commitments\": [{\n \"kind\": \"compute#commitment\",\n \"id\": \"3294122326373778983\",\n \"creationTimestamp\": \"2017-02-09T15:18:32.411-08:00\",\n \"name\": \"example-commitment\",\n \"region\": \"https://www.googleapis.com/compute/v1/projects/example-project/regions/us-central1\",\n \"selfLink\": \"https://www.googleapis.com/compute/v1/projects/example-project/regions/us-central1/commitments/example-commitment\",\n \"status\": \"NOT_YET_ACTIVE\",\n \"statusMessage\": \"The commitment is not yet active (its startTimestamp is in the future). It will not apply to current resource usage.\",\n \"plan\": \"TWELVE_MONTH\",\n \"startTimestamp\": \"2017-02-10T00:00:00.000-08:00\",\n \"endTimestamp\": \"2018-02-10T00:00:00.000-08:00\",\n \"resources\": [ {\n  \"type\": \"VCPU\",\n  \"amount\": \"5\"\n },\n {\n  \"type\": \"MEMORY\",\n  \"amount\": \"32500\"\n }]\n }\n]\n```\n## Modify a commitment\nYou can modify your active commitments in the following ways:\n- You can change the auto-renew status for your commitment. For more information, see [Renew commitments automatically](/compute/docs/instances/renew-commitments-automatically) .\n- You can modify the amount of resources in your commitments by either merging or splitting your existing commitments. For more information, see [Merge and split commitments](/compute/docs/instances/merge-and-split-commitments) .\n- You can upgrade the term of your 1-year commitments and convert them into 3-year commitments. For more information, see [Upgrade the term of commitments](/compute/docs/instances/upgrade-commitment-term) \n- You can change the Cloud Billing account that is linked to, and pays for, the project where you purchased your resource-based commitments. [Learn about changing the Cloud Billing account for a project](/billing/docs/how-to/modify-project#change_the_billing_account_for_a_project) .\nAfter you create the commitment, you can't modify the commitment's project, type, or region.\n## Cancel a commitment\nAfter you create a commitment, you can't cancel it. You must pay the agreed upon monthly amount for the duration of the commitment. Commitments are not affected by future pricing changes to the [standard prices](/compute/vm-instance-pricing) for Compute Engine resources.\nIf you accidentally purchased a commitment or made a mistake configuring your commitment, contact [Google Cloud Billing Support](https://support.google.com/cloud/contact/cloud_platform_billing) for help.\n## Understand your bill with committed use discounts\nRead the following documents to gain a better understanding of your billing:\n- [View and download the cost details of your invoice or statement](/billing/docs/how-to/cost-table) .\n- [Analyze the effectiveness of your committed use discounts](/billing/docs/how-to/cud-analysis) .\n- [Understand your savings with cost breakdown reports](/billing/docs/how-to/cost-breakdown) .## Support\nIf you have any questions regarding committed use discounts on your bill, you can [contact Google Cloud support](https://support.google.com/cloud/answer/6282346?ref_topic=3473162) .\n## What's next\n- Learn how to [merge and split resource-based commitments](/compute/docs/instances/merge-and-split-commitments) .\n- Learn how to [upgrade the term of resource-based commitments](/compute/docs/instances/upgrade-commitment-term) .\n- Learn how to [analyze the effectiveness of your resource-based CUDs](/billing/docs/how-to/cud-analysis-resource-based) .\n- Learn how to [renew resource-based commitments automatically](/compute/docs/instances/renew-commitments-automatically) .\n- Review the [prices of your VMs with and without CUDs](/compute/vm-instance-pricing) .", "guide": "Compute Engine"}