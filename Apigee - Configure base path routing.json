{"title": "Apigee - Configure base path routing", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Configure base path routing\nYou are currently viewing version 1.1 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\n**NOTE: ** Base path routing is supported in Apigee hybrid v1.1.0 and later releases.\nThis topic discusses base path routing. Base path routing allows you to configure and manage how Apigee hybrid routes API proxy calls to the correct environment.\n", "content": "## \n Use base path routing to manage proxy deployments\nBecause you can map a single virtual host to [multiple environments](/apigee/docs/hybrid/v1.1/environments-about#environments-can-share-the-same-host-alias) in hybrid, you need a way to specify which proxy base path maps to which environment.\nFor example, let's say you want to map two environments to the same host alias: `apitest.mydomain.net` . In your overrides file, you could create the following configuration where environments **dev1** and **dev2** both map to this host. For example:\n```\nenvs:\n - name: dev1\n hostAlias: \"apitest.mydomain.net\"\n ...\n - name: dev2\n hostAlias: \"apitest.mydomain.net\"\n ...\n```\nNow, let's say you deploy proxies to these environments. You deploy:\n- Proxy **foo1** with base path **/foo1** to **dev1** \n- Proxy **foo2** with base path **/foo2** to **dev2** \nSuppose a client calls this API: `https://apitest.mydomain.net/foo1` . Note there's nothing in this path (or in the host header that's generated for the request) that tells hybrid which environment to route the call to. Is the **foo1** proxy deployed to **dev1** or **dev2** ? Based only on the request URL, there's no way to tell. **You must explicitly map each of these base paths to one or more environments.**\nTo specify which environment a proxy call should be routed to, add the `paths.uri.prefixes` property to the `envs` property in your overrides file, as shown in the following example:\n```\ngcpProjectID: example\nk8sClusterName: apigee-hybrid\n# Apigee org name.\norg: my-org\nenvs:\n # Apigee environment name.\n - name: dev1\n hostAlias: \"apitest.mydomain.net\"\n sslCertPath: ./certs/keystore.pem\n sslKeyPath: ./certs/keystore.key\n serviceAccountPaths:\n  synchronizer: ./service-accounts/example-apigee-synchronizer.json\n  udca: ./service-accounts/example-apigee-udca.json\n paths:\n  uri:\n  prefixes:\n   - /foo1\n - name: dev2\n hostAlias: \"apitest.mydomain.net\"\n sslCertPath: ./certs/keystore.pem\n sslKeyPath: ./certs/keystore.key\n serviceAccountPaths:\n  synchronizer: ./service-accounts/example-apigee-synchronizer.json\n  udca: ./service-accounts/example-apigee-udca.json\n paths:\n  uri:\n  prefixes:\n   - /foo2\n ...\n```\nNow, when an API call comes in such as: `https://apitest.mydomain.net/foo1` , the ingress router knows where to send it. It knows that the **/foo1** proxy is deployed to the **dev1** environment, and the call gets routed to **dev1** 's message processor.\nIf you send this call, `https://apitest.mydomain.net/foo2` , it is likewise routed to the `dev2` environment's MP, and so on.\nIn summary, the `paths.uri.prefixes` configuration lets you manage proxy deployments among multiple environments that share the same host alias.\n**Best Practice** : Use base path routing when you want multiple environments to share the same host alias. Base path routing lets you limit the number of proxies deployed to any single environment. For more information, see [ Limit the number of proxy deployments](/apigee/docs/hybrid/v1.1/environments-about#limit-the-number-of-proxy-deployments) .\n## \n Add a new environment to the same domain\nThis section explains how to add a new environment to a domain.\nIn this scenario, assume that you have an environment `dev1` already deployed to the cluster. In this example configuration, only proxies with the basepath prefix `/foo1` are allowed:\n```\ngcpProjectID: example\nk8sClusterName: apigee-hybrid\n# Apigee org name.\norg: my-org\nenvs:\n # Apigee environment name.\n - name: dev1\n hostAlias: \"apitest.mydomain.net\"\n sslCertPath: ./certs/keystore.pem\n sslKeyPath: ./certs/keystore.key\n serviceAccountPaths:\n  synchronizer: ./service-accounts/example-apigee-synchronizer.json\n  udca: ./service-accounts/example-apigee-udca.json\n paths:\n  uri:\n  prefixes:\n   - /foo1\nmart:\n hostAlias: \"mart.apigee-hybrid-docs.net\"\n serviceAccountPath: ./service-accounts/example-apigee-mart.json\n sslCertPath: ./certs/fullchain.pem\n sslKeyPath: ./certs/privkey.key\nmetrics:\n serviceAccountPath: ./service-accounts/willwitman-istio-25240157d44a.json\n```\nTo add another environment that shares the same domain, follow these steps:\n- Create a new overrides file with the new enviroment configuration. For example, this  configuration creates an environment called`dev2`. In this environment, only  proxies with the path suffix`/foo2`are allowed:```\ngcpProjectID: example\nk8sClusterName: apigee-hybrid\n# Apigee org name.\norg: my-org\nenvs:\n # Apigee environment name.\n - name: dev2\n hostAlias: \"apitest.mydomain.net\"\n sslCertPath: ./certs/keystore.pem\n sslKeyPath: ./certs/keystore.key\n serviceAccountPaths:\n  synchronizer: ./service-accounts/example-apigee-synchronizer.json\n  udca: ./service-accounts/example-apigee-udca.json\n paths:\n  uri:\n  prefixes:\n   - /foo2\nmart:\n hostAlias: \"mart.apigee-hybrid-docs.net\"\n serviceAccountPath: ./service-accounts/example-apigee-mart.json\n sslCertPath: ./certs/fullchain.pem\n sslKeyPath: ./certs/privkey.key\nmetrics:\n serviceAccountPath: ./service-accounts/willwitman-istio-25240157d44a.json\n```\n- Run the following commands in any order:- ```\napigeectl apply -f overrides/overrides-dev2.yaml -c udca\n```\n- ```\napigeectl apply -f overrides/overrides-dev2.yaml -c synchronizer\n```\n- ```\napigeectl apply -f overrides/overrides-dev2.yaml -c runtime\n```\n- Deploy the proxy **foo2** to the **dev2** environment.\n- Call the proxy to test the setup.```\ncurl https://apitest.mydomain.net/foo2\n```## \n Add a new proxy base path to an existing environment\nTo add a new base path to an existing environment, simply add a `prefixes` entry for each new base path. For example, if you create a new proxy with the base path **/foo4** , and you want to deploy it to the environment called **dev2** , follow these steps:\n- Open the overrides file that has the definition of the **dev2** environment.\n- Add the`/foo4`base path to the`paths.uri.prefixes`element:```\ngcpProjectID: example\nk8sClusterName: apigee-hybrid\n# Apigee org name.\norg: my-org\nenvs:\n # Apigee environment name.\n - name: dev2\n hostAlias: \"apitest.mydomain.net\"\n sslCertPath: ./certs/keystore.pem\n sslKeyPath: ./certs/keystore.key\n serviceAccountPaths:\n  synchronizer: ./service-accounts/example-apigee-synchronizer.json\n  udca: ./service-accounts/example-apigee-udca.json\n paths:\n  uri:\n  prefixes:\n   - /foo2\n   - /foo4\nmart:\n hostAlias: \"mart.apigee-hybrid-docs.net\"\n serviceAccountPath: ./service-accounts/example-apigee-mart.json\n sslCertPath: ./certs/fullchain.pem\n sslKeyPath: ./certs/privkey.key\nmetrics:\n serviceAccountPath: ./service-accounts/willwitman-istio-25240157d44a.json\n```\n- Apply the`runtime`component to the cluster:```\napigeectl apply -f overrides/overrides-dev2.yaml -c runtime\n```\n- Call the proxy to test the setup.```\ncurl https://apitest.mydomain.net/foo4\n```If an API call comes in for `https://apitest.mydomain.net/foo4` , hybrid knows to route it to environment `dev2` .", "guide": "Apigee"}