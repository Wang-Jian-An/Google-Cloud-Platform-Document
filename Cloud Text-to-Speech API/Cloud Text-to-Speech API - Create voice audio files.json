{"title": "Cloud Text-to-Speech API - Create voice audio files", "url": "https://cloud.google.com/text-to-speech/docs/create-audio", "abstract": "# Cloud Text-to-Speech API - Create voice audio files\nText-to-Speech allows you to convert words and sentences into base64 encoded audio data of natural human speech. You can then convert the audio data into a playable audio file like an MP3 by decoding the base64 data. The Text-to-Speech API accepts input as raw text or [Speech Synthesis Markup Language (SSML)](/text-to-speech/docs/ssml) .\nThis document describes how to create an audio file from either text or SSML input using Text-to-Speech. You can also review the [Text-to-Speech basics](/text-to-speech/docs/basics) article if you are unfamiliar with concepts like speech synthesis or SSML.\nThese samples require that you have installed and initialized the Google Cloud CLI. For information about setting up the gcloud CLI, see [Authenticate to TTS](/text-to-speech/docs/authentication) .\n", "content": "## Convert text to synthetic voice audio\nThe following code samples demonstrate how to convert a string into audio data.\nYou can configure the output of speech synthesis in a variety of ways, including [selecting a unique voice](/text-to-speech/docs/voices) or [modulating the output in pitch, volume, speaking rate, and samplerate](/text-to-speech/docs/basics#audio-config) .\n**Note:** See [endpoints documentation](/text-to-speech/docs/endpoints) for specifics on using [Neural2 voices](/text-to-speech/docs/voice-types) .\nRefer to the [text:synthesize](/text-to-speech/docs/reference/rest/v1beta1/text/synthesize) API endpoint for complete details.\nTo synthesize audio from text, make an HTTP POST request to the [text:synthesize](/text-to-speech/docs/reference/rest/v1beta1/text/synthesize) endpoint. In the body of your POST request, specify the type of voice to synthesize in the `voice` configuration section, specify the text to synthesize in the `text` field of the `input` section, and specify the type of audio to create in the `audioConfig` section.\nThe following code snippet sends a synthesis request to the [text:synthesize](/text-to-speech/docs/reference/rest/v1beta1/text/synthesize) endpoint and saves the results to a file named `synthesize-text.txt` . Replace `` with your project ID.\n```\ncurl -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 -H \"x-goog-user-project: <var>PROJECT_ID</var>\" \\\u00a0 -H \"Content-Type: application/json; charset=utf-8\" \\\u00a0 --data \"{\u00a0 \u00a0 'input':{\u00a0 \u00a0 \u00a0 'text':'Android is a mobile operating system developed by Google,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0based on the Linux kernel and designed primarily for\u00a0 \u00a0 \u00a0 \u00a0 \u00a0touchscreen mobile devices such as smartphones and tablets.'\u00a0 \u00a0 },\u00a0 \u00a0 'voice':{\u00a0 \u00a0 \u00a0 'languageCode':'en-gb',\u00a0 \u00a0 \u00a0 'name':'en-GB-Standard-A',\u00a0 \u00a0 \u00a0 'ssmlGender':'FEMALE'\u00a0 \u00a0 },\u00a0 \u00a0 'audioConfig':{\u00a0 \u00a0 \u00a0 'audioEncoding':'MP3'\u00a0 \u00a0 }\u00a0 }\" \"https://texttospeech.googleapis.com/v1/text:synthesize\" > synthesize-text.txt\n```\nThe Text-to-Speech API returns the synthesized audio as base64-encoded data contained in the JSON output. The JSON output in the `synthesize-text.txt` file looks similar to the following code snippet.\n```\n{\n \"audioContent\": \"//NExAASCCIIAAhEAGAAEMW4kAYPnwwIKw/BBTpwTvB+IAxIfghUfW..\"\n}\n```\nTo decode the results from the Text-to-Speech API as an MP3 audio file, run the following command from the same directory as the `synthesize-text.txt` file.\n```\ncat synthesize-text.txt | grep 'audioContent' | \\sed 's|audioContent| |' | tr -d '\\n \":{},' > tmp.txt && \\base64 tmp.txt --decode > synthesize-text-audio.mp3 && \\rm tmp.txt\n```To learn how to install and use the client library for Text-to-Speech, see [Text-to-Speech client libraries](/text-to-speech/docs/libraries) .       For more information, see the [Text-to-Speech Go API reference documentation](/go/docs/reference/cloud.google.com/go/texttospeech/latest/apiv1) .\nTo authenticate to Text-to-Speech, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/texttospeech/synthesize_text/synthesize_text.go) \n```\n// SynthesizeText synthesizes plain text and saves the output to outputFile.func SynthesizeText(w io.Writer, text, outputFile string) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := texttospeech.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := texttospeechpb.SynthesizeSpeechRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Input: &texttospeechpb.SynthesisInput{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputSource: &texttospeechpb.SynthesisInput_Text{Text: text},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Note: the voice can also be specified by name.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Names of voices can be retrieved with client.ListVoices().\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Voice: &texttospeechpb.VoiceSelectionParams{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LanguageCode: \"en-US\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SsmlGender: \u00a0 texttospeechpb.SsmlVoiceGender_FEMALE,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AudioConfig: &texttospeechpb.AudioConfig{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AudioEncoding: texttospeechpb.AudioEncoding_MP3,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := client.SynthesizeSpeech(ctx, &req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 err = ioutil.WriteFile(outputFile, resp.AudioContent, 0644)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Audio content written to file: %v\\n\", outputFile)\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```To learn how to install and use the client library for Text-to-Speech, see [Text-to-Speech client libraries](/text-to-speech/docs/libraries) .       For more information, see the [Text-to-Speech Java API reference documentation](/java/docs/reference/google-cloud-texttospeech/latest/overview) .\nTo authenticate to Text-to-Speech, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/texttospeech/snippets/src/main/java/com/example/texttospeech/SynthesizeText.java) \n```\n/**\u00a0* Demonstrates using the Text to Speech client to synthesize text or ssml.\u00a0*\u00a0* @param text the raw text to be synthesized. (e.g., \"Hello there!\")\u00a0* @throws Exception on TextToSpeechClient Errors.\u00a0*/public static ByteString synthesizeText(String text) throws Exception {\u00a0 // Instantiates a client\u00a0 try (TextToSpeechClient textToSpeechClient = TextToSpeechClient.create()) {\u00a0 \u00a0 // Set the text input to be synthesized\u00a0 \u00a0 SynthesisInput input = SynthesisInput.newBuilder().setText(text).build();\u00a0 \u00a0 // Build the voice request\u00a0 \u00a0 VoiceSelectionParams voice =\u00a0 \u00a0 \u00a0 \u00a0 VoiceSelectionParams.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setLanguageCode(\"en-US\") // languageCode = \"en_us\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSsmlGender(SsmlVoiceGender.FEMALE) // ssmlVoiceGender = SsmlVoiceGender.FEMALE\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Select the type of audio file you want returned\u00a0 \u00a0 AudioConfig audioConfig =\u00a0 \u00a0 \u00a0 \u00a0 AudioConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setAudioEncoding(AudioEncoding.MP3) // MP3 audio.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Perform the text-to-speech request\u00a0 \u00a0 SynthesizeSpeechResponse response =\u00a0 \u00a0 \u00a0 \u00a0 textToSpeechClient.synthesizeSpeech(input, voice, audioConfig);\u00a0 \u00a0 // Get the audio contents from the response\u00a0 \u00a0 ByteString audioContents = response.getAudioContent();\u00a0 \u00a0 // Write the response to the output file.\u00a0 \u00a0 try (OutputStream out = new FileOutputStream(\"output.mp3\")) {\u00a0 \u00a0 \u00a0 out.write(audioContents.toByteArray());\u00a0 \u00a0 \u00a0 System.out.println(\"Audio content written to file \\\"output.mp3\\\"\");\u00a0 \u00a0 \u00a0 return audioContents;\u00a0 \u00a0 }\u00a0 }}\n```To learn how to install and use the client library for Text-to-Speech, see [Text-to-Speech client libraries](/text-to-speech/docs/libraries) .       For more information, see the [Text-to-Speech Node.js API reference documentation](/nodejs/docs/reference/text-to-speech/latest) .\nTo authenticate to Text-to-Speech, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/texttospeech/synthesize.js) \n```\nconst textToSpeech = require('@google-cloud/text-to-speech');const fs = require('fs');const util = require('util');const client = new textToSpeech.TextToSpeechClient();/**\u00a0* TODO(developer): Uncomment the following lines before running the sample.\u00a0*/// const text = 'Text to synthesize, eg. hello';// const outputFile = 'Local path to save audio file to, e.g. output.mp3';const request = {\u00a0 input: {text: text},\u00a0 voice: {languageCode: 'en-US', ssmlGender: 'FEMALE'},\u00a0 audioConfig: {audioEncoding: 'MP3'},};const [response] = await client.synthesizeSpeech(request);const writeFile = util.promisify(fs.writeFile);await writeFile(outputFile, response.audioContent, 'binary');console.log(`Audio content written to file: ${outputFile}`);\n```To learn how to install and use the client library for Text-to-Speech, see [Text-to-Speech client libraries](/text-to-speech/docs/libraries) .       For more information, see the [Text-to-Speech Python API reference documentation](/python/docs/reference/texttospeech/latest) .\nTo authenticate to Text-to-Speech, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/texttospeech/snippets/synthesize_text.py) \n```\ndef synthesize_text(text):\u00a0 \u00a0 \"\"\"Synthesizes speech from the input string of text.\"\"\"\u00a0 \u00a0 from google.cloud import texttospeech\u00a0 \u00a0 client = texttospeech.TextToSpeechClient()\u00a0 \u00a0 input_text = texttospeech.SynthesisInput(text=text)\u00a0 \u00a0 # Note: the voice can also be specified by name.\u00a0 \u00a0 # Names of voices can be retrieved with client.list_voices().\u00a0 \u00a0 voice = texttospeech.VoiceSelectionParams(\u00a0 \u00a0 \u00a0 \u00a0 language_code=\"en-US\",\u00a0 \u00a0 \u00a0 \u00a0 name=\"en-US-Standard-C\",\u00a0 \u00a0 \u00a0 \u00a0 ssml_gender=texttospeech.SsmlVoiceGender.FEMALE,\u00a0 \u00a0 )\u00a0 \u00a0 audio_config = texttospeech.AudioConfig(\u00a0 \u00a0 \u00a0 \u00a0 audio_encoding=texttospeech.AudioEncoding.MP3\u00a0 \u00a0 )\u00a0 \u00a0 response = client.synthesize_speech(\u00a0 \u00a0 \u00a0 \u00a0 request={\"input\": input_text, \"voice\": voice, \"audio_config\": audio_config}\u00a0 \u00a0 )\u00a0 \u00a0 # The response's audio_content is binary.\u00a0 \u00a0 with open(\"output.mp3\", \"wb\") as out:\u00a0 \u00a0 \u00a0 \u00a0 out.write(response.audio_content)\u00a0 \u00a0 \u00a0 \u00a0 print('Audio content written to file \"output.mp3\"')\n```No preface\n **C#** : Please follow the [C# setup instructions](/text-to-speech/docs/libraries) on the client libraries page  and then visit the [Text-to-Speech reference documentation for .NET.](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.TextToSpeech.V1/index.html) \n **PHP** : Please follow the [PHP setup instructions](/text-to-speech/docs/libraries) on the client libraries page  and then visit the [Text-to-Speech reference documentation for PHP.](/php/docs/reference/cloud-text-to-speech/latest) \n **Ruby** : Please follow the [Ruby setup instructions](/text-to-speech/docs/libraries) on the client libraries page  and then visit the [Text-to-Speech reference documentation for Ruby.](https://googleapis.dev/ruby/google-cloud-text_to_speech/latest/Google/Cloud/TextToSpeech/V1.html)\n## Convert SSML to synthetic voice audio\nUsing SSML in your audio synthesis request can produce audio that is more similar to natural human speech. Specifically, SSML gives you finer-grain control over how the audio output represents pauses in the speech or how the audio pronounces dates, times, acronyms, and abbreviations.\nFor more details on the SSML elements supported by Text-to-Speech API, see the [SSML reference](/text-to-speech/docs/ssml) .\nRefer to the [text:synthesize](/text-to-speech/docs/reference/rest/v1beta1/text/synthesize) API endpoint for complete details.\nTo synthesize audio from SSML, make an HTTP POST request to the [text:synthesize](/text-to-speech/docs/reference/rest/v1beta1/text/synthesize) endpoint. In the body of your POST request, specify the type of voice to synthesize in the `voice` configuration section, specify the SSML to synthesize in the `ssml` field of the `input` section, and specify the type of audio to create in the `audioConfig` section.\nThe following code snippet sends a synthesis request to the [text:synthesize](/text-to-speech/docs/reference/rest/v1beta1/text/synthesize) endpoint and saves the results to a file named `synthesize-ssml.txt` . Replace `` with your project ID.\n```\ncurl -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\\u00a0 -H \"x-goog-user-project: <var>PROJECT_ID</var>\" \\\u00a0 -H \"Content-Type: application/json; charset=utf-8\" --data \"{\u00a0 \u00a0 'input':{\u00a0 \u00a0 \u00a0'ssml':'<speak>The <say-as interpret-as=\\\"characters\\\">SSML</say-as> standard\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 is defined by the <sub alias=\\\"World Wide Web Consortium\\\">W3C</sub>.</speak>'\u00a0 \u00a0 },\u00a0 \u00a0 'voice':{\u00a0 \u00a0 \u00a0 'languageCode':'en-us',\u00a0 \u00a0 \u00a0 'name':'en-US-Standard-B',\u00a0 \u00a0 \u00a0 'ssmlGender':'MALE'\u00a0 \u00a0 },\u00a0 \u00a0 'audioConfig':{\u00a0 \u00a0 \u00a0 'audioEncoding':'MP3'\u00a0 \u00a0 }\u00a0 }\" \"https://texttospeech.googleapis.com/v1/text:synthesize\" > synthesize-ssml.txt\n```\nThe Text-to-Speech API returns the synthesized audio as base64-encoded data contained in the JSON output. The JSON output in the `synthesize-ssml.txt` file looks similar to the following code snippet.\n```\n{\n \"audioContent\": \"//NExAASCCIIAAhEAGAAEMW4kAYPnwwIKw/BBTpwTvB+IAxIfghUfW..\"\n}\n```\nTo decode the results from the Text-to-Speech API as an MP3 audio file, run the following command from the same directory as the `synthesize-ssml.txt` file.\n```\ncat synthesize-ssml.txt | grep 'audioContent' | \\sed 's|audioContent| |' | tr -d '\\n \":{},' > tmp.txt && \\base64 tmp.txt --decode > synthesize-ssml-audio.mp3 && \\rm tmp.txt\n```To learn how to install and use the client library for Text-to-Speech, see [Text-to-Speech client libraries](/text-to-speech/docs/libraries) .       For more information, see the [Text-to-Speech Go API reference documentation](/go/docs/reference/cloud.google.com/go/texttospeech/latest/apiv1) .\nTo authenticate to Text-to-Speech, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/texttospeech/synthesize_text/synthesize_text.go) \n```\n// SynthesizeSSML synthesizes ssml and saves the output to outputFile.//// ssml must be well-formed according to://// \u00a0 \u00a0 \u00a0https://www.w3.org/TR/speech-synthesis///// Example: <speak>Hello there.</speak>func SynthesizeSSML(w io.Writer, ssml, outputFile string) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := texttospeech.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := texttospeechpb.SynthesizeSpeechRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Input: &texttospeechpb.SynthesisInput{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputSource: &texttospeechpb.SynthesisInput_Ssml{Ssml: ssml},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Note: the voice can also be specified by name.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Names of voices can be retrieved with client.ListVoices().\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Voice: &texttospeechpb.VoiceSelectionParams{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LanguageCode: \"en-US\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SsmlGender: \u00a0 texttospeechpb.SsmlVoiceGender_FEMALE,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AudioConfig: &texttospeechpb.AudioConfig{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AudioEncoding: texttospeechpb.AudioEncoding_MP3,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := client.SynthesizeSpeech(ctx, &req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 err = ioutil.WriteFile(outputFile, resp.AudioContent, 0644)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Audio content written to file: %v\\n\", outputFile)\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```To learn how to install and use the client library for Text-to-Speech, see [Text-to-Speech client libraries](/text-to-speech/docs/libraries) .       For more information, see the [Text-to-Speech Java API reference documentation](/java/docs/reference/google-cloud-texttospeech/latest/overview) .\nTo authenticate to Text-to-Speech, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/texttospeech/snippets/src/main/java/com/example/texttospeech/SynthesizeText.java) \n```\n/**\u00a0* Demonstrates using the Text to Speech client to synthesize text or ssml.\u00a0*\u00a0* <p>Note: ssml must be well-formed according to: (https://www.w3.org/TR/speech-synthesis/\u00a0* Example: <speak>Hello there.</speak>\u00a0*\u00a0* @param ssml the ssml document to be synthesized. (e.g., \"<?xml...\")\u00a0* @throws Exception on TextToSpeechClient Errors.\u00a0*/public static ByteString synthesizeSsml(String ssml) throws Exception {\u00a0 // Instantiates a client\u00a0 try (TextToSpeechClient textToSpeechClient = TextToSpeechClient.create()) {\u00a0 \u00a0 // Set the ssml input to be synthesized\u00a0 \u00a0 SynthesisInput input = SynthesisInput.newBuilder().setSsml(ssml).build();\u00a0 \u00a0 // Build the voice request\u00a0 \u00a0 VoiceSelectionParams voice =\u00a0 \u00a0 \u00a0 \u00a0 VoiceSelectionParams.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setLanguageCode(\"en-US\") // languageCode = \"en_us\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSsmlGender(SsmlVoiceGender.FEMALE) // ssmlVoiceGender = SsmlVoiceGender.FEMALE\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Select the type of audio file you want returned\u00a0 \u00a0 AudioConfig audioConfig =\u00a0 \u00a0 \u00a0 \u00a0 AudioConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setAudioEncoding(AudioEncoding.MP3) // MP3 audio.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Perform the text-to-speech request\u00a0 \u00a0 SynthesizeSpeechResponse response =\u00a0 \u00a0 \u00a0 \u00a0 textToSpeechClient.synthesizeSpeech(input, voice, audioConfig);\u00a0 \u00a0 // Get the audio contents from the response\u00a0 \u00a0 ByteString audioContents = response.getAudioContent();\u00a0 \u00a0 // Write the response to the output file.\u00a0 \u00a0 try (OutputStream out = new FileOutputStream(\"output.mp3\")) {\u00a0 \u00a0 \u00a0 out.write(audioContents.toByteArray());\u00a0 \u00a0 \u00a0 System.out.println(\"Audio content written to file \\\"output.mp3\\\"\");\u00a0 \u00a0 \u00a0 return audioContents;\u00a0 \u00a0 }\u00a0 }}\n```To learn how to install and use the client library for Text-to-Speech, see [Text-to-Speech client libraries](/text-to-speech/docs/libraries) .       For more information, see the [Text-to-Speech Node.js API reference documentation](/nodejs/docs/reference/text-to-speech/latest) .\nTo authenticate to Text-to-Speech, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/texttospeech/synthesize.js) \n```\nconst textToSpeech = require('@google-cloud/text-to-speech');const fs = require('fs');const util = require('util');const client = new textToSpeech.TextToSpeechClient();/**\u00a0* TODO(developer): Uncomment the following lines before running the sample.\u00a0*/// const ssml = '<speak>Hello there.</speak>';// const outputFile = 'Local path to save audio file to, e.g. output.mp3';const request = {\u00a0 input: {ssml: ssml},\u00a0 voice: {languageCode: 'en-US', ssmlGender: 'FEMALE'},\u00a0 audioConfig: {audioEncoding: 'MP3'},};const [response] = await client.synthesizeSpeech(request);const writeFile = util.promisify(fs.writeFile);await writeFile(outputFile, response.audioContent, 'binary');console.log(`Audio content written to file: ${outputFile}`);\n```To learn how to install and use the client library for Text-to-Speech, see [Text-to-Speech client libraries](/text-to-speech/docs/libraries) .       For more information, see the [Text-to-Speech Python API reference documentation](/python/docs/reference/texttospeech/latest) .\nTo authenticate to Text-to-Speech, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/texttospeech/snippets/synthesize_text.py) \n```\ndef synthesize_ssml(ssml):\u00a0 \u00a0 \"\"\"Synthesizes speech from the input string of ssml.\u00a0 \u00a0 Note: ssml must be well-formed according to:\u00a0 \u00a0 \u00a0 \u00a0 https://www.w3.org/TR/speech-synthesis/\u00a0 \u00a0 Example: <speak>Hello there.</speak>\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 from google.cloud import texttospeech\u00a0 \u00a0 client = texttospeech.TextToSpeechClient()\u00a0 \u00a0 input_text = texttospeech.SynthesisInput(ssml=ssml)\u00a0 \u00a0 # Note: the voice can also be specified by name.\u00a0 \u00a0 # Names of voices can be retrieved with client.list_voices().\u00a0 \u00a0 voice = texttospeech.VoiceSelectionParams(\u00a0 \u00a0 \u00a0 \u00a0 language_code=\"en-US\",\u00a0 \u00a0 \u00a0 \u00a0 name=\"en-US-Standard-C\",\u00a0 \u00a0 \u00a0 \u00a0 ssml_gender=texttospeech.SsmlVoiceGender.FEMALE,\u00a0 \u00a0 )\u00a0 \u00a0 audio_config = texttospeech.AudioConfig(\u00a0 \u00a0 \u00a0 \u00a0 audio_encoding=texttospeech.AudioEncoding.MP3\u00a0 \u00a0 )\u00a0 \u00a0 response = client.synthesize_speech(\u00a0 \u00a0 \u00a0 \u00a0 input=input_text, voice=voice, audio_config=audio_config\u00a0 \u00a0 )\u00a0 \u00a0 # The response's audio_content is binary.\u00a0 \u00a0 with open(\"output.mp3\", \"wb\") as out:\u00a0 \u00a0 \u00a0 \u00a0 out.write(response.audio_content)\u00a0 \u00a0 \u00a0 \u00a0 print('Audio content written to file \"output.mp3\"')\n```No preface\n **C#** : Please follow the [C# setup instructions](/text-to-speech/docs/libraries) on the client libraries page  and then visit the [Text-to-Speech reference documentation for .NET.](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.TextToSpeech.V1/index.html) \n **PHP** : Please follow the [PHP setup instructions](/text-to-speech/docs/libraries) on the client libraries page  and then visit the [Text-to-Speech reference documentation for PHP.](/php/docs/reference/cloud-text-to-speech/latest) \n **Ruby** : Please follow the [Ruby setup instructions](/text-to-speech/docs/libraries) on the client libraries page  and then visit the [Text-to-Speech reference documentation for Ruby.](https://googleapis.dev/ruby/google-cloud-text_to_speech/latest/Google/Cloud/TextToSpeech/V1.html)", "guide": "Cloud Text-to-Speech API"}