{"title": "Cloud Text-to-Speech API - \u5c07\u8a2d\u5099\u914d\u7f6e\u6587\u4ef6\u7528\u65bc\u751f\u6210\u7684\u97f3\u983b", "url": "https://cloud.google.com/text-to-speech/docs/audio-profiles?hl=zh-cn", "abstract": "# Cloud Text-to-Speech API - \u5c07\u8a2d\u5099\u914d\u7f6e\u6587\u4ef6\u7528\u65bc\u751f\u6210\u7684\u97f3\u983b\n\u672c\u9801\u9762\u4ecb\u7d39\u77ad\u5982\u4f55\u7232\u4f7f\u7528 Text-to-Speech \u5275\u5efa\u7684\u97f3\u983b\u9078\u64c7\u8a2d\u5099\u914d\u7f6e\u6587\u4ef6\u3002\n\u60a8\u53ef\u4ee5\u512a\u5316 Text-to-Speech \u751f\u6210\u7684 [\u5408\u6210\u8a9e\u97f3](https://cloud.google.com/text-to-speech/docs/basics?hl=zh-cn#speech_synthesis) \uff0c\u4ee5\u4fbf\u5728\u5404\u985e\u786c\u4ef6\u4e0a\u64ad\u653e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u61c9\u7528\u4e3b\u8981\u5728\u8f03\u5c0f\u7684\u201c\u7a7f\u6234\u5f0f\u201d\u8a2d\u5099\u4e0a\u904b\u884c\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u5c08\u9580\u91dd\u5c0d\u5c0f\u578b\u63da\u8072\u5668\u9032\u884c\u512a\u5316\u7684 Text-to-Speech \u5275\u5efa\u5408\u6210\u8a9e\u97f3\u3002\n\u60a8\u9084\u53ef\u4ee5\u5c07\u591a\u500b\u8a2d\u5099\u914d\u7f6e\u6587\u4ef6\u61c9\u7528\u5230\u540c\u4e00\u5408\u6210\u8a9e\u97f3\u3002Text-to-Speech API \u6703\u6309\u7167\u5411 [text:synthesize](https://cloud.google.com/text-to-speech/docs/reference/rest/v1/text/synthesize?hl=zh-cn) \u7aef\u9ede\u767c\u51fa\u7684\u8acb\u6c42\u4e2d\u63d0\u4f9b\u7684\u9806\u5e8f\uff0c\u4f9d\u6b21\u5c07\u8a2d\u5099\u914d\u7f6e\u6587\u4ef6\u61c9\u7528\u5230\u6b64\u97f3\u983b\u3002\u4e00\u500b\u914d\u7f6e\u6587\u4ef6\u53ea\u80fd\u6307\u5b9a\u4e00\u6b21\uff0c\u56e0\u7232\u591a\u6b21\u61c9\u7528\u76f8\u540c\u7684\u914d\u7f6e\u6587\u4ef6\u53ef\u80fd\u6703\u7522\u751f\u4e0d\u826f\u7d50\u679c\u3002\n\u4f7f\u7528\u97f3\u983b\u914d\u7f6e\u6587\u4ef6\u662f\u53ef\u9078\u64cd\u4f5c\u3002\u5982\u679c\u60a8\u9078\u64c7\u4f7f\u7528\u4e00\u500b\uff08\u6216\u591a\u500b\uff09\u97f3\u983b\u914d\u7f6e\u6587\u4ef6\uff0c\u5247 Text-to-Speech \u6703\u5c07\u914d\u7f6e\u6587\u4ef6\u61c9\u7528\u65bc\u5408\u6210\u5f8c\u7684\u8a9e\u97f3\u7d50\u679c\u3002\u5982\u679c\u60a8\u9078\u64c7\u4e0d\u4f7f\u7528\u97f3\u983b\u914d\u7f6e\u6587\u4ef6\uff0c\u5247\u6703\u6536\u5230\u4e0d\u6d89\u53ca\u4efb\u4f55\u5408\u6210\u5f8c\u4fee\u6539\u7684\u8a9e\u97f3\u7d50\u679c\u3002\n\u5982\u679c\u60a8\u60f3\u807d\u807d\u4e0d\u540c\u914d\u7f6e\u6587\u4ef6\u751f\u6210\u7684\u97f3\u983b\u4e4b\u9593\u7684\u5dee\u7570\uff0c\u8acb\u6bd4\u8f03\u4e0b\u9762\u7684\u5169\u500b\u526a\u8f2f\u3002\n\u793a\u4f8b 1\uff1a \u4f7f\u7528 `handset-class-device` \u914d\u7f6e\u6587\u4ef6\u751f\u6210\u7684\u97f3\u983b\n\u793a\u4f8b 2\uff1a \u4f7f\u7528 `telephony-class-application` \u914d\u7f6e\u6587\u4ef6\u751f\u6210\u7684\u97f3\u983b\n\u6ce8\u610f\uff1a\u901a\u904e\u8abf\u6574\u97f3\u983b\u6548\u679c\u7684\u7bc4\u570d\uff0c\u6bcf\u500b\u97f3\u983b\u914d\u7f6e\u6587\u4ef6\u90fd\u5df2\u91dd\u5c0d\u7279\u5b9a\u8a2d\u5099\u9032\u884c\u4e86\u512a\u5316\u3002\u4f46\u662f\uff0c\u7528\u65bc\u8abf\u6574\u914d\u7f6e\u6587\u4ef6\u7684\u8a2d\u5099\u7684\u54c1\u724c\u548c\u578b\u865f\u53ef\u80fd\u8207\u7528\u6236\u7684\u64ad\u653e\u8a2d\u5099\u4e0d\u5b8c\u5168\u5339\u914d\u3002\u60a8\u53ef\u80fd\u9700\u8981\u5617\u8a66\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4ee5\u4fbf\u7232\u60a8\u7684\u61c9\u7528\u627e\u5230\u6700\u4f73\u7684\u8072\u97f3\u8f38\u51fa\u3002\n", "content": "## \u53ef\u7528\u7684\u97f3\u983b\u914d\u7f6e\u6587\u4ef6\n\u4e0b\u8868\u63d0\u4f9b\u53ef\u4f9b Text-to-Speech API \u4f7f\u7528\u7684\u8a2d\u5099\u914d\u7f6e\u6587\u4ef6\u7684 ID \u548c\u793a\u4f8b\u3002\n| \u97f3\u983b\u914d\u7f6e\u6587\u4ef6 ID      | \u512a\u5316\u9069\u7528\u5c0d\u8c61            |\n|:--------------------------------------|:---------------------------------------------------------|\n| wearable-class-device     | \u667a\u80fd\u624b\u9336\u548c\u5176\u4ed6\u53ef\u7a7f\u6234\u8a2d\u5099\uff0c\u4f8b\u5982 Apple Watch\u3001Wear OS \u624b\u9336 |\n| handset-class-device     | \u667a\u80fd\u624b\u6a5f\uff0c\u5982 Google Pixel\u3001Samsung Galaxy\u3001Apple iPhone |\n| headphone-class-device    | \u7528\u65bc\u97f3\u983b\u64ad\u653e\u7684\u8033\u585e\u6216\u8033\u6a5f\uff0c\u5982 Sennheiser \u8033\u6a5f    |\n| small-bluetooth-speaker-class-device | \u5c0f\u578b\u5bb6\u5ead\u63da\u8072\u5668\uff0c\u4f8b\u5982 Google Home Mini     |\n| medium-bluetooth-speaker-class-device | \u667a\u80fd\u5bb6\u5c45\u63da\u8072\u5668\uff0c\u4f8b\u5982 Google Home       |\n| large-home-entertainment-class-device | \u5bb6\u5ead\u5a1b\u6a02\u7cfb\u7d71\u6216\u667a\u80fd\u96fb\u8996\uff0c\u4f8b\u5982 Google Home Max\u3001LG TV  |\n| large-automotive-class-device   | \u8eca\u8f09\u63da\u8072\u5668            |\n| telephony-class-application   | \u4e92\u52d5\u8a9e\u97f3\u97ff\u61c9 (IVR) \u7cfb\u7d71         |\n## \u6307\u5b9a\u8981\u4f7f\u7528\u7684\u97f3\u983b\u914d\u7f6e\u6587\u4ef6\n\u5982\u679c\u8981\u6307\u5b9a\u5c07\u8981\u4f7f\u7528\u7684\u97f3\u983b\u914d\u7f6e\u6587\u4ef6\uff0c\u8acb\u7232\u8a9e\u97f3\u5408\u6210\u8acb\u6c42\u8a2d\u7f6e [effectsProfileId](https://cloud.google.com/text-to-speech/docs/reference/rest/v1/text/synthesize?hl=zh-cn#audioconfig) \u5b57\u6bb5\u3002\n\u8981\u751f\u6210\u97f3\u983b\u6587\u4ef6\uff0c\u8acb\u767c\u51fa `POST` \u8acb\u6c42\u4e26\u63d0\u4f9b\u76f8\u61c9\u7684\u8acb\u6c42\u6b63\u6587\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u4e00\u500b\u4f7f\u7528 `curl` \u767c\u51fa\u7684 `POST` \u8acb\u6c42\u3002\u8a72\u793a\u4f8b\u4f7f\u7528 Google Cloud CLI \u4f86\u6aa2\u7d22\u8acb\u6c42\u7684\u8a2a\u554f\u4ee4\u724c\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd gcloud CLI\uff0c\u8acb\u53c3\u95b1 [\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/text-to-speech/docs/authentication?hl=zh-cn) \u3002\n\u4ee5\u4e0b\u793a\u4f8b\u986f\u793a\u5982\u4f55\u5411 [text:synthesize](https://cloud.google.com/text-to-speech/docs/reference/rest/v1/text/synthesize?hl=zh-cn) \u7aef\u9ede\u767c\u9001\u8acb\u6c42\u3002\n```\ncurl \\\u00a0 -H \"Authorization: Bearer \"$(gcloud auth print-access-token) \\\u00a0 -H \"Content-Type: application/json; charset=utf-8\" \\\u00a0 --data \"{\u00a0 \u00a0 'input':{\u00a0 \u00a0 \u00a0 'text':'This is a sentence that helps test how audio profiles can change the way Cloud Text-to-Speech sounds.'\u00a0 \u00a0 },\u00a0 \u00a0 'voice':{\u00a0 \u00a0 \u00a0 'languageCode':'en-us',\u00a0 \u00a0 },\u00a0 \u00a0 'audioConfig':{\u00a0 \u00a0 \u00a0 'audioEncoding':'LINEAR16',\u00a0 \u00a0 \u00a0 'effectsProfileId': ['telephony-class-application']\u00a0 \u00a0 }\u00a0 }\" \"https://texttospeech.googleapis.com/v1beta1/text:synthesize\" > audio-profile.txt\n```\n\u5982\u679c\u8acb\u6c42\u6210\u529f\uff0cText-to-Speech API \u5c07\u8fd4\u56de\u5305\u542b\u5728 JSON \u8f38\u51fa\u4e2d\u7684 base64 \u7de8\u78bc\u6578\u64da\u683c\u5f0f\u7684\u5408\u6210\u97f3\u983b\u3002 `audio-profiles.txt` \u6587\u4ef6\u4e2d\u7684 JSON \u8f38\u51fa\u5982\u4e0b\u6240\u793a\uff1a\n```\n{\u00a0 \"audioContent\": \"//NExAASCCIIAAhEAGAAEMW4kAYPnwwIKw/BBTpwTvB+IAxIfghUfW..\"}\n```\n\u8981\u5c07 Cloud Text-to-Speech API \u7684\u5408\u6210\u7d50\u679c\u89e3\u78bc\u7232 MP3 \u97f3\u983b\u6587\u4ef6\uff0c\u8acb\u5f9e `audio-profiles.txt` \u6587\u4ef6\u6240\u5728\u7684\u76ee\u9304\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\nsed 's|audioContent| |' < audio-profile.txt > tmp-output.txt && \\\ntr -d '\\n \":{}' < tmp-output.txt > tmp-output-2.txt && \\\nbase64 tmp-output-2.txt --decode > audio-profile.wav && \\\nrm tmp-output*.txt\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Go API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/texttospeech/latest/apiv1?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/texttospeech/synthesize_speech/audio_profile.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 \"io/ioutil\"\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 texttospeech \"cloud.google.com/go/texttospeech/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/texttospeech/apiv1/texttospeechpb\")// audioProfile generates audio from text using a custom synthesizer like a telephone call.func audioProfile(w io.Writer, text string, outputFile string) error {\u00a0 \u00a0 \u00a0 \u00a0 // text := \"hello\"\u00a0 \u00a0 \u00a0 \u00a0 // outputFile := \"out.mp3\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := texttospeech.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &texttospeechpb.SynthesizeSpeechRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Input: &texttospeechpb.SynthesisInput{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputSource: &texttospeechpb.SynthesisInput_Text{Text: text},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Voice: &texttospeechpb.VoiceSelectionParams{LanguageCode: \"en-US\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AudioConfig: &texttospeechpb.AudioConfig{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AudioEncoding: \u00a0 \u00a0texttospeechpb.AudioEncoding_MP3,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EffectsProfileId: []string{\"telephony-class-application\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := client.SynthesizeSpeech(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"SynthesizeSpeech: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 if err = ioutil.WriteFile(outputFile, resp.AudioContent, 0644); err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Audio content written to file: %v\\n\", outputFile)\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-texttospeech/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/texttospeech/snippets/src/main/java/com/example/texttospeech/SynthesizeTextBeta.java) \n```\n/**\u00a0* Demonstrates using the Text to Speech client with audio profiles to synthesize text or ssml\u00a0*\u00a0* @param text the raw text to be synthesized. (e.g., \"Hello there!\")\u00a0* @param effectsProfile audio profile to be used for synthesis. (e.g.,\u00a0* \u00a0 \u00a0 \"telephony-class-application\")\u00a0* @throws Exception on TextToSpeechClient Errors.\u00a0*/public static void synthesizeTextWithAudioProfile(String text, String effectsProfile)\u00a0 \u00a0 throws Exception {\u00a0 // Instantiates a client\u00a0 try (TextToSpeechClient textToSpeechClient = TextToSpeechClient.create()) {\u00a0 \u00a0 // Set the text input to be synthesized\u00a0 \u00a0 SynthesisInput input = SynthesisInput.newBuilder().setText(text).build();\u00a0 \u00a0 // Build the voice request\u00a0 \u00a0 VoiceSelectionParams voice =\u00a0 \u00a0 \u00a0 \u00a0 VoiceSelectionParams.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setLanguageCode(\"en-US\") // languageCode = \"en_us\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSsmlGender(SsmlVoiceGender.FEMALE) // ssmlVoiceGender = SsmlVoiceGender.FEMALE\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Select the type of audio file you want returned and the audio profile\u00a0 \u00a0 AudioConfig audioConfig =\u00a0 \u00a0 \u00a0 \u00a0 AudioConfig.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setAudioEncoding(AudioEncoding.MP3) // MP3 audio.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addEffectsProfileId(effectsProfile) // audio profile\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Perform the text-to-speech request\u00a0 \u00a0 SynthesizeSpeechResponse response =\u00a0 \u00a0 \u00a0 \u00a0 textToSpeechClient.synthesizeSpeech(input, voice, audioConfig);\u00a0 \u00a0 // Get the audio contents from the response\u00a0 \u00a0 ByteString audioContents = response.getAudioContent();\u00a0 \u00a0 // Write the response to the output file.\u00a0 \u00a0 try (OutputStream out = new FileOutputStream(\"output.mp3\")) {\u00a0 \u00a0 \u00a0 out.write(audioContents.toByteArray());\u00a0 \u00a0 \u00a0 System.out.println(\"Audio content written to file \\\"output.mp3\\\"\");\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/text-to-speech/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/texttospeech/audioProfile.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\u00a0*/// const text = 'Text you want to vocalize';// const outputFile = 'YOUR_OUTPUT_FILE_LOCAtION;// const languageCode = 'LANGUAGE_CODE_FOR_OUTPUT';// const ssmlGender = 'SSML_GENDER_OF_SPEAKER';// Imports the Google Cloud client libraryconst speech = require('@google-cloud/text-to-speech');const fs = require('fs');const util = require('util');// Creates a clientconst client = new speech.TextToSpeechClient();async function synthesizeWithEffectsProfile() {\u00a0 // Add one or more effects profiles to array.\u00a0 // Refer to documentation for more details:\u00a0 // https://cloud.google.com/text-to-speech/docs/audio-profiles\u00a0 const effectsProfileId = ['telephony-class-application'];\u00a0 const request = {\u00a0 \u00a0 input: {text: text},\u00a0 \u00a0 voice: {languageCode: languageCode, ssmlGender: ssmlGender},\u00a0 \u00a0 audioConfig: {audioEncoding: 'MP3', effectsProfileId: effectsProfileId},\u00a0 };\u00a0 const [response] = await client.synthesizeSpeech(request);\u00a0 const writeFile = util.promisify(fs.writeFile);\u00a0 await writeFile(outputFile, response.audioContent, 'binary');\u00a0 console.log(`Audio content written to file: ${outputFile}`);}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/texttospeech/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/texttospeech/snippets/audio_profile.py) \n```\ndef synthesize_text_with_audio_profile(text, output, effects_profile_id):\u00a0 \u00a0 \"\"\"Synthesizes speech from the input string of text.\"\"\"\u00a0 \u00a0 from google.cloud import texttospeech\u00a0 \u00a0 client = texttospeech.TextToSpeechClient()\u00a0 \u00a0 input_text = texttospeech.SynthesisInput(text=text)\u00a0 \u00a0 # Note: the voice can also be specified by name.\u00a0 \u00a0 # Names of voices can be retrieved with client.list_voices().\u00a0 \u00a0 voice = texttospeech.VoiceSelectionParams(language_code=\"en-US\")\u00a0 \u00a0 # Note: you can pass in multiple effects_profile_id. They will be applied\u00a0 \u00a0 # in the same order they are provided.\u00a0 \u00a0 audio_config = texttospeech.AudioConfig(\u00a0 \u00a0 \u00a0 \u00a0 audio_encoding=texttospeech.AudioEncoding.MP3,\u00a0 \u00a0 \u00a0 \u00a0 effects_profile_id=[effects_profile_id],\u00a0 \u00a0 )\u00a0 \u00a0 response = client.synthesize_speech(\u00a0 \u00a0 \u00a0 \u00a0 input=input_text, voice=voice, audio_config=audio_config\u00a0 \u00a0 )\u00a0 \u00a0 # The response's audio_content is binary.\u00a0 \u00a0 with open(output, \"wb\") as out:\u00a0 \u00a0 \u00a0 \u00a0 out.write(response.audio_content)\u00a0 \u00a0 \u00a0 \u00a0 print('Audio content written to file \"%s\"' % output)\n```No preface\n **C#** \uff1a\u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [C# \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [.NET \u7684 Text-to-Speech \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.TextToSpeech.V1/index.html) \u3002\n **PHP** \uff1a\u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [PHP \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [PHP \u7684 Text-to-Speech \u53c3\u8003\u6587\u6a94](https://cloud.google.com/php/docs/reference/cloud-text-to-speech/latest?hl=zh-cn) \u3002\n **Ruby** \uff1a\u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [Ruby \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [Ruby \u7684 Text-to-Speech \u53c3\u8003\u6587\u6a94](https://googleapis.dev/ruby/google-cloud-text_to_speech/latest/Google/Cloud/TextToSpeech/V1.html) \u3002", "guide": "Cloud Text-to-Speech API"}