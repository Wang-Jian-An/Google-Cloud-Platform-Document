{"title": "Cloud Text-to-Speech API - \u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u6839\u64da\u6587\u5b57\u5275\u5efa\u97f3\u983b", "url": "https://cloud.google.com/text-to-speech/docs/create-audio-text-client-libraries?hl=zh-cn", "abstract": "# Cloud Text-to-Speech API - \u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u6839\u64da\u6587\u5b57\u5275\u5efa\u97f3\u983b\n# \u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u6839\u64da\u6587\u5b57\u5275\u5efa\u97f3\u983b\n\u672c\u5feb\u901f\u5165\u9580\u5c07\u5f15\u5c0e\u60a8\u5b8c\u6210\u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u5411 Text-to-Speech \u767c\u51fa\u8acb\u6c42\u7684\u904e\u7a0b\uff0c\u5373\u6839\u64da\u6587\u5b57\u5275\u5efa\u97f3\u983b\u3002\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3 Text-to-Speech \u4e2d\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u8acb\u95b1\u8b80 [Text-to-Speech \u57fa\u790e\u77e5\u8b58](https://cloud.google.com/text-to-speech/docs/basics?hl=zh-cn) \u3002 \u5982\u9700\u67e5\u770b\u53ef\u7528\u65bc\u60a8\u7684\u8a9e\u8a00\u7684\u5408\u6210\u8a9e\u97f3\uff0c\u8acb\u53c3\u95b1 [\u652f\u6301\u7684\u8a9e\u97f3\u548c\u8a9e\u8a00\u9801\u9762](https://cloud.google.com/text-to-speech/docs/voices?hl=zh-cn) \u3002", "content": "## \u6e96\u5099\u5de5\u4f5c\u60a8\u5fc5\u9808\u5148\u5b8c\u6210\u4ee5\u4e0b\u64cd\u4f5c\uff0c\u7136\u5f8c\u624d\u80fd\u5411 Text-to-Speech API \u767c\u9001\u8acb\u6c42\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](https://cloud.google.com/text-to-speech/docs/before-you-begin?hl=zh-cn) \u9801\u9762\u3002\n- \u5728 Google Cloud \u9805\u76ee\u4e0a\u5553\u7528 Text-to-Speech\u3002\n- \u78ba\u4fdd\u5df2\u7232 Text-to-Speech \u5553\u7528\u7d50\u7b97\u529f\u80fd\u3002\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them [\u5b89\u88dd](https://cloud.google.com/sdk/docs/install?hl=zh-cn) Google Cloud CLI\uff0c\u7136\u5f8c\u901a\u904e\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4 [\u521d\u59cb\u5316](https://cloud.google.com/sdk/docs/initializing?hl=zh-cn) Google Cloud CLI\uff1a```\ngcloud init\n```\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u7232\u60a8\u7684 Google \u8cec\u865f\u5275\u5efa\u672c\u5730\u8eab\u4efd\u9a57\u8b49\u6191\u64da\uff1a```\ngcloud auth application-default login\n```\n## \u5b89\u88dd\u5ba2\u6236\u7aef\u5eab```\ngo get cloud.google.com/go/texttospeech/apiv1\n```Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f [Maven](https://maven.apache.org/) \uff0c\u8acb\u5c07\u4ee5\u4e0b\u4ee3\u78bc\u6dfb\u52a0\u5230\u60a8\u7684 `pom.xml` \u6587\u4ef6\u4e2d\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3 BOM\uff0c\u8acb\u53c3\u95b1 [Google Cloud Platform \u5eab BOM](https://cloud.google.com/java/docs/bom?hl=zh-cn) \u3002\n```\n<dependencyManagement>\u00a0 <dependencies>\u00a0 \u00a0 <dependency>\u00a0 \u00a0 \u00a0 <groupId>com.google.cloud</groupId>\u00a0 \u00a0 \u00a0 <artifactId>libraries-bom</artifactId>\u00a0 \u00a0 \u00a0 <version>26.33.0</version>\u00a0 \u00a0 \u00a0 <type>pom</type>\u00a0 \u00a0 \u00a0 <scope>import</scope>\u00a0 \u00a0 </dependency>\u00a0 </dependencies></dependencyManagement><dependencies>\u00a0 <dependency>\u00a0 \u00a0 <groupId>com.google.cloud</groupId>\u00a0 \u00a0 <artifactId>google-cloud-texttospeech</artifactId>\u00a0 </dependency>\n```\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f [Gradle](https://gradle.org/) \uff0c\u8acb\u5c07\u4ee5\u4e0b\u4ee3\u78bc\u6dfb\u52a0\u5230\u60a8\u7684\u4f9d\u8cf4\u9805\u4e2d\uff1a\n```\nimplementation 'com.google.cloud:google-cloud-texttospeech:2.38.0'\n```\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f [sbt](https://www.scala-sbt.org/) \uff0c\u8acb\u5c07\u4ee5\u4e0b\u4ee3\u78bc\u6dfb\u52a0\u5230\u60a8\u7684\u4f9d\u8cf4\u9805\u4e2d\uff1a\n```\nlibraryDependencies += \"com.google.cloud\" % \"google-cloud-texttospeech\" % \"2.38.0\"\n```\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Visual Studio Code\u3001IntelliJ \u6216 Eclipse\uff0c\u53ef\u4ee5\u901a\u904e\u4ee5\u4e0b IDE \u63d2\u4ef6\u5c07\u5ba2\u6236\u7aef\u5eab\u6dfb\u52a0\u5230\u60a8\u7684\u9805\u76ee\u4e2d\uff1a- [Cloud Code for VS Code](https://cloud.google.com/code/docs/vscode/client-libraries?hl=zh-cn) \n- [Cloud Code for IntelliJ](https://cloud.google.com/code/docs/intellij/client-libraries?hl=zh-cn) \n- [Cloud Tools for Eclipse](https://cloud.google.com/eclipse/docs/libraries?hl=zh-cn) \n\u4e0a\u8ff0\u63d2\u4ef6\u9084\u63d0\u4f9b\u5176\u4ed6\u529f\u80fd\uff0c\u4f8b\u5982\u670d\u52d9\u8cec\u865f\u5bc6\u9470\u7ba1\u7406\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1\u5404\u500b\u63d2\u4ef6\u76f8\u61c9\u7684\u6587\u6a94\u3002\n **\u6ce8\u610f** \uff1aCloud Java \u5ba2\u6236\u7aef\u5eab\u76ee\u524d\u4e0d\u652f\u6301 Android\u3002\u5728\u5b89\u88dd\u5eab\u4e4b\u524d\uff0c\u8acb\u78ba\u4fdd\u5df2\u7d93 [\u7232 Node.js \u958b\u767c\u6e96\u5099\u597d\u74b0\u5883](https://cloud.google.com/nodejs/docs/setup?hl=zh-cn) \u3002\n```\nnpm install --save @google-cloud/text-to-speech\n```\u5728\u5b89\u88dd\u5eab\u4e4b\u524d\uff0c\u8acb\u78ba\u4fdd\u5df2\u7d93 [\u7232 Python \u958b\u767c\u6e96\u5099\u597d\u74b0\u5883](https://cloud.google.com/python/docs/setup?hl=zh-cn) \u3002\n```\npip install --upgrade google-cloud-texttospeech\n```No preface\n **C#** \uff1a\u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [C# \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [.NET \u7684 Text-to-Speech \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.TextToSpeech.V1/index.html) \u3002\n **PHP** \uff1a\u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [PHP \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [PHP \u7684 Text-to-Speech \u53c3\u8003\u6587\u6a94](https://cloud.google.com/php/docs/reference/cloud-text-to-speech/latest?hl=zh-cn) \u3002\n **Ruby** \uff1a\u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [Ruby \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [Ruby \u7684 Text-to-Speech \u53c3\u8003\u6587\u6a94](https://googleapis.dev/ruby/google-cloud-text_to_speech/latest/Google/Cloud/TextToSpeech/V1.html) \u3002\n## \u5275\u5efa\u97f3\u983b\u6578\u64da\u73fe\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Text-to-Speech \u4f86\u5275\u5efa\u5408\u6210\u4eba\u985e\u8a9e\u97f3\u7684\u97f3\u983b\u6587\u4ef6\u3002\u8acb\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u78bc\u5c07 [synthesize](https://cloud.google.com/text-to-speech/docs/reference/rest/v1beta1/text/synthesize?hl=zh-cn) \u8acb\u6c42\u767c\u9001\u5230 Text-to-Speech\u3002 [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/texttospeech/quickstart/quickstart.go) \n```\n// Command quickstart generates an audio file with the content \"Hello, World!\".package mainimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io/ioutil\"\u00a0 \u00a0 \u00a0 \u00a0 \"log\"\u00a0 \u00a0 \u00a0 \u00a0 texttospeech \"cloud.google.com/go/texttospeech/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/texttospeech/apiv1/texttospeechpb\")func main() {\u00a0 \u00a0 \u00a0 \u00a0 // Instantiates a client.\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := texttospeech.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatal(err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 // Perform the text-to-speech request on the text input with the selected\u00a0 \u00a0 \u00a0 \u00a0 // voice parameters and audio file type.\u00a0 \u00a0 \u00a0 \u00a0 req := texttospeechpb.SynthesizeSpeechRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the text input to be synthesized.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Input: &texttospeechpb.SynthesisInput{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputSource: &texttospeechpb.SynthesisInput_Text{Text: \"Hello, World!\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Build the voice request, select the language code (\"en-US\") and the SSML\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // voice gender (\"neutral\").\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Voice: &texttospeechpb.VoiceSelectionParams{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LanguageCode: \"en-US\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SsmlGender: \u00a0 texttospeechpb.SsmlVoiceGender_NEUTRAL,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Select the type of audio file you want returned.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AudioConfig: &texttospeechpb.AudioConfig{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AudioEncoding: texttospeechpb.AudioEncoding_MP3,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := client.SynthesizeSpeech(ctx, &req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatal(err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // The resp's AudioContent is binary.\u00a0 \u00a0 \u00a0 \u00a0 filename := \"output.mp3\"\u00a0 \u00a0 \u00a0 \u00a0 err = ioutil.WriteFile(filename, resp.AudioContent, 0644)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatal(err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Printf(\"Audio content written to file: %v\\n\", filename)}\n``` [  texttospeech/snippets/src/main/java/com/example/texttospeech/QuickstartSample.java ](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/texttospeech/snippets/src/main/java/com/example/texttospeech/QuickstartSample.java) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/texttospeech/snippets/src/main/java/com/example/texttospeech/QuickstartSample.java) \n```\n// Imports the Google Cloud client libraryimport com.google.cloud.texttospeech.v1.AudioConfig;import com.google.cloud.texttospeech.v1.AudioEncoding;import com.google.cloud.texttospeech.v1.SsmlVoiceGender;import com.google.cloud.texttospeech.v1.SynthesisInput;import com.google.cloud.texttospeech.v1.SynthesizeSpeechResponse;import com.google.cloud.texttospeech.v1.TextToSpeechClient;import com.google.cloud.texttospeech.v1.VoiceSelectionParams;import com.google.protobuf.ByteString;import java.io.FileOutputStream;import java.io.OutputStream;/**\u00a0* Google Cloud TextToSpeech API sample application. Example usage: mvn package exec:java\u00a0* -Dexec.mainClass='com.example.texttospeech.QuickstartSample'\u00a0*/public class QuickstartSample {\u00a0 /** Demonstrates using the Text-to-Speech API. */\u00a0 public static void main(String... args) throws Exception {\u00a0 \u00a0 // Instantiates a client\u00a0 \u00a0 try (TextToSpeechClient textToSpeechClient = TextToSpeechClient.create()) {\u00a0 \u00a0 \u00a0 // Set the text input to be synthesized\u00a0 \u00a0 \u00a0 SynthesisInput input = SynthesisInput.newBuilder().setText(\"Hello, World!\").build();\u00a0 \u00a0 \u00a0 // Build the voice request, select the language code (\"en-US\") and the ssml voice gender\u00a0 \u00a0 \u00a0 // (\"neutral\")\u00a0 \u00a0 \u00a0 VoiceSelectionParams voice =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 VoiceSelectionParams.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setLanguageCode(\"en-US\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSsmlGender(SsmlVoiceGender.NEUTRAL)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 // Select the type of audio file you want returned\u00a0 \u00a0 \u00a0 AudioConfig audioConfig =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AudioConfig.newBuilder().setAudioEncoding(AudioEncoding.MP3).build();\u00a0 \u00a0 \u00a0 // Perform the text-to-speech request on the text input with the selected voice parameters and\u00a0 \u00a0 \u00a0 // audio file type\u00a0 \u00a0 \u00a0 SynthesizeSpeechResponse response =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 textToSpeechClient.synthesizeSpeech(input, voice, audioConfig);\u00a0 \u00a0 \u00a0 // Get the audio contents from the response\u00a0 \u00a0 \u00a0 ByteString audioContents = response.getAudioContent();\u00a0 \u00a0 \u00a0 // Write the response to the output file.\u00a0 \u00a0 \u00a0 try (OutputStream out = new FileOutputStream(\"output.mp3\")) {\u00a0 \u00a0 \u00a0 \u00a0 out.write(audioContents.toByteArray());\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Audio content written to file \\\"output.mp3\\\"\");\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u904b\u884c\u8a72\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u78ba\u4fdd\u5df2\u7d93 [\u7232 Node.js \u958b\u767c\u6e96\u5099\u597d\u74b0\u5883](https://cloud.google.com/nodejs/docs/setup?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/texttospeech/quickstart.js) \n```\n// Imports the Google Cloud client libraryconst textToSpeech = require('@google-cloud/text-to-speech');// Import other required librariesconst fs = require('fs');const util = require('util');// Creates a clientconst client = new textToSpeech.TextToSpeechClient();async function quickStart() {\u00a0 // The text to synthesize\u00a0 const text = 'hello, world!';\u00a0 // Construct the request\u00a0 const request = {\u00a0 \u00a0 input: {text: text},\u00a0 \u00a0 // Select the language and SSML voice gender (optional)\u00a0 \u00a0 voice: {languageCode: 'en-US', ssmlGender: 'NEUTRAL'},\u00a0 \u00a0 // select the type of audio encoding\u00a0 \u00a0 audioConfig: {audioEncoding: 'MP3'},\u00a0 };\u00a0 // Performs the text-to-speech request\u00a0 const [response] = await client.synthesizeSpeech(request);\u00a0 // Write the binary audio content to a local file\u00a0 const writeFile = util.promisify(fs.writeFile);\u00a0 await writeFile('output.mp3', response.audioContent, 'binary');\u00a0 console.log('Audio content written to file: output.mp3');}quickStart();\n```\u5728\u904b\u884c\u8a72\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u78ba\u4fdd\u5df2\u7d93 [\u7232 Python \u958b\u767c\u6e96\u5099\u597d\u74b0\u5883](https://cloud.google.com/python/docs/setup?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/texttospeech/snippets/quickstart.py) \n```\n\"\"\"Synthesizes speech from the input string of text or ssml.Make sure to be working in a virtual environment.Note: ssml must be well-formed according to:\u00a0 \u00a0 https://www.w3.org/TR/speech-synthesis/\"\"\"from google.cloud import texttospeech# Instantiates a clientclient = texttospeech.TextToSpeechClient()# Set the text input to be synthesizedsynthesis_input = texttospeech.SynthesisInput(text=\"Hello, World!\")# Build the voice request, select the language code (\"en-US\") and the ssml# voice gender (\"neutral\")voice = texttospeech.VoiceSelectionParams(\u00a0 \u00a0 language_code=\"en-US\", ssml_gender=texttospeech.SsmlVoiceGender.NEUTRAL)# Select the type of audio file you want returnedaudio_config = texttospeech.AudioConfig(\u00a0 \u00a0 audio_encoding=texttospeech.AudioEncoding.MP3)# Perform the text-to-speech request on the text input with the selected# voice parameters and audio file typeresponse = client.synthesize_speech(\u00a0 \u00a0 input=synthesis_input, voice=voice, audio_config=audio_config)# The response's audio_content is binary.with open(\"output.mp3\", \"wb\") as out:\u00a0 \u00a0 # Write the response to the output file.\u00a0 \u00a0 out.write(response.audio_content)\u00a0 \u00a0 print('Audio content written to file \"output.mp3\"')\n```\u606d\u559c\uff01\u60a8\u5df2\u5411 Text-to-Speech \u767c\u9001\u4e86\u7b2c\u4e00\u500b\u8acb\u6c42\u3002## \u7d50\u679c\u600e\u9ebc\u6a23\uff1f\n## \u6e05\u7406\u7232\u907f\u514d\u56e0\u672c\u9801\u4e2d\u4f7f\u7528\u7684\u8cc7\u6e90\u5c0e\u81f4\u60a8\u7684 Google Cloud \u8cec\u865f\u7522\u751f\u8cbb\u7528\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\u3002- \u4f7f\u7528 [Google Cloud \u63a7\u5236\u6aaf](https://console.cloud.google.com/?hl=zh-cn) \u522a\u9664\u4e0d\u9700\u8981\u7684\u9805\u76ee\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u5982\u9700\u8a73\u7d30\u77ad\u89e3 Cloud Text-to-Speech\uff0c\u8acb\u95b1\u8b80 [\u57fa\u790e\u77e5\u8b58](https://cloud.google.com/text-to-speech/docs/basics?hl=zh-cn) \u3002\n- \u67e5\u770b\u53ef\u7528\u65bc\u5408\u6210\u8a9e\u97f3\u7684 [\u53ef\u7528\u8a9e\u97f3](https://cloud.google.com/text-to-speech/docs/voices?hl=zh-cn) \u5217\u8868\u3002", "guide": "Cloud Text-to-Speech API"}