{"title": "Cloud Text-to-Speech API - \u4f7f\u7528 SSML \u8b80\u51fa\u5730\u5740", "url": "https://cloud.google.com/text-to-speech/docs/ssml-tutorial?hl=zh-cn", "abstract": "# Cloud Text-to-Speech API - \u4f7f\u7528 SSML \u8b80\u51fa\u5730\u5740\n\u672c\u6559\u7a0b\u6f14\u793a\u5982\u4f55\u4f7f\u7528 [\u8a9e\u97f3\u5408\u6210\u6a19\u8a18\u8a9e\u8a00 (SSML)](https://cloud.google.com/text-to-speech/docs/ssml?hl=zh-cn) \u8b80\u51fa\u5730\u5740\u7684\u6587\u672c\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 SSML \u6a19\u8a18\u4f86\u6a19\u8a18\u6587\u672c\u5b57\u7b26\u4e32\uff0c\u4ee5\u5c0d Text-to-Speech \u5408\u6210\u97f3\u983b\u9032\u884c\u500b\u6027\u5316\u3002\n| \u660e\u6587     | \u660e\u6587\u7684 SSML \u6e32\u67d3      |\n|:-----------------------|:--------------------------------------|\n| 123 Street Ln   | <speak>123 Street Ln</speak>   |\n| 1 Number St   | <speak>1 Number St</speak>   |\n| 1 Piazza del Fibonacci | <speak>1 Piazza del Fibonacci</speak> |\n", "content": "## \u76ee\u6a19\n\u4f7f\u7528 SSML \u548c [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/reference/libraries?hl=zh-cn) \u5411 Text-Speech \u767c\u9001\u5408\u6210\u8a9e\u97f3\u8acb\u6c42\u3002\n## \u8cbb\u7528\n\u5982\u9700\u77ad\u89e3\u8cbb\u7528\u4fe1\u606f\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u50f9\u683c\u9801\u9762](https://cloud.google.com/text-to-speech/pricing?hl=zh-cn) \u3002\n## \u6e96\u5099\u5de5\u4f5c\n- \u78ba\u4fdd\u60a8\u5728 [Google Cloud \u63a7\u5236\u6aaf](https://cloud.google.com/text-to-speech/docs/reference/libraries?hl=zh-cn) \u4e2d\u6709\u4e00\u500b [Text-to-Speech \u9805\u76ee](https://console.cloud.google.com/?hl=zh-cn) \u3002\n- \u672c\u6559\u7a0b\u5141\u8a31\u60a8\u4f7f\u7528 Java\u3001Node.js \u6216 Python\u3002\u5982\u679c\u60a8\u8a08\u5283\u4f7f\u7528 Java\uff0c\u8acb [\u4e0b\u8f09](https://maven.apache.org/download.cgi) \u548c [\u5b89\u88dd](https://maven.apache.org/install.html) Maven\u3002\u5982\u679c\u60a8\u8a08\u5283\u4f7f\u7528 Node.js\uff0c\u8acb [\u4e0b\u8f09 npm](https://www.npmjs.com/get-npm) \u3002## \u4e0b\u8f09\u4ee3\u78bc\u793a\u4f8b\n\u5982\u9700\u4e0b\u8f09\u4ee3\u78bc\u793a\u4f8b\uff0c\u8acb\u514b\u9686\u8981\u4f7f\u7528\u7684\u7de8\u7a0b\u8a9e\u8a00\u7684 Google Cloud GitHub \u793a\u4f8b\u3002\n\u672c\u6559\u7a0b\u4f7f\u7528 [Google Cloud Platform Java \u793a\u4f8b\u4ee3\u78bc\u5eab](https://github.com/GoogleCloudPlatform/java-docs-samples) \u7684 `texttospeech/cloud-client/src/main/java/com/example/texttospeech/` \u76ee\u9304\u4e2d\u7684\u4ee3\u78bc\u3002 \u5982\u9700\u4e0b\u8f09\u4e26\u5c0e\u822a\u5230\u672c\u6559\u7a0b\u7684\u4ee3\u78bc\uff0c\u8acb\u5f9e\u7d42\u7aef\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\ngit clone https://github.com/GoogleCloudPlatform/java-docs-samples.git\ncd java-docs-samples/texttospeech/cloud-client/src/main/java/com/example/texttospeech/\n```\u672c\u6559\u7a0b\u4f7f\u7528 [Google Cloud Platform Node.js \u793a\u4f8b\u4ee3\u78bc\u5eab](https://github.com/GoogleCloudPlatform/nodejs-docs-samples) \u7684 `texttospeech` \u76ee\u9304\u4e2d\u7684\u4ee3\u78bc\u3002 \u5982\u9700\u4e0b\u8f09\u4e26\u5c0e\u822a\u5230\u672c\u6559\u7a0b\u7684\u4ee3\u78bc\uff0c\u8acb\u5f9e\u7d42\u7aef\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\ngit clone https://github.com/GoogleCloudPlatform/nodejs-docs-samples.git\ncd texttospeech/\n```\u672c\u6559\u7a0b\u4f7f\u7528 [Google Cloud Platform Python \u793a\u4f8b\u4ee3\u78bc\u5eab](https://github.com/GoogleCloudPlatform/python-docs-samples) \u7684 `texttospeech/snippets` \u76ee\u9304\u4e2d\u7684\u4ee3\u78bc\u3002 \u5982\u9700\u4e0b\u8f09\u4e26\u5c0e\u822a\u5230\u672c\u6559\u7a0b\u7684\u4ee3\u78bc\uff0c\u8acb\u5f9e\u7d42\u7aef\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\ngit clone https://github.com/GoogleCloudPlatform/python-docs-samples.git\ncd samples/snippets\n```\n## \u5b89\u88dd\u5ba2\u6236\u7aef\u5eab\n\u672c\u6559\u7a0b\u4f7f\u7528 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/reference/libraries?hl=zh-cn) \u3002\n\u672c\u6559\u7a0b\u4f7f\u7528\u4ee5\u4e0b\u4f9d\u8cf4\u9805\u3002 \n [texttospeech/cloud-client/pom.xml](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/texttospeech/cloud-client/pom.xml) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/texttospeech/cloud-client/pom.xml) \n```\n<!-- \u00a0Using libraries-bom to manage versions.See https://github.com/GoogleCloudPlatform/cloud-opensource-java/wiki/The-Google-Cloud-Platform-Libraries-BOM --><dependencyManagement>\u00a0 <dependencies>\u00a0 \u00a0 <dependency>\u00a0 \u00a0 \u00a0 <groupId>com.google.cloud</groupId>\u00a0 \u00a0 \u00a0 <artifactId>libraries-bom</artifactId>\u00a0 \u00a0 \u00a0 <version>26.32.0</version>\u00a0 \u00a0 \u00a0 <type>pom</type>\u00a0 \u00a0 \u00a0 <scope>import</scope>\u00a0 \u00a0 </dependency>\u00a0 </dependencies></dependencyManagement><dependencies>\u00a0 <dependency>\u00a0 \u00a0 <groupId>com.google.cloud</groupId>\u00a0 \u00a0 <artifactId>google-cloud-texttospeech</artifactId>\u00a0 </dependency></dependencies>\n```\u5f9e\u7d42\u7aef\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\nnpm install @google-cloud/text-to-speech\n```\u5f9e\u7d42\u7aef\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\npip install --upgrade google-cloud-texttospeech\n```\n## \u8a2d\u7f6e\u60a8\u7684 Google Cloud Platform \u6191\u64da\u901a\u904e\u8a2d\u7f6e\u74b0\u5883\u8b8a\u91cf `GOOGLE_APPLICATION_CREDENTIALS` \u56ae\u61c9\u7528\u4ee3\u78bc\u63d0\u4f9b\u8eab\u4efd\u9a57\u8b49\u6191\u64da\u3002\u6b64\u8b8a\u91cf\u50c5\u9069\u7528\u65bc\u7576\u524d\u7684 Shell \u6703\u8a71\u3002\u5982\u679c\u60a8\u5e0c\u671b\u8b8a\u91cf\u61c9\u7528\u65bc\u672a\u4f86\u7684 Shell \u6703\u8a71\uff0c\u8acb\u5728 shell \u5553\u52d5\u6587\u4ef6\u4e2d\u8a2d\u7f6e\u8b8a\u91cf\uff0c\u4f8b\u5982\u5728 `~/.bashrc` \u6216 `~/.profile` \u6587\u4ef6\u4e2d\u3002\n```\nexport GOOGLE_APPLICATION_CREDENTIALS=\"KEY_PATH\"\n```\n\u5c07 `` \u66ff\u63db\u7232\u5305\u542b\u6191\u64da\u7684 JSON \u6587\u4ef6\u7684\u8def\u5f91\u3002\n\u4f8b\u5982\uff1a\n```\nexport GOOGLE_APPLICATION_CREDENTIALS=\"/home/user/Downloads/service-account-file.json\"\n```\u5c0d\u65bc PowerShell\uff1a\n```\n$env:GOOGLE_APPLICATION_CREDENTIALS=\"KEY_PATH\"\n```\n\u5c07 `` \u66ff\u63db\u7232\u5305\u542b\u6191\u64da\u7684 JSON \u6587\u4ef6\u7684\u8def\u5f91\u3002\n\u4f8b\u5982\uff1a\n```\n$env:GOOGLE_APPLICATION_CREDENTIALS=\"C:\\Users\\username\\Downloads\\service-account-file.json\"\n```\n\u5c0d\u65bc\u547d\u4ee4\u63d0\u793a\u7b26\uff1a\n```\nset GOOGLE_APPLICATION_CREDENTIALS=KEY_PATH\n```\n\u5c07 `` \u66ff\u63db\u7232\u5305\u542b\u6191\u64da\u7684 JSON \u6587\u4ef6\u7684\u8def\u5f91\u3002\n## \u5c0e\u5165\u5eab\n\u672c\u6559\u7a0b\u4f7f\u7528\u4ee5\u4e0b\u7cfb\u7d71\u548c\u5ba2\u6236\u7aef\u5eab\u3002\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-texttospeech/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/texttospeech/snippets/src/main/java/com/example/texttospeech/SsmlAddresses.java) \n```\n// Imports the Google Cloud client libraryimport com.google.cloud.texttospeech.v1.AudioConfig;import com.google.cloud.texttospeech.v1.AudioEncoding;import com.google.cloud.texttospeech.v1.SsmlVoiceGender;import com.google.cloud.texttospeech.v1.SynthesisInput;import com.google.cloud.texttospeech.v1.SynthesizeSpeechResponse;import com.google.cloud.texttospeech.v1.TextToSpeechClient;import com.google.cloud.texttospeech.v1.VoiceSelectionParams;import com.google.common.html.HtmlEscapers;import com.google.protobuf.ByteString;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;import java.nio.file.Files;import java.nio.file.Paths;\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/text-to-speech/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/texttospeech/ssmlAddresses.js) \n```\n// Imports the Google Cloud client libraryconst textToSpeech = require('@google-cloud/text-to-speech');// Import other required librariesconst fs = require('fs');//const escape = require('escape-html');const util = require('util');\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/texttospeech/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/texttospeech/snippets/ssml_addresses.py) \n```\nimport htmlfrom google.cloud import texttospeech\n```\n## \u4f7f\u7528 Text-to-Speech API\n\u4ee5\u4e0b\u51fd\u6578\u63a5\u53d7\u4ee5 SSML \u6a19\u8a18\u7684\u6587\u672c\u5b57\u7b26\u4e32\u4ee5\u53ca MP3 \u6587\u4ef6\u7684\u540d\u7a31\u3002\u51fd\u6578\u4f7f\u7528\u4ee5 SSML \u6a19\u8a18\u7684\u6587\u672c\u751f\u6210\u5408\u6210\u97f3\u983b\u3002\u51fd\u6578\u5c07\u5408\u6210\u97f3\u983b\u4fdd\u5b58\u7232\u6307\u5b9a\u7232\u53c3\u6578\u7684 MP3 \u6587\u4ef6\u540d\u3002\n\u53ea\u80fd\u901a\u904e\u55ae\u500b\u8a9e\u97f3\u8b80\u53d6\u6574\u500b SSML \u8f38\u5165\u3002\u60a8\u53ef\u4ee5\u5728 [VoiceSelectionParams](https://cloud.google.com/text-to-speech/docs/reference/rest/v1/text/synthesize?hl=zh-cn#voiceselectionparams) \u5c0d\u8c61\u4e2d\u8a2d\u7f6e\u8a9e\u97f3\u3002\n**\u6ce8\u610f** \uff1a\u6b64\u51fd\u6578\u6703\u66ff\u63db\u8207\u53c3\u6578\u540c\u540d\u7684\u4efb\u4f55\u73fe\u6709\u6587\u4ef6\u3002\u5c07\u552f\u4e00\u6587\u4ef6\u540d\u7528\u4f5c\uff0c\u4ee5\u78ba\u4fdd\u4e0d\u6703\u4e1f\u5931\u4efb\u4f55\u73fe\u6709\u7684\u672c\u5730\u6587\u4ef6\u3002\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-texttospeech/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/texttospeech/snippets/src/main/java/com/example/texttospeech/SsmlAddresses.java) \n```\n/**\u00a0* Generates synthetic audio from a String of SSML text.\u00a0*\u00a0* <p>Given a string of SSML text and an output file name, this function calls the Text-to-Speech\u00a0* API. The API returns a synthetic audio version of the text, formatted according to the SSML\u00a0* commands. This function saves the synthetic audio to the designated output file.\u00a0*\u00a0* @param ssmlText String of tagged SSML text\u00a0* @param outFile String name of file under which to save audio output\u00a0* @throws Exception on errors while closing the client\u00a0*/public static void ssmlToAudio(String ssmlText, String outFile) throws Exception {\u00a0 // Instantiates a client\u00a0 try (TextToSpeechClient textToSpeechClient = TextToSpeechClient.create()) {\u00a0 \u00a0 // Set the ssml text input to synthesize\u00a0 \u00a0 SynthesisInput input = SynthesisInput.newBuilder().setSsml(ssmlText).build();\u00a0 \u00a0 // Build the voice request, select the language code (\"en-US\") and\u00a0 \u00a0 // the ssml voice gender (\"male\")\u00a0 \u00a0 VoiceSelectionParams voice =\u00a0 \u00a0 \u00a0 \u00a0 VoiceSelectionParams.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setLanguageCode(\"en-US\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSsmlGender(SsmlVoiceGender.MALE)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Select the audio file type\u00a0 \u00a0 AudioConfig audioConfig =\u00a0 \u00a0 \u00a0 \u00a0 AudioConfig.newBuilder().setAudioEncoding(AudioEncoding.MP3).build();\u00a0 \u00a0 // Perform the text-to-speech request on the text input with the selected voice parameters and\u00a0 \u00a0 // audio file type\u00a0 \u00a0 SynthesizeSpeechResponse response =\u00a0 \u00a0 \u00a0 \u00a0 textToSpeechClient.synthesizeSpeech(input, voice, audioConfig);\u00a0 \u00a0 // Get the audio contents from the response\u00a0 \u00a0 ByteString audioContents = response.getAudioContent();\u00a0 \u00a0 // Write the response to the output file\u00a0 \u00a0 try (OutputStream out = new FileOutputStream(outFile)) {\u00a0 \u00a0 \u00a0 out.write(audioContents.toByteArray());\u00a0 \u00a0 \u00a0 System.out.println(\"Audio content written to file \" + outFile);\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/text-to-speech/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/texttospeech/ssmlAddresses.js) \n```\n/**\u00a0* Generates synthetic audio from a String of SSML text.\u00a0*\u00a0* Given a string of SSML text and an output file name, this function\u00a0* calls the Text-to-Speech API. The API returns a synthetic audio\u00a0* version of the text, formatted according to the SSML commands. This\u00a0* function saves the synthetic audio to the designated output file.\u00a0*\u00a0* ARGS\u00a0* ssmlText: String of tagged SSML text\u00a0* outfile: String name of file under which to save audio output\u00a0* RETURNS\u00a0* nothing\u00a0*\u00a0*/async function ssmlToAudio(ssmlText, outFile) {\u00a0 // Creates a client\u00a0 const client = new textToSpeech.TextToSpeechClient();\u00a0 // Constructs the request\u00a0 const request = {\u00a0 \u00a0 // Select the text to synthesize\u00a0 \u00a0 input: {ssml: ssmlText},\u00a0 \u00a0 // Select the language and SSML Voice Gender (optional)\u00a0 \u00a0 voice: {languageCode: 'en-US', ssmlGender: 'MALE'},\u00a0 \u00a0 // Select the type of audio encoding\u00a0 \u00a0 audioConfig: {audioEncoding: 'MP3'},\u00a0 };\u00a0 // Performs the Text-to-Speech request\u00a0 const [response] = await client.synthesizeSpeech(request);\u00a0 // Write the binary audio content to a local file\u00a0 const writeFile = util.promisify(fs.writeFile);\u00a0 await writeFile(outFile, response.audioContent, 'binary');\u00a0 console.log('Audio content written to file ' + outFile);}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/texttospeech/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/texttospeech/snippets/ssml_addresses.py) \n```\ndef ssml_to_audio(ssml_text, outfile):\u00a0 \u00a0 # Generates SSML text from plaintext.\u00a0 \u00a0 #\u00a0 \u00a0 # Given a string of SSML text and an output file name, this function\u00a0 \u00a0 # calls the Text-to-Speech API. The API returns a synthetic audio\u00a0 \u00a0 # version of the text, formatted according to the SSML commands. This\u00a0 \u00a0 # function saves the synthetic audio to the designated output file.\u00a0 \u00a0 #\u00a0 \u00a0 # Args:\u00a0 \u00a0 # ssml_text: string of SSML text\u00a0 \u00a0 # outfile: string name of file under which to save audio output\u00a0 \u00a0 #\u00a0 \u00a0 # Returns:\u00a0 \u00a0 # nothing\u00a0 \u00a0 # Instantiates a client\u00a0 \u00a0 client = texttospeech.TextToSpeechClient()\u00a0 \u00a0 # Sets the text input to be synthesized\u00a0 \u00a0 synthesis_input = texttospeech.SynthesisInput(ssml=ssml_text)\u00a0 \u00a0 # Builds the voice request, selects the language code (\"en-US\") and\u00a0 \u00a0 # the SSML voice gender (\"MALE\")\u00a0 \u00a0 voice = texttospeech.VoiceSelectionParams(\u00a0 \u00a0 \u00a0 \u00a0 language_code=\"en-US\", ssml_gender=texttospeech.SsmlVoiceGender.MALE\u00a0 \u00a0 )\u00a0 \u00a0 # Selects the type of audio file to return\u00a0 \u00a0 audio_config = texttospeech.AudioConfig(\u00a0 \u00a0 \u00a0 \u00a0 audio_encoding=texttospeech.AudioEncoding.MP3\u00a0 \u00a0 )\u00a0 \u00a0 # Performs the text-to-speech request on the text input with the selected\u00a0 \u00a0 # voice parameters and audio file type\u00a0 \u00a0 response = client.synthesize_speech(\u00a0 \u00a0 \u00a0 \u00a0 input=synthesis_input, voice=voice, audio_config=audio_config\u00a0 \u00a0 )\u00a0 \u00a0 # Writes the synthetic audio to the output file.\u00a0 \u00a0 with open(outfile, \"wb\") as out:\u00a0 \u00a0 \u00a0 \u00a0 out.write(response.audio_content)\u00a0 \u00a0 \u00a0 \u00a0 print(\"Audio content written to file \" + outfile)\n```\n## \u5c0d\u5408\u6210\u97f3\u983b\u9032\u884c\u500b\u6027\u5316\u8a2d\u7f6e\n\u4ee5\u4e0b\u51fd\u6578\u63a5\u53d7\u4e00\u500b\u6587\u672c\u6587\u4ef6\u7684\u540d\u7a31\u4e26\u5c07\u6587\u4ef6\u7684\u5167\u5bb9\u8f49\u63db\u7232\u4ee5 SSML \u6a19\u8a18\u7684\u6587\u672c\u5b57\u7b26\u4e32\u3002\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-texttospeech/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/texttospeech/snippets/src/main/java/com/example/texttospeech/SsmlAddresses.java) \n```\n/**\u00a0* Generates SSML text from plaintext.\u00a0*\u00a0* <p>Given an input filename, this function converts the contents of the input text file into a\u00a0* String of tagged SSML text. This function formats the SSML String so that, when synthesized,\u00a0* the synthetic audio will pause for two seconds between each line of the text file. This\u00a0* function also handles special text characters which might interfere with SSML commands.\u00a0*\u00a0* @param inputFile String name of plaintext file\u00a0* @return a String of SSML text based on plaintext input.\u00a0* @throws IOException on files that don't exist\u00a0*/public static String textToSsml(String inputFile) throws Exception {\u00a0 // Read lines of input file\u00a0 String rawLines = new String(Files.readAllBytes(Paths.get(inputFile)));\u00a0 // Replace special characters with HTML Ampersand Character Codes\u00a0 // These codes prevent the API from confusing text with SSML tags\u00a0 // For example, '<' --> '&lt;' and '&' --> '&amp;'\u00a0 String escapedLines = HtmlEscapers.htmlEscaper().escape(rawLines);\u00a0 // Convert plaintext to SSML\u00a0 // Tag SSML so that there is a 2 second pause between each address\u00a0 String expandedNewline = escapedLines.replaceAll(\"\\\\n\", \"\\n<break time='2s'/>\");\u00a0 String ssml = \"<speak>\" + expandedNewline + \"</speak>\";\u00a0 // Return the concatenated String of SSML\u00a0 return ssml;}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/text-to-speech/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/texttospeech/ssmlAddresses.js) \n```\n/**\u00a0* Generates SSML text from plaintext.\u00a0*\u00a0* Given an input filename, this function converts the contents of the input text file\u00a0* into a String of tagged SSML text. This function formats the SSML String so that,\u00a0* when synthesized, the synthetic audio will pause for two seconds between each line\u00a0* of the text file. This function also handles special text characters which might\u00a0* interfere with SSML commands.\u00a0*\u00a0* ARGS\u00a0* inputfile: String name of plaintext file\u00a0* RETURNS\u00a0* a String of SSML text based on plaintext input\u00a0*\u00a0*/function textToSsml(inputFile) {\u00a0 let rawLines = '';\u00a0 // Read input file\u00a0 try {\u00a0 \u00a0 rawLines = fs.readFileSync(inputFile, 'utf8');\u00a0 } catch (e) {\u00a0 \u00a0 console.log('Error:', e.stack);\u00a0 \u00a0 return;\u00a0 }\u00a0 // Replace special characters with HTML Ampersand Character Codes\u00a0 // These codes prevent the API from confusing text with SSML tags\u00a0 // For example, '<' --> '&lt;' and '&' --> '&amp;'\u00a0 let escapedLines = rawLines;\u00a0 escapedLines = escapedLines.replace(/&/g, '&amp;');\u00a0 escapedLines = escapedLines.replace(/\"/g, '&quot;');\u00a0 escapedLines = escapedLines.replace(/</g, '&lt;');\u00a0 escapedLines = escapedLines.replace(/>/g, '&gt;');\u00a0 // Convert plaintext to SSML\u00a0 // Tag SSML so that there is a 2 second pause between each address\u00a0 const expandedNewline = escapedLines.replace(/\\n/g, '\\n<break time=\"2s\"/>');\u00a0 const ssml = '<speak>' + expandedNewline + '</speak>';\u00a0 // Return the concatenated String of SSML\u00a0 return ssml;}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Text-to-Speech \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/text-to-speech/docs/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Text-to-Speech Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/texttospeech/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Text-to-Speech \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/texttospeech/snippets/ssml_addresses.py) \n```\ndef text_to_ssml(inputfile):\u00a0 \u00a0 # Generates SSML text from plaintext.\u00a0 \u00a0 # Given an input filename, this function converts the contents of the text\u00a0 \u00a0 # file into a string of formatted SSML text. This function formats the SSML\u00a0 \u00a0 # string so that, when synthesized, the synthetic audio will pause for two\u00a0 \u00a0 # seconds between each line of the text file. This function also handles\u00a0 \u00a0 # special text characters which might interfere with SSML commands.\u00a0 \u00a0 #\u00a0 \u00a0 # Args:\u00a0 \u00a0 # inputfile: string name of plaintext file\u00a0 \u00a0 #\u00a0 \u00a0 # Returns:\u00a0 \u00a0 # A string of SSML text based on plaintext input\u00a0 \u00a0 # Parses lines of input file\u00a0 \u00a0 with open(inputfile) as f:\u00a0 \u00a0 \u00a0 \u00a0 raw_lines = f.read()\u00a0 \u00a0 # Replace special characters with HTML Ampersand Character Codes\u00a0 \u00a0 # These Codes prevent the API from confusing text with\u00a0 \u00a0 # SSML commands\u00a0 \u00a0 # For example, '<' --> '&lt;' and '&' --> '&amp;'\u00a0 \u00a0 escaped_lines = html.escape(raw_lines)\u00a0 \u00a0 # Convert plaintext to SSML\u00a0 \u00a0 # Wait two seconds between each address\u00a0 \u00a0 ssml = \"<speak>{}</speak>\".format(\u00a0 \u00a0 \u00a0 \u00a0 escaped_lines.replace(\"\\n\", '\\n<break time=\"2s\"/>')\u00a0 \u00a0 )\u00a0 \u00a0 # Return the concatenated string of ssml script\u00a0 \u00a0 return ssml\n```\n## \u7d9c\u5408\u61c9\u7528\n\u6b64\u7a0b\u5e8f\u4f7f\u7528\u4ee5\u4e0b\u8f38\u5165\u3002\n```\n123 Street Ln, Small Town, IL 12345 USA\n1 Jenny St & Number St, Tutone City, CA 86753\n1 Piazza del Fibonacci, 12358 Pisa, Italy\n```\n\u5c07\u4e0a\u8ff0\u6587\u672c\u50b3\u905e\u7d66 `text_to_ssml()` \u6703\u751f\u6210\u4ee5\u4e0b\u6a19\u8a18\u6587\u672c\u3002\n```\n<speak>123 Street Ln, Small Town, IL 12345 USA\n<break time=\"2s\"/>1 Jenny St &amp; Number St, Tutone City, CA 86753\n<break time=\"2s\"/>1 Piazza del Fibonacci, 12358 Pisa, Italy\n<break time=\"2s\"/></speak>\n```\n### \u904b\u884c\u4ee3\u78bc\n\u8981\u751f\u6210\u5408\u6210\u8a9e\u97f3\u7684\u97f3\u983b\u6587\u4ef6\uff0c\u8acb\u5f9e\u547d\u4ee4\u884c\u904b\u884c\u4ee5\u4e0b\u4ee3\u78bc\u3002\n\u5f9e `java-docs-samples/texttospeech/cloud-client/` \u76ee\u9304\u4e2d\uff0c\u5728\u547d\u4ee4\u884c\u4e0a\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\n$ mvn clean package\n```\u5f9e `java-docs-samples/texttospeech/cloud-client/` \u76ee\u9304\u4e2d\uff0c\u5728\u547d\u4ee4\u884c\u4e0a\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\n$ mvn clean package\n```\u5728 `hybridGlossaries.js` \u6587\u4ef6\u4e2d\uff0c\u5c0d\u88ab `TODO (developer)` \u8a3b\u91cb\u6389\u7684\u8b8a\u91cf\u53d6\u6d88\u5099\u8a3b\u3002\n\u5728\u4ee5\u4e0b\u547d\u4ee4\u4e2d\uff0c\u5c07 \u66ff\u63db\u7232\u60a8\u7684 Google Cloud \u9805\u76ee ID\u3002\u5f9e `nodejs-docs-samples/texttospeech` \u76ee\u9304\u4e2d\uff0c\u5728\u547d\u4ee4\u884c\u4e0a\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\n$ node ssmlAddresses.js projectId\n```\u5728 `hybridGlossaries.js` \u6587\u4ef6\u4e2d\uff0c\u5c0d\u88ab `TODO (developer)` \u8a3b\u91cb\u6389\u7684\u8b8a\u91cf\u53d6\u6d88\u5099\u8a3b\u3002\n\u5728\u4ee5\u4e0b\u547d\u4ee4\u4e2d\uff0c\u5c07 \u66ff\u63db\u7232\u60a8\u7684 Google Cloud \u9805\u76ee ID\u3002\u5f9e `nodejs-docs-samples/texttospeech` \u76ee\u9304\u4e2d\uff0c\u5728\u547d\u4ee4\u884c\u4e0a\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\n$env: C:/Node.js/node.exe C: ssmlAddresses.js projectId\n```\u5f9e `python-docs-samples/texttospeech/snippets` \u76ee\u9304\u4e2d\uff0c\u5728\u547d\u4ee4\u884c\u4e0a\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\n$ python ssml_addresses.py\n```\u5f9e `python-docs-samples/texttospeech/snippets` \u76ee\u9304\u4e2d\uff0c\u5728\u547d\u4ee4\u884c\u4e0a\u57f7\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\n```\n$env: C:/Python3/python.exe C: ssml_addresses.py\n```\n### \u6aa2\u67e5\u8f38\u51fa\u6b64\u7a0b\u5e8f\u6703\u8f38\u51fa\u5408\u6210\u8a9e\u97f3\u7684 \u97f3\u983b\u6587\u4ef6\u3002\u5c0e\u822a\u5230 `java-docs-samples/texttospeech/cloud-client/resources/` \u76ee\u9304\u3002 \u5728 `resources` \u76ee\u9304\u4e2d\u67e5\u627e \u6587\u4ef6\u3002\u5c0e\u822a\u5230 `nodejs-docs-samples/texttospeech/resources/` \u76ee\u9304\u3002 \u5728 `resources` \u76ee\u9304\u4e2d\u67e5\u627e \u6587\u4ef6\u3002\u5c0e\u822a\u5230 `python-docs-samples/texttospeech/snippets/resources` \u3002 \u5728 `resources` \u76ee\u9304\u4e2d\u67e5\u627e \u6587\u4ef6\u3002\n\u8046\u807d\u4ee5\u4e0b\u97f3\u983b\u526a\u8f2f\uff0c\u4ee5\u78ba\u8a8d \u6587\u4ef6\u7684\u8a9e\u97f3\u6b63\u662f\u60a8\u6240\u671f\u671b\u7684\u8a9e\u97f3\u3002\n ## \u554f\u984c\u6392\u67e5\n- \u5fd8\u8a18\u5728\u547d\u4ee4\u884c\u4e0a [\u8a2d\u7f6e GOOGLE_APPLICATION_CREDENTIALS](#setting_up_your_google_cloud_platform_credentials) \u74b0\u5883\u8b8a\u91cf\u6703\u751f\u6210\u4ee5\u4e0b\u932f\u8aa4\u6d88\u606f\uff1a```\nThe Application Default Credentials are not available.\n```\n- \u5411 `text_to_ssml()` \u50b3\u905e\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u7684\u540d\u7a31\u6703\u751f\u6210\u4ee5\u4e0b\u932f\u8aa4\u6d88\u606f\uff1a```\nIOError: [Errno 2] No such file or directory\n```\n- \u5411 `ssml_to_audio()` \u50b3\u905e\u5305\u542b \u7684 \u53c3\u6578\u6703\u751f\u6210\u4ee5\u4e0b\u932f\u8aa4\u6d88\u606f\uff1a```\nInvalidArgument: 400 Invalid input type. Type has to be text or SSML\n```\n- \u78ba\u4fdd\u60a8\u904b\u884c\u7684\u662f\u4f86\u81ea [\u6b63\u78ba\u76ee\u9304](#running_the_code) \u7684\u4ee3\u78bc\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u700f\u89bd\u5176\u4ed6 [SSML \u6a19\u8a18](https://cloud.google.com/text-to-speech/docs/ssml?hl=zh-cn) \u3002\n- \u77ad\u89e3\u5982\u4f55 [\u5c07 SSML \u8207 Translation \u548c Vision \u642d\u914d\u4f7f\u7528](https://cloud.google.com/translate/docs/hybrid-glossaries-tutorial?hl=zh-cn) \n## \u6e05\u7406\u7232\u907f\u514d\u60a8\u7684 Google Cloud Platform \u8cec\u865f\u56e0\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u8cc7\u6e90\u800c\u7522\u751f\u8cbb\u7528\uff0c\u5982\u679c\u60a8\u4e0d\u9700\u8981\u8a72\u9805\u76ee\uff0c\u8acb\u4f7f\u7528 [Google Cloud \u63a7\u5236\u6aaf](https://console.cloud.google.com/?hl=zh-cn) \u522a\u9664\u8a72\u9805\u76ee\u3002\n### \u522a\u9664\u9805\u76ee\n- \u5728 [Google Cloud \u63a7\u5236\u6aaf](https://console.cloud.google.com/?hl=zh-cn) \u4e2d\uff0c\u8f49\u5230\u201c\u9805\u76ee\u201d\u9801\u9762\u3002\n- \u5728\u9805\u76ee\u5217\u8868\u4e2d\uff0c\u9078\u64c7\u8981\u522a\u9664\u7684\u9805\u76ee\uff0c\u7136\u5f8c\u9ede\u64ca **\u522a\u9664** \u3002\n- \u5728\u5c0d\u8a71\u6846\u4e2d\u8f38\u5165\u9805\u76ee ID\uff0c\u7136\u5f8c\u9ede\u64ca **\u95dc\u505c** \u4ee5\u522a\u9664\u9805\u76ee\u3002", "guide": "Cloud Text-to-Speech API"}