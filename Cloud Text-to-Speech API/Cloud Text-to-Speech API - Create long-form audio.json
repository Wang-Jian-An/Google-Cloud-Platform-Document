{"title": "Cloud Text-to-Speech API - Create long-form audio", "url": "https://cloud.google.com/text-to-speech/docs/create-audio-text-long-audio-synthesis", "abstract": "# Cloud Text-to-Speech API - Create long-form audio\n# Create long-form audio\n **    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nThis document walks you through the process of synthesizing long-form audio. Long Audio Synthesis asynchronously synthesizes up to 1 million bytes on input. To learn more about the fundamental concepts in Text-to-Speech, read [Text-to-Speech Basics](/text-to-speech/docs/basics) .", "content": "## Before you beginBefore you can send a request to the Text-to-Speech API, you must have completed the following actions. See the [before you begin](/text-to-speech/docs/before-you-begin) page for details.- Enable Text-to-Speech on a GCP project.- Make sure billing is enabled for Text-to-Speech.\n- Make sure you have the following [Identity and Access Management (IAM) roles](https://cloud.google.com/storage/docs/access-control/iam-roles#standard-roles) on the output GCS bucket.- Storage Object Creator\n- Storage Object Viewer\n- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n```\n## Synthesize long audio from text using the command lineYou can convert long-form text to audio by making an HTTP POST request to the `https://texttospeech.googleapis.com/v1beta1/projects/{$project_number}/locations/global:synthesizeLongAudio` endpoint. In the body of your POST command, specify the following fields.\n\u2022 `voice` : The type of voice to synthesize.\n\u2022 `input.text` : The text to synthesize.\n\u2022 `audioConfig` : The type of audio to create.\n\u2022 **output_gcs_uri** : The GCS output file path under the form of \"gs://bucket_name/file_name.wav\".\n\u2022 **parent** : The parent under the form \"projects/{YOUR PROJECT NUMBER}/locations/{YOUR PROJECT LOCATION}\".\nThe input can contain up to 1MB of characters, the exact limit can vary from different inputs.- Create a Google Cloud Storage bucket under the project that is used to run the synthesis. Make sure the service account used to run the synthesis has read/write access to the output GCS bucket.\n- Execute the REST request below at the command line to synthesize audio from text using Text-to-Speech. The command uses the `gcloud auth application-default print-access-token` command to retrieve an authorization token for the request.Make sure that the service account running the GET operation has the [Text-to-Speech Editor role](/text-to-speech/access-control) .HTTP method and URL:\n```\nPOST https://texttospeech.googleapis.com/v1beta1/projects/12345/locations/global:synthesizeLongAudio\n```\nRequest JSON body:\n```\n{\n \"parent\": \"projects/12345/locations/global\",\n \"audio_config\":{\n  \"audio_encoding\":\"LINEAR16\"\n },\n \"input\":{\n  \"text\":\"hello\"\n },\n \"voice\":{\n  \"language_code\":\"en-us\",\n  \"name\":\"en-us-Standard-A\"\n },\n \"output_gcs_uri\": \"gs://bucket_name/file_name.wav\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"name\": \"23456\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.texttospeech.v1beta1.SynthesizeLongAudioMetadata\",\n \"progressPercentage\": 0,\n \"startTime\": \"2022-12-20T00:46:56.296191037Z\",\n \"lastUpdateTime\": \"2022-12-20T00:46:56.296191037Z\"\n },\n \"done\": false\n}\n```- The JSON output for the REST command contains the long operation name in the `name` field. Execute the REST request below at the command line to query the state of the long running operation.Make sure that the service account running the GET operation is from the same project as the one used for synthesis.HTTP method and URL:\n```\nGET https://texttospeech.googleapis.com/v1beta1/projects/12345/locations/global/operations/23456\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"name\": \"projects/12345/locations/global/operations/23456\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.texttospeech.v1beta1.SynthesizeLongAudioMetadata\",\n \"progressPercentage\": 100\n },\n \"done\": true\n}\n```- Query the list of all operations running under a given project, execute the REST request below.Make sure that the service account running the LIST operation is from the same project as the one used for synthesis.HTTP method and URL:\n```\nGET https://texttospeech.googleapis.com/v1beta1/projects/12345/locations/global/operations\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"operations\": [ {\n  \"name\": \"12345\",\n  \"done\": false\n },\n {\n  \"name\": \"23456\",\n  \"done\": false\n }\n ],\n \"nextPageToken\": \"\"\n}\n```- Once the long running operation successfully completes, find the output audio file in the given bucket uri in the `output_gcs_uri` field. If the operation did not complete successfully, find the error by querying using the GET REST command, correct the error, and issue the RPC again.\n## Synthesize long audio from text using client libraries\n### Install the client libraryBefore installing the library, make sure you've [prepared your environment for Python development](/python/docs/setup) .\n```\npip install --upgrade google-cloud-texttospeech\n```\n### Create audio dataYou can use Text-to-Speech to create a long audio file of synthetic human speech. Use the following code to create a long audio file in your GCS bucket.Before running the example, make sure you've [prepared your environment for Python development](/python/docs/setup) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/texttospeech/snippets/long_audio_quickstart.py) \n```\n# Copyright 2023 Google LLC\n## Licensed under the Apache License, Version 2.0 (the \"License\");# you may not use this file except in compliance with the License.# You may obtain a copy of the License at\n## \u00a0 \u00a0 \u00a0http://www.apache.org/licenses/LICENSE-2.0\n## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an \"AS IS\" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.from google.cloud import texttospeechdef synthesize_long_audio(project_id, location, output_gcs_uri):\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 Synthesizes long input, writing the resulting audio to `output_gcs_uri`.\u00a0 \u00a0 Example usage: synthesize_long_audio('12345', 'us-central1', 'gs://{BUCKET_NAME}/{OUTPUT_FILE_NAME}.wav')\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 # TODO(developer): Uncomment and set the following variables\u00a0 \u00a0 # project_id = 'YOUR_PROJECT_ID'\u00a0 \u00a0 # location = 'YOUR_LOCATION'\u00a0 \u00a0 # output_gcs_uri = 'YOUR_OUTPUT_GCS_URI'\u00a0 \u00a0 client = texttospeech.TextToSpeechLongAudioSynthesizeClient()\u00a0 \u00a0 input = texttospeech.SynthesisInput(\u00a0 \u00a0 \u00a0 \u00a0 text=\"Test input. Replace this with any text you want to synthesize, up to 1 million bytes long!\"\u00a0 \u00a0 )\u00a0 \u00a0 audio_config = texttospeech.AudioConfig(\u00a0 \u00a0 \u00a0 \u00a0 audio_encoding=texttospeech.AudioEncoding.LINEAR16\u00a0 \u00a0 )\u00a0 \u00a0 voice = texttospeech.VoiceSelectionParams(\u00a0 \u00a0 \u00a0 \u00a0 language_code=\"en-US\", name=\"en-US-Standard-A\"\u00a0 \u00a0 )\u00a0 \u00a0 parent = f\"projects/{project_id}/locations/{location}\"\u00a0 \u00a0 request = texttospeech.SynthesizeLongAudioRequest(\u00a0 \u00a0 \u00a0 \u00a0 parent=parent,\u00a0 \u00a0 \u00a0 \u00a0 input=input,\u00a0 \u00a0 \u00a0 \u00a0 audio_config=audio_config,\u00a0 \u00a0 \u00a0 \u00a0 voice=voice,\u00a0 \u00a0 \u00a0 \u00a0 output_gcs_uri=output_gcs_uri,\u00a0 \u00a0 )\u00a0 \u00a0 operation = client.synthesize_long_audio(request=request)\u00a0 \u00a0 # Set a deadline for your LRO to finish. 300 seconds is reasonable, but can be adjusted depending on the length of the input.\u00a0 \u00a0 # If the operation times out, that likely means there was an error. In that case, inspect the error, and try again.\u00a0 \u00a0 result = operation.result(timeout=300)\u00a0 \u00a0 print(\u00a0 \u00a0 \u00a0 \u00a0 \"\\nFinished processing, check your GCS bucket to find your audio file! Printing what should be an empty result: \",\u00a0 \u00a0 \u00a0 \u00a0 result,\u00a0 \u00a0 )\n```\n## Clean upTo avoid unnecessary Google Cloud Platform charges, use the [Google Cloud console](https://console.cloud.google.com/) to delete your project if you do not need it.## What's next\n- Learn more about Cloud Text-to-Speech by reading the [basics](/text-to-speech/docs/basics) .\n- Review the list of [available voices](/text-to-speech/docs/voices) you can use for synthetic speech.", "guide": "Cloud Text-to-Speech API"}