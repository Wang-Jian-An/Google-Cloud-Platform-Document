{"title": "Cloud Video Intelligence API - Base64 Encoding", "url": "https://cloud.google.com/video-intelligence/docs/base64", "abstract": "# Cloud Video Intelligence API - Base64 Encoding\nWhen passing video to the Video Intelligence API, you can either pass a Cloud Storage URI, or you can embed video data directly within the request's `content` field, which must be base64 encoded.\n", "content": "## Using the command line\nWithin a gRPC request, you can simply write binary data out directly; however, JSON is used when making a REST request. JSON is a text format that does not directly support binary data, so you will need to convert such binary data into text using [Base64](https://en.wikipedia.org/wiki/Base64) encoding.\nMost development environments contain a native `base64` utility to encode a binary into ASCII text data. To encode a file:\nEncode the file using the `base64` command line tool, making sure to  prevent line-wrapping by using the `-w 0` flag:\n```\nbase64 INPUT_FILE -w 0 > OUTPUT_FILE\n```\nEncode the file using the `base64` command line tool:\n```\nbase64 -i INPUT_FILE -o OUTPUT_FILE\n```\nEncode the file using the `Base64.exe` tool:\n```\ncertutil -encodehex SOURCE_VIDEO_FILE > DEST_TEXT_FILE 0x40000001\n```\nEncode the file using the `Convert.ToBase64String` method:\n```\n[Convert]::ToBase64String([IO.File]::ReadAllBytes(\"./INPUT_FILE\")) > OUTPUT_FILE\n```\nCreate a JSON request file, inlining the base64-encoded data:\n```\n{\u00a0 \"requests\":[\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"image\":{\u00a0 \u00a0 \u00a0 \u00a0 \"content\": \"ZkxhQwAAACIQABAAAAUJABtAA+gA8AB+W8FZndQvQAyjv...\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"features\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\":\"LABEL_DETECTION\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"maxResults\":1\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 }\u00a0 ]}\n```\n## Using client libraries\nEmbedding binary data into requests through text editors is neither desirable or practical. In practice, you will be embedding base64 encoded files within client code. All supported programming languages have built-in mechanisms for base64 encoding content.\nIn Python, base64 encode video files as follows:\n```\n# Import the base64 encoding library.import base64# Pass the video data to an encoding function.def encode_video(video):\u00a0 video_content = video.read()\u00a0 return base64.b64encode(video_content)\n```\nIn Node.js, base64 encode video files as follows:\n```\n// Read the file into memory.var fs = require('fs');var videoFile = fs.readFileSync('/path/to/file');// Convert the video data to a Buffer and base64 encode it.var encoded = new Buffer(videoFile).toString('base64');\n```\nIn Java, you can base64 encode image files as follows:\n```\n// Import the Base64 encoding library.import org.apache.commons.codec.binary.Base64;// Encode the video.byte[] videoData = Base64.encodeBase64(videoFile.getBytes());\n```", "guide": "Cloud Video Intelligence API"}