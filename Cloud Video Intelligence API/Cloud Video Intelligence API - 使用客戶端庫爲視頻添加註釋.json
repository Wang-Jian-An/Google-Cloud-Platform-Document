{"title": "Cloud Video Intelligence API - \u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u7232\u8996\u983b\u6dfb\u52a0\u8a3b\u91cb", "url": "https://cloud.google.com/video-intelligence/docs/annotate-video-client-libraries?hl=zh-cn", "abstract": "# Cloud Video Intelligence API - \u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u7232\u8996\u983b\u6dfb\u52a0\u8a3b\u91cb\n# \u4f7f\u7528\u5ba2\u6236\u7aef\u5eab\u7232\u8996\u983b\u6dfb\u52a0\u8a3b\u91cb\n\u672c\u5feb\u901f\u5165\u9580\u7232\u60a8\u4ecb\u7d39 Video Intelligence API\u3002\u5728\u672c\u5feb\u901f\u5165\u9580\u4e2d\uff0c\u60a8\u5c07\u8a2d\u7f6e Google Cloud \u9805\u76ee\u548c\u6388\u6b0a\uff0c\u7136\u5f8c\u8acb\u6c42 Video Intelligence \u7232\u8996\u983b\u6dfb\u52a0\u8a3b\u91cb\u3002", "content": "## \u6e96\u5099\u5de5\u4f5c- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them## \u5b89\u88dd\u5ba2\u6236\u7aef\u5eab```\ngo get cloud.google.com/go/videointelligence/apiv1\n```\u5728\u5b89\u88dd\u5eab\u4e4b\u524d\uff0c\u8acb\u78ba\u4fdd\u5df2\u7d93 [\u7232 Node.js \u958b\u767c\u6e96\u5099\u597d\u74b0\u5883](https://cloud.google.com/nodejs/docs/setup?hl=zh-cn) \u3002\n```\nnpm install --save @google-cloud/video-intelligence\n```\u5728\u5b89\u88dd\u5eab\u4e4b\u524d\uff0c\u8acb\u78ba\u4fdd\u5df2\u7d93 [\u7232 Python \u958b\u767c\u6e96\u5099\u597d\u74b0\u5883](https://cloud.google.com/python/docs/setup?hl=zh-cn) \u3002\n```\npip install --upgrade google-cloud-videointelligence\n```No preface\n **C#** \uff1a\u8acb\u6309\u7167\u201c\u5ba2\u6236\u7aef\u5eab\u201d\u9801\u9762\u4e0a\u7684 [C# \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/video-intelligence/docs/libraries?hl=zh-cn) \u9032\u884c\u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [\u9069\u7528\u65bc .NET \u7684 Video Intelligence \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.VideoIntelligence.V1/index.html) \u3002\n **PHP** \uff1a\u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [PHP \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/video-intelligence/docs/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [PHP \u7248 Video Intelligence \u53c3\u8003\u6587\u6a94](https://cloud.google.com/php/docs/reference/cloud-videointelligence/latest?hl=zh-cn) \u3002\n **Ruby** \uff1a\u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [Ruby \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/video-intelligence/docs/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [Ruby \u7248 Video Intelligence \u53c3\u8003\u6587\u6a94](https://googleapis.dev/ruby/google-cloud-video_intelligence/latest/Google/Cloud/VideoIntelligence/V1.html) \u3002\n## \u6a19\u7c64\u6aa2\u6e2c\u73fe\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Video Intelligence API \u8acb\u6c42\u8996\u983b\u6216\u8996\u983b\u7247\u6bb5\u4e2d\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u6a19\u7c64\u6aa2\u6e2c\u3002\u8acb\u904b\u884c\u4ee5\u4e0b\u4ee3\u78bc\u4ee5\u57f7\u884c\u60a8\u7684\u7b2c\u4e00\u500b\u8996\u983b\u6a19\u7c64\u6aa2\u6e2c\u8acb\u6c42\uff1a [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/videointelligence/video_quickstart/main.go) \n```\n// Sample video_quickstart uses the Google Cloud Video Intelligence API to label a video.package mainimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"log\"\u00a0 \u00a0 \u00a0 \u00a0 \"github.com/golang/protobuf/ptypes\"\u00a0 \u00a0 \u00a0 \u00a0 video \"cloud.google.com/go/videointelligence/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 videopb \"cloud.google.com/go/videointelligence/apiv1/videointelligencepb\")func main() {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 // Creates a client.\u00a0 \u00a0 \u00a0 \u00a0 client, err := video.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatalf(\"Failed to create client: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 op, err := client.AnnotateVideo(ctx, &videopb.AnnotateVideoRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputUri: \"gs://cloud-samples-data/video/cat.mp4\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Features: []videopb.Feature{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 videopb.Feature_LABEL_DETECTION,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 })\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatalf(\"Failed to start annotation job: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatalf(\"Failed to annotate: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Only one video was processed, so get the first result.\u00a0 \u00a0 \u00a0 \u00a0 result := resp.GetAnnotationResults()[0]\u00a0 \u00a0 \u00a0 \u00a0 for _, annotation := range result.SegmentLabelAnnotations {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Printf(\"Description: %s\\n\", annotation.Entity.Description)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for _, category := range annotation.CategoryEntities {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Printf(\"\\tCategory: %s\\n\", category.Description)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for _, segment := range annotation.Segments {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 start, _ := ptypes.Duration(segment.Segment.StartTimeOffset)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 end, _ := ptypes.Duration(segment.Segment.EndTimeOffset)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Printf(\"\\tSegment: %s to %s\\n\", start, end)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Printf(\"\\tConfidence: %v\\n\", segment.Confidence)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }}\n``` [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/video/src/main/java/video/QuickstartSample.java) \n```\nimport com.google.api.gax.longrunning.OperationFuture;import com.google.cloud.videointelligence.v1.AnnotateVideoProgress;import com.google.cloud.videointelligence.v1.AnnotateVideoRequest;import com.google.cloud.videointelligence.v1.AnnotateVideoResponse;import com.google.cloud.videointelligence.v1.Entity;import com.google.cloud.videointelligence.v1.Feature;import com.google.cloud.videointelligence.v1.LabelAnnotation;import com.google.cloud.videointelligence.v1.LabelSegment;import com.google.cloud.videointelligence.v1.VideoAnnotationResults;import com.google.cloud.videointelligence.v1.VideoIntelligenceServiceClient;import java.util.List;public class QuickstartSample {\u00a0 /** Demonstrates using the video intelligence client to detect labels in a video file. */\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 // Instantiate a video intelligence client\u00a0 \u00a0 try (VideoIntelligenceServiceClient client = VideoIntelligenceServiceClient.create()) {\u00a0 \u00a0 \u00a0 // The Google Cloud Storage path to the video to annotate.\u00a0 \u00a0 \u00a0 String gcsUri = \"gs://cloud-samples-data/video/cat.mp4\";\u00a0 \u00a0 \u00a0 // Create an operation that will contain the response when the operation completes.\u00a0 \u00a0 \u00a0 AnnotateVideoRequest request =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AnnotateVideoRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setInputUri(gcsUri)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addFeatures(Feature.LABEL_DETECTION)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 OperationFuture<AnnotateVideoResponse, AnnotateVideoProgress> response =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 client.annotateVideoAsync(request);\u00a0 \u00a0 \u00a0 System.out.println(\"Waiting for operation to complete...\");\u00a0 \u00a0 \u00a0 List<VideoAnnotationResults> results = response.get().getAnnotationResultsList();\u00a0 \u00a0 \u00a0 if (results.isEmpty()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"No labels detected in \" + gcsUri);\u00a0 \u00a0 \u00a0 \u00a0 return;\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 for (VideoAnnotationResults result : results) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Labels:\");\u00a0 \u00a0 \u00a0 \u00a0 // get video segment label annotations\u00a0 \u00a0 \u00a0 \u00a0 for (LabelAnnotation annotation : result.getSegmentLabelAnnotationsList()) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Video label description : \" + annotation.getEntity().getDescription());\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // categories\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for (Entity categoryEntity : annotation.getCategoryEntitiesList()) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Label Category description : \" + categoryEntity.getDescription());\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // segments\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for (LabelSegment segment : annotation.getSegmentsList()) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 double startTime =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 segment.getSegment().getStartTimeOffset().getSeconds()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + segment.getSegment().getStartTimeOffset().getNanos() / 1e9;\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 double endTime =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 segment.getSegment().getEndTimeOffset().getSeconds()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + segment.getSegment().getEndTimeOffset().getNanos() / 1e9;\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 System.out.printf(\"Segment location : %.3f:%.3f\\n\", startTime, endTime);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Confidence : \" + segment.getConfidence());\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\u5728\u904b\u884c\u8a72\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u78ba\u4fdd\u5df2\u7d93 [\u7232 Node.js \u958b\u767c\u6e96\u5099\u597d\u74b0\u5883](https://cloud.google.com/nodejs/docs/setup?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/video-intelligence/quickstart.js) \n```\n// Imports the Google Cloud Video Intelligence libraryconst videoIntelligence = require('@google-cloud/video-intelligence');// Creates a clientconst client = new videoIntelligence.VideoIntelligenceServiceClient();// The GCS uri of the video to analyzeconst gcsUri = 'gs://cloud-samples-data/video/cat.mp4';// Construct requestconst request = {\u00a0 inputUri: gcsUri,\u00a0 features: ['LABEL_DETECTION'],};// Execute requestconst [operation] = await client.annotateVideo(request);console.log(\u00a0 'Waiting for operation to complete... (this may take a few minutes)');const [operationResult] = await operation.promise();// Gets annotations for videoconst annotations = operationResult.annotationResults[0];// Gets labels for video from its annotationsconst labels = annotations.segmentLabelAnnotations;labels.forEach(label => {\u00a0 console.log(`Label ${label.entity.description} occurs at:`);\u00a0 label.segments.forEach(segment => {\u00a0 \u00a0 segment = segment.segment;\u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 `\\tStart: ${segment.startTimeOffset.seconds}` +\u00a0 \u00a0 \u00a0 \u00a0 `.${(segment.startTimeOffset.nanos / 1e6).toFixed(0)}s`\u00a0 \u00a0 );\u00a0 \u00a0 console.log(\u00a0 \u00a0 \u00a0 `\\tEnd: ${segment.endTimeOffset.seconds}.` +\u00a0 \u00a0 \u00a0 \u00a0 `${(segment.endTimeOffset.nanos / 1e6).toFixed(0)}s`\u00a0 \u00a0 );\u00a0 });});\n```\u5728\u904b\u884c\u8a72\u793a\u4f8b\u4e4b\u524d\uff0c\u8acb\u78ba\u4fdd\u5df2\u7d93 [\u7232 Python \u958b\u767c\u6e96\u5099\u597d\u74b0\u5883](https://cloud.google.com/python/docs/setup?hl=zh-cn) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/videointelligence/samples/quickstart/quickstart.py) \n```\nfrom google.cloud import videointelligencevideo_client = videointelligence.VideoIntelligenceServiceClient()features = [videointelligence.Feature.LABEL_DETECTION]operation = video_client.annotate_video(\u00a0 \u00a0 request={\u00a0 \u00a0 \u00a0 \u00a0 \"features\": features,\u00a0 \u00a0 \u00a0 \u00a0 \"input_uri\": \"gs://cloud-samples-data/video/cat.mp4\",\u00a0 \u00a0 })print(\"\\nProcessing video for label annotations:\")result = operation.result(timeout=180)print(\"\\nFinished processing.\")# first result is retrieved because a single video was processedsegment_labels = result.annotation_results[0].segment_label_annotationsfor i, segment_label in enumerate(segment_labels):\u00a0 \u00a0 print(\"Video label description: {}\".format(segment_label.entity.description))\u00a0 \u00a0 for category_entity in segment_label.category_entities:\u00a0 \u00a0 \u00a0 \u00a0 print(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"\\tLabel category description: {}\".format(category_entity.description)\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 for i, segment in enumerate(segment_label.segments):\u00a0 \u00a0 \u00a0 \u00a0 start_time = (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 segment.segment.start_time_offset.seconds\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + segment.segment.start_time_offset.microseconds / 1e6\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 end_time = (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 segment.segment.end_time_offset.seconds\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + segment.segment.end_time_offset.microseconds / 1e6\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 positions = \"{}s to {}s\".format(start_time, end_time)\u00a0 \u00a0 \u00a0 \u00a0 confidence = segment.confidence\u00a0 \u00a0 \u00a0 \u00a0 print(\"\\tSegment {}: {}\".format(i, positions))\u00a0 \u00a0 \u00a0 \u00a0 print(\"\\tConfidence: {}\".format(confidence))\u00a0 \u00a0 print(\"\\n\")\n```No preface\n **C#** \uff1a\u8acb\u6309\u7167\u201c\u5ba2\u6236\u7aef\u5eab\u201d\u9801\u9762\u4e0a\u7684 [C# \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/video-intelligence/docs/libraries?hl=zh-cn) \u9032\u884c\u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [\u9069\u7528\u65bc .NET \u7684 Video Intelligence \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-dotnet/docs/Google.Cloud.VideoIntelligence.V1/index.html) \u3002\n **PHP** \uff1a\u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [PHP \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/video-intelligence/docs/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [PHP \u7248 Video Intelligence \u53c3\u8003\u6587\u6a94](https://cloud.google.com/php/docs/reference/cloud-videointelligence/latest?hl=zh-cn) \u3002\n **Ruby** \uff1a\u8acb\u6309\u7167\u5ba2\u6236\u7aef\u5eab\u9801\u9762\u4e0a\u7684 [Ruby \u8a2d\u7f6e\u8aaa\u660e](https://cloud.google.com/video-intelligence/docs/libraries?hl=zh-cn) \u64cd\u4f5c\uff0c\u7136\u5f8c\u8a2a\u554f [Ruby \u7248 Video Intelligence \u53c3\u8003\u6587\u6a94](https://googleapis.dev/ruby/google-cloud-video_intelligence/latest/Google/Cloud/VideoIntelligence/V1.html) \u3002\u606d\u559c\uff01\u60a8\u5df2\u5411 Video Intelligence \u767c\u9001\u4e86\u7b2c\u4e00\u500b\u8acb\u6c42\u3002## \u7d50\u679c\u600e\u9ebc\u6a23\uff1f\n## \u6e05\u7406\u7232\u907f\u514d\u56e0\u672c\u9801\u4e2d\u4f7f\u7528\u7684\u8cc7\u6e90\u5c0e\u81f4\u60a8\u7684 Google Cloud \u8cec\u865f\u7522\u751f\u8cbb\u7528\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\u3002- \u4f7f\u7528 [Google Cloud \u63a7\u5236\u6aaf](https://console.cloud.google.com/?hl=zh-cn) \u522a\u9664\u4e0d\u9700\u8981\u7684\u9805\u76ee\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f", "guide": "Cloud Video Intelligence API"}