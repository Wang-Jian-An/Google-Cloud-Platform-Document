{"title": "Documentation - Manage outbound traffic from workloads", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Manage outbound traffic from workloads\nThis page describes egress connectivity actions you must take on a virtual machine (VM) or pod in a project to let workloads go out of the organization. The procedure shows how to add a required label to deployments to explicitly enable outbound traffic and let workloads communicate outside of the organization.\nBy default, Google Distributed Cloud Hosted (GDCH) blocks workloads in a project from going out of the organization. Workloads can exit the organization if your Platform Administrator (PA) has disabled data exfiltration protection for the project. In addition to disabling data exfiltration protection, the Application Operator (AO) must add the label `egress.networking.gke.io/enabled: true` on the pod workload to enable egress connectivity for that pod. When you allocate and use a well-known IP address for the project, it performs a source network address translation (NAT) on the outbound traffic from the organization.\nYou can manage egress connectivity from workloads in a [pod](#egress-pod) or a [VM](#egress-vm) .\n", "content": "## Manage outbound traffic from workloads in a pod\nTo configure workloads in a pod for egress connectivity, first you must ensure [data exfiltration protection is disabled for the project](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/configure-pnp#disable-data-exfiltration-protection) . Then, ensure that the `egress.networking.gke.io/enabled: true` label is added on the pod. If you are using a higher-level construct like `Deployment` or `Daemonset` constructs to manage sets of pods, then you must configure the pod label in those specifications.\nThe following example shows how to create a `Deployment` from its manifest file. The sample file contains the value `egress.networking.gke.io/enabled: true` on the `labels` field to explicitly enable outbound traffic from the project. This label is added to each pod in the deployment and allows workloads in the pods to exit the organization.\n```\nkubectl --kubeconfig USER_CLUSTER_KUBECONFIG \\\u00a0 \u00a0 apply -f - <<EOFapiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: DEPLOYMENT_NAMEspec:\u00a0 replicas: NUMBER_OF_REPLICAS\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 run: APP_NAME\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels: # The labels given to each pod in the deployment, which are used\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # to manage all pods in the deployment.\u00a0 \u00a0 \u00a0 \u00a0 run: APP_NAME\u00a0 \u00a0 \u00a0 \u00a0 egress.networking.gke.io/enabled: true\u00a0 \u00a0 spec: # The pod specification, which defines how each pod runs in the deployment.\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: CONTAINER_NAME\u00a0 \u00a0 \u00a0 \u00a0 image: CONTAINER_IMAGEEOF\n```\nReplace the following:\n- `` : the kubeconfig file for the user cluster to which you're deploying container workloads.\n- `` : the kubeconfig file for the user cluster to which you're deploying container workloads.\n- `` : the name of the application to run within the deployment.\n- `` : the number of replicated `Pod` objects that the deployment manages.\n- `` : the name of the container.\n- `` : the name of the container image. You must include the container registry path and version of the image, such as `` `/hello-app:1.0` .\nFor example:\n```\napiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: my-appspec:\u00a0 replicas: 3\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 run: my-app\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 run: my-app\u00a0 \u00a0 \u00a0 \u00a0 egress.networking.gke.io/enabled: true\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: hello-app\u00a0 \u00a0 \u00a0 \u00a0 image: REGISTRY_PATH/hello-app:1.0\n```\n## Manage outbound traffic from workloads in a VM\nTo configure workloads in a VM for egress connectivity, you can use the GDCH console for VM configuration or create a `VirtualMachineExternalAccess` resource. For information about how to enable a VM with external access for data transfer, see [Enable external access](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/connect-to-vm/ip-addresses#enable-external-access) on the section.", "guide": "Documentation"}