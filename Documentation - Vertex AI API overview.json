{"title": "Documentation - Vertex AI API overview", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Vertex AI API overview\n", "content": "## Service endpoint and discovery document\nA service endpoint is required to interact programmatically with the OCR, Speech-to-Text, Translation, and Vertex AI Workbench APIs.\n### Get the Vertex AI Workbench endpoint and discovery document\nThe API endpoint for the Vertex AI Workbench KRM API is: `https://` `` `/apis/aiplatform.gdc.goog/v1beta1` where `` is the API endpoint of your organization administrator Kubernetes cluster.\nTo access the Vertex AI Workbench discovery document, do one of the following:\n- Enter the endpoint URL in a browser.\n- Run the `kubectl proxy` command in a tool such as curl to open a proxy to the Kubernetes API server on your local machine. Once that command is running, enter the following URL in your browser: `http://127.0.0.1:8001/apis/aiplatform.gdc.goog/v1beta1` .\n### Get the pre-trained APIs endpoints\nTo get the endpoints for the pre-trained APIs, see [View service statuses and endpoints](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vertex-ai-api-status) .\n## REST, gRPC, KRM, and client libraries\nYou can access the OCR and Translation APIs via gRPC or one of the provided client libraries. The client libraries are built on gRPC.\nYou can access the OCR, Speech-to-Text, and Translation APIs via REST APIs.\nYou can manage Vertex AI Workbench via its Kubernetes Resource Model (KRM) API.\n### Client libraries\nGoogle provides Python client libraries for the three Vertex AI pre-trained APIs.\n| Pros                            | Cons           |\n|:-----------------------------------------------------------------------------------------------------------------|:---------------------------------------------|\n| Maintained by Google. Built-in authentication. Built-in retries. Efficient protocol buffer HTTP request body. | Not available for all programming languages. |\n### REST\nThe OCR and Translation APIs support REST. See the REST API references:\n- [OCR REST API reference](/distributed-cloud/hosted/docs/latest/gdch/apis/vertex-ai/ocr/rest/overview) \n- [Translation REST API reference](/distributed-cloud/hosted/docs/latest/gdch/apis/vertex-ai/translation/rest) \nThe Speech-to-Text and Vertex AI Workbench APIs don't support REST.\n| Pros                      | Cons                                              |\n|:-------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Simple JSON interface. Well supported by many Google and third-party tools and libraries. | You must build your own client. You must implement authentication. You must implement retries. Less efficient JSON HTTP request body. REST streaming is not supported by these APIs. |\n### gRPC\nThe OCR, Speech-to-Text, and Translation APIs support gRPC. See the gRPC references, which provide generic descriptions of the types, methods, and fields generated for a gRPC library:\n- [OCR gRPC reference](/distributed-cloud/hosted/docs/latest/gdch/apis/vertex-ai/ocr/rpc) \n- [Speech-to-Text gRPC reference](/distributed-cloud/hosted/docs/latest/gdch/apis/vertex-ai/speech-to-text/rpc) \n- [Translation gRPC reference](/distributed-cloud/hosted/docs/latest/gdch/apis/vertex-ai/translation/rpc) \nThe Vertex AI Workbench API doesn't support gRPC.\n| Pros                    | Cons                                  |\n|:-----------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------|\n| Supports many programming languages. Efficient protocol buffer HTTP request body. | You must generate your own client from Google-supplied protocol buffers. You must implement authentication. You must implement retries. |\n### KRM\nThe Vertex AI Workbench API supports KRM. For more information, see the [Vertex AI Workbench KRM API Reference](/distributed-cloud/hosted/docs/latest/gdch/apis/vertex-ai/workbench/krm/vertex-ai-workbench-krm-ref) .\n## Type, method, and field names\nDepending on whether you are using client libraries, REST, gRPC, or KRM, the type, method, and field names for the API vary somewhat:\n- REST is arranged by resource hierarchies and their methods.\n- Client libraries and gRPC are arranged by services and their methods.\n- KRM field names use camel case, though the API service will accept either camel case or snake case.\n- REST and gRPC field names use snake case.\n- Client library field names use either title case, camel case or snake case, depending on which name is idiomatic for the language.## REST and protocol buffers\nWhen calling the REST API, the default value behavior for protocol buffers might result in missing fields in a JSON response. These fields are set to the default value, so they are not included in the response.", "guide": "Documentation"}