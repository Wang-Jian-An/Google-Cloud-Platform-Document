{"title": "Docs - Deploy the blueprint", "url": "https://cloud.google.com/architecture/enterprise-application-blueprint/deploy-blueprint", "abstract": "# Docs - Deploy the blueprint\nLast reviewed 2023-12-20 UTC\n**    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nThis section describes the process that you can use to deploy the blueprint, its naming conventions, and alternatives to blueprint recommendations.\n", "content": "## Bringing it all together\nTo implement the architecture described in this document, complete the steps in this section.\n### Deploy the blueprint in a new organization\nTo deploy the blueprint in a new Google Cloud organization, complete the following:\n- Create your foundational infrastructure using the [enterprise foundationsblueprint](/architecture/security-foundations) . Complete the following:- Create an organization structure, including folders for separation of environments.\n- Configure foundational IAM permissions to grant access to developer platform administrators.\n- Create the VPC network.\n- Deploy the foundation infrastructure pipeline.\nIf you don't use the enterprise foundations blueprint, see [Deploy the blueprint without the enterprise foundations blueprint](#deploy-without-efb) .\n- The developer platform administrator uses the foundation infrastructure pipeline to create the multi-tenant infrastructure pipeline, application factory, and fleet-scope pipeline.\n- The developer platform administrator uses the multi-tenant infrastructure pipeline to deploy GKE clusters and shared infrastructure.\n- Application operators use the application factory to onboard new applications. Operators add one or more entries in the application factory repository, which triggers the creation of application-specific resources.\n- Application developers use the application CI/CD pipeline within their application-specific infrastructure to deploy applications to the multi-tenant infrastructure.\n### Deploy the blueprint without the enterprise foundations blueprint\nIf you don't deploy the enterprise application blueprint on the enterprise foundations blueprint, complete the following steps:\n- Create the following resources:- An organization hierarchy with`development`,`nonproduction`, and`production`folders\n- A Shared VPC network in each folder\n- An IP address scheme that takes into account the required IP ranges for your GKE clusters\n- A DNS mechanism for your GKE clusters\n- Firewall policies that are aligned with your security posture\n- A mechanism to access Google Cloud APIs through private IP addresses\n- A connectivity mechanism with your on-premises environment\n- Centralized logging for security and audit\n- Security Command Center for threat monitoring\n- Organizational policies that are aligned with your security posture\n- A pipeline that can be used to deploy the application factory, the multi-tenant infrastructure pipeline, and the fleet-scope pipeline\n- After you deploy the resources, continue with step 2 in [Deploy the blueprint in a new organization](#deploy-new) .\n### Incorporate the blueprint into your existing GKE deployment\nThis blueprint requires you to deploy the developer platform first, and then deploy applications onto the developer platform. The following table describes how you can use the blueprint if you already have containerized applications running on Google Cloud.\n| Existing usage                     | Migration strategy                                                                                                                                                                                                                                          |\n|:-------------------------------------------------------------------------------------------------||\n| Already have a CI/CD pipeline.                 | You can use the blueprint's fleet and cluster architecture even when different products are used for application build and deployment. At a minimum, we recommend that you mirror images to two regions.                                                                                                                                                                                             |\n| Have an existing organization structure that doesn't match the enterprise foundations blueprint. | Having at least two environments is recommended for safer sequential deployments. You don't have to deploy environments in separate Shared VPCs or folders. However, don't deploy workloads that belong to different environments into the same cluster.                                                                                                                                                                                 |\n| Don't use IaC.                     | If your current application deployment process doesn't use IaC, you can assess your readiness with the Terraform on Google Cloud maturity model. Import existing resources into a different Terraform project which is organized similarly to this blueprint, with the separation of multi-tenant and per-tenant pipelines. To create new clusters, you can use Terraform modules for Google Cloud.                                                                                                                                              |\n| Clusters are spread across multiple projects within the same environment.      | You can group clusters from multiple projects into a fleet. Verify that your namespaces have unique meanings within the same fleet. Before adding clusters to a fleet, ask teams to move their applications to a namespace with a unique name (for example, not default).You can then group namespaces into scopes.                                                                                                                                                                  |\n| Clusters are in a single region.                 | You don't need to use multiple regions in production and non-production to adopt the blueprint.                                                                                                                                                                                                                       |\n| Different sets of environments exist.               | You can modify the blueprint to support more or less than three environments.                                                                                                                                                                                                                            |\n| Creation of clusters is delegated to application developer or application operator teams.  | For the most secure and consistent developer platform, you can try to move ownership of clusters from the application teams to the developer platform team. If you can't, you can still adopt many of the blueprint practices. For example, you can add the clusters owned by different application teams to a fleet. However, when combining clusters with independent ownership, don't use Workload Identity or Anthos Service Mesh, because they don't provide enough control of who can assert what workload identities. Instead, use a custom organization policy to prevent teams from enabling these features on GKE clusters.When clusters are grouped into a fleet, you can still audit and enforce policies. You can use a custom organization policy to require clusters to be created within a fleet that corresponds to the environment folder that the cluster's project is under. You can use fleet default configuration to require that new clusters use policy control. |\n## Alternatives to default recommendations\nThis section describes alternatives to the default recommendations that are included in this guide.\n| Decision area               | Possible alternatives                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n|:-------------------------------------------------------------------------||\n| All applications run in the same set of five clusters.     | The blueprint uses a set of five clusters (two in production, two in non-production, and one in development). You can modify the blueprint to make additional sets of five clusters.Assign applications to sets of five clusters. Don't bind an application's scopes or fleet namespaces to clusters in the other sets. You may want to segregate applications into different cluster sets to complete activities such as the following: Group together a few applications with special regulatory concerns (for example, PCI-DSS). Isolate applications that require special handling during cluster upgrades (for example, stateful applications that use persistent volumes). Isolate applications with risky security profiles (for example, processing user-provided content in a memory-unsafe language). Isolate applications that require GPUs, cost sensitivity, and performance sensitivity. If you are nearing the GKE cluster limit on the number of nodes (15,000 nodes), you can create a new set of clusters. Use a different Shared VPC for applications that need to run within a VPC Service Controls perimeter. Create one cluster set in the perimeter and one cluster set outside of the perimeter. Avoid creating new clusters sets for every application or tenant, because this practice might result in one of the following circumstances: Applications that don't make good use of the minimum cluster size (3 VMs x 2 regions) even with the smallest available instance types. Missed potential for cost reduction from bin-packing different applications. Tedious and uncertain capacity growth planning because planning is applied to each application individually. Predictions of capacity are more accurate when done in aggregate for a broad set of applications. Delays in creating new clusters for new tenants or applications, reducing tenant satisfaction with the platform. For example, in some organizations, the required IP address allocations may take time and require extra approvals. Reaching the private cluster limit in a VPC network. |\n| Production and non-production environments have clusters in two regions. | For lower latency to end users in multiple regions, you can deploy the production and non-production workloads across more than two regions (for example, three regions for production, three regions for non-production, and one region for development). This deployment strategy increases the cost and overhead of maintaining resources in additional regions.                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| Production and non-production environments have clusters in two regions. | If all applications have lower availability requirements, you can deploy production and non-production workloads to only one region (one production environment, one non-production environment, and one development environment). This strategy helps reduce cost, but doesn't protect the same level of availability as a dual-regional or multi-regional architecture.                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| Production and non-production environments have clusters in two regions. | If applications have different availability requirements, you can create different cluster sets for different applications (for example, cluster-set-1 with two production environments, two non-production environments, and one development environment and cluster-set-2 with one production environment, one non-production environment, and one development environment).                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| Hub-and-spoke topology matches your requirements better than Shared VPC. | You can deploy the blueprint in a hub-and-spoke configuration, where each environment (development, production, and non-production) is hosted in its own spoke. Hub-and-spoke topology can increase segregation of the environments. For more information, see Hub-and-spoke network topology.                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n## What's next\n- Learn more about the [enterprise foundations blueprint](/architecture/security-foundations) .\n- Learn more about software delivery on Google Cloud from the following:- [Best practices for continuous integration and delivery to GKE](/kubernetes-engine/docs/concepts/best-practices-continuous-integration-delivery-kubernetes#checklist) \n- [Software delivery framework](/anthos-config-management/docs/tutorials/modern-cicd-gke-user-guide) \n- [Secure CI/CD pipeline](https://github.com/GoogleCloudPlatform/terraform-google-secure-cicd) repository\n- Learn more about running applications on GKE from the following:- [Best practices for building containers](/architecture/best-practices-for-building-containers) \n- [Best practices for GKE networking](/kubernetes-engine/docs/best-practices/networking) \n- [Best practices for GKE enterprise multi-tenancy](/kubernetes-engine/docs/best-practices/enterprise-multitenancy) \n- [Best practices for operating containers](/architecture/best-practices-for-operating-containers) \n- [Best practices for running cost-optimized Kubernetes applications on GKE](/architecture/best-practices-for-running-cost-effective-kubernetes-applications-on-gke) \n- [GKE safer cluster](https://github.com/terraform-google-modules/terraform-google-kubernetes-engine/tree/master/modules/safer-cluster) repository\n- [Harden your cluster's security](/kubernetes-engine/docs/how-to/hardening-your-cluster)", "guide": "Docs"}