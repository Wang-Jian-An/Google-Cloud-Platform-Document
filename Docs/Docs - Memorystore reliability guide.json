{"title": "Docs - Memorystore reliability guide", "url": "https://cloud.google.com/architecture/framework/reliability/product-guides/memorystore", "abstract": "# Docs - Memorystore reliability guide\nLast reviewed 2023-08-07 UTC\nMemorystore is a fully-managed, in-memory store that provides a managed version of two open source caching solutions: Redis and Memcached. Memorystore is scalable, and automates complex tasks such as provisioning, replication, failover, and patching.\n", "content": "## Best practices\n- [Redis general best practices](/memorystore/docs/redis/general-best-practices) - guidance on exporting Redis Database (RDB) backups, resource-intensive operations, and operations requiring connection retry. In addition, information on maintenance, memory management, and setting up Serverless VPC Access connector, as well as private services access connection mode, and monitoring and alerts.\n- [Redis memory management best practices](/memorystore/docs/redis/memory-management-best-practices) - memory management concepts such as instance capacity and`Maxmemory`configuration, export, scaling, and version upgrade operations, memory management metrics, and how to resolve an out-of-memory condition.\n- [Redis exponential backoff](/memorystore/docs/redis/exponential-backoff) - how exponential backoff works, an example algorithm, and how maximum backoff and maximum number of retries work.\n- [Memcached best practices](/memorystore/docs/memcached/best-practices) - how to design application for cache misses, connecting directly to nodes' IP addresses, and Memcached [Auto Discovery service](/memorystore/docs/memcached/auto-discovery-overview) . Also, guidance on configuring`max-item-size`parameter, balancing clusters, and using Cloud Monitoring to monitor essential metrics.\n- [Memcached memory management best practices](/memorystore/docs/memcached/memory-management-best-practices) - configuring memory for a Memcached instance,configuration, when to increase, and metrics for memory usage.", "guide": "Docs"}