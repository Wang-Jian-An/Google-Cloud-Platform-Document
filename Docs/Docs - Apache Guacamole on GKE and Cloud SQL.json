{"title": "Docs - Apache Guacamole on GKE and Cloud SQL", "url": "https://cloud.google.com/architecture/deploy-guacamole-gke", "abstract": "# Docs - Apache Guacamole on GKE and Cloud SQL\nLast reviewed 2023-11-15 UTC\n[Apache Guacamole](https://guacamole.apache.org/) offers a fully browser-based way to access remote desktops through Remote Desktop Protocol (RDP), Virtual Network Computing (VNC), and Secure Shell Protocol (SSH) on Compute Engine virtual machines (VMs). Identity-Aware Proxy (IAP) provides access to Guacamole with improved security.\nThis reference architecture document is intended for server administrators and engineers who want to host Apache Guacamole on Google Kubernetes Engine (GKE) and Cloud SQL. This document assumes you are familiar with deploying workloads to Kubernetes and Cloud SQL for MySQL. This document also assumes you are familiar with Identity and Access Management and Google Compute Engine.\n**Note:** Apache Guacamole is not a full Virtual Desktop Infrastructure (VDI) solution by itself. For alternative solutions that provide a full VDI, see [Virtual Desktops Solutions](/solutions/virtual-desktops) .\n", "content": "## Architecture\nThe following diagram shows how a Google Cloud load balancer is configured with IAP, to protect an instance of the Guacamole client running in GKE:\nThis architecture includes the following components:\n- **Google Cloud load balancer:** Distributes traffic across multiple instances, which reduces the risk of performance issues.\n- **IAP:** Provides improved security through a custom authentication extension.\n- **Guacamole client:** Runs in GKE and connects to the guacd backend service.\n- **Guacd backend service:** Brokers remote desktop connections to one or more Compute Engine VMs.\n- **Guacamole database in Cloud SQL:** Manages configuration data for Guacamole.\n- **Compute Engine instances:** VMs hosted on the Google infrastructure.## Design considerations\nThe following guidelines can help you to develop an architecture that meets your organization's requirements for security, cost, and performance.\n### Security and compliance\nThis architecture uses IAP to help protect access to the Guacamole service. Authorized users sign in to the Guacamole instance through a custom IAP authentication extension. For details, see the [customextension in GitHub](https://github.com/GoogleCloudPlatform/guacamole-on-gcp/tree/main/client/extensions/guacamole-auth-googleiap) .\nWhen you add additional users (through the Guacamole user interface), these additional users must have permissions through IAM, with the `IAP-secured Web App User` role.\nThe OAuth configuration that this deployment creates is set to [internal](https://support.google.com/cloud/answer/6158849) . Because of this setting, you must use a Google account in the same organization as the one you use to deploy Guacamole. If you use a Google account outside the organization, you receive an `HTTP/403 org_internal` error.\n### Performance\nGoogle Cloud load balancer and GKE distributes traffic across multiple instances, which helps to reduce the risk of performance issues.\n## Deployment\nTo deploy this architecture, see [Deploy Apache Guacamole on GKE and Cloud SQL](/architecture/deploy-guacamole-gke/deployment) .\n## What's Next?\n- Review the GKE guidance on [Hardening your cluster's security](/kubernetes-engine/docs/how-to/hardening-your-cluster) .\n- Review [Encrypt secrets at the application layer](/kubernetes-engine/docs/how-to/encrypting-secrets) to increase security for secrets, such as database credentials and OAuth credentials.\n- Review [IAM Conditions](/iam/docs/conditions-overview) to learn how to provide more granular control for user access to Guacamole.\n- Understand more about how IAP integration works by reviewing the custom authentication provider in the [GitHub repository](https://github.com/GoogleCloudPlatform/guacamole-on-gcp) .\n- For more reference architectures, diagrams, and best practices, explore the [Cloud Architecture Center](/architecture) .", "guide": "Docs"}