{"title": "Docs - Migrate from AWS to Google Cloud: Migrate from Amazon EKS to GKE", "url": "https://cloud.google.com/architecture/migrate-amazon-eks-to-gke", "abstract": "# Docs - Migrate from AWS to Google Cloud: Migrate from Amazon EKS to GKE\nLast reviewed 2023-09-30 UTC\nGoogle Cloud provides tools, products, guidance, and professional services to migrate from Amazon Elastic Kubernetes Service (Amazon EKS) to [Google Kubernetes Engine (GKE)](/kubernetes-engine) . This document helps you to design, implement, and validate a plan to migrate from Amazon EKS to GKE. This document also provides guidance if you're evaluating the opportunity to migrate and want to explore what migration might look like. Besides running on Amazon Elastic Compute Cloud (Amazon EC2), Amazon EKS has a few other deployment options, such as Amazon EKS on AWS outputs and Amazon EKS anywhere. This document focuses on Amazon EKS on EC2.\nThis document is part of a multi-part series about migrating from AWS to Google Cloud that includes the following documents:\n- [Get started](/architecture/migration-from-aws-get-started) \n- [Migrate from Amazon EC2 to Compute Engine](/architecture/migrate-amazon-ec2-to-compute-engine) \n- [Migrate from Amazon S3 to Cloud Storage](/architecture/migrate-amazon-s3-to-cloud-storage) \n- Migrate from Amazon EKS to Google Kubernetes Engine (this document)\nThis series assumes that you've read and are familiar with the following documents:\n- [Migrate to Google Cloud: Choose your migration path](/architecture/migration) : presents the Migration to Google Cloud series and helps you to understand how each piece of the series relates to other documents.\n- [Migrate to Google Cloud: Get started](/architecture/migration-to-gcp-getting-started) : describes the general migration framework that you follow in this migration.\n- [Migrate to Google Cloud: Best practices for validating a migration plan](/architecture/migration-to-google-cloud-best-practices) : describes potential changes and improvements to your migration plan.\nThe following diagram illustrates the path of your migration journey. For migration scenarios, the Deploy phase is equivalent to performing a migration process.\nYou might migrate from Amazon EKS to GKE in a series of iterations\u2014for example, you might migrate some workloads first and others later. For each separate migration iteration, you follow the phases of the general migration framework:\n- Assess and discover your workloads and data.\n- Plan and build a foundation on Google Cloud.\n- Migrate your workloads and data to Google Cloud.\n- Optimize your Google Cloud environment.\nFor more information about the phases of this framework, see [Migrate to Google Cloud: Get started](/architecture/migration-to-gcp-getting-started) .\n", "content": "## Assess the source environment\nIn the assessment phase, you determine the requirements and dependencies of the resources that you want to migrate from Amazon EKS to GKE.\nThe assessment phase consists of the following tasks:\n- Build a comprehensive inventory of your workloads and data.\n- Catalog your workloads and data according to their properties and dependencies.\n- Train and educate your teams on Google Cloud.\n- Build experiments and proofs of concept on Google Cloud.\n- Calculate the total cost of ownership (TCO) of the target environment.\n- Decide on the order and priority of the workloads that you want to migrate.\nFor more information about the assessment phase and these tasks, see [Migrate to Google Cloud: Assess and discover your workloads](/architecture/migration-to-gcp-assessing-and-discovering-your-workloads) . The following sections are based on information in that document.\n### Build your inventories\nTo scope your migration, you create two inventories: one of your Amazon EKS clusters, and one of the workloads that are deployed in those clusters. After you build these inventories, you assess your deployment and operational processes for deploying workloads in the clusters.\nTo build the inventory of your Amazon EKS clusters, we recommend that you use [StratoZone](/migrate/stratozone/docs/about-stratozone) . StratoZone supports importing data from Amazon EKS and other AWS resources by running [open source data-collection scripts](https://github.com/GoogleCloudPlatform/aws-to-stratozone-export) . StratoZone then recommends relevant Google Cloud services that you can migrate to.\nWhen you run the AWS data-collection scripts, we recommend that you do the following:\n- Assess the data-collection script's codebase to evaluate what data the script collects.\n- Run the data-collection scripts by using an instance of [AWS CloudShell](https://aws.amazon.com/cloudshell/) . Using the shell avoids the need to generate, distribute, and maintain authentication keys to run the data-collection scripts in other runtime environments.\n- Run the data-collection scripts by impersonating an account that has minimal, read-only permissions. Using read-only permissions avoids any accidental modifications to your AWS resources.\n- If appropriate, anonymize personally identifiable information (PII) from the reports that the data collection scripts generate.\nFor more information about assessing your AWS environment by using StratoZone, see [Import data from other cloud providers](/migrate/stratozone/docs/import-data-scripts) .\nWhen you build the inventory of your Amazon EKS clusters, you might find that some of the clusters need to be decommissioned as part of your migration. Make sure that your migration plan includes retiring these resources.\nIn addition to the data that you get from the StratoZone script, consider the following data points for each Amazon EKS cluster:\n- Follow the guidance in the [Build your inventories](/architecture/migrating-containers-kubernetes-gke#build_your_inventories) section of \"Migrating Kubernetes to GKE.\" That document describes how to build the inventories of your Kubernetes clusters and workloads. It's also applicable to building the inventory of your Amazon EKS environments.\n- Consider Amazon EKS-specific aspects and features for each Amazon EKS cluster, including the following:- Private clusters\n- Cluster endpoint access control\n- Secret encryption\n- Managed node groups and self-managed nodes\n- Tags on Amazon EKS resources\n- Amazon Custom AMIs in EKS\n- Usage of Amazon EKS Fargate\n- Usage of Amazon EKS Managed Prometheus\n- OpenID Connect authentication configuration\n- Assess how you're authenticating against your Amazon EKS clusters and how you configured AWS Identity and Access Management (IAM) for Amazon EKS.\n- Assess the networking configuration of your Amazon EKS clusters.\n- Assess any compliance and regulatory requirements, and whether you're currently meeting these requirements.\n### Assess your deployment and operational processes\nAfter you build the inventories of your Amazon EKS clusters and workloads, we recommend that you assess your deployment and operational processes. It's important to have a clear understanding of how your deployment and operational processes work. These processes are a fundamental part of the practices that prepare and maintain your production environment and the workloads that run there.\nYour deployment and operational processes might build the artifacts that your workloads need to function. Therefore, you should gather information about each artifact type. For example, an artifact can be an operating system package, an application deployment package, an operating system image, a container image, or something else.\nIn addition to the artifact type, consider how you complete the following tasks:\n- **Generate the artifacts that you deploy on Amazon EKS.** To deploy your workloads on Amazon EKS, you might be generating deployable artifacts, such as container images. Gathering information about how you're generating these artifacts helps you to ensure that the generated artifacts are suitable for deployment in Google Cloud. For example, if you produce artifacts that you store in an artifact registry on AWS, you need to make the artifacts available in your Google Cloud environment. You can do so by employing strategies like the following:- **Establish a communication channel between the environments:** Make the artifacts in your source environment reachable from the target Google Cloud environment. Doing so helps prepare for your eventual use of [Artifact Registry](/artifact-registry) .\n- **Refactor the artifact build process:** Complete a minor refactor of your source environment so that you can store artifacts in both the source environment and the target environment. This approach supports your migration by building infrastructure like an artifact repository before you have to implement artifact build processes in the target Google Cloud environment. You can implement this approach directly, or you can build on the previous approach of establishing a communication channel first.\n- **Deploy artifacts on your Amazon EKS clusters.** After you generate deployable artifacts, you might be deploying them on Amazon EKS. We recommend that you assess each deployment process. The assessment helps ensure that your deployment processes are compatible with Google Cloud. It also helps you to understand the effort that will be necessary to eventually refactor the processes. For example, if your deployment processes work with only Amazon EKS, you might need to refactor them to target your Google Cloud environment.\n- **Inject runtime configuration.** You might be injecting runtime configuration for specific Amazon EKS clusters, runtime environments, or workload deployments. The configuration might initialize environment variables and other configuration values like secrets, credentials, and keys. To help ensure that your runtime configuration injection processes work on Google Cloud, we recommend that you assess how you're currently configuring the workloads that run on Amazon EKS.\nAfter you assess your deployment and operational processes, we also recommend that you assess how these processes can facilitate your migration to Google Cloud and how they help you to reduce the scope and the risk of your migration.\n### Complete the assessment\nAfter you build the inventories from your Amazon EKS environment, complete the rest of the activities of the assessment phase as described in [Migrate to Google Cloud: Assess and discover your workloads](/architecture/migration-to-gcp-assessing-and-discovering-your-workloads) .\n## Plan and build your foundation\nIn the plan and build phase, you provision and configure the infrastructure to do the following:\n- Support your workloads in your Google Cloud environment.\n- Connect your AWS environment and your Google Cloud environment to complete the migration.\n### Build your foundation on Google Cloud\nThe plan and build phase is composed of the following tasks:\n- Build a resource hierarchy.\n- Configure Google Cloud's Identity and Access Management (IAM).\n- Set up billing.\n- Set up network connectivity.\n- Harden your security.\n- Set up logging, monitoring, and alerting.\nFor more information about each of these tasks, see the [Plan and build your foundation](/architecture/migrating-containers-kubernetes-gke#plan_and_build_your_foundation) section in \"Migrate containers to Google Cloud: Migrate Kubernetes to GKE.\"\n## Migrate your data and deploy workloads\nIn the deployment phase, you do the following:\n- Provision and configure your GKE environment.\n- Configure your GKE clusters.\n- Migrate data from your source environment to Google Cloud.\n- Deploy your workloads in your GKE environment.\n- Validate your workloads.\n- Expose workloads running on GKE.\n- Shift traffic from the source environment to the GKE environment.\n- Decommission the source environment.\nFor information about how to complete each of these tasks, see the [Deploy your workloads](/architecture/migrating-containers-kubernetes-gke#deploy_your_workloads) section in \"Migrate containers to Google Cloud: Migrate Kubernetes to GKE.\" The following sections integrate the considerations in that document.\n### Migrate data\nThe [Migrate data](/architecture/migrating-containers-kubernetes-gke#migrate_data) section in \"Migrate containers to Google Cloud: Migrate Kubernetes to GKE\" contains information about migrating data from a generic Kubernetes environment to GKE. The recommendations in that section are applicable to migrating data from Amazon EKS to GKE. To plan your migration, integrate the generic environment information in the linked document with the following sections that are specific to migrating data from Amazon EKS to GKE.\nAWS provides several data storage options for Amazon EKS. This document focuses on the following data migration scenarios:\n- Migrate data from Amazon EBS volumes to GKE`PersistentVolume`resources.\n- Copy data from Amazon EBS volumes to Amazon S3 or to Cloud Storage, and then migrate data to GKE`PersistentVolume`resources.You can migrate data from Amazon EBS volumes to GKE `PersistentVolume` resources by using one of the following approaches:\n- Directly copy data from Amazon EBS volumes to Compute Engine persistent disks:- Provision Amazon EC2 instances and attach the Amazon EBS volumes that contain the data to migrate.\n- Provision Compute Engine instances with empty persistent disks that have sufficient capacity to store the data to migrate.\n- Run a data synchronization tool, such as rsync, to copy data from the Amazon EBS volumes to the Compute Engine persistent disks.\n- Detach the persistent disks from the Compute Engine instances.\n- Decommission the Compute Engine instances.\n- Configure the persistent disks as GKE`PersistentVolume`resources.\n- Migrate Amazon EC2 instances and Amazon EBS volumes to Compute Engine:- Provision Amazon EC2 instances and attach the Amazon EBS volumes that contain the data to migrate.\n- Migrate the Amazon EC2 instances and the Amazon EBS volumes to Compute Engine with Migrate for Virtual Machines.\n- Detach the persistent disks from the Compute Engine instances.\n- Decommission the Compute Engine instances.\n- Configure the persistent disks as GKE`PersistentVolume`resources.For more information about migrating Amazon EC2 instances to Compute Engine, see [Migrate from AWS to Google Cloud: Migrate from Amazon EC2 to Compute Engine](/architecture/migrate-amazon-ec2-to-compute-engine) .\nFor more information about using Compute Engine persistent disks as GKE `PersistentVolume` resources, see [Using pre-existing persistent disks as PersistentVolumes](/kubernetes-engine/docs/how-to/persistent-volumes/preexisting-pd) .\nInstead of migrating from Amazon EBS volumes to GKE `PersistentVolume` resources directly, you can use an interim media such as an object store:\n- Upload data from Amazon EBS volumes to an interim media such as an Amazon S3 bucket or a Cloud Storage bucket.\n- Download the data from the interim media to your GKE`PersistentVolume`resources.\nIn certain scenarios, using multiple media can simplify data transfer based on your network and security configurations. For example, you can initially upload the data to an S3 bucket, then copy it from the S3 bucket to a Cloud Storage bucket, and finally download the data to your persistent volumes. Regardless of the approach that you choose, to ensure a smooth transition while taking note of important considerations, we recommend that you review [Migrate from AWS to Google Cloud: Migrate from Amazon S3 to Cloud Storage](/architecture/migrate-amazon-s3-to-cloud-storage) .\nThe best migration option for you depends on your specific needs and requirements, such as the following considerations:\n- The amount of data that you need to migrate.- If you have a small amount of data to migrate, such as a few data files, consider tools like rsync to copy the data directly to Compute Engine persistent disks. This option is relatively quick and easy, but it might not be suitable for a large amount of data.\n- If you have a large amount of data to migrate, consider using [Migrate to Virtual Machines](/migrate/virtual-machines) to migrate the data to Compute Engine. This option is more complex than directly copying data, but it's more reliable and scalable.\n- The type of data that you need to migrate.\n- Your network connectivity between the source and the target environments.- If you can't establish direct network connectivity between your AWS EC2 and Compute Engine instances, you might want to consider using Amazon S3 or Cloud Storage to store the data temporarily while you migrate it to Compute Engine. This option might be less expensive because you won't have to keep your EC2 and Compute Engine instances running simultaneously.\n- Your migration timeline.- If you have limited network bandwidth or a large amount of data, and your timeline isn't tight, you can also consider using a [Transfer Appliance](/transfer-appliance) to move your data from AWS to Google Cloud.No matter which option you choose, it's important that you test your migration before you make it live. Testing will help you to identify any potential problems and help to ensure that your migration is successful.\n## Optimize your environment after migration\nWhen you complete all of the migration phases, the migration is considered done. However, your GKE environment might need further optimizations. For more information, see [Migrate Kubernetes to GKE: Optimize your environment](/architecture/migrating-containers-kubernetes-gke#optimize_your_environment) .\n## What's next\n- Read about [other AWS to Google Cloud migration journeys](/architecture/migration-from-aws-get-started) .\n- Learn how to [compare AWS and Azure services to Google Cloud](/free/docs/aws-azure-gcp-service-comparison) .\n- Learn when to [find help for your migrations](/architecture/migration-to-gcp-getting-started#finding_help) .\n- For more reference architectures, diagrams, and best practices, explore the [Cloud Architecture Center](/architecture) .", "guide": "Docs"}