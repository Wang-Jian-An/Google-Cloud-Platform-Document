{"title": "Docs - Set up Chrome Remote Desktop for Linux on Compute Engine", "url": "https://cloud.google.com/architecture/chrome-desktop-remote-on-compute-engine", "abstract": "# Docs - Set up Chrome Remote Desktop for Linux on Compute Engine\nLast reviewed 2022-11-16 UTC\nThis tutorial shows you how to set up the [Chrome Remote Desktop](https://support.google.com/chrome/answer/1649523) service on a Debian Linux virtual machine (VM) instance on Compute Engine. For separate instructions for Windows VMs, see [Windows virtual machines](/architecture/chrome-desktop-remote-windows-compute-engine) . Chrome Remote Desktop lets you remotely access applications with a graphical user interface from a local computer or mobile device.\nWhen following this tutorial, the default firewall rules allow Chrome Remote Desktop connections; you don't need to configure any additional firewall rules. SSH access is required only for the initial setup.\nThe VM does need access to the internet (either with an external IP address or through [Cloud NAT](/nat) ), and you use your Google Account for authentication and authorization.\n **Note:** This solution is not suitable for graphically intensive applications, including playing videos, because those typically require hardware graphics acceleration as well as a network that has high bandwidth and low latency. If you want to run graphically intense applications remotely, see the [Creating a virtual GPU-accelerated Linux workstation](/solutions/creating-a-virtual-gpu-accelerated-linux-workstation) tutorial for an alternative solution.\nThis tutorial assumes that you are familiar with the Linux command line and with installing Debian packages.\nFor information about other options for creating virtual workstations, see [Creating a virtual workstation](/solutions/creating-a-virtual-workstation) .", "content": "## Objectives\n- Create a [headless](https://wikipedia.org/wiki/Headless_computer) Compute Engine VM instance to run Chrome Remote Desktop on.\n- Install and configure the Chrome Remote Desktop service on the VM instance.\n- Set up an X Window System desktop environment in the VM instance.\n- Connect from your local computer to the desktop environment on the VM instance.\n## CostsThis tutorial uses billable components of Google Cloud, including:- Compute Engine\nUse the [Pricing Calculator](/products/calculator#id=01bf79df-c7d0-4c3a-afd6-cbb4754d938f) to generate a cost estimate based on your projected usage.## Before you begin- When you finish the tasks that are described in this document, you can avoid continued billing by deleting the resources that you created. For more information, see [Clean up](#clean-up) .\n- Make sure that you have the following role or roles on the project:      roles/compute.admin\n- You use the [Google Chrome](https://www.google.com/chrome/) browser on your local machine.\n## Create a Compute Engine instanceFor the purposes of this tutorial, the default machine type with a Debian Linux boot disk is used. If you are using this for your own environment, you may want to adjust the machine type, name, region, boot disk size, or other settings.- In the Google Cloud console, go to the **VM Instances** page. [Go to VM Instances](https://console.cloud.google.com/compute/instances/) \n- Click **Create** .\n- Set the instance name to `crdhost` .\n- Click **Create** .It takes a few moments to create your instance.\n- After the instance has been created, connect to your new instance by clicking **SSH** in the instance list: \n## Install Chrome Remote Desktop on the VM instance\n- In the SSH window for your VM instance, add the Debian Linux Chrome Remote Desktop repository to your `apt` package list, and install the `chrome-remote-desktop` package.```\ncurl https://dl.google.com/linux/linux_signing_key.pub \\\u00a0 \u00a0 | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/chrome-remote-desktop.gpgecho \"deb [arch=amd64] https://dl.google.com/linux/chrome-remote-desktop/deb stable main\" \\\u00a0 \u00a0 | sudo tee /etc/apt/sources.list.d/chrome-remote-desktop.listsudo apt-get updatesudo DEBIAN_FRONTEND=noninteractive \\\u00a0 \u00a0 apt-get install --assume-yes chrome-remote-desktop\n```The `DEBIAN_FRONTEND=noninteractive` parameter suppresses a prompt to configure a layout for a keyboard that would be directly connected to the VM instance.\n## Install an X Windows System desktop environmentYou need to install an X Window System desktop environment and window manager for Chrome Remote Desktop to use. Common options are:- [Xfce](https://www.xfce.org/) \n- [Cinnamon](https://www.linuxmint.com/) \n- [Gnome](https://www.gnome.org/) \n- [Gnome-Classic](https://help.gnome.org/users/gnome-help/stable/gnome-classic.html.en) \n- [KDE Plasma](https://kde.org/) \nYou can use other desktop environments, but Chrome Remote Desktop does not support 3D graphics acceleration. If you do choose a desktop environment that uses 3D graphics acceleration, you need to disable that feature, or the remote desktop service won't start.\nFor remote connections over slower networks we recommended Xfce because it has minimal graphical elements and few animations.\n- In the SSH window connected to your VM instance, install the Xfce desktop environment and basic desktop components:```\nsudo DEBIAN_FRONTEND=noninteractive \\\u00a0 \u00a0 apt install --assume-yes xfce4 desktop-base dbus-x11 xscreensaver\n``` [XScreenSaver](https://www.jwz.org/xscreensaver/) is required because the Xfce default screen locker (Light Locker) doesn't work with Chrome Remote Desktop (Light Locker displays a blank screen that cannot be unlocked). **Note:** You might see a `Permission Denied` error for the `update-initramfs` process during installation. This is normal, and you can ignore the error.\n- Configure Chrome Remote Desktop to use Xfce by default:```\nsudo bash -c 'echo \"exec /etc/X11/Xsession /usr/bin/xfce4-session\" > /etc/chrome-remote-desktop-session'\n```\n- Because there is no display connected to your instance, disable the display manager service on your instance:```\nsudo systemctl disable lightdm.service\n```\n- Optional: Install the full suite of Linux desktop applications, including the Firefox browser, LibreOffice office application suite, and the Evince PDF viewer:```\nsudo apt install --assume-yes task-xfce-desktop\n```\n- Optional: Install the Chrome browser on your instance:```\ncurl -L -o google-chrome-stable_current_amd64.deb \\https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.debsudo apt install --assume-yes --fix-broken ./google-chrome-stable_current_amd64.deb\n```\n- In the SSH window connected to your VM instance, install the Cinnamon desktop environment and basic desktop components:```\nsudo DEBIAN_FRONTEND=noninteractive \\\u00a0 \u00a0 apt install --assume-yes cinnamon-core desktop-base dbus-x11\n``` **Note:** You might see a `Permission Denied` error for the `update-initramfs` process during the installation process. This is normal and you can ignore the error.\n- Set your Chrome Remote Desktop session to use Cinnamon in 2D mode (which does not use 3D graphics acceleration) by default:```\nsudo bash -c 'echo \"exec /etc/X11/Xsession /usr/bin/cinnamon-session-cinnamon2d\" > /etc/chrome-remote-desktop-session'\n```\n- Optionally, install the full suite of Linux desktop applications, including the Firefox browser, the LibreOffice office application suite, and the Evince PDF viewer:```\nsudo apt install --assume-yes task-cinnamon-desktop\n```\n- Optional: Install the Chrome browser on your instance:```\ncurl -L -o google-chrome-stable_current_amd64.deb \\https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.debsudo apt install --assume-yes --fix-broken ./google-chrome-stable_current_amd64.deb\n```\n- In the SSH window connected to your VM instance, install the full Gnome desktop environment, including the Firefox browser, the LibreOffice office application suite, and the Evince PDF viewer:```\nsudo DEBIAN_FRONTEND=noninteractive \\\u00a0 \u00a0 apt install --assume-yes \u00a0task-gnome-desktop\n``` **Note:** You might see a `Permission Denied` error for the `update-initramfs` process during the installation process. This is normal and you can ignore the error.\n- Set your Chrome Remote Desktop session to use Gnome```\nsudo bash -c 'echo \"exec /etc/X11/Xsession /usr/bin/gnome-session\" > /etc/chrome-remote-desktop-session'\n```\n- Disable the Gnome display manager service on your instance, because it conflicts with the Chrome Remote Desktop service.```\nsudo systemctl disable gdm3.servicesudo reboot\n```This command reboots the VM.\n- Reconnect through SSH before continuing.\n- Optional: Install the Chrome browser on your instance:```\ncurl -L -o google-chrome-stable_current_amd64.deb \\https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.debsudo apt install --assume-yes --fix-broken ./google-chrome-stable_current_amd64.deb\n```\n- In the SSH window connected to your VM instance, install the full Gnome desktop environment, including the Firefox browser, the LibreOffice office application suite, and the Evince PDF viewer:```\nsudo DEBIAN_FRONTEND=noninteractive \\\u00a0 \u00a0 apt install --assume-yes \u00a0task-gnome-desktop\n```The `DEBIAN_FRONTEND=noninteractive` parameter suppresses a prompt to configure a layout for a keyboard that would be directly connected to the VM instance. **Note:** You might see a `Permission Denied` error for the `update-initramfs` process during the installation process. This is normal and you can ignore the error.\n- Set your Chrome Remote Desktop session to use the Gnome-Classic desktop:```\nsudo bash -c 'echo \"exec /etc/X11/Xsession /usr/bin/gnome-session-classic\" > /etc/chrome-remote-desktop-session'\n```\n- Disable the Gnome display manager service on your instance, because it conflicts with the Chrome Remote Desktop service.```\nsudo systemctl disable gdm3.servicesudo reboot\n```This command reboots the VM.\n- Reconnect through SSH before continuing.\n- Optional: Install the Chrome browser on your instance:```\ncurl -L -o google-chrome-stable_current_amd64.deb \\https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.debsudo apt install --assume-yes --fix-broken ./google-chrome-stable_current_amd64.deb\n```\n- In the SSH window connected to your VM instance, install the full KDE Plasma desktop environment, including the Firefox browser, the LibreOffice office application suite, and the Evince PDF viewer:```\nsudo DEBIAN_FRONTEND=noninteractive \\\u00a0 \u00a0 apt install --assume-yes \u00a0task-kde-desktop\n```The `DEBIAN_FRONTEND=noninteractive` parameter suppresses a prompt to configure a layout for a keyboard that would be directly connected to the VM instance. **Note:** You might see a `Permission Denied` error for the `update-initramfs` process during the installation process. This is normal and you can ignore the error.\n- Set your Chrome Remote Desktop session to use KDE Plasma```\nsudo bash -c 'echo \"exec /etc/X11/Xsession /usr/bin/startplasma-x11\" > /etc/chrome-remote-desktop-session'\n```\n- Optional: Install the Chrome browser on your instance:```\ncurl -L -o google-chrome-stable_current_amd64.deb \\https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.debsudo apt install --assume-yes --fix-broken ./google-chrome-stable_current_amd64.deb\n```\n## Configure and start the Chrome Remote Desktop serviceTo start the remote desktop server, you need to have an authorization key for the Google Account that you want to use to connect to it:- In the Google Cloud console, go to the **VM Instances** page: [Go to the VM Instances page](https://console.cloud.google.com/compute/instances/) \n- Connect to your instance by clicking the **SSH** button.\n- On your local computer, using the Chrome browser, go to the Chrome Remote Desktop command line setup page: [https://remotedesktop.google.com/headless](https://remotedesktop.google.com/headless) \n- If you're not already signed in, sign in with a Google Account. This is the account that will be used for authorizing remote access.\n- On the **Set up another computer** page, click **Begin** .\n- Click **Authorize** .You need to allow Chrome Remote Desktop to access your account. If you approve, the page displays a command line for Debian Linux that looks like the following:```\nDISPLAY= /opt/google/chrome-remote-desktop/start-host \\\n --code=\"4/xxxxxxxxxxxxxxxxxxxxxxxx\" \\\n --redirect-url=\"https://remotedesktop.google.com/_/oauthredirect\" \\\n --name=$(hostname)\n```You use this command to set up and start the Chrome Remote Desktop service on your VM instance, linking it with your Google Account using the authorization code. **Note:** The authorization code in the command line is valid for only a few minutes, and you can use it only once.\n- Copy the command to the SSH window that's connected to your instance, and then run the command.\n- When you're prompted, enter a 6-digit PIN. This number will be used for additional authorization when you connect later.You might see errors like `No net_fetcher` or `Failed to read` . You can ignore these errors.\n- Verify that the service is running using the following command.```\nsudo systemctl status chrome-remote-desktop@$USER\n```If the service is running, you see output that includes the state `active` :```\nchrome-remote-desktop.service - LSB: Chrome Remote Desktop service\n Loaded: loaded (/lib/systemd/system/chrome-remote-desktop@USER.service; enabled; vendor preset: enabled)\n Active: active (running) since DATE_TIME; ELAPSED_TIME\n```\n## Connect to the VM instanceYou can connect to the VM instance using the Chrome Remote Desktop web application.- On your local computer, go to the [Chrome Remote Desktop](https://remotedesktop.google.com) website.\n- Click **Access my computer.** \n- If you're not already signed in to Google, sign in with the same Google Account that you used to set up the Chrome Remote Desktop service.You see your new VM instance `crdhost` in the **Remote Devices** list.\n- Click the name of the remote desktop instance.\n- When you're prompted, enter the PIN that you created earlier, and then click the arrow button to connect.You are now connected to the desktop environment on your remote Compute Engine instance.\n- If you are prompted, always allow the Remote Desktop application to read your clipboard and let you copy and paste between local and remote applications.\n- If you installed the Xfce desktop, the first time you connect, you are prompted to set up the desktop panels. Click **Use Default Config** to get the standard taskbar at the top and the quick launch panel at the bottom.\n ## Improve the remote desktop experienceThis section provides instructions for changing settings in order to improve the remote desktop experience.\n### Install the Remote Desktop Chrome appThe Remote Desktop Chrome app gives a separate windowed experience and allows keyboard shortcuts that would normally be intercepted by Chrome to be used on the remote system.\nIf this app is not installed, do the following:- Open the **Session Options** panel using the buttonthat appears when you move the mouse to the side of the window.\n- In the **Install App** section, click **Begin** .\n- Click **Install** .\nThe remote desktop session reopens in its own application window.\nYou can move any remote desktop sessions from a Chrome tab to the app window by clicking the **Open With** icon in the address bar.\n### Disable animations and effects in CinnamonThe Cinnamon desktop uses several graphical features and animations, such as semi-transparent windows and menus that fade in and out. Because these animations take more time to render over a remote connection, it can make the user interface feel slow.\nTo disable these effects:- In the Cinnamon desktop, select **Menu** > **Preferences** > **Effects** . \n- Disable each of the effects: \n### Set a user passwordThe user account created by Compute Engine doesn't have a password. However, several desktop environments require one for unlocking screensavers and authorizing administrative actions. It is therefore important to set a password for your user:- Connect to the instance using SSH, as you did when you first set up the instance.\n- Create a password for the user:```\nsudo passwd $(whoami)\n```\n### Disable screensavers and lock screensBecause you're accessing your desktop from a remote computer, it's normally not necessary to use a screensaver or screen locker, so you can disable these.\n- In the **Applications** menu, select **Settings** > **Screensaver** .\n- Set **Mode** to **Disable Screen Saver** .\n- In the desktop, select **Menu** > **Preferences** > **Screensaver** .\n- In the **Settings** tab, set **Delay** to **Never** and disable the following two Lock settings to lock the screen automatically.\n- In the desktop, click **Activities** and type`Settings`.\n- Select the **Settings** application.\n- In the **Settings** application, select **Privacy** > **Screen Lock** .\n- Disable **Automatic Screen Lock** and close the dialog.\n- Select **Devices** > **Keyboard** .\n- In the list of keyboard shortcuts, go to the **System** section, and then click **Lock Screen** .\n- Press the`Backspace`key to disable the shortcut, and then click **Set** .\n- Select **Power** and set **Blank Screen** to **Never** .\n- In the desktop, select **Applications** > **System Tools** > **Settings** .\n- In the **Settings** application, select **Privacy** > **Screen Lock** .\n- Disable **Automatic Screen Lock** and close the dialog.\n- Select **Devices** > **Keyboard** .\n- In the list of keyboard shortcuts, go to the **System** section and click **Lock Screen** .\n- Press the`Backspace`key to disable the shortcut, and then click **Set** .\n- Select **Power** and set **Blank Screen** to **Never** .\n- In the desktop, click the KDE menu button, and then type`Screen Locking`.\n- Select the **Screen Locking** application.\n- In the **Configure Screen Locking** application, disable **Lock Screen\nAutomatically after** and click thebackspacebutton to clear the keyboard shortcut.\n- Click **OK** .### Increase the desktop resolutionIf you have an ultra high-resolution monitor, you might find that the default maximum remote desktop size of 1600 x 1200 is too small. If so, you can increase it to the resolution of your monitor.- Use SSH to connect to the instance.\n- Set the `CHROME_REMOTE_DESKTOP_DEFAULT_DESKTOP_SIZES` environment variable to include the resolution of your monitor:```\necho \"export CHROME_REMOTE_DESKTOP_DEFAULT_DESKTOP_SIZES=1600x1200,3840x2560\" \\\u00a0 \u00a0 >> ~/.profile\n```\n- Restart the service:```\nsudo systemctl restart chrome-remote-desktop@$USER\n```\n### Enable advanced video codec:The AV1 codec with High Quality color gives improved picture quality and allows better encoding of pure color information (such as text):- Open the **Session Options** panel using the buttonthat appears when you move the mouse to the side of the window.\n- In the **Video Codec** field, select **AV1** \n- Ensure that **High-quality color** field is enabled.\n### Choose a different desktop environmentIn the preceding section, you set a default desktop environment in the global `/etc/chrome-remote-desktop-session` configuration file. You can also choose a different desktop environment (if it's installed) by specifying it in the `.chrome-remote-desktop-session` configuration file in your home directory:\n```\necho \"exec /etc/X11/Xsession /usr/bin/xfce4-session\" > ~/.chrome-remote-desktop-session\n```\n```\necho \"exec /etc/X11/Xsession /usr/bin/cinnamon-session-cinnamon2d\" > ~/.chrome-remote-desktop-session\n```\n```\necho \"exec /etc/X11/Xsession /usr/bin/gnome-session\" > ~/.chrome-remote-desktop-session\n```\n```\necho \"exec /etc/X11/Xsession /usr/bin/gnome-session-classic\" > ~/.chrome-remote-desktop-session\n```\n```\necho \"exec /etc/X11/Xsession /usr/bin/startplasma-x11\" > ~/.chrome-remote-desktop-session\n```After you make this change, restart the service so the change takes effect:\n```\nsudo systemctl restart chrome-remote-desktop@$USER\n```\nAs mentioned before, Chrome Remote Desktop does not support 3D graphics acceleration. Therefore, for any desktop environments that uses these features, you need disable 3D graphics, or the session won't start.## Automate the installation processWhen you need to set up multiple machines with Chrome Remote Desktop, the manual installation steps can become repetitive. You can use a [custom startup script](/compute/docs/startupscript) to automate this process, using the following procedure.\nFor the purposes of this tutorial, the default machine type with a Debian Linux boot disk is used. If you are using this for your own environment, you may want to adjust the machine type, name, region, boot disk size, or other settings.- In the Google Cloud console, go to the **VM Instances** page: [Go to the VM Instances page](https://console.cloud.google.com/compute/instances/) \n- Click **Create Instance** .\n- Set the instance name to `crdhost-autoinstall` .\n- Scroll to, and expand the **Advanced Options** section.\n- Expand the **Management** section.\n- Copy the following shell script and paste it into the **Automation/StartupScript** field:```\n#!/bin/bash -x\n## Startup script to install Chrome remote desktop and a desktop environment.\n## See environmental variables at then end of the script for configuration#function install_desktop_env {\u00a0 PACKAGES=\"desktop-base xscreensaver dbus-x11\"\u00a0 if [[ \"$INSTALL_XFCE\" != \"yes\" && \"$INSTALL_CINNAMON\" != \"yes\" ]] ; then\u00a0 \u00a0 # neither XFCE nor cinnamon specified; install both\u00a0 \u00a0 INSTALL_XFCE=yes\u00a0 \u00a0 INSTALL_CINNAMON=yes\u00a0 fi\u00a0 if [[ \"$INSTALL_XFCE\" = \"yes\" ]] ; then\u00a0 \u00a0 PACKAGES=\"$PACKAGES xfce4\"\u00a0 \u00a0 echo \"exec xfce4-session\" > /etc/chrome-remote-desktop-session\u00a0 \u00a0 [[ \"$INSTALL_FULL_DESKTOP\" = \"yes\" ]] && \\\u00a0 \u00a0 \u00a0 PACKAGES=\"$PACKAGES task-xfce-desktop\"\u00a0 fi\u00a0 if [[ \"$INSTALL_CINNAMON\" = \"yes\" ]] ; then\u00a0 \u00a0 PACKAGES=\"$PACKAGES cinnamon-core\"\u00a0 \u00a0 echo \"exec cinnamon-session-cinnamon2d\" > /etc/chrome-remote-desktop-session\u00a0 \u00a0 [[ \"$INSTALL_FULL_DESKTOP\" = \"yes\" ]] && \\\u00a0 \u00a0 \u00a0 PACKAGES=\"$PACKAGES task-cinnamon-desktop\"\u00a0 fi\u00a0 DEBIAN_FRONTEND=noninteractive \\\u00a0 \u00a0 apt-get install --assume-yes $PACKAGES $EXTRA_PACKAGES\u00a0 systemctl disable lightdm.service}function download_and_install { # args URL FILENAME\u00a0 if [[ -e \"$2\" ]] ; then\u00a0 \u00a0 \u00a0echo \"cannot download $1 to $2 - file exists\"\u00a0 \u00a0 \u00a0return 1;\u00a0 fi\u00a0 curl -L -o \"$2\" \"$1\" && \\\u00a0 \u00a0 apt-get install --assume-yes --fix-broken \"$2\" && \\\u00a0 \u00a0 rm \"$2\"}function is_installed { \u00a0# args PACKAGE_NAME\u00a0 dpkg-query --list \"$1\" | grep -q \"^ii\" 2>/dev/null\u00a0 return $?}# Configure the following environmental variables as required:INSTALL_XFCE=yesINSTALL_CINNAMON=yesINSTALL_CHROME=yesINSTALL_FULL_DESKTOP=yes# Any additional packages that should be installed on startup can be added hereEXTRA_PACKAGES=\"less bzip2 zip unzip tasksel wget\"apt-get updateif ! is_installed chrome-remote-desktop; then\u00a0 \u00a0 if [[ ! -e /etc/apt/sources.list.d/chrome-remote-desktop.list ]]; then\u00a0 \u00a0 \u00a0 \u00a0 echo \"deb [arch=amd64] https://dl.google.com/linux/chrome-remote-desktop/deb stable main\" \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | tee -a /etc/apt/sources.list.d/chrome-remote-desktop.list\u00a0 \u00a0 fi\u00a0 \u00a0 apt-get update\u00a0 \u00a0 DEBIAN_FRONTEND=noninteractive \\\u00a0 \u00a0 \u00a0 \u00a0 apt-get install --assume-yes chrome-remote-desktopfiinstall_desktop_env[[ \"$INSTALL_CHROME\" = \"yes\" ]] && ! is_installed google-chrome-stable && \\\u00a0 download_and_install \\\u00a0 \u00a0 https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\u00a0 \u00a0 /tmp/google-chrome-stable_current_amd64.debecho \"Chrome remote desktop installation completed\"\n```This script performs the following tasks each time the machine is rebooted:- If the remote desktop package is not installed:- Adds the Chrome Remote Desktop Debian package repository\n- Installs the Chrome Remote Desktop package and dependencies.\n- Installs the Xfce or Cinnamon desktop environments (depending on the  script settings).\n- If the full desktop environment option is enabled, installs the necessary packages.\n- If the Google Chrome browser option is enabled and is not installed:- Downloads Google Chrome package.\n- Installs Google Chrome and its dependent packages. **Note:** You can choose which packages to install by using the variables defined near the end of the script.\n- Click **Create** .It takes a few moments to create your instance, and on first run with all the options enabled, the script can take up to 10 minutes to complete the installation.\n- To monitor progress, connect to the VM instance using SSH, and in the terminal of the instance, run the following command:```\nsudo journalctl -o cat -f _SYSTEMD_UNIT=google-startup-scripts.service\n```This command shows the output from the startup script. When the script has finished, you see the following:```\nINFO startup-script: Chrome remote desktop installation completed\nINFO startup-script: Return code 0.\nINFO Finished running startup scripts.\n```\nThis script only installs the required packages; you still need to configure the Remote Desktop Service for your user, as described [previously](#configure_and_start_the_chrome_remote_desktop_service) .\nThere are various ways to specify a startup script when creating a new VM instance:- Pasting it into the Google Cloud console (as shown earlier).\n- Storing it as a file on a local machine, and using the`--metadata-from-file`flag when you create the instance using the Google Cloud CLI.\n- Storing it in a Cloud Storage bucket and specifying the URL to the object\u2014either in the console or in the gcloud CLI.\nFor more information on the alternative methods of how to configure the startup script, see [Running Startup scripts](/compute/docs/startupscript) in the Compute Engine documentation.## TroubleshootingThis section provides troubleshooting advice for this guide.\n### Check the status of the Chrome Remote Desktop serviceIf at any point the Chrome Remote Desktop service is not responding, you can check its status by using SSH to connect to the instance and running the following command:\n```\nsudo systemctl status chrome-remote-desktop@$USER\n```\nIf the service is running, you see output that includes the state `active` :\n```\nchrome-remote-desktop.service - LSB: Chrome Remote Desktop service\n Loaded: loaded (/lib/systemd/system/chrome-remote-desktop@USER.service; enabled; vendor preset: enabled)\n Active: active (running) since DATE_TIME; ELAPSED_TIME\n```\nTo restart the service, use the following command in the SSH window:\n```\nsudo systemctl restart chrome-remote-desktop@$USER\n```\n### Get log and error informationChrome Remote Desktop writes log information to the system journal:\n```\njournalctl SYSLOG_IDENTIFIER=chrome-remote-desktop \u00a0 \u00a0 # All logsjournalctl SYSLOG_IDENTIFIER=chrome-remote-desktop -e \u00a0# Most recent logsjournalctl SYSLOG_IDENTIFIER=chrome-remote-desktop -b \u00a0# Logs since reboot\n```\nYou can check these log files for error messages.\n### Re-enable the serviceIf you have mistakenly disabled connections to the remote instance in the client app, you can reconfigure the service and re-enable it by following the instructions in [Configure and start the Chrome Remote Desktop service](#configure_and_start_the_chrome_remote_desktop_service) .\n### Check the global and user-specific session configuration files.Check the contents of the global `/etc/chrome-remote-desktop-session` configuration file and the user-specific `~/.chrome-remote-desktop-session` configuration file and confirm that the specified desktop environments are installed.## Clean upTo avoid incurring charges to your Google Cloud account for the resources used in this   tutorial, either delete the project that contains the resources, or keep the project and   delete the individual resources.\n### Delete the project\nThe easiest way to eliminate billing is to delete the project that you created for the tutorial.\nTo delete the project:\n- **Caution** : Deleting a project has the following effects:- **Everything in the project is deleted.** If you used an existing project for  the tasks in this document, when you delete it, you also delete any other work you've  done in the project.\n- **Custom project IDs are lost.** When you created this project, you might have created a custom project ID that you want to use in  the future. To preserve the URLs that use the project ID, such as an`appspot.com`URL, delete selected resources inside the project instead of deleting the whole project.\nIf you plan to explore multiple architectures, tutorials, or quickstarts, reusing projects  can help you avoid exceeding project quota limits.\n- In the Google Cloud console, go to the **Manage resources** page. [Go to Manage resources](https://console.cloud.google.com/iam-admin/projects) \n- In the project list, select the project that you  want to delete, and then click **Delete** .\n- In the dialog, type the project ID, and then click **Shut down** to delete the project.### Delete the Compute Engine instanceAs an alternative to deleting the entire project, you can delete the VM instance you created for this tutorial:- In the Google Cloud console, go to the [VM Instances](https://console.cloud.google.com/compute/instances) page: [Go to the VM Instances page](https://console.cloud.google.com/compute/instances) \n- Select the checkbox next to the instance name you created earlier ( `crdhost` ).\n- Click the **Delete** button at the top of the page: It takes a few moments to delete your instance.\n### Deauthorize Chrome Remote Desktop for the instanceIf you no longer want to connect to the VM instance, you can disable it and remove the instance from the **Remote Devices** list.- On your local computer, go to the [Chrome Remote Desktop Remote Device list](https://remotedesktop.google.com/access) website.\n- Clickdeletenext to the instance name`crdhost`.\n- Click **OK** to confirm that the remote device connection should be disabled.\n## What's next\n- Learn how to set up [Chrome Remote Desktop on a Windows virtual machines](/architecture/chrome-desktop-remote-windows-compute-engine) .\n- Learn about other options for [creating a virtual workstation](/solutions/creating-a-virtual-workstation) .\n- Explore reference architectures, diagrams, and best practices about Google Cloud. Take a look at our [Cloud Architecture Center](/architecture) .", "guide": "Docs"}