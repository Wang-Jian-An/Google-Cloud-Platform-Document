{"title": "Docs - Manage cloud resources", "url": "https://cloud.google.com/architecture/framework/system-design/resource-management", "abstract": "# Docs - Manage cloud resources\nLast reviewed 2023-08-08 UTC\nThis document in the [Google Cloud Architecture Framework](/architecture/framework) provides best practices to organize and manage your resources in Google Cloud.\n", "content": "## Resource hierarchy\nGoogle Cloud resources are arranged [hierarchically](/resource-manager/docs/cloud-platform-resource-hierarchy) in organizations, folders, and projects. This hierarchy lets you manage common aspects of your resources like access control, configuration settings, and policies. For best practices to design the hierarchy of your cloud resources, see [Decide a resource hierarchy for your Google Cloud landing zone](/architecture/landing-zones/decide-resource-hierarchy) .\n## Resource labels and tags\nThis section provides best practices for using labels and tags to organize your Google Cloud resources.\n### Use a simple folder structure\nFolders let you group any combination of projects and subfolders. Create a simple folder structure to organize your Google Cloud resources. You can add more levels as needed to define your resource hierarchy so that it supports your business needs. The folder structure is flexible and extensible.To learn more, see [Creating and managing folders](/resource-manager/docs/creating-managing-folders) .\n### Use folders and projects to reflect data governance policies\nUse folders, subfolders, and projects to separate resources from each other to reflect data governance policies within your organization. For example, you can use a combination of folders and projects to separate financial, human resources, and engineering.\nUse projects to group resources that share the same trust boundary. For example, resources for the same product or microservice can belong to the same project. For more information, see [Decide a resource hierarchy for your Google Cloud landing zone](/architecture/landing-zones/decide-resource-hierarchy) .\n### Use tags and labels at the outset of your project\nUse [labels and tags](/resource-manager/docs/tags/tags-overview) when you start to use Google Cloud products, even if you don't need them immediately. Adding labels and tags later on can require manual effort that can be error prone and difficult to complete.\nA provides a way to conditionally allow or deny policies based on whether a resource has a specific tag. A is a key-value pair that helps you organize your Google Cloud instances. For more information on labels, see [requirements for labels](/resource-manager/docs/creating-managing-labels#requirements) , a [list of services that support labels](/resource-manager/docs/creating-managing-labels#label_support) , and [label formats](/compute/docs/labeling-resources) .\n[Resource Manager](/resource-manager/docs) provides [labels and tags](/resource-manager/docs/tags/tags-overview) to help you manage resources, allocate and report on cost, and assign policies to different resources for granular access controls. For example, you can use labels and tags to apply granular access and management principles to different tenant resources and services. For information about VM labels and network tags, see [Relationship between VM labels and network tags](/compute/docs/labeling-resources#labels_tags) .\nYou can use labels for multiple purposes, including the following:\n- Managing resource billing: Labels are available in the billing system, which lets you separate cost by labels. For example, you can label different cost centers or budgets.\n- Grouping resources by similar characteristics or by relation: You can use labels to separate different application lifecycle stages or environments. For example, you can label production, development, and testing environments.\n### Assign labels to support cost and billing reporting\nTo support granular cost and billing reporting based on attributes outside of your integrated reporting structures (like per-project or per-product type), assign labels to resources. Labels can help you allocate consumption to cost centers, departments, specific projects, or internal recharge mechanisms. For more information, see the [Cost optimization category](/architecture/framework/cost-optimization) .\n### Avoid creating large numbers of labels\nAvoid creating large numbers of labels. We recommend that you create labels primarily at the project level, and that you avoid creating labels at the sub-team level. If you create overly granular labels, it can add noise to your analytics. To learn about common use cases for labels, see [Common uses of labels](/resource-manager/docs/creating-managing-labels#common-uses) .\n### Avoid adding sensitive information to labels\nLabels aren't designed to handle sensitive information. Don't include sensitive information in labels, including information that might be personally identifiable, like an individual's name or title.\n### Anonymize information in project names\nFollow a project naming pattern like `` `-` `` `-` `` , where the placeholders are unique and don't reveal company or application names. Don't include attributes that can change in the future, for example, a team name or technology.\n### Apply tags to model business dimensions\nYou can apply tags to model additional business dimensions like organization structure, regions, workload types, or cost centers. To learn more about tags, see [Tags overview](/resource-manager/docs/tags/tags-overview) , [Tag inheritance](/resource-manager/docs/tags/tags-overview#inheritance) , and [Creating and managing tags](/resource-manager/docs/tags/tags-creating-and-managing) . To learn how to use tags with policies, see [Policies and tags](/resource-manager/docs/tags/tags-overview#policies) . To learn how to use tags to manage access control, see [Tags and access control](/iam/docs/tags-access-control) .\n## Organizational policies\nThis section provides best practices for configuring governance rules on Google Cloud resources across the cloud resource hierarchy.\n### Establish project naming conventions\nEstablish a standardized project naming convention, for example, `` `-` `` ( `dev` , `test` , `uat` , `stage` , `prod` ).\nProject names have a 30-character limit.\nAlthough you can apply a prefix like `` `-` `` , project names can become out of date when companies go through reorganizations. Consider moving identifiable names from project names to project labels.\n### Automate project creation\nTo create projects for production and large-scale businesses, use an automated process like the [Deployment Manager](/deployment-manager/docs) or the [Google Cloud project factory Terraform module](https://github.com/terraform-google-modules/terraform-google-project-factory) . These tools do the following:\n- Automatically create development, test, and production environments or projects that have the appropriate permissions.\n- Configure logging and monitoring.\nThe [Google Cloud project factory Terraform module](https://github.com/terraform-google-modules/terraform-google-project-factory) helps you to automate the creation of Google Cloud projects. In large enterprises, we recommend that you review and approve projects before you create them in Google Cloud. This process helps to ensure the following:\n- Costs can be attributed. For more information, see the [Costoptimization category](/architecture/framework/cost-optimization) .\n- Approvals are in place for data uploads.\n- Regulatory or compliance requirements are met.\nWhen you automate the creation and management of Google Cloud projects and resources, you get the benefit of consistency, reproducibility, and testability. Treating your configuration as code lets you version and manage the lifecycle of your configuration together with your software artifacts. Automation lets you support best practices like consistent naming conventions and labeling of resources. As your requirements evolve, automation simplifies project refactoring.\n### Audit your systems regularly\nTo ensure that requests for new projects can be audited and approved, integrate with your enterprise's ticketing system or a standalone system that provides auditing.\n### Configure projects consistently\nConfigure projects to consistently meet your organization's needs. Include the following when you set up projects:\n- Project ID and naming conventions\n- Billing account linking\n- Networking configuration\n- Enabled APIs and services\n- Compute Engine access configuration\n- Logs export and usage reports\n- [Project removal lien](/resource-manager/docs/project-liens) \n### Decouple and isolate workloads or environments\nQuotas and limits are enforced at the project level. To manage quotas and limits, decouple and isolate workloads or environments at the project level. For more information, see [Working with quotas](/docs/quota) .\nDecoupling environments is different from data classification requirements. Separating data from infrastructure can be expensive and complex to implement, so we recommend that you implement data classification based on data sensitivity and compliance requirements.\n### Enforce billing isolation\nEnforce billing isolation to support different billing accounts and cost visibility per workload and environment. For more information, see [Create, modify, or close your self-serve Cloud Billing account ](/billing/docs/how-to/manage-billing-account) and [Enable, disable, or change billing for a project](/billing/docs/how-to/modify-project) .\nTo minimize administrative complexity, use granular access management controls for critical environments at the project level, or for workloads that spread across multiple projects. When you curate access control for critical production applications, you ensure that workloads are secured and managed effectively.\n### Use the Organization Policy Service to control resources\nThe [Organization Policy Service](/resource-manager/docs/organization-policy/overview) gives policy administrators centralized and programmatic control over your organization's cloud resources so that they can configure constraints across the [resource hierarchy](/resource-manager/docs/cloud-platform-resource-hierarchy) . For more information, see [Add an organization policy administrator](/resource-manager/docs/organization-policy/using-constraints#add-org-policy-admin) .\n### Use the Organization Policy Service to comply with regulatory policies\nTo meet compliance requirements, use the [Organization Policy Service](/resource-manager/docs/organization-policy/overview) to enforce compliance requirements for resource sharing and access. For example, you can limit sharing with external parties or determine where to deploy cloud resources geographically. Other compliance scenarios include the following:\n- Centralizing control to configure restrictions that define how your organization's resources can be used.\n- Defining and establishing policies to help your development teams remain within compliance boundaries.\n- Helping project owners and their teams make system changes while maintaining regulatory compliance and minimizing concerns about breaking compliance rules.\n### Limit resource sharing based on domain\nA restricted sharing organization policy helps you to prevent Google Cloud resources from being shared with identities outside your organization. For more information, see [Restricting identities by domain](/resource-manager/docs/organization-policy/restricting-domains) and [Organization policy constraints](/resource-manager/docs/organization-policy/org-policy-constraints) .\n### Disable service account and key creation\nTo help improve security, limit the use of Identity and Access Management (IAM) service accounts and corresponding keys. For more information, see [Restricting service account usage](/resource-manager/docs/organization-policy/restricting-service-accounts) .\n### Restrict the physical location of new resources\nRestrict the physical location of newly created resources by [restricting resource locations](/resource-manager/docs/organization-policy/defining-locations) . To see a list of constraints that give you control of your organization's resources, see [Organization Policy Service constraints](/resource-manager/docs/organization-policy/org-policy-constraints) .\n## What's next\nLearn how to [choose and manage compute](/architecture/framework/system-design/compute#platform) , including the following:\n- [Compute migration approach](/architecture/framework/system-design/compute#migration) .\n- [Design workloads](/architecture/framework/system-design/compute#design) and [scale your workloads](/architecture/framework/system-design/compute#scale) .\n- [Manage operations](/architecture/framework/system-design/compute#manage-ops) .\n- [Manage VM migrations](/architecture/framework/system-design/compute#vm-migrate) .\nExplore other categories in the [Architecture Framework](/architecture/framework) such as reliability, operational excellence, and security, privacy, and compliance.", "guide": "Docs"}