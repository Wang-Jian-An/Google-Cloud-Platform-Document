{"title": "Docs - Manage costs and attributions for the developer platform", "url": "https://cloud.google.com/architecture/enterprise-application-blueprint/manage-costs-attributions", "abstract": "# Docs - Manage costs and attributions for the developer platform\nLast reviewed 2023-12-20 UTC\n**    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nTo manage costs in GKE, you must plan, continuously monitor, and optimize your environment. This section describes how you can manage the GKE costs that are associated with the blueprint.\n", "content": "## Proactive costs planning\nTo plan your costs proactively, you must set clear cost expectations for your GKE workloads. Requirements can include many factors, such as the number and type of VMs used, the level of network traffic, the rate of logging, and the frequency of builds. After you set your cost expectations, you can [set budget alerts](/billing/docs/how-to/budgets) on your projects, as described in the enterprise foundation blueprint.\nTo attribute costs between workloads, you must consider how different resource types have different granularities of cost attribution. For example, consider the following:\n- **Project costs:** Some projects contain resources that are associated with a single tenant. The cost of a single project is attributed to a cost center using metadata labels in billing exports.\n- **Multi-tenant cluster costs:** Some projects contain GKE clusters that are shared by multiple tenants. [GKE cost allocation](/kubernetes-engine/docs/how-to/cost-allocations) provides a granular breakdown of costs in billing exports for each namespace or label on Kubernetes resources.\n- **Shared costs:** Some projects include shared resources that support many tenants, but billing reports can't granularly attribute usage to individual tenants. We recommend that you treat these as a shared cost of the developer platform. Depending on your internal processes for cost attribution, you might assign this to a shared IT cost center or split the cost proportionally among cost centers based on the number of workloads that use the platform.\nThe following shows which projects are associated with which type of cost attribution.\n| Project   | Description                | Types of charges   |\n|:----------------|:--------------------------------------------------------------------------|:---------------------------|\n| eab-fleet-{env} | Logging and monitoring             | Shared costs    |\n| eab-infra-cicd | Automation workflow project            | Shared costs    |\n| eab-app-factory | Application factory project            | Shared costs    |\n| eab-gke-{env} | Virtual machines and persistent disks for GKE        | Multi-tenant cluster costs |\n| eab-gke-{env} | Network load balancer and traffic charges incurred by applications on GKE | Shared costs    |\n| eab-{tenant} | CI/CD and application-owned resources, such as AlloyDB for PostgreSQL  | Project costs    |\n## Continuous resource monitoring\nAfter you set a cost baseline for your GKE clusters, use Cloud Monitoring to monitor the use of your GKE clusters and look for underutilized resources as areas for [potential optimization](/kubernetes-engine/docs/how-to/cost-optimization-metrics) . In this blueprint, all costs are billed to a centralized billing account. To export your costs and do detailed analysis of your GKE billing usage, you can use [Cloud Billing BigQuery exports](/billing/docs/how-to/export-data-bigquery-setup) , as described in the enterprise foundation blueprint.\n## Optimization techniques\nAfter you create an operating baseline for your applications, you can apply different [optimization techniques](/architecture/best-practices-for-running-cost-effective-kubernetes-applications-on-gke) to the environment. These optimization techniques are designed to help reduce your costs.\n## What's next\n- Read about [deployment methodology](/architecture/enterprise-application-blueprint/deployment-methodology) (next document in this series).", "guide": "Docs"}