{"title": "Docs - Plan for peak traffic and launch events", "url": "https://cloud.google.com/architecture/framework/operational-excellence/plan-for-peak-traffic-and-launch-events", "abstract": "# Docs - Plan for peak traffic and launch events\nLast reviewed 2023-06-25 UTC\nThis document in the [Google Cloud Architecture Framework](/architecture/framework) shows you how to plan for peak traffic and launch events to avoid disrupting your business.\nPeak events are major business-related events that cause a sharp increase in traffic beyond the application's standard baseline. These peak events require planned scaling.\nFor example, retail businesses with an online presence can expect peak events during holidays. Black Friday, which occurs the day after Thanksgiving in the United States, is one of the busiest shopping days of the year. For the healthcare industry in the United States, the months of October and November can have peak events due to spikes in online traffic for benefits enrollment.\nLaunch events are any substantial roll outs or migrations of new capability in production. For example, a migration from on-premises to the cloud, or a launch of a new product service or feature.\nIf you are launching a new product, you should expect an increased load on your systems during the announcement and potentially after. These events can often cause load increases of 5\u201320 times (or greater) on frontend systems. That increased load increases the load on backend systems as well. Often, these frontend and backend loads are characterized by rapid scaling over a short time as the event opens for web traffic. Launch events involve a trailing decrease in traffic to normal levels. This decrease is usually slower than the scale to peak.\nPeak and launch events includes three stages:\n- Planning and preparation for the launch or peak traffic event\n- Launching the event\n- Reviewing event performance and post event analysis\nThe practices described in this document can help each of these stages run smoothly.\n", "content": "## Create a general playbook for launch and peak events\nBuild a general playbook with a long-term view of current and future peak events. Keep adding lessons learned to the document, so it can be a reference for future peak events.\n## Plan for your launch and for peak events\nPlan ahead. Create business projections for upcoming launches and for expected (and unexpected) peak events. Preparing your system for scale spikes depends on understanding your business projections. The more you know about prior forecasts, the more accurate you can make your new business forecasts. Those new forecasts are critical inputs into projecting expected demand on your system.\nEstablishing program management and coordinated planning\u2014across your organization and with third-party vendors\u2014is also a key to success. Get these teams set up early so that your program management team can set timelines, secure budgets, and gather resources for additional infrastructure, testing support, and training.\nIt's important to set up clear communication channels. Communication is critical for all stages of a launch or a peak event. Discuss risks and areas of concern early and swarm issues before they become blockers. Create event planning documentation. Condense the most critical information about the peak event and distribute it. Doing so helps people absorb planning information and resolves basic questions. The document helps bring new people up to speed on peak-event planning.\nDocument your plan for each event. As you document your plan, ensure that you do the following:\n- Identify any assumptions, risks, and unknown factors.\n- Review past events to determine relevant information for the upcoming launch or peak event. Determine what data is available and what value that data has provided in the past.\n- Detail the rollback plan for launch and migration events.\n- Perform an architecture review:- Document key resources and architectural components.\n- Use the [Architecture Framework](/architecture/framework) to review all aspects of the environment for risks and scale concerns.\n- Create a diagram that shows how the major components of the architecture are connected. A review of the diagram might help you isolate issues and expedite their resolution.\n- If appropriate, configure the service to use alert actions to auto-restart if there's a failure. When using Compute Engine, consider using [autoscaling](/compute/docs/autoscaler) for handling throughput spikes.\n- To make sure that Compute Engine resources are available when you need them, use [Reservations](/compute/docs/instances/reservations-overview) . Reservations provide a very high level of assurance in obtaining capacity for Compute Engine zonal resources. You can use reservations to help ensure that your project has resources available.\n- Identify metrics and alerts to track:- Identify business and system metrics to monitor for the event. If any metrics or service level indicators (SLIs) aren't being collected, modify the system to collect this data.\n- Ensure you have sufficient monitoring and alerting capabilities and have reviewed normal and previous peak traffic patterns. Ensure alerts are set appropriately. Use [Google Cloud Monitoring](//monitoring/docs) tools to view application use, capacity, and the overall health of your applications and infrastructure.\n- Ensure system metrics are being captured with monitoring and alert levels of interest.\n- Review your increased capacity requirements with your Google Cloud account team and plan for the required quota management. For more details, review [Ensure your quotas match your capacity requirements](/architecture/framework/operational-excellence/manage-capacity-and-quota#ensure_your_quotas_match_your_capacity_requirements) .\n- Ensure you have appropriate cloud support levels, your team understands how to open support cases, and you have an escalation path established. For more details, review [Establish cloud support and escalation processes](/architecture/framework/operational-excellence/establish-cloud-support-and-escalation-processes) .\n- Define a communication plan, timeline, and responsibilities:- Engage cross-functional stakeholders to coordinate communication and program planning. These stakeholders can include appropriate people from technical, operational, and leadership teams, and third-party vendors.\n- Establish an unambiguous timeline containing critical tasks and the teams that own them.\n- Establish a responsibility assignment matrix (RACI) to communicate ownership for teams, team leads, stakeholders, and responsible parties.\n- You can use Premium Support's [Event Management Service](/support/docs/premium#event_management) for planned peak events. With this service, Customer Care partners with your team to create a plan and provide guidance throughout the event.\n## Establish review processes\nWhen the peak traffic event or launch event is over, review the event to document the lessons you learned. Then, update your playbook with those lessons. Finally, apply what you learned to the next major event. Learning from prior events is important, especially when they highlight constraints to the system while under stress.\nRetrospective reviews, also called postmortems, for peak traffic events or launch events are a useful technique for capturing data and understanding the incidents that occurred. Do this review for peak traffic and launch events that went as expected, and for any incidents that caused problems. As you do this review foster a blameless culture.\nFor more information about postmortems, see [Postmortem Culture: Learning from Failure](https://sre.google/sre-book/postmortem-culture/) .\n## What's next\n- [Create a culture of automation](/architecture/framework/operational-excellence/create-a-culture-of-automation) (next document in this series)\n- Explore other categories in the [Architecture Framework](/architecture/framework) such as system design, security, privacy, and compliance, reliability, cost optimization, and performance optimization.", "guide": "Docs"}