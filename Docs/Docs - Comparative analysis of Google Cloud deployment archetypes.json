{"title": "Docs - Comparative analysis of Google Cloud deployment archetypes", "url": "https://cloud.google.com/architecture/deployment-archetypes/comparison", "abstract": "# Docs - Comparative analysis of Google Cloud deployment archetypes\nLast reviewed 2023-11-03 UTC\nThis section of the [Google Cloud deployment archetypes](/architecture/deployment-archetypes) guide compares the deployment archetypes in terms of availability, robustness against outages, cost, and operational complexity.\nThe following table summarizes the comparative analysis for the basic deployment archetypes: zonal, regional, multi-regional, and global. For the hybrid and multicloud topologies, the deployment archetype that's used for the Google Cloud part of the topology influences the availability, robustness against outages, cost, and operational complexity.\n| Design consideration        | Zonal          | Regional         | Multi-regional        | Global          |\n|:----------------------------------------------------|:---------------------------------------------|:--------------------------------------------|:--------------------------------------------|:--------------------------------------------|\n| Infrastructure availability       | 99.9% (3 nines)        | 99.99% (4 nines)       | 99.999% (5 nines)       | 99.999% (5 nines)       |\n| Robustness of infrastructure against zone outages | RTO of hours or days       | Near-zero RTO if replication is synchronous | Near-zero RTO if replication is synchronous | Near-zero RTO if replication is synchronous |\n| Robustness of infrastructure against region outages | RTO of hours or days       | RTO of hours or days      | Near-zero RTO if replication is synchronous | Near-zero RTO if replication is synchronous |\n| Cost of Google Cloud resources      | Low           | Medium          | High          | Medium          |\n| Operational complexity        | Simpler than the other deployment archetypes | More complex than zonal      | More complex than regional     | Potentially simpler than multi-regional  |\nThe following sections describe the comparative analysis that's summarized in the preceding table.\n", "content": "## Infrastructure availability\nThe following sections describe the differences in infrastructure availability between the deployment archetypes.\n### Zonal, regional, multi-regional, and global deployment archetypes\nGoogle Cloud infrastructure is built to support a target availability of 99.9% for your workload when you use the zonal deployment archetype, 99.99% for regional deployments, and 99.999% for multi-regional and global deployments. These availability numbers are targets for the platform-level infrastructure.\nThe availability that you can expect from an application that's deployed in Google Cloud depends on the following factors besides the deployment archetype:\n- Design of the application\n- Number of interdependent tiers in the application stack\n- Uptime [Service Level Agreements (SLAs)](/terms/sla) for the Google Cloud services used\n- Amount of redundant resources\n- [Location scopes](/architecture/infra-reliability-guide/building-blocks#location_scopes) of the resources\nFor more information, see [Building blocks of reliability in Google Cloud](/architecture/infra-reliability-guide/building-blocks) .\n### Hybrid and multicloud deployment archetypes\nFor a hybrid or multicloud topology, the overall availability depends on the infrastructure in each environment and the interdependencies between the environments.\n- If critical interdependencies exist between components in Google Cloud and components outside Google Cloud, the overall availability is lower than the availability of the component that provides the least availability across all the environments.\n- If every component of the application is deployed redundantly across Google Cloud and on-premises or in other cloud platforms, the redundancy ensures high availability.## Robustness of infrastructure against zone and region outages\nThe following sections describe the differences between the deployment archetypes in terms of the ability of the infrastructure to continue to support your workloads in the event of Google Cloud zone and region outages.\n### Zonal deployment archetype\nAn architecture that uses the basic single-zone deployment archetype isn't robust against zone outages. You must plan for recovering from zone outages based on your recovery point objective (RPO) and recovery time objective (RTO). For example, you can maintain a passive or scaled-down replica of the infrastructure in another (failover) zone. If an outage occurs in the primary zone, you can promote the database in the failover zone to be the primary database and update the load balancer to send traffic to the frontend in the failover zone.\n### Regional deployment archetype\nAn architecture that uses the regional deployment archetype is robust against zone outages. A failure in one zone is unlikely to affect infrastructure in other zones. The RTO is near zero if data is replicated synchronously. However, when an outage affects an entire Google Cloud region, the application becomes unavailable. Plan for recovering from outages according to your RPO and RTO for the application. For example, you can provision a passive replica of the infrastructure in a different region, and activate the replica during region outages.\n### Multi-regional and global deployment archetypes\nAn architecture that uses the multi-regional or global deployment archetype is robust against zone and region outages. The RTO is near zero if data is replicated synchronously. An architecture where the application runs as a globally distributed location-unaware stack provides the highest level of robustness against region outages.\n### Hybrid and multicloud deployment archetypes\nThe robustness of a hybrid and multicloud architecture depends on the robustness of each environment (Google Cloud, on-premises, and other cloud platforms), and the interdependencies between the environments.\nFor example, if every component of an application runs redundantly across both Google Cloud and another environment (on-premises or another cloud platform), then the application is robust against Google Cloud outages. If critical interdependencies exist between components in Google Cloud and components that are deployed on-premises or on other cloud platforms, the robustness against Google Cloud outages depends on the robustness of the deployment archetype that you use for the Google Cloud part of the architecture.\n## Cost of Google Cloud resources\nThe cost of the Google Cloud resources that are required for an application depends on the Google Cloud services that you use, the number of resources that you provision, the period for which you retain or use resources, and the deployment archetype that you choose. To estimate the cost of Google Cloud resources in an architecture based on any deployment archetype, you can use the [Google Cloud Pricing Calculator](/products/calculator) .\nThe following sections describe the differences in the cost of the Google Cloud resources between the various deployment archetypes.\n### Zonal versus regional and multi-regional deployment archetypes\nWhen compared with an architecture that uses the zonal deployment archetype, an architecture that uses the multi-regional deployment archetype might incur extra costs for redundant storage. Also, for any network traffic that crosses region boundaries, you need to consider the cross-region data transfer costs.\n### Global deployment archetype\nWith this archetype, you have the opportunity to use highly available global resources, like a global load balancer. The cost of setting up and operating the cloud resources can be lower than a multi-regional deployment where you provision and configure multiple instances of regional resources. However, global resources might entail higher costs in some cases. For example, the global load balancer requires [Premium Tier](/network-tiers/docs/overview#premium_tier) networking, but for regional load balancers, you can choose [Standard Tier](/network-tiers/docs/overview#standard_tier) .\n### Hybrid and multicloud deployment archetypes\nIn a hybrid or multicloud deployment architecture, you need to consider additional costs along with the cost of the resources that you provision. For example, consider costs like hybrid or cross-cloud networking, and the cost of monitoring and managing the resources across multiple environments.\n### Considerations for all the deployment archetypes\nWhen you assess the cost of running a cloud workload, you need to consider additional costs along with the cost of the Google Cloud resources that you provision. For example, consider personnel expenses and the overhead costs to design, build, and maintain your cloud deployment.\nTo compare the cost of Google Cloud resources across the deployment archetypes, also consider the cost per that the application performs. Identify units of work that reflect the business drivers of the application, like the number of users the application serves or the number of requests processed.\nBy carefully managing the utilization of your Google Cloud resources and adopting Google-recommended best practices, you can optimize the cost of your cloud deployments. For more information, see [Google Cloud Architecture Framework: Cost optimization](/architecture/framework/cost-optimization) .\n## Operational complexity\nThis following sections describe the differences in operational complexity between the deployment archetypes, which depends on the number of infrastructure resources, features, and application stacks that you need to operate.\n### Zonal versus regional and multi-regional deployment archetypes\nAn architecture that's based on the zonal deployment archetype is easier to set up and operate when compared with the other deployment architectures. An application that runs redundantly in multiple zones or regions requires higher operational effort, due to the following reasons:\n- The status of the application stacks in multiple locations must be monitored, both at the stack level and for each component of the application.\n- If a component becomes unavailable in any location, in-process requests must be handled gracefully.\n- Application changes must be rolled out carefully.\n- The databases must be synchronized across all the locations.\n### Global deployment archetype\nThe global deployment archetype lets you use highly available global resources like a global load balancer and a global database. The effort to set up and operate cloud resources can be lower than a multi-regional deployment where you need to manage multiple instances of regional resources. However, you must carefully [manage changes to global resources](/architecture/infra-reliability-guide/building-blocks#careful_management_of_changes_to_global_resources) .\nThe effort to operate an architecture that uses the global deployment archetype also depends on whether you deploy a distributed location-unaware stack or multiple regionally isolated stacks:\n- A distributed, location-unaware application can be expanded and scaled with greater flexibility. For example, if certain components have critical end-user latency requirements in only specific locations, you can deploy these components in the required locations and operate the remainder of the stack in other locations.\n- An application that's deployed as multiple regionally isolated stacks requires higher effort to operate and maintain, due to the following factors:- The status of the application stacks in multiple locations must be monitored, both at the stack level and for each component.\n- If a component becomes unavailable in any location, in-process requests must be handled gracefully.\n- Application changes must be rolled out carefully.\n- The databases must be synchronized across all the locations.\n### Hybrid and multicloud deployment archetypes\nHybrid or multicloud topologies require more effort to set up and operate than an architecture that uses only Google Cloud.\n- Resources must be managed consistently across the on-premises and Google Cloud topologies. To manage containerized hybrid applications, you can use solutions like [GKE Enterprise](/anthos) , which is a unified cloud operating model to provision, update, and optimize Kubernetes clusters in multiple locations.\n- You need a way to efficiently provision and manage resources across multiple platforms. Tools like Terraform can help to reduce the provisioning effort.\n- Security features and tools aren't standard across cloud platforms. Your security administrators need to acquire skills and expertise to manage the security of resources distributed across all the cloud platforms that you use.", "guide": "Docs"}