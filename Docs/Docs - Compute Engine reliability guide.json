{"title": "Docs - Compute Engine reliability guide", "url": "https://cloud.google.com/architecture/framework/reliability/product-guides/compute", "abstract": "# Docs - Compute Engine reliability guide\nLast reviewed 2023-07-06 UTC\nCompute Engine is a customizable compute service that enables users to create and run virtual machines on demand on Google's infrastructure.\n", "content": "## Best practices\n- [Compute Engine API best practices](/compute/docs/api/best-practices) - recommended best practices for using the Compute Engine API and mitigating the effects of API rate limits.\n- [Designing resilient systems](/compute/docs/tutorials/robustsystems) - detailed guidance on how to architect your Compute Engine applications to recover from single-VM failures or reboots, and zonal or regional failures.\n- [How to increase availability by overprovisioning](/compute/docs/instance-groups/regional-migs#overprovision) - add redundant resources to keep your application up and running in the face of capacity losses from zonal or regional disruptions.\n- [Using load balancing for highly available applications](/compute/docs/tutorials/high-availability-load-balancing) - how to use Cloud Load Balancing with Compute Engine to provide high availability, even during a zonal outage.\n- [Best practices for Compute Engine regions selection](/solutions/best-practices-compute-engine-region-selection) - how to choose which Google Cloud regions to use for your Compute Engine resources to optimize latency for your applications while accounting for price/performance tradeoffs.\n- [Best practices for migrating VMs, using Migrate to Virtual Machines](/migrate/virtual-machines/docs/5.0/discover/migrating-vms-migrate-for-compute-engine-best-practices) - how to migrate VMs from a supported source environment to Compute Engine with Migrate to Virtual Machines, including assessment, planning, and carrying out the migration. Also, how to address common issues that might arise with migration.\n- [Patterns for using floating IP addresses in Compute Engine](/solutions/best-practices-floating-ip-addresses) - how to implement shared or virtual IP addresses in a Compute Engine environment by changing the architecture to a pattern for your use case. Patterns include those using load balancing, Google Cloud routes, and autohealing.\n- [Best practices for persistent disk snapshots](/compute/docs/disks/snapshot-best-practices) - create snapshots more quickly and with greater reliability.\n- [Persistent disks and replication](/compute/docs/disks/persistent-disks-replication) - how persistent disks use Colossus for the storage backend, and accessing persistent disks from VMs. Also, monitoring persistent disk latency, replicating persistent disks between regions or zones, and how read and write requests are handled for replicas.\n- [Configure disks to meet performance requirements](/compute/docs/disks/performance) - factors that affect the performance of block storage volumes attached to VM instances.\n- [Image management best practices](/compute/docs/images/image-management-best-practices) - detailed guidance on managing Compute Engine images such as choosing a boot image, customizing images, image lifecycle, and sharing images between projects.\n- [Image families best practices](/compute/docs/images/image-families-best-practices#how-to-use) - the importance of testing the latest image in an image family before using it in production, and how to set up the test procedure.\n- [Best practices for SQL Server instances](/compute/docs/instances/sql-server/best-practices) - best practices for optimizing Compute Engine instances that run Microsoft SQL Server, and optimizing SQL Server Enterprise Edition. In addition, how to use the operating system's default network settings, and operational activities to increase performance and stability.", "guide": "Docs"}