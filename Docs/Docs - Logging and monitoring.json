{"title": "Docs - Logging and monitoring", "url": "https://cloud.google.com/architecture/enterprise-application-blueprint/logging-monitoring", "abstract": "# Docs - Logging and monitoring\nLast reviewed 2023-12-20 UTC\n**    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nThis section describes how logging and monitoring work in the enterprise application blueprint for both the developer platform and the applications. [Google Cloud Observability for GKE](/stackdriver/docs/solutions/gke) provides Cloud Logging and Cloud Monitoring services for blueprint applications.\nBy default, the base source code in the application templates sends logs to `stdout` . Using `stdout` is a [best practice for containerized applications](/architecture/best-practices-for-operating-containers#use_the_native_logging_mechanisms_of_containers) because `stdout` lets the platform handle the application logs. The application code is instrumented with Prometheus client libraries to [export application-specific metrics](/stackdriver/docs/managed-prometheus/setup-managed#gmp-pod-monitoring) . GKE automatically provides metrics for each application, including [Kube State metrics](/stackdriver/docs/managed-prometheus/exporters/kube_state_metrics) , resource utilization, [SRE golden metrics](/stackdriver/docs/solutions/gke/app-performance-metrics#app-perf-ingest) , and database instance metrics. For the developer platform team, the platform provides infrastructure, usage, and cross-application traffic metrics.\n", "content": "## Logging storage\nCloud Operations for GKE also lets you collect system and application logs into [central log buckets](/logging/docs/storage) . The blueprint also includes a project in each environment folder that's used for storing logs. The enterprise foundation blueprint has a separate [logging project](/architecture/security-foundations/detective-controls#centralized-logging) where the aggregate Cloud Audit Logs logs from across the entire Google Cloud organization are exported. The log types most needed by tenants are also separated by tenant. For example, an application developer who works on the `frontend` application might be granted access to only `frontend` container logs and pod logs, and only in the development and non-production environments.\nThe following table lists log types, locations, and access control granularity.\n| Access control granularity | Log types                 | Log storage location        |\n|:-----------------------------|:--------------------------------------------------------------------------|:---------------------------------------------------|\n| Developer platform   | Multi-tenant infrastructure logs           | Project: eab-infra-cicd       |\n| Developer platform   | Application factory logs             | Project: eab-app-factory       |\n| By environment    | Node Cluster control plane Non-tenant containers or pods     | Project: eab-fleet-{env}Bucket: _Default   |\n| By environment    | Compute Engine resources that are used by GKE Anthos Service Mesh traffic | Project: eab-gke-{env}        |\n| By environment and tenant | Tenant containers or pods             | Project: eab-fleet-{env}Bucket: per-tenant (scope) |\n| By environment and tenant | Alloy DB sessions Other tenant-owned resources       | Project: eab-app-{appname}-{env}     |\n| By tenant     | Application builds Application deploys         | Project: eab-app-cicd-{appname}     |\n## Application monitoring\nGoogle Cloud Observability for GKE provides [predefined monitoring dashboards](/monitoring/dashboards) for GKE. The blueprint also enables [Google Cloud Managed Service for Prometheus](/stackdriver/docs/managed-prometheus) , which collects metrics from Prometheus exporters and lets you query the data globally using PromQL. PromQL means that you can use familiar tools like Grafana dashboards and PromQL-based alerts. Anthos Service Mesh is enabled to provide you with [dashboards](/service-mesh/docs/observability-overview) in the Google Cloud console to observe and troubleshoot interactions between services and across tenants. The blueprint also includes a project for a [multi-project monitoring metrics scope](/monitoring/settings) .\n## Threat and vulnerability monitoring\n[Security Command Center](/security-command-center/docs/concepts-security-command-center-overview) provides insight into the overall security posture of the blueprint. Security Command Center Premium tier provides [Container Threat Detection](/security-command-center/docs/concepts-container-threat-detection-overview) for active container-based workloads in GKE. [Web Security Scanner](/security-command-center/docs/concepts-web-security-scanner-overview) is used to detect vulnerabilities in your internet-facing services. Web Security Scanner detects vulnerabilities by crawling an HTTP service and following all links, starting at the base URL. Web Security Scanner then exercises as many user inputs and event handlers as possible.\n## What's next\n- Read about [operations for both the developer platform and applications](/architecture/enterprise-application-blueprint/ops-developer-platform-applications) (next document in this series).", "guide": "Docs"}