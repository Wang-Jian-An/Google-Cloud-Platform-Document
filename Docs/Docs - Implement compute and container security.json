{"title": "Docs - Implement compute and container security", "url": "https://cloud.google.com/architecture/framework/security/compute-container-security", "abstract": "# Docs - Implement compute and container security\nLast reviewed 2023-07-20 UTC\nGoogle Cloud includes controls to protect your compute resources and Google Kubernetes Engine (GKE) container resources. This document in the [Google Cloud Architecture Framework](/architecture/framework) describes key controls and best practices for using them.\n", "content": "## Use hardened and curated VM images\nGoogle Cloud includes [Shielded VM](/shielded-vm) , which allows you to harden your VM instances. Shielded VM is designed to prevent malicious code from being loaded during the boot cycle. It provides boot security, monitors integrity, and uses the [Virtual Trusted Platform Module (vTPM)](/security/shielded-cloud/shielded-vm#vtpm) . Use Shielded VM for sensitive workloads.\nIn addition to using Shielded VM, you can use Google Cloud partner solutions to further protect your VMs. Many partner solutions offered on Google Cloud integrate with [Security Command Center](/security-command-center/docs) , which provides event threat detection and health monitoring. You can use partners for advanced threat analysis or extra runtime security.\n## Use Confidential Computing for processing sensitive data\nBy default, Google Cloud encrypts data at rest and in transit across the network, but data isn't encrypted while it's in use in memory. If your organization handles confidential data, you need to mitigate against threats that undermine the confidentiality and integrity of either the application or the data in system memory. Confidential data includes personally identifiable information (PII), financial data, and health information.\n[Confidential Computing](/confidential-computing) builds on Shielded VM. It protects data in use by performing computation in a hardware-based trusted execution environment. This type of secure and isolated environment helps prevent unauthorized access or modification of applications and data while that data is in use. A trusted execution environment also increases the security assurances for organizations that manage sensitive and regulated data.\nIn Google Cloud, you can enable Confidential Computing by running [Confidential VMs](/confidential-computing/confidential-vm/docs/about-cvm) or [Confidential GKE nodes](/kubernetes-engine/docs/how-to/confidential-gke-nodes) . Turn on Confidential Computing when you're processing confidential workloads, or when you have confidential data (for example, secrets) that must be exposed while they are processed. For more information, see the [Confidential Computing Consortium.](https://confidentialcomputing.io/)\n## Protect VMs and containers\n[OS Login](/compute/docs/oslogin) lets your employees connect to your VMs using [Identity and Access Management (IAM)](/iam/docs) permissions as the source of truth instead of relying on SSH keys. You therefore don't have to manage SSH keys throughout your organization. OS Login ties an administrator's access to their employee lifecycle, which means that if employees move to another role or leave your organization, their access is revoked with their account. [OS Login also supports two-factor authentication](/compute/docs/oslogin/setup-two-factor-authentication) , which adds an extra layer of security from account takeover attacks.\nIn GKE, [App Engine](/appengine/docs) runs application instances within Docker containers. To enable a defined risk profile and to restrict employees from making changes to containers, ensure that your containers are [stateless and immutable](/architecture/best-practices-for-operating-containers#ensure_that_your_containers_are_stateless_and_immutable) . The [principle of immutability](/architecture/best-practices-for-operating-containers#immutability) means that your employees do not modify the container or access it interactively. If it must be changed, you build a new image and redeploy. Enable SSH access to the underlying containers only in specific debugging scenarios.\n## Disable external IP addresses unless they're necessary\nTo [disable external IP address allocation (video)](https://www.youtube.com/watch?v=1BQFk1Bi9YQ) for your production VMs and to prevent the use of external load balancers, you can use organization policies. If you require your VMs to reach the internet or your on-premises data center, you can enable a [Cloud NAT gateway](/nat/docs/overview) .\nYou can deploy [private clusters](/kubernetes-engine/docs/how-to/private-clusters) in GKE. In a private cluster, nodes have only internal IP addresses, which means that nodes and Pods are isolated from the internet by default. You can also define a network policy to manage Pod-to-Pod communication in the cluster. For more information, see [Private access options for services](/vpc/docs/private-access-options) .\n## Monitor your compute instance and GKE usage\n[Cloud Audit Logs](/logging/docs/audit) are automatically enabled for [Compute Engine](/compute/docs/logging/audit-logging) and [GKE](/kubernetes-engine/docs/how-to/audit-logging) . Audit logs let you automatically capture all activities with your cluster and monitor for any suspicious activity.\nYou can integrate GKE with partner products for runtime security. You can integrate these solutions with the [Security Command Center](/security-command-center/docs) to provide you with a single interface for monitoring your applications.\n## Keep your images and clusters up to date\nGoogle Cloud provides curated OS images that are patched regularly. You can bring custom images and run them on Compute Engine, but if you do, you have to patch them yourself. Google Cloud regularly updates OS images to mitigate new vulnerabilities as described in [security bulletins](/compute/docs/security-bulletins) and provides remediation to fix vulnerabilities for existing deployments.\nIf you're using GKE, we recommend that you [enable node auto-upgrade](/kubernetes-engine/docs/how-to/node-auto-upgrades) to have Google update your cluster nodes with the latest patches. Google manages GKE control planes, which are automatically updated and patched. In addition, use Google-curated container-optimized images for your deployment. Google regularly patches and updates these images.\n## Control access to your images and clusters\nIt's important to know who can create and launch instances. You can [control this access](/compute/docs/access) using IAM. For information about how to determine what access workloads need, see [Plan your workload identities](/architecture/framework/security/identity-access#plan-workload-ids) .\nIn addition, you can use [VPC Service Controls](/vpc-service-controls/docs) to define custom quotas on projects so that you can limit who can launch images. For more information, see the [Secure your network](/architecture/framework/security/network-security) section.\nTo provide infrastructure security for your cluster, GKE lets you use [IAM with role-based access control (RBAC)](/kubernetes-engine/docs/how-to/role-based-access-control) to manage access to your cluster and namespaces.\n## Isolate containers in a sandbox\nUse [GKE Sandbox](/kubernetes-engine/docs/concepts/sandbox-pods) to deploy multi-tenant applications that need an extra layer of security and isolation from their host kernel. For example, use GKE Sandbox when you are executing unknown or untrusted code. GKE Sandbox is a container isolation solution that provides a second layer of defense between containerized workloads on GKE.\nGKE Sandbox was built for applications that have low I/O requirements but that are highly scaled. These containerized workloads need to maintain their speed and performance, but might also involve untrusted code that demands added security. Use [gVisor](https://gvisor.dev/docs/) , a container runtime sandbox, to provide additional security isolation between applications and the host kernel. gVisor provides additional integrity checks and limits the scope of access for a service. It's not a container hardening service to protect against external threats. For more inforamtion about gVisor, see [gVisor: Protecting GKE and serverless users in the real world](/blog/products/containers-kubernetes/how-gvisor-protects-google-cloud-services-from-cve-2020-14386) .\n## What's next\nLearn more about compute and container security with the following resources:\n- [Secure your network](/architecture/framework/security/network-security) (next document in this series)\n- [Why container security matters (PDF)](https://services.google.com/fh/files/misc/why_container_security_matters_to_your_business.pdf) \n- [Launch checklist for Google Cloud](/compute/docs/launch-checklist) \n- [Verifying the identity of instances](/compute/docs/instances/verifying-instance-identity) \n- [Workload Identity](/kubernetes-engine/docs/how-to/workload-identity) \n- [Shielded VM](/security/shielded-cloud/shielded-vm) \n- [Best practices for persistent disk snapshots](/compute/docs/disks/snapshot-best-practices) \n- [Image management best practices](/solutions/image-management-best-practices)", "guide": "Docs"}