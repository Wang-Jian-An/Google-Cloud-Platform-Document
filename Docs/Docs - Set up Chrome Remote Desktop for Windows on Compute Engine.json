{"title": "Docs - Set up Chrome Remote Desktop for Windows on Compute Engine", "url": "https://cloud.google.com/architecture/chrome-desktop-remote-windows-compute-engine", "abstract": "# Docs - Set up Chrome Remote Desktop for Windows on Compute Engine\nLast reviewed 2022-11-16 UTC\nThis tutorial shows you how to set up the [Chrome Remote Desktop](https://support.google.com/chrome/answer/1649523) service on a Microsoft Windows virtual machine (VM) instance on Compute Engine. For separate instructions for Linux VMs, see [Linux virtual machines](/architecture/chrome-desktop-remote-on-compute-engine) . Chrome Remote Desktop lets you remotely access applications with a graphical user interface from a local computer or mobile device.\nWhen following this tutorial, the default firewall rules allow Chrome Remote Desktop connections; you don't need to configure any additional firewall rules.\nThe VM does need access to the internet (either with an external IP address or through [Cloud NAT](/nat) ), and you use your Google Account for authentication and authorization.\nTwo methods of setting up Chrome Remote Desktop are described:- An interactive method using Windows Remote Desktop Protocol (RDP).This method requires that the VM be directly accessible from your local machine using an RDP client, which may not be possible in all situations.\n- A non-interactive method using a [startup script](/compute/docs/instances/startup-scripts/windows) to install and configure Chrome Remote Desktop while the VM is being created.This method should be used if you have firewalls preventing direct access to the VM, or if you don't have access to an RDP client\u2014for example, on Chrome OS.\n **Note:** This solution is not suitable for graphically intensive applications, including playing videos, because those typically require hardware graphics acceleration as well as a network that has high bandwidth and low latency. If you want to run graphically intense applications remotely, see the [Creating a virtual GPU-accelerated Windows workstation](/solutions/creating-a-virtual-gpu-accelerated-windows-workstation) tutorial for an alternative solution.\nThis tutorial assumes that you are familiar with Microsoft Windows and the PowerShell command line.\nFor information about other options for creating virtual workstations, see [Creating a virtual workstation](/solutions/creating-a-virtual-workstation) .", "content": "## Objectives\n- Create a Windows Compute Engine VM instance to run Chrome Remote Desktop on.\n- Install and configure the Chrome Remote Desktop service on the VM instance.\n- Connect from your local computer to the desktop environment on the VM instance.\n## CostsThis tutorial uses billable components of Google Cloud, including:- Compute Engine\nUse the [Pricing Calculator](/products/calculator#id=6bfdb97f-013e-480a-b02a-a9192be6ce09) to generate a cost estimate based on your projected usage.## Before you begin- When you finish the tasks that are described in this document, you can avoid continued billing by deleting the resources that you created. For more information, see [Clean up](#clean-up) .\n- Make sure that you have the following role or roles on the project:      roles/compute.admin\n- You use the [Google Chrome](https://www.google.com/chrome/) browser on your local machine.\n- If you're using the interactive method, your local machine needs to have an RDP client and be able to make a direct RDP connection to the remote VM instance.\n## Interactive installation using RDPTo install Chrome Remote Desktop interactively, you need to be able to connect to the remote VM using an RDP client. In this tutorial, you create the VM in the [default VPC with default firewall rules](/vpc/docs/firewalls#more_rules_default_vpc) , which exposes the RDP port 3339 to the internet.\nIf this is not possible in your environment, use the [non-interactive method](#non-interactive_installation) that's described later in this document.\n### Create a Compute Engine instanceFor the purposes of this tutorial, the default machine type is used. If you are using this for your own environment, you may want to adjust the machine type, name, region, boot disk size, or other settings.\n- In the Google Cloud console, go to the **VM Instances** page:\n [Go to VM Instances](https://console.cloud.google.com/compute/instances/) - Click **Create** .\n- Set the instance name to `crdhost` .\n- Enable the **Enable display device** checkbox because Chrome Remote Desktop requires a display device on Windows VMs.\n- Under **Boot disk** , click **Change** to open the **Bootdisk** panel.\n- From the **Operating system** list, select **Windows Server** .\n- From the **Version** list, select **Windows Server 2022 Datacenter** .\n- Click **Select** to close the panel.\n- Click **Create** .\n- Open Cloud Shell. [Open Cloud Shell](https://console.cloud.google.com/?cloudshell=true) \n- Set your preferred zone:```\nZONE=us-central1-bREGION=us-central1gcloud config set compute/zone \"${ZONE}\"\n```\n- Create a Compute Engine instance by using the app image for Windows Server 2022 Datacenter:```\ngcloud compute instances create crdhost \\\u00a0 \u00a0 --machine-type=e2-medium \\\u00a0 \u00a0 --scopes=cloud-platform \\\u00a0 \u00a0 --enable-display-device \\\u00a0 \u00a0 --image-family=windows-2022 \\\u00a0 \u00a0 --image-project=windows-cloud \\\u00a0 \u00a0 --boot-disk-size=50GB \\\u00a0 \u00a0 --boot-disk-device-name=crdhost\n```This command creates a Windows Server 2022 virtual machine that has an attached display device (required for Chrome Remote Desktop on Windows VMs) a 50GB boot disk, and grants the instance full access to Google Cloud APIs.Ignore the disk performance warning because you don't need high performance for this tutorial.### Connect to the VM instance by using RDP\n- In the Google Cloud console, go to the **VM instances** page. [Go to the VM instances page](https://console.cloud.google.com/compute/instances) \n- Make sure a green check mark is displayed next to the name of your `crdhost` instance, indicating that the instance is ready.\n- Click the instance name `crdhost` to open the **VM instancedetails** page.\n- Under **Remote access** , click **Set Windows password** , and then click **Set** to create your account on the remote machine.This step generates a password for you. Make a note of the password or copy it to a secure temporary file.\n- To connect to the remote instance, click the arrow next to the **RDP** button, and then select **Download the RDPfile** . You can open the RDP file by using your preferred RDP client.\n- When your RDP client prompts for a password, enter the password that you generated earlier.\n- When you're prompted whether you want your computer discoverable by other PCs and devices on the network, click **No** .\n- Close the **Server Manager Dashboard** if it is open.\n### Install the Chrome Remote Desktop serviceThe next step is to install Google Chrome and the Chrome Remote Desktop service on the VM instance.- In your RDP session, click **Start** on the Windows taskbar, type `PowerShell` , and then select the Windows PowerShell app.\n- At the PowerShell prompt, download and run the Chrome Remote Desktop Host installer.```\n\u00a0 $installer = \"$env:TEMP\\chromeremotedesktophost.msi\"\u00a0 $uri = 'https://dl.google.com/edgedl/chrome-remote-desktop/chromeremotedesktophost.msi'\u00a0 (New-Object Net.WebClient).DownloadFile($uri,\"$installer\") && `\u00a0 \u00a0 Start-Process $installer -Wait && `\u00a0 \u00a0 Remove-Item $installer\n```\n- When you're prompted, confirm that you want the installer to make changes.\n### Set up the Chrome Remote Desktop serviceYou now generate a Windows command that starts the Chrome Remote Desktop service and links it to your Google Account.- On your local computer, using the Chrome browser, go to the [Chrome Remote Desktop command line setup page](https://remotedesktop.google.com/headless) .\n- If you're not already signed in, sign in with a Google Account. This is the account that will be used for authorizing remote access.\n- On the **Set up another computer** page, click **Begin** , then **Next** .\n- Click **Authorize** .You need to allow Chrome Remote Desktop to access your account. If you approve, the page displays several command lines, one of which is for **Windows (Powershell)** that looks like the following:```\n& \"${Env:PROGRAMFILES(X86)}\\Google\\Chrome Remote Desktop\\CurrentVersion\\remoting_start_host.exe\" `\n--code=\"4/ENCODED_AUTHENTICATION_TOKEN\" `\n--redirect-url=\"https://remotedesktop.google.com/_/oauthredirect\" `\n--name=$Env:COMPUTERNAME\n```\n- Click **Copy** to copy the command line to your clipboard.\n- In your RDP session, at the Powershell prompt, paste the command line you just copied and press .\n- When you're prompted, confirm that you want the application to make changes.\n- When you're prompted, enter a 6-digit PIN. This number will be used for additional authorization when you connect later.After the command completes, your remote desktop service has started.\n- Close the Powershell window.\n- Close the RDP session.\nYou can now [connect to the VM using Chrome Remote Desktop](#connecting-with-crd) .## Non-interactive installationIn this approach, you configure the VM instance to have a [startup script](/compute/docs/instances/startup-scripts/windows) that runs when the VM is created.\nWith this approach, the VM does not need to be directly accessible the internet, although it still needs access the internet.\n### Authorize the Chrome Remote Desktop serviceYou now generate a Windows command that you use later in the specialize script. As part of this procedure, you provide authorization information that's included in the command.- On your local computer, using the Chrome browser, go to the [Chrome Remote Desktop command line setup page](https://remotedesktop.google.com/headless) .\n- If you're not already signed in, sign in with a Google Account. This is the account that will be used for authorizing remote access.\n- Click **Begin** , and then click **Next** .\n- Click **Authorize** .\n- Allow Chrome Remote Desktop to access your account.The page now contains several command lines, one of which is for **Windows(Cmd)** that looks like the following:```\n\"%PROGRAMFILES(X86)%\\Google\\Chrome Remote Desktop\\CurrentVersion\\remoting_start_host.exe\"\n--code=\"4/ENCODED_AUTHENTICATION_TOKEN\"\n--redirect-url=\"https://remotedesktop.google.com/_/oauthredirect\"\n--name=%COMPUTERNAME%\n```The `--code` flag contains a unique short-lived OAuth token.The authorization code in the command line is valid for only a few minutes, and you can use it only once.Keep this page open.\n### Copy the startup command to Cloud ShellThe next step is to create a file in your Cloud Shell instance that contains the startup command that you just generated.- Open Cloud Shell. [Open Cloud Shell](https://console.cloud.google.com/?cloudshell=true) \n- Create a file for the startup command:```\ncat \u00a0> crd-auth-command.txt\n```\n- Go to the page that has the Chrome Remote Desktop startup command and copy the **Windows (Cmd)** command line.\n- In Cloud Shell paste the command to add it to the file.\n- Press to end the line, and then press to close the file.\n### Create the startup script\n- Copy the following code block and paste it into Cloud Shell.```\ncat << \"EOF\" > crd-sysprep-script.ps1<#\u00a0 \u00a0 .SYNOPSIS\u00a0 \u00a0 GCESysprep specialize script for unattended Chrome Remote Desktop installation.#>$ErrorActionPreference = 'stop'function Get-Metadata([String]$metadataName) {\u00a0 try {\u00a0 \u00a0 $value = (Invoke-RestMethod `\u00a0 \u00a0 \u00a0 \u00a0 -Headers @{'Metadata-Flavor' = 'Google'} `\u00a0 \u00a0 \u00a0 \u00a0 -Uri \"http://metadata.google.internal/computeMetadata/v1/instance/attributes/$metadataName\")\u00a0 }\u00a0 catch {\u00a0 \u00a0 # Report but ignore REST errors.\u00a0 \u00a0 Write-Host $_\u00a0 }\u00a0 if ($value -eq $null -or $value.Length -eq 0) {\u00a0 \u00a0 throw \"Metadata value for \"\"$metadataName\"\" not specified. Skipping Chrome Remote Desktop service installation.\"\u00a0 }\u00a0 return $value}# Get config from metadata#$crdCommand = Get-Metadata('crd-command')$crdPin = Get-Metadata('crd-pin')$crdName = Get-Metadata('crd-name')if ($crdPin -isNot [Int32] -or $crdPin -gt 999999 -or $crdPin -lt 0) {\u00a0 throw \"Metadata \"\"crd-pin\"\"=\"\"$crdPin\"\" is not a 6 digit number. Skipping Chrome Remote Desktop service installation.\"}# Prefix $crdPin with zeros if required.$crdPin = $crdPin.ToString(\"000000\");# Extract the authentication code and redirect URL arguments from the# remote dekstop startup command line.#$crdCommandArgs = $crdCommand.Split(' ')$codeArg = $crdCommandArgs | Select-String -Pattern '--code=\"[^\"]+\"'$redirectArg = $crdCommandArgs | Select-String -Pattern '--redirect-url=\"[^\"]+\"'if (-not $codeArg) {\u00a0 throw 'Cannot get --code= parameter from crd-command. Skipping Chrome Remote Desktop service installation.'}if (-not $redirectArg) {\u00a0 throw 'Cannot get --redirect-url= parameter from crd-command. Skipping Chrome Remote Desktop service installation.'}Write-Host 'Downloading Chrome Remote Desktop.'$installer = \"$env:TEMP\\chromeremotedesktophost.msi\"$uri = 'https://dl.google.com/edgedl/chrome-remote-desktop/chromeremotedesktophost.msi'(New-Object Net.WebClient).DownloadFile($uri,\"$installer\")Write-Host 'Installing Chrome Remote Desktop.'& msiexec.exe /I $installer /qn /quiet | Out-DefaultRemove-Item $installerWrite-Host 'Starting Chrome Remote Desktop service.'& \"${env:ProgramFiles(x86)}\\Google\\Chrome Remote Desktop\\CurrentVersion\\remoting_start_host.exe\" `\u00a0 \u00a0 $codeArg $redirectArg --name=\"$crdName\" -pin=\"$crdPin\" | Out-DefaultWrite-Host 'Downloading Chrome.'$installer = \"$env:TEMP\\chrome_installer.exe\"$uri = 'https://dl.google.com/chrome/install/latest/chrome_installer.exe'(New-Object Net.WebClient).DownloadFile($uri,\"$installer\")Write-Host 'Installing Chrome.'& $installer /silent /install | Out-DefaultRemove-Item $installerEOF\n```This code block is a PowerShell script that runs when the VM is created. It performs the following actions:- Downloads and installs the Chrome Remote Desktop host service.\n- Retrieves the following metadata parameters:- `crd-command`- the Windows authentication and startup command.\n- `crd-pin`- the 6-digit PIN used for additional authentication.\n- `crd-name`- the name for this instance.\n- Configures and starts the Chrome Remote Desktop host service.\n- Downloads and installs the Chrome browser.\n### Create a new Windows virtual machineYou now create a new Windows VM using the files you created earlier to configure and set up Chrome Remote Desktop.\nFor the purposes of this tutorial, the `e2-medium` machine type is used. If you are using this for your own environment, you may want to adjust the machine type, name, region, boot disk size, or other settings.- In Cloud Shell, set your preferred zone:```\nZONE=us-central1-bREGION=us-central1gcloud config set compute/zone \"${ZONE}\"\n```\n- Set a 6-digit PIN for additional authentication to Chrome Remote Desktop:```\nCRD_PIN=your-pin\n```Replace with a 6-digit number.\n- Set a name for this VM instance:```\nINSTANCE_NAME=crdhost\n```\n- Create the instance:```\ngcloud compute instances create ${INSTANCE_NAME} \\\u00a0 \u00a0 --machine-type=e2-medium \\\u00a0 \u00a0 --scopes=cloud-platform \\\u00a0 \u00a0 --enable-display-device \\\u00a0 \u00a0 --image-family=windows-2022 \\\u00a0 \u00a0 --image-project=windows-cloud \\\u00a0 \u00a0 --boot-disk-size=50GB \\\u00a0 \u00a0 --boot-disk-device-name=${INSTANCE_NAME} \\\u00a0 \u00a0 --metadata=crd-pin=${CRD_PIN},crd-name=${INSTANCE_NAME} \\\u00a0 \u00a0 --metadata-from-file=crd-command=crd-auth-command.txt,sysprep-specialize-script-ps1=crd-sysprep-script.ps1\n```This command creates a Windows Server 2022 virtual machine in the default VPC that has an attached display device (required for Chrome Remote Desktop on Windows VMs), a 50GB boot disk, and grants the instance full access to Google Cloud APIs.The metadata values specify the specialize script, Windows startup command line, and the parameters required to start the Chrome Remote Desktop service.\n### Monitor the VM startupYou can verify that the startup script is successful by checking the messages logged to the VM's serial port while it is being created.- In Cloud Shell, display the messages logged during VM startup:```\ngcloud compute instances tail-serial-port-output ${INSTANCE_NAME}\n```If the Chrome Remote Desktop configuration is successful, you see the following log lines:```\nFound sysprep-specialize-script-ps1 in metadata.\nsysprep-specialize-script-ps1: Downloading Chrome Remote Desktop.\nsysprep-specialize-script-ps1: Installing Chrome Remote Desktop.\nsysprep-specialize-script-ps1: Downloading Chrome.\nsysprep-specialize-script-ps1: Installing Chrome.\nsysprep-specialize-script-ps1: Starting Chrome Remote Desktop service.\nFinished running specialize scripts.\n```You might also see the following line:```\nsysprep-specialize-script-ps1: ... Failed to read 'C:\\ProgramData\\Google\\Chrome Remote Desktop\\host_unprivileged.json'.: The system cannot find the path specified. (0x3)\n```This is normal and can be ignored.If starting the Chrome Remote Desktop service fails, you see an error message indicating the problem, for example:```\nsysprep-specialize-script-ps1: Couldn't start host: OAuth error.\n```This error indicates that the OAuth token from the Chrome Remote Desktop authentication page is no longer valid, either because it has already been used, or because it has expired.To correct this error, either [connect using RDP](#connect_with_rdp) and perform an interactive setup as described previously, or delete the VM and [retry the setup process](#authorize_crd_service) .When you see the following message in the serial port monitor, the VM is ready.```\nGCEInstanceSetup: -----------------------------------------------------------GCEInstanceSetup: Instance setup finished. crdhost is ready to use.\nGCEInstanceSetup: -----------------------------------------------------------\n```\n- Press to stop displaying the startup messages.\n### Create a Windows user account\n- In the Google Cloud console, go to the **VM instances** page. [Go to the VM instances page](https://console.cloud.google.com/compute/instances) \n- Click the instance name `crdhost` to open the **VM instancedetails** page.\n- Under **Remote access** , click **Set Windows password** , and then click **Set** to create your account on the remote machine.This step generates a password for you. Make a note of the username and password or copy it to a secure temporary file.\n## Connect to the VM instance with Chrome Remote DesktopYou can connect to the VM instance using the Chrome Remote Desktop web application.- On your local computer, go to the [Chrome Remote Desktop](https://remotedesktop.google.com/access) website.\n- Click **Access my computer.** \n- If you're not already signed in to Google, sign in with the same Google Account that you used to set up the Chrome Remote Desktop service.You see your new VM instance `crdhost` in the **Remote Devices** list.\n- Click the name of the remote desktop instance.\n- When you're prompted, enter the PIN that you created earlier, and then click the arrow button to connect.You are now connected to the Windows login screen on your remote Compute Engine instance.\n- If you are prompted, always allow the Remote Desktop application to read your clipboard and let you copy and paste between local and remote applications.\n- Press any key, and enter the password for the Windows user that you generated earlier. Note that the default remote keyboard has a US-English layout, so the characters entered may not match the characters on your local keyboard. You also cannot copy and paste the password.\nYou are now connected and logged in to the remote Windows desktop.## Improve the remote desktop experienceThis section provides instructions for changing settings in order to improve the remote desktop experience.\n### Install the Remote Desktop Chrome appThe Remote Desktop Chrome app gives a separate windowed experience and allows keyboard shortcuts that would normally be intercepted by Chrome to be used on the remote system.\nIf this app is not installed, do the following:- Open the **Session Options** panel using the buttonthat appears when you move the mouse to the side of the window.\n- In the **Install App** section, click **Begin** .\n- Click **Install** .\nThe remote desktop session reopens in its own application window.\nYou can move any remote desktop sessions from a Chrome tab to the app window by clicking the **Open With** icon in the address bar.\n### Improve the screen resolutionThe default remote desktop resolution can modified to better suit your local computers desktop resolution.- Right-click the remote desktop's background and select **Display Settings** .\n- In the **Resolution** drop-down list, select a different screen resolution.\n- Confirm the new screen resolution in the dialog.\n### Re-enable the serviceIf you have mistakenly disabled connections to the remote instance in the client app, you can reconfigure the service and re-enable it by following the instructions in [Set up the Chrome Remote Desktop Service](#set_up_the_chrome_remote_desktop_service) .## Clean upTo avoid incurring charges to your Google Cloud account for the resources used in this   tutorial, either delete the project that contains the resources, or keep the project and   delete the individual resources.\n### Delete the project\nThe easiest way to eliminate billing is to delete the project that you created for the tutorial.\nTo delete the project:\n- **Caution** : Deleting a project has the following effects:- **Everything in the project is deleted.** If you used an existing project for  the tasks in this document, when you delete it, you also delete any other work you've  done in the project.\n- **Custom project IDs are lost.** When you created this project, you might have created a custom project ID that you want to use in  the future. To preserve the URLs that use the project ID, such as an`appspot.com`URL, delete selected resources inside the project instead of deleting the whole project.\nIf you plan to explore multiple architectures, tutorials, or quickstarts, reusing projects  can help you avoid exceeding project quota limits.\n- In the Google Cloud console, go to the **Manage resources** page. [Go to Manage resources](https://console.cloud.google.com/iam-admin/projects) \n- In the project list, select the project that you  want to delete, and then click **Delete** .\n- In the dialog, type the project ID, and then click **Shut down** to delete the project.### Delete the Compute Engine instanceAs an alternative to deleting the entire project, you can delete the VM instance you created for this tutorial:- In the Google Cloud console, go to the [VM Instances](https://console.cloud.google.com/compute/instances) page: [Go to the VM Instances page](https://console.cloud.google.com/compute/instances) \n- Select the checkbox next to the instance name you created earlier ( `crdhost` ).\n- Click the **Delete** button at the top of the page: It takes a few moments to delete your instance.\n### Deauthorize Chrome Remote Desktop for the instanceIf you no longer want to connect to the VM instance, you can disable it and remove the instance from the **Remote Devices** list.- On your local computer, go to the [Chrome Remote Desktop Remote Device list](https://remotedesktop.google.com/access) website.\n- Clickdeletenext to the instance name`crdhost`.\n- Click **OK** to confirm that the remote device connection should be disabled.\n## What's next\n- Learn how to set up [Chrome Remote Desktop on a Linux virtual machines](/architecture/chrome-desktop-remote-on-compute-engine) .\n- Learn about other options for [creating a virtual workstation](/solutions/creating-a-virtual-workstation) .\n- Explore reference architectures, diagrams, and best practices about Google Cloud. Take a look at our [Cloud Architecture Center](/architecture) .", "guide": "Docs"}