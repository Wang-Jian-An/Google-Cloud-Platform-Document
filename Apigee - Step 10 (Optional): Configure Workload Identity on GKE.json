{"title": "Apigee - Step 10 (Optional): Configure Workload Identity on GKE", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 10 (Optional): Configure Workload Identity on GKE\n", "content": "## \n GKE with Workload Identity only: Configure Workload Identity\n**Note:** Apigee hybrid v.1.11 only supports Workload Identity federation on GKE.\nFollow these steps if you set up your overrides file for Workload Identity on GKE in [Step 6: Configure the cluster](/apigee/docs/hybrid/v1.11/install-configure-cluster) .\nIf you are not using Workload Identity on GKE, proceed to [Part 3, Step 1: Expose Apigee ingress gateway](/apigee/docs/hybrid/v1.11/install-expose-apigee-ingress) .\n### Google Cloud service accounts and Kubernetes service accounts\nA Google Cloud service account is a special kind of account that can be used to make authorized API calls by authenticating as the service account itself. Google Cloud service accounts can be given roles and permissions similar to an individual user. When an application authenticates as a service account, it has access to all resources that the service account has permission to access. If you want to learn more about Google Cloud service accounts, see [Service accounts overview](/iam/docs/service-account-overview) .\nYou created Google Cloud service accounts for your Apigee hybrid installation in [Step 4: Create service accounts](/apigee/docs/hybrid/v1.11/install-service-accounts) . Apigee uses these service accounts to authenticate the hybrid components.\nKubernetes service accounts are similar to Google Cloud service accounts. A Kubernetes service account provides an identity for processes that run in a Pod, and allows it to authenticate to the API server similarly to a user. If you want to learn more about Kubernetes service accounts, see [Configure Service Accounts for Pods](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/) .\nThe `apigeectl` tool created most of the Kubernetes service accounts needed by Apigee hybrid when you ran `apigeectl apply` in the previous procedure.\nWhen you configure Workload Identity on GKE, you associate the Google Cloud service accounts with the Kubernetes service accounts in the Kubernetes cluster. That way, the Kubernetes service accounts can impersonate the Google Cloud service accounts and use their assigned roles and permissions to authenticate with the hybrid components.\nFollow these instructions to configure Workload Identity for your project.\n**Note:** Workload Identity is only available for hybrid installations on GKE.\n### Prepare to configure Workload Identity\nThese procedures make use of the following environment variables. Check that they are defined and define any that are not:\n```\necho $APIGEECTL_HOME\necho $CLUSTER_LOCATION\necho $ENV_NAME\necho $HYBRID_FILES\necho $NAMESPACE\necho $PROJECT_ID\necho $ORG_NAME\n```\n- Check that the current`gcloud`configuration is set to your Google Cloud project ID with  the following command:```\ngcloud config get project\n```\n- If needed, set the current `gcloud` configuration:\n- ```\ngcloud config set project $PROJECT_ID\n```\n- Create the`apigee-cassandra-restore`Kubernetes service account.When you applied your configuration by running `apigeectl apply` , the command  created most of the Kubernetes service accounts needed for Workload Identity.To create the `apigee-cassandra-restore` Kubernetes service account, run `apigeectl apply` with the `--restore` flag:```\n$APIGEECTL_HOME/apigeectl apply -f $HYBRID_FILES/overrides/overrides.yaml --restore\n```\n- Verify that Workload Identity is enabled for your GKE Cluster. When you created the cluster  in [Step 1: Create a cluster](/apigee/docs/hybrid/v1.11/install-create-cluster#gke) , step 6 was to Enable  Workload Identity. You can confirm if Workload Identity is enabled by running the following  command:\n```\ngcloud container clusters describe $CLUSTER_NAME \\\n --region $CLUSTER_LOCATION \\\n --project $PROJECT_ID \\\n --flatten 'workloadIdentityConfig'\n``````\ngcloud container clusters describe $CLUSTER_NAME \\\n --zone $CLUSTER_LOCATION \\\n --project $PROJECT_ID \\\n --flatten 'workloadIdentityConfig'\n```\nYour output should look like the following:```\n -- workloadPool: PROJECT_ID.svc.id.goog\n```If you see `null` instead in your results, run the following  command to enable Workload Identity for your cluster:\n```\ngcloud container clusters update $CLUSTER_NAME \\\n --workload-pool=$PROJECT_ID.svc.id.goog \\\n --project $PROJECT_ID \\\n --region $CLUSTER_LOCATION\n``````\ngcloud container clusters update $CLUSTER_NAME \\\n --workload-pool=$PROJECT_ID.svc.id.goog \\\n --zone $CLUSTER_LOCATION \\\n --project $PROJECT_ID\n```\n- Enable Workload Identity for each node pool with the following commands. This operation can  take up to 30 minutes for each node:\n```\ngcloud container node-pools update NODE_POOL_NAME \\\n --cluster=$CLUSTER_NAME \\\n --region $CLUSTER_LOCATION \\\n --project $PROJECT_ID \\\n --workload-metadata=GKE_METADATA\n``````\ngcloud container node-pools update NODE_POOL_NAME \\\n --cluster=$CLUSTER_NAME \\\n --zone $CLUSTER_LOCATION \\\n --project $PROJECT_ID \\\n --workload-metadata=GKE_METADATA\n```\nWhere is the name of each node pool. In most Apigee hybrid   installations, the two default node pools are named `apigee-data` and `apigee-runtime` .\n- Verify that Workload Identity is enabled on your node pools with the following commands:\n```\ngcloud container node-pools describe apigee-data \\\n --cluster $CLUSTER_NAME \\\n --region $CLUSTER_LOCATION \\\n --project $PROJECT_ID \\\n --flatten \"config:\"\n```\n```\ngcloud container node-pools describe apigee-runtime \\\n --cluster $CLUSTER_NAME \\\n --region $CLUSTER_LOCATION \\\n --project $PROJECT_ID \\\n --flatten \"config:\"\n``````\ngcloud container node-pools describe apigee-data \\\n --cluster $CLUSTER_NAME \\\n --zone $CLUSTER_LOCATION \\\n --project $PROJECT_ID \\\n --flatten \"config:\"\n```\n```\ngcloud container node-pools describe apigee-runtime \\\n --cluster $CLUSTER_NAME \\\n --zone $CLUSTER_LOCATION \\\n --project $PROJECT_ID \\\n --flatten \"config:\"\n```\nYour output should look something like:```\n--diskSizeGb: 100\ndiskType: pd-standard\n...\nworkloadMetadataConfig:\n mode: GKE_METADATA\n \n```\n- Get a list of the names of the Google Cloud service accounts for your project. You will need these  names to associate the Kubernetes service accounts to configure Workload Identity. For  non-production installations, there should be only one Google service account. For production  installations there should be eight.Use the following command to get the list of names:```\ngcloud iam service-accounts list --project $PROJECT_ID\n```Your output should look something like:\nFor non-production environments:\n```\nDISPLAY NAME   EMAIL              DISABLED\napigee-non-prod  apigee-non-prod@my_project_id.iam.gserviceaccount.com  False\n```For non-production environments:\n```\nDISPLAY NAME   EMAIL              DISABLED\napigee-cassandra  apigee-cassandra@my_project_id.iam.gserviceaccount.com  False\napigee-logger  apigee-logger@my_project_id.iam.gserviceaccount.com  False\napigee-mart   apigee-mart@my_project_id.iam.gserviceaccount.com   False\napigee-metrics  apigee-metrics@my_project_id.iam.gserviceaccount.com  False\napigee-runtime  apigee-runtime@my_project_id.iam.gserviceaccount.com  False\napigee-synchronizer apigee-synchronizer@my_project_id.iam.gserviceaccount.com False\napigee-udca   apigee-udca@my_project_id.iam.gserviceaccount.com   False\napigee-watcher  apigee-watcher@my_project_id.iam.gserviceaccount.com  False\n```\n **Tip:** If you have custom names for your service accounts that do not  correspond easily with the names of the Apigee components, you can determine the role of each  service account by checking the roles assigned to it and comparing the roles with the roles  recommended in [About service accounts](/apigee/docs/hybrid/v1.11/sa-about#recommended-sas) .Use the following command to check the roles assigned to a service account:```\ngcloud projects get-iam-policy ${PROJECT_ID} \\\n --flatten=\"bindings[].members\" \\\n --format='table(bindings.role)' \\\n --filter=\"SERVICE_ACCOUNT_NAME\"\n```\n- Get a list of names of the Kubernetes service accounts. You will need this list of names to  associate with your Google Cloud service accounts later in this procedure. Use the following command:```\nkubectl get sa -n $NAMESPACE\n```Your output should look something like the following. The Kubernetes service accounts in **bold** are the ones you will need to associate with your Google cloud service accounts:```\nNAME               SECRETS AGE\napigee-cassandra-backup          1   11m\napigee-cassandra-restore          1   11m\napigee-cassandra-schema-setup-my-project-id-123abcd-sa  1   11m\napigee-cassandra-schema-val-my-project-id-123abcd   1   11m\napigee-cassandra-user-setup-my-project-id-123abcd-sa   1   11m\napigee-connect-agent-my-project-id-123abcd-sa    1   11m\napigee-datastore-default-sa         1   11m\napigee-ingressgateway          1   11m\napigee-ingressgateway-my-project-id-123abcd     1   11m\napigee-ingressgateway-manager        1   11m\napigee-init             1   11m\napigee-mart-my-project-id-123abcd-sa       1   11m\napigee-metrics-sa           1   11m\napigee-mint-task-scheduler-my-project-id-123abcd-sa   1   11m\napigee-redis-default-sa          1   11m\napigee-redis-envoy-default-sa        1   11m\napigee-runtime-my-project-id-env-name-234bcde-sa    1   11m\napigee-synchronizer-my-project-id-env-name-234bcde-sa  1   11m\napigee-udca-my-project-id-123abcd-sa       1   11m\napigee-udca-my-project-id-env-name-234bcde-sa    1   11m\napigee-watcher-my-project-id-123abcd-sa      1   11m\ndefault              1   11m\n \n```\n### Configure Workload Identity\nUse the following procedure to enable Workload Identity for your Hybrid installation:\n- For each Apigee component annotate the corresponding Kubernetes service accounts with the  Google service account for the component. **IMPORTANT:** If your service account names do not match the default  names created by`create-service-account`, replace the  red service account name with the correct service account name for the component in the following commands. For example,  if your Cassandra service account is named`my-cassandra-accnt-1`, then replace``with that name in the command.The following steps use two environment variables. You will reset the values of these   variables before each set of commands:- : The name of a Google service account. These are the   service accounts you created with the`create-service-account`tool in [Step 4: Create service accounts](/apigee/docs/hybrid/v1.11/install-service-accounts) .\n- : The name of a Kubernetes service account. These are the   accounts you listed above with the`kubectl get sa -n $NAMESPACE`command, for example:`apigee-cassandra-schema-setup-hybrid-example-project-123abcd-sa`.\n **Tip:** If you encounter an error saying the service account is \"NOT FOUND,\"   try running`gcloud init`to set the current configuration to the correct Google Cloud   project ID and cluster location.\n- **Cassandra** Configure Workload Identity for the Cassandra component.The Cassandra component has six associated Kubernetes service accounts:- `apigee-cassandra-backup`\n- `apigee-cassandra-restore`\n- `apigee-cassandra-schema-setup`\n- `apigee-cassandra-schema-val`\n- `apigee-cassandra-user-setup`\n- `apigee-datastore-default`\n **Configure the apigee-cassandra-backup Kubernetes service account** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-non-prod\"\nKSA_NAME=\"apigee-cassandra-backup\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```Your output should have a line describing the annotation, similar to:```\nAnnotations:   iam.gke.io/gcp-service-account: apigee-non-prod@my-project-id.iam.gserviceaccount.com\n```\n **Configure the apigee-cassandra-restore Kubernetes service account** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-restore\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n **Configure the apigee-cassandra-schema-setup Kubernetes service account** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-schema-setup-service-account-name-sa\"\n```for example:`apigee-cassandra-schema-setup-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n **Configure the apigee-cassandra-schema-val Kubernetes service account** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-schema-val-service-account-name\"\n```for example:`apigee-cassandra-schema-val` ``.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n **Configure the apigee-cassandra-user-setup Kubernetes service account** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-user-setup-service-account-name-sa\"\n```for example:`apigee-cassandra-user-setup-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n **Configure the apigee-datastore-default-sa Kubernetes service account** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-datastore-default-sa\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n **Configure the apigee-cassandra-backup Kubernetes service account** - Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-cassandra\"\nKSA_NAME=\"apigee-cassandra-backup\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- Your output should have a line describing the annotation, similar to:\n- ```\nAnnotations:   iam.gke.io/gcp-service-account: apigee-cassandra@my-project-id.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n **Configure the apigee-cassandra-restore Kubernetes service account** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-restore\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n **Configure the apigee-cassandra-schema-setup Kubernetes service account** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-schema-setup-service-account-name-sa\"\n```for example:`apigee-cassandra-schema-setup-` `` `-sa`.\n- Bind the IAM role:\n- ```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n **Configure the apigee-cassandra-schema-val Kubernetes service account** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-schema-val-service-account-name\"\n```for example:`apigee-cassandra-schema-val-` ``.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n **Configure the apigee-cassandra-user-setup Kubernetes service account** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-cassandra-user-setup-service-account-name-sa\"\n```for example:`apigee-cassandra-user-setup-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n **Configure the apigee-datastore-default-sa Kubernetes service account** - Redefine the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-datastore-default-sa\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- **Apigee Connect** Configure Workload Identity for the Apigee Connect component.- Define the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-connect-agent-service-account-name-sa\"\n```for example:`apigee-connect-agent-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-mart\"\nKSA_NAME=\"apigee-connect-agent-service-account-name-sa\"\n```for example:`apigee-connect-agent-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- **MART** Configure Workload Identity for the MART component.- Define the`KSA_NAME`environment variable:```\nKSA_NAME=\"apigee-mart-service-account-name-sa\"\n```for example:`apigee-mart-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-mart\"\nKSA_NAME=\"apigee-mart-service-account-name-sa\"\n```for example:`apigee-mart-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- **Apigee metrics** Configure Workload Identity for the Apigee metrics component.- Define the`KSA_NAME`environment variables:```\nKSA_NAME=\"apigee-metrics-sa\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-metrics\"\nKSA_NAME=\"apigee-metrics-sa\"\n```\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n--role roles/iam.workloadIdentityUser \\\n--member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n--project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n--namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- **UDCA (org-level)** Configure Workload Identity for the organization-level UDCA component.UDCA is implemented in both organization-level and environment-level scopes. Therefore,   there are two separate Kubernetes service accounts for UDCA, one for each scope. You can   tell them apart by the name of the account. The env-scope account includes the environment   name in the service account name. For example:- Org-level:`apigee-udca-` ` **my-project-id** ` `-123abcd-sa`where` **my-project-id** `is the name project ID.\n- Env-level:`apigee-udca-` ` **my-project-id** ` `-` ` **my-env** ` `-234bcde-sa`where` **my-env** `is the name of the environment.\n- Define the`KSA_NAME`environment variables:```\nKSA_NAME=\"apigee-udca-service-account-name-sa\"\n```for example:`apigee-udca-` `` `-sa`.\n- Bind the IAM role:```\n gcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\n kubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-udca\"\nKSA_NAME=\"apigee-udca-service-account-name-sa\"\n```for example:`apigee-udca-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- **Apigee Watcher** Configure Workload Identity for the Apigee Watcher component.- Define the`KSA_NAME`environment variables:```\nKSA_NAME=\"apigee-watcher-service-account-name-sa\"\n```for example:`apigee-watcher-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-watcher\"\nKSA_NAME=\"apigee-watcher-service-account-name-sa\"\n```for example:`apigee-watcher-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- **Runtime** Configure Workload Identity for the Apigee Runtime component.- Define the`KSA_NAME`environment variables:```\nKSA_NAME=\"apigee-runtime-env-level-service-account-name-sa\"\n```for example:`apigee-runtime-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-runtime\"\nKSA_NAME=\"apigee-runtime-env-level-service-account-name-sa\"\n```for example:`apigee-runtime-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- **Synchronizer** Configure Workload Identity for the Synchronizer component.- Define the`KSA_NAME`environment variables:```\nKSA_NAME=\"apigee-synchronizer-env-level-service-account-name-sa\"\n```for example:`apigee-synchronizer-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-synchronizer\"\nKSA_NAME=\"apigee-synchronizer-env-level-service-account-name-sa\"\n```for example:`apigee-synchronizer-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- **UDCA (env-level)** Configure Workload Identity for the environment-level UDCA component.- Define the`KSA_NAME`environment variables:```\nKSA_NAME=\"apigee-udca-env-level-service-account-name-sa\"\n```for example:`apigee-udca-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- Define the`KSA_NAME`and`GSA_NAME`environment variables:```\nGSA_NAME=\"apigee-udca\"\nKSA_NAME=\"apigee-udca-env-level-service-account-name-sa\"\n```for example:`apigee-udca-` `` `-sa`.\n- Bind the IAM role:```\ngcloud iam service-accounts add-iam-policy-binding \\\n --role roles/iam.workloadIdentityUser \\\n --member \"serviceAccount:$PROJECT_ID.svc.id.goog[$NAMESPACE/$KSA_NAME]\" \\\n $GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com \\\n --project $PROJECT_ID\n```\n- Annotate the service account:```\nkubectl annotate serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME iam.gke.io/gcp-service-account=$GSA_NAME@$PROJECT_ID.iam.gserviceaccount.com\n```\n- Verify the annotation:```\nkubectl describe serviceaccount \\\n --namespace $NAMESPACE $KSA_NAME\n```\n- **Optional:** Delete the any downloaded service account key files.If you created the Google service accounts with the `create-service-account` tool,  it may have created service account keys and downloaded the `.json` key files. When  using Workload Identity on GKE, you do not need these key files.You can delete the key files with the following command:```\nrm $HYBRID_FILES/service-accounts/*.json\n```\n### Verify Workload Identity\n- (Optional) You can see the status of your Kubernetes service accounts in the **Kubernetes:\n Workloads Overview** page in the Google Cloud Console. [Go to Workloads](https://console.cloud.google.com/kubernetes/workload/overview) **Note:** You may see an error status for the`apigee-cassandra-backup`and`apigee-cassandra-restore`service accounts.  This is because you are not currently running backup or restore, and these processes have not  been fully configured yet. For more information on Cassandra backup and restore, see [feedbackCassandra backup overview](/apigee/docs/hybrid/v1.11/cassandra-backup-overview) .\n- To check the status of the deployment again with`apigeectl check-ready`:```\n${APIGEECTL_HOME}/apigeectl check-ready -f ${HYBRID_FILES}/overrides/overrides.yaml\n```\n**Congratulations!** You've successfully configured Workload Identity for your hybrid clusters. In the next  step, you will configure the Apigee ingress gateway.\n## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 1: Expose Apigee ingress](/apigee/docs/hybrid/v1.11/install-expose-apigee-ingress) If the button's step matches the current step in the process, make the button disabled [2](/apigee/docs/hybrid/v1.11/install-deploy-proxy)", "guide": "Apigee"}