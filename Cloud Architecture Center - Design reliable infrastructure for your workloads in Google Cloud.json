{"title": "Cloud Architecture Center - Design reliable infrastructure for your workloads in Google Cloud", "url": "https://cloud.google.com/architecture/reference-patterns/overview", "abstract": "# Cloud Architecture Center - Design reliable infrastructure for your workloads in Google Cloud\nLast reviewed 2023-09-01 UTC\nAs described in [Platform availability](/architecture/infra-reliability-guide/building-blocks#platform-availability) , Google Cloud infrastructure is designed to support a target availability of 99.9% for a workload that's deployed in a single zone. The target availability is 99.99% for a multi-zone deployment and 99.999% for a multi-region deployment. This part of the [Google Cloud infrastructure reliability guide](/architecture/infra-reliability-guide) provides deployment guidance, example architectures, and design techniques that can help to protect your workloads against failures at the resource, zone, and region level.\n", "content": "## Avoid single points of failure\nApplications are typically composed of multiple interdependent components, each designed to perform a specific function. These components are typically grouped into tiers based on the function that they perform and their relationship with the other components. For example, a content-serving application might have three tiers: a web tier containing a load balancer and web servers; an app tier with a cluster of application servers; and a data tier for persistence. If any component of this application stack depends on a single infrastructure resource, a failure of that resource can affect the availability of the entire stack. For example, if the app tier runs on a single VM, and if the VM crashes, then the entire stack is effectively unavailable. Such a component is a [single point of failure (SPOF)](https://wikipedia.org/wiki/Single_point_of_failure) .\nAn application stack might have more than one SPOF. Consider the multi-tier application stack that's shown in the following diagram:\nAs shown in the preceding diagram, this example architecture contains a single load balancer, two web servers, a single app server, and a single database. The load balancer, app server, and database in this example are SPOFs. A failure of any of these components can cause user requests to the application to fail.\nTo remove the SPOFs in your application stack, distribute resources across locations and deploy redundant resources.\n**Note:** You might accept the Google Cloud global load balancer as a SPOF considering the stringent controls in Google Cloud and the defense-in-depth measures that Google implements to prevent global outages. To help reduce the risk of failure, manage changes to the load balancer carefully. Also, avoid or minimize dependencies on non-data plane actions, such as creating a new load balancer.\n## Distribute resources and create redundancy\nDepending on the reliability requirements of your application, you can choose from the following deployment architectures:\n| Architecture | Workload recommendation                          |\n|:---------------|:-----------------------------------------------------------------------------------------------------------------------------|\n| Multi-region | Workloads that are business-critical and where high availability is essential, such as retail and social media applications. |\n| Multi-zone  | Workloads that need resilience against zone outages but can tolerate some downtime caused by region outages.     |\n| Single-zone | Workloads that can tolerate downtime or can be deployed at another location when necessary with minimal effort.    |\n## Cost, latency, and operational considerations\nWhen you design a distributed architecture with redundant resources, besides the availability requirements of the application, you must also consider the effects on operational complexity, latency, and cost.\nIn a distributed architecture, you provision and manage a higher number of resources. The volume of cross-location network traffic is higher. You also store and replicate more data. As a result, the cost of your cloud resources in a distributed architecture is higher, and operating such deployments involves more complexity. For business-critical applications, the availability advantage of a distributed architecture might outweigh the increased cost and operational complexity.\nFor applications that aren't business-critical, the high availability that a distributed architecture provides might not be essential. Certain applications have other requirements that are more important than availability. For example, batch computing applications require low-latency and high-bandwidth network connections between the VMs. A single-zone architecture might be well suited for such applications, and it can also help you reduce data transfer costs.\n## Deployment architectures\nThis section presents the following architectural options to build infrastructure for your workloads in Google Cloud:\n- [Single-zone deployment](#single-zone) \n- [Multi-zone deployment](#multi-zone) \n- [Multi-region deployment with regional load balancing](#multi-region-deployment-with-regional-load-balancing) \n- [Multi-region deployment with global load balancing](#multi-region-deployment-with-global-load-balancing)", "guide": "Cloud Architecture Center"}