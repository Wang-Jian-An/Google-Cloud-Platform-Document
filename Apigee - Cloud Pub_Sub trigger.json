{"title": "Apigee - Cloud Pub/Sub trigger", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Cloud Pub/Sub trigger\n**Announcement:** Application Integration is now available for your Google Cloud project. You can now use both Apigee Integration and Application Integration within the same Google Cloud project. [Learn more](/apigee/docs/api-platform/integration/using-application-integration)\nThe **Cloud Pub/Sub trigger** lets you run your integration based on the events in your **Pub/Sub** middleware.\nUsing this trigger, you can execute an integration whenever a publisher writes a message to your chosen topic. When this trigger executes, it also writes the published message to  the **CloudPubSubMessage** output variable. Based on your requirements,  you can use this variable in your downstream triggers or tasks.\n**Note** : The topic that you configure for the trigger must be available in the same Google Cloud project as your integration.  Apigee does not support **Cloud Pub/Sub trigger** executions across different Google Cloud projects.\n", "content": "## Before you begin\nEnsure that you perform the following tasks in your Google Cloud project before configuring the **Cloud Pub/Sub trigger** .\n- Assign the following IAM roles to your [default service account](/iam/docs/service-accounts#default) (`service-` `` `@gcp-sa-apigee.iam.gserviceaccount.com`):\n- Confirm that you have a Pub/Sub topic. To create a new Pub/Sub topic:- Go to the Pub/Sub topics page in the [Cloud console](https://console.cloud.google.com) . [   Go to the Pub/Sub topics page](https://console.cloud.google.com/cloudpubsub/topicList) \n- Click **Create a topic** .\n- In the **Topic ID** field, provide a unique topic name.\n- Click **Save** .\n **Note:** You don't have to create a subscription for the trigger to work. Apigee automatically creates a   subscription for a topic, and you   can view all your subscriptions in the [Pub/Sub subscription page](https://console.cloud.google.com/cloudpubsub/subscription) .\nFor more information about managing access using IAM roles, see [Access control](/apigee/docs/api-platform/system-administration/manage-access) .\nFor information on granting roles to principals, see [Granting, changing, and revoking access](/iam/docs/granting-changing-revoking-access) .\n## Add a Cloud Pub/Sub trigger\n**Cloud Pub/Sub trigger**\n- In the [Apigee UI](https://apigee.google.com) , select your.\n- Click **Develop > Integrations** .\n- Select an existing integration or create a new integration by clicking **Create Integration** .If you are creating a new integration:- Enter a name and description in the **Create Integration** dialog.\n- Select a **Region** for the integration from the list of supported regions.\n- Click **Create** .\nThis opens the integration in the .\n- In thenavigation bar, click **+Add a task/trigger > Triggers** to view the list of available triggers.\n- Click and place the **Cloud Pub/Sub trigger** element to the designer.## Configure a Cloud Pub/Sub trigger\nClick the **Cloud Pub/Sub trigger** element in the integration editor to view the trigger configuration pane, and then do the following tasks:\nSpecify the topic the trigger should listen to in the **Pub/Sub topic** field in the following format:\n```\nprojects/PROJECT_ID/topics/TOPIC_ID\n```\nTo view all the available topics in your Google Cloud project, see the **Topic name** column in [Topics](https://console.cloud.google.com/cloudpubsub/topic/list)) .\n- is the Google Cloud project where your topic is created.\n- is the ID of your Pub/Sub topic.## Trigger Output\nFor each event, the **Cloud Pub/Sub trigger** generates a `CloudPubSubMessage` output variable  which you can use in your downstream tasks. The variable is in JSON format and has the [PubsubMessage](https://cloud.google.com/pubsub/docs/reference/rest/v1/PubsubMessage) structure.\n## Considerations\n- The maximum size of a Pub/Sub message is 10 MB. To understand all the limitations of Pub/Sub, see [Pub/Sub quotas and limits](/pubsub/quotas) .\n- It is possible that Pub/Sub writes the same message more than once to a topic. To understand  this behavior of Pub/Sub,  see [At-Least-Once delivery](/pubsub/docs/subscriber#at-least-once-delivery) .  Therefore, you must design your integration to be idempotent so that it doesn't allow  a message to be written more than once to a topic. **Note:** The`message_id`field in the message header  uniquely identifies a Pub/Sub message.", "guide": "Apigee"}