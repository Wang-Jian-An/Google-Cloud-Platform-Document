{"title": "Compute Engine - Customize the number of visible CPU cores", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Customize the number of visible CPU cores\nCustomizing the number of visible CPU cores can provide granular control over licensing costs, while maintaining the performance of networking and persistent disks. This customization reduces the number of vCPUs that are available to the virtual machine (VM) instance; it doesn't change the machine type or price.\nCompute Engine implements each virtual CPU (vCPU) as a single hardware multithread that runs on a physical CPU core. To reduce the number of vCPUs that are available to a VM, Compute Engine lets you customize the number of visible CPU cores.\nVisible cores are the CPU cores in the underlying hardware that your VMs consume. By default, the number of CPU cores that are visible to a VM is the number of vCPUs on the machine type divided by the number of [threads percore](/compute/docs/instances/set-threads-per-core) :\n- Visible CPU cores = vCPUs on the machine type / threads per core\nFor example, the `c2-standard-60` machine type specifies 60 vCPUs. Assuming the default of 2 threads per core, the number of visible CPU cores is 30. If you reduce the number of visible cores from 30 to 20, the number of functional vCPUs is reduced from 60 to 40.\nConsider customizing the number of visible CPU cores if both of the following apply:\n- You run software, such as [Windows Server or SQL Server](/compute/disks-image-pricing#premiumimages) , that is licensed based on the number of available vCPUs.\n- You use [predefined machine types](/compute/docs/machine-resource) , which don't let you modify the number of vCPUs or the amount of RAM.\nBefore customizing the number of vCPUs that are available to a VM, first consider using a [custom machine type](/compute/docs/general-purpose-machines#custom_machine_types) .\n#", "content": "## Required roles\nTo get the permissions that you need to customize the number of visible CPU cores,   ask your administrator to grant you the [Compute Instance Admin (v1) ](https://cloud.google.com/iam/docs/understanding-roles#compute.instanceAdmin.v1) ( `roles/compute.instanceAdmin.v1` ) IAM role on the project.    For more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nThis predefined role contains     the permissions required to customize the number of visible CPU cores. To see the exact permissions that are   required, expand the **Required permissions** section:\nYou might also be able to get   these permissions  with [custom roles](/iam/docs/creating-custom-roles) or  other [predefined roles](/iam/docs/understanding-roles) .\n## vCPUs and the number of threads per core\nThe total vCPUs on a machine type is the number of visible CPU cores multiplied by the number of threads per core. For most machine series, the number of threads per core is 2, but you can [manually set the number of threads percore](/compute/docs/instances/set-threads-per-core) to 1.\nThe following table shows how visible CPU cores, number of threads per core, and total available vCPUs are related using the `c2-standard-60` machine type as an example.\n| Machine type | Visible CPU cores | Threads per core | Available vCPUs |\n|:---------------|:--------------------|:-------------------|------------------:|\n| c2-standard-60 | 30 (default)  | 2 (default)  |    60 |\n| c2-standard-60 | 30 (default)  | 1     |    30 |\n| c2-standard-60 | 20     | 2 (default)  |    40 |\n| c2-standard-60 | 20     | 1     |    20 |\n## Performance considerations\nReducing the number of visible cores can impact the performance of your VM.- The performance limits of persistent disks depend on the machine type and aren't affected by the number of visible CPU cores. For more information, see [Block storage performance](/compute/docs/disks/performance#machine-type-disk-limits) .- The bandwidth limits of networking egress match the machine type and aren't affected by the number of visible CPU cores. However, networking performance does vary depending on the number of vCPUs that are accessible to the VM. For example, a`n2-standard-16`machine type with one visible CPU core might not be able to fully use a 32\u00a0Gbps connection.## Pricing\nReducing the number of visible cores can impact the cost of your VMs.- You can lower licensing costs for some operating systems by reducing the number of visible CPU cores. Applicable operating systems are those that charge you for each vCPU that is available to the VM, for example, Windows Server and SQL Server. For more information about the licensing options for these operating systems on Compute Engine, see [Microsoftlicenses](/compute/docs/instances/windows/ms-licensing) .- VM costs, quota, and capacity remain the same when you customize the number of visible CPU cores because Compute Engine charges, tracks quota, and allocates space on machine types for VMs as if they are using the number of CPU cores of the machine type. For more information about how Compute Engine bills for VMs, see [VM instance pricing](/compute/vm-instance-pricing) .## Limitations\n- You cannot customize the number of visible CPU cores while a VM is in the `RUNNING` state. For more information about VM states, see [VM instancelifecycle](/compute/docs/instances/instance-life-cycle) .\n- In the Google Cloud console, when the number of visible cores is reduced, the CPU utilization metric can't scale up to 100%. It is limited to the number of visible CPU cores divided by the maximum number of CPU cores.## Supported machine types and valid values for each\nMany [machine types](/compute/docs/machine-resource) support customization of the number of visible CPU cores. The value for the visible CPU core count must be a whole number. The maximum value is the number of vCPUs\u2014or GPUs for accelerator-optimized machine types\u2014on the machine type divided by the number of [threads per core](/compute/docs/instances/set-threads-per-core) for the VM.\nThe following table shows the machine types that support this customization, along with the corresponding valid values for visible CPU cores for machine types in those families.\n| Machine type family | Predefined vCPU count* | Valid values for visible CPU cores |\n|:----------------------|:-------------------------|:-------------------------------------|\n| General purpose  | General purpose   | General purpose      |\n| C3D     | \u2264 180     | Any         |\n| C3D     | 360      | Multiples of 2      |\n| C3     | 4, 8, 22, 44    | Multiples of 1      |\n| C3     | 88      | Multiples of 2      |\n| C3     | 176      | Multiples of 4      |\n| E2     | \u2264 32      | Any         |\n| N2     | \u2264 32      | Any         |\n| N2     | > 32      | Multiples of 2      |\n| N2D     | \u2264 24      | Any         |\n| N2D     | > 24      | Multiples of 2      |\n| N1     | \u2264 64      | Any         |\n| N1     | > 64      | Multiples of 2      |\n| N1 (TPU optimized) | 48      | Any         |\n| N1 (TPU optimized) | 96      | Multiples of 2      |\n| Storage-optimized  | Storage-optimized  | Storage-optimized     |\n| Z3 (Preview)   | 88      | Multiples of 2      |\n| Z3 (Preview)   | 176      | Multiples of 4      |\n| Compute-optimized  | Compute-optimized  | Compute-optimized     |\n| H3     | 88      | Multiples of 4      |\n| C2     | 4, 8, 16, 30    | Any         |\n| C2     | 60      | Multiples of 2      |\n| Memory-optimized  | Memory-optimized   | Memory-optimized      |\n| M3     | 128      | Multiples of 2      |\n| M3     | 32, 64     | Any         |\n| M2     | 208      | Multiples of 4      |\n| M2     | 416      | Multiples of 8      |\n| M1     | 40      | Any         |\n| M1     | 80, 96     | Multiples of 2      |\n| M1     | 160      | Multiples of 4      |\n| Accelerator-optimized | Accelerator-optimized | Accelerator-optimized    |\n| A3     | 208      | Multiples of 2      |\n| A2     | \u2264 48      | Any         |\n| A2     | 96      | Multiples of 2      |\n| G2     | \u2264 48      | Any         |\n| G2     | 96      | Multiples of 2      |\nThe name for most machine types contain the vCPU count. However, for A3 and A2 accelerator-optimized machine types, the name for the machine type contains the predefined GPU count. To see the vCPU count for the A3 and A2 accelerator-optimized machine types, review the [Accelerator-optimized machine family](/compute/docs/accelerator-optimized-machines) documentation.\n## Customize the number of visible CPU cores during VM creation\nTo customize the number of visible CPU cores while creating a single VM, use the Google Cloud console, gcloud CLI or the Compute Engine API.\nThe following example shows how to create a SQL Server VM with a reduced number of visible CPU cores.\nTo customize the number of visible CPU cores while creating a VM, do the following:- In **Machine configuration** > **Advanced configurations** > **Visible core count** , select the number of visible cores.\nTo create a SQL Server VM with a reduced number of visible CPU cores, use the following [gcloud compute instances createcommand](/sdk/gcloud/reference/compute/instances/create) :\n```\ngcloud compute instances create VM_NAME \\\n --image-project=windows-sql-cloud \\\n --image-family=sql-ent-2019-win-2019 \\\n --machine-type=MACHINE_TYPE \\\n --visible-core-count=VISIBLE_CORE_COUNT \\\n --zone=ZONE\n```\nReplace the following:- `` : the name of the VM.\n- `` : a supported machine type, for example, `c2-standard-60` .\n- `` : the number of visible CPU cores. For example, when using the `c2-standard-60` machine type, if set to `20` , and the number of threads per core is `2` , 40 of the 60 CPUs are visible.\n- `` : the zone to create the VM in.\nTo create a SQL Server VM with a reduced number of visible CPU cores, use the following [instances.insertmethod](/compute/docs/reference/rest/v1/instances/insert) :\n```\nPOST https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/instances\n{\n \"name\": \"VM_NAME\",\n ...\n \"advanced_machine_features\": {\n ...\n \"visibleCoreCount\": \"VISIBLE_CORE_COUNT\"\n },\n ...\n}\n```\nReplace the following:- `` : the ID of the project.\n- `` : the zone in which to create the VM.\n- `` : the name of the VM.\n- `` : the number of visible CPU cores. For example, when using the `c2-standard-60` machine type, if set to `20` , and the number of threads per core is `2` , 40 of the 60 CPUs are visible.## Customize the number of visible CPU cores on a group of VMs by using an instance template\nTo customize the number of visible CPU cores while creating a VM by using an instance template, use the Google Cloud console, gcloud CLI or the Compute Engine API.\nThe following example shows how to create a group of identical SQL Server VMs with a reduced number of visible CPU cores by using an instance template.\nTo customize the number of visible CPU cores while creating an instance template, do the following:- In **Machine configuration** > **Advanced configurations** > **Visible core count** , select the number of visible cores.\n- Create an instance template for SQL Server VMs, each with a reduced number of visible CPU cores, by using the following [gcloud computeinstance-templates createcommand](/sdk/gcloud/reference/compute/instance-templates/create) :```\ngcloud compute instance-templates create INSTANCE_TEMPLATE_NAME \\\n --image-project=windows-sql-cloud \\\n --image-family=sql-ent-2019-win-2019 \\\n --machine-type=MACHINE_TYPE \\\n --visible-core-count=VISIBLE_CORE_COUNT \\\n --zone=ZONE\n```Replace the following:- `` : the name of the instance template.\n- `` : a supported machine type, for example, `c2-standard-60` .\n- `` : the number of visible CPU cores. For example, when using the `c2-standard-60` machine type, if set to `20` , and the number of threads per core is `2` , 40 of the 60 CPUs are visible.\n- `` : the zone to create the VMs in.\n- Create the SQL Server VMs, each with a reduced number of visible CPU cores, by using the following [gcloud compute instances createcommand](/sdk/gcloud/reference/compute/instances/create) :```\ngcloud compute instances create INSTANCE_NAMES \\\n --source-instance-template=INSTANCE_TEMPLATE_NAME\n```Replace the following:- `` : the names of the VMs, separated by spaces, to create from the instance template\n- `` : the name of the instance template from which to create the VMs- Create an instance template for SQL Server VMs, each with a reduced number of visible CPU cores, by using the following [instanceTemplates.insertmethod](/compute/docs/reference/rest/v1/instanceTemplates/insert) :```\nPOST https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/global/instanceTemplates\n{\n \"name\": \"INSTANCE_TEMPLATE_NAME\",\n ...\n \"advanced_machine_features\": {\n ...\n \"visible_core_count\": \"VISIBLE_CORE_COUNT\"\n },\n ...\n}\n```Replace the following:- `` : the ID of the project.\n- `` : the name of the instance template.\n- `` : the number of visible CPU cores. For example, when using the `c2-standard-60` machine type, if set to `20` , and the number of threads per core is `2` , 40 of the 60 CPUs are visible.\n- Create the SQL Server VMs, each with a reduced number of visible CPU cores, by using the following [instances.insertmethod](/compute/docs/reference/rest/v1/instances/insert) :```\nPOST https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/instances?sourceInstanceTemplate=INSTANCE_TEMPLATE_NAME\n{\n \"name\": \"VM_NAME\",\n ...\n}\n```Replace the following:- `` : the ID of the project\n- `` : the zone to create the VM in\n- `` : the name of the instance template from which to create the VMs\n- `` : the name of the VM to create from the instance template\n## Customize the number of visible CPU cores\nTo customize the number of visible CPU cores on an existing VM, use the Google Cloud console, gcloud CLI or the Compute Engine API.\nIf you customized the number of visible CPU cores on a group of VMs by using an instance template, you must create a new instance template and then create new VMs from that instance template. For more information about instance templates, see [Instance templates](/compute/docs/instance-templates) .\nTo customize the number of visible CPU cores on an existing VM, do the following:- Stop the VM.\n- In **Machine configuration** > **Advanced configurations** > **Visible core count** , select the number of visible cores.\n- Restart the VM.\nTo update the value for the number of visible CPU cores on an existing VM, use the following steps. For more information, see [Update instanceproperties](/compute/docs/instances/update-instance-properties#update) .- Export the existing VM properties to a file by using the [gcloudcompute instances exportcommand](/sdk/gcloud/reference/compute/instances/export) .\n- In the file containing the exported properties, modify or add the value for the following:```\nadvancedMachineFeatures:\n visibleCoreCount: VISIBLE_CORE_COUNT\n```\n- Update the VM's properties by using the [gcloud compute instancesupdate-from-filecommand](/sdk/gcloud/reference/compute/instances/update-from-file) with `--most-disruptive-allowed-action=RESTART` .\nTo update the visible CPU core count of the VM, use the following [instances.update method](/compute/docs/reference/rest/v1/instances/update) :\n```\nPUT https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/instances/VM_NAME?most_disruptive_allowed_action=RESTART\n{\n ...\n \"advanced_machine_features\": {\n ...\n \"visible_core_count\": \"VISIBLE_CORE_COUNT\"\n },\n ...\n}\n```\nReplace the following:- `` : the ID of the project\n- `` : the zone that contains the VM\n- `` : the name of the VM from which to export properties\n- `` : the number of visible CPU cores## What's next\n- Learn how to [view the number of visible CPU cores](/compute/docs/instances/view-visible-cores) .\n- Learn about the [licensing options for Microsoft software](/compute/docs/instances/windows/ms-licensing) .\n- Learn how to [set the number of threads per core](/compute/docs/instances/set-threads-per-core) .\n- Learn about the [operating systems that you can run on Compute Engine VMs](/compute/docs/images/os-details) .", "guide": "Compute Engine"}