{"title": "Apigee - Upgrading Apigee hybrid", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Upgrading Apigee hybrid\nYou are currently viewing version 1.1 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\n", "content": "## \n Upgrading to a new version\nYou cannot upgrade from 1.0.0 to 1.1.0 or any later versions. Version 1.1.0 and later versions are not backward compatible with Version 1.0.0. If you are using Version 1.0.0 and wish to upgrade, you must perform a new installation.\nFollow these steps to upgrade Apigee hybrid to a new version:\n## \n Download and install a new version of apigeectl.\n[apigeectl](/apigee/docs/hybrid/v1.1/cli-reference) is the command-line interface (CLI) for installing and managing Apigee hybrid in a Kubernetes cluster.\nDownload the version of `apigeectl` that you want to upgrade to:\n- Download the release package for your operating system: **Mac 64 bit:** ```\ncurl -LO \\\n https://storage.googleapis.com/apigee-release/hybrid/apigee-hybrid-setup/version_number/apigeectl_mac_64.tar.gz\n``` **Linux 64 bit** ```\ncurl -LO \\\n https://storage.googleapis.com/apigee-release/hybrid/apigee-hybrid-setup/version_number/apigeectl_linux_64.tar.gz\n``` **Mac 32 bit:** ```\ncurl -LO \\\n https://storage.googleapis.com/apigee-release/hybrid/apigee-hybrid-setup/version_number/apigeectl_mac_32.tar.gz\n``` **Linux 32 bit** ```\ncurl -LO \\\n https://storage.googleapis.com/apigee-release/hybrid/apigee-hybrid-setup/version_number/apigeectl_linux_32.tar.gz\n```\n- Identify the base installation directory that was created when Apigee hybrid  was [originally installed](/apigee/docs/hybrid/v1.1/install-download-install) . The  base directory is directory in which the`$APIGEEGTL_HOME`directory resides.  In the following example,  the base directory is`/Users/myhome/hybrid`:```\necho $APIGEECTL_HOME\n/Users/myhome/hybrid/apigeectl\n```\n- Extract the downloaded gzip file contents into the Apigee hybrid base directory:```\ntar xvzf filename.tar.gz -C path-to-base-directory\n```\n- `cd`to the base directory.\n- The tar contents are, by default, expanded into a directory with the version and  platform in its name. For example: `./apigeectl_1.2.0-f7b96a8_linux_64` .\n- Rename the current`apigeectl`directory. For example, if the current version is 1.1.1, rename the`apigeectl`directory to`apigeectl_1.1.1`.\n- Rename the newly extracted installation directory to`apigeectl`. This is now where the environment`$APIGEECTL_HOME`points to.\n- Clean up completed jobs for the hybrid runtime namespace,  whereis the  namespace specified in your overrides file, if you specified a namespace. If not, the default namespace  is`apigee`:```\nkubectl delete job -n namespace \\\n $(kubectl get job -n namespace -o=jsonpath='{.items[?(@.status.succeeded==1)].metadata.name}')\n```\n- Clean up completed jobs for the`apigee-system`namespace:```\nkubectl delete job -n apigee-system \\\n $(kubectl get job -n apigee-system -o=jsonpath='{.items[?(@.status.succeeded==1)].metadata.name}')\n```\n- Clean up completed jobs for the`istio-system`namespace:```\nkubectl delete job -n istio-system \\\n $(kubectl get job -n istio-system -o=jsonpath='{.items[?(@.status.succeeded==1)].metadata.name}')\n```\n- `cd`to the`./hybrid-files`directory:\n- Initialize`apigeectl`for the new version:```\n$APIGEECTL_HOME/apigeectl init -f my-overrides.yaml\n```\n- Check to determine when the initialization is complete:```\n$APIGEECTL_HOME/apigeectl check-ready -f my-overrides.yaml\n```\n- When`check-ready`passes, run`apigeectl apply`:```\n$APIGEECTL_HOME/apigeectl apply -f my-overrides.yaml\n```\n- Re-run`check-ready`to determine when the upgrade is complete.## \n Rolling back an upgrade\nFollow these steps to roll back a previous upgrade:\n- Clean up completed jobs:```\nkubectl delete job -n namespace $(kubectl get job -n namespace -o=jsonpath='{.items[?(@.status.succeeded==1)].metadata.name}')\n```\n- In the root directory of the installation you want to roll back to, run`apigeectl init`and then run`apigeectl apply`:```\n $APIGEECTL_HOME/apigeectl init -f my-overrides.yaml\n $APIGEECTL_HOME/apigeectl apply -f my-overrides.yaml\n```", "guide": "Apigee"}