{"title": "Cloud SQL - Use a managed import to set up replication from external databases", "url": "https://cloud.google.com/sql/docs/postgres/replication/managed-import-replication-from-external", "abstract": "# Cloud SQL - Use a managed import to set up replication from external databases\nThis page describes how to set up and use a managed import for data when replicating from an external server to Cloud SQL.\nYou must complete all the steps on this page. When finished, you can administer and monitor the source representation instance the same way as you would any other Cloud SQL instance.\n", "content": "## Before you begin\nBefore you begin, complete these steps:\n- [Configure the external server](/sql/docs/postgres/replication/configure-replication-from-external#setting_up_the_external_server_for_replication) .\n- [Create the source representation instance](/sql/docs/postgres/replication/configure-replication-from-external#setup-source-instance) .\n- [Set up the Cloud SQL replica](/sql/docs/postgres/replication/configure-replication-from-external#setup-replica-instance) .## Verify your replication settings\nAfter your setup is complete, ensure that the Cloud SQL replica can replicate from the external server.\nThe following external sync settings must be correct.\n- Connectivity between the Cloud SQL replica and external server\n- Replication user privileges\n- Version compatibility\n- The Cloud SQL replica is not already replicating\nTo verify these settings, open a Cloud Shell terminal and enter the following commands:\n```\ngcloud auth loginACCESS_TOKEN=\"$(gcloud auth print-access-token)\"curl --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\u00a0 \u00a0 \u00a0--header 'Content-Type: application/json' \\\u00a0 \u00a0 \u00a0--data '{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"syncMode\": \"SYNC_MODE\"\u00a0 \u00a0 \u00a0 \u00a0}' \\\u00a0 \u00a0 \u00a0-X POST \\\u00a0 \u00a0 \u00a0https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/REPLICA_INSTANCE/verifyExternalSyncSettings\n```\n```\ngcloud auth loginACCESS_TOKEN=\"$(gcloud auth print-access-token)\"curl --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\u00a0 \u00a0 \u00a0--header 'Content-Type: application/json' \\\u00a0 \u00a0 \u00a0--data '{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"syncMode\": \"online\"\u00a0 \u00a0 \u00a0 \u00a0}' \\\u00a0 \u00a0 \u00a0-X POST \\\u00a0 \u00a0 \u00a0https://sqladmin.googleapis.com/sql/v1beta4/projects/myproject/instances/myreplica/verifyExternalSyncSettings\n```\nThese calls return a list of type `sql#externalSyncSettingErrorList` .\nIf the list is empty, there are no errors. A response without errors appears like this: `{   \"kind\": \"sql#externalSyncSettingErrorList\"  }`\n| Property   | Description                                           |\n|:-----------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| SYNC_MODE  | Ensures that you can keep the Cloud SQL replica and the external server in sync after replication is set up. Sync modes include EXTERNAL_SYNC_MODE_UNSPECIFIED, ONLINE, and OFFLINE. |\n| PROJECT_ID  | The ID of your project in Google Cloud.                                    |\n| REPLICA_INSTANCE | The ID of your Cloud SQL replica.                                     |\n## Start replication on the external server\nAfter verifying that you can replicate from the external server, start the replication. The speed for performing the replication for the initial import process is up to 500 GB per hour. However, this speed can vary based on the machine tier, data disk size, network throughput, and nature of your database.\n```\ngcloud auth loginACCESS_TOKEN=\"$(gcloud auth print-access-token)\"curl --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\u00a0 \u00a0 \u00a0--header 'Content-Type: application/json' \\\u00a0 \u00a0 \u00a0--data '{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"syncMode\": \"SYNC_MODE\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"skipVerification\": \"SKIP_VERIFICATION\"\u00a0 \u00a0 \u00a0 \u00a0}' \\\u00a0 \u00a0 \u00a0-X POST \\\u00a0 \u00a0 \u00a0https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/REPLICA_INSTANCE/startExternalSync\n```\n```\ngcloud auth loginACCESS_TOKEN=\"$(gcloud auth print-access-token)\"curl --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\u00a0 \u00a0 \u00a0--header 'Content-Type: application/json' \\\u00a0 \u00a0 \u00a0--data '{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"syncMode\": \"online\"\u00a0 \u00a0 \u00a0 \u00a0}' \\\u00a0 \u00a0 \u00a0-X POST \\\u00a0 \u00a0 \u00a0https://sqladmin.googleapis.com/sql/v1beta4/projects/MyProject/instances/replica-instance/startExternalSync\n```\n| Property   | Description                                    |\n|:------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------|\n| SYNC_MODE   | Verifies that you can keep the Cloud SQL replica and external server in sync after replication is set up.            |\n| SKIP_VERIFICATION | Whether or not to skip the built-in verification step before syncing your data. Only recommended if you have already verified your replication settings. |\n| PROJECT_ID  | The ID of your project in Google Cloud.                             |\n| REPLICA_INSTANCE | The ID of your Cloud SQL replica.                              |\n## Monitor the migration\nOnce you start replication from the external server, you need to monitor replication. To learn more, see [Monitoring replication](/sql/docs/postgres/replication/configure-replication-from-external#monitor_replication) . You can then complete your migration.\n## Troubleshoot\nConsider the following troubleshooting options:\n| Issue             | Troubleshooting                                                                                                                                                                                                                               |\n|:--------------------------------------------------------||\n| Read replica didn't start replicating on creation.  | There's probably a more specific error in the log files. Inspect the logs in Cloud Logging to find the actual error.                                                                                                                                                                                                      |\n| Unable to create read replica - invalidFlagValue error. | One of the flags in the request is invalid. It could be a flag you provided explicitly or one that was set to a default value. First, check that the value of the max_connections flag is greater than or equal to the value on the primary. If the max_connections flag is set appropriately, inspect the logs in Cloud Logging to find the actual error.                                                                                                                                           |\n| Unable to create read replica - unknown error.   | There's probably a more specific error in the log files. Inspect the logs in Cloud Logging to find the actual error. If the error is: set Service Networking service account as servicenetworking.serviceAgent role on consumer project, then disable and re-enable the Service Networking API. This action creates the service account necessary to continue with the process.                                                                                                                                      |\n| Disk is full.           | The primary instance disk size can become full during replica creation. Edit the primary instance to upgrade it to a larger disk size.                                                                                                                                                                                                 |\n| Disk space increases significantly.      | A slot that's not actively used to track data causes PostgreSQL to hold onto WAL segments indefinitely, causing the disk space to grow indefinitely. If you use the logical replication and decoding features in Cloud SQL, replication slots are created and dropped automatically. Unused replication slots can be detected by querying the pg_replication_slots system view and filtering on the active column. Unused slots can be dropped to remove WAL segments using the pg_drop_replication_slot command.                                                                                                       |\n| The replica instance is using too much memory.   | The replica uses temporary memory to cache often-requested read operations, which can lead it to use more memory than the primary instance. Restart the replica instance to reclaim the temporary memory space.                                                                                                                                                                               |\n| Replication stopped.         | The maximum storage limit was reached and automatic storage increase isn't enabled. Edit the instance to enable automatic storage increase.                                                                                                                                                                                                |\n| Replication lag is consistently high.     | The write load is too high for the replica to handle. Replication lag takes place when the SQL thread on a replica is unable to keep up with the IO thread. Some kinds of queries or workloads can cause temporary or permanent high replication lag for a given schema. Some of the typical causes of replication lag are: Slow queries on the replica. Find and fix them. All tables must have a unique/primary key. Every update on such a table without a unique/primary key causes full table scans on th replica. Queries like DELETE ... WHERE field < 50000000 cause replication lag with row-based replication since a huge number of updates are piled up on the replica. Some possible solutions include: Edit the instance to increase the size of the replica. Reduce the load on the database. Send read traffic to the read replica. Index the tables. Identify and fix slow write queries. Recreate the replica. |\n| Errors when rebuilding indexes in PostgreSQL 9.6.  | You get an error from PostgreSQL informing you that you need to rebuild a particular index. This can be done only on the primary instance. If you create a new replica instance, you soon get the same error again. Hash indexes are not propagated to replicas in PostgreSQL versions below 10. If you must use hash indexes, upgrade to PostgreSQL 10+. Otherwise, if you also want to use replicas, don't use hash indexes in PostgreSQL 9.6.                                                                                                                      |\n| Query on the primary instance is always running.  | After creating a replica, the query SELECT * from pg_stat_activity where state = 'active' and pid = XXXX and username = 'cloudsqlreplica' is expected to run continuously on your primary instance.                                                                                                                                                                                  |\n| Replica creation fails with timeout.     | Long-running uncommitted transactions on the primary instance can cause read replica creation to fail. Recreate the replica after stopping all running queries.                                                                                                                                                                                           |\n### Review your replication logs\nWhen you [verify your replication settings](#verify-replication) , logs are produced.\nYou can view these logs by following these steps:\n- Go to the Logs Viewer in the Google Cloud console. [Go to the Logs Viewer](https://console.cloud.google.com/logs?resource=cloudsql_database) \n- Select the Cloud SQL replica from the **Instance** dropdown.\n- Select the`replication-setup.log`log file.\nIf the Cloud SQL replica is unable to connect to the external server, confirm the following:\n- Any firewall on the external server is configured to allow connections   from the Cloud SQL replica's [outgoing IP address](#outgoing-ip) .\n- Your SSL/TLS configuration is correct.\n- Your replication user, host, and password are correct.## What's next\n- Learn about [updating an instance](/sql/docs/postgres/edit-instance) .\n- Learn about [managing replicas](/sql/docs/postgres/replication/manage-replicas) .\n- Learn about [monitoring instances](/sql/docs/postgres/monitor-instance) .\n- Learn about [promoting your Cloud SQL replica](/sql/docs/postgres/replication/manage-replicas#promote-replica) .", "guide": "Cloud SQL"}