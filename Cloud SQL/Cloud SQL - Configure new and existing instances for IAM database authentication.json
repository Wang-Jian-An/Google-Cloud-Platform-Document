{"title": "Cloud SQL - Configure new and existing instances for IAM database authentication", "url": "https://cloud.google.com/sql/docs/postgres/create-edit-iam-instances", "abstract": "# Cloud SQL - Configure new and existing instances for IAM database authentication\nThis page has procedures for creating or editing Cloud SQL instances to allow users or service accounts that are configured to use Cloud SQL IAM database authentication. To learn more about the Cloud SQL IAM integration, see [IAM authentication](/sql/docs/postgres/iam-authentication) .\nA newly-created instance has a `postgres` database.\n", "content": "## Before you begin\n- Make sure you have the Cloud SQL Admin and Compute Viewer roles on  your user account. [ Go to the IAM page](https://console.cloud.google.com/iam-admin/iam) [Learn more](/sql/docs/postgres/roles-and-permissions) about roles and permissions.\n**Note:** By default, you can have up to 1000 instances per project except in some cases, where you might have a limit of 100. [File a support case](https://support.google.com/googlecloud/answer/1041916) to request an increase.\n## Configure new instances for IAM database authentication\nCloud SQL uses a flag to enable and disable IAM user connections on an instance. In this procedure, you enable that flag.\nTo configure a new instance that uses Cloud SQL IAM database authentication:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Click **Create Instance** .\n- Click **Choose PostgreSQL** .\n- Enter a name for the **Instance ID** . Don't include sensitive or personally identifiable information in your instance name; it's externally visible. You don't need to include the project ID in the instance name. The project ID is included automatically where appropriate (for example, in the log files).\n- Enter a password for the default admin user.\n- From the **Database version** drop-down menu, select a  database version.\n- In the **Choose region and zonal availability** section, select the region and zone for your instance. Place your instance in the same region as the resources that access it. The region you select can't be modified in the future. Usually, you don't need to specify a zone. **Note:** If there's a resource location constraint on your organization policy, then you must select one of the regions that the organization policy allows. If a constraint exists, then a message appears about the constraint. [Learn more](/resource-manager/docs/organization-policy/defining-locations) .\n- In the **Customize your instance** section, click **Show Configuration Options** , and then expand **Flags** .\n- Click **Add Flag** .\n- From the **Choose a flag** drop-down menu, select the`cloudsql.iam_authentication`flag. Make sure that **On** is selected as the value for this flag, and then click **Done** .\n- Configure other instance settings, as needed. For more information about settings, see [Settings](/sql/docs/postgres/instance-settings#settings-2ndgen) .\n- Click **Create Instance** .\nRun ` [gcloud sql instances create](/sdk/gcloud/reference/sql/instances/create) ` with the `--database-flags` parameter set to `cloudsql.iam_authentication=on` .\nReplace the following:- : The name of the new instance.\n- : The PostgreSQL version (such as POSTGRES_9_6,  POSTGRES_10, POSTGRES_11, or POSTGRES_12).\n- : The number of cores in the machine.\n- : The amount of memory in the machine. A size  unit should be provided (such as, 3072MiB or 9GiB).\n- : Preferred Compute Engine zone (such as us-central1-a, or us-central1-b).\n- : Create a password for the root user.\n```\ngcloud sql instances create INSTANCE_NAME \\--database-version=POSTGRES_VERSION \\--cpu=NUMBER_OF_CORES \\--memory=AMOUNT_OF_MEMORY \\--zone=ZONE_NAME \\--root-password=PASSWORD \\--database-flags=cloudsql.iam_authentication=on\n```To create an instance with IAM database authentication enabled, use a [Terraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance) .\n [  cloud_sql/postgres_instance_iam_db_auth/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_iam_db_auth/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_iam_db_auth/main.tf) \n```\nresource \"google_sql_database_instance\" \"default\" {\n name    = \"postgres-db-auth-instance-name-test\"\n region   = \"us-west4\"\n database_version = \"POSTGRES_14\"\n settings {\n tier = \"db-custom-2-7680\"\n database_flags {\n  name = \"cloudsql.iam_authentication\"\n  value = \"on\"\n }\n }\n # set `deletion_protection` to true, will ensure that one cannot accidentally\n # delete this instance by use of Terraform whereas\n # `deletion_protection_enabled` flag protects this instance at the GCP level.\n deletion_protection = false\n}\n```To apply your Terraform configuration in a Google Cloud project, complete the steps in the following sections.## Prepare Cloud Shell\n- Launch [Cloud Shell](https://shell.cloud.google.com/) .\n- Set the default Google Cloud project  where you want to apply your Terraform configurations.You only need to run this command once per project, and you can run it in any directory.```\nexport GOOGLE_CLOUD_PROJECT=PROJECT_ID\n```Environment variables are overridden if you set explicit values in the Terraform  configuration file.\n## Prepare the directoryEach Terraform configuration file must have its own directory (also called a ).- In [Cloud Shell](https://shell.cloud.google.com/) , create a directory and a new  file within that directory. The filename must have the`.tf`extension\u2014for example`main.tf`. In this  tutorial, the file is referred to as`main.tf`.```\nmkdir DIRECTORY && cd DIRECTORY && touch main.tf\n```\n- If you are following a tutorial, you can copy the sample code in each section or step.Copy the sample code into the newly created `main.tf` .Optionally, copy the code from GitHub. This is recommended  when the Terraform snippet is part of an end-to-end solution.\n- Review and modify the sample parameters to apply to your environment.\n- Save your changes.\n- Initialize Terraform. You only need to do this once per directory.```\nterraform init\n```Optionally, to use the latest Google provider version, include the `-upgrade` option:```\nterraform init -upgrade\n```\n## Apply the changes\n- Review the configuration and verify that the resources that Terraform is going to create or  update match your expectations:```\nterraform plan\n```Make corrections to the configuration as necessary.\n- Apply the Terraform configuration by running the following command and entering`yes`at the prompt:```\nterraform apply\n```Wait until Terraform displays the \"Apply complete!\" message.\n- [Open your Google Cloud project](https://console.cloud.google.com/) to view  the results. In the Google Cloud console, navigate to your resources in the UI to make sure  that Terraform has created or updated them.\n **Note:** Terraform samples typically assume that the required APIs are enabled in your Google Cloud project.To delete your changes, do the following:- To disable deletion protection, in your Terraform configuration file set the`deletion_protection`argument to`false`.```\ndeletion_protection = \"false\"\n```\n- Apply the updated Terraform configuration by running the following command and    entering`yes`at the prompt:```\nterraform apply\n```\n- Remove resources previously applied with your Terraform configuration by running the following command and entering `yes` at the prompt:```\nterraform destroy\n```\nDo not include sensitive or personally identifiable information (PII) in your instance name; it is externally visible.\nYou do not need to include the project ID in the instance name. The project ID is included automatically where needed (for example, in the log files).\nBefore using any of the request data, make the following replacements:- : The desired instance ID\n- : The desired region, such as us-east-1\n- : Your project ID\n- : The location ID\n- : Enum string of the database version.  For example:`POSTGRES_12`\n- : The password for the root user\n- : Enum string of the machine (tier) type, as:`db-custom-[CPUS]-[MEMORY_MBS]`\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1/projects/PROJECT_ID/locations/LOCATION_ID/instances\n```\nRequest JSON body:\n```\n{\n \"name\": \"INSTANCE_ID\",\n \"region\": \"REGION\",\n \"databaseVersion\": \"DATABASE_VERSION\",\n \"rootPassword\": \"PASSWORD\",\n \"settings\": {\n \"tier\": \"MACHINE_TYPE\",\n \"backupConfiguration\": {\n  \"enabled\": true\n },\n \"databaseFlags\": [  {\n  \"name\": \"cloudsql.iam_authentication\",\n  \"value\": \"on\"\n  }\n ]\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1/projects/PROJECT_ID/instances/INSTANCE_ID\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-01T19:13:21.834Z\",\n \"operationType\": \"CREATE\",\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"INSTANCE_ID\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\nTo see how the\n [underlying REST API request](/sql/docs/postgres/admin-api/rest/v1beta4/instances/insert) \nis constructed for this task, see the\n [APIs Explorer on the instances:insert page](/sql/docs/postgres/admin-api/rest/v1beta4/instances/insert) \n.\nDo not include sensitive or personally identifiable information (PII) in your instance name; it is externally visible.\nYou do not need to include the project ID in the instance name. The project ID is included automatically where needed (for example, in the log files).\nBefore using any of the request data, make the following replacements:- : The desired instance ID\n- : The desired region, such as us-east-1\n- : Your project ID\n- : The location ID\n- : Enum string of the database version.  For example:`POSTGRES_12`\n- : The password for the root user\n- : Enum string of the machine (tier) type, as:`db-custom-[CPUS]-[MEMORY_MBS]`\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/locations/LOCATION_ID/instances\n```\nRequest JSON body:\n```\n{\n \"name\": \"INSTANCE_ID\",\n \"region\": \"REGION\",\n \"databaseVersion\": \"DATABASE_VERSION\",\n \"rootPassword\": \"PASSWORD\",\n \"settings\": {\n \"tier\": \"MACHINE_TYPE\",\n \"backupConfiguration\": {\n  \"enabled\": true\n },\n \"databaseFlags\": [  {\n  \"name\": \"cloudsql.iam_authentication\",\n  \"value\": \"on\"\n  }\n ]\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_ID\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-01T19:13:21.834Z\",\n \"operationType\": \"CREATE\",\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"INSTANCE_ID\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\nTo see how the\n [underlying REST API request](/sql/docs/postgres/admin-api/rest/v1beta4/instances/insert) \nis constructed for this task, see the\n [APIs Explorer on the instances:insert page](/sql/docs/postgres/admin-api/rest/v1beta4/instances/insert) \n.\n## Configure existing instances for Cloud SQL IAM database authentication\nTo configure IAM database authentication on an existing instance:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Click **Edit** .\n- In the **Customize your instance** section, expand **Flags** .\n- Click **Add Flag** .\n- From the **Choose a flag** drop-down menu, select the`cloudsql.iam_authentication`flag. Make sure that **On** is selected as the value for this flag, and then click **Done** .\n- Configure other instance settings, as needed. For more information about settings, see [Settings](/sql/docs/postgres/instance-settings#settings-2ndgen) .\n- Click **Save** .\nFor information about installing and getting started with the gcloud CLI, see [Install the gcloud CLI](/sdk/docs/install) . For information about starting Cloud Shell, see [Use Cloud Shell](/shell/docs/using-cloud-shell) .\nFor this procedure, use `` ` [gcloud sql instances patch](/sdk/gcloud/reference/sql/instances/patch) ` .\nReplace the following:- : The name of the new instance.\n```\ngcloud sql instances patch INSTANCE_NAME \\--database-flags=cloudsql.iam_authentication=on\n```\nThis resets all other existing database flag settings. For further guidance on setting database flags, see [Set a database flag](/sql/docs/postgres/flags#set_a_database_flag) .Before using any of the request data, make the following replacements:- : Your project ID\n- : The location ID\n- : The desired instance ID\n- : The desired region\n- : Enum string of the database version.  For example:`POSTGRES_12`\n- : The password for the root user\n- : Enum string of the machine (tier) type, as:`db-custom-[CPUS]-[MEMORY_MBS]`\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1/projects/PROJECT_ID/locations/LOCATION_ID/instances\n```\nRequest JSON body:\n```\n{\n \"name\": \"INSTANCE_ID\",\n \"region\": \"REGION\",\n \"databaseVersion\": \"DATABASE_VERSION\",\n \"rootPassword\": \"PASSWORD\",\n \"settings\": {\n \"tier\": \"MACHINE_TYPE\",\n \"backupConfiguration\": {\n  \"enabled\": true\n }\n \"databaseFlags\":\n [  {\n  \"name\": \"cloudsql.iam_authentication\",\n  \"value\": \"on\"\n  }\n ]\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1/projects/PROJECT_ID/instances/INSTANCE_ID\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-01T19:13:21.834Z\",\n \"operationType\": \"CREATE\",\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"INSTANCE_ID\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The location ID\n- : The desired instance ID\n- : The desired region\n- : Enum string of the database version.  For example:`POSTGRES_12`\n- : The password for the root user\n- : Enum string of the machine (tier) type, as:`db-custom-[CPUS]-[MEMORY_MBS]`\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/locations/LOCATION_ID/instances\n```\nRequest JSON body:\n```\n{\n \"name\": \"INSTANCE_ID\",\n \"region\": \"REGION\",\n \"databaseVersion\": \"DATABASE_VERSION\",\n \"rootPassword\": \"PASSWORD\",\n \"settings\": {\n \"tier\": \"MACHINE_TYPE\",\n \"backupConfiguration\": {\n  \"enabled\": true\n }\n \"databaseFlags\":\n [  {\n  \"name\": \"cloudsql.iam_authentication\",\n  \"value\": \"on\"\n  }\n ]\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_ID\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-01T19:13:21.834Z\",\n \"operationType\": \"CREATE\",\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"INSTANCE_ID\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\n## What's next\n- Learn more about [IAM database authentication](/sql/docs/postgres/authentication) .\n- Learn how to [configure read replica logins for IAM database authentication](/sql/docs/postgres/replication/create-replica#configure_iam_replicas) .\n- Learn how to [create users and service accounts that use Cloud SQL IAM database authentication](/sql/docs/postgres/add-manage-iam-users#creating-a-database-user) .\n- Learn how to [log in to a Cloud SQL database using IAM database authentication](/sql/docs/postgres/iam-logins) .\n- Learn how to [manage users and service accounts for IAM database authentication](/sql/docs/postgres/add-manage-iam-users) .", "guide": "Cloud SQL"}