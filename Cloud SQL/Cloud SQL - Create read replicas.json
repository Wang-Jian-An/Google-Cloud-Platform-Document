{"title": "Cloud SQL - Create read replicas", "url": "https://cloud.google.com/sql/docs/postgres/replication/create-replica", "abstract": "# Cloud SQL - Create read replicas\nThis page describes how to create a read replica for a Cloud SQL instance.\nA read replica is a copy of the primary instance that reflects changes to the primary in almost real time, in normal circumstances. You can use a read replica to offload read requests or analytics traffic from the primary instance.\nAdditionally, for disaster recovery, you can perform a regional migration. If a replica is a [cross-region replica](/sql/docs/postgres/replication/cross-region-replicas) , you can perform a failover to another region; specifically, you can promote a replica to a standalone instance (in which case, existing replicas would not consider that instance as primary).\nFor more information about how replication works, see [Replication in Cloud SQL](/sql/docs/postgres/replication) .\n", "content": "## Before you begin\nIf you are creating the first replica for this instance, ensure that the instance meets the requirements for primary instances. [Learn more](/sql/docs/postgres/replication#requirements) .\n## Create a read replica\nThe steps for creating a read replica are below.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Find the instance for which you want to create a replica, and then open the`more actions`menu at the far right of the listing.\n- Select **Create read replica** .If you don't see that choice, then the instance is a replica; you can't create  a replica of a replica.\n- In the **Customize your instance** section of the page,  update settings for your replica. Begin by clicking **Show configuration options** to display the groups of settings. Then, expand the desired groups to review  and customize the settings. A **Summary** of all the options you select  appears on the right. Customizing these settings is optional. Defaults are assigned  in every case where no customizations are made.For more details about each setting, see the [About instance settings](/sql/docs/postgres/instance-settings) page.For example, to allow other Google Cloud services, such as   BigQuery, to access data in Cloud SQL and make queries against   this data over an internal connection, expand the **Connections** group, and then   deselect the **Public IP** check box.\n- Click **Create replica** .Cloud SQL creates a backup, if needed, and creates the replica.  You are returned to the instance page for the primary.\nCreate the replica:\n```\ngcloud sql instances create REPLICA_NAME \\--master-instance-name=MASTER_INSTANCE_NAME\n```\nYou can specify a different tier size using the `--tier` parameter, if needed.\nYou can specify a different region using the `--region` parameter.\nIf the primary instance has an internal IP address only, and you want to   allow other Google Cloud services, such as BigQuery, to   access data in Cloud SQL and make queries against this data over   an internal connection, then add the `--enable-google-private-path` parameter to the command.\nYou must create the replica in the same VPC network as the primary instance. You can also specify an `allocated-ip-range-name` in that VPC network. If no range is specified, the replica is created in a random range.\nTo create a read replica, use a [Terraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance) .\n [  cloud_sql/postgres_instance_replica/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_replica/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_replica/main.tf) \n```\nresource \"google_sql_database_instance\" \"read_replica\" {\n name     = \"postgres-replica-instance-name\"\n master_instance_name = google_sql_database_instance.primary.name\n region    = \"europe-west4\"\n database_version  = \"POSTGRES_14\"\n settings {\n tier    = \"db-custom-2-7680\"\n availability_type = \"ZONAL\"\n disk_size   = \"100\"\n }\n # set `deletion_protection` to true, will ensure that one cannot accidentally delete this instance by\n # use of Terraform whereas `deletion_protection_enabled` flag protects this instance at the GCP level.\n deletion_protection = false\n}\n```Use the [insert](/sql/docs/postgres/admin-api/rest/v1/instances/insert) method of the instances resource to create the read replica. The region  and databaseVersion properties must be the same as the master.\nBefore using any of the request data, make the following replacements:- : The project ID\n- : Enum version string (for example, POSTGRES_12)\n- : The name of the primary instance\n- : The region of the primary instance\n- : The region of the replica instance\n- : The name of the replica instance\n- : Enum string of the machine type. For example: \"db-custom-1-3840\"\n- : The authorized network that you're adding or selecting to create a private connection.\nYou set the value of the`ipv4Enabled`parameter to`false`because you want the Cloud SQL instance to be associated with a private IP address, not a public IP one.\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances\n```\nRequest JSON body:\n```\n{\n \"masterInstanceName\": \"primary-instance-name\",\n \"project\": \"project-id\",\n \"databaseVersion\": \"database-version\",\n \"name\": \"replica-name\",\n \"region\": \"replica-region\",\n \"settings\":\n {\n \"tier\": \"machine-type\",\n \"settingsVersion\": 0,\n \"ipConfiguration\": {\n object (IpConfiguration)\n },\n {\n \"ipv4Enabled\": false,\n \"privateNetwork\": private-network,\n \"requireSsl\": boolean,\n \"authorizedNetworks\": [ {\n  object (AclEntry)\n }\n ],\n \"allocatedIpRange\": string\n }\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:Use the [insert](/sql/docs/postgres/admin-api/rest/v1beta4/instances/insert) method of the instances resource to create the read replica. The region  and databaseVersion properties must be the same as the master.\nBefore using any of the request data, make the following replacements:- : The project ID\n- : Enum version string (for example, POSTGRES_12)\n- : The name of the primary instance\n- : The region of the primary instance\n- : The region of the replica instance\n- : The name of the replica instance\n- : Enum string of the machine type. For example: \"db-custom-1-3840\"\n- : The authorized network that you're adding or selecting to create a private connection.\nYou set the value of the`ipv4Enabled`parameter to`false`because you want the Cloud SQL instance to be associated with a private IP address, not a public IP one.\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances\n```\nRequest JSON body:\n```\n{\n \"masterInstanceName\": \"primary-instance-name\",\n \"project\": \"project-id\",\n \"databaseVersion\": \"database-version\",\n \"name\": \"replica-name\",\n \"region\": \"replica-region\",\n \"settings\":\n {\n \"tier\": \"machine-type\",\n \"settingsVersion\": 0,\n \n \"ipConfiguration\": {\n object (IpConfiguration)\n },\n {\n \"ipv4Enabled\": false,\n \"privateNetwork\": private-network,\n \"requireSsl\": boolean,\n \"authorizedNetworks\": [ {\n  object (AclEntry)\n }\n ],\n \"allocatedIpRange\": string\n }\n \n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n## Create a read replica of an instance with Private Service Connect enabled\nTo create a read replica of an instance with [Private Service Connect](/sql/docs/postgres/about-private-service-connect) enabled, use [](/sdk/gcloud)  [gcloud CLI](/sdk/gcloud) or the API. You can create this replica in either the same region or in a different region from the primary instance ( [cross-region read replica](/sql/docs/postgres/replication#cross-region-read-replicas) ).\nCreating cross-region read replicas for instances with Private Service Connect enabled is in [Preview](/products#product-launch-stages) .\nThe read replica can't replicate from an instance with a different connectivity type. For example, an instance with Private Service Connect enabled can replicate only from another Private Service Connect instance. It also can't replicate from an instance that supports external IP connections or from an instance that's configured with [private services access](/sql/docs/postgres/configure-private-services-access) .\nTo create a read replica of an instance, use the [gcloud sql instances create](/sdk/gcloud/reference/sql/instances/create) command:\n```\ngcloud sql instances create REPLICA_INSTANCE_NAME \\--master-instance-name=PRIMARY_INSTANCE_NAME \\--project=PROJECT_ID \\--region=REGION_NAME \\--enable-private-service-connect \\--allowed-psc-projects=ALLOWED_PROJECTS \\--availability-type=AVAILABILITY_TYPE \\--no-assign-ip\n```\nMake the following replacements:- : the name of the replica instance.\n- : the name of the primary instance.\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance.\n- : the region name for the replica instance.\n- : a list of allowed project IDs or numbers, separated by commas. If a project isn't contained in this list, then you can't use it to create an instance and enable Private Service Connect for it.Cloud SQL doesn't copy the allowed projects for the primary instance over to the replica. For each replica, you must create a [Private Service Connect endpoint](/sql/docs/postgres/about-private-service-connect#psc-endpoint) . If you're using the [Cloud SQL Auth Proxy](/sql/docs/postgres/configure-private-service-connect#connect-cloud-sql-auth-proxy) or [Cloud SQL Language Connectors](/sql/docs/postgres/configure-private-service-connect#connect-using-language-connectors) , then create a [DNS zone](/dns/docs/dns-overview#zones) and [DNS record](/dns/docs/dns-overview#records) for the replicas.\n- : enable high availability for the instance. For this parameter, specify one of the following values:- `REGIONAL`: enable high availability and is recommended for production instances. The instance fails over to another zone within your selected region.\n- `ZONAL`: provide no failover capability. This is the default value.\nFor more information about setting and removing high availability for instances, see [Configure an existing instance for high availability](/sql/docs/postgres/configure-ha#ha-instance) and [Deactivate high availability for an instance](/sql/docs/postgres/configure-ha#deactivate-ha-instance) .\nBefore using any of the request data, make the following replacements:- : the name of the primary instance.\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance.\n- : the name of the replica instance.\n- : the region name for the replica instance.\n- : the machine type for the instance.\n- : enable high availability for the instance. For this parameter, specify one of the following values:- `REGIONAL`: enable high availability and is recommended for production instances. The instance fails over to another zone within your selected region.\n- `ZONAL`: provide no failover capability. This is the default value.\nFor more information about setting and removing high availability for instances, see [Configure an existing instance for high availability](/sql/docs/postgres/configure-ha#ha-instance) and [Deactivate high availability for an instance](/sql/docs/postgres/configure-ha#deactivate-ha-instance) .\n- : a list of allowed project IDs or numbers, separated by commas. If a project isn't contained in this list, then you can't use it to create an instance and enable Private Service Connect for it.Cloud SQL doesn't copy the allowed projects for the primary instance over to the replica. For each replica, you must create a [Private Service Connect endpoint](/sql/docs/postgres/about-private-service-connect#psc-endpoint) . If you're using the [Cloud SQL Auth proxy](#connect-cloud-sql-auth-proxy) or [Cloud SQL Language Connectors](#connect-using-language-connectors) , then you must create a [DNS zone](/dns/docs/dns-overview#zones) and [DNS record](/dns/docs/dns-overview#records) for the replicas.\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances\n```\nRequest JSON body:\n```\n{\n \"masterInstanceName\": \"PRIMARY_INSTANCE_NAME\",\n \"project\": \"PROJECT_ID\",\n \"databaseVersion\": \"POSTGRES_13\",\n \"name\": \"REPLICA_INSTANCE_NAME\",\n \"region\": \"REGION_NAME\",\n \"kind\": \"sql#instance\",\n \"settings\":\n {\n \"tier\": \"MACHINE_TYPE\",\n \"availabilityType\": \"AVAILABILITY_TYPE\",\n \"settingsVersion\": 0,\n \"ipConfiguration\": {\n  \"ipv4Enabled\": false,\n  \"pscConfig\": {\n  \"allowedConsumerProjects\": [ALLOWED_PROJECTS],\n  \"pscEnabled\": true\n  }\n },\n \"kind\": \"sql#settings\",\n \"pricingPlan\": \"PER_USE\",\n \"replicationType\": \"ASYNCHRONOUS\",\n \"tier\": \"MACHINE_TYPE\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/REPLICA_INSTANCE_NAME\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"operationType\": \"CREATE_REPLICA\",\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"REPLICA_INSTANCE_NAME\",\n \"selfLink\": \"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\nBefore using any of the request data, make the following replacements:- : the name of the primary instance.\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance.\n- : the name of the replica instance.\n- : the region name for the replica instance.\n- : the machine type for the instance.\n- : enable high availability for the instance. For this parameter, specify one of the following values:- `REGIONAL`: enable high availability and is recommended for production instances. The instance fails over to another zone within your selected region.\n- `ZONAL`: provide no failover capability. This is the default value.\nFor more information about setting and removing high availability for instances, see [Configure an existing instance for high availability](/sql/docs/postgres/configure-ha#ha-instance) and [Deactivate high availability for an instance](/sql/docs/postgres/configure-ha#deactivate-ha-instance) .\n- : a list of allowed project IDs or numbers, separated by commas. If a project isn't contained in this list, then you can't use it to create an instance and enable Private Service Connect for it.Cloud SQL doesn't copy the allowed projects for the primary instance over to the replica. For each replica, you must create a [Private Service Connect endpoint](/sql/docs/postgres/about-private-service-connect#psc-endpoint) . If you're using the [Cloud SQL Auth proxy](#connect-cloud-sql-auth-proxy) or [Cloud SQL Language Connectors](#connect-using-language-connectors) , then you must create a [DNS zone](/dns/docs/dns-overview#zones) and [DNS record](/dns/docs/dns-overview#records) for the replicas.\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances\n```\nRequest JSON body:\n```\n{\n \"masterInstanceName\": \"PRIMARY_INSTANCE_NAME\",\n \"project\": \"PROJECT_ID\",\n \"databaseVersion\": \"POSTGRES_13\",\n \"name\": \"REPLICA_INSTANCE_NAME\",\n \"region\": \"REGION_NAME\",\n \"kind\": \"sql#instance\",\n \"settings\":\n {\n \"tier\": \"MACHINE_TYPE\",\n \"availabilityType\": \"AVAILABILITY_TYPE\",\n \"settingsVersion\": 0,\n \"ipConfiguration\": {\n  \"ipv4Enabled\": false,\n  \"pscConfig\": {\n  \"allowedConsumerProjects\": [ALLOWED_PROJECTS], \n  \"pscEnabled\": true\n  }\n },\n \"kind\": \"sql#settings\",\n \"pricingPlan\": \"PER_USE\",\n \"replicationType\": \"ASYNCHRONOUS\",\n \"tier\": \"MACHINE_TYPE\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/REPLICA_INSTANCE_NAME\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"operationType\": \"CREATE_REPLICA\",\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"REPLICA_INSTANCE_NAME\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\n## Configure read replicas for IAM database authentication\n[cloudsql.iam_authentication](/sql/docs/postgres/flags)\nTo configure a read replica for IAM database authentication:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- In the Configuration tile, look for the`cloudsql.iam_authentication`flag. If the flag isn't on the list, enabling the flag in the read replica is unnecessary. If the flag is on the list, you must enable the flag on the read replica. If you need to enable the flag on the read replica, continue with the next step.\n- Select **Replicas** from the SQL navigation menu.\n- Click the name of the replica you want to edit.\n- Click **Edit** .\n- In the **Configuration options** section, expand **Flags** .\n- Select **+ Add** item.\n- Enter`cloudsql.iam_authentication`for the flag name. Make sure that **On** is selected for this flag.\n- Click **Save** .## Create cascading replicas\nThis section describes how to create and manage cascading replicas. For information about how cascading replicas work, see [Cascading replicas](https://cloud.google.com/sql/docs/postgres/replication/#cascading-replicas) .\n### Before you begin\nThe primary instance must have a read replica. For more information on creating primary instances, see [Create a read replica](https://cloud.google.com/sql/docs/postgres/replication/create-replica#create-2nd-gen) .\n### Steps to create a cascading replica\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Click the **Replicas** tab for the replica that will act as a parent for the replica that you want to create.\n- Click **Create replica** .\n- On the **Create read replica** page, update the instance ID, and any other configuration options, including the name,  region, and zone.\n- Click **Create** .Cloud SQL creates a replica. You're returned to the instance page for the  parent replica.\n- Follow steps 4-6 for each new cascading replica that you want to create.\n- Create the new replica by specifying your primary replica as the primary instance using the [--master-instance-name](/sql/docs/postgres/replication/sdk/gcloud/reference/sql/instances/create) flag:```\ngcloud sql instances create REPLICA_NAME \\\u00a0 \u00a0 \u00a0 --master-instance-name=PARENT_REPLICA_NAME \\\n```Replace the following:- : the unique ID for the replica that you are creating\n- : the name of the parent replica- After the replica is created, you can see that the changes made to the primary instance are replicated through all the replicas in the cascading replicas chain.\n- To create a replica under the parent replica, edit the following JSON code sample and save it to a file called`request.json`:```\n{\u00a0 \"masterInstanceName\": \"PARENT_REPLICA_NAME\",\u00a0 \"project\": \"PROJECT_ID\",\u00a0 \"name\": \"REPLICA_NAME\",\u00a0 \"region\": \"REPLICA_REGION\",\u00a0 \"settings\":\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"tier\": \"MACHINE_TYPE\",\u00a0 \u00a0 }}\n```\n- Run the following command:```\ncurl -X POST-H \"Authorization: Bearer \"$(gcloud auth print-access-token)-H \"Content-Type: application/json; charset=utf-8\"-d @request.json\"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances\"\n```## Troubleshoot\n| Issue             | Troubleshooting                                                                                                                                                                                                                               |\n|:--------------------------------------------------------||\n| Read replica didn't start replicating on creation.  | There's probably a more specific error in the log files. Inspect the logs in Cloud Logging to find the actual error.                                                                                                                                                                                                      |\n| Unable to create read replica - invalidFlagValue error. | One of the flags in the request is invalid. It could be a flag you provided explicitly or one that was set to a default value. First, check that the value of the max_connections flag is greater than or equal to the value on the primary. If the max_connections flag is set appropriately, inspect the logs in Cloud Logging to find the actual error.                                                                                                                                           |\n| Unable to create read replica - unknown error.   | There's probably a more specific error in the log files. Inspect the logs in Cloud Logging to find the actual error. If the error is: set Service Networking service account as servicenetworking.serviceAgent role on consumer project, then disable and re-enable the Service Networking API. This action creates the service account necessary to continue with the process.                                                                                                                                      |\n| Disk is full.           | The primary instance disk size can become full during replica creation. Edit the primary instance to upgrade it to a larger disk size.                                                                                                                                                                                                 |\n| Disk space increases significantly.      | A slot that's not actively used to track data causes PostgreSQL to hold onto WAL segments indefinitely, causing the disk space to grow indefinitely. If you use the logical replication and decoding features in Cloud SQL, replication slots are created and dropped automatically. Unused replication slots can be detected by querying the pg_replication_slots system view and filtering on the active column. Unused slots can be dropped to remove WAL segments using the pg_drop_replication_slot command.                                                                                                       |\n| The replica instance is using too much memory.   | The replica uses temporary memory to cache often-requested read operations, which can lead it to use more memory than the primary instance. Restart the replica instance to reclaim the temporary memory space.                                                                                                                                                                               |\n| Replication stopped.         | The maximum storage limit was reached and automatic storage increase isn't enabled. Edit the instance to enable automatic storage increase.                                                                                                                                                                                                |\n| Replication lag is consistently high.     | The write load is too high for the replica to handle. Replication lag takes place when the SQL thread on a replica is unable to keep up with the IO thread. Some kinds of queries or workloads can cause temporary or permanent high replication lag for a given schema. Some of the typical causes of replication lag are: Slow queries on the replica. Find and fix them. All tables must have a unique/primary key. Every update on such a table without a unique/primary key causes full table scans on th replica. Queries like DELETE ... WHERE field < 50000000 cause replication lag with row-based replication since a huge number of updates are piled up on the replica. Some possible solutions include: Edit the instance to increase the size of the replica. Reduce the load on the database. Send read traffic to the read replica. Index the tables. Identify and fix slow write queries. Recreate the replica. |\n| Errors when rebuilding indexes in PostgreSQL 9.6.  | You get an error from PostgreSQL informing you that you need to rebuild a particular index. This can be done only on the primary instance. If you create a new replica instance, you soon get the same error again. Hash indexes are not propagated to replicas in PostgreSQL versions below 10. If you must use hash indexes, upgrade to PostgreSQL 10+. Otherwise, if you also want to use replicas, don't use hash indexes in PostgreSQL 9.6.                                                                                                                      |\n| Query on the primary instance is always running.  | After creating a replica, the query SELECT * from pg_stat_activity where state = 'active' and pid = XXXX and username = 'cloudsqlreplica' is expected to run continuously on your primary instance.                                                                                                                                                                                  |\n| Replica creation fails with timeout.     | Long-running uncommitted transactions on the primary instance can cause read replica creation to fail. Recreate the replica after stopping all running queries.                                                                                                                                                                                           |\n## What's next\n- Learn how to [manage replicas](/sql/docs/postgres/replication/manage-replicas) .\n- Learn about [cross-region replicas](/sql/docs/postgres/replication/cross-region-replicas) .", "guide": "Cloud SQL"}