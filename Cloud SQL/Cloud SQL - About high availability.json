{"title": "Cloud SQL - About high availability", "url": "https://cloud.google.com/sql/docs/postgres/high-availability", "abstract": "# Cloud SQL - About high availability\nThis page is an overview of the high availability (HA) configuration for Cloud SQL instances. To configure a new instance for HA, or to enable HA on an existing instance, see [Enabling and disabling high availability on an instance](/sql/docs/postgres/configure-ha) .\n", "content": "## HA configuration overview\nThe purpose of an HA configuration is to reduce downtime when a zone or instance becomes unavailable. This might happen during a zonal outage, or when there's a hardware issue. With HA, your data continues to be available to client applications.\nThe HA configuration provides data redundancy. A Cloud SQL instance configured for HA is also called a and has a primary and secondary zone within the configured region. Within a regional instance, the configuration is made up of a and a . Through [synchronous replication](/compute/docs/disks#repds) to each zone's persistent disk, all writes made to the primary instance are replicated to disks in both zones before a transaction is reported as committed. In the event of an instance or zone failure, the standby instance becomes the new primary instance. Users are then rerouted to the new primary instance. This process is called a .\n**Note:** There are cases where Cloud SQL issues a restart instead of a failover. When this happens, you see **Restart** as an operation on the instance when you view the **Operations and logs** pane on the instance **Overview** page or on the instance **Operations** page. For example, the database can restart when a resource is exhausted, such as when an instance runs out of memory. To avoid downtime due to memory issues, see [Optimize high memory consumption](/sql/docs/postgres/optimize-high-memory-usage) .\nAfter a failover, the instance that received the failover continues to be the primary instance, even after the original instance comes back online. After the zone or instance that experienced an outage becomes available again, the original primary instance is destroyed and recreated. Then it becomes the new standby instance. If a failover occurs in the future, the new primary will fail over to the original instance in the original zone.\nIf you need to have the primary instance in the zone that had the outage, you can do a . A failback performs the same steps as the failover, only in the opposite direction, to reroute traffic back to the original instance. To perform a failback, use the procedure in [Initiating failover](/sql/docs/postgres/configure-ha#test) .\nRegional persistent disk support for Cloud SQL HA configuration that has at least one dedicated CPU has full [Service Level Agreement (SLA)](/sql/sla) coverage. An HA-configured instance costs twice as much as a standalone instance. This price includes CPU, RAM, and storage. For more information, see the [pricing page](/sql/docs/postgres/pricing) .\nYou can create an account to evaluate how Cloud SQL performs in real-world scenarios. New customers also get $300 in free credits to spend on Cloud SQL to run, test, and deploy workloads. You won't be charged until you upgrade.Sign up to [ try Cloud SQL for free](https://console.cloud.google.com/freetrial?redirectPath=/sql) .### Read replicas\nIf availability is a consideration for your read replicas, you can enable HA on the replicas. When you promote such a replica to become a primary instance, it's already set up as a highly available instance.\nDuring a zonal outage, traffic stops to read replicas in that zone. After the zone becomes available again, any read replicas in the zone resume replication from the primary instance. If read replicas are not located in a zone that is undergoing an outage, they connect to the standby instance when it becomes the primary instance.\nAs a best practice, consider putting some of your read replicas in a different zone from the primary and standby instances. For example, if you have a primary instance in zone A and a standby instance in zone B, put a read replica in zone C to improve your reliability. This practice ensures that read replicas continue to operate even if the zone for the primary instance goes down. You should also add business logic in the client application to send reads to the primary instance when read replicas are unavailable.\n## Failover overview\nIf an HA-configured instance becomes unresponsive, Cloud SQL automatically switches to serving data from the standby instance. To see if a failover has occurred, check your [operation log](/sql/docs/mysql/logging#logs) failover history.\nLearn more about how to [buildqueries in the Logs Explorer](/logging/docs/view/building-queries) . If you need more detailed information about an operation, such as the user who performed the operation, you must [enable audit logging](/sql/docs/postgres/audit-logging#enabling_audit_logging) .\nClick the tabs to see how failover affects your instance.### Process\nThe following process occurs:\n- The primary instance or zone fails.Each second, the heartbeat system detects whether the primary instance is healthy. If multiple heartbeats aren't detected, failover is initiated.\n- The standby instance now serves data upon reconnection.Through a shared static IP address with the primary instance, the standby instance now serves data from the secondary zone.\n**Note:** If failover occurs, read replicas outside of the outage zone don't change zones; they continue to serve data even if they are in a different zone than the primary instance.\n**Note:** When a failover occurs, you can expect the instance to be unavailable for about sixty seconds. This duration might differ based on your Cloud SQL environment. See [Initiating failover](/sql/docs/postgres/configure-ha#test) .\n### Requirements\nFor Cloud SQL to allow a failover, the configuration must meet the following requirements:\n- The primary instance must be in a normal operating state (not stopped, undergoing maintenance, or performing a long-running Cloud SQL instance operation such as a backup operation).\n- The secondary zone and standby instance must both be in a healthy state. When the standby instance is unresponsive, failover operations are blocked. After Cloud SQL repairs the standby instance and the secondary zone is available, Cloud SQL allows failover.\n**Note:** If both the primary and standby instances are unresponsive, Cloud SQL does not allow failover.\n## Backup and restore\nAutomated backups are highly recommended for high availability.\n## Applications and instances\nThere is no difference in working with non-HA and HA instances, so your application does not need to be configured in any particular way. When failover occurs, any existing connections to the primary instance and read replicas are closed, and it will take approximately 60 seconds for connections to the primary instance to be reestablished. Your application reconnects using the same connection string or IP address, so you do not need to update your application after failover.\nTo see exactly how your applications are affected by failover, [manually initiate failover](/sql/docs/postgres/configure-ha#test) .\n## Maintenance downtime\nMaintenance events affect primary instances configured with HA in the same way as other instances. You can expect primary instances to be down for a brief period of time. For more information on how maintenance affects HA instances, see [How maintenance works](/sql/docs/postgres/maintenance#how_maintenance_works) . To minimize impact to your service, change [maintenance settings](/sql/docs/postgres/maintenance#management) to control when downtime occurs.\n## What's next\n- [Enabling and disabling high availability on an instance](/sql/docs/postgres/configure-ha) .\n- [Initiate failover](/sql/docs/postgres/configure-ha#test) .\n- [Learn more about managing your database connections](/sql/faq#connections) .\n- Learn more about [regions and zones](/sql/docs/instance-locations) in Cloud SQL.", "guide": "Cloud SQL"}