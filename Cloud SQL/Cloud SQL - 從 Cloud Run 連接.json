{"title": "Cloud SQL - \u5f9e Cloud Run \u9023\u63a5", "url": "https://cloud.google.com/sql/docs/postgres/connect-run?hl=zh-cn", "abstract": "# Cloud SQL - \u5f9e Cloud Run \u9023\u63a5\n\u672c\u9801\u4ecb\u7d39\u5f9e Cloud Run \u4e2d\u904b\u884c\u7684\u670d\u52d9\u9023\u63a5\u5230 Cloud SQL \u5be6\u4f8b\u7684\u76f8\u95dc\u4fe1\u606f\u548c\u793a\u4f8b\u3002\n**\u5982\u9700\u77ad\u89e3\u904b\u884c\u9023\u63a5\u5230 Cloud SQL \u7684 Cloud Run \u793a\u4f8b Web \u61c9\u7528\u7684\u5206\u6b65\u8aaa\u660e** \uff0c\u8acb\u53c3\u95b1 [\u5f9e Cloud Run \u9023\u63a5\u5feb\u901f\u5165\u9580](https://cloud.google.com/sql/docs/postgres/connect-instance-cloud-run?hl=zh-cn) \u3002\nCloud SQL \u662f\u4e00\u9805\u5168\u4ee3\u7ba1\u5f0f\u6578\u64da\u5eab\u670d\u52d9\uff0c\u53ef\u5e6b\u52a9\u60a8\u5728\u96f2\u7aef\u8a2d\u7f6e\u3001\u7dad\u8b77\u3001\u7ba1\u7406\u548c\u63a7\u5236\u95dc\u4fc2\u578b\u6578\u64da\u5eab\u3002\n[Cloud Run](https://cloud.google.com/run/docs/overview/what-is-cloud-run?hl=zh-cn) \u662f\u4e00\u500b\u4ee3\u7ba1\u5f0f\u8a08\u7b97\u5e73\u81fa\uff0c\u53ef\u8b93\u60a8\u76f4\u63a5\u5728 Google Cloud \u57fa\u790e\u67b6\u69cb\u4e4b\u4e0a\u904b\u884c\u5bb9\u5668\u3002\n", "content": "## \u8a2d\u7f6e Cloud SQL \u5be6\u4f8b\n- \u5982\u679c\u60a8\u8981\u5f9e\u67d0\u500b Google Cloud \u9805\u76ee\u9023\u63a5\uff0c\u5247\u5728\u8a72\u9805\u76ee\u4e2d\u5553\u7528 Cloud SQL Admin API\uff08\u5982\u679c\u60a8\u5c1a\u672a\u57f7\u884c\u6b64\u64cd\u4f5c\uff09\uff1aTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them [\u5553\u7528 API](https://console.cloud.google.com/flows/enableapi?apiid=sqladmin&%3Bredirect=https%3A%2F%2Fconsole.cloud.google.com&hl=zh-cn) \n- [\u5275\u5efa\u4e00\u500b Cloud SQL for PostgreSQL \u5be6\u4f8b](https://cloud.google.com/sql/docs/postgres/create-instance?hl=zh-cn) \u3002\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0cCloud SQL \u6703\u7232\u65b0\u5be6\u4f8b\u5206\u914d\u516c\u5171 IP \u5730\u5740\u3002  \u60a8\u9084\u53ef\u4ee5\u9078\u64c7\u5206\u914d\u5c08\u7528 IP \u5730\u5740\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u9019\u5169\u7a2e\u5730\u5740\u7684\u9023\u63a5\u65b9\u6848\uff0c\u8acb\u53c3\u95b1 [\u9023\u63a5\u6982\u89bd](https://cloud.google.com/sql/docs/postgres/connect-overview?hl=zh-cn) \u9801\u9762\u3002## \u914d\u7f6e Cloud Run\n[\u6bd4\u8f03\u5169\u7a2e\u7db2\u7d61\u51fa\u7ad9\u6d41\u91cf\u65b9\u6cd5](https://cloud.google.com/run/docs/configuring/vpc-connect-comparison?hl=zh-cn)\n- \u78ba\u4fdd\u4e4b\u524d\u5275\u5efa\u7684\u5be6\u4f8b\u5177\u6709\u516c\u5171 IP \u5730\u5740\u3002\u60a8\u53ef\u4ee5\u5728 [Google Cloud \u63a7\u5236\u6aaf](https://console.cloud.google.com/sql?hl=zh-cn) \u4e2d\u7684\u5be6\u4f8b **\u6982\u89bd** \u9801\u9762\u4e0a\u9a57\u8b49\u9019\u4e00\u9ede\u3002\u5982\u679c\u60a8\u9700\u8981\u6dfb\u52a0 IP \u5730\u5740\uff0c\u8acb\u53c3\u95b1 [\u914d\u7f6e\u516c\u5171 IP \u9801\u9762](https://cloud.google.com/sql/docs/postgres/configure-ip?hl=zh-cn) \u4f86\u67e5\u770b\u76f8\u95dc\u8aaa\u660e\u3002\n- \u7372\u53d6\u5be6\u4f8b\u7684\u3002\u60a8\u53ef\u4ee5\u5728 [Google Cloud \u63a7\u5236\u6aaf](https://console.cloud.google.com/sql?hl=zh-cn) \u4e2d\u7684\u5be6\u4f8b **\u6982\u89bd** \u9801\u9762\u4e0a\u6216\u8005\u901a\u904e\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u627e\u5230\u5b83\uff1a`gcloud sql instances describe` ``\u3002\n- \u7232\u60a8\u7684\u670d\u52d9 [\u914d\u7f6e\u670d\u52d9\u8cec\u865f](https://cloud.google.com/run/docs/configuring/services/service-accounts?hl=zh-cn) \u3002\u8acb\u78ba\u4fdd\u8a72\u670d\u52d9\u8cec\u865f\u5177\u6709\u9069\u7576\u7684 [Cloud SQL \u89d2\u8272\u548c\u6b0a\u9650\u4ee5\u9023\u63a5\u5230 Cloud SQL](https://cloud.google.com/sql/docs/mysql/project-access-control?hl=zh-cn#roles) \u3002\n- \u60a8\u7684\u670d\u52d9\u7684\u670d\u52d9\u8cec\u865f\u9700\u8981\u4ee5\u4e0b\u67d0\u500b\n- [IAM \u89d2\u8272](https://cloud.google.com/iam/docs/understanding-roles?hl=zh-cn#cloud-sql-roles) \n- \uff1a- `Cloud SQL Client`\uff08\u9996\u9078\uff09\n- `Cloud SQL Admin`- \u6216\u8005\uff0c\u60a8\u4e5f\u53ef\u4ee5\u624b\u52d5\u5206\u914d\u4e0b\u5217 IAM \u6b0a\u9650\uff1a- `cloudsql.instances.connect`\n- `cloudsql.instances.get` **\u6ce8\u610f\uff1a** \u5982\u679c\u6388\u6b0a\u670d\u52d9\u8cec\u865f\u8207\u5305\u542b Cloud SQL \u5be6\u4f8b\u7684\u670d\u52d9\u8cec\u865f\u5c6c\u65bc\u4e0d\u540c\u9805\u76ee\uff0c\u60a8\u5fc5\u9808- \u5728\u9019\u5169\u500b\u9805\u76ee\u4e2d\u5553\u7528 Cloud SQL Admin API\u3002\n- \u7232\u5305\u542b Cloud SQL \u5be6\u4f8b\u7684\u9805\u76ee\u4e2d\u7684\u670d\u52d9\u8cec\u865f\u6dfb\u52a0 IAM \u6b0a\u9650\u3002\u8207\u4efb\u4f55\u914d\u7f6e\u66f4\u6539\u4e00\u6a23\uff0c\u7232 Cloud SQL \u9023\u63a5\u8a2d\u7f6e\u65b0\u914d\u7f6e\u6703\u5c0e\u81f4\u5275\u5efa\u65b0\u7684 Cloud Run \u4fee\u8a02\u7248\u672c\u3002\u9664\u975e\u60a8\u9032\u884c\u4e86\u660e\u78ba\u66f4\u65b0\uff0c\u5426\u5247\u5f8c\u7e8c\u4fee\u8a02\u7248\u672c\u4e5f\u5c07\u81ea\u52d5\u63a1\u7528\u6b64 Cloud SQL \u9023\u63a5\u3002\n- [\u8f49\u5230 Cloud Run](https://console.cloud.google.com/run?hl=zh-cn) \n- \u958b\u59cb\u914d\u7f6e\u670d\u52d9\uff1a- \u5982\u679c\u60a8\u8981\u5411\u65b0\u670d\u52d9\u6dfb\u52a0 Cloud SQL \u9023\u63a5\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\u60a8\u9700\u8981\u5c07\u670d\u52d9\u5bb9\u5668\u5316\u4e26\u4e0a\u50b3\u5230 Container Registry \u6216 Artifact Registry\u3002\u5982\u679c\u60a8\u9084\u6c92\u6709\u5bb9\u5668\u6620\u50cf\uff0c\u8acb\u53c3\u95b1\u9019\u4e9b\u6709\u95dc [\u69cb\u5efa\u548c\u90e8\u7f72](https://cloud.google.com/run/docs/quickstarts/build-and-deploy/deploy-python-service?hl=zh-cn) \u5bb9\u5668\u6620\u50cf\u7684\u8aaa\u660e\u3002\n- \u5982\u679c\u60a8\u8981\u5411\u73fe\u6709\u670d\u52d9\u6dfb\u52a0 Cloud SQL \u9023\u63a5\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u9ede\u64ca\u670d\u52d9\u540d\u7a31\u3002\n- \u9ede\u64ca **\u4fee\u6539\u548c\u90e8\u7f72\u65b0\u4fee\u8a02\u7248\u672c** \u6a19\u7c64\u9801\u3002\n- \u5141\u8a31\u9023\u63a5\u5230 Cloud SQL \u5be6\u4f8b\uff1a **\u6ce8\u610f** \uff1a\u5982\u679c\u60a8\u7684\u61c9\u7528\u662f\u4f7f\u7528 Java \u7de8\u5beb\u7684\uff0c\u5247\u53ef\u4ee5\u8df3\u904e\u6b64\u6b65\u9a5f\uff0c\u56e0\u7232\u60a8\u5c07\u5728 Java Cloud SQL \u9023\u63a5\u5668\u4e2d\u57f7\u884c\u6b64\u64cd\u4f5c\u3002- \u9ede\u64ca **\u5bb9\u5668\u3001\u8b8a\u91cf\u548c\u5bc6\u9470\u3001\u9023\u63a5\u3001\u5b89\u5168\u6027** \n- \u9ede\u64ca **\u5bb9\u5668** \u6a19\u7c64\u9801\u3002\n- \u5411\u4e0b\u6efe\u52d5\u5230 **Cloud SQL \u9023\u63a5** \n- \u9ede\u64ca **\u6dfb\u52a0\u9023\u63a5** \n- \u5982\u679c\u60a8\u5c1a\u672a\u5553\u7528 Cloud SQL Admin API\uff0c\u8acb\u9ede\u64ca **\u5553\u7528 Cloud SQL Admin** \u6309\u9215\u3002\n- \u5982\u679c\u60a8\u662f\u5728\u5411\u81ea\u5df1\u9805\u76ee\u4e2d\u7684 Cloud SQL \u5be6\u4f8b\u6dfb\u52a0\u9023\u63a5\uff0c\u8acb\u5f9e\u4e0b\u62c9\u83dc\u55ae\u4e2d\u9078\u64c7\u6240\u9700\u7684 Cloud SQL \u5be6\u4f8b\u3002\n- \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u4f86\u81ea\u5176\u4ed6\u9805\u76ee\u7684 Cloud SQL \u5be6\u4f8b\uff0c\u8acb\u5728\u4e0b\u62c9\u5217\u8868\u4e2d\u9078\u64c7 **\u81ea\u5b9a\u7fa9\u9023\u63a5\u5b57\u7b26\u4e32** \uff0c\u7136\u5f8c\u4ee5\u683c\u5f0f\u8f38\u5165\u5b8c\u6574\u5be6\u4f8b\u9023\u63a5\u540d\u7a31\u3002\n- \u5982\u679c\u60a8\u8981\u522a\u9664\u9023\u63a5\uff0c\u8acb\u5c07\u5149\u6a19\u61f8\u505c\u5728\u9023\u63a5\u53f3\u5074\u4ee5\u986f\u793a\u5783\u573e\u7bb1\u5716\u6a19\uff0c\u7136\u5f8c\u9ede\u64ca\u8a72\u5716\u6a19\u3002\n- \u9ede\u64ca **\u5275\u5efa** \u6216 **\u90e8\u7f72** \u3002\n\u5728\u4f7f\u7528\u4e0b\u9762\u7684\u4efb\u4f55\u547d\u4ee4\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- \u5c07\u66ff\u63db\u7232\u60a8\u8981\u90e8\u7f72\u7684\u6620\u50cf\n- \u5c07\u66ff\u63db\u7232\u60a8\u7684 Cloud Run \u670d\u52d9\u7684\u540d\u7a31\n- \u5c07 \u66ff\u63db\u7232 Cloud SQL \u5be6\u4f8b\u7684\u5be6\u4f8b\u9023\u63a5\u540d\u7a31\uff0c\u6216\u4ee5\u82f1\u6587\u9017\u865f\u5206\u9694\u7684\u9023\u63a5\u540d\u7a31\u5217\u8868\u3002\u5982\u679c\u8981\u90e8\u7f72\u65b0\u5bb9\u5668\uff0c\u8acb\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud run deploy \\\u00a0 --image=IMAGE \\\u00a0 --add-cloudsql-instances=INSTANCE_CONNECTION_NAME\n```\u5982\u679c\u8981\u66f4\u65b0\u73fe\u6709\u670d\u52d9\uff0c\u8acb\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud run services update SERVICE_NAME \\\u00a0 --add-cloudsql-instances=INSTANCE_CONNECTION_NAME\n```\n\u4ee5\u4e0b\u4ee3\u78bc\u5275\u5efa\u4e00\u500b\u57fa\u790e Cloud Run \u5bb9\u5668\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u500b\u9023\u63a5\u7684 Cloud SQL \u5be6\u4f8b\u3002\n [  run/connect_cloud_sql/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/run/connect_cloud_sql/main.tf) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/run/connect_cloud_sql/main.tf) \n```\nresource \"google_cloud_run_v2_service\" \"default\" {\u00a0 name \u00a0 \u00a0 = \"cloudrun-service\"\u00a0 location = \"us-central1\"\u00a0 template {\u00a0 \u00a0 containers {\u00a0 \u00a0 \u00a0 image = \"us-docker.pkg.dev/cloudrun/container/hello:latest\" # Image to deploy\u00a0 \u00a0 \u00a0 volume_mounts {\u00a0 \u00a0 \u00a0 \u00a0 name \u00a0 \u00a0 \u00a0 = \"cloudsql\"\u00a0 \u00a0 \u00a0 \u00a0 mount_path = \"/cloudsql\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 \u00a0 volumes {\u00a0 \u00a0 \u00a0 name = \"cloudsql\"\u00a0 \u00a0 \u00a0 cloud_sql_instance {\u00a0 \u00a0 \u00a0 \u00a0 instances = [google_sql_database_instance.default.connection_name]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }\u00a0 client \u00a0 \u00a0 = \"terraform\"\u00a0 depends_on = [google_project_service.secretmanager_api, google_project_service.cloudrun_api, google_project_service.sqladmin_api]}\n```\n- \u8f38\u5165`terraform apply`\u4ee5\u61c9\u7528\u66f4\u6539\u3002\n- \u67e5\u770b\u66f4\u6539\uff0c\u65b9\u6cd5\u662f\u6aa2\u67e5 [Cloud Run](https://cloud.google.com/run?hl=zh-cn) \u670d\u52d9\uff0c\u9ede\u64ca **\u4fee\u8a02\u7248\u672c** \u6a19\u7c64\u9801\uff0c\u7136\u5f8c\u9ede\u64ca **\u9023\u63a5** \u6a19\u7c64\u9801\u3002\u5982\u679c\u6388\u6b0a\u670d\u52d9\u8cec\u865f\u6240\u5c6c\u7684\u9805\u76ee\u8207\u5305\u542b Cloud SQL \u5be6\u4f8b\u7684\u9805\u76ee\u4e0d\u540c\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u5728\u9019\u5169\u500b\u9805\u76ee\u4e2d\u5553\u7528 Cloud SQL Admin API\u3002\n- \u5c0d\u65bc\u5305\u542b Cloud SQL \u5be6\u4f8b\u7684\u9805\u76ee\u4e2d\u7684\u670d\u52d9\u8cec\u865f\uff0c\u6dfb\u52a0 [IAM \u6b0a\u9650](https://cloud.google.com/sql/docs/mysql/roles-and-permissions?hl=zh-cn#serverless-roles-permissions) \u3002\u76f4\u63a5 VPC \u51fa\u7ad9\u6d41\u91cf\u548c\u9023\u63a5\u5668\u4f7f\u7528\u5c08\u7528 IP \u5730\u5740\u4f86\u8655\u7406\u8207\u60a8\u7684 VPC \u7db2\u7d61\u7684\u901a\u4fe1\u3002\u5982\u9700\u4f7f\u7528\u4ee5\u4e0b\u67d0\u7a2e\u51fa\u7ad9\u6d41\u91cf\u65b9\u6cd5\u76f4\u63a5\u901a\u904e\u5c08\u7528 IP \u5730\u5740\u9032\u884c\u9023\u63a5\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u78ba\u4fdd\u524d\u9762\u5275\u5efa\u7684 Cloud SQL \u5be6\u4f8b\u5177\u6709\u5c08\u7528 IP \u5730\u5740\u3002\u5982\u9700\u6dfb\u52a0\u5167\u90e8 IP \u5730\u5740\uff0c\u8acb\u53c3\u95b1 [\u914d\u7f6e\u5c08\u7528 IP](https://cloud.google.com/sql/docs/postgres/configure-private-ip?hl=zh-cn) \u3002\n- [\u914d\u7f6e\u51fa\u7ad9\u6d41\u91cf\u65b9\u6cd5](https://cloud.google.com/run/docs/configuring/connecting-vpc?hl=zh-cn) \u4ee5\u9023\u63a5\u5230 Cloud SQL \u5be6\u4f8b\u6240\u5728\u7684 VPC \u7db2\u7d61\u3002 \u8acb\u6ce8\u610f\u4ee5\u4e0b\u689d\u4ef6\uff1a\n- \u76f4\u63a5 VPC \u51fa\u7ad9\u6d41\u91cf\u548c\u7121\u670d\u52d9\u5668 VPC \u8a2a\u554f\u901a\u9053\u5747\u652f\u6301\u8207\u4f7f\u7528 [Cloud VPN](https://cloud.google.com/vpn/docs?hl=zh-cn) \u548c [VPC \u7db2\u7d61\u5c0d\u7b49\u4e92\u9023](https://cloud.google.com/vpc/docs/using-vpc-peering?hl=zh-cn) \u9023\u63a5\u7684 VPC \u7db2\u7d61\u9032\u884c\u901a\u4fe1\u3002\n- \u76f4\u63a5 VPC \u51fa\u7ad9\u6d41\u91cf\u548c\u7121\u670d\u52d9\u5668 VPC \u8a2a\u554f\u901a\u9053\u4e0d\u652f\u6301 [\u820a\u7248\u7db2\u7d61](https://cloud.google.com/vpc/docs/legacy?hl=zh-cn) \u3002\n- \u9664\u975e\u60a8\u4f7f\u7528 [\u5171\u4eab VPC](https://cloud.google.com/vpc/docs/configure-serverless-vpc-access?hl=zh-cn#shared-vpc) \uff0c\u5426\u5247\u9023\u63a5\u5668\u5fc5\u9808\u8207\u4f7f\u7528\u5b83\u7684\u8cc7\u6e90\u4f4d\u65bc\u540c\u4e00\u9805\u76ee\u548c\u5340\u57df\u4e2d\uff0c\u4f46\u8a72\u9023\u63a5\u5668\u53ef\u5411\u5176\u4ed6\u5340\u57df\u4e2d\u7684\u8cc7\u6e90\u767c\u9001\u6d41\u91cf\u3002\n- \u4f7f\u7528\u5be6\u4f8b\u7684\u5c08\u7528 IP \u5730\u5740\u548c\u7aef\u53e3`5432`\u9032\u884c\u9023\u63a5\u3002## \u9023\u63a5\u5230 Cloud SQL\n\u914d\u7f6e Cloud Run \u5f8c\uff0c\u60a8\u53ef\u4ee5\u9023\u63a5\u5230 Cloud SQL \u5be6\u4f8b\u3002\n\u5c0d\u65bc\u516c\u5171 IP \u8def\u5f91\uff0cCloud Run \u63d0\u4f9b\u52a0\u5bc6\u529f\u80fd\uff0c\u4e26\u901a\u904e\u5169\u7a2e\u65b9\u5f0f\u4f7f\u7528 [Cloud SQL Auth \u4ee3\u7406](https://cloud.google.com/sql/docs/postgres/sql-proxy?hl=zh-cn) \u9032\u884c\u9023\u63a5\uff1a\n- \u901a\u904e [Unix \u5957\u63a5\u5b57](#connect-unix-socket) \n- \u4f7f\u7528 [Cloud SQL \u9023\u63a5\u5668](#connect-connectors) \n### \u4f7f\u7528 Secret ManagerGoogle \u5efa\u8b70\u60a8\u4f7f\u7528 [Secret Manager](https://cloud.google.com/secret-manager?hl=zh-cn) \u5b58\u5132 SQL \u6191\u64da\u7b49\u654f\u611f\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 Cloud Run [\u5c07 Secret \u4f5c\u7232\u74b0\u5883\u8b8a\u91cf\u50b3\u905e\u6216\u88dd\u8f09\u7232\u5377](https://cloud.google.com/run/docs/configuring/secrets?hl=zh-cn) \u3002\n\u5728 Secret Manager \u4e2d [\u5275\u5efa Secret](https://cloud.google.com/secret-manager/docs/creating-and-accessing-secrets?hl=zh-cn#create) \u5f8c\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u66f4\u65b0\u73fe\u6709\u670d\u52d9\uff1a```\ngcloud run services update SERVICE_NAME \\\u00a0 --add-cloudsql-instances=INSTANCE_CONNECTION_NAME\u00a0 --update-env-vars=INSTANCE_CONNECTION_NAME=INSTANCE_CONNECTION_NAME_SECRET \\\u00a0 --update-secrets=DB_USER=DB_USER_SECRET:latest \\\u00a0 --update-secrets=DB_PASS=DB_PASS_SECRET:latest \\\u00a0 --update-secrets=DB_NAME=DB_NAME_SECRET:latest\n```\u4ee5\u4e0b\u547d\u4ee4\u6703\u5275\u5efa Secret \u8cc7\u6e90\uff0c\u4ee5\u4f7f\u7528 `google_secret_manager_secret` \u548c `google_secret_manager_secret_version` \u5b89\u5168\u5730\u4fdd\u5b58\u6578\u64da\u5eab\u7528\u6236\u3001\u5bc6\u78bc\u548c\u540d\u7a31\u503c\u3002\u8acb\u6ce8\u610f\uff0c\u60a8\u5fc5\u9808\u66f4\u65b0\u9805\u76ee\u8a08\u7b97\u670d\u52d9\u8cec\u865f\u624d\u80fd\u8a2a\u554f\u6bcf\u500b Secret\u3002\n [  run/connect_cloud_sql/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/run/connect_cloud_sql/main.tf) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/run/connect_cloud_sql/main.tf) \n```\n# Create dbuser secretresource \"google_secret_manager_secret\" \"dbuser\" {\u00a0 secret_id = \"dbusersecret\"\u00a0 replication {\u00a0 \u00a0 auto {}\u00a0 }\u00a0 depends_on = [google_project_service.secretmanager_api]}# Attaches secret data for dbuser secretresource \"google_secret_manager_secret_version\" \"dbuser_data\" {\u00a0 secret \u00a0 \u00a0 \u00a0= google_secret_manager_secret.dbuser.id\u00a0 secret_data = \"secret-data\" # Stores secret as a plain txt in state}# Update service account for dbuser secretresource \"google_secret_manager_secret_iam_member\" \"secretaccess_compute_dbuser\" {\u00a0 secret_id = google_secret_manager_secret.dbuser.id\u00a0 role \u00a0 \u00a0 \u00a0= \"roles/secretmanager.secretAccessor\"\u00a0 member \u00a0 \u00a0= \"serviceAccount:${data.google_project.project.number}-compute@developer.gserviceaccount.com\" # Project's compute service account}\n``` [  run/connect_cloud_sql/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/run/connect_cloud_sql/main.tf) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/run/connect_cloud_sql/main.tf) \n```\n# Create dbpass secretresource \"google_secret_manager_secret\" \"dbpass\" {\u00a0 secret_id = \"dbpasssecret\"\u00a0 replication {\u00a0 \u00a0 auto {}\u00a0 }\u00a0 depends_on = [google_project_service.secretmanager_api]}# Attaches secret data for dbpass secretresource \"google_secret_manager_secret_version\" \"dbpass_data\" {\u00a0 secret \u00a0 \u00a0 \u00a0= google_secret_manager_secret.dbpass.id\u00a0 secret_data = \"secret-data\" # Stores secret as a plain txt in state}# Update service account for dbpass secretresource \"google_secret_manager_secret_iam_member\" \"secretaccess_compute_dbpass\" {\u00a0 secret_id = google_secret_manager_secret.dbpass.id\u00a0 role \u00a0 \u00a0 \u00a0= \"roles/secretmanager.secretAccessor\"\u00a0 member \u00a0 \u00a0= \"serviceAccount:${data.google_project.project.number}-compute@developer.gserviceaccount.com\" # Project's compute service account}\n``` [  run/connect_cloud_sql/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/run/connect_cloud_sql/main.tf) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/run/connect_cloud_sql/main.tf) \n```\n# Create dbname secretresource \"google_secret_manager_secret\" \"dbname\" {\u00a0 secret_id = \"dbnamesecret\"\u00a0 replication {\u00a0 \u00a0 auto {}\u00a0 }\u00a0 depends_on = [google_project_service.secretmanager_api]}# Attaches secret data for dbname secretresource \"google_secret_manager_secret_version\" \"dbname_data\" {\u00a0 secret \u00a0 \u00a0 \u00a0= google_secret_manager_secret.dbname.id\u00a0 secret_data = \"secret-data\" # Stores secret as a plain txt in state}# Update service account for dbname secretresource \"google_secret_manager_secret_iam_member\" \"secretaccess_compute_dbname\" {\u00a0 secret_id = google_secret_manager_secret.dbname.id\u00a0 role \u00a0 \u00a0 \u00a0= \"roles/secretmanager.secretAccessor\"\u00a0 member \u00a0 \u00a0= \"serviceAccount:${data.google_project.project.number}-compute@developer.gserviceaccount.com\" # Project's compute service account}\n```\n\u66f4\u65b0 Cloud Run \u4e3b\u8cc7\u6e90\u4ee5\u5305\u542b\u65b0 Secret\u3002\n [  run/connect_cloud_sql/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/run/connect_cloud_sql/main.tf) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/run/connect_cloud_sql/main.tf) \n```\nresource \"google_cloud_run_v2_service\" \"default\" {\u00a0 name \u00a0 \u00a0 = \"cloudrun-service\"\u00a0 location = \"us-central1\"\u00a0 template {\u00a0 \u00a0 containers {\u00a0 \u00a0 \u00a0 image = \"us-docker.pkg.dev/cloudrun/container/hello:latest\" # Image to deploy\u00a0 \u00a0 \u00a0 # Sets a environment variable for instance connection name\u00a0 \u00a0 \u00a0 env {\u00a0 \u00a0 \u00a0 \u00a0 name \u00a0= \"INSTANCE_CONNECTION_NAME\"\u00a0 \u00a0 \u00a0 \u00a0 value = google_sql_database_instance.default.connection_name\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 # Sets a secret environment variable for database user secret\u00a0 \u00a0 \u00a0 env {\u00a0 \u00a0 \u00a0 \u00a0 name = \"DB_USER\"\u00a0 \u00a0 \u00a0 \u00a0 value_source {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 secret_key_ref {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 secret \u00a0= google_secret_manager_secret.dbuser.secret_id # secret name\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 version = \"latest\" \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# secret version number or 'latest'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 # Sets a secret environment variable for database password secret\u00a0 \u00a0 \u00a0 env {\u00a0 \u00a0 \u00a0 \u00a0 name = \"DB_PASS\"\u00a0 \u00a0 \u00a0 \u00a0 value_source {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 secret_key_ref {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 secret \u00a0= google_secret_manager_secret.dbpass.secret_id # secret name\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 version = \"latest\" \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# secret version number or 'latest'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 # Sets a secret environment variable for database name secret\u00a0 \u00a0 \u00a0 env {\u00a0 \u00a0 \u00a0 \u00a0 name = \"DB_NAME\"\u00a0 \u00a0 \u00a0 \u00a0 value_source {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 secret_key_ref {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 secret \u00a0= google_secret_manager_secret.dbname.secret_id # secret name\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 version = \"latest\" \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# secret version number or 'latest'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 volume_mounts {\u00a0 \u00a0 \u00a0 \u00a0 name \u00a0 \u00a0 \u00a0 = \"cloudsql\"\u00a0 \u00a0 \u00a0 \u00a0 mount_path = \"/cloudsql\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 \u00a0 volumes {\u00a0 \u00a0 \u00a0 name = \"cloudsql\"\u00a0 \u00a0 \u00a0 cloud_sql_instance {\u00a0 \u00a0 \u00a0 \u00a0 instances = [google_sql_database_instance.default.connection_name]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }\u00a0 client \u00a0 \u00a0 = \"terraform\"\u00a0 depends_on = [google_project_service.secretmanager_api, google_project_service.cloudrun_api, google_project_service.sqladmin_api]}\n```\n\u8f38\u5165 `terraform apply` \u4ee5\u61c9\u7528\u66f4\u6539\u3002\n\u793a\u4f8b\u547d\u4ee4\u4f7f\u7528 Secret \u7248\u672c \uff1b\u4f46\u662f\uff0cGoogle \u5efa\u8b70 [\u5c07 Secret \u56fa\u5b9a\u7232\u7279\u5b9a\u7248\u672c SECRET_NAME:v1](https://cloud.google.com/secret-manager/docs/best-practices?hl=zh-cn#administration) \u3002\n\u5c0d\u65bc\u5c08\u7528 IP \u8def\u5f91\uff0c\u60a8\u7684\u61c9\u7528\u6703\u901a\u904e VPC \u7db2\u7d61\u76f4\u63a5\u9023\u63a5\u5230\u60a8\u7684\u5be6\u4f8b\u3002\u6b64\u65b9\u6cd5\u4f7f\u7528 TCP \u76f4\u63a5\u9023\u63a5\u5230 Cloud SQL \u5be6\u4f8b\uff0c\u7121\u9700\u4f7f\u7528 Cloud SQL Auth \u4ee3\u7406\u3002\n### \u4f7f\u7528 TCP \u9023\u63a5\u4f7f\u7528\u4f5c\u7232\u4e3b\u6a5f\u7684 Cloud SQL \u5be6\u4f8b\u7684\u5c08\u7528 IP \u5730\u5740\u548c\u7aef\u53e3 `5432` \u9032\u884c\u9023\u63a5\u3002\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/python-docs-samples/tree/master/cloud-sql/postgres/sqlalchemy/README.md) \u3002\n [  cloud-sql/postgres/sqlalchemy/connect_tcp.py ](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/cloud-sql/postgres/sqlalchemy/connect_tcp.py) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/cloud-sql/postgres/sqlalchemy/connect_tcp.py) \n```\nimport osimport sslimport sqlalchemydef connect_tcp_socket() -> sqlalchemy.engine.base.Engine:\u00a0 \u00a0 \"\"\"Initializes a TCP connection pool for a Cloud SQL instance of Postgres.\"\"\"\u00a0 \u00a0 # Note: Saving credentials in environment variables is convenient, but not\u00a0 \u00a0 # secure - consider a more secure solution such as\u00a0 \u00a0 # Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 \u00a0 # keep secrets safe.\u00a0 \u00a0 db_host = os.environ[\u00a0 \u00a0 \u00a0 \u00a0 \"INSTANCE_HOST\"\u00a0 \u00a0 ] \u00a0# e.g. '127.0.0.1' ('172.17.0.1' if deployed to GAE Flex)\u00a0 \u00a0 db_user = os.environ[\"DB_USER\"] \u00a0# e.g. 'my-db-user'\u00a0 \u00a0 db_pass = os.environ[\"DB_PASS\"] \u00a0# e.g. 'my-db-password'\u00a0 \u00a0 db_name = os.environ[\"DB_NAME\"] \u00a0# e.g. 'my-database'\u00a0 \u00a0 db_port = os.environ[\"DB_PORT\"] \u00a0# e.g. 5432\u00a0 \u00a0 pool = sqlalchemy.create_engine(\u00a0 \u00a0 \u00a0 \u00a0 # Equivalent URL:\u00a0 \u00a0 \u00a0 \u00a0 # postgresql+pg8000://<db_user>:<db_pass>@<db_host>:<db_port>/<db_name>\u00a0 \u00a0 \u00a0 \u00a0 sqlalchemy.engine.url.URL.create(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 drivername=\"postgresql+pg8000\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 username=db_user,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 password=db_pass,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 host=db_host,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port=db_port,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 database=db_name,\u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 # ...\u00a0 \u00a0 )\u00a0 \u00a0 return pool\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/master/cloud-sql/postgres/servlet/README.md) \u3002\n\u6ce8\u610f\uff1a\n- CLOUD_SQL_CONNECTION_NAME \u61c9\u8868\u793a\u7232 <MY-PROJECT>:<INSTANCE-REGION>:<INSTANCE-NAME>\n- \u4f7f\u7528\u53c3\u6578 ipTypes=PRIVATE \u5c07\u5f37\u5236 SocketFactory \u8207\u5be6\u4f8b\u7684\u95dc\u806f\u5c08\u7528 IP \u9023\u63a5\n- \u5982\u9700\u67e5\u770b pom.xml \u6587\u4ef6\u7684 JDBC \u5957\u63a5\u5b57\u5de5\u5ee0\u7248\u672c\u7684\u8981\u6c42\uff0c\u8acb\u9ede\u64ca [\u6b64\u8655](https://github.com/GoogleCloudPlatform/cloud-sql-jdbc-socket-factory/blob/main/docs/jdbc-mysql.md) \u3002\n [  cloud-sql/postgres/servlet/src/main/java/com/example/cloudsql/TcpConnectionPoolFactory.java ](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/cloud-sql/postgres/servlet/src/main/java/com/example/cloudsql/TcpConnectionPoolFactory.java) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/cloud-sql/postgres/servlet/src/main/java/com/example/cloudsql/TcpConnectionPoolFactory.java) \n```\nimport com.zaxxer.hikari.HikariConfig;import com.zaxxer.hikari.HikariDataSource;import javax.sql.DataSource;public class TcpConnectionPoolFactory extends ConnectionPoolFactory {\u00a0 // Note: Saving credentials in environment variables is convenient, but not\u00a0 // secure - consider a more secure solution such as\u00a0 // Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 // keep secrets safe.\u00a0 private static final String DB_USER = System.getenv(\"DB_USER\");\u00a0 private static final String DB_PASS = System.getenv(\"DB_PASS\");\u00a0 private static final String DB_NAME = System.getenv(\"DB_NAME\");\u00a0 private static final String INSTANCE_HOST = System.getenv(\"INSTANCE_HOST\");\u00a0 private static final String DB_PORT = System.getenv(\"DB_PORT\");\u00a0 public static DataSource createConnectionPool() {\u00a0 \u00a0 // The configuration object specifies behaviors for the connection pool.\u00a0 \u00a0 HikariConfig config = new HikariConfig();\u00a0 \u00a0 // The following URL is equivalent to setting the config options below:\u00a0 \u00a0 // jdbc:postgresql://<INSTANCE_HOST>:<DB_PORT>/<DB_NAME>?user=<DB_USER>&password=<DB_PASS>\u00a0 \u00a0 // See the link below for more info on building a JDBC URL for the Cloud SQL JDBC Socket Factory\u00a0 \u00a0 // https://github.com/GoogleCloudPlatform/cloud-sql-jdbc-socket-factory#creating-the-jdbc-url\u00a0 \u00a0 // Configure which instance and what database user to connect with.\u00a0 \u00a0 config.setJdbcUrl(String.format(\"jdbc:postgresql://%s:%s/%s\", INSTANCE_HOST, DB_PORT, DB_NAME));\u00a0 \u00a0 config.setUsername(DB_USER); // e.g. \"root\", \"postgres\"\u00a0 \u00a0 config.setPassword(DB_PASS); // e.g. \"my-password\"\u00a0 \u00a0 // ... Specify additional connection properties here.\u00a0 \u00a0 // ...\u00a0 \u00a0 // Initialize the connection pool using the configuration object.\u00a0 \u00a0 return new HikariDataSource(config);\u00a0 }}\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/master/cloud-sql/postgres/knex/README.md) \u3002\n [  cloud-sql/postgres/knex/connect-tcp.js ](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/cloud-sql/postgres/knex/connect-tcp.js) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/cloud-sql/postgres/knex/connect-tcp.js) \n```\nconst Knex = require('knex');const fs = require('fs');// createTcpPool initializes a TCP connection pool for a Cloud SQL// instance of Postgres.const createTcpPool = async config => {\u00a0 // Note: Saving credentials in environment variables is convenient, but not\u00a0 // secure - consider a more secure solution such as\u00a0 // Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 // keep secrets safe.\u00a0 const dbConfig = {\u00a0 \u00a0 client: 'pg',\u00a0 \u00a0 connection: {\u00a0 \u00a0 \u00a0 host: process.env.INSTANCE_HOST, // e.g. '127.0.0.1'\u00a0 \u00a0 \u00a0 port: process.env.DB_PORT, // e.g. '5432'\u00a0 \u00a0 \u00a0 user: process.env.DB_USER, // e.g. 'my-user'\u00a0 \u00a0 \u00a0 password: process.env.DB_PASS, // e.g. 'my-user-password'\u00a0 \u00a0 \u00a0 database: process.env.DB_NAME, // e.g. 'my-database'\u00a0 \u00a0 },\u00a0 \u00a0 // ... Specify additional properties here.\u00a0 \u00a0 ...config,\u00a0 };\u00a0 // Establish a connection to the database.\u00a0 return Knex(dbConfig);};\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/golang-samples/tree/master/cloudsql/postgres/database-sql/README.md) \u3002\n [  cloudsql/postgres/database-sql/connect_tcp.go ](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/cloudsql/postgres/database-sql/connect_tcp.go) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/cloudsql/postgres/database-sql/connect_tcp.go) \n```\npackage cloudsqlimport (\u00a0 \u00a0 \u00a0 \u00a0 \"database/sql\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"log\"\u00a0 \u00a0 \u00a0 \u00a0 \"os\"\u00a0 \u00a0 \u00a0 \u00a0 // Note: If connecting using the App Engine Flex Go runtime, use\u00a0 \u00a0 \u00a0 \u00a0 // \"github.com/jackc/pgx/stdlib\" instead, since v5 requires\u00a0 \u00a0 \u00a0 \u00a0 // Go modules which are not supported by App Engine Flex.\u00a0 \u00a0 \u00a0 \u00a0 _ \"github.com/jackc/pgx/v5/stdlib\")// connectTCPSocket initializes a TCP connection pool for a Cloud SQL// instance of Postgres.func connectTCPSocket() (*sql.DB, error) {\u00a0 \u00a0 \u00a0 \u00a0 mustGetenv := func(k string) string {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 v := os.Getenv(k)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if v == \"\" {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatalf(\"Fatal Error in connect_tcp.go: %s environment variable not set.\", k)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return v\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Note: Saving credentials in environment variables is convenient, but not\u00a0 \u00a0 \u00a0 \u00a0 // secure - consider a more secure solution such as\u00a0 \u00a0 \u00a0 \u00a0 // Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 \u00a0 \u00a0 \u00a0 // keep secrets safe.\u00a0 \u00a0 \u00a0 \u00a0 var (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbUser \u00a0 \u00a0= mustGetenv(\"DB_USER\") \u00a0 \u00a0 \u00a0 // e.g. 'my-db-user'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbPwd \u00a0 \u00a0 = mustGetenv(\"DB_PASS\") \u00a0 \u00a0 \u00a0 // e.g. 'my-db-password'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbTCPHost = mustGetenv(\"INSTANCE_HOST\") // e.g. '127.0.0.1' ('172.17.0.1' if deployed to GAE Flex)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbPort \u00a0 \u00a0= mustGetenv(\"DB_PORT\") \u00a0 \u00a0 \u00a0 // e.g. '5432'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbName \u00a0 \u00a0= mustGetenv(\"DB_NAME\") \u00a0 \u00a0 \u00a0 // e.g. 'my-database'\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 dbURI := fmt.Sprintf(\"host=%s user=%s password=%s port=%s database=%s\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbTCPHost, dbUser, dbPwd, dbPort, dbName)\u00a0 \u00a0 \u00a0 \u00a0 // dbPool is the pool of database connections.\u00a0 \u00a0 \u00a0 \u00a0 dbPool, err := sql.Open(\"pgx\", dbURI)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"sql.Open: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // ...\u00a0 \u00a0 \u00a0 \u00a0 return dbPool, nil}\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/master/cloud-sql/mysql/README.md) \u3002\n [  cloud-sql/postgres/ConnectTcp.cs ](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/cloud-sql/postgres/ConnectTcp.cs) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/cloud-sql/postgres/ConnectTcp.cs) \n```\nusing Npgsql;using System;namespace CloudSql{\u00a0 \u00a0 public class PostgreSqlTcp\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 public static NpgsqlConnectionStringBuilder NewPostgreSqlTCPConnectionString()\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Equivalent connection string:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // \"Uid=<DB_USER>;Pwd=<DB_PASS>;Host=<INSTANCE_HOST>;Database=<DB_NAME>;\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 var connectionString = new NpgsqlConnectionStringBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Note: Saving credentials in environment variables is convenient, but not\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // secure - consider a more secure solution such as\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // keep secrets safe.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Host = Environment.GetEnvironmentVariable(\"INSTANCE_HOST\"), \u00a0 \u00a0 // e.g. '127.0.0.1'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set Host to 'cloudsql' when deploying to App Engine Flexible environment\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Username = Environment.GetEnvironmentVariable(\"DB_USER\"), // e.g. 'my-db-user'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Password = Environment.GetEnvironmentVariable(\"DB_PASS\"), // e.g. 'my-db-password'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Database = Environment.GetEnvironmentVariable(\"DB_NAME\"), // e.g. 'my-database'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // The Cloud SQL proxy provides encryption between the proxy and instance.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SslMode = SslMode.Disable,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 connectionString.Pooling = true;\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Specify additional properties here.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return connectionString;\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/ruby-docs-samples/tree/master/cloud-sql/postgres/activerecord/README.md) \u3002\n [  cloud-sql/postgres/activerecord/config/database_tcp.yml ](https://github.com/GoogleCloudPlatform/ruby-docs-samples/blob/HEAD/cloud-sql/postgres/activerecord/config/database_tcp.yml) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/ruby-docs-samples/blob/HEAD/cloud-sql/postgres/activerecord/config/database_tcp.yml) \n```\ntcp: &tcp\u00a0 adapter: postgresql\u00a0 # Configure additional properties here.\u00a0 # Note: Saving credentials in environment variables is convenient, but not\u00a0 # secure - consider a more secure solution such as\u00a0 # Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 # keep secrets safe.\u00a0 username: <%= ENV[\"DB_USER\"] %> \u00a0# e.g. \"my-database-user\"\u00a0 password: <%= ENV[\"DB_PASS\"] %> # e.g. \"my-database-password\"\u00a0 database: <%= ENV.fetch(\"DB_NAME\") { \"vote_development\" } %>\u00a0 host: <%= ENV.fetch(\"INSTANCE_HOST\") { \"127.0.0.1\" }%> # '172.17.0.1' if deployed to GAE Flex\u00a0 port: <%= ENV.fetch(\"DB_PORT\") { 5432 }%>\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/php-docs-samples/tree/main/cloud_sql/postgres/pdo/README.md) \u3002\n [  cloud_sql/postgres/pdo/src/DatabaseTcp.php ](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/cloud_sql/postgres/pdo/src/DatabaseTcp.php) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/cloud_sql/postgres/pdo/src/DatabaseTcp.php) \n```\nnamespace Google\\Cloud\\Samples\\CloudSQL\\Postgres;use PDO;use PDOException;use RuntimeException;use TypeError;class DatabaseTcp{\u00a0 \u00a0 public static function initTcpDatabaseConnection(): PDO\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Note: Saving credentials in environment variables is convenient, but not\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // secure - consider a more secure solution such as\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // keep secrets safe.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $username = getenv('DB_USER'); // e.g. 'your_db_user'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $password = getenv('DB_PASS'); // e.g. 'your_db_password'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $dbName = getenv('DB_NAME'); // e.g. 'your_db_name'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $instanceHost = getenv('INSTANCE_HOST'); // e.g. '127.0.0.1' ('172.17.0.1' for GAE Flex)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Connect using TCP\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $dsn = sprintf('pgsql:dbname=%s;host=%s', $dbName, $instanceHost);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Connect to the database\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $conn = new PDO(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $dsn,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $username,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $password,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # ...\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 } catch (TypeError $e) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 throw new RuntimeException(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sprintf(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'Invalid or missing configuration! Make sure you have set ' .\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 '$username, $password, $dbName, and $instanceHost (for TCP mode). ' .\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'The PHP error was %s',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e->getMessage()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e->getCode(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 } catch (PDOException $e) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 throw new RuntimeException(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sprintf(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'Could not connect to the Cloud SQL Database. Check that ' .\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'your username and password are correct, that the Cloud SQL ' .\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'proxy is running, and that the database exists and is ready ' .\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'for use. For more assistance, refer to %s. The PDO error was %s',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'https://cloud.google.com/sql/docs/postgres/connect-external-app',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e->getMessage()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e->getCode(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return $conn;\u00a0 \u00a0 }}\n```\n## \u6700\u4f73\u505a\u6cd5\u548c\u5176\u4ed6\u4fe1\u606f\n\u5728\u672c\u5730\u6e2c\u8a66\u61c9\u7528\u6642\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 [Cloud SQL Auth \u4ee3\u7406](https://cloud.google.com/sql/docs/postgres/sql-proxy?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u7d30\u8aaa\u660e\uff0c\u8acb\u53c3\u95b1 [\u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528 Cloud SQL Auth \u4ee3\u7406](https://cloud.google.com/sql/docs/mysql/connect-instance-auth-proxy?hl=zh-cn) \u3002\n\u60a8\u4e5f\u53ef\u4ee5 [\u901a\u904e Docker \u5bb9\u5668\u4f7f\u7528 Cloud SQL \u4ee3\u7406](https://cloud.google.com/sql/docs/postgres/connect-docker?hl=zh-cn) \u9032\u884c\u6e2c\u8a66\u3002\n### \u9023\u63a5\u6c60\n[\u7ba1\u7406\u6578\u64da\u5eab\u9023\u63a5](https://cloud.google.com/sql/docs/postgres/manage-connections?hl=zh-cn)\n### \u9023\u63a5\u9650\u5236\n[Cloud SQL \u914d\u984d\u548c\u9650\u5236](https://cloud.google.com/sql/docs/quotas?hl=zh-cn#fixed-limits)\nCloud Run \u5bb9\u5668\u5be6\u4f8b\u8207\u4e00\u500b Cloud SQL \u6578\u64da\u5eab\u4e4b\u9593\u6700\u591a\u96bb\u80fd\u5efa\u7acb 100 \u500b\u9023\u63a5\u3002Cloud Run \u670d\u52d9\u6216\u4f5c\u696d\u7684\u6bcf\u500b\u5be6\u4f8b\u90fd\u53ef\u4ee5\u8207\u6578\u64da\u5eab\u5efa\u7acb 100 \u500b\u9023\u63a5\uff0c\u96a8\u7740\u6b64\u670d\u52d9\u6216\u4f5c\u696d\u64f4\u7e2e\uff0c\u6bcf\u500b\u90e8\u7f72\u7684\u9023\u63a5\u7e3d\u6578\u53ef\u4ee5\u589e\u52a0\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u9023\u63a5\u6c60\u4f86\u9650\u5236\u6bcf\u500b\u5be6\u4f8b\u4f7f\u7528\u7684\u6700\u5927\u9023\u63a5\u6578\u3002\u5982\u9700\u67e5\u770b\u6709\u95dc\u5982\u4f55\u9650\u5236\u9023\u63a5\u6578\u7684\u8a73\u7d30\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 [\u7ba1\u7406\u6578\u64da\u5eab\u9023\u63a5](https://cloud.google.com/sql/docs/postgres/manage-connections?hl=zh-cn#count) \u9801\u9762\u3002\n### API \u914d\u984d\u9650\u5236\n[API \u914d\u984d\u9650\u5236](https://console.cloud.google.com/iam-admin/quotas?service=sqladmin.googleapis.com&hl=zh-cn)\n[\u9650\u5236\u6216\u589e\u52a0 Cloud Run \u5be6\u4f8b\u7684\u6578\u91cf](https://cloud.google.com/run/docs/configuring/max-instances?hl=zh-cn)\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u8a73\u7d30\u77ad\u89e3 [Cloud Run](https://cloud.google.com/run/docs?hl=zh-cn) \u3002\n- \u8a73\u7d30\u77ad\u89e3\u5982\u4f55 [\u69cb\u5efa\u548c\u90e8\u7f72](https://cloud.google.com/run/docs/quickstarts/build-and-deploy?hl=zh-cn) \u5bb9\u5668\u6620\u50cf\u3002\n- \u53c3\u95b1 [\u5b8c\u6574\u7684 Python \u793a\u4f8b\uff0c\u77ad\u89e3\u5982\u4f55\u5c07 Cloud Run \u8207 PostgreSQL \u642d\u914d\u4f7f\u7528](https://github.com/GoogleCloudPlatform/python-docs-samples/tree/master/cloud-sql/postgres/sqlalchemy) \u3002", "guide": "Cloud SQL"}