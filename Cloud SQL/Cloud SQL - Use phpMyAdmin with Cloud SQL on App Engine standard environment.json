{"title": "Cloud SQL - Use phpMyAdmin with Cloud SQL on App Engine standard environment", "url": "https://cloud.google.com/sql/docs/mysql/phpmyadmin-on-app-engine", "abstract": "# Cloud SQL - Use phpMyAdmin with Cloud SQL on App Engine standard environment\nLearn how to install phpMyAdmin on App Engine standard environment. You can use phpMyAdmin to administer Cloud SQL over the web.\nYou will find this tutorial helpful if you:- Run applications on App Engine.\n- Use [Cloud SQL](/sql/docs) as your database.\n- Use phpMyAdmin as an interface for MySQL or you prefer a web interface for database administration.\n **Note:** This tutorial only applies to MySQL version 5.7 or lower.\nIf you use Compute Engine, consider using one of the development stacks or products available through Click to Deploy. Deployments of stacks that include MySQL, such as [LAMP](/marketplace/solution/click-to-deploy-images/lamp) and [LEMP](/marketplace/solution/click-to-deploy-images/lemp) , or products such as [Drupal](/marketplace/solution/click-to-deploy-images/drupal) , provide an option to install phpMyAdmin as part of the deployment.", "content": "## Objectives\n- Deploy phpMyAdmin on App Engine standard environment.\n## CostsThis tutorial uses billable components of Cloud Platform, including:- App Engine\n- Cloud SQL\nUse the [Pricing Calculator](/products/calculator) to generate a cost estimate based on your projected usage. ## Before you begin\n- Create a [Cloud SQLSecond Generation instance](/sql/docs/mysql/create-instance#create-2nd-gen) .\n- (Optional) Deploy an App Engine application that uses your Cloud SQL instance or select an existing application.For example, [create and deploy the guestbook sample](/appengine/docs/php/cloud-sql) . Although you can deploy phpMyAdmin on its own, you'll probably want to use it with an App Engine application in your real-world scenario.\n## Download the phpMyAdmin source codeYou'll deploy phpMyAdmin as a service of your App Engine application, so you must download the source code for phpMyAdmin. Follow these steps:- In a Cloud Shell terminal, enter the following command to download the source code for phpMyAdmin version 4.9.5:```\nwget https://files.phpmyadmin.net/phpMyAdmin/4.9.5/phpMyAdmin-4.9.5-all-languages.tar.gz\n```To use a different version of phpMyAdmin, use the links to available versions on the [phpMyAdmin Downloads page](http://www.phpmyadmin.net/home_page/downloads.php) .\n- Make a new directory. You will extract the files into this directory.```\nmkdir phpMyAdmin\n```\n- Extract the files from the archive into the new directory.```\ntar -xzvf phpMyAdmin-4.9.5-all-languages.tar.gz -C phpMyAdmin --strip-components=1\n```\n## Prepare the files for deploymentDeploying phpMyAdmin requires that you create three files: `app.yaml` , which contains the configuration information for App Engine; `config.inc.php` , which contains the configuration information for phpMyAdmin; and `php.ini` , which contains application-specific configuration for PHP.\n### Create app.yamlThe [App Engine configuration file](/appengine/docs/php/config/appconfig) specifies how URL paths correspond to request handlers and static files. It also contains information about the application code, such as the application ID and the latest version identifier. Follow these steps to create the file:- In the directory that you created, named `phpMyAdmin` , create a new file named `app.yaml` .```\ncd phpMyAdmintouch app.yaml\n```\n- Using your favorite editor, paste the following text into `app.yaml` . [  appengine/php55/phpmyadmin/app.yaml ](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/6cc23dab3976cc242b07308963736765998157cc/appengine/php55/phpmyadmin/app.yaml) [View on GitHub](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/6cc23dab3976cc242b07308963736765998157cc/appengine/php55/phpmyadmin/app.yaml) ```\nservice: phpmyadminruntime: php55api_version: 1handlers:- url: /(.+\\.(ico|jpg|png|gif))$\u00a0 static_files: \\1\u00a0 upload: (.+\\.(ico|jpg|png|gif))$\u00a0 application_readable: true- url: /(.+\\.(htm|html|css|js))$\u00a0 static_files: \\1\u00a0 upload: (.+\\.(htm|html|css|js))$\u00a0 application_readable: true- url: /(.+\\.php)$\u00a0 script: \\1\u00a0 login: admin- url: /.*\u00a0 script: index.php\u00a0 login: admin\n```\n- If you are deploying phpMyAdmin as the first and only application in App Engine, change the value for `service` from `phpmyadmin` to `default` .Normally, you would deploy phpMyAdmin as a service of an existing application and provide a name for the service. However, if you haven't yet deployed an application, then you are required to use the service name \"default\". That's fine for the purposes of this tutorial if you're trying out phpMyAdmin on App Engine.This tutorial works only for App Engine standard environment.\n- Save the file.\n### Create config.inc.phpFollow these steps to create the phpMyAdmin configuration file.- Create a new file named `config.inc.php` .```\ntouch config.inc.php\n```\n- Using your favorite editor, paste the following text into `config.inc.php` . [  appengine/php55/phpmyadmin/config.inc.php ](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/6cc23dab3976cc242b07308963736765998157cc/appengine/php55/phpmyadmin/config.inc.php) [View on GitHub](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/6cc23dab3976cc242b07308963736765998157cc/appengine/php55/phpmyadmin/config.inc.php) ```\n<?php/**\u00a0* Copyright 2016 Google Inc.\u00a0*\u00a0* Licensed under the Apache License, Version 2.0 (the \"License\");\u00a0* you may not use this file except in compliance with the License.\u00a0* You may obtain a copy of the License at\u00a0*\u00a0* \u00a0 \u00a0 http://www.apache.org/licenses/LICENSE-2.0\u00a0*\u00a0* Unless required by applicable law or agreed to in writing, software\u00a0* distributed under the License is distributed on an \"AS IS\" BASIS,\u00a0* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u00a0* See the License for the specific language governing permissions and\u00a0* limitations under the License.\u00a0*//*\u00a0* This is needed for cookie based authentication to encrypt password in\u00a0* cookie\u00a0* http://www.question-defense.com/tools/phpmyadmin-blowfish-secret-generator\u00a0*/$cfg['blowfish_secret'] = '{{your_secret}}'; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! *//*\u00a0* Servers configuration\u00a0*/$i = 0;// Change this to use the project and instance that you've created.$host = '/cloudsql/{{your_connection_string}}';$type = 'socket';/** First server*/$i++;/* Authentication type */$cfg['Servers'][$i]['auth_type'] = 'cookie';/* Server parameters */$cfg['Servers'][$i]['socket'] = $host;$cfg['Servers'][$i]['connect_type'] = $type;$cfg['Servers'][$i]['compress'] = false;/* Select mysql if your server does not have mysqli */$cfg['Servers'][$i]['extension'] = 'mysqli';$cfg['Servers'][$i]['AllowNoPassword'] = true;/*\u00a0* End of servers configuration\u00a0*//*\u00a0* Directories for saving/loading files from server\u00a0*/$cfg['UploadDir'] = '';$cfg['SaveDir'] = '';/** Other settings*/$cfg['PmaNoRelation_DisableWarning'] = true;$cfg['ExecTimeLimit'] = 60;$cfg['CheckConfigurationPermissions'] = false;\n```\n- Open Google Cloud Shell and execute the following to get a random string for your blowfish:```\nphp -r \"echo password_hash(uniqid(), PASSWORD_BCRYPT).PHP_EOL;\"\n```\n- Paste the new secret in place of `{{your_secret}}` in `config.inc.php` .\n- Go to the [Cloud SQL instances page](https://console.cloud.google.com/sql/instances) in the Google Cloud console.\n- Click the Cloud SQL instance to display its Instance details page.\n- Replace the value of `{{your_connection_string}}` (within the `$host` variable) with the **Instance connection name** property.\n- Save the file.\n### Create php.iniIn its code, phpMyAdmin uses functions that are disabled by default in App Engine. Follow these steps to add a `php.ini` file so that App Engine enables the functions again:- In the `phpMyAdmin` directory, create the file.```\ntouch php.ini\n```\n- Edit the file and add the following line: [  appengine/php55/phpmyadmin/php.ini ](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/6cc23dab3976cc242b07308963736765998157cc/appengine/php55/phpmyadmin/php.ini) [View on GitHub](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/6cc23dab3976cc242b07308963736765998157cc/appengine/php55/phpmyadmin/php.ini) ```\ngoogle_app_engine.enable_functions = \"php_uname, getmypid\"\n```\n- Save the file.\n## Deploy the applicationUse the following commands to deploy your application to App Engine.- Check for updates for your `gcloud` components.```\ngcloud components update\n```\n- Deploy the application by running the following command from within the `phpMyAdmin` directory where your `app.yaml` file is located:```\ngcloud app deploy\n```This command deploys the app to the `phpMyAdmin` service, as specified your `app.yaml` file. Deploying to a separate service helps to ensure that phpMyAdmin runs in the same data center as your main application, which improves performance. To learn more about deploying your app from the command line, see [Deploying a PHP App](/appengine/docs/php/tools/uploadinganapp) .\n## Log in to phpMyAdminYou can now log in to phpMyAdmin.- In your web browser, enter the URL for phpMyAdmin to open the welcome page, changing the URL to use your app ID.```\n\u00a0 \u00a0 https://phpmyadmin-dot-[YOUR_APP_ID].appspot.com\n```\n- For **Username** , enter **root** .\n- Enter the root password you provided when you configured the root account.\n- Click **Go** .\nAs you develop your App Engine app, remember to password protect any user accounts that you create to access databases in Cloud SQL.## TroubleshootApp Engine uses the Cloud SQL Auth Proxy to connect to Cloud SQL Second Generation instances. For more information about how the Cloud SQL Auth Proxy works, see [About the Cloud SQL Auth Proxy](/sql/docs/mysql/sql-proxy) .\nThe [App Engine logs](https://console.cloud.google.com/logs) in the [Google Cloud console](https://console.cloud.google.com/) can provide information about App Engine errors.## Clean up\nAfter you finish the tutorial, you can clean up the resources that you created so that they stop using quota and incurring charges. The following sections describe how to delete or turn off these resources.\n### Delete the project\nThe easiest way to eliminate billing is to delete the project that you created for the tutorial.\nTo delete the project:\n- **Caution** : Deleting a project has the following effects:- **Everything in the project is deleted.** If you used an existing project for  the tasks in this document, when you delete it, you also delete any other work you've  done in the project.\n- **Custom project IDs are lost.** When you created this project, you might have created a custom project ID that you want to use in  the future. To preserve the URLs that use the project ID, such as an`appspot.com`URL, delete selected resources inside the project instead of deleting the whole project.\nIf you plan to explore multiple architectures, tutorials, or quickstarts, reusing projects  can help you avoid exceeding project quota limits.\n- In the Google Cloud console, go to the **Manage resources** page. [Go to Manage resources](https://console.cloud.google.com/iam-admin/projects) \n- In the project list, select the project that you  want to delete, and then click **Delete** .\n- In the dialog, type the project ID, and then click **Shut down** to delete the project.### Delete instances\nTo delete a Cloud SQL instance:\n- In the Google Cloud console, go to the **Instances** page. [Go to Instances](https://console.cloud.google.com/sql/instances) \n- Click the name of   the SQL instance you that want to delete.\n- To delete the instance,  clickdelete **Delete** , and then follow the  instructions.\n## What's next\n- [Learn more about phpMyAdmin](http://www.phpmyadmin.net/home_page/docs.php) .\n- Explore reference architectures, diagrams, and best practices about Google Cloud. Take a look at our [Cloud Architecture Center](/architecture) .", "guide": "Cloud SQL"}