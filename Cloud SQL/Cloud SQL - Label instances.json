{"title": "Cloud SQL - Label instances", "url": "https://cloud.google.com/sql/docs/postgres/label-instance", "abstract": "# Cloud SQL - Label instances\nThis page explains labels. It describes how to create an instance with labels; how to add, update, and remove labels; and how to use labels in searches.\nLabels are a lightweight way to group together instances that are related or associated with each other. For example, you could label your instances according to whether you are using them as test or production, or you could add your own billing code to an instance. You can use the labels to search for instances or to track instance charges.\nYou always add labels as key/value pairs:\n```\n{\u00a0\"userLabels\": {\u00a0 \u00a0 \"track\": \"production\",\u00a0 \u00a0 \"location\": \"western-division\"\u00a0 \u00a0 \"billing-code\": \"34802\",...\u00a0}\n```\nModifying labels has no impact on Cloud SQL instance performance.\nFor more information, see [What are labels?](/resource-manager/docs/creating-managing-labels#what-are-labels) and [Requirements for labels](/resource-manager/docs/creating-managing-labels#requirements) .\n", "content": "## Restrictions\n- You can assign up to 64 labels to each instance.\n- Label keys and values must conform to the following restrictions:- Keys and values cannot be longer than 63 characters each.\n- Keys and values can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed.\n- Label keys must start with a lowercase letter.\n- Label keys cannot be empty.\n## Create instances with labels\nWhen creating a new instance using the [gcloud CLI](/sdk/gcloud) or the API, you can apply labels to the instance.\nWhen creating your instance, include the `--labels` flag, followed by a  comma-separated list of key value pairs of labels. You must use the  beta version of the create command to include labels.\nFor example:\n```\ngcloud beta sql instances create ... --labels track=production,billing-code=34802\n```When creating an instance with a label, use a [Terraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance) :\n [  cloud_sql/postgres_instance_labels/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_labels/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_labels/main.tf) \n```\nresource \"google_sql_database_instance\" \"postgres_instance_labels\" {\n name    = \"postgres-instance-labels\"\n region   = \"us-central1\"\n database_version = \"POSTGRES_14\"\n settings {\n tier = \"db-custom-2-7680\"\n user_labels = {\n  track  = \"production\"\n  billing-code = 34802\n }\n }\n # set `deletion_protection` to true, will ensure that one cannot accidentally delete this instance by\n # use of Terraform whereas `deletion_protection_enabled` flag protects this instance at the GCP level.\n deletion_protection = false\n}\n```To apply your Terraform configuration in a Google Cloud project, complete the steps in the following sections.## Prepare Cloud Shell\n- Launch [Cloud Shell](https://shell.cloud.google.com/) .\n- Set the default Google Cloud project  where you want to apply your Terraform configurations.You only need to run this command once per project, and you can run it in any directory.```\nexport GOOGLE_CLOUD_PROJECT=PROJECT_ID\n```Environment variables are overridden if you set explicit values in the Terraform  configuration file.\n## Prepare the directoryEach Terraform configuration file must have its own directory (also called a ).- In [Cloud Shell](https://shell.cloud.google.com/) , create a directory and a new  file within that directory. The filename must have the`.tf`extension\u2014for example`main.tf`. In this  tutorial, the file is referred to as`main.tf`.```\nmkdir DIRECTORY && cd DIRECTORY && touch main.tf\n```\n- If you are following a tutorial, you can copy the sample code in each section or step.Copy the sample code into the newly created `main.tf` .Optionally, copy the code from GitHub. This is recommended  when the Terraform snippet is part of an end-to-end solution.\n- Review and modify the sample parameters to apply to your environment.\n- Save your changes.\n- Initialize Terraform. You only need to do this once per directory.```\nterraform init\n```Optionally, to use the latest Google provider version, include the `-upgrade` option:```\nterraform init -upgrade\n```\n## Apply the changes\n- Review the configuration and verify that the resources that Terraform is going to create or  update match your expectations:```\nterraform plan\n```Make corrections to the configuration as necessary.\n- Apply the Terraform configuration by running the following command and entering`yes`at the prompt:```\nterraform apply\n```Wait until Terraform displays the \"Apply complete!\" message.\n- [Open your Google Cloud project](https://console.cloud.google.com/) to view  the results. In the Google Cloud console, navigate to your resources in the UI to make sure  that Terraform has created or updated them.\n **Note:** Terraform samples typically assume that the required APIs are enabled in your Google Cloud project.To delete your changes, do the following:- To disable deletion protection, in your Terraform configuration file set the`deletion_protection`argument to`false`.```\ndeletion_protection = \"false\"\n```\n- Apply the updated Terraform configuration by running the following command and    entering`yes`at the prompt:```\nterraform apply\n```\n- Remove resources previously applied with your Terraform configuration by running the following command and entering `yes` at the prompt:```\nterraform destroy\n```\nIn the API, during the `POST` request to add a new instance, add the  `userLabels` property in the request body to apply labels to the new instance.  For example, your request body for creating an instance has the following  labels:\n```\n   \"settings\": {\"tier\":\"db-custom-2-7680\",\n      \"userLabels\": {\"track\": \"production\",\n          \"location\": \"western-division\",\n          \"billing-code\": \"34802\"},\n   \n```\n## Add or update labels on an existing instance\n- Go to the Cloud SQL Instances page in the Google Cloud console. [Go to the Cloud SQL Instances page](https://console.cloud.google.com/sql/instances) \n- Select the checkboxes next to the resources you want to label.\n- Click **Show Info Panel** in the upper righthand corner to expand the labels column.\n- Update or add new labels as desired.\n- Save your changes.\nUse the `patch` subcommand (beta version) to update or add labels on an existing instance:\n```\ngcloud beta sql instances patch [INSTANCE_NAME] --update-labels [KEY1]=[VALUE1]...\n```\nFor example:\n```\ngcloud beta sql instances patch my-instance --update-labels track=production,billing-code=34802\n```\nIf you provide a label key that already exists, the tool updates the existing key with the new label value. If you provide a new key, the tool adds the new key to the list of labels. Only the labels you specify are affected; existing labels not included in the command remain unchanged.\nTo add or update labels, use the `PATCH` method:\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : A label name\n- : The value of label-name-1\n- : A label name\n- : The value of label-name-2\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id\n```\nRequest JSON body:\n```\n{\n \"settings\" :\n {\n  \"userLabels\" :\n   {\n   \"label-name-1\" : \"value-1\",\n   \"label-name-2\" : \"value-2\"\n   }\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"operationType\": \"UPDATE\",\n \"name\": \"operation-id\",\n \"targetId\": \"instance-id\",\n \"selfLink\": \"https://sqladmin.googleapis.com/v1/projects/project-id/operations/operation-id\",\n \"targetProject\": \"project-id\"\n}\n```\nIf you provide a label key that already exists, the tool updates the existing key with the new label value. If you provide a new key, the tool adds the new key to the list of labels. Only the labels you specify are affected; existing labels not included in the request remain unchanged.\nTo add or update labels, use the `PATCH` method:\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : A label name\n- : The value of label-name-1\n- : A label name\n- : The value of label-name-2\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id\n```\nRequest JSON body:\n```\n{\n \"settings\" :\n {\n  \"userLabels\" :\n   {\n   \"label-name-1\" : \"value-1\",\n   \"label-name-2\" : \"value-2\"\n   }\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"operationType\": \"UPDATE\",\n \"name\": \"operation-id\",\n \"targetId\": \"instance-id\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/operations/operation-id\",\n \"targetProject\": \"project-id\"\n}\n```\nIf you provide a label key that already exists, the tool updates the existing key with the new label value. If you provide a new key, the tool adds the new key to the list of labels. Only the labels you specify are affected; existing labels not included in the request remain unchanged.\n## Remove a label\n- Go to the Cloud SQL Instances page in the Google Cloud console. [Go to the Cloud SQL Instances page](https://console.cloud.google.com/sql/instances) \n- Select the checkboxes next to the resources for which you want to remove labels.\n- Click **Show info panel** to expand the labels column.\n- Click the `X` next to all the labels you want to remove.\n- Save your changes.\nUsing the [gcloud CLI](/sdk/gcloud) , run the `patch` subcommand (beta version) with the `--remove-labels` flag:\n```\ngcloud beta sql instances patch [INSTANCE_NAME] --remove-labels [LABEL1],[LABEL2]\n```\nIf you provide a label name that does not exist, no error is returned.\nYou remove a label using the API by setting its value to `null` :\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The label name\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id\n```\nRequest JSON body:\n```\n{\n \"settings\" :\n {\n  \"userLabels\" :\n   {\n   \"label-name\" : null,\n   }\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"operationType\": \"UPDATE\",\n \"name\": \"operation-id\",\n \"targetId\": \"instance-id\",\n \"selfLink\": \"https://sqladmin.googleapis.com/v1/projects/project-id/operations/operation-id\",\n \"targetProject\": \"project-id\"\n}\n```\nYou remove a label using the API by setting its value to `null` :\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The label name\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id\n```\nRequest JSON body:\n```\n{\n \"settings\" :\n {\n  \"userLabels\" :\n   {\n   \"label-name\" : null,\n   }\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"operationType\": \"UPDATE\",\n \"name\": \"operation-id\",\n \"targetId\": \"instance-id\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/operations/operation-id\",\n \"targetProject\": \"project-id\"\n}\n```\n## Filter instance searches using labels\nYou can filter your instance list results by labels using the gcloud CLI or the API.\nIn `gcloud` , make a `list` request and use the `--filter` flag. To filter on labels, use the syntax `labels.[KEY]:[VALUE]` . For example, if you wanted to filter on a label `billing-code` with a value of `34802` , you can run this command:\n```\ngcloud beta sql instances list --filter='labels.billing-code:34802'\n```\nIf you want to filter on whether a label exists, regardless of its value:\n```\ngcloud beta sql instances list --filter='labels:billing-code'\n```\nFor complete documentation about the filter syntax in the gcloud CLI, see the [gcloud topic filters documentation](/sdk/gcloud/reference/topic/filters) .\nIn the API, make a list request with a URL encoded `filter` query parameter:\n```\ngcloud auth loginACCESS_TOKEN=\"$(gcloud auth print-access-token)\"curl --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\u00a0 \u00a0 \u00a0-X GET \\\u00a0 \u00a0 \u00a0https://www.googleapis.com/sql/v1beta4/projects/[PROJECT_ID]/instances/list?filter=userLabels.[KEY1_NAME]:[KEY1_VALUE]%20userLabels.[KEY2_NAME]:[KEY2_VALUE]\n```\nFor example:\n```\ncurl --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\u00a0 \u00a0 \u00a0-X GET \\\u00a0 \u00a0 \u00a0https://www.googleapis.com/sql/v1beta4/projects/[PROJECT_ID]/instances/list?filter=userLabels.track:production%20userLabels.billing-code:34802\n```\nWhen two label values are included with an (encoded) space between them, they both must be true for an instance to be returned (an `AND` operation). You can also explicitly provide `AND` , `OR` , and `NOT` operators. For example:\n```\ncurl --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\u00a0 \u00a0 \u00a0-X GET \\\u00a0 \u00a0 \u00a0https://www.googleapis.com/sql/v1beta4/projects/[PROJECT_ID]/instances/list?filter=userLabels.track:production%20OR%20userLabels.billing-code:34802\n```\n## What's next\n- Learn about [exporting billing data to BigQuery](/billing/docs/how-to/export-data-bigquery) .\n- Learn about [filtering using the gcloud tool](/sdk/gcloud/reference/topic/filters) .", "guide": "Cloud SQL"}