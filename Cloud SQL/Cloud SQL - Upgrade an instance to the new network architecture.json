{"title": "Cloud SQL - Upgrade an instance to the new network architecture", "url": "https://cloud.google.com/sql/docs/postgres/upgrade-cloud-sql-instance-new-network-architecture", "abstract": "# Cloud SQL - Upgrade an instance to the new network architecture\nThis page describes how to upgrade your Cloud SQL instances from the old network architecture to the new network architecture.\nThis Cloud SQL network architecture upgrade page applies only to some Cloud SQL instances. If your Cloud SQL instances use a Virtual Private Cloud (VPC) network project that was created before August 2021, then you need to upgrade the Cloud SQL network architecture for your instances.\n", "content": "## Overview\nThe following table shows the benefits of new network architecture compared to the old network architecture:\n| Capability                              | Old network architecture                     | New network architecture                                 |\n|:----------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Migrating from Cloud SQL to AlloyDB for PostgreSQL and from AlloyDB for PostgreSQL to Cloud SQL using Database Migration Service | Requires that you configure a private IP address for the migration          | No additional network configuration required. For example, Cloud SQL to AlloyDB for PostgreSQL migration or AlloyDB for PostgreSQL to Cloud SQL migration. |\n| Connect your Cloud SQL instance by using private IP to private services such as Cloud Build or Vertex AI      | Not supported due to network peering intransitivity              | Supported                                     |\n| Instances that are compliant with Assured Workloads                    | Not supported                        | Supported                                     |\n| Managed Microsoft AD                            | Not supported                        | Supported                                     |\n| Private Service Connect                           | Not supported                        | Supported                                     |\n| IP address range usage                           | Extra IP address ranges consumed for dedicated subnets for Cloud SQL for PostgreSQL private IP instances | No extra IP address ranges consumed for Cloud SQL for PostgreSQL instances                     |\n| Default Cloud SQL instance quota per project                      | 100                          | 1000                                      |\n## Plan your upgrade\nBefore you upgrade the network architecture of your Cloud SQL instances, plan the upgrade according to the following upgrade constraints:\n- Upgrading your network architecture will incur approximately two minutes of database downtime.\n- If there's an ongoing data migration, then you can't upgrade the source instance to the new architecture during the data migration.\n- If for the past four days or less, there are two or more instances in your network in the same region, then you can upgrade only those instances that have [high availability](/sql/docs/postgres/high-availability) enabled.For example, if your network contains two instances and one is in `us-east1` and the other is in `us-central1` , then you can upgrade both instances, regardless of whether high availability is enabled or not. However, if your network contains three instances and one is in `us-east1` and the other two are in `us-central1` , then you can upgrade the instances in `us-central1` that have high availability enabled. Because the instance in `us-east1` is the only instance in that region, you can upgrade it, regardless of whether high availability is enabled.\n- Once you upgrade a high availability instance to the new network architecture, you can't disable high availability on that instance.\n### Plan to upgrade all Cloud SQL instances in a network project\nYour Cloud SQL instances can be in the same project as the VPC network or they can be hosted in a separate project. The project that hosts the VPC network is the network project.\nIf at least one Cloud SQL instance within a network project uses the old network architecture, then the entire project uses the old network architecture. In this case, your project isn't fully upgraded to the new network architecture.\nYou can use the [gcloud CLI](/sdk/gcloud) or the Cloud SQL Admin API to query the network architecture for all your Cloud SQL instances within a project.\nWhen you modify an instance's private network or you enable private IP for an instance, you can't modify the network architecture in the same request. If you do, the request is rejected. To avoid this, we recommend that you upgrade all instances in a network project before modifying the network project.\n## Upgrade your Cloud SQL network architecture\nTo upgrade the network architecture of your Cloud SQL instances, do the following:\n- Check the network architecture of either [a single Cloud SQL instance](#check-single-instance) or [multiple Cloud SQL instances](#check-multiple-instances) .\n- [Upgrade the network architecture of a Cloud SQL instance](#upgrade-network-architecture) .\n### Check the network architecture of a single Cloud SQL instance\nTo check the current network architecture of a single instance, use the [gcloud sql instances describe](/sdk/gcloud/reference/sql/instances/describe) command or the [instances.get](/sql/docs/postgres/admin-api/rest/v1/instances/get) method.\nFor information about installing and getting started with the gcloud CLI, see [Install the gcloud CLI](/sdk/docs/install) . For information about starting Cloud Shell, see [Use Cloud Shell](/shell/docs/using-cloud-shell) .\nTo check the network architecture of a single instance, run the  following command:\n```\n gcloud sql instances describe INSTANCE_NAME\n \n```\nIf the instance uses the old network architecture, then the response is similar to the following:\n```\n\u00a0 \u00a0name: INSTANCE_NAME\u00a0 \u00a0project: PROJECT_ID\u00a0 \u00a0...\u00a0 \u00a0sql_network_architecture: OLD_NETWORK_ARCHITECTURE\u00a0 \n```\nIf the instance uses the new network architecture, then the response is similar to the following:\n```\n\u00a0 \u00a0name: INSTANCE_NAME\u00a0 \u00a0project: PROJECT_ID\u00a0 \u00a0...\u00a0 \u00a0sql_network_architecture: NEW_NETWORK_ARCHITECTURE\u00a0 \n```\nThe `sql_network_architecture` parameter indicates whether your instance uses the old network architecture ( `OLD_NETWORK_ARCHITECTURE` ) or the new network architecture ( `NEW_NETWORK_ARCHITECTURE` ).To check the network architecture of an instance, use the [instances.get](/sql/docs/postgres/admin-api/rest/v1/instances/get) method  of the Cloud SQL Admin API.\nBefore using any of the request data, make the following replacements:- : The project ID.\n- : The instance name.\n- : The network architecture type is defined as follows:- `OLD_NETWORK_ARCHITECTURE`: The instance uses the old network architecture.\n- `NEW_NETWORK_ARCHITECTURE`: The instance uses the new network architecture.\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n \"sqlNetworkArchitecture\": \"NETWORK_ARCHITECTURE_TYPE\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": sql#instance\n \"name\": INSTANCE_NAME\n \"project\": PROJECT_ID\n \"sqlNetworkArchitecture\": enum (SqlNetworkArchitecture)\n ...\n}\n```\nTo check the network architecture of an instance, use the [instances.get](/sql/docs/postgres/admin-api/rest/v1beta4/instances/get) method  of the Cloud SQL Admin API.\nBefore using any of the request data, make the following replacements:- : The project ID.\n- : The instance name.\n- : The network architecture type is defined as follows:- `OLD_NETWORK_ARCHITECTURE`: The instance uses the old network architecture.\n- `NEW_NETWORK_ARCHITECTURE`: The instance uses the new network architecture.\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n \"sqlNetworkArchitecture\": \"NETWORK_ARCHITECTURE_TYPE\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": sql#instance\n \"name\": INSTANCE_NAME\n \"project\": PROJECT_ID\n \"sqlNetworkArchitecture\": enum (SqlNetworkArchitecture)\n ...\n}\n```\n### Check the network architecture of multiple Cloud SQL instances\nTo check the network architecture of multiple instances in a project, use the [gcloud sql instances list](/sdk/gcloud/reference/sql/instances/list) command or the [instance.list](/sql/docs/postgres/admin-api/rest/v1/instances/list) method.\nTo check the network architecture of multiple instances in a project, run the following command:\n```\ngcloud sql instances list --show-sql-network-architecture\n```\nThe output looks similar to the following.\n```\nNAME \u00a0 \u00a0 \u00a0 \u00a0DATABASE_VERSION LOCATION \u00a0 ... \u00a0 \u00a0 SQL_NETWORK_ARCHITECTUREinstance_1 \u00a0POSTGRES_13 \u00a0 \u00a0 \u00a0asia-northeast1-b \u00a0OLD_NETWORK_ARCHITECTUREinstance_2 \u00a0MYSQL_5_7 \u00a0 \u00a0 \u00a0 \u00a0europe-west1-d \u00a0 \u00a0 NEW_NETWORK_ARCHITECTURE...\n```To check the network architecture of multiple instances in a project, use the [instance.list](/sql/docs/postgres/admin-api/rest/v1/instances/list) method.\nBefore using any of the request data, make the following replacements:- : The project ID.\n- : The network architecture type as follows:- `OLD_NETWORK_ARCHITECTURE`: The instance uses the old network architecture.\n- `NEW_NETWORK_ARCHITECTURE`: The instance uses the new network architecture.\nHTTP method and URL:\n```\nLIST https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances\n```\nRequest JSON body:\n```\n{\n \"sqlNetworkArchitecture\": \"NETWORK_ARCHITECTURE_TYPE\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": sql#instance\n \"name\": INSTANCE_NAME\n \"project\": PROJECT_ID\n \"sqlNetworkArchitecture\": enum (SqlNetworkArchitecture)\n ...\n}\n```\nTo check the network architecture of multiple instances in a project, use the [instance.list](/sql/docs/postgres/admin-api/rest/v1/instances/list) method.\nBefore using any of the request data, make the following replacements:- : The project ID.\n- : The network architecture type is defined as follows:- `OLD_NETWORK_ARCHITECTURE`: The instance uses the old network architecture.\n- `NEW_NETWORK_ARCHITECTURE`: The instance uses the new network architecture.\nHTTP method and URL:\n```\nLIST https://sqladmin.googleapis.com/v1beta4/projects/PROJECT_ID/instances\n```\nRequest JSON body:\n```\n{\n \"sqlNetworkArchitecture\": \"NETWORK_ARCHITECTURE_TYPE\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": sql#instance\n \"name\": INSTANCE_NAME\n \"project\": PROJECT_ID\n \"sqlNetworkArchitecture\": enum (SqlNetworkArchitecture)\n ...\n}\n```\n### Upgrade the network architecture of a single Cloud SQL instance\nTo upgrade the network architecture for a single instance, use the [gcloud sql instances patch](/sdk/gcloud/reference/sql/instances/patch) command, the [instance.update](/sql/docs/mysql/admin-api/rest/v1/instances/update) method, or the [instance.patch](/sql/docs/mysql/admin-api/rest/v1/instances/patch) method.\nTo upgrade the network architecture of an instance, run the  following command:\n```\ngcloud sql instances patch INSTANCE_NAME --upgrade-sql-network-architecture\n```\nThe upgrade operation takes approximately a few minutes.\nDuring the upgrade, a long-running operation starts, and an operation token is returned:\n```\noperation_id\n```To upgrade the network architecture of an instance, use the [instance.update](/sql/docs/mysql/admin-api/rest/v1/instances/update) or the [instance.patch](/sql/docs/mysql/admin-api/rest/v1/instances/patch) method of the Cloud SQL Admin API.\nWhen you upgrade the Cloud SQL network architecture, no additional updates to the instance are allowed in the request. The request body contains an instance of the [DatabaseInstance](/sql/docs/postgres/admin-api/rest/v1/instances#resource:-databaseinstance) object, with `sqlNetworkArchitecture` set to `NEW_NETWORK_ARCHITECTURE` .\nDuring the upgrade, a long-running operation starts, and an operation token is returned:\n```\noperation_id\n```\nBefore using any of the request data, make the following replacements:- : The project ID.\n- : The instance name.\n- : The network architecture type is defined as follows:- `OLD_NETWORK_ARCHITECTURE`: The instance uses the old network architecture.\n- `NEW_NETWORK_ARCHITECTURE`: The instance uses the new network architecture.\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n \"sqlNetworkArchitecture\": \"NETWORK_ARCHITECTURE_TYPE\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": sql#instance,\n \"targetLink\": string,\n \"status\": enum (SqlOperationStatus),\n \"name\": string,\n \"insertTime\": string,\n \"startTime\": string,\n \"endTime\": string\n ...\n}\n```\nIf the upgrade of your instance fails, then retry the upgrade operation.To upgrade the network architecture of an instance, use the [instance.update method](/sql/docs/mysql/admin-api/rest/v1/instances/update) or the [instance.patch method](/sql/docs/mysql/admin-api/rest/v1/instances/patch) of the Cloud SQL Admin API.\nWhen you upgrade the Cloud SQL network architecture, no additional updates to the instance are allowed in the request. The request body contains an instance of the [DatabaseInstance](/sql/docs/postgres/admin-api/rest/v1/instances#resource:-databaseinstance) object, with `sqlNetworkArchitecture` set to `NEW_NETWORK_ARCHITECTURE` .\nDuring the upgrade, a long running operation starts, and the following operation token is returned:\n```\noperation_id\n```\nBefore using any of the request data, make the following replacements:- : The project ID.\n- : The instance name.\n- : The network architecture type is defined as follows:- `OLD_NETWORK_ARCHITECTURE`: The instance uses the old network architecture.\n- `NEW_NETWORK_ARCHITECTURE`: The instance uses the new network architecture.\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n \"sqlNetworkArchitecture\": \"NETWORK_ARCHITECTURE_TYPE\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": sql#instance,\n \"targetLink\": string,\n \"status\": enum (SqlOperationStatus),\n \"name\": string,\n \"insertTime\": string,\n \"startTime\": string,\n \"endTime\": string\n ...\n}\n```\nIf the upgrade of your instance fails for any reason, you can retry the upgrade operation.\n## Frequently asked questions\nThis section provides answers to frequently asked questions about upgrading your Cloud SQL network architecture.\n### What's the impact of the upgrade on my Cloud SQL instance?\nWhen upgrading your network architecture, the Cloud SQL instance has a MAINTENANCE state. In this state, the instance experiences up to three minutes of downtime and any additional changes to the instance aren't allowed until the upgrade is complete. Other instances in your project or network won't be affected by the upgrade.\n### Do all features work the same after the upgrade?\nAll features of your Cloud SQL instance work the same on the new architecture as they did on the old architecture. After you upgrade an instance to use the new network architecture, if you want to switch the network of that instance, then make sure that all instances in the destination network are also upgraded to the new network architecture.\n### Which instances use the old network architecture?\nAny new projects that were created after August, 2021 automatically use the new network architecture. Existing projects can contain Cloud SQL instances that are older than two years and still use the old network architecture. Therefore, all instances within an existing project must be upgraded before any new instances in that project can start using the new network architecture.\n### Are all new Cloud SQL instances created on the new network architecture?\nBy default, new Cloud SQL instances created in projects created after August, 2021 use the new network architecture. If you want to create an instance in a project created before August, 2021, and use the new network architecture, you must do the following:\n- Update all of your existing instances in that project to the new network architecture.\n- If you have a Google Cloud support contract, create a [support request](/support) to change the default network architecture of the project to the new architecture.\n- If you don't have a support contract, create your instance and then [upgrade it to the new network architecture](#upgrade-network-architecture) .\nAfter the project's default is changed, you can create instances with the new network architecture in that project.\nIf you don't change the default network architecture of your project, all new instances in that project will use the old network architecture. You must then individually upgrade each of these instances to the new network architecture.\n### Is it possible to update all instances in a project with a single command?\nNo, the upgrade to the new network architecture is based on each instance.\n### Does the replica automatically get upgraded if I upgrade the primary?\nNo, the upgrade to the new network architecture is based on each individual instance. Each replica is treated as a separate instance and must be upgraded separately. This means that if the primary is upgraded and the replica is using the old network architecture, the replica isn't affected. The opposite is also true. If you upgrade a replica, the primary won't be affected.\n## What's next\n- Read more about [Private Service Connect](/sql/docs/postgres/about-private-service-connect) \n- Read more about [Assured Workloads](/assured-workloads/docs/overview) \n- Read more about [Configure private service access for Cloud SQL](/sql/docs/PostgreSQL/configure-private-services-access) \n- Read more about [Database migration service to AlloyDB for PostgreSQL](/database-migration/docs/postgresql-to-alloydb/quickstart)", "guide": "Cloud SQL"}