{"title": "Cloud SQL - Manage high number of tables", "url": "https://cloud.google.com/sql/docs/mysql/recommender-high-number-of-tables", "abstract": "# Cloud SQL - Manage high number of tables\n**    Preview     ** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nThe Cloud SQL high-number-of-tables [recommender](/recommender/docs/overview) helps you detect instances whose table count is too high and close to the SLA limit. It then provides recommendations on how to optimize such instances and improve instance performance.\nThis page describes how the high-number-of-tables recommender works and how you can use it.\n", "content": "## How it works\nIf you have 50,000 or more database tables on a single instance, it could result in the instance becoming unresponsive or unable to perform maintenance operations, and the instance is not covered by the SLA.\nThe Cloud SQL high-number-of-tables recommender analyzes metrics for the number of tables on a Cloud SQL MySQL instance. If the number of tables is larger than or equal to 80% of the SLA limit, which allows for 50,000 tables, the instance is considered to have a high number of tables.\n**Note:** Recommendations are generated daily.\n## Pricing\nThe Cloud SQL high-number-of-open-tables recommender is in the  [Recommender pricing tier](/recommender/pricing) .\n## Before you begin\nBefore you can view recommendations and insights, do the following:\n- To get the permissions to view and work with insights and recommendations, ensure that you have the required [roles](/sql/docs/mysql/project-access-control#roles) .| Tasks     | Roles                    |\n|:----------------------|:------------------------------------------------------------------------------------|\n| View recommendations | One of these roles: recommender.cloudsqlViewer or cloudsql.viewer.     |\n| Apply recommendations | One of these roles: recommender.cloudsqlAdmin, cloudsql.editor, or cloudsql.admin. |For more information about roles, see [understanding roles](/iam/docs/understanding-roles) and [granting IAM permissions](/iam/docs/granting-changing-revoking-access) .\n- Enable the Recommender API. [Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=recommender.googleapis.com) \n## List Improve Instance Performance recommendations\nYou can list the Improve Instance Performance recommendations by using the Google Cloud console, ` [gcloud CLI](/sdk/gcloud) ` , or the Recommender API.\nThe improve instance performance recommendations are shown only if you have instances that are nearing performance threshold limits.\nTo list recommendations about instance performance by using the Google Cloud console, follow these steps:- Go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql/instances) \n- Click **View all** on the Manage high number of tables recommendations banner.\nAlternatively, follow these steps:- Go to the **Recommendation Hub** . See also [Getting started with Recommendation Hub](/recommender/docs/recommendation-hub/identify-configuration-problems) . [Go to the Recommendation Hub](https://console.cloud.google.com/home/recommendations/) \n- In the **Improve Cloud SQL Instance Performance** card, click **View all** .\n- Select the instances with **Manage high number of tables** recommendation.\nTo list Improve Instance Performance recommendations by using `gcloud CLI` , run the [gcloud recommender recommendations list](/sdk/gcloud/reference/recommender/recommendations/list) command as follows:\n```\ngcloud recommender recommendations list \\\n--project=PROJECT_ID \\\n--location=LOCATION \\\n--recommender=google.cloudsql.instance.PerformanceRecommender \\\n--filter=recommenderSubtype=MYSQL_HIGH_NUMBER_OF_TABLES_BEST_PRACTICE\n```\nReplace the following:- ``: Your project ID\n- ``: A region, such as`us-central1`\nTo list Improve Instance Performance recommendations by using the [Recommendations API](/recommender/docs/using-api) , call the [recommendations.list](/recommender/docs/reference/rest/v1beta1/projects.locations.recommenders.recommendations/list) method as follows:\n```\nGET https://recommender.googleapis.com/v1beta1/projects/PROJECT-ID/locations/LOCATION/recommenders/google.cloudsql.instance.PerformanceRecommender.MySqlHighNumberOfTablesBestPractice/recommendations\n```\nReplace the following:- ``: Your project ID.\n- ``: A region, such as`us-central1`.\nIf the recommender detects instances with high number of tables, it lists them in a table with other performance recommendations. Each row shows the instance ID, a brief recommendation, database engine, the location, and the last refresh date.\n## View insights and detailed recommendations\nYou can view insights and detailed recommendations about instances that have a high number of tables by using the Google Cloud console, `gcloud CLI` , or the Recommender API.\nTo view insights and detailed recommendations about instances that are close to the performance threshold by using the Google Cloud console, click the recommendation link in the list of instances.\nTo view insights and detailed recommendations about instances that are close to the performance threshold by using `gcloud CLI` , run the [gcloud recommender insights list](/sdk/gcloud/reference/recommender/insights/list) command as follows:\n```\ngcloud recommender insights list \\\n--project=PROJECT_ID \\\n--location=LOCATION \\\n--insight-type=google.cloudsql.instance.PerformanceInsight \\\n--filter=insightSubtype=MYSQL_HIGH_NUMBER_OF_TABLES\n```\nReplace the following:- ``: Your project ID.\n- ``: A region, such as`us-central1`.\nTo view insights and detailed recommendations about instances that are close to the performance threshold by using the [Recommendations API](/recommender/docs/using-api) , call the [insights.list](/recommender/docs/reference/rest/v1beta1/projects.locations.insightTypes.insights/list) method as follows:\n```\nGET https://recommender.googleapis.com/v1beta1/projects/PROJECT-ID/locations/LOCATION/insightTypes/google.cloudsql.instance.PerformanceRecommender.MySqlHighNumberOfTables/insights\n```\nReplace the following:- ``: Your project ID.\n- ``: A region, such as`us-central1`.\nThe following table lists the insight and recommendation that the Cloud SQL high-number-of-open-tables recommender generates to help you improve performance. The subtypes are visible in the `gcloud CLI` and API results.\n| Insight                                  | Recommendation                           |\n|:-----------------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------|\n| Number of tables on this instance is more than or equal to 80% of the SLA limit, which is 50,000 tables. Subtype: MYSQL_HIGH_NUMBER_OF_TABLES | Improve Cloud SQL instance performance by reducing number of tables. Subtype: MYSQL_HIGH_NUMBER_OF_TABLES_BEST_PRACTICE |\n## Apply recommendations\nEvaluate the recommendations carefully and do any of the following:\n- To examine the instance, click **View instance** . See [Optimize the performance of your instance](#optimize-performance) and follow the recommendations.\n- To dismiss the recommendation so that it's de-emphasized and appears dimmed, click **Dismiss** .\n- To close the panel without applying or dismissing the recommendation, click **Cancel** .\n### Optimize the performance of your instance\n- [Edit](/sql/docs/mysql/edit-instance) your instance to increase the number of vCPUs to at least 32 cores and the memory size to at least 200 GB. This increases the instance's [table limit](/sql/docs/mysql/quotas#table_limit) from 50,000 to 500,000. **Caution:** This operation can lead to an increase in cost. Additionally, it triggers a restart, which can cause downtime on the instance.\n- Drop unnecessary tables:```\nDROP TABLE TABLE_NAME; \n```Replace the following:- ``: Name of the table you intend to drop.\n- Reduce the number of tables per instance by splitting the database across multiple instances to keep the number of tables in each instance within the recommended limits.\n- If you cannot immediately reduce the number of tables, you can reduce the likelihood of your instance being impacted by the high table count by setting the `innodb_file_per_table` flag to OFF. To turn off the value of the `innodb_file_per_table` flag, see [Configure a database flag](/sql/docs/mysql/flags?hl=en#config) . However, this setting does not bring the instance back into SLA compliance. See these [operational guidelines](/sql/docs/mysql/operational-guidelines?hl=en#tables) .\n- Use a general tablespace to create tables or move existing tables to a general tablespace. To learn more, see [MySQL documentation on general tablespaces](https://dev.mysql.com/doc/refman/8.0/en/general-tablespaces.html) .## What's next\n- [Increase the table open cache size ](/sql/docs/mysql/recommender-high-number-of-open-tables) \n- [Monitor disk availability](/sql/docs/mysql/using-ood-recommender) \n- [Identify idle Cloud SQL instances](/sql/docs/mysql/recommender-sql-idle) \n- [Reduce overprovisioned Cloud SQL instances](/sql/docs/mysql/recommender-sql-overprovisioned) \n- Explore [Google Cloud recommenders](/recommender/docs/recommenders)", "guide": "Cloud SQL"}