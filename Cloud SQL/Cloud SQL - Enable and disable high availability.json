{"title": "Cloud SQL - Enable and disable high availability", "url": "https://cloud.google.com/sql/docs/postgres/configure-ha", "abstract": "# Cloud SQL - Enable and disable high availability\nThis page describes how to configure an instance for high availability.\nYou can configure an instance for high availability when you create the instance, or you can enable high availability on an existing instance.\nFor more information about high availability, see [Overview of the high availability configuration](/sql/docs/postgres/high-availability) .\n", "content": "## Create a new instance configured for high availability\nWhen you create an instance and configure it for high availability, Cloud SQL creates it as a regional instance.\nTo create an instance configured for high availability:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Select **Create instance** .\n- Select the database engine.\n- In the **Choose region and zonal availability** section, select **Multiple zones\n(Highly available)** .\n- Expand **Specify zones** .\n- Select the primary and secondary zones. The following conditions apply when the secondary zone is used during instance creation or edit:- The zones default to`Any`for the primary zone and`Any (different from primary)`for the secondary zone.\n- If both the primary and secondary zones are specified, they must be different  zones.\n- Click **Save** .You are returned to the instance page for the primary instance while the instance is updated.\n- Create the regional instance:```\ngcloud sql instances create REGIONAL_INSTANCE_NAME \\--availability-type=REGIONAL \\--database-version=DATABASE_VERSION \\--cpu=NUMBER_CPUS \\--memory=MEMORY_SIZE\n```For a complete list of available parameters, see the [gcloud sql instances create](/sdk/gcloud/reference/sql/instances/create) reference page.\n- Configure the root user:```\ngcloud sql users set-password root no-host \\--instance=REGIONAL_INSTANCE_NAME \\--password=PASSWORD\n```\nTo create an instance with high availability, use a [Terraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance) .\n [  cloud_sql/instance_ha/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/instance_ha/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/instance_ha/main.tf) \n```\nresource \"google_sql_database_instance\" \"postgres_instance_ha\" {\n name    = \"postgres-instance-ha\"\n region   = \"us-central1\"\n database_version = \"POSTGRES_14\"\n settings {\n tier    = \"db-custom-2-7680\"\n availability_type = \"REGIONAL\"\n backup_configuration {\n  enabled      = true\n  point_in_time_recovery_enabled = true\n  start_time      = \"20:55\"\n }\n }\n # set `deletion_protection` to true, will ensure that one cannot accidentally delete this instance by\n # use of Terraform whereas `deletion_protection_enabled` flag protects this instance at the GCP level.\n deletion_protection = false\n}\n```To apply your Terraform configuration in a Google Cloud project, complete the steps in the following sections.## Prepare Cloud Shell\n- Launch [Cloud Shell](https://shell.cloud.google.com/) .\n- Set the default Google Cloud project  where you want to apply your Terraform configurations.You only need to run this command once per project, and you can run it in any directory.```\nexport GOOGLE_CLOUD_PROJECT=PROJECT_ID\n```Environment variables are overridden if you set explicit values in the Terraform  configuration file.\n## Prepare the directoryEach Terraform configuration file must have its own directory (also called a ).- In [Cloud Shell](https://shell.cloud.google.com/) , create a directory and a new  file within that directory. The filename must have the`.tf`extension\u2014for example`main.tf`. In this  tutorial, the file is referred to as`main.tf`.```\nmkdir DIRECTORY && cd DIRECTORY && touch main.tf\n```\n- If you are following a tutorial, you can copy the sample code in each section or step.Copy the sample code into the newly created `main.tf` .Optionally, copy the code from GitHub. This is recommended  when the Terraform snippet is part of an end-to-end solution.\n- Review and modify the sample parameters to apply to your environment.\n- Save your changes.\n- Initialize Terraform. You only need to do this once per directory.```\nterraform init\n```Optionally, to use the latest Google provider version, include the `-upgrade` option:```\nterraform init -upgrade\n```\n## Apply the changes\n- Review the configuration and verify that the resources that Terraform is going to create or  update match your expectations:```\nterraform plan\n```Make corrections to the configuration as necessary.\n- Apply the Terraform configuration by running the following command and entering`yes`at the prompt:```\nterraform apply\n```Wait until Terraform displays the \"Apply complete!\" message.\n- [Open your Google Cloud project](https://console.cloud.google.com/) to view  the results. In the Google Cloud console, navigate to your resources in the UI to make sure  that Terraform has created or updated them.\n **Note:** Terraform samples typically assume that the required APIs are enabled in your Google Cloud project.To delete your changes, do the following:- To disable deletion protection, in your Terraform configuration file set the`deletion_protection`argument to`false`.```\ndeletion_protection = \"false\"\n```\n- Apply the updated Terraform configuration by running the following command and    entering`yes`at the prompt:```\nterraform apply\n```\n- Remove resources previously applied with your Terraform configuration by running the following command and entering `yes` at the prompt:```\nterraform destroy\n```For the complete list of parameters for the request, see the\n [instances:insert](/sql/docs/postgres/admin-api/rest/v1/instances/insert) \npage.\nCreate the regional instance.- Before using any of the request data, make the following replacements:- : The project ID\n- : The instance name\n- : The database version enum string\n- The GCP region\n- The machine type\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances\n```\nRequest JSON body:\n```\n{\n \"name\": \"instance-name\",\n \"region\": \"region\",\n \"databaseVersion\": \"database-version\",\n \"settings\": {\n  \"tier\": \"machine-type\",\n  \"backupConfiguration\": {\n   \"enabled\": true,\n   \"pointInTimeRecoveryEnabled\": true\n  },\n  \"availabilityType\": \"REGIONAL\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- When the instance finishes initializing, update the root password on the instance:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The new root user password\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/users?host=%25&name=postgres'\n```\nRequest JSON body:\n```\n{\n \"name\": \"postgres\",\n \"host\": \"nohost\",\n \"password\": \"password\"}\n```\nTo send your request, expand one of these options:You should receive a successful status code (2xx) and an empty response.For the complete list of parameters for the request, see the\n [instances:insert](/sql/docs/postgres/admin-api/rest/v1beta4/instances/insert) \npage.\nCreate the regional instance.- Before using any of the request data, make the following replacements:- : The project ID\n- : The instance name\n- : The database version enum string\n- The GCP region\n- The machine type\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances\n```\nRequest JSON body:\n```\n{\n \"name\": \"instance-name\",\n \"region\": \"region\",\n \"databaseVersion\": \"database-version\",\n \"settings\": {\n  \"tier\": \"machine-type\",\n  \"backupConfiguration\": {\n   \"enabled\": true,\n   \"pointInTimeRecoveryEnabled\": true\n  },\n  \"availabilityType\": \"REGIONAL\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- When the instance finishes initializing, update the root password on the instance:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The new root user password\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/users?host=%25&name=postgres'\n```\nRequest JSON body:\n```\n{\n \"name\": \"postgres\",\n \"host\": \"nohost\",\n \"password\": \"password\"}\n```\nTo send your request, expand one of these options:You should receive a successful status code (2xx) and an empty response.\nFor more details about creating an instance, see [Creating Instances](/sql/docs/postgres/create-instance) .\n## Configure an existing instance for high availability\nYou can configure a Cloud SQL instance for high availability by using the Google Cloud console, [](/sdk/gcloud)  [gcloud CLI](/sdk/gcloud) , or the API.\n**Note:** After you start the high availability configuration for an instance, you can't stop it. Reconfiguring the instance restarts it. It typically takes only a few minutes for Cloud SQL to reconfigure the instance and restart it. However, if the instance has a large disk or load, then it might take up to an hour.\n**Important: ** You can't use the Google Cloud console to configure instances that have [Private Service Connect](/sql/docs/postgres/about-private-service-connect) enabled for high availability. To configure these instances, use [gcloud CLI](/sdk/gcloud) or the API.\nTo configure an instance for high availability:- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Click **Edit** .\n- In the **Auto backups and high availability** configuration option section, select **High availability (regional)** . It's also recommended that you enable **Automate backups** .\n- Click **Save** .\nTo configure an instance to be a regional, high availability instance, use the [gcloud sql instances patch](/sdk/gcloud/reference/sql/instances/patch) command:\n```\ngcloud sql instances patch INSTANCE_NAME \\--availability-type REGIONAL\n```\nReplace with the name of the Cloud SQL instance that you're configuring for high availability.To configure an instance to be a regional, high availability instance:- Check the instance to see if automatic backups and point-in-time recovery  are enabled. These are required for high availability instances.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#instance\",\n \"state\": \"RUNNABLE\",\n \"databaseVersion\": \"POSTGRES_13\"\n}\n```\nThe output contains a section similar to the following:```\n \"backupConfiguration\": {\n \"kind\": \"sql#backupConfiguration\",\n \"startTime\": \"12:00\",\n \"enabled\": true,\n \"pointInTimeRecoveryEnabled\": true\n }\n \n```\n- If either `enabled` or `pointInTimeRecoveryEnabled` are `false` ,  then use the ` [instances:patch](/sql/docs/postgres/admin-api/rest/v1/instances/patch) ` method to enable them  both. To enable backups, set `enabled` to `true` and `startTime` to a value which is the start of the backup window.  To enable binary logging, set `pointInTimeRecoveryEnabled` to `true` .Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the primary or read replica instance that you're configuring for high availability\n- : the time (in hours and minutes)\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n \"settings\":\n {\n \"backupConfiguration\":\n {\n  \"startTime\": \"START_TIME\",\n  \"enabled\": true,\n  \"pointInTimeRecoveryEnabled\": true\n }\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Configure the instance to be a regional, high availability instance:Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n \"settings\": {\"availabilityType\": \"REGIONAL\" }\n}\n```\nTo send your request, expand one of these options:You should receive a successful status code (2xx) and an empty response.\nTo configure an instance to be a regional, high availability instance:- Check the instance to see if automatic backups and point-in-time recovery  are enabled. These are required for high availability instances.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#instance\",\n \"state\": \"RUNNABLE\",\n \"databaseVersion\": \"POSTGRES_13\",\n}\n```\nThe output contains a section similar to the following:```\n \"backupConfiguration\": {\n \"kind\": \"sql#backupConfiguration\",\n \"startTime\": \"12:00\",\n \"enabled\": true,\n \"pointInTimeRecoveryEnabled\": true\n }\n \n```\n- If either `enabled` or `pointInTimeRecoveryEnabled` are `false` ,  then use the ` [instances:patch](/sql/docs/postgres/admin-api/rest/v1beta4/instances/patch) ` method to enable them  both. To enable backups, set `enabled` to `true` and `startTime` to a value which is the start of the backup window.  To enable binary logging, set `pointInTimeRecoveryEnabled` to `true` .Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the primary or read replica instance that you're configuring for high availability\n- : the time (in hours and minutes)\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n \"settings\":\n {\n \"backupConfiguration\":\n {\n  \"startTime\": \"START_TIME\",\n  \"enabled\": true,\n  \"pointInTimeRecoveryEnabled\": true\n }\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Configure the instance to be a regional, high availability instance:Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n \"settings\": {\"availabilityType\": \"REGIONAL\" }\n}\n```\nTo send your request, expand one of these options:You should receive a successful status code (2xx) and an empty response.## Initiate failover\nTesting failover is optional, but is recommended so that you can see how your application responds in the event of a failover.\nThis feature helps you test your application's response to an automatic failover. Make sure that your instance has completed any previous failover (so it's responding to connection requests) before you trigger another failover. Also, before you initiate failover for your instance, [configure the instance for high availability](/sql/docs/postgres/configure-ha#ha-existing) .\nTo learn more about failovers, see the [Failover overview](/sql/docs/postgres/high-availability#failover-overview) .\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Click **Failover** .\n- In the **Manually trigger a failover** dialog box, enter the ID of  your instance in the text field, and then click **Trigger Failover** .\nInitiate the failover:\n```\ngcloud sql instances failover PRIMARY_INSTANCE_NAME\n```\n- Describe the primary instance to get the value of the`settingsVersion`field.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#instance\",\n \"state\": \"RUNNABLE\",\n \"databaseVersion\": \"POSTGRES_13\"\n}\n```- Initiate the failover:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance name\n- : The settingsVersion from instanceInfo\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-name/failover\n```\nRequest JSON body:\n```\n{\n \"failoverContext\":\n  {\n  \"settingsVersion\":\"settings-version\"\n  }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Describe the primary instance to get the value of the`settingsVersion`field.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#instance\",\n \"state\": \"RUNNABLE\",\n \"databaseVersion\": \"POSTGRES_13\"\n}\n```- Initiate the failover:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance name\n- : The settingsVersion from instanceInfo\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-name/failover\n```\nRequest JSON body:\n```\n{\n \"failoverContext\":\n  {\n  \"settingsVersion\":\"settings-version\"\n  }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\nThe instance fails over and it isn't available to serve data for a few minutes.\n## Verify an instance's high availability configuration\nTo verify an instance has high availability and to view the zones in which it is running:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Confirm the following high availability settings are displayed in the **Configuration** section:\n- **Highly available (regional)** \n- **Located in** shows the current primary zone of the instance.```\ngcloud sql instances describe INSTANCE_NAME\n```\nThe output indicates `availabilityType` is `REGIONAL` . The `gceZone` and `secondaryGceZone` fields show the current primary and secondary zones of the instance.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#instance\",\n \"state\": \"RUNNABLE\",\n \"databaseVersion\": \"POSTGRES_13\"\n}\n```\nThe output indicates `availabilityType` is `REGIONAL` . The `gceZone` and `secondaryGceZone` fields show the current primary and secondary zones of the instance.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#instance\",\n \"state\": \"RUNNABLE\",\n \"databaseVersion\": \"POSTGRES_13\",\n}\n```\nThe output indicates `availabilityType` is `REGIONAL` . The `gceZone` and `secondaryGceZone` fields show the current primary and secondary zones of the instance.\n## Change the zones of a high availability instance\nChanging one or both zones of an existing high availability instance causes a few minutes of downtime while the instance is reconfigured. To see the current primary and secondary zones that the high availability instance is running in, see [Verify aninstance's high availability configuration](/sql/docs/postgres/configure-ha#verify-ha) .\n**Note:** Once you start the zone change operation on an instance, you cannot stop it. This operation restarts the instance. It typically takes only a few minutes for the configuration and restart to complete. But if the instance has a large disk or load, it might take up to an hour.\nTo change the zones of a high availability instance:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Click **Edit** .\n- In the **Choose region and zonal availability** section, expand **Specify zones** and select new zones. The zones default to`Any`for the primary zone and`Any (different from primary)`for the secondary zone. The following restrictions apply:- You can specify the primary zone only, or both the primary and secondary  zones.\n- If both the primary and secondary zones are specified, they must be  different zones.\n- Click **Save** .You are returned to the instance page for the primary instance while the instance is updated.\nChange the zone in which the instance is running:\n```\ngcloud sql instances patch INSTANCE_NAME \\\u00a0 --zone=PRIMARY_ZONE --secondary-zone=SECONDARY_ZONE\n```\nThe `--secondary-zone` parameter is optional. If you omit it, Cloud SQL will select an available zone that is different from the primary zone.\nThe following restrictions apply:\n- The zones must be valid zones belonging to the same region as the  Cloud SQL instance.\n- If the secondary zone is specified, it must be different from the primary  zone.\n- Change the zones of the regional instance:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance name\n- : The primary zone\n- : The secondary zone\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n\"settings\": {\"locationPreference\": {\"zone\": \"PRIMARY_ZONE\", \"secondaryZone\": \"SECONDARY_ZONE\"}}\n}\n```\nTo send your request, expand one of these options:You should receive a successful status code (2xx) and an empty response.The `secondaryZone` parameter is optional. If you omit it, Cloud SQL will select an available zone that is different from the primary zone.The following restrictions apply:- The zones must be valid zones.\n- Any zones that you choose must belong to the same region as the  Cloud SQL instance.\n- Change the zones of the regional instance:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance name\n- : The primary zone\n- : The secondary zone\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n\"settings\": {\"locationPreference\": {\"zone\": \"PRIMARY_ZONE\", \"secondaryZone\": \"SECONDARY_ZONE\"}}\n}\n```\nTo send your request, expand one of these options:You should receive a successful status code (2xx) and an empty response.The `secondaryZone` parameter is optional. If you omit it, Cloud SQL will select an available zone that is different from the primary zone.The following restrictions apply:- The zones must be valid zones.\n- Any zones that you choose must belong to the same region as the  Cloud SQL instance.\n## Deactivate high availability for an instance\nYou can deactivate high availability for a Cloud SQL instance by using the Google Cloud console, [](/sdk/gcloud)  [gcloud CLI](/sdk/gcloud) , or the API.\n**Note: ** Before you perform this procedure, make sure that no operations are running on the instance. Removing high availability for instances with [Private Service Connect enabled](/sql/docs/postgres/about-private-service-connect) is in [Preview](/products#product-launch-stages) .\n**Important: ** You can't use the Google Cloud console to deactivate high availability for instances that have [Private Service Connect](/sql/docs/postgres/about-private-service-connect) enabled. To deactivate these instances, use [gcloud CLI](/sdk/gcloud) or the API.\nTo deactivate high availability for an instance:- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Click **Edit** .\n- Open **Auto backups** .\n- In the **Availability** section, click **Single zone** .\n- Click **Save** . This edit requires you to restart the instance.\n- When the dialog appears, click **Save and restart** .\nTo deactivate high availability for an instance, use the [gcloud sql instances patch](/sdk/gcloud/reference/sql/instances/patch) command:\n```\ngcloud sql instances patch INSTANCE_NAME \\--availability-type ZONAL\n```\nReplace with the name of the Cloud SQL instance for which you're deactivating high availability.To change the availability type of the instance to `ZONAL` , use the ` [instances:patch](/sql/docs/postgres/admin-api/rest/v1/instances/patch) ` method. This method deactivates high availability for the instance.\nBefore using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance for which you're deactivating high availability\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n \"settings\": {\"availabilityType\": \"ZONAL\" }\n}\n```\nTo send your request, expand one of these options:You should receive a successful status code (2xx) and an empty response.To change the availability type of the instance to `ZONAL` , use the ` [instances:patch](/sql/docs/postgres/admin-api/rest/v1/instances/patch) ` method. This method deactivates high availability for the instance.\nBefore using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance for which you're deactivating high availability\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nRequest JSON body:\n```\n{\n \"settings\": {\"availabilityType\": \"ZONAL\" }\n}\n```\nTo send your request, expand one of these options:You should receive a successful status code (2xx) and an empty response.\n## Troubleshoot\n| Issue                            | Troubleshooting                               |\n|:--------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------|\n| You can't find the metrics for a manual failover.                 | Only automatic failovers go into the metrics.                        |\n| Cloud SQL instance resources (CPU and RAM) are near 100% usage, causing the high availability instance to go down. | The instance machine size is too small for the load. Edit the instance to upgrade to a larger machine size to get more CPUs and memory. |\n## What's next\n- Learn more about [how the high availability configuration works](/sql/docs/postgres/high-availability) .\n- Test how your application responds to lost connections by [restarting your instance](/sql/docs/postgres/start-stop-restart-instance) .\n- Learn more about [managing your database connections](/sql/faq#connections) .\n- Learn more about [Google Cloud Observability](/monitoring/docs) .\n- [Create read replicas](/sql/docs/postgres/replication) for your instance.", "guide": "Cloud SQL"}