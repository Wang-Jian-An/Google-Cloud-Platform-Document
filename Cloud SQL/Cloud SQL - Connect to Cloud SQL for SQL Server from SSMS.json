{"title": "Cloud SQL - Connect to Cloud SQL for SQL Server from SSMS", "url": "https://cloud.google.com/sql/docs/sqlserver/connect-instance-cloud-shell", "abstract": "# Cloud SQL - Connect to Cloud SQL for SQL Server from SSMS\n# Connect to Cloud SQL for SQL Server from SSMS\nThis page shows you how to create and connect to a SQL Server instance and perform basic SQL operations by using the Google Cloud console and a client. The resources created in this quickstart typically cost less than a dollar, assuming you complete the steps, including the cleanup, in a timely manner.", "content": "## Before you begin **Note:** The name you use for your project must be between 4 and 30 characters. When you type the name, the form suggests a project ID, which you can edit. The project ID must be between 6 and 30 characters, with a lowercase letter as the first character. You can use a dash, lowercase letter, or digit for the remaining characters, but the last character cannot be a dash.- Enable the necessary Google Cloud APIs.\nIn the Google Cloud console, go to the **APIs** page.\n [Go to APIs](https://console.cloud.google.com/apis) \nEnable the Cloud SQL Admin API.\nClick the following button to open Cloud Shell, which provides   command-line access to your Google Cloud resources directly from the browser.   Cloud Shell can be used to run the `gcloud` commands presented throughout this quickstart.\n [Open Cloud Shell](/console/sql/instances?cloudshell=true) \nRun the [gcloud services enable](/sdk/gcloud/reference/services/enable) command   as follows using Cloud Shell to enable the APIs required for this quickstart.:\n```\ngcloud services enable sqladmin.googleapis.com\n```\nThis command enables the following APIs:- Cloud SQL Admin API\n## Create a Cloud SQL instanceIn this quickstart, you use the Google Cloud console. To use the [gcloud CLI](/sdk/gcloud) , cURL, or PowerShell, see [Create instances](/sql/docs/sqlserver/create-instance) .- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Click **Create Instance** .\n- Click **Choose SQL Server** .\n- Enter`myinstance`for **Instance ID** .\n- Enter a password for the`sqlserver`user.\n- Click **Create** .You're returned to the instances list. You can click the new instance right away to see the details, but it won't be available for other operations until it initializes and starts. **Note:** In this example, the instance is created using default settings, including a public IP address.\n## Connect to your instance by using SQL Server\n Management Studio\n **Note:** SQL Server Management Studio (SSMS) is a Windows-based, integrated environment. Review the [SSMS documentation](https://docs.microsoft.com/en-us/sql/ssms/sql-server-management-studio-ssms?view=sql-server-2017) if needed, including for [Connecting to a SQL Server instance](https://docs.microsoft.com/en-us/sql/ssms/tutorials/connect-query-sql-server?view=sql-server-2017) . Alternatively, you can use other database administration tools.- Optional: If you're running a local instance of SQL Server, stop it before connecting to your Cloud SQL instance. Otherwise, you might encounter errors such as`address already in use`.\n- Install the [](/sdk/docs) [gcloud CLI](/sdk/gcloud) . The [gcloud CLI](/sdk/gcloud) provides the gcloud CLI to interact with Cloud SQL and other Google Cloud services. The gcloud CLI uses the Admin API to access Cloud SQL, so you must [ Enable the Admin API](/sql/docs/sqlserver/admin-api#enabling_the_api) before using the gcloud CLI to access Cloud SQL.\n- In a bash shell command prompt or in Windows PowerShell, run the following command to initialize the gcloud CLI:```\n\u00a0 gcloud init\u00a0 \n```\n- Run the following command to authenticate the gcloud CLI:```\n\u00a0 gcloud auth login\u00a0 \n```\n- Download and install the Cloud SQL Auth Proxy (see [ Installing the Cloud SQL Auth Proxy](/sql/docs/sqlserver/connect-auth-proxy#install) ). Note the location of the Cloud SQL Auth Proxy because you will run the Cloud SQL Auth Proxy in next step.\n- Run the Cloud SQL Auth Proxy by using a bash shell command prompt (or by using Windows PowerShell). Specifically, run the following command, replacing`Instance-connection-name`with the corresponding value from the Google Cloud console's Overview tab (for your instance):```\n\u00a0 ./cloud-sql-proxy INSTANCE_CONNECTION_NAME\u00a0 \n```\nFor more information about installing and using the Cloud SQL Auth Proxy, see [About the Cloud SQL Auth Proxy](/sql/docs/sqlserver/sql-proxy) .\nAs described in the next section, now you can connect to your SQL Server instance by using SSMS and the localhost IP address.\n### Connect using the SSMS Object Explorer\n- In SSMS, select **Connect Object Explorer** from the **File** menu. \n- Enter the following values in the **Connection** dialog:- For Server Type, enter **Database Engine** .\n- For Server Name, enter 127.0.0.1 as the IP address of your SQL Server  instance.\n- For Authentication, enter **SQL Server Authentication** .\n- For Login, enter **sqlserver** .\n- For Password, enter the password used when the instance was created.\n- Click the **Connect** button.\n## Create a database and upload data\n- In the SSMS Object Explorer window, right-click the **Databases** node under your instance and select **New Database** . \n- Enter **testdb** for the **Database name** and click the **OK** button. \n- Under the newly created **testdb** database, right-click the **Tables** node and select **New > Table** . \n- Enter the following values in the **Create table** dialog:- In the **Properties** window, for **Identity > Name** , enter **guestbook** .\n- For the first **Column Name** , enter **entryID** , set its Data Type to **int** , and clear the **Allow Nulls** checkbox.- In the **Column Properties** window, expand the **Identity\nSpecification** item and set **(Is Identity)** to **Yes** .\n- For the second **Column Name** , enter **guestname** and set its Data Type to varchar(255).\n- For the third **Column Name** , enter **content** and set its Data Type to varchar(255).\n \n- Click the **File** menu and select **Save guestbook** . \n- Right-click the **testdb** table under **Databases** and select **New Query** . \n- Enter the following two INSERT statements into the **SQL query** text window and click the **Execute** button.```\nINSERT INTO guestbook (guestName, content) values ('first guest', 'I got here!');INSERT INTO guestbook (guestName, content) values ('second guest', 'Me too!');\n```As an example: \n- Expand the **Tables** item under the **Databases > testdb** item in the **ObjectExplorer** window. Right-click the **dbo.guestbook** table and choose **SelectTop 1000 Rows** . \nThe two records you inserted are displayed as **Results** , along with the SQL `SELECT` statement used to query the records.\n ## Clean upTo avoid incurring charges to your Google Cloud account for   the resources used on this page, follow these steps.- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Select the`myinstance`instance to open the **Instance details** page.\n- In the icon bar at the top of the page, click **Delete** .\n- In the **Delete instance** window, type your instance's name and then click **Delete** .\n### Optional cleanup stepsIf you're not using the APIs that were enabled as part of this quickstart, you can disable them.- APIs that were enabled within this quickstart:- Cloud SQL Admin API- In the Google Cloud console, go to the **APIs** page. [Go to APIs](https://console.cloud.google.com/apis) \n- Select the Cloud SQL Admin API and then click the **Disable API** button.\n## What's next\n- Learn about [creating Cloud SQL instances](/sql/docs/sqlserver/create-instance) .\n- Learn about creating [SQL Server users](/sql/docs/sqlserver/create-manage-users) and [databases](/sql/docs/sqlserver/create-manage-databases) for your Cloud SQL instance.\n- See the [Cloud SQL pricing information](/sql/docs/sqlserver/pricing) .\n- In this quickstart you connected to the instance by using Cloud Shell. Learn about all of the [connectivity options](/sql/docs/sqlserver/connect-overview#connection_options) in Cloud SQL. How you connect depends on your networking configuration, such as if your Cloud SQL instance has a public or private IP address. See how to configure your Cloud SQL instance with a [public IP](/sql/docs/sqlserver/configure-ip) and a [private IP](/sql/docs/sqlserver/configure-private-ip) address.\n- Learn about connecting to a Cloud SQL instance from other Google Cloud applications:- [From an application running on the App Engine standard environment](/sql/docs/sqlserver/connect-app-engine) \n- [From an application running on Compute Engine](/sql/docs/sqlserver/connect-compute-engine) \n- [From an application running on GKE](/sql/docs/sqlserver/connect-kubernetes-engine) \n- [From Cloud Functions](/sql/docs/sqlserver/connect-functions) \n- [From Cloud Run](/sql/docs/sqlserver/connect-run)", "guide": "Cloud SQL"}