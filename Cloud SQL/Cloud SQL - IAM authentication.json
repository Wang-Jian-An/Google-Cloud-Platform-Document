{"title": "Cloud SQL - IAM authentication", "url": "https://cloud.google.com/sql/docs/postgres/iam-authentication", "abstract": "# Cloud SQL - IAM authentication\nGoogle Cloud offers Identity and Access Management (IAM), which lets you give access to specific Google Cloud resources and prevent unwanted access to other resources. This page describes how Cloud SQL is integrated with IAM and how you can use IAM for database authentication. For a detailed description of Google Cloud IAM, see [IAM documentation](/iam/docs) .\nCloud SQL provides a set of [predefined roles](/sql/docs/postgres/iam-roles) designed to help you control access to your Cloud SQL resources. You can also create your own [custom roles](/sql/docs/postgres/iam-roles#custom-roles) , if the predefined roles don't provide the sets of permissions you need. In addition, the legacy basic roles (Editor, Viewer, and Owner) are also still available to you, although they don't provide the same fine-grained control as the Cloud SQL roles. In particular, the basic roles provide access to resources across Google Cloud, rather than just for Cloud SQL. For more information about basic Google Cloud roles, see [Basic roles](/iam/docs/understanding-roles#basic) .\nYou can set an IAM policy at any level in the [resource hierarchy](/iam/docs/overview#resource-hierarchy) : the organization level, the folder level, or the project level. Resources inherit the policies of all of their parent resources.\n", "content": "## IAM references for Cloud SQL\n- [Required permissions for common tasks in the Google Cloud console](/sql/docs/postgres/iam-permissions#permissions-console) \n- [Required permissions for gcloud sql commands](/sql/docs/postgres/iam-permissions#permissions-gcloud) \n- [Required permissions for Cloud SQL Admin API methods](/sql/docs/postgres/iam-permissions#api-methods) \n- [Predefined Cloud SQL IAM roles](/sql/docs/postgres/iam-roles#roles) \n- [Permissions and their roles](/sql/docs/postgres/iam-roles#permissions-roles) \n- [Custom roles](/sql/docs/postgres/iam-roles#custom-roles) ## IAM authentication concepts\nWhen using IAM authentication, permission to access a resource (a Cloud SQL instance) isn't granted to the end user. Instead, permissions are grouped into , and roles are granted to . For more information, see the [IAM overview](/iam/docs/overview) .\nAdministrators who have users log in through IAM database authentication can use IAM to centrally manage access control to their instances using IAM policies. IAM policies involve the following entities:\n- **Principals** . In Cloud SQL, you can use two types of principals: a, and a(for applications). Other principal types, such as Google groups, Google Workspace domains, or Cloud Identity domains are not supported for IAM database authentication. For more information, see [Concepts related to identity](/iam/docs/overview#concepts_related_identity) .\n- **Roles** . For IAM database authentication, a principal requires the`cloudsql.instances.login`permission to log in to an instance. To get this permission, you bind the user or service account to either the predefined Cloud SQL Instance User role or a custom role that bundles the permission. For more information about IAM roles, see [Roles](/iam/docs/overview#roles) .\n- **Resource** . The resources that principals access are Cloud SQL instances. By default, IAM policy bindings are applied at the project-level, such that principals receive role permissions for all Cloud SQL instances in the project.## IAM database authentication\nCloud SQL is integrated with Identity and Access Management (IAM) to help you better manage login access for users and service accounts to databases. This feature is called IAM database authentication.\nAuthentication is the process of verifying the identity of a user who is attempting to access an instance. Cloud SQL uses the following types of authentication for database users:\n- The database's built-in authentication uses a username and password to authenticate a database user.\n- IAM database authentication uses IAM to authenticate a user by using an access token.## Compare database authentication options\nThe following table compares different database authentication methods for Cloud SQL.\n| Feature     | Built-in database authentication | IAM database authentication |\n|:---------------------------|:-----------------------------------|:-------------------------------|\n| Authentication method  | Password       | Temporary authentication token |\n| Network traffic encryption | SSL not required     | SSL required     |\n| User management   | Manual        | Centralized through IAM  |\n## Automatic versus manual IAM database authentication\nCloud SQL for PostgreSQL has two options for IAM database authentication: automatic and manual.\n### Automatic IAM database authentication\nlets you hand off requesting and managing access tokens to an intermediary [Cloud SQL connector](/sql/docs/postgres/connect-overview) , such as the Cloud SQL Auth Proxy. With automatic IAM database authentication, users need to pass only the IAM database username in a connection request from the client. The connector submits the access token information for the password attribute on behalf of the client.\nAutomatic IAM database authentication requires the use of a Cloud SQL connector. It's supported by the [Cloud SQL Auth Proxy](/sql/docs/postgres/sql-proxy) , the [Go connector](/sql/docs/postgres/connect-connectors#go) , the [Java connector](/sql/docs/postgres/connect-connectors#java) , and the [Python connector](/sql/docs/postgres/connect-connectors#python) .\nFor the most secure and reliable experience, we recommend you use automatic IAM database authentication. IAM database authentication uses OAuth 2.0 access tokens, which are short-lived and only valid for one hour. Cloud SQL connectors are able to request and refresh these tokens, ensuring that long-lived processes or applications that rely on connection pooling can have stable connections. Automatic IAM database authentication is strongly recommended over manual authentication.\nFor more information, see [Log in with automatic IAM database authentication](/sql/docs/postgres/iam-logins#log-in-with-automatic) .\n### Manual IAM database authentication\nrequires the IAM principal to explicitly pass the access token for the password attribute in the client connection request. Principals must first log in to Google Cloud and explicitly request the access token from IAM.\nUsing the [gcloud CLI](/sdk/gcloud) , you can explicitly request an [OAuth 2.0](https://developers.google.com/identity/protocols/oauth2) token with the Cloud SQL Admin API scope that is used to log in to the database. When you log in as a database user with IAM database authentication, you use your email address as the username and the access token as the password. You can use this method with either a direct connection to the database or with a Cloud SQL connector.\n**Warning: ** OAuth 2.0 access tokens are short lived and are only valid for one hour. Any new connections or logins created after this time fail. For this reason, we recommend that you use automatic IAM database authentication for long-lived processes or applications that rely on connection pooling.\nLogging in with IAM database authentication can only be performed over an SSL connection.\nFor more information, see [Logging in with manual IAM database authentication](/sql/docs/postgres/iam-logins#logging-in-as-a-user) .\n## User and service account administration\n**Note:** Cloud SQL does not support the addition of IAM groups. To add a group of IAM users to the database, you need to add each principal individually.\nTo provide users and service accounts access to databases on an instance using IAM database authentication, you need to add them to the instance. For more information, see [Add a user or service account that uses IAM](/sql/docs/postgres/add-manage-iam-users#creating-a-database-user) .\nIf you use the Google Cloud console to add users or service accounts, Cloud SQL asks you to add the \"Cloud SQL User\" role to the user. This role is required for users to log in to the instance.\n`gcloud`\n[GRANT](https://www.postgresql.org/docs/current/static/sql-grant.html)\n[grant database privileges](/sql/docs/postgres/add-manage-iam-users#grant-db-privileges)\n## Instance configuration for Cloud SQL IAM database authentication\nYou can enable IAM database authentication on an instance using the `cloudsql.iam_authentication` flag. Once you enable this flag, the instance enables logins from accounts that are configured for IAM database authentication.\nSetting the flag does not prevent existing, non-IAM users from using their usernames and passwords to log in. However, if you disable this flag on the instance, any user that you previously added using IAM database authentication loses access to the instance. For more information, see [Configuring instances for IAM database authentication](/sql/docs/postgres/create-edit-iam-instances) .\n### Cloud SQL IAM database authentication for different instance scenarios\n| 0     | 1                                                                                                  |\n|:-------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Read replicas  | IAM database authentication is not enabled in a read replica automatically, even when it is enabled on the primary instance. After you create a read replica, you need to add IAM database authentication. For more information, see Configuring read replica logins for IAM database authentication.                        |\n| Restored instances | If an instance was previously backed up and later restored to the same or a different instance in the same project, the current user login authorizations apply. If you restore a backup to a new instance in another project, you need to set up the user authorizations for the new instance. For more information, see Adding a user or service account that uses IAM database authentication. |\n## About IAM Conditions\nIAM Conditions lets you grant roles based on a variety of attributes. For example, you can allow access only at certain dates and times or grant access only to Cloud SQL resources with certain names.\nFor more information about IAM Conditions, see the [Overview of IAM Conditions](/iam/docs/conditions-overview) page. You can also learn more about [Using IAM Conditions](/sql/docs/postgres/iam-conditions) with Cloud SQL, including examples.\n## Work with Cloud Audit Logs\nTo keep records of data access, including logins, you can use audit logs. [Cloud Audit Logs](/logging/docs/audit#data-access) is turned off, by default. You need to turn on [Data Access audit logs](/logging/docs/audit#data-access) for login tracking. Using audit logging for this purpose incurs costs for data logging. For more information, see [Audit Logs](/sql/docs/postgres/audit-logging#audited_operations) , [Configuring Data Access audit logs](/logging/docs/audit/configure-data-access) and [Pricing for logging data](/logging#pricing) .\n## Restrictions\n- For security, logins using IAM database authentication are only available on an SSL connection. Unencrypted connections are rejected.\n- There is a per-minute login quota for each instance, which includes both successful and unsuccessful logins. When the quota is exceeded, logins are temporarily unavailable. We recommend that you avoid frequent logins and restrict logins using [authorized networks](/sql/docs/postgres/authorize-networks) . The quota for authorization of logins is 12,000 per minute, per instance.## What's next\n- Learn how to [configure instances for IAM database authentication](/sql/docs/postgres/create-edit-iam-instances) .\n- Learn how to [add a user or service account that uses IAM database authentication to your database](/sql/docs/postgres/add-manage-iam-users#creating-a-database-user) .\n- Learn how to [log in to a Cloud SQL database with IAM database authentication](/sql/docs/postgres/iam-logins) .\n- Learn how to [view login information in audit logs](/sql/docs/postgres/add-manage-iam-users#viewing-login-audit-logs) .", "guide": "Cloud SQL"}