{"title": "Cloud SQL - Configure VPC Service Controls", "url": "https://cloud.google.com/sql/docs/postgres/admin-api/configure-service-controls?hl=zh-cn", "abstract": "# Cloud SQL - Configure VPC Service Controls\nThis page describes how to enable VPC Service Controls on a Cloud SQL project. Before you begin, review [Overview of VPC Service Controls](/vpc-service-controls/docs/overview) . Also review the [Cloud SQL limitations when using VPC Service Controls](/vpc-service-controls/docs/supported-products#cloud_sql_admin_api) .\n", "content": "## Before you begin\n- Enable the Compute Engine API. [Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=compute) \n- Enable the Service Networking API. [Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=servicenetworking) \n- Add the [Identity and Access Management (IAM) roles](/vpc-service-controls/docs/access-control#required_roles) to the user or service account you are using to set up and administer  VPC Service Controls. See [IAM Roles for Administering VPC Service Controls](https://cloud.google.com/vpc-service-controls/docs/access-control) .\n- Review [limitations](/vpc-service-controls/docs/supported-products#cloud_sql_admin_api) when using VPC Service Controls with Cloud SQL.\n- Optionally, add an organization policy that restricts public IP on  instances in projects that use that policy. See [Connection organization policies](/sql/docs/postgres/connection-org-policy) and [Configuring the organization policy](/sql/docs/postgres/configure-org-policy#configuring_the_organization_policy) .\n### Configure the Virtual Private Cloud (VPC) network\nPerform the steps in [Setting up private connectivity to Google APIs and services](/vpc-service-controls/docs/set-up-private-connectivity) .\n**Note:** If you're using [Shared VPC](/vpc/docs/shared-vpc) , you must include the [host project](/vpc-service-controls/docs/troubleshooting#shared_vpc) in a service perimeter along with any projects that belong to the Shared VPC.\n## Disallow or disable public IP for Cloud SQL instances\nTo constrain data within the VPC for your Cloud SQL project, do not allow connections to Cloud SQL instances from public IPs. IP-based connections bypass VPC Service Controls. You must also disable public IP for new and existing Cloud SQL instances within the VPC.\nTo either disallow or disable public IP on Cloud SQL instances:\n- Organization administrators can apply organization policies that disallow creating new instances with public IP. See [Configure the organization policy](/sql/docs/postgres/configure-org-policy#configuring_the_organization_policy) .\n- Users who create Cloud SQL instances can configure the instances to use private IP instead of public IP. See [Disable public IP](/sql/docs/mysql/configure-ip#disable-public) .## Create a service perimeter\nDuring this procedure, you select the Cloud SQL projects that you want the VPC service perimeter to protect.\n**Note:** Sometimes, a Cloud SQL instance enabled with CMEK has the KMS key hosted in a different cloud project. For this scenario, when you enable VPC-SC, you must add the KMS key hosting project to the security perimeter.\nTo create a service perimeter, follow the instructions in [Creating a service perimeter](/vpc-service-controls/docs/create-service-perimeters) .\n### Add more instances to the service perimeter\nTo add existing Cloud SQL projects to the perimeter, follow the instructions in [Updating a service perimeter](/vpc-service-controls/docs/manage-service-perimeters#updating_a_service_perimeter) .\n### Add the Cloud SQL and Cloud Storage APIs to the service perimeter\nTo mitigate the risk of your data being exfiltrated from Cloud SQL, for example, using Cloud SQL import or export APIs, you must restrict both the **Google Cloud SQL Admin API** the **Google Cloud Storage API** .\n**Note:** You can only import or export data from a Cloud Storage bucket that is in a project that resides in the same service perimeter as Cloud SQL.\nTo add Cloud SQL and Cloud Storage APIs as restricted services:\n- In the Google Cloud console navigation menu, click **Security** , and then click **VPC Service Controls** . [Go to the VPC Service Controls page](https://console.cloud.google.com/security/service-perimeter) \n- On the **VPC Service Controls** page, in the table, click the name of the service perimeter that you want to modify.\n- Click **EDIT** .\n- On the **Edit VPC Service Perimeter** page, click **ADD SERVICES** .\n- Add **Cloud SQL Admin API** and **Cloud Storage API** .\n- Click **Save** .\n```\ngcloud access-context-manager perimeters update PERIMETER_ID \\--policy=POLICY_ID \\--add-restricted-services=sqladmin.googleapis.com,storage.googleapis.com\n```\nWhere:- is the ID of the perimeter or the fully qualified identifier for the perimeter.\n- is the ID of the access policy.\nFor reference information, see [access-context-manager perimeters update](/sdk/gcloud/reference/alpha/access-context-manager/perimeters/update) .\n## Create an access level\nOptionally, to permit external access to protected resources inside a perimeter, you can use . Access levels apply only to requests for protected resources coming from outside the service perimeter. You can't use access levels to give protected resources or VMs permission to access data and services outside the perimeter.\nSee [Allowing access to protected resources from outside a perimeter](/vpc-service-controls/docs/use-access-levels) .", "guide": "Cloud SQL"}