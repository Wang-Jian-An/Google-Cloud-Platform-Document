{"title": "Cloud SQL - SQL Server database auditing", "url": "https://cloud.google.com/sql/docs/sqlserver/db-audit", "abstract": "# Cloud SQL - SQL Server database auditing\nThis page describes database auditing in Cloud SQL using the functionality of SQL Server Audit.\n**Note:** To audit a Cloud SQL instance's administrative and maintenance operations, see [Cloud Audit Logs](/sql/docs/sqlserver/audit-logging) .\n", "content": "## Overview\nIn Cloud SQL, SQL Server Audit capabilities include the following:\n- Creating server audit specifications\n- Tracking and logging server-level and database-level events\n**Note:** Before using this feature, review the [best practices](#best-practices) . In many cases, you should [enable automatic storage increases](/sql/docs/sqlserver/instance-settings#automatic-storage-increase-2ndgen) for audit file storage. Disk space needs vary based on audit types and retention intervals.\nFor additional information about the capabilities of SQL Server Audit, see [SQL Server Audit (Database Engine)](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-database-engine?view=sql-server-ver15) .\n## Before you begin\nBefore enabling database auditing, review the prerequisites in this section.\n### Cloud Storage bucket for audit files\nAudit files (audit logs) are uploaded to a Cloud Storage bucket location. Thus, you may need to [create a bucket](https://cloud.google.com/storage/docs/creating-buckets) owned by your Google Cloud account.\nAlternatively, you can use a bucket location owned by another account. When you [enable auditing](#enabling-auditing) , if you have the necessary permissions, the `roles/storage.objectAdmin` [role](https://cloud.google.com/storage/docs/access-control/iam-roles#standard-roles) is granted automatically for uploading audit files to the bucket location of the given [service account](https://cloud.google.com/iam/docs/service-accounts) . If you don't have the necessary permissions, you must grant them for the service account, later.\n**Note:** You need to manage log retention in the Cloud Storage bucket. For information about adding a retention policy to specify a retention period, see [Retention policies and retention policy locks](https://cloud.google.com/storage/docs/bucket-lock) .\n### Valid user for enabling auditing\nTo enable auditing and to create audit specifications, the default `sqlserver` user must be available. When you created a Cloud SQL for SQL Server instance, the default `sqlserver` user was created for you.\n## Enabling auditing\nWhen you enable auditing, a Cloud Storage location is required. The following are optional:\n- The log retention period on the instance\n- The upload interval (upload frequency)\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the  instance name.\n- Click **Edit** .\n- In the **Customize your instance** section, click **Flags and parameters** .\n- Check the checkbox next to **Enable SQL Server audit** .\n- Specify a Cloud Storage bucket as the location to which audit files are  uploaded.\n- Click **Advanced Options** .\n- Optionally, specify a number of days for log retention (1 to 7 days; 7 days  is the default).\n- Optionally, specify how often to upload logs (audit files), in minutes  (1-720 minutes; 10 minutes is the default).\n- Click **Save** to apply your changes.\nThe following command enables auditing:\n```\ngcloud sql instances patch INSTANCE_NAME --audit-bucket-path=gs://my-bucket --audit-retention-interval=24h --audit-upload-interval=10m\n```\nThe following table summarizes this operation's `gcloud` parameters:\n| 0       | 1                      | 2                   | 3            |\n|:---------------------------|:---------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------|:----------------------------------------------|\n| Parameter     | Description                   | Allowed values                | Default value         |\n| --audit-bucket-path  | Required. The location, as a Cloud Storage bucket, to which audit files are uploaded. | Empty if audit is disabled. Otherwise, a bucket path that starts with: gs:// | Empty, because by default, audit is disabled. |\n| --audit-retention-interval | Optional. The number of days for audit log retention on disk.       | 1 to 7 days. Only days are allowed.           | 7 days.          |\n| --audit-upload-interval | Optional. How often to upload audit logs (audit files).        | 1-720 minutes.                | 10 minutes.         |Using the REST API, you can enable auditing for an instance. As shown in the following request prototype, you can specify a Cloud Storage bucket, a number of days for audit file retention, and a frequency for the uploading of audit files. Only the bucket location is required. For more information, see [ SqlServerAuditConfig](/sql/docs/sqlserver/admin-api/rest/v1/instances#SqlServerAuditConfig) :\n```\n{\u00a0 \u00a0\"databaseVersion\":\"database-version\",\u00a0 \u00a0\"name\":\"instance-id\",\u00a0 \u00a0\"region\":\"region\",\u00a0 \u00a0\"rootPassword\":\"password\",\u00a0 \u00a0\"settings\":{\u00a0 \u00a0 \u00a0 \"tier\":\"machine-type\",\u00a0 \u00a0 \u00a0 \"sqlServerAuditConfig\":{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"bucket\":\"gs://mybucket\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"retentionInterval\":\"24h\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"uploadInterval\":\"10m\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0}}\n```Using the REST API, you can enable auditing for an instance. As shown in the following request prototype, you can specify a Cloud Storage bucket, a number of days for audit file retention, and a frequency for the uploading of audit files. Only the bucket location is required. For more information, see [ SqlServerAuditConfig](/sql/docs/sqlserver/admin-api/rest/v1beta4/instances#SqlServerAuditConfig) :\n```\n{\u00a0 \u00a0\"databaseVersion\":\"database-version\",\u00a0 \u00a0\"name\":\"instance-id\",\u00a0 \u00a0\"region\":\"region\",\u00a0 \u00a0\"rootPassword\":\"password\",\u00a0 \u00a0\"settings\":{\u00a0 \u00a0 \u00a0 \"tier\":\"machine-type\",\u00a0 \u00a0 \u00a0 \"sqlServerAuditConfig\":{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"bucket\":\"gs://mybucket\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"retentionInterval\":\"24h\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"uploadInterval\":\"10m\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0}}\n```\n## Disabling auditing\nThis section contains the options for disabling auditing. When you disable auditing, all audit files, including those not yet uploaded, are deleted from the instance. Additionally, all server audits are disabled and must be re-enabled if auditing is to resume. Audit logs that were uploaded to the Cloud Storage bucket may remain, depending on your retention settings for the bucket.\nThe following are the options for disabling auditing.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the  instance name.\n- Click **Edit** .\n- In the **Customize your instance** section, click **Flags and parameters** .\n- Uncheck the checkbox next to **Enable SQL Server audit** .\n- Click **Save** to apply your changes.\nThe following command, which omits a value for the `--audit-bucket-path` parameter, disables auditing:\n```\ngcloud sql instances patch INSTANCE_NAME --audit-bucket-path=\n```The following, which omits the fields of the `sqlServerAuditConfig` object, is a request prototype for disabling auditing:\n```\n{\u00a0 \u00a0\"databaseVersion\":\"database-version\",\u00a0 \u00a0\"name\":\"instance-id\",\u00a0 \u00a0\"region\":\"region\",\u00a0 \u00a0\"rootPassword\":\"password\",\u00a0 \u00a0\"settings\":{\u00a0 \u00a0 \u00a0 \"tier\":\"machine-type\",\u00a0 \u00a0 \u00a0 \"sqlServerAuditConfig\":{\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0}}\n```The following, which omits the fields of the `sqlServerAuditConfig` object, is a request prototype for disabling auditing:\n```\n{\u00a0 \u00a0\"databaseVersion\":\"database-version\",\u00a0 \u00a0\"name\":\"instance-id\",\u00a0 \u00a0\"region\":\"region\",\u00a0 \u00a0\"rootPassword\":\"password\",\u00a0 \u00a0\"settings\":{\u00a0 \u00a0 \u00a0 \"tier\":\"machine-type\",\u00a0 \u00a0 \u00a0 \"sqlServerAuditConfig\":{\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0}}\n```\n## Automatic uploading of audit files\nAfter you enable auditing, the generated audit files are uploaded automatically to your specified Cloud Storage bucket.\nThe generated audit files also are stored with the instance until the configured retention period (interval) expires. After that period, the audit files are permanently deleted, even the files that could not be uploaded.\n## Creating server audits\nAfter you enable auditing, the default `sqlserver` user has permissions to create, alter and drop server audits.\nUse the [CREATE SERVER AUDIT](https://docs.microsoft.com/en-us/sql/t-sql/statements/create-server-audit-transact-sql?view=sql-server-ver15) command to define new server audits. You also can use the user interface of [SQL Server Management Studio (SSMS)](https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver15) to create server audits.\nThe following categories of parameters are enforced for all server audits:\n| 0      | 1      |\n|:-----------------------|:------------------------|\n| Category of parameter | Allowed values   |\n| On audit log failure | Continue or fail  |\n| Audit destination  | File     |\n| Path     | /var/opt/mssql/audit |\n| Maximum file size  | 2-50 MB     |\n| Maximum rollover files | Must be: not configured |\n| Maximum files   | Must be: not configured |\n| Reserve disk space  | Off      |\n## Reading audits\n### Reading audits from an instance\nTo retrieve the data from an audit file created by a server audit, you can use the following stored procedure: `msdb.dbo.gcloudsql_fn_get_audit_file` . The `msdb.dbo.gcloudsql_fn_get_audit_file` procedure accepts the same parameters as the `sys.fn_get_audit_file` function.\nThus, for information about using that stored procedure, see ` [sys.fn_get_audit_file](https://docs.microsoft.com/en-us/sql/relational-databases/system-functions/sys-fn-get-audit-file-transact-sql?view=sql-server-ver15) ` .\nHere is example of using the `msdb.dbo.gcloudsql_fn_get_audit_file` procedure to retrieve audit data:\n```\nSELECT event_time, statement FROM msdb.dbo.gcloudsql_fn_get_audit_file('/var/opt/mssql/audit/*', NULL, NULL) WHERE statement LIKE '%INSERT%'\n```\n### Reading audits from a bucket\nTo read audits from a Cloud Storage bucket, you can download the files from the bucket to a SQL Server instance. That SQL Server instance could be:\n- A Compute Engine Windows instance\n- A Compute Engine Linux instance\n- Another type of instance that is running SQL Server\nAudit files from the bucket should be transferred to a location accessible to that instance, such as its local disk. Then, to return information from the audit files, run the ` [sys.fn_get_audit_file](https://docs.microsoft.com/en-us/sql/relational-databases/system-functions/sys-fn-get-audit-file-transact-sql?view=sql-server-ver15) ` function using a member of the serveradmin fixed server role. For example, from a Windows instance, if you transferred audit files to `D:\\Audit` , you could use a command similar to the following:\n```\nSELECT event_time, statement FROM sys.fn_get_audit_file('D:\\Audit\\*.*', NULL, NULL) WHERE statement LIKE '%INSERT%'\n```\n## Monitoring metrics\nYou can monitor audit-related operations as part of the [Cloud SQL metrics](/sql/docs/sqlserver/admin-api/metrics) , available through [Metrics Explorer](https://cloud.google.com/monitoring/charts/metrics-explorer) :\n- **database/sqlserver/audits_upload_count.** This metric indicates the total of the audit file upload attempts, for successful and failed attempts. Check this metric to monitor whether uploads were successful.\n- **database/sqlserver/audits_size.** This metric indicates how much disk space is used by audit files stored on the instance, at the time of a measurement. This metric provides the total size of the audit files on the instance, in bytes.## Best practices\n- To avoid transferring large files across regions, consider:- Creating multi-regional Cloud Storage buckets, or\n- Setting up the destination Cloud Storage bucket in the same region as the instance\n- Before using the functionality of SQL Server Audit, consider [enabling automatic storage increases](/sql/docs/sqlserver/instance-settings#automatic-storage-increase-2ndgen) . Audit files, depending on their total size and retention intervals, may need significant disk space.\n- After enabling audit, verify that your instance can upload audit files into your Cloud Storage bucket. If the requester who set up auditing lacked the necessary permissions for uploading files to the Cloud Storage bucket, the permissions aren't granted automatically.\n- Set up a [metric-based alerting policy](https://cloud.google.com/monitoring/alerts) to notify you about failed upload attempts and excessive disk usage.\n- To avoid retaining too many audit files for too long, set up a data retention policy for your Cloud Storage bucket.", "guide": "Cloud SQL"}