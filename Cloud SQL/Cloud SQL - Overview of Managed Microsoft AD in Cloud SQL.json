{"title": "Cloud SQL - Overview of Managed Microsoft AD in Cloud SQL", "url": "https://cloud.google.com/sql/docs/sqlserver/ad", "abstract": "# Cloud SQL - Overview of Managed Microsoft AD in Cloud SQL\nYou can integrate Cloud SQL for SQL Server with Managed Service for Microsoft Active Directory (also called Managed Microsoft AD).\nThis page contains information to review before you start an integration. After reviewing the information below, including the [limitations](#limitations-and-alternatives) , see [Using Cloud SQL with Managed Microsoft AD](/sql/docs/sqlserver/configure-ad) .\n", "content": "## Advantages of integrating with Managed Microsoft AD\nAuthentication, authorization, and more are available through [Managed Microsoft AD](https://cloud.google.com/managed-microsoft-ad/docs/overview) . For example, joining an instance to a Managed Microsoft AD domain enables you to log in using Windows Authentication with an AD-based identity.\nIntegrating Cloud SQL for SQL Server with an AD domain has the additional advantage of Cloud integration with your on-premises AD domains.\n## Prerequisites for integration\n**Note:** Only instances created after March 12, 2021, are currently supported. If you try to join an instance to a domain and it fails, check the instance creation date.\nYou can integrate with Managed Microsoft AD, [adding support for Windows Authentication](/sql/docs/sqlserver/configure-ad) to an instance. However, before integrating, the following are required for your Google Cloud project:\n- A Managed Microsoft AD domain. For information about setting up a domain, see [Create a domain](/managed-microsoft-ad/docs/create-domain) .- On-premises AD domains require a managed AD trust. See [Creating a one-way trust](/managed-microsoft-ad/docs/create-trust) and [Use an on-premises AD user to create a Windows login to Cloud SQL](/sql/docs/sqlserver/configure-ad#on-premises-ad-users) .\n- A Per-Product, Per-Project Service account, as described below; see [Creating a service account](#creating-a-service-account) .## Create and configure a service account\n**Note:** To create a service account with the required permissions, you must have the`resourcemanager.projects.setIamPolicy`permission. This permission is included in the Project Owner, Project IAM Admin, and Organization Administrator roles. You also must enable the Cloud SQL Admin API.\nYou need a Per-Product, Per-Project Service account for each project that you plan to integrate with Managed Microsoft AD. Use `gcloud` or the Console to create the account at the project level. The Per-Product, Per-Project Service account should be granted the `managedidentities.sqlintegrator` role on the project. For additional information, see [gcloud projects set-iam-policy](https://cloud.google.com/sdk/gcloud/reference/projects/set-iam-policy) .\nIf you are using the Google Cloud console, then Cloud SQL automatically creates a service account for you, and prompts you to grant the `managedidentities.sqlintegrator` role.\nTo create a service account with `gcloud` , run the following command:\n```\ngcloud beta services identity create --service=sqladmin.googleapis.com \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0--project=[PROJECT]\n```\nThat command returns a service account name in the following format: `service-[PROJECT_NUMBER]@gcp-sa-cloud-sql.iam.gserviceaccount.com`\nHere is an example of a service account name: `service-333445@gcp-sa-cloud-sql.iam.gserviceaccount.com`\nGranting the necessary permission for integration requires existing permissions. For the required permissions, see [Required permissions](https://cloud.google.com/iam/docs/granting-changing-revoking-access#required-permissions) .\nTo grant the necessary permission for integration, run the following command. If your Managed Microsoft AD is in a different project, [AD_PROJECT_ID] should be the one containing the Managed Microsoft AD instance, while the service account's [SQL_PROJECT_NUMBER] should be the one containing the SQL Server instance:\n```\ngcloud projects add-iam-policy-binding [AD_PROJECT_ID] \\--member=serviceAccount:service-[SQL_PROJECT_NUMBER]@gcp-sa-cloud-sql.iam.gserviceaccount.com \\--role=roles/managedidentities.sqlintegrator\n```\nAlso see [gcloud beta services identity create](https://cloud.google.com/sdk/gcloud/reference/beta/services/identity/create) .\n## Best practices for integrating with Managed Microsoft AD\nWhen you plan an integration, review the following:\n- [Prerequisites for integration](#prerequisites-for-integration) \n- [Integrating with a managed AD domain in a different project](/sql/docs/sqlserver/configure-ad#integrating-different-project) \n- [Best practices for running Active Directory on Google Cloud](/compute/docs/instances/windows/best-practices) \n- [Managed Microsoft AD documentation](https://cloud.google.com/managed-microsoft-ad/docs/overview) \n- [Deploy domain controllers in additional regions](https://cloud.google.com/managed-microsoft-ad/docs/add-remove-regions) \n- [Use the AD diagnosis tool](/sql/docs/sqlserver/ad-diagnosis-tool) to troubleshoot AD setup issues with your on-premises domain and Cloud SQL for SQL Server instances in Google Cloud console.\nHaving a SQL Server instance and a managed AD instance in the same region offers the lowest network latency and the best performance. Thus, when possible, set up a SQL Server instance and an AD instance in the same region. Additionally, whether or not you set them up in the same region, set up a primary and a backup region for higher availability.\n### Topologies for integrating with Managed Microsoft AD\nCloud SQL for SQL Server doesn't support domain local groups. However, you can:\n- Add global groups or individual user logins directly in SQL Server\n- Use universal groups when all groups and users belong to the same forest\nIf domain local groups were supported, individual user accounts, and global and universal groups, could be added as children of a domain local group (that guards access to SQL Server). This would enable you to add a domain local group as a SQL Server login. In Cloud SQL for SQL Server, you can enable similar functionality, as described in this section.\nIf you have multiple domains, in multiple forests, and you have multiple global groups, you can add all of the individual user accounts, and the global and universal groups, directly as logins to SQL Server. As an example of Option 1, see the following diagram:\nIf your domains are in the same forest, you can define a universal group in one of your domains. Then you can add all of the individual user accounts, and the global and universal groups, as children of that defined universal group, and add the defined universal group as a SQL Server login. As an example of Option 2, see the following diagram:\n## Limitations and alternatives\n**Note:** For information related to this section, see [Unsupported for integration](#unsupported-for-integration) .\nThe following limitations apply when integrating with Managed Microsoft AD:\n- [Domain local groups are not supported](#unsupported-for-integration) , but you can add global groups or individual user logins directly in SQL Server. Alternatively, you can use universal groups when all groups and users belong to the same forest.\n- In general, new users created through the Google Cloud console are assigned the`CustomerDbRootRole`role, which has this [SQL Server Agent fixed database role](https://docs.microsoft.com/en-us/sql/ssms/agent/sql-server-agent-fixed-database-roles?view=sql-server-ver15) :`SQLAgentUserRole`. However, users created through SQL Server directly, such as Managed Microsoft AD users, cannot be granted this role, or use SQL Server Agent, because the MSDB database where this role must be granted is protected.\n- Some restricted operations may result in the following error: \"Could not obtain information about Windows NT group/user\". One example of this type of restricted operation is creating logins by users from domains that are connected through a trust relationship. Another example is granting privileges to users from domains that are connected through a trust relationship. In these cases, retrying the operation is often successful. If retrying fails, close the connection and open a new connection.\n- Fully qualified domain names (FQDNs) aren't supported by SQL Server on Windows. Therefore, use domain names (short names), rather than FQDNs, when you create SQL Server logins. For example, if your domain name is`ad.mydomain.com`, then create SQL Server logins for`ad\\user`, rather than for`ad.mydomain.com\\user`.\n- To access SQL Server instances, always use FQDNs. For example, you could use an FQDN similar to`private.myinstance.us-central1.myproject.cloudsql.mydomain.com`. Netbios names aren't supported, nor are any short names if DNS suffixes are omitted.\n- SQL Server logins based on Active Directory users and groups cannot be managed from the Google Cloud console.\n- In Cloud SQL, if a SQL Server instance was created on or before March 12, 2021, it cannot be integrated with Managed Microsoft AD.\n- Windows Authentication won't work with an external trust. The error might be the following: \"The target principal name is incorrect. Cannot generate SSPI context.\" Additionally, as related to [Microsoft's recommendations](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/dd560679(v=ws.10)) , use a forest trust instead of an external trust for Kerberos authentication.\n**Note:** Managed domains with fewer than eight characters (such as the seven-character domain of xyz.com) are unsupported. As a workaround, create a managed domain with a longer name.\n## Unsupported for integration\n**Note:** For alternatives to some unsupported operations, see [Limitations and alternatives](#limitations-and-alternatives) .\nThe following features currently are unsupported when integrating with Managed Microsoft AD:\n- Domain local groups.\n- Dropping SQL Server logins by users from domains that are connected through a trust relationship. You can do this operation with a user from your managed domain, or through the`sqlserver`login.\n- NTLM authentication.\n- Login with an IP address from domains connected through a trust relationship.\n- Instances with long names (more than 63 characters).## What's next\n- Review the [Quickstart for creating a Managed Microsoft AD domain](/managed-microsoft-ad/docs/create-domain) .\n- Prepare to [create an integrated Cloud SQL instance](/sql/docs/sqlserver/configure-ad#creating-an-instance-with-windows-authentication) .\n- Learn how to [create a trust relationship](https://cloud.google.com/managed-microsoft-ad/docs/create-trust) between on-premises domains and a Managed Microsoft AD domain.\n- Review how to [view integrated instances](https://cloud.google.com/managed-microsoft-ad/docs/viewing-sql-server-integrations) .", "guide": "Cloud SQL"}