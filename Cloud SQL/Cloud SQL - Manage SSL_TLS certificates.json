{"title": "Cloud SQL - Manage SSL/TLS certificates", "url": "https://cloud.google.com/sql/docs/postgres/manage-ssl-instance", "abstract": "# Cloud SQL - Manage SSL/TLS certificates\n", "content": "## Manage client certificates\n### Retrieve a client certificate\nYou can retrieve the public key portion of a client certificate. You cannot retrieve the private key, however. If you have lost your private key, you must create a new certificate.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Connections** from the SQL navigation menu.\n- Select the **Security** tab.\n- Below **Manage client certificates** , click on a certificate name.\n- The **SSL Client Certificate** dialog box  opens and shows the client certificate (`client-cert.pem`) with  a link to download the certificate.\nRetrieve the client certificate public key with the [ssl client-certs describe](/sdk/gcloud/reference/sql/ssl/client-certs/describe) command:\n```\ngcloud sql ssl client-certs describe CERT_NAME \\--instance=INSTANCE_NAME \\--format=\"value(cert)\" > client-cert.pem\n```\n- List the certificates on the instance to get the fingerprint of the certificate you want to retrieve:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/sslCerts\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:Record the `sha1Fingerprint` field for the certificate you want to retrieve. Do not include the quotation marks.\n- Retrieve the certificate:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The cert's sha1FingerPrint\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/sslCerts/sha1FingerPrint\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Copy all of the certificate data contained by the quotation marks  to a file, for example`client-cert.pem`. Do not copy the  quotation marks themselves.\n- List the certificates on the instance to get the fingerprint of the certificate you want to retrieve:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/sslCerts\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:Record the `sha1Fingerprint` field for the certificate you want to retrieve. Do not include the quotation marks.\n- Retrieve the certificate:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The cert's sha1FingerPrint\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/sslCerts/sha1FingerPrint\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Copy all of the certificate data contained by the quotation marks  to a file, for example`client-cert.pem`. Do not copy the  quotation marks themselves.\n### Delete a client certificate\nWhen you delete a client certificate, the database server is updated and doesn't need to be restarted.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Connections** from the SQL navigation menu.\n- Select the **Security** tab.\n- Below **Manage client certificates** , find the certificate you want to  delete and click.\n- In the **Delete client certificate** dialog box, click **Ok** .\nDelete the client certificate using the [ ssl client-certs delete](/sdk/gcloud/reference/sql/ssl/client-certs/delete) command:\n```\ngcloud sql ssl client-certs delete CERT_NAME \\--instance=INSTANCE_NAME\n```\n- List the certificates on the instance to get the fingerprint of the certificate you want to delete:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/sslCerts\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:Record the `sha1Fingerprint` field for the certificate you want to delete. Do not include the quotation marks.\n- Delete the certificate:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The cert's sha1FingerPrint\nHTTP method and URL:\n```\nDELETE https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/sslCerts/sha1FingerPrint\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- List the certificates on the instance to get the fingerprint of the certificate you want to delete:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/sslCerts\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:Record the `sha1Fingerprint` field for the certificate you want to delete. Do not include the quotation marks.\n- Delete the certificate:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The cert's sha1FingerPrint\nHTTP method and URL:\n```\nDELETE https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/sslCerts/sha1FingerPrint\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:## Manage server certificates\n### Rotate server certificates\nIf you've received a notice about your certificates expiring, or you have initiated a rotation, then you must take the following steps to complete the rotation:\n- Download the new server certificate information.\n- Update your clients to use the new server certificate information.\n- Complete the rotation, which moves the currently active certificate into the \"previous\" slot and updates the newly added certificate to be the active certificate.\nAfter rotating the SSL certificate, your App Engine and Cloud SQL Auth Proxy connections will automatically receive a new certificate when they connect.\nDownload the new server certificate information:- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Connections** from the SQL navigation menu.\n- Select the **Security** tab.\n- Click to expand **Manage certificates** .\n- Select **Rotate certificate** .The rotate option will be grayed-out if there are no eligible   certificates.\n- Click **Download Certificates** .\nThe server certificate information, encoded as a PEM file, is downloaded  to your local environment:- Update all of your PostgreSQL clients to use the new information by  copying the downloaded file to your client host machines, replacing the  existing`server-ca.pem`file.\nAfter you have updated your clients, complete the rotation:- Return to the **Security** tab.\n- Click to expand **Manage certificates** .\n- Select **Rotate certificate** .\n- Confirm that your clients are connecting properly.\n- If any clients are not connecting using the newly rotated certificate,  you can select **Rollback certificate** to [rollback](#rollback) to the previous configuration.\n- Create a server certificate:```\ngcloud beta sql ssl server-ca-certs create \\--instance=INSTANCE\n```\n- Download the certificate information to a local PEM file:```\ngcloud beta sql ssl server-ca-certs list \\--format=\"value(cert)\" \\--instance=INSTANCE_NAME > \\FILE_PATH/FILE_NAME.pem\n```\n- Update all of your clients to use the new information by  copying the downloaded file to your client host machines, replacing the  existing server-ca.pem files.\n- After you have updated your clients, complete the rotation:```\ngcloud beta sql ssl server-ca-certs rotate \\--instance=INSTANCE_NAME\u00a0 \u00a0 \u00a0 \n```\n- Confirm that your clients are connecting properly.If any clients are not connecting using the newly rotated certificate,   you can [rollback](#rollback) to the previous configuration.\n- Download your server certificates:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/listServerCas\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Complete the rotation:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/rotateServerCa\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Download your server certificates:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/listServerCas\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Complete the rotation:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/rotateServerCa\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n### Roll back a certificate rotation operation\nAfter you complete a certificate rotation, your clients must all use the new certificate to connect to your Cloud SQL instance. If the clients were not updated properly to use the new certificate information, they will not be able to connect using SSL/TLS to your instance. If this happens, you can roll back to the previous certificate configuration.\nA rollback operation moves the currently active certificate into the \"upcoming\" slot (replacing any current \"upcoming\" certificate). The \"previous\" certificate becomes the currently active certificate, returning your certificate configuration to the state it was in before you completed the rotation.\n**Note:** Certificate rollback is available only until the old certificate expires.\nTo roll back to the previous certificate configuration:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Connections** from the SQL navigation menu.\n- Select the **Security** tab.\n- Click to expand **Manage certificates** .\n- Select **Rollback certificate** .The rotate option is  grayed-out if there are no eligible certificates. Otherwise, the rollback  action completes after a few seconds.\n```\ngcloud beta sql ssl server-ca-certs rollback \\--instance=INSTANCE_NAME\u00a0 \u00a0\n```\n- Download your server certificates:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/listServerCas\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Copy the`sha1Fingerprint`field for the version you want to roll back to.Look for the version with a createTime value immediately earlier   than the version with the sha1Fingerprint value shown as `activeVersion` .\n- Roll back the rotation:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/rotateServerCa\n```\nRequest JSON body:\n```\n{\n \"rotateServerCaContext\": {\"nextVersion\": \"sha1Fingerprint\"}\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Download your server certificates:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/listServerCas\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Copy the`sha1Fingerprint`field for the version you want to roll back to.Look for the version with a createTime value immediately earlier   than the version with the sha1Fingerprint value shown as `activeVersion` .\n- Roll back the rotation:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/rotateServerCa\n```\nRequest JSON body:\n```\n{\n \"rotateServerCaContext\": {\"nextVersion\": \"sha1Fingerprint\"}\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n### Initiate a rotation\nYou do not need to wait for the email from Cloud SQL to start a rotation. You can start one at any time. When you start a rotation, a new certificate is created and placed into the \"upcoming\" slot. If a certificate was already in the \"upcoming\" slot, it is deleted; there can be only one upcoming certificate.\nTo initiate a rotation:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Connections** from the SQL navigation menu.\n- Select the **Security** tab.\n- Click **Create new certificate** .\n- Click to expand **Manage certificates** .\n- Select **Rotate certificate** .The rotate option will be grayed-out if there are no eligible   certificates.\n- Complete the rotation as described in [Rotating your server certificates](#rotate) .\n- Initiate the rotation:```\ngcloud beta sql ssl server-ca-certs create \\--instance=INSTANCE_NAME\u00a0 \u00a0 \u00a0\n```\n- Complete the rotation as described in [Rotating your server certificates](#rotate) .\n- Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/rotateServerCa\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Complete the rotation as described in [Rotating your server certificates](#rotate) .\n- Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/rotateServerCa\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- Complete the rotation as described in [Rotating your server certificates](#rotate) .\n### Get information about a server certificate\nYou can get information about your server certificate, such as when it expires or what level of encryption it provides.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Connections** from the SQL navigation menu.\n- Select the **Security** tab.Below **Manage server certificates** , you can see the expiration date  of your server certificate in the table.To see the certificate type, use the `gcloud beta sql ssl server-ca-certs list --instance=` `` command.\n```\ngcloud beta sql ssl server-ca-certs list \\--instance=INSTANCE_NAME\n```You can see details about the server certificate when you describe your instance:\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id?fields=serverCaCert\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:You can see details about the server certificate when you describe your instance:\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id?fields=serverCaCert\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n### Reset the SSL/TLS configuration\nYou can completely reset your SSL/TLS configuration.\n**Caution:** Performing this action removes the ability to connect to your instance using SSL/TLS until you create new client certificates to replace any that were previously in use.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Connections** from the SQL navigation menu.\n- Scroll down to the **Reset SSL configuration** section.\n- Click **Reset SSL Configuration** .\n- Refresh the certificate:```\ngcloud sql instances reset-ssl-config INSTANCE_NAME\n```\n- [Create new client certificates](/sql/docs/postgres/configure-ssl-instance#new-client) .\n- Refresh the certificate:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/resetSslConfig\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- [Create new client certificates](/sql/docs/postgres/configure-ssl-instance#new-client) .## What's next\n- Learn more about [SSL/TLS in Cloud SQL](/sql/docs/postgres/authorize-ssl) .\n- [Configure SSL/TLS](/sql/docs/postgres/configure-ssl-instance) on your Cloud SQL instance.\n- [Connect using SSL/TLS](/sql/docs/postgres/connect-admin-ip#connect-ssl) to your Cloud SQL instance.\n- Learn more about [how PostgreSQL uses SSL/TLS](https://www.postgresql.org/docs/current/static/libpq-ssl.html) .", "guide": "Cloud SQL"}