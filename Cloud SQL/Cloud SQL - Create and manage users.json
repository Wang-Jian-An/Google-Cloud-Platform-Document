{"title": "Cloud SQL - Create and manage users", "url": "https://cloud.google.com/sql/docs/postgres/create-manage-users", "abstract": "# Cloud SQL - Create and manage users\nThis page describes how to enable and use Cloud SQL built-in authentication.\n[Cloud SQL built-in database authentication](/sql/docs/postgres/built-in-authentication)\n", "content": "## Before creating users\n- Create a Cloud SQL instance. For more information, see [Create instances](/sql/docs/postgres/create-instance) .\n- Enable password policies for the instance. For more information, see [Instance password policies](/sql/docs/postgres/built-in-authentication#instance_password_policies) .\n- If you plan to use your database's administrative client to manage users, then do the following:- Connect the client to your instance. See [Connection options for external applications](/sql/docs/postgres/external-connection-methods) .\n- Configure the default user on the instance by setting the password. See [Set the password for the default user account](#user-root) .\n## Set the password for the default user account\nWhen you create a new Cloud SQL instance, you must set a password for the default user account before you can connect to the instance.\n`postgres`\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Users** from the SQL navigation menu.\n- Find the`postgres`user and select **Change password** from the more actions menu.\n- Provide a strong password that you can remember and  click **OK** .\nUse the [gcloud sql users set-password](/sdk/gcloud/reference/sql/users/set-password) command as follows to set the password for the default user.\nReplace with the name of the instance before running the command.\n```\ngcloud sql users set-password postgres \\--instance=INSTANCE_NAME \\--prompt-for-password\n```To update the password for the default user account, use a PUT request with the [ users:update](/sql/docs/postgres/admin-api/rest/v1/users/update) method.\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The desired instance ID\n- : The ID of the user\n- : The password for the user\nHTTP method and URL:\n```\nPUT https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/users?name=user-id\n```\nRequest JSON body:\n```\n{\n \"name\": \"user-id\",\n \"password\": \"password\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id\",\n \"status\": \"DONE\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-02-07T22:38:41.217Z\",\n \"startTime\": \"2020-02-07T22:38:41.217Z\",\n \"endTime\": \"2020-02-07T22:38:44.801Z\",\n \"operationType\": \"UPDATE_USER\",\n \"name\": \"operation-id\",\n \"targetId\": \"instance-id\",\n \"selfLink\": \"https://sqladmin.googleapis.com/v1/projects/project-id/operations/operation-id\",\n \"targetProject\": \"project-id\"\n}\n```\nTo update the password for the default user account, use a PUT request with the [users:update](/sql/docs/postgres/admin-api/rest/v1beta4/users/update) method.\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The desired instance ID\n- : The ID of the user\n- : The password for the user\nHTTP method and URL:\n```\nPUT https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/users?name=user-id\n```\nRequest JSON body:\n```\n{\n \"name\": \"user-id\",\n \"password\": \"password\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id\",\n \"status\": \"DONE\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-02-07T22:38:41.217Z\",\n \"startTime\": \"2020-02-07T22:38:41.217Z\",\n \"endTime\": \"2020-02-07T22:38:44.801Z\",\n \"operationType\": \"UPDATE_USER\",\n \"name\": \"operation-id\",\n \"targetId\": \"instance-id\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/operations/operation-id\",\n \"targetProject\": \"project-id\"\n}\n```\n## Create a user\nAfter [setting up the default user account](#user-root) , you can create other users.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Users** from the SQL navigation menu.\n- Click **Add user account** .In the **Add a user account to instance instance_name** page,  you can choose whether the user authenticates with the built-in database  method (username and password) or as an [IAM user](/sql/docs/postgres/add-manage-iam-users) .\n- Select **Built-in authentication** (the default) and add the  following information:- A **User name** .\n- Optional. A **Password** . Provide a strong password that you can remember.\n- Click **Add** .\nUsers created on instances using Cloud SQL's authentication method are granted the `cloudsqlsuperuser` role automatically and have the following privileges associated with this role: `CREATEROLE` , `CREATEDB` , and `LOGIN` .\nIf you need to change the attributes for these users, then use the [ALTER ROLE](https://www.postgresql.org/docs/current/static/sql-alterrole.html) command in the `psql` client. Not all attributes can be  modified with `ALTER ROLE` . Exceptions include the `NOSUPERUSER` and `NOREPLICATION` roles.To create a user, use the [gcloud sql users create](/sdk/gcloud/reference/sql/users/create) command.\nReplace the following:- : The user name.\n- : The name of the instance.\n- : The password for the user.\n```\ngcloud sql users create USER_NAME \\--instance=INSTANCE_NAME \\--password=PASSWORD\n```\nUsers created on instances using Cloud SQL's authentication method are granted the `cloudsqlsuperuser` role automatically and have the following privileges associated with this role: `CREATEROLE` , `CREATEDB` , and `LOGIN` .\nIf you need to change the attributes for these users, then use the [ALTER ROLE](https://www.postgresql.org/docs/current/static/sql-alterrole.html) command in the `psql` client. Not all attributes can be  modified with `ALTER ROLE` . Exceptions include the `NOSUPERUSER` and `NOREPLICATION` roles.\nUser name length limits are the same for Cloud SQL as for on-premises PostgreSQL.\nWhen you create a user, you can add [user password policy](#user-pwd-policy) parameters.To create a user, use a [Terraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance) .\n [  cloud_sql/postgres_database_instance/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_database_instance/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_database_instance/main.tf) \n```\nresource \"random_password\" \"pwd\" {\n length = 16\n special = false\n}\nresource \"google_sql_user\" \"user\" {\n name  = \"user\"\n instance = google_sql_database_instance.instance.name\n password = random_password.pwd.result\n}\n```To apply your Terraform configuration in a Google Cloud project, complete the steps in the following sections.## Prepare Cloud Shell\n- Launch [Cloud Shell](https://shell.cloud.google.com/) .\n- Set the default Google Cloud project  where you want to apply your Terraform configurations.You only need to run this command once per project, and you can run it in any directory.```\nexport GOOGLE_CLOUD_PROJECT=PROJECT_ID\n```Environment variables are overridden if you set explicit values in the Terraform  configuration file.\n## Prepare the directoryEach Terraform configuration file must have its own directory (also called a ).- In [Cloud Shell](https://shell.cloud.google.com/) , create a directory and a new  file within that directory. The filename must have the`.tf`extension\u2014for example`main.tf`. In this  tutorial, the file is referred to as`main.tf`.```\nmkdir DIRECTORY && cd DIRECTORY && touch main.tf\n```\n- If you are following a tutorial, you can copy the sample code in each section or step.Copy the sample code into the newly created `main.tf` .Optionally, copy the code from GitHub. This is recommended  when the Terraform snippet is part of an end-to-end solution.\n- Review and modify the sample parameters to apply to your environment.\n- Save your changes.\n- Initialize Terraform. You only need to do this once per directory.```\nterraform init\n```Optionally, to use the latest Google provider version, include the `-upgrade` option:```\nterraform init -upgrade\n```\n## Apply the changes\n- Review the configuration and verify that the resources that Terraform is going to create or  update match your expectations:```\nterraform plan\n```Make corrections to the configuration as necessary.\n- Apply the Terraform configuration by running the following command and entering`yes`at the prompt:```\nterraform apply\n```Wait until Terraform displays the \"Apply complete!\" message.\n- [Open your Google Cloud project](https://console.cloud.google.com/) to view  the results. In the Google Cloud console, navigate to your resources in the UI to make sure  that Terraform has created or updated them.\n **Note:** Terraform samples typically assume that the required APIs are enabled in your Google Cloud project.To delete your changes, do the following:- To disable deletion protection, in your Terraform configuration file set the`deletion_protection`argument to`false`.```\ndeletion_protection = \"false\"\n```\n- Apply the updated Terraform configuration by running the following command and    entering`yes`at the prompt:```\nterraform apply\n```\n- Remove resources previously applied with your Terraform configuration by running the following command and entering `yes` at the prompt:```\nterraform destroy\n```\nTo create a user, use a POST request with the [users:insert](/sql/docs/postgres/admin-api/rest/v1/users/insert) method.\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The desired instance ID\n- : The ID of the user\n- : The password for the user\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/users\n```\nRequest JSON body:\n```\n{\n \"name\": \"user-id\",\n \"password\": \"password\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id\",\n \"status\": \"DONE\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-02-07T22:44:16.656Z\",\n \"startTime\": \"2020-02-07T22:44:16.686Z\",\n \"endTime\": \"2020-02-07T22:44:20.437Z\",\n \"operationType\": \"CREATE_USER\",\n \"name\": \"operation-id\",\n \"targetId\": \"instance-id\",\n \"selfLink\": \"https://sqladmin.googleapis.com/v1/projects/project-id/operations/operation-id\",\n \"targetProject\": \"project-id\"\n}\n```\nUsers created on instances using Cloud SQL's authentication method are granted the `cloudsqlsuperuser` role automatically and have the following privileges associated with this role: `CREATEROLE` , `CREATEDB` , and `LOGIN` .\nIf you need to change the attributes for these users, then use the [ALTER ROLE](https://www.postgresql.org/docs/current/static/sql-alterrole.html) command in the `psql` client. Not all attributes can be  modified with `ALTER ROLE` . Exceptions include the `NOSUPERUSER` and `NOREPLICATION` roles.\nUser name length limits are the same for Cloud SQL as for on-premises PostgreSQL.\nWhen you create a user, you can add [user password policy](#user-pwd-policy) parameters.To create a user, use a POST request with the [users:insert](/sql/docs/postgres/admin-api/rest/v1beta4/users/insert) method.\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The desired instance ID\n- : The ID of the user\n- : The password for the user\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/users\n```\nRequest JSON body:\n```\n{\n \"name\": \"user-id\",\n \"password\": \"password\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id\",\n \"status\": \"DONE\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-02-07T22:44:16.656Z\",\n \"startTime\": \"2020-02-07T22:44:16.686Z\",\n \"endTime\": \"2020-02-07T22:44:20.437Z\",\n \"operationType\": \"CREATE_USER\",\n \"name\": \"operation-id\",\n \"targetId\": \"instance-id\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/operations/operation-id\",\n \"targetProject\": \"project-id\"\n}\n```\nUsers created on instances using Cloud SQL's authentication method are granted the `cloudsqlsuperuser` role automatically and have the following privileges associated with this role: `CREATEROLE` , `CREATEDB` , and `LOGIN` .\nIf you need to change the attributes for these users, then use the [ALTER ROLE](https://www.postgresql.org/docs/current/static/sql-alterrole.html) command in the `psql` client. Not all attributes can be  modified with `ALTER ROLE` . Exceptions include the `NOSUPERUSER` and `NOREPLICATION` roles.\nUser name length limits are the same for Cloud SQL as for on-premises PostgreSQL.\nWhen you create a user, you can add [user password policy](#user-pwd-policy) parameters.\n- At the`psql`prompt, create the user:```\n\u00a0 CREATE USER USER_NAME\u00a0 \u00a0 \u00a0 WITH PASSWORD PASSWORD\u00a0 \u00a0 \u00a0 ATTRIBUTE1\u00a0 \u00a0 \u00a0 ATTRIBUTE2...;\u00a0 \n```Enter the password when prompted.For more information about role attributes, see the [ PostgreSQL documentation](https://www.postgresql.org/docs/current/static/role-attributes.html) . **NOTE:** When using EXTENSION [pg_stat_statements](https://www.postgresql.org/docs/9.6/pgstatstatements.html) , SQL statements from all users are  visible to users with the`cloudsqlsuperuser`ROLE (in PostgreSQL version  10 and higher). Don't use plain text passwords in queries.\n- You can confirm the user creation by displaying the user table:```\n\u00a0 SELECT * FROM pg_roles;\u00a0 \n```## Set a user password policy\nYou can set a password policy with the built-in authentication type.\n**Note:** Password policies don't apply to encrypted passwords. If you set user password policies, and you want to deactivate the [password policy for the instance](/sql/docs/postgres/built-in-authentication#instance_password_policies) , then you must first remove all user password policies.\nTo set the user password policy, use the [gcloud sql users set-password-policy](/sdk/gcloud/reference/sql/users/set-password-policy) command.\nReplace the following:- : The user name.\n- : The name of the instance.\n- : The user's host name as a specific IP address, address  range, or any host (`%`).\n- : Optional: The number of times that a user can try the password incorrectly before the account is locked. Use`--password-policy-enable-failed-attempts-check`to enable and`--no-password-policy-enable-failed-attempts-check`to disable the check.\n- : Optional:  Specifies the number of days after which the password expires and the user  needs to create a new one.\n```\ngcloud sql users set-password-policy USER_NAME \\--instance=INSTANCE_NAME \\--host=HOST \\--password-policy-enable-failed-attempts-check \\--password-policy-allowed-failed-attempts=PASSWORD_POLICY_ALLOWED_FAILED_ATTEMPTS \\--password-policy-password-expiration-duration=PASSWORD_POLICY_PASSWORD_EXPIRATION_DURATION\n```\nTo remove a user password policy, use the `--clear-password-policy` parameter.\n```\ngcloud sql users set-password-policy USER_NAME \\--instance=INSTANCE_NAME \\--host=HOST \\--clear-password-policy\n```\nTo view the user password policy, see [ List users](#list_users) .To set a user password policy, use a PUT request with the [users:update](/sql/docs/postgres/admin-api/rest/v1/users/update) method.\nBefore using any of the request data, make the following replacements:- : your project ID\n- : the instance ID\n- : the ID of the user\n- : the password of the user\n- : set to`true`to enable a check for the number  of failed attempts to log in after which the account is locked\n- : the number of failed attempts to log in after which the account is  locked\n- : the number of days after which the password expires  and the user needs to create a new one\nHTTP method and URL:\n```\nPUT https://sqladmin.googleapis.com/sql/v1/projects/PROJECT_ID/instances/INSTANCE_ID/users?name=USER_ID\n```\nRequest JSON body:\n```\n{\n \"name\": \"USER_ID\",\n \"password\": \"PASSWORD\",\n \"data\":\n {\n \"passwordValidationUserPolicy\" : {\n  {\n  \"enableFailedAttemptsCheck\" : \"FAILED_ATTEMPTS_CHECK\",\n  \"allowedFailedAttempts\" : \"NUMBER_OF_ATTEMPTS\",\n  \"passwordExpirationDuration\" : \"PASSWORD_EXPIRATION_DURATION\"\n  }\n },\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:To view the user password policy, see [ List users](#list_users) .To set a user password policy, use a PUT request with the [users:update](/sql/docs/postgres/admin-api/rest/v1beta4/users/update) method.\nBefore using any of the request data, make the following replacements:- : your project ID\n- : the instance ID\n- : the ID of the user\n- : the password of the user\n- : set to`true`to enable a check for the number  of failed attempts to log in after which the account is locked\n- : the number of failed attempts to log in after which the account is  locked\n- : the number of days after which the password expires  and the user needs to create a new one\nHTTP method and URL:\n```\nPUT https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_ID/users?name=USER_ID\n```\nRequest JSON body:\n```\n{\n \"name\": \"USER_ID\",\n \"password\": \"PASSWORD\",\n \"data\":\n {\n \"passwordValidationUserPolicy\" : {\n  {\n  \"enableFailedAttemptsCheck\" : \"FAILED_ATTEMPTS_CHECK\",\n  \"allowedFailedAttempts\" : \"NUMBER_OF_ATTEMPTS\",\n  \"passwordExpirationDuration\" : \"PASSWORD_EXPIRATION_DURATION\"\n  }\n },\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:To view the user password policy, see [ List users](#list_users) .\n## List users\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Users** from the SQL navigation menu.\nUse the [gcloud sql users list](/sdk/gcloud/reference/sql/users/list) command to list the users for this instance:\n```\ngcloud sql users list \\--instance=INSTANCE_NAME\n```\nThe command returns the `Name` , `Host` , and authentication `Type` for each user.\nAdditionally, for the built-in authentication type, the password policy settings and status are returned. For example:\n```\n NAME HOST TYPE  PASSWORD_POLICY\n user1   BUILT_IN {'allowedFailedAttempts': 2,\n         'enableFailedAttemptsCheck': True,\n         'passwordExpirationDuration': '7d',\n         'status': {\n         'locked': True,\n         'passwordExpirationTime': '2022-07-01T19:53:45.822742904Z'\n         }\n        }\n \n```To list the users defined for an instance, use a GET request with the [users:list](/sql/docs/postgres/admin-api/rest/v1/users/list) method.\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The desired instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/users\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#usersList\",\n \"items\": [ {\n  \"kind\": \"sql#user\",\n  \"etag\": \"--redacted--\",\n  \"name\": \"sqlserver\",\n  \"host\": \"\",\n  \"instance\": \"instance-id\",\n  \"project\": \"project-id\",\n  \"sqlserverUserDetails\": {\n  \"serverRoles\": [   \"CustomerDbRootRole\"\n  ]\n  }\n },\n {\n  \"kind\": \"sql#user\",\n  \"etag\": \"--redacted--\",\n  \"name\": \"user-id-1\",\n  \"host\": \"\",\n  \"instance\": \"instance-id\",\n  \"project\": \"project-id\",\n  \"sqlserverUserDetails\": {\n  \"serverRoles\": [   \"CustomerDbRootRole\"\n  ]\n  }\n },\n {\n  \"kind\": \"sql#user\",\n  \"etag\": \"--redacted--\",\n  \"name\": \"user-id-2\",\n  \"host\": \"\",\n  \"instance\": \"instance-id\",\n  \"project\": \"project-id\",\n  \"sqlserverUserDetails\": {\n  \"serverRoles\": [   \"CustomerDbRootRole\"\n  ]\n  }\n },\n {\n  ...\n },\n {\n  ...\n }\n ]\n}\n```\nIf a [user password policy](#user-pwd-policy) was set, the `items` section of the response includes a `passwordPolicy` section. The following code sample shows the `passwordPolicy` section.\n```\n {\n ...\n \"passwordValidationUserPolicy\" : {\n {\n  \"enableFailedAttemptsCheck\" : true,\n  \"allowedFailedAttempts\" : 8,\n  \"passwordExpirationDuration\" : \"7d\"\n }\n },\n ...\n}\n \n```To list the users defined for an instance, use a GET request with the [users:list](/sql/docs/postgres/admin-api/rest/v1beta4/users/list) method.\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The desired instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/users\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#usersList\",\n \"items\": [ {\n  \"kind\": \"sql#user\",\n  \"etag\": \"--redacted--\",\n  \"name\": \"sqlserver\",\n  \"host\": \"\",\n  \"instance\": \"instance-id\",\n  \"project\": \"project-id\",\n  \"sqlserverUserDetails\": {\n  \"serverRoles\": [   \"CustomerDbRootRole\"\n  ]\n  }\n },\n {\n  \"kind\": \"sql#user\",\n  \"etag\": \"--redacted--\",\n  \"name\": \"user-id-1\",\n  \"host\": \"\",\n  \"instance\": \"instance-id\",\n  \"project\": \"project-id\",\n  \"sqlserverUserDetails\": {\n  \"serverRoles\": [   \"CustomerDbRootRole\"\n  ]\n  }\n },\n {\n  \"kind\": \"sql#user\",\n  \"etag\": \"--redacted--\",\n  \"name\": \"user-id-2\",\n  \"host\": \"\",\n  \"instance\": \"instance-id\",\n  \"project\": \"project-id\",\n  \"sqlserverUserDetails\": {\n  \"serverRoles\": [   \"CustomerDbRootRole\"\n  ]\n  }\n },\n {\n  ...\n },\n {\n  ...\n }\n ]\n}\n```\nIf a [user password policy](#user-pwd-policy) was set, the `items` section of the response includes a `passwordPolicy` section. The following code sample shows the `passwordPolicy` section.\n```\n {\n ...\n \"passwordValidationUserPolicy\" : {\n {\n  \"enableFailedAttemptsCheck\" : true,\n  \"allowedFailedAttempts\" : 8,\n  \"passwordExpirationDuration\" : \"7d\"\n }\n },\n ...\n}\n \n```At the `psql` prompt, list the PostgreSQL users:\n```\nSELECT * FROM pg_roles;\n```\nNote: You can't use the Google Cloud console or`gcloud`to display system users.\n## Change a user password\nUser passwords can be changed in one of the following ways.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Users** from the SQL navigation menu.\n- Click more actionsfor the user you want to update.\n- Select **Change password** .\n- Specify a new password.\n- Click **OK** .\nUse the [gcloud sql users set-password](/sdk/gcloud/reference/sql/users/set-password) command to change a password.\nReplace the following:- : The user name.\n- : The name of the instance.\n```\ngcloud sql users set-password USER_NAME \\--instance=INSTANCE_NAME \\--prompt-for-password\n```To change a user password, use a PUT request with the [users:update](/sql/docs/postgres/admin-api/rest/v1/users/update) method.\nThe following request updates the password for the user account `user_name` .\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The desired instance ID\n- : The ID of the user\n- : The password for the user\nHTTP method and URL:\n```\nPUT https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/users?name=user-id\n```\nRequest JSON body:\n```\n{\n \"name\": \"user-id\",\n \"password\": \"password\",\n \"retainedPassword\" : \"dual-password\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id\",\n \"status\": \"DONE\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-02-07T22:38:41.217Z\",\n \"startTime\": \"2020-02-07T22:38:41.217Z\",\n \"endTime\": \"2020-02-07T22:38:44.801Z\",\n \"operationType\": \"UPDATE_USER\",\n \"name\": \"operation-id\",\n \"targetId\": \"instance-id\",\n \"selfLink\": \"https://sqladmin.googleapis.com/v1/projects/project-id/operations/operation-id\",\n \"targetProject\": \"project-id\"\n}\n```\nTo change a user password, use a PUT request with the [users:update](/sql/docs/postgres/admin-api/rest/v1beta4/users/update) method.\nThe following request updates the password for the user account `user_name` .\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The desired instance ID\n- : The ID of the user\n- : The password for the user\nHTTP method and URL:\n```\nPUT https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/users?name=user-id\n```\nRequest JSON body:\n```\n{\n \"name\": \"user-id\",\n \"password\": \"password\",\n \"retainedPassword\" : \"dual-password\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id\",\n \"status\": \"DONE\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-02-07T22:38:41.217Z\",\n \"startTime\": \"2020-02-07T22:38:41.217Z\",\n \"endTime\": \"2020-02-07T22:38:44.801Z\",\n \"operationType\": \"UPDATE_USER\",\n \"name\": \"operation-id\",\n \"targetId\": \"instance-id\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/operations/operation-id\",\n \"targetProject\": \"project-id\"\n}\n```At the\n`psql`\nprompt, run the\n [ALTER USER](https://www.postgresql.org/docs/current/static/sql-alteruser.html) \ncommand.\n- Unlock the user.```\nALTER USER USER_NAME WITH LOGIN;\n```\n- Change the password and enter the password when prompted.```\nALTER USER USER_NAME WITH PASSWORD PASSWORD;\n``` **NOTE:** When using EXTENSION [pg_stat_statements](https://www.postgresql.org/docs/9.6/pgstatstatements.html) , SQL statements from all users are  visible to users with the`cloudsqlsuperuser`ROLE (in PostgreSQL version  10 and higher). Don't use plain text passwords in queries.\nIf a user is locked out due to password policy settings, [change the password](#change-pwd) to unlock them. Ensure that passwords, when changed, adhere to the password policy.\n## Remove a user password policy\nYou can remove a password policy from a user that has the built-in authentication type.\nTo remove the user password policy, use the [gcloud sql users set-password-policy](/sdk/gcloud/reference/sql/users/set-password-policy) command and the `--clear-password-policy` parameter.\nReplace the following:- : the user name\n- : the name of the instance\n- : the user's host name as a specific IP address, address  range, or any host (`%`)\n```\ngcloud sql users set-password-policy USER_NAME \\--instance=INSTANCE_NAME \\--host=HOST \\--clear-password-policy\n```To remove a user password policy, use a PUT request with the [users:update](/sql/docs/postgres/admin-api/rest/v1/users/update) method.\nBefore using any of the request data, make the following replacements:- : your project ID\n- : the instance ID\n- : the ID of the user\n- : the password of the user\nHTTP method and URL:\n```\nPUT https://sqladmin.googleapis.com/sql/v1/projects/PROJECT_ID/instances/INSTANCE_ID/users?name=USER_ID\n```\nRequest JSON body:\n```\n{\n \"name\": \"USER_ID\",\n \"password\": \"PASSWORD\",\n \"data\":\n {\n \"passwordValidationUserPolicy\" : {}\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:To remove a user password policy, use a PUT request with the [users:update](/sql/docs/postgres/admin-api/rest/v1beta4/users/update) method.\nBefore using any of the request data, make the following replacements:- : your project ID\n- : the instance ID\n- : the ID of the user\n- : the password of the user\nHTTP method and URL:\n```\nPUT https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_ID/users?name=USER_ID\n```\nRequest JSON body:\n```\n{\n \"name\": \"USER_ID\",\n \"password\": \"PASSWORD\",\n \"data\":\n {\n \"passwordValidationUserPolicy\" : {}\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n## Remove a user\nThe default user can remove users.\nBefore removing a user, you must drop all the objects it owns or reassign their ownership, and revoke any privileges the role has been granted on other objects.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Users** from the SQL navigation menu.\n- Click more actionsfor the user you want  to remove.\n- Select **Remove** and then select **Remove** again.\nUse the [gcloud sql users delete](/sdk/gcloud/reference/sql/users/delete) command to remove a user.\nReplace the following:- : The user name.\n- : The name of the instance.\n```\ngcloud sql users delete USER_NAME \\--instance=INSTANCE_NAME\n```The request below uses the [users:delete](/sql/docs/postgres/admin-api/rest/v1/users/delete) method to delete the specified user account.\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The desired instance ID\n- : The email address for the user or service account\nHTTP method and URL:\n```\nDELETE https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_ID/users?host=&name=USERNAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_ID\",\n \"status\": \"DONE\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-02-07T22:38:41.217Z\",\n \"startTime\": \"2020-02-07T22:38:41.217Z\",\n \"endTime\": \"2020-02-07T22:38:44.801Z\",\n \"operationType\": \"DELETE_USER\",\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"INSTANCE_ID\",\n \"selfLink\": \"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\nThe request below uses the [users:delete](/sql/docs/postgres/admin-api/rest/v1beta4/users/delete) method to delete the specified user account.\nBefore using any of the request data, make the following replacements:- : Your project ID\n- : The desired instance ID\n- : The email address for the user or service account\nHTTP method and URL:\n```\nDELETE https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_ID/users?host=&name=USERNAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_ID\",\n \"status\": \"DONE\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-02-07T22:38:41.217Z\",\n \"startTime\": \"2020-02-07T22:38:41.217Z\",\n \"endTime\": \"2020-02-07T22:38:44.801Z\",\n \"operationType\": \"DELETE_USER\",\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"INSTANCE_ID\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\n- At the`psql`prompt, delete the user:```\nDROP ROLE USER_NAME;\n```For more information about the `DROP ROLE` statement, see [the PostgreSQL documentation](https://www.postgresql.org/docs/current/static/sql-droprole.html) .## Update user properties\n`psql`\n[Database Roles](https://www.postgresql.org/docs/current/static/user-manag.html)\n**NOTE:** When using EXTENSION [pg_stat_statements](https://www.postgresql.org/docs/9.6/pgstatstatements.html) , SQL statements from all users are  visible to users with the`cloudsqlsuperuser`ROLE (in PostgreSQL version  10 and higher). Don't use plain text passwords in queries.\n## What's next\n- Learn more about [how Cloud SQL works with users](/sql/docs/postgres/users) .\n- Read the [PostgreSQL documentation about role creation](https://www.postgresql.org/docs/current/static/sql-createrole.html) .\n- Learn about [connecting to instances](/sql/docs/postgres/external-connection-methods) .", "guide": "Cloud SQL"}