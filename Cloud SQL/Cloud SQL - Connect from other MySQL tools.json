{"title": "Cloud SQL - Connect from other MySQL tools", "url": "https://cloud.google.com/sql/docs/mysql/admin-tools", "abstract": "# Cloud SQL - Connect from other MySQL tools\nThis page describes several common database administration and reporting tools that you can use to connect to your Cloud SQL instances.\n", "content": "## Overview\nDatabase administration and reporting tools provide varying degrees of support for managing your database. Select a tool based on the type of administration and reporting that you need to do. For example, if you need to connect to one database and issue a few SQL commands, consider using the MySQL client. See [Connecting MySQL Client Using IP Addresses](/sql/docs/mysql/connect-admin-ip) . If you need to design or manage many databases simultaneously, then use one of the visual-based tools discussed here.\nWe discuss a limited number of tools in this page. If your tool is not discussed, it's likely that you can successfully connect by following the steps for a similar tool.\n## Connect with MySQL Workbench\nThis section shows how to connect to your Cloud SQL instance database with [MySQL Workbench](http://www.mysql.com/products/workbench/) .\nNote: Add your MySQL Workbench machine's IP  address as an [authorized network](/sql/docs/mysql/authorize-networks) for your Cloud SQL instance.\n- In the MySQL Workbench home view, click **New Connection** .\n- In the **Setup new connection** form, provide a **Connection Name** , **Hostname** , **Username** , and **Default Schema** , if applicable, as show in Figure 1.\n- Click **Test Connection** . You are prompted for a password.\n- Optionally, click **Advanced** , and fill in the information for connecting with SSL as shown in Figure 2. Be sure to select **Use SSL if available** and specify an **SSL CA File** , an **SSL CERT File** , and an **SSL key File** . [Learn more](/sql/docs/mysql/authorize-ssl) about using SSL  certificates with Cloud SQL.\n- Click **Test Connection** to make sure all the advanced parameters are set correctly.\n- Click **Close** .\n- Connect with the connection you created.\n- Once connected, you can test if you're using SSL by executing the following SQL statement:```\nSHOW STATUS like 'ssl_cipher';\n```\n[Back to top](#top)\n## Connect with Toad for MySQL\nThis section shows how to connect to your Cloud SQL instance database with [Toad for MySQL](http://www.toadworld.com/products#mysql) .\n- In Toad for MySQL, create a new connection.\n- In the **New MySQL Connection** form, fill in the following information:- **User** : The name of a user in your  MySQL database.\n- **Password** : The password for the specified user.\n- **Host** : The IP address of your instance.  For more information, see [  Configuring Application Access Control](http://www.mysql.com/products/workbench/) . If you've mapped the IP  address to the hostname of your local server, you can use that in this field.\n- **Database** : The database instance to connect to.\n- Click **Test Connection** to confirm that the connection information is correct.\n- Click **OK** to start the connection.\n- In the **Enter Password** dialog box, enter the password for the user. This dialog box appears because we did not choose **\n Save password (encrypted)** in the **Create New Connection** dialog box.\n### Configure Toad to use SSL\nIn Figure 5, a **Create New Connection** dialog box is shown with information for connecting with SSL. All versions of Toad might not support connecting with SSL.\nOnce connected, you can test if you're using SSL by executing the following SQL statement and verifying that the `ssl_cipher` value is not empty:\n```\nSHOW STATUS like 'ssl_cipher';\n```\n[Back to top](#top)\n## Connect with SQuirrel SQL\nThis section shows how to connect to your Cloud SQL instance database with [SQuirrel SQL](http://www.squirrelsql.org/) .\n- In the SQuirrel SQL client, select the **Aliases** panel to make it active.\n- In the **Aliases** menu, select **New Alias** .\n- Fill out the information, as shown in Figure 6. Be sure to select the MySQL Driver and provide values for,, and. **Note:** The connection URL for using SSL is of the form: `jdbc:mysql://<instance-ip>:3306/<database>?verifyServerCertificate=true&useSSL=true&requireSSL=true` .  However, to use SSL, you must specify truststore files created from the CA certificate,  the client certificate, and the client key you obtained when you created an SSL certificate. For more information, see [Configuring a SQuirrel SQL connection to use SSL](#squirrel-ssl) .\n- Click **Test** to test the connection. You are prompted for a password.\n- Click **OK** to save the alias.\n- In the **Aliases** panel, right-click the alias you created and select **Connect** .\n### Configure SQuirrel SQL to use SSL\nThis section assumes that you've created an SSL certificate (see [Configuring SSL for an instance](/sql/docs/mysql/configure-ssl-instance) ) and you have three files:\n- A CA certificate file, for example, **ca-cert.pem** .\n- A client public key certificate file, for example, **client-cert.pem** .\n- A client private key file, for example, **client-key.pem** .\nUse these files as described in [Connecting Securely Using SSL](http://dev.mysql.com/doc/connector-j/en/connector-j-reference-using-ssl.html) in the MySQL Reference Manual to create keystore and truststore files. You need to specify the keystore and truststore files when you start SQuirrel SQL. One way to do this is to edit the script that launches the SQuirrel SQL application as follows:\n```\n$JAVACMD -Djavax.net.ssl.keyStore=<path-to-keystore> \\\n   -Djavax.net.ssl.keyStorePassword=<keystore-password> \\\n   -Djavax.net.ssl.trustStore=<path-to-truststore> \\\n   -Djavax.net.ssl.trustStorePassword=<truststore-password> \\\n   [existing launch parameters]\n```\nAfter you've started SQuirrel SQL with the valid keystore and truststore information, you can connect with:\n```\njdbc:mysql://<instance-ip>:3306/<database>?verifyServerCertificate=true&useSSL=true&requireSSL=true\n```\nOnce connected, you can test if you're using SSL by executing the following SQL statement and verifying that the `ssl_cipher` value is not empty:\n```\nSHOW STATUS like 'ssl_cipher';\n```\n[Back to top](#top)", "guide": "Cloud SQL"}