{"title": "Cloud SQL - Upgrade an instance to Cloud SQL Enterprise Plus edition by using IP allowlists", "url": "https://cloud.google.com/sql/docs/postgres/upgrade-cloud-sql-instance-to-enterprise-plus-ip-allowlists", "abstract": "# Cloud SQL - Upgrade an instance to Cloud SQL Enterprise Plus edition by using IP allowlists\n**Note:** This page contains features related to Cloud SQL editions. For more information about Cloud SQL editions, see [Introduction to Cloud SQL editions](/sql/docs/mysql/editions-intro) .\nThis page shows you how to use the public IP allowlist network connectivity method of Database Migration Service to upgrade a Cloud SQL Enterprise edition instance to Cloud SQL Enterprise Plus edition. Database Migration Service creates a new Cloud SQL instance and migrates data to that instance.\n", "content": "## Overview\nCloud SQL Enterprise Plus edition is ideal for applications that require maximum write performance. For more information about these improvements, see [Performance enhancements](/sql/docs/postgres/editions-intro#performance_enhancements) .\nTo enable these enhancements for your existing Cloud SQL Enterprise edition instances, you must upgrade them to Cloud SQL Enterprise Plus edition using Database Migration Service.\n## Before you begin\n- Enable the Database Migration Service API. [ Enable the API](https://console.cloud.google.com/apis/enableflow?apiid=datamigration.googleapis.com) \n- Make sure that you have the Database Migration Admin role assigned to your user account. [ Go to IAM](https://console.cloud.google.com/iam-admin/iam) ## Requirements\nDatabase Migration Service offers various source database options and network connectivity methods. Different sources work better with some connectivity methods than with others. On this page, we assume that you're using a Cloud SQL Enterprise edition instance in an environment where you can configure your network to add an inbound firewall rule. Because we can't know the specifics of your environment, we can't provide detailed steps when it comes to your networking configuration.\n## Configure your source instance\nTo configure your source Cloud SQL Enterprise edition instance, complete the following steps:\n- If you don't have the`postgres`database for your source instance, then create one. For more information, see [Create a database on the Cloud SQL instance](/sql/docs/postgres/create-manage-databases#create) .\n- Install the`pglogical`package on the databases of your source instance. Make sure that the package is included in the [shared_preload_libraries](https://www.postgresql.org/docs/current/runtime-config-client.html) variable. For more information, see [Configure your source databases](#configure-your-source-databases-postgres) .\n- Enable logical replication and decoding for the databases of your source instance. For more information, see [Enable logical replication and decoding for your source databases](#enable-logical-replication-decoding-source-databases) .## Configure your source databases\n**Note:** For PostgreSQL 9.4, install the `pglogical_origin` extension. Then, install the extension on every database by running the following commands:- `CREATE EXTENSION IF NOT EXISTS pglogical_origin;`\n- `CREATE EXTENSION IF NOT EXISTS pglogical;`Aside from the `template0` and `template1` databases, Database Migration Service migrates every other database under your source Cloud SQL Enterprise edition instance.\nOn each database in your source instance that isn't mentioned above, complete the following steps:\n- To install the `pglogical` extension into the database, run the `CREATE EXTENSION IF NOT EXISTS pglogical` command.\n- For any tables that don't have primary keys, migrate the `UPDATE` and `DELETE` statements manually. **Note:** For tables that don't have primary keys, Database Migration Service supports migration of the initial snapshot and `INSERT` statements during the change data capture (CDC) phase.To learn how to generate a query to list tables in a PostgreSQL database without primary keys, see [Debugging and other tools](/database-migration/docs/postgres/debugging-tools) . For each database table that you find that doesn't have a primary key and the table isn't part of the databases that aren't migrated, [ alter the table so that it has a primary key](https://www.postgresql.org/docs/current/static/sql-altertable.html) or [migrate the UPDATE and DELETE operations for the table](/database-migration/docs/postgres/debugging-tools#find_tables_without_primary_keys_pks) . For tables that don't have primary keys, only the initial snapshot and `INSERT` statements are migrated.\n- To set these privileges on each of the migrated databases, create a user or set the privileges of an existing user. You use this user to connect to the source instance, and you configure this user as the user in the [Connection profiles](https://console.cloud.google.com/dbmigration/connection-profiles) page. This user must have certain privileges on each of the migrated databases, as well as the default `postgres` database.To set these privileges, connect to the instance and run the following commands:- `GRANT USAGE on SCHEMA` `` `to` ``on all schemas (aside from the information schema and schemas starting with`pg_`) on each database that you want to migrate.\n- `GRANT USAGE on SCHEMA pglogical to PUBLIC;`on each database that you want to migrate.\n- `GRANT SELECT on ALL TABLES in SCHEMA pglogical to` ``on all databases to get replication information from source databases.\n- `GRANT SELECT on ALL TABLES in SCHEMA` `` `to` ``on all schemas (aside from the information schema and schemas starting with`pg_`) on each database that you want to migrate.\n- `GRANT SELECT on ALL SEQUENCES in SCHEMA` `` `to` ``on all schemas (aside from the information schema and schemas starting with`pg_`) on each database that you want to migrate.\n- `ALTER USER` `` `with REPLICATION role`\n## Enable logical replication and decoding for your source databases\nEnable logical replication and decoding for the databases of your source Cloud SQL Enterprise edition instance by setting the ` [cloudsql.logical_decoding](/sql/docs/postgres/replication/configure-logical-replication) ` and ` [cloudsql.enable_pglogical](/sql/docs/postgres/replication/configure-logical-replication) ` flags to `On` . For more information about these flags, see [Configure database flags](/sql/docs/postgres/flags) .\nTo enable both of these flags, complete the following steps:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Click your source instance.\n- Click **Edit** .\n- In the **Customize your instance** section, if the **Show configuration\n options** menu appears, then click it.\n- Expand the **Flags** section.\n- To set the `cloudsql.logical_decoding` and `cloudsql.enable_pglogical` flags, complete the following steps:- Click **Add a database flag** .\n- From the drop-down menu, choose the`cloudsql.logical_decoding`flag.\n- Set the value for this flag to`On`.\n- Click **Done** .\n- Repeat these steps for the`cloudsql.enable_pglogical`flag.- Click **Save** .\n- In the **Changes require restart** dialog, click **Save and restart** . Cloud SQL restarts your source instance so that the configuration changes that you made to the flags can take effect.\n- In the **Configuration** pane, confirm your changes in the **Database flags** section.## Create a connection profile\nA connection profile contains information about the source Cloud SQL Enterprise edition database. Database Migration Service uses the information in the connection profile to migrate data from your source database to the destination Cloud SQL Enterprise Plus edition instance.\nTo create a connection profile, complete the following steps:\n- In the Google Cloud console, go to the **Connection profiles** page in Database Migration Service. [Go to Connection profiles](https://console.cloud.google.com/dbmigration/connection-profiles) \n- Click **Create profile** .\n- From the **Database engine** drop-down list, select **Cloud SQL for PostgreSQL** .\n- In the **Connection profile name** field, enter a name for the connection profile for your source database, such as `My Connection Profile` . **Note: ** Cloud SQL generates the connection profile ID automatically with information about your source instance. We recommend that you don't change this value.\n- Select the region where you want to save the connection profile. **Note: ** Connection profiles, like all resources, are saved in a region. Region selection doesn't affect which migration jobs can use connection profiles, or which regions can connect to the data location. But region selection can affect availability in the case of regional downtime.\n- From the **Cloud SQL instance** drop-down list, select the name of your Cloud SQL Enterprise edition instance.\n- To authenticate to your source instance, enter a username and password. Then, click **Continue** . **Note:** Cloud SQL populates the **Hostname or IP address** and **Port** fields automatically with information about your source instance. If these fields are empty, then enter the appropriate values.\n- If you want to encrypt your data, then enable [SSL/TLS encryption](/sql/docs/postgres/authorize-ssl) for the connection between the source and destination databases. Otherwise keep the default value of **None** .\n- Click **Continue** .\n- From the **Connectivity test** drop-down menu, select **Public IP** .\n- Verify that the source has been configured correctly and that Database Migration Service can communicate with the source:- Click **Run test** .\n- Verify that you see the `Your connection profile test was successful!` status.\nIf the test fails, then you can address the problem in the appropriate part of the flow, and return to re-test.\n- Click **Create** .## Create a migration job\nDatabase Migration Service uses migration jobs to migrate data from your source Cloud SQL Enterprise edition database instance to the destination Cloud SQL Enterprise Plus edition instance.\nCreating a migration job includes the following steps:\n- Defining settings for the job.\n- Selecting the connection profile that you created for your source Cloud SQL Enterprise edition database. This is your.\n- Defining settings for the destination Cloud SQL Enterprise Plus edition instance.\n- Setting up connectivity between the source and destination database instances.\n- Testing the migration job to ensure that the connection information that you provided for the job is valid.\n### Define settings for the migration job\n- In the Google Cloud console, go to the **Migration jobs** page in Database Migration Service. [Go to Migration jobs](https://console.cloud.google.com/dbmigration/migrations) \n- Click **Create migration job** .\n- In the **Migration job name** field, enter a name for the migration job, such as `My Migration Job` .\n- From the **Source database engine** drop-down list, select **Cloud SQL for PostgreSQL** .\n- From the **Destination database engine** drop-down list, select **Cloud SQL for PostgreSQL** .\n- Select the destination region where the Cloud SQL Enterprise Plus edition instance is created.\n- From the **Migration job type** drop-down list, select **Continuous** because you want ongoing changes in your source Cloud SQL Enterprise edition database to be migrated to the destination Cloud SQL Enterprise Plus edition instance.\n- Review the required prerequisites that are generated automatically to reflect how the environment must be prepared for a migration job. These prerequisites can include how to configure the source Cloud SQL Enterprise edition database and how to connect it to the destination Cloud SQL Enterprise Plus edition instance.It's recommended to complete these prerequisites at this step, but you can complete them at any time before you test or start your migration job.\n- Click **Save & continue** .\n### Specify information about the source connection profile\n- From the **Select source connection profile** drop-down list, select the connection profile that you created.\n- Click **Save & continue** .\n### Define settings for the destination Cloud SQL Enterprise Plus edition instance\n- In the **Password** field, enter an alphanumeric password for the destination Cloud SQL Enterprise Plus edition instance. This is the password for the `postgres` administrator account in the instance.\n- From the **Database version** drop-down list, select the destination instance from the list of supported Cloud SQL versions for the specified database engine.\n- Select **Enterprise Plus** .\n- From the **Choose region and zone** section, select the desired Google Cloud zone for the new Cloud SQL Enterprise Plus edition instance (or leave as **Any** ).\n- Select the **Public IP** checkbox.\n- Select the machine shape for the Cloud SQL Enterprise Plus edition instance. The disk size must be equal to or greater than the source database size.\n- Define the storage type and storage capacity for the Cloud SQL instance.\n- To create the new instance, click **Create & Continue** .\n- In the dialog that appears, click **Create destination & continue** . Creating the instance may take several minutes to complete. **Important:** This procedure creates a Cloud SQL Enterprise Plus edition instance. You're charged according to the configuration that you select.\n### Set up connectivity\n- From the **Connectivity method** drop-down list, select **IP allowlist** . **Note: ** An IP allowlist is a security feature that's often used for limiting and controlling access to the data in your source and destination databases only to trusted users. You can use IP allowlists to create lists of trusted IP addresses or IP ranges from which your users can access this data. Also, to use IP allowlists, you must open the source database or firewall to incoming connections from the destination Cloud SQL Enterprise Plus edition instance.It may take a few minutes for IP addresses to appear in the **Destination outgoing IP addresses** region.\n- To use your destination Cloud SQL Enterprise Plus edition instance's outgoing IP addresses to establish a connection to the source Cloud SQL Enterprise edition instance, complete the following steps:- In the **Destination outgoing IP addresses** region, click **Copy all** .\n- Open a separate tab in your browser.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Click your source instance.\n- Click **Edit** .\n- In the **Customize your instance** section, if the **Show configuration options** menu appears, then click it.\n- Click the **Connections** section.\n- Click **Add a network** .\n- In the **Name** field, provide a name for the network that represents the first IP address that you copied, such as`My First Network`. This network is used to establish a connection between the source Cloud SQL Enterprise edition and destination Cloud SQL Enterprise Plus edition database instances.\n- In the **Network** field, enter the first IP address that you copied, followed by`/32`. This limits the network to accept connections only from this IP address.\n- Click **Done** .\n- Repeat these steps for each IP address that you copied.\n- Click **Save** . Cloud SQL restarts your source Cloud SQL Enterprise edition instance so that the configuration changes that you made can take effect.- On the tab that contains the migration job, click **Save & continue** .### Test, create, and start the migration job\n- Review the settings that you chose for the migration job.\n- Verify that the source has been configured correctly, that the source Cloud SQL Enterprise edition and destination Cloud SQL Enterprise Plus edition instances are able to communicate with each other, and that the migration job is valid:- Click **Test job** .\n- Verify that you see the `Your migration job test was successful!` status.\nIf the test fails, then you can address the problem in the appropriate part of the flow, and return to re-test.\n- To create the migration job and start it immediately, click **Create & start job** .\n- In the dialog that appears, click **Create & start** .\n- In the **Migration jobs** page, verify that your migration job has a status of `Starting` .\n- After a few minutes, confirm that the status changes to `Running` .## Verify the migration job\nTo confirm that Database Migration Service used the migration job to migrate data from your source Cloud SQL Enterprise edition database instance to the destination Cloud SQL Enterprise Plus edition database instance, complete the following steps:\n- In the Google Cloud console, go to the **SQL Instances** page. [ Go to Cloud SQL Instances](https://console.cloud.google.com/sql/instances) \n- Click the read replica entry of your migration job. **Note:** Make sure that the Cloud SQL edition for this entry is **Enterprise Plus** , and not **Enterprise** .\n- Click the **Activate Cloud Shell** icon that appears next to the **Search** field.\n- At the prompt, to connect to the destination Cloud SQL Enterprise Plus edition database instance, use the [gcloud sql connect](/sdk/gcloud/reference/sql/connect) command.```\ngcloud sql connect DESTINATION_INSTANCE_NAME --user=postgres\n```Replace with the name of the destination Cloud SQL Enterprise Plus edition instance.\n- **Optional:** If an **Authorize Cloud Shell** dialog appears, then click **Authorize** .\n- At the **Enter password** prompt, enter the password that you provided in [Define settings for the destination Cloud SQL Enterprise Plus edition instance](#dest-settings) .\n- At the **postgres** prompt, to list the databases and verify that you see your source Cloud SQL Enterprise edition database instance, enter`\\list`.\n- At the **postgres** prompt, to see the tables that are associated with this database instance, enter`\\connect` ``. The name of the prompt changes from`postgres`to.\n- At theprompt, to see the tables of this instance, enter`\\dt`.\n- At theprompt, to give this user permission to access the data in the tables of this instance, enter`GRANT cloudsqlexternalsync to` `` `;`.Replace with the name of the user that you used to connect to the destination Cloud SQL Enterprise Plus edition database instance.\n- At theprompt, to see the information that's replicated from a table in your source Cloud SQL Enterprise edition database instance, enter`SELECT * from` `` `;`.\n- Verify that you see the correct information in the table.## Promote the migration job\nPromoting the migration job replaces the source Cloud SQL Enterprise edition database instance with the destination Cloud SQL Enterprise Plus edition database instance as the primary database.\nTo promote the migration job, complete the following steps:\n- Return to the **Migration jobs** page.\n- Click the migration job that you want to promote. The **Migration job details** page appears.\n- Stop all writes to the source Cloud SQL Enterprise edition database. **Important: ** Before you stop writes to the source database, wait for the replication delay to be minimal.You must stop all writes to this database because, by promoting the migration job, the destination Cloud SQL Enterprise Plus edition database becomes your primary database.\n- Verify that the replication delay is minimal.\n- Click the migration job that you want to promote. This job has a status of `Running` .\n- To promote the migration job, click **Promote** .\n- In the dialog that appears, click **Promote** .\n- Verify that the migration job has a status of `Promote in progress` . After a few minutes, confirm that the status changes to `Completed` .\nYour new Cloud SQL Enterprise Plus edition database instance is ready to use.\n## Clean up\nTo avoid incurring charges to your Google Cloud account for the resources used on this page, use the Google Cloud console to delete your migration job, connection profile, source Cloud SQL Enterprise edition instance, and project if you don't need them.\n## What's next\n- Read more about the key features of [Cloud SQL Enterprise Plus edition](/sql/docs/editions-intro#features) .\n- Read more about performance enhancements for [Cloud SQL Enterprise Plus edition](/sql/docs/editions-intro#performance_enhancements) .\n- Read more about region support for [Cloud SQL Enterprise Plus edition](/sql/docs/editions-intro#editions-regions) .\n- Read more about pricing for [Cloud SQL Enterprise Plus edition](/sql/docs/editions-intro#pricing) .", "guide": "Cloud SQL"}