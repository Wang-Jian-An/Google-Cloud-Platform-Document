{"title": "Cloud SQL - Connect to Cloud SQL for SQL Server from App Engine flexible environment", "url": "https://cloud.google.com/sql/docs/sqlserver/connect-instance-app-engine-flexible", "abstract": "# Cloud SQL - Connect to Cloud SQL for SQL Server from App Engine flexible environment\n# Connect to Cloud SQL for SQL Server from App Engine flexible environment\nLearn how to deploy a sample app on [App Engine flexible environment](/appengine/docs/flexible) connected to a SQL Server instance by using the Google Cloud console and a client app.\nAssuming that you complete all the steps in a timely manner, the resources created in this quickstart typically cost less than one dollar (USD).", "content": "## Before you begin **Note:** The name you use for your project must be between 4 and 30 characters. When you type the name, the form suggests a project ID, which you can edit. The project ID must be between 6 and 30 characters, with a lowercase letter as the first character. You can use a dash, lowercase letter, or digit for the remaining characters, but the last character cannot be a dash.- Enable the Cloud APIs necessary to run a Cloud SQL sample app on App Engine flexible environment.\nClick the button below to enable the APIs required for this quickstart.\n [Enable APIs](https://console.cloud.google.com/flows/enableapi?apiid=appengineflex.googleapis.com,sqladmin.googleapis.com,compute.googleapis.com,cloudbuild.googleapis.com,logging.googleapis.com) \nThis enables the following APIs:- Cloud SQL Admin API\n- Compute Engine API\n- Cloud Build API\n- Cloud Logging API\nBy clicking the button, you also enable the Google App Engine Flexible Environment.Click the following button to open Cloud Shell, which provides   command-line access to your Google Cloud resources directly from the browser.   Cloud Shell can be used to run the `gcloud` commands presented throughout this quickstart.\n [Open Cloud Shell](/console/sql/instances?cloudshell=true) \nRun the following `gcloud` command using Cloud Shell:\n```\ngcloud services enable appengineflex.googleapis.com sqladmin.googleapis.com \\compute.googleapis.com cloudbuild.googleapis.com logging.googleapis.com\n```\nThis command enables the following APIs:- Cloud SQL Admin API\n- Compute Engine API\n- Cloud Build API\n- Cloud Logging API\nBy running the above command, you also enable the Google App Engine Flexible Environment.## Set up Cloud SQL\n### Create a Cloud SQL instance\n### Create a database- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Select`quickstart-instance`.\n- From the SQL navigation menu, select **Databases** .\n- Click **Create database** .\n- In the **Database name** field of the **New database** dialog  box, enter`quickstart-db`.\n- Click **Create** .Run the [gcloud sql databases create](/sdk/gcloud/reference/sql/databases/create) command to create a database.\n```\ngcloud sql databases create quickstart-db --instance=quickstart-instance\n```\n## Deploy a sample app to App Engine flexible environment\n### Create an App Engine appCreate an App Engine app in your Google Cloud project. This enables the App Engine service, creates a default App Engine app, and creates an App Engine service account that you use to connect to Cloud SQL.\n **Note:** You create an App Engine app only once per Google Cloud project.\n- In the Google Cloud console, go to the **App Engine** page. [Go to App Engine](https://console.cloud.google.com/appengine) \n- Click **Create application** .\n- From the **Select a region** drop-down menu, select **us-central** .\n- Click **Next** .\n- After the **Get started** page appears, scroll to the bottom of the page.\n- Click the **I'll do this later** link.\n- Run the following [gcloud app create](/sdk/gcloud/reference/app/create) command to create an App Engine app:\n- ```\ngcloud app create\n```\n- When prompted to choose the region where you want your App Engine app located,    enter the numeric choice for **us-central** .### Configure the App Engine service account\nConfigure the service account used by App Engine so that it has the **Cloud SQL Client** role. By assigning the role to the  service account, the account has permissions to connect to Cloud SQL.- In the Google Cloud console, go to the **IAM** page. [Go to IAM](https://console.cloud.google.com/iam-admin/iam) \n- For the service account named **App Engine default service account** ,    click the pencil icon. **Note:** The name of the service account appears next to the principal for the account.    The name of the principal is@appspot.gserviceaccount.com.\n- Click **Add another role** .\n- Add the **Role** named **Cloud SQL Client** .\n- Click **Save** .\n- Run the following`gcloud`command to get a list of    your project's service accounts:```\ngcloud iam service-accounts list\n```\n- Copy the **EMAIL** of the **App Engine service account** .\n- Run the following command to add the **Cloud SQL Client** role to **App Engine service account** :```\ngcloud projects add-iam-policy-binding YOUR_PROJECT_ID \\\u00a0 --member=\"serviceAccount:SERVICE_ACCOUNT_EMAIL\" \\\u00a0 --role=\"roles/cloudsql.client\"\n```### Configure and deploy a sample app for Cloud SQLNow that you created a Cloud SQL instance and database, and you configured the App Engine service account so that it has permissions to connect to Cloud SQL, you can configure and deploy a sample app to connect to your Cloud SQL instance.\n## Clean upTo avoid incurring charges to your Google Cloud account for   the resources used on this page, follow these steps.- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Select the`quickstart-instance`instance to open the **Instance details** page.\n- In the icon bar at the top of the page, click **Delete** .\n- In the **Delete instance** dialog box, type`quickstart-instance`, and then click **Delete** to delete the instance. Disabling your app stops it from running instances and serving requests. If your app is processing a request, your app completes the request before being disabled.\nTo disable an App Engine app and retain its data, do the following:- In the Google Cloud console, go to the **Settings** page: [Go to Settings](https://console.cloud.google.com/appengine/settings) \n- In the **Application settings** tab, click **Disable application** .\n- In the **App ID** field, enter the ID of the app you want to disable, and then click **Disable** .\n### Optional cleanup stepsIf you're not using the **Cloud SQL client** role that you assigned to the Compute Engine service account, you can remove it.- In the Google Cloud console, go to the **IAM** page. [Go to IAM](https://console.cloud.google.com/iam-admin/iam) \n- Click the edit icon (which looks like a pencil) for the IAM account named **Compute Engine default service account** .\n- Delete the **Cloud SQL client** role.\n- Click **Save** .\nIf you're not using the APIs that were enabled as part of this quickstart, you can disable them.- APIs that were enabled within this quickstart:- Compute Engine API\n- Cloud SQL Admin API\n- Cloud Run API\n- Container Registry API\n- Cloud Build API- In the Google Cloud console, go to the **APIs** page. [Go to APIs](https://console.cloud.google.com/apis) \n- Select any API that you would like to disable and then click the **Disable API** button.\n## What's next\nBased on your needs, you can learn more about\n [creating Cloud SQL instances](/sql/docs/sqlserver/create-instance) \n.\nYou also can learn about creating [SQL Server users](/sql/docs/sqlserver/create-manage-users#creating) and [databases](/sql/docs/sqlserver/create-manage-databases#create) for your Cloud SQL instance.\nFor more information about pricing, see [Cloud SQL for SQL Server pricing](/sql/docs/sqlserver/pricing) .\nLearn more about:- Configuring your Cloud SQL instance with a [public IP](/sql/docs/sqlserver/configure-ip) address.\n- Configuring your Cloud SQL instance with a [private IP](/sql/docs/sqlserver/configure-private-ip) address.\nAdditionally, you can learn about connecting to a Cloud SQL instance from other Google Cloud products:- [From an app running on App Engine standard environment](/sql/docs/sqlserver/connect-app-engine) \n- [From an app running on Compute Engine](/sql/docs/sqlserver/connect-compute-engine) \n- [From an app running on GKE](/sql/docs/sqlserver/connect-kubernetes-engine) \n- [From Cloud Functions](/sql/docs/sqlserver/connect-functions) \n- [From Cloud Run](/sql/docs/sqlserver/connect-run)", "guide": "Cloud SQL"}