{"title": "Cloud SQL - \u6578\u64da\u96b1\u79c1\u6b0a\u7b56\u7565", "url": "https://cloud.google.com/sql/docs/postgres/data-privacy-strategies?hl=zh-cn", "abstract": "# Cloud SQL - \u6578\u64da\u96b1\u79c1\u6b0a\u7b56\u7565\n\u201c\u6578\u64da\u96b1\u79c1\u6b0a\u201d\u662f\u6307\u4fdd\u8b77\u500b\u4eba\u8eab\u4efd\u4fe1\u606f (PII) \u7b49\u6578\u64da\uff0c\u4f7f\u90a3\u4e9b\u4e0d\u61c9\u8a72\u63a5\u89f8\u5230\u6b64\u985e\u6578\u64da\u7684\u4eba\u54e1\u7121\u6cd5\u5c0d\u5176\u9032\u884c\u8a2a\u554f\u3002 \u672c\u9801\u9762\u4ecb\u7d39\u4e86\u5e7e\u7a2e\u4fdd\u8b77\u6578\u64da\u96b1\u79c1\u7684\u65b9\u6cd5\uff0c\u53ef\u7528\u65bc\u5728 Cloud SQL \u4e2d\u4fdd\u8b77\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528 Cloud SQL \u5b89\u5168\u5730\u5b58\u5132\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u3002\u60a8\u60f3\u8981\u78ba\u4fdd\u6b64\u985e\u4fe1\u606f\u5728\u8655\u7406\u904e\u7a0b\u4e2d\u53d7\u5230\u6700\u9ad8\u7d1a\u5225\u7684\u96b1\u79c1\u4fdd\u8b77\uff0c\u4ee5\u514d\u7121\u610f\u9593\u5c07\u5176\u8b8a\u6210\u53ef\u8a2a\u554f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5c07\u4fe1\u7528\u5361\u4fe1\u606f\u6216\u91ab\u7642\u4fdd\u5065\u6578\u64da\u5b58\u5132\u5728\u6578\u64da\u5eab\u4e2d\uff0c\u5247\u53ef\u4f7f\u7528 Cloud SQL \u96b1\u85cf\u6216\u906e\u84cb\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff0c\u9632\u6b62\u7121\u6b0a\u9650\u7684\u7528\u6236\u5c0d\u5176\u9032\u884c\u8a2a\u554f\u3002\n\u4f7f\u7528\u4ee5\u4e0b\u7b56\u7565\u53ef\u5e6b\u52a9\u60a8\u5728 Cloud SQL \u4e2d\u4fdd\u8b77\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff1a\n- [\u5217\u7d1a\u5b89\u5168\u6027](#column-level-security) \n- [\u57fa\u65bc\u8996\u5716\u7684\u65b9\u6cd5](#view-based-approach) \n- [\u884c\u7d1a\u5b89\u5168\u6027](#row-level-security) \n- [\u906e\u84cb\u548c\u533f\u540d\u5316\u6578\u64da](#mask-anonymize-data) \n- [\u52a0\u5bc6\u6578\u64da](#encrypt-data) ", "content": "## \u5217\u7d1a\u5b89\u5168\u6027\n\u85c9\u52a9 \u5217\u7d1a\u5b89\u5168\u6027\uff0c\u60a8\u53ef\u4ee5\u9650\u5236\u8ab0\u80fd\u67e5\u770b\u6578\u64da\u5eab\u8868\u7279\u5b9a\u5217\u4e2d\u7684\u5167\u5bb9\u3002\u5217\u7d1a\u6b0a\u9650\u9069\u7528\u65bc `INSERT` \u3001 `UPDATE` \u3001 `SELECT` \u548c `REFERENCES` \u8a9e\u53e5\u3002\n\u4f8b\u5982\uff0c\u5047\u8a2d\u5728\u67d0\u500b\u96f6\u552e\u7db2\u7ad9\uff0c\u60a8\u60f3\u8981\u7ba1\u7406 Jack \u548c Alice \u9019\u5169\u500b\u7528\u6236\u7684\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u3002\n```\n--User: \"admin\"CREATE SCHEMA secure_schema;CREATE TABLE secure_schema.user_details(id bigint, name text, age smallint, email_id text, password text);--For this example, passwords are stored in plain text for demonstration--purposes only. In production, never store passwords in plain text.INSERT INTO secure_schema.user_details VALUES(1,'jack',34,'jack@example.com','testpass');INSERT INTO secure_schema.user_details VALUES(2,'alice',37,'alice@example.com','testpass');GRANT USAGE ON SCHEMA secure_schema TO analyst_ro;--Grant read permissions on specific columns only.GRANT SELECT (id, name, age) ON secure_schema.user_details TO analyst_ro;--User: \"analyst_ro\"SELECT * FROM secure_schema.user_details;ERROR: \u00a0permission denied for table user_detailsSELECT name, age, password FROM secure_schema.user_details;ERROR: \u00a0permission denied for table user_detailsSELECT id, name,age FROM secure_schema.user_details;\u00a0id | name \u00a0| age----+-------+----\u00a0 1 | jack \u00a0| \u00a034\u00a0 2 | alice | \u00a037\n```\n\u5982\u679c\u60a8\u5728 `SELECT` \u8a9e\u53e5\u4e2d\u5305\u542b\u53d7\u9650\u5236\u7684\u5217\u6216\u8f38\u5165 `SELECT *` \uff0c\u5247\u7cfb\u7d71\u6703\u986f\u793a\u932f\u8aa4\u6d88\u606f\u3002Cloud SQL \u6703\u4fdd\u8b77\u9019\u4e9b\u5217\u4e2d\u7684 Jack \u548c Alice \u7684\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u3002\n\u60a8\u9084\u53ef\u4ee5\u4f7f\u7528\u55ae\u500b `GRANT` \u8a9e\u53e5\u4f86\u7d44\u5408\u4e0d\u540c\u7684\u6b0a\u9650\u3002\n```\nGRANT SELECT (id,name,age), UPDATE (name) ON secure_schema.user_details TO analyst_ro;\n```\n## \u57fa\u65bc\u8996\u5716\u7684\u65b9\u6cd5\n\u60a8\u9084\u53ef\u4ee5\u4f9d\u64da\u67d0\u500b\u8868\u4f86\u5275\u5efa\u8996\u5716\uff0c\u6392\u9664\u6216\u906e\u84cb\u8981\u5411\u5176\u4ed6\u7528\u6236\u96b1\u85cf\u7684\u5217\uff0c\u4ee5\u53ca\u63d0\u4f9b\u5c0d\u8996\u5716\uff08\u800c\u975e\u8868\uff09\u7684\u8a2a\u554f\u6b0a\u9650\uff0c\u5f9e\u800c\u5be6\u73fe\u5217\u7d1a\u5b89\u5168\u6027\u3002\n\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u7232\u96f6\u552e\u7db2\u7ad9\u4f7f\u7528\u57fa\u65bc\u8996\u5716\u7684\u65b9\u6cd5\u4f86\u4fdd\u8b77 Jack \u548c Alice \u7684\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff1a\n```\n--User: \"admin\"CREATE SCHEMA analyst_ro;CREATE VIEW analyst_ro.user_details AS SELECT id, name, age FROM secure_schema.user_details;GRANT USAGE ON SCHEMA analyst_ro TO analyst_ro;GRANT SELECT ON analyst_ro.user_details TO analyst_ro;--User: \"analyst_ro\"SELECT id,name,age FROM user_details;\u00a0id | name \u00a0| age----+-------+----\u00a0 1 | jack \u00a0| \u00a034\u00a0 2 | alice | \u00a037SELECT * FROM user_details;\u00a0id | name \u00a0| age----+-------+----\u00a0 1 | jack \u00a0| \u00a034\u00a0 2 | alice | \u00a037\n```\n\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u7cfb\u7d71\u7232\u8996\u5716\u5275\u5efa\u4e86\u55ae\u7368\u7684\u67b6\u69cb\u4ee5\u4f7f\u5176\u8207\u5c0d\u61c9\u8868\u540c\u540d\u3002\u901a\u904e\u57fa\u65bc\u8996\u5716\u7684\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 `SELECT *` \u3002\n\u6b64\u5916\uff0c\u60a8\u9084\u53ef\u4ee5\u5275\u5efa\u8996\u5716\u4e26\u906e\u84cb\u6578\u64da\u5eab\u8868\u5217\uff0c\u4ee5\u514d\u7121\u6b0a\u9650\u7684\u7528\u6236\u770b\u5230\u5df2\u906e\u84cb\u7684\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u3002\n```\nCREATE VIEW analyst_ro.user_details AS SELECT id, name, age, 'redacted@example.com' as email_id,'*****'::text as password FROM secure_schema.user_details;SELECT * FROM user_details;\u00a0id | name \u00a0| age | \u00a0 \u00a0 email_id \u00a0 \u00a0 \u00a0 \u00a0 | password----+-------+-----+----------------------+---------\u00a0 1 | jack \u00a0| \u00a034 | redacted@example.com | *****\u00a0 2 | alice | \u00a037 | redacted@example.com | *****\n```\n## \u884c\u7d1a\u5b89\u5168\u6027\n\u85c9\u52a9\u5217\u7d1a\u5b89\u5168\u6027\u548c\u57fa\u65bc\u8996\u5716\u7684\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u5411\u7279\u5b9a\u7528\u6236\u96b1\u85cf\u6578\u64da\u5eab\u8868\u5217\u4e2d\u7684\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u3002\u4f46\u662f\uff0c\u6709\u6642\u60a8\u5e0c\u671b\u904e\u6ffe\u6b64\u6578\u64da\uff0c\u4e26\u6388\u4e88\u5c0d\u7279\u5b9a\u9336\u884c\u7684\u8a2a\u554f\u6b0a\u9650\u3002\u6b64\u8868\u5305\u542b\u53ea\u6709\u7b26\u5408\u7279\u5b9a\u689d\u4ef6\u7684\u7528\u6236\u624d\u80fd\u8a2a\u554f\u7684\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u3002\u9019\u7a31\u7232\u201c\u884c\u7d1a\u5b89\u5168\u6027\u201d \u3002\n\u5c0d\u65bc\u7528\u6236\u50c5\u5c0d\u81ea\u5df1\u7684\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u64c1\u6709\u8b80\u5beb\u8a2a\u554f\u6b0a\u9650\u7684\u591a\u79df\u6236\u61c9\u7528\uff0c\u884c\u7d1a\u5b89\u5168\u6027\u5f88\u6709\u7528\u3002\u5728 Cloud SQL \u4e2d\uff0c\u8868\u53ef\u4ee5\u5177\u6709\u884c\u7d1a\u5b89\u5168\u7b56\u7565\uff0c\u9019\u4e9b\u7b56\u7565\u4ee5\u6bcf\u500b\u7528\u6236\u7232\u55ae\u4f4d\uff0c\u9650\u5236\u7528\u6236\u53ef\u901a\u904e\u5275\u5efa\u67e5\u8a62\u4f86\u67e5\u770b\u54ea\u4e9b\u884c\uff0c\u6216\u9650\u5236\u7528\u6236\u53ef\u901a\u904e\u904b\u884c\u6578\u64da\u4fee\u6539\u547d\u4ee4\u4f86\u63d2\u5165\u3001\u66f4\u65b0\u6216\u522a\u9664\u54ea\u4e9b\u884c\u3002\n\u5c0d\u65bc\u96f6\u552e\u7db2\u7ad9\u793a\u4f8b\uff0c\u60a8\u53ef\u4ee5\u7232 Jack \u548c Alice \u5be6\u65bd\u884c\u7d1a\u5b89\u5168\u6027\uff0c\u4ee5\u4fbf\u4ed6\u5011\u80fd\u5920\u67e5\u770b\u81ea\u5df1\u7684\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff0c\u4f46\u7121\u6cd5\u5c0d\u5176\u9032\u884c\u4fee\u6539\u6216\u522a\u9664\u3002\n```\n--User: \"admin\"--Create and enable a policy for row-level securityCREATE POLICY user_details_rls_pol ON secure_schema.user_details FOR ALL TO PUBLIC USING (name=current_user);ALTER TABLE secure_schema.user_details ENABLE ROW LEVEL SECURITY;SELECT * FROM secure_schema.user_details;\u00a0id | name \u00a0| age | \u00a0 \u00a0 email_id \u00a0 \u00a0 \u00a0| password----+-------+-----+-------------------+---------\u00a0 1 | jack \u00a0| \u00a034 | jack@example.com \u00a0| testpass\u00a0 2 | alice | \u00a037 | alice@example.com | testpass--User: \"jack\"SELECT * FROM secure_schema.user_details;\u00a0id | name | age | \u00a0 \u00a0email_id \u00a0 \u00a0 \u00a0| password----+------+-----+------------------+---------\u00a0 1 | jack | \u00a034 | jack@example.com | testpass--User: \"alice\"SELECT * FROM secure_schema.user_details;\u00a0id | name \u00a0| age | \u00a0 \u00a0email_id \u00a0 \u00a0 \u00a0 | password----+-------+-----+-------------------+---------\u00a0 2 | alice | \u00a037 | alice@example.com | testpass\n```\n\u5982\u679c\u7528\u6236\u5206\u914d\u6709\u5177\u6709 `BYPASSRLS` \u5c6c\u6027\u7684\u89d2\u8272\uff0c\u5247\u5728\u8a2a\u554f\u8868\u6642\u53ef\u4ee5\u7e5e\u904e\u884c\u7d1a\u5b89\u5168\u6027\u3002\u8868\u6240\u6709\u8005\u4e5f\u53ef\u4ee5\u7e5e\u904e\u884c\u7d1a\u5b89\u5168\u6027\u3002\u5982\u679c\u60a8\u8981\u4f7f\u8868\u6240\u6709\u8005\u53d7\u884c\u7d1a\u5b89\u5168\u4fdd\u8b77\u7d04\u675f\uff0c\u8acb\u4f7f\u7528 `ALTER TABLE ... FORCE ROW LEVEL SECURITY` \u547d\u4ee4\u3002\n\u6709\u6642\uff0c\u60a8\u4e0d\u60f3\u5c0d\u6578\u64da\u5eab\u9336\u884c\u61c9\u7528\u884c\u7d1a\u5b89\u5168\u6027\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f7f\u7528 [pg_dump](https://cloud.google.com/sql/docs/postgres/import-export/import-export-dmp?hl=zh-cn) \u5c0d\u9336\u9032\u884c\u5099\u4efd\uff0c\u5247\u8868\u793a\u60a8\u4e0d\u5e0c\u671b\u5099\u4efd\u7701\u7565\u4efb\u4f55\u884c\u3002\u7232\u9632\u6b62\u51fa\u73fe\u9019\u7a2e\u60c5\u6cc1\uff0c\u5c0d\u65bc\u57f7\u884c\u5099\u4efd\u7684\u7528\u6236\uff0c\u8acb\u5c07 [row_security](https://www.postgresql.org/docs/current/runtime-config-client.html#GUC-ROW-SECURITY) \u914d\u7f6e\u53c3\u6578\u8a2d\u7f6e\u7232 `OFF` \u3002\u5982\u679c\u60a8\u6839\u64da\u884c\u7d1a\u5b89\u5168\u6027\u5c0d\u4efb\u4f55\u884c\u9032\u884c\u904e\u6ffe\uff0c\u5247\u7cfb\u7d71\u6703\u986f\u793a\u932f\u8aa4\u6d88\u606f\u3002\n## \u906e\u84cb\u548c\u533f\u540d\u5316\u6578\u64da\n\u9664\u4e86\u4f7f\u7528\u57fa\u65bc\u8996\u5716\u7684\u65b9\u6cd5\u906e\u84cb\u6578\u64da\u4e4b\u5916\uff0c\u60a8\u9084\u53ef\u4ee5\u4f7f\u7528 [postgresql_anonymizer](https://cloud.google.com/sql/docs/postgres/extensions?hl=zh-cn) \u64f4\u5c55\u7a0b\u5e8f\u4f86\u906e\u84cb\u6578\u64da\u3002\u6b64\u64f4\u5c55\u7a0b\u5e8f\u6703\u906e\u84cb\u6216\u66ff\u63db PostgreSQL \u6578\u64da\u5eab\u4e2d\u7684\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u6216\u5546\u696d\u654f\u611f\u6578\u64da\u3002\n\u8207\u57fa\u65bc\u8996\u5716\u7684\u65b9\u6cd5\u76f8\u6bd4\uff0c\u4f7f\u7528\u64f4\u5c55\u7a0b\u5e8f\u53ef\u63d0\u4f9b\u4ee5\u4e0b\u512a\u52e2\uff1a\n- \u60a8\u53ef\u4f7f\u7528\u5404\u7a2e [\u906e\u84cb\u51fd\u6578](https://postgresql-anonymizer.readthedocs.io/en/stable/masking_functions/) \uff0c\u4f8b\u5982\u66ff\u63db\u3001\u96a8\u6a5f\u5316\u3001\u50de\u9020\u3001\u5047\u540d\u5316\u3001\u90e8\u5206\u52a0\u64fe\u3001\u91cd\u6392\u3001\u52a0\u566a\u548c\u6cdb\u5316\u3002\n- \u60a8\u53ef\u4ee5\u751f\u6210\u6709\u610f\u7fa9\u7684\u906e\u84cb\u6578\u64da\uff0c\u4ee5\u7528\u65bc\u529f\u80fd\u6e2c\u8a66\u548c\u6578\u64da\u8655\u7406\u3002\n- \u60a8\u53ef\u4ee5\u4f7f\u7528 PostgreSQL \u6578\u64da\u5b9a\u7fa9\u8a9e\u8a00 (DDL) \u4f86 [\u8072\u660e\u906e\u84cb\u898f\u5247](https://postgresql-anonymizer.readthedocs.io/en/stable/declare_masking_rules/) \uff0c\u4e26\u5728\u8868\u5b9a\u7fa9\u4e2d\u6307\u5b9a\u533f\u540d\u5316\u7b56\u7565\u3002\n### \u5b89\u88dd\u4e26\u914d\u7f6e postgresql_anonymizer \u64f4\u5c55\u7a0b\u5e8f\n\u5982\u9700\u5728 Cloud SQL \u5be6\u4f8b\u4e0a\u4f7f\u7528\u6b64\u64f4\u5c55\u7a0b\u5e8f\uff0c\u8acb\u5b8c\u6210\u4ee5\u4e0b\u6b65\u9a5f\uff1a\n- \u4fee\u6539\u5be6\u4f8b\uff0c\u7136\u5f8c\u5c07 `cloudsql.enable_anon flag` \u8a2d\u7f6e\u7232 `on` \u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6a19\u8a8c\u4e26\u67e5\u770b\u6b64\u64f4\u5c55\u7a0b\u5e8f\u652f\u6301\u7684\u6a19\u8a8c\uff0c\u8acb\u53c3\u95b1 [\u914d\u7f6e\u6578\u64da\u5eab\u6a19\u8a8c](https://cloud.google.com/sql/docs/postgres/flags?hl=zh-cn) \u3002\n- \u901a\u904e\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u5728\u6578\u64da\u5eab\u4e2d\u5275\u5efa\u64f4\u5c55\u7a0b\u5e8f\uff1a```\n--Connect to the PostgreSQL databaseCREATE EXTENSION IF NOT EXISTS anon CASCADE;SELECT anon.init();\n```\n\u5b89\u88dd\u4e26\u914d\u7f6e\u64f4\u5c55\u7a0b\u5e8f\u5f8c\uff0c\u5728\u5be6\u4f8b\u4e0a\u4f7f\u7528\u5b83\u4f86\u5be6\u73fe [\u52d5\u614b\u906e\u84cb](#dynamic-mask) \u3001 [\u975c\u614b\u906e\u84cb](#static-mask) \u548c [\u533f\u540d\u8f49\u5132](#anonymous-dump) \u7b49\u533f\u540d\u5316\u7b56\u7565\u3002\n### \u52d5\u614b\u906e\u84cb\n\u4f7f\u7528\u52d5\u614b\u906e\u84cb\u7232\u7279\u5b9a\u7528\u6236\u5b9a\u7fa9\u906e\u84cb\u898f\u5247\u3002\u9019\u4e9b\u7528\u6236\u7121\u6cd5\u770b\u5230\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff0c\u4f46\u53ef\u770b\u5230\u7d93\u904e\u906e\u84cb\u7684\u6578\u64da\uff0c\u5176\u4ed6\u6240\u6709\u7528\u6236\u6703\u770b\u5230\u672a\u88ab\u906e\u84cb\u7684\u6578\u64da\u3002\u5728\u751f\u7522\u74b0\u5883\u4e2d\uff0c\u5982\u679c\u60a8\u4e0d\u60f3\u4fee\u6539\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff0c\u800c\u53ea\u5e0c\u671b\u5411\u7279\u5b9a\u7528\u6236\u96b1\u85cf\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff0c\u5247\u9019\u662f\u5f88\u6709\u7528\u7684\u3002\n\u5c0d\u65bc\u96f6\u552e\u7db2\u7ad9\u793a\u4f8b\uff0c\u60a8\u53ef\u4ee5\u5be6\u73fe\u52d5\u614b\u906e\u84cb\uff0c\u4ee5\u4fbf\u7ba1\u7406\u54e1\u53ef\u4ee5\u67e5\u770b Jack \u548c Alice \u7684\u672a\u906e\u84cb\u7684\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u8207\u5bc6\u78bc\uff0c\u800c\u5206\u6790\u5e2b\u53ea\u80fd\u67e5\u770b\u7d93\u904e\u906e\u84cb\u7684\u6578\u64da\u3002\n```\n--Activate the dynamic masking engineSELECT anon.start_dynamic_masking();--Declare the masking user and masking rules--analyst_ro is the masked user with select privileges on the--user_details tableSECURITY LABEL FOR anon ON ROLE analyst_ro IS 'MASKED';SECURITY LABEL FOR anon ON COLUMN secure_schema.user_details.email_id IS 'MASKED WITH FUNCTION anon.fake_email()';SECURITY LABEL FOR anon ON COLUMN secure_schema.user_details.password \u00a0IS 'MASKED WITH FUNCTION anon.hash(password)';--User: \"admin\" (can see all unmasked data)SELECT * FROM secure_schema.user_details;\u00a0id | name \u00a0| age | \u00a0 \u00a0email_id \u00a0 \u00a0 \u00a0 | password----+-------+-----+------------ \u00a0-----+---------\u00a0 1 | jack \u00a0| \u00a034 | jack@example.com \u00a0| testpass\u00a0 2 | alice | \u00a037 | alice@example.com | testpass--User:\"analyst_ro\" (note that the \"email_id\" and \"password\" columns are--replaced with masked data,)--Data in the password column is truncated for better formatting.SELECT * FROM secure_schema.user_details;\u00a0id | name \u00a0| age | \u00a0 \u00a0 \u00a0 email_id \u00a0 \u00a0 \u00a0 \u00a0 | password----+-------+-----+----------------- \u00a0-----+----------------\u00a0 1 | jack \u00a0| \u00a034 | alisontodd@example.com | 13d249f2cb4127b\u00a0 2 | alice | \u00a037 | amanda35@example.com \u00a0 | 13d249f2cb4127b\n```\n### \u975c\u614b\u906e\u84cb\n\u6839\u64da\u906e\u84cb\u898f\u5247\u4e2d\u5b9a\u7fa9\u7684\u689d\u4ef6\uff0c\u4f7f\u7528\u975c\u614b\u906e\u84cb\u79fb\u9664\u8868\u4e2d\u7684\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff0c\u4e26\u5c07\u6b64\u4fe1\u606f\u66ff\u63db\u7232\u7d93\u904e\u906e\u84cb\u7684\u6578\u64da\u3002\u7528\u6236\u7121\u6cd5\u6aa2\u7d22\u672a\u7d93\u906e\u84cb\u7684\u6578\u64da\u3002\u5728\u6e2c\u8a66\u74b0\u5883\u4e2d\uff0c\u5982\u679c\u60a8\u60f3\u4fee\u6539\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff0c\u4f46\u4e0d\u5e0c\u671b\u4efb\u4f55\u7528\u6236\u67e5\u770b\u6b64\u4fe1\u606f\uff0c\u5247\u9019\u7a2e\u65b9\u6cd5\u5f88\u6709\u7528\u3002\n**\u6ce8\u610f** \uff1a\u7531\u65bc\u975c\u614b\u906e\u84cb\u6703\u5c07\u8868\u4e2d\u672a\u906e\u84cb\u7684\u6578\u64da\u66ff\u63db\u7232\u7d93\u906e\u84cb\u7684\u6578\u64da\uff0c\u56e0\u6b64\u9019\u500b\u904e\u7a0b\u53ef\u80fd\u9700\u8981\u5f88\u9577\u6642\u9593\uff0c\u5177\u9ad4\u53d6\u6c7a\u65bc\u8868\u7684\u5927\u5c0f\u3002\n\u5c0d\u65bc\u96f6\u552e\u7db2\u7ad9\u793a\u4f8b\uff0c\u60a8\u53ef\u4ee5\u5be6\u65bd\u975c\u614b\u906e\u84cb\uff0c\u4ee5\u4fbf\u4efb\u4f55\u7528\u6236\u90fd\u7121\u6cd5\u67e5\u770b Jack \u548c Alice \u7684\u672a\u906e\u84cb\u7684\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u8207\u5bc6\u78bc\u3002\u4ed6\u5011\u53ea\u80fd\u67e5\u770b\u7d93\u906e\u84cb\u7684\u6578\u64da\u3002\n```\n--User: \"admin\"SELECT * FROM secure_schema.user_details;\u00a0id | name \u00a0| age | \u00a0 \u00a0email_id \u00a0 \u00a0 \u00a0 | password----+-------+-----+-------------- \u00a0---+---------\u00a0 1 | jack \u00a0| \u00a034 | jack@example.com \u00a0| testpass\u00a0 2 | alice | \u00a037 | alice@example.com | testpass--Apply earlier defined masking rules to the table permanently.--Now all users see masked data only.SELECT anon.anonymize_table('secure_schema.user_details');\u00a0anonymize_table-----------------\u00a0t--User: \"analyst_ro\"--Data in the password column is truncated for better formatting.select * from secure_schema.user_details;\u00a0id | name \u00a0| age | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 email_id \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0| \u00a0password----+-------+-----+------------------------- \u00a0------+---------------\u00a0 1 | jack \u00a0| \u00a034 | christophercampbell@example.com | 13d249f2cb412c\u00a0 2 | alice | \u00a037 | annebenitez@example.com \u00a0 \u00a0 \u00a0 \u00a0 | 13d249f2cb4127\n```\n### \u533f\u540d\u8f49\u5132\n\u4f7f\u7528\u533f\u540d\u8f49\u5132\u5c07\u7d93\u906e\u84cb\u7684\u6578\u64da\u5c0e\u51fa\u5230 SQL \u6587\u4ef6\u3002\u5c0d\u65bc\u96f6\u552e\u7db2\u7ad9\u793a\u4f8b\uff0c\u60a8\u53ef\u4ee5\u7232 `user_details` \u8868\u4e2d\u5305\u542b\u7684\u906e\u84cb\u7684\u6578\u64da\u5275\u5efa\u8f49\u5132\u6587\u4ef6\u3002\n```\n--Launch pg_dump_anon with the masked user to apply earlier defined --masking rulespg_dump_anon -h HOSTIP -p 5432 -d DATABASE_NAME -U analyst_ro --table=secure_schema.user_details --file=user_details_anonysms.sql\n```\n## \u52a0\u5bc6\u6578\u64da\n\u96d6\u7136\u60a8\u53ef\u4ee5\u906e\u84cb\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff0c\u4f46\u8a72\u4fe1\u606f\u6703\u4ee5\u7d14\u6587\u672c\u5f62\u5f0f\u5b58\u5132\u5728\u6578\u64da\u5eab\u4e2d\u3002\u7ba1\u7406\u54e1\u53ef\u4ee5\u67e5\u770b\u6b64\u4fe1\u606f\u3002\n\u5728\u5b58\u5132\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u4e4b\u524d\uff0c\u8acb\u4f7f\u7528 [pgcrypto](https://cloud.google.com/sql/docs/postgres/extensions?hl=zh-cn) \u64f4\u5c55\u7a0b\u5e8f\u5c0d\u5176\u9032\u884c\u52a0\u5bc6\u3002\u9019\u6a23\uff0c\u53ea\u6709\u64c1\u6709\u6709\u6548\u52a0\u5bc6\u5bc6\u9470\u7684\u7528\u6236\u624d\u80fd\u89e3\u5bc6\u4fe1\u606f\uff0c\u4e26\u4ee5\u7d14\u6587\u672c\u5f62\u5f0f\u67e5\u770b\u5b83\u3002\n`pgcrypto` \u64f4\u5c55\u7a0b\u5e8f\u5177\u6709\u591a\u500b [\u54c8\u5e0c](#hash) \u548c [\u52a0\u5bc6](#encrypt) \u51fd\u6578\u3002\n### \u54c8\u5e0c\n\u201c\u54c8\u5e0c\u201d\u662f\u4e00\u7a2e\u55ae\u5411\u52a0\u5bc6\u51fd\u6578\uff0c\u9069\u7528\u65bc\u60a8\u53ea\u9700\u8981\u5c0d\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u9032\u884c\u52a0\u5bc6\u7684\u60c5\u6cc1\u3002 \u5c0d\u65bc\u4ee5\u54c8\u5e0c\u683c\u5f0f\u5b58\u5132\u5bc6\u78bc\u4ee5\u53ca\u5c07\u7528\u6236\u8f38\u5165\u7684\u5bc6\u78bc\u8207\u54c8\u5e0c\u5bc6\u78bc\u9032\u884c\u5339\u914d\uff0c\u9019\u662f\u5f88\u6709\u7528\u7684\u3002\u54c8\u5e0c\u5bc6\u78bc\u6c38\u9060\u4e0d\u6703\u4ee5\u7d14\u6587\u672c\u5f62\u5f0f\u89e3\u5bc6\u3002\n\u5c0d\u65bc\u96f6\u552e\u7db2\u7ad9\u793a\u4f8b\uff0c\u60a8\u53ef\u4ee5\u5148\u4f7f\u7528 `pgcrypto` \u64f4\u5c55\u7a0b\u5e8f\u5c0d Jack \u7684\u5bc6\u78bc\u9032\u884c\u54c8\u5e0c\u8655\u7406\uff0c\u7136\u5f8c\u518d\u5c07\u5176\u5b58\u5132\u5728 `user_details` \u8868\u4e2d\u3002\n```\n--Hash passwords before storing them in the user_details table.TRUNCATE TABLE secure_schema.user_details;INSERT INTO secure_schema.user_details VALUES(1,'jack',34,'jack@example.com',crypt('testpassword', gen_salt('bf')));--Match the hashed data with user entered passwordSELECT id, name FROM secure_schema.user_details WHERE email_id = 'jack@example.com' AND password = crypt('testpassword', password);\u00a0id | name----+-----\u00a0 1 | jack\n```\n### \u52a0\u5bc6\n\u4f7f\u7528\u201c\u52a0\u5bc6\u201d\u51fd\u6578\u5c0d\u4ee5\u5bc6\u9470\u5c0d\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u9032\u884c\u52a0\u5bc6\u3002 \u7136\u5f8c\uff0c\u7528\u6236\u9700\u8981\u6b64\u5bc6\u9470\u4f86\u5c07\u8a72\u4fe1\u606f\u89e3\u5bc6\u7232\u7d14\u6587\u672c\u3002\u5c0d\u65bc\u5b58\u5132\u4fe1\u7528\u5361\u4fe1\u606f\u548c\u9280\u884c\u8a73\u7d30\u4fe1\u606f\u3001\u4e26\u4ee5\u53ef\u8b80\u683c\u5f0f\u5f9e\u4e2d\u6aa2\u7d22\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u7684\u61c9\u7528\u5834\u666f\uff0c\u9019\u662f\u5f88\u6709\u7528\u7684\u3002\n\u5c0d\u65bc\u96f6\u552e\u7db2\u7ad9\u793a\u4f8b\uff0cJack \u7684\u5bc6\u78bc\u548c\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u5df2\u52a0\u5bc6\u3002\u64c1\u6709\u52a0\u5bc6\u5bc6\u9470\u7684\u7528\u6236\u53ef\u4ee5\u89e3\u5bc6\u6b64\u4fe1\u606f\uff0c\u4e26\u4ee5\u7d14\u6587\u672c\u5f62\u5f0f\u67e5\u770b\u5b83\u3002\u5c0d\u65bc\u6240\u6709\u5176\u4ed6\u7528\u6236\uff0c\u7cfb\u7d71\u6703\u986f\u793a\u932f\u8aa4\u6d88\u606f\u3002\n```\n--\"user_acc_key\" is the encryption keyTRUNCATE TABLE secure_schema.user_details;INSERT INTO secure_schema.user_details VALUES(1,'jack',34,pgp_sym_encrypt('jack@example.com','user_acc_key'),pgp_sym_encrypt('testpassword','user_acc_key'));--User: \"admin\" (queries without an encryption key)--Data in the email_id and password columns are truncated for better--formatting.SELECT * FROM secure_schema.user_details;\u00a0id | name \u00a0| age | \u00a0 \u00a0email_id \u00a0 \u00a0 | password----+-------+-----+-----------------+-------------------\u00a0 1 | jack | \u00a034 | \\xc30d0407030209 | \\xc30d040703028962--User: \"app_user\" (queries with a valid encryption key)SELECT name,pgp_sym_decrypt(email_id::bytea,'user_acc_key'),pgp_sym_decrypt(password::bytea,'user_acc_key') FROM secure_schema.user_details;\u00a0name | pgp_sym_decrypt \u00a0 | pgp_sym_decrypt------+-------------------+----------------\u00a0jack | jack@example.com \u00a0| testpassword--If a user uses the wrong encryption key, then the following error message appears:SELECT name,pgp_sym_decrypt(email_id::bytea,'user_bad_key'),pgp_sym_decrypt(password::bytea,'user_bad_key') FROM secure_schema.user_details;ERROR: \u00a0Wrong key or corrupt data\n```\n**\u6ce8\u610f** \uff1a\u4f7f\u7528 `pgcrypto` \u64f4\u5c55\u7a0b\u5e8f\u6642\uff0c\u6240\u6709\u52a0\u5bc6\u548c\u89e3\u5bc6\u8655\u7406\u90fd\u5728\u6578\u64da\u5eab\u4e2d\u9032\u884c\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u80fd\u60f3\u8981\u63a7\u5236\u61c9\u7528\u4e2d\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u908f\u8f2f\u3002\u7232\u6b64\uff0c\u8acb\u4f7f\u7528 [\u5ba2\u6236\u7aef\u52a0\u5bc6](https://cloud.google.com/sql/docs/postgres/client-side-encryption?hl=zh-cn) \u4f86\u52a0\u5bc6\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\uff0c\u7136\u5f8c\u518d\u5c07\u5176\u5beb\u5165 Cloud SQL\u3002\u60a8\u53ef\u4ee5\u63a1\u7528\u9019\u7a2e\u53ea\u6709\u61c9\u7528\u624d\u80fd\u89e3\u5bc6\u7684\u65b9\u5f0f\u52a0\u5bc6\u6b64\u4fe1\u606f\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n\u77ad\u89e3\u4ee5\u4e0b\u53ef\u7528\u65bc\u4fdd\u8b77\u500b\u4eba\u8eab\u4efd\u4fe1\u606f\u514d\u906d\u4e0d\u6b63\u7576\u8a2a\u554f\u7684\u5176\u4ed6\u63a7\u5236\u63aa\u65bd\uff1a\n- [IAM \u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/sql/docs/postgres/iam-authentication?hl=zh-cn) \n- [\u5df2\u7372\u6388\u6b0a\u7684\u7db2\u7d61](https://cloud.google.com/sql/docs/postgres/authorize-networks?hl=zh-cn) \n- [SSL/TLS \u8b49\u66f8](https://cloud.google.com/sql/docs/postgres/configure-ssl-instance?hl=zh-cn) \n- [\u89d2\u8272\u548c\u6b0a\u9650](https://cloud.google.com/sql/docs/postgres/roles-and-permissions?hl=zh-cn) \n- [\u81ea\u52a9\u7dad\u8b77](https://cloud.google.com/sql/docs/postgres/self-service-maintenance?hl=zh-cn)", "guide": "Cloud SQL"}