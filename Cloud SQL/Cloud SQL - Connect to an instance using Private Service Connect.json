{"title": "Cloud SQL - Connect to an instance using Private Service Connect", "url": "https://cloud.google.com/sql/docs/postgres/configure-private-service-connect", "abstract": "# Cloud SQL - Connect to an instance using Private Service Connect\nThis page describes how to use [Private Service Connect](/sql/docs/postgres/about-private-service-connect) to connect to a Cloud SQL instance.\nYou can use Private Service Connect to connect to either a primary Cloud SQL instance or any of its [read replicas](/sql/docs/postgres/replication/create-replica#create-read-replica-cloud-sql-instance-psc-enabled) from multiple Virtual Private Cloud (VPC) networks that belong to different groups, teams, projects, or organizations.\n**Note:** If a Cloud SQL instance has Private Service Connect enabled, then the`postgres_fdw`,`dblink`,`Pl/Proxy`, and`pglogical`PostgreSQL extensions can't be used with the instance. For more information about these extensions, see [Configure PostgreSQL extensions](/sql/docs/postgres/extensions) .\n", "content": "## Before you begin\nSupport for using Private Service Connect with a Cloud SQL instance is available for [](/sdk/gcloud/reference/sql) ` [gcloud CLI](/sdk/gcloud) ` versions 416.0.0 and later.\n### User roles\nThe following table provides information about the roles required to use Private Service Connect with a Cloud SQL instance:\n| Role     | Description                                                                                 |\n|:----------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| compute.networkAdmin | Grants full control over the VPC network that initiates a connection to a Cloud SQL instance. You can create and manage IP addresses, firewall rules, and Private Service Connect endpoints. If you use Private Service Connect to connect to a Cloud SQL instance from multiple VPC networks, then each network has its own administrator. |\n| dns.admin    | Grants full control over Cloud DNS resources, including DNS zones and records.                                                                |\n| cloudsql.admin  | Provides full control of a Cloud SQL instance and controls the instance over its lifecycle.                                                             |\n| cloudsql.instanceUser | Provides access to the Cloud SQL instance. If you connect through the Cloud SQL Auth Proxy client, then you must have the Cloud SQL Client role. If you connect directly, then you don't need any Identity and Access Management (IAM) roles and permissions.                    |\n## Create a Cloud SQL instance\nYou can create an instance and enable Private Service Connect for it by using [](/sdk/gcloud)  [gcloud CLI](/sdk/gcloud) , Terraform, or the API.\nTo create an instance and enable Private Service Connect for it, use the [gcloud sql instances create](/sdk/gcloud/reference/sql/instances/create) command:\n```\ngcloud sql instances create INSTANCE_NAME \\--project=PROJECT_ID \\--region=REGION_NAME \\--enable-private-service-connect \\--allowed-psc-projects=ALLOWED_PROJECTS \\--availability-type=AVAILABILITY_TYPE \\--no-assign-ip \\--tier=MACHINE_TYPE \\--database-version=DATABASE_VERSION\n```\nMake the following replacements:- : the name of the instance.\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance.\n- : the region name for the instance.\n- : a list of allowed project IDs or numbers, separated by commas. If a project isn't contained in this list, then you can't use it to create an instance and enable Private Service Connect for it.\n- : enable high availability for the instance. For this parameter, specify one of the following values:- `REGIONAL`: enable high availability and is recommended for production instances. The instance fails over to another zone within your selected region.\n- `ZONAL`: provide no failover capability. This is the default value.\nFor more information about setting and removing high availability for instances, see [Configure an existing instance for high availability](/sql/docs/postgres/configure-ha#ha-instance) and [Deactivate high availability for an instance](/sql/docs/postgres/configure-ha#deactivate-ha-instance) .\n- : the machine type for the instance.\n- : the database version for the instance (for example,`POSTGRES_13`).\nTo create an instance with Private Service Connect enabled, use the [ google_sql_database_instanceTerraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance) .\n [  cloud_sql/postgres_instance_psc/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_psc/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_psc/main.tf) \n```\nresource \"google_sql_database_instance\" \"default\" {\n name    = \"postgres-instance\"\n region   = \"us-central1\"\n database_version = \"POSTGRES_14\"\n settings {\n tier    = \"db-custom-2-7680\"\n availability_type = \"REGIONAL\"\n backup_configuration {\n  enabled = true\n }\n ip_configuration {\n  psc_config {\n  psc_enabled    = true\n  allowed_consumer_projects = []\n  }\n  ipv4_enabled = false\n }\n }\n deletion_protection = false # Set to \"true\" to prevent destruction of the resource\n}\n```\nTo apply your Terraform configuration in a Google Cloud project, complete the steps in the following sections.## Prepare Cloud Shell\n- Launch [Cloud Shell](https://shell.cloud.google.com/) .\n- Set the default Google Cloud project  where you want to apply your Terraform configurations.You only need to run this command once per project, and you can run it in any directory.```\nexport GOOGLE_CLOUD_PROJECT=PROJECT_ID\n```Environment variables are overridden if you set explicit values in the Terraform  configuration file.\n## Prepare the directoryEach Terraform configuration file must have its own directory (also called a ).- In [Cloud Shell](https://shell.cloud.google.com/) , create a directory and a new  file within that directory. The filename must have the`.tf`extension\u2014for example`main.tf`. In this  tutorial, the file is referred to as`main.tf`.```\nmkdir DIRECTORY && cd DIRECTORY && touch main.tf\n```\n- If you are following a tutorial, you can copy the sample code in each section or step.Copy the sample code into the newly created `main.tf` .Optionally, copy the code from GitHub. This is recommended  when the Terraform snippet is part of an end-to-end solution.\n- Review and modify the sample parameters to apply to your environment.\n- Save your changes.\n- Initialize Terraform. You only need to do this once per directory.```\nterraform init\n```Optionally, to use the latest Google provider version, include the `-upgrade` option:```\nterraform init -upgrade\n```\n## Apply the changes\n- Review the configuration and verify that the resources that Terraform is going to create or  update match your expectations:```\nterraform plan\n```Make corrections to the configuration as necessary.\n- Apply the Terraform configuration by running the following command and entering`yes`at the prompt:```\nterraform apply\n```Wait until Terraform displays the \"Apply complete!\" message.\n- [Open your Google Cloud project](https://console.cloud.google.com/) to view  the results. In the Google Cloud console, navigate to your resources in the UI to make sure  that Terraform has created or updated them.\n **Note:** Terraform samples typically assume that the required APIs are enabled in your Google Cloud project.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance.\n- : the name of the instance.\n- : the region name for the instance.\n- : enable high availability for the instance. For this parameter, specify one of the following values:- `REGIONAL`: enable high availability and is recommended for production instances. The instance fails over to another zone within your selected region.\n- `ZONAL`: provide no failover capability. This is the default value.\nFor more information about setting and removing high availability for instances, see [Configure an existing instance for high availability](/sql/docs/postgres/configure-ha#ha-instance) and [Deactivate high availability for an instance](/sql/docs/postgres/configure-ha#deactivate-ha-instance) .\n- : a list of allowed project IDs or numbers, separated by commas. If a project isn't contained in this list, then you can't use it to create an instance and enable Private Service Connect for it.\n- : the machine type for the instance.\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances\n```\nRequest JSON body:\n```\n{\n \"name\": \"INSTANCE_NAME\",\n \"project\": PROJECT_ID\",\n \"region\": \"REGION_NAME\",\n \"databaseVersion\": \"POSTGRES_13\",\n \"kind\": \"sql#instance\",\n \"settings\": {\n \"availabilityType\": \"AVAILABILITY_TYPE\",\n \"ipConfiguration\": {\n  \"ipv4Enabled\": false,\n  \"pscConfig\": {\n  \"allowedConsumerProjects\": [   \"ALLOWED_PROJECTS\"\n  ],\n  \"pscEnabled\": true\n  }\n },\n \"kind\": \"sql#settings\",\n \"pricingPlan\": \"PER_USE\",\n \"replicationType\": \"SYNCHRONOUS\",\n \"tier\": \"MACHINE_TYPE\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\",\n \"status\": \"RUNNING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"startTime\": \"2023-06-14T18:48:35.499Z\",\n \"operationType\": \"CREATE\",\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"INSTANCE_NAME\",\n \"selfLink\": \"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\nBefore using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance.\n- : the name of the instance.\n- : the region name for the instance.\n- : enable high availability for the instance. For this parameter, specify one of the following values:- `REGIONAL`: enable high availability and is recommended for production instances. The instance fails over to another zone within your selected region.\n- `ZONAL`: provide no failover capability. This is the default value.\nFor more information about setting and removing high availability for instances, see [Configure an existing instance for high availability](/sql/docs/postgres/configure-ha#ha-instance) and [Deactivate high availability for an instance](/sql/docs/postgres/configure-ha#deactivate-ha-instance) .\n- : a list of allowed project IDs or numbers, separated by commas. If a project isn't contained in this list, then you can't use it to create an instance and enable Private Service Connect for it.\n- : the machine type for the instance.\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances\n```\nRequest JSON body:\n```\n{\n \"name\": \"INSTANCE_NAME\",\n \"project\": PROJECT_ID\",\n \"region\": \"REGION_NAME\",\n \"databaseVersion\": \"POSTGRES_13\",\n \"kind\": \"sql#instance\",\n \"settings\": {\n \"availabilityType\": \"AVAILABILITY_TYPE\",\n \"ipConfiguration\": {\n  \"ipv4Enabled\": false,\n  \"pscConfig\": {\n  \"allowedConsumerProjects\": [   \"ALLOWED_PROJECTS\"\n  ],\n  \"pscEnabled\": true\n  }\n },\n \"kind\": \"sql#settings\",\n \"pricingPlan\": \"PER_USE\",\n \"replicationType\": \"SYNCHRONOUS\",\n \"tier\": \"MACHINE_TYPE\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\",\n \"status\": \"RUNNING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"startTime\": \"2023-06-14T18:48:35.499Z\",\n \"operationType\": \"CREATE\",\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"INSTANCE_NAME\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\n## Get the service attachment\nAfter creating a Cloud SQL instance with Private Service Connect enabled, get the service attachment URI and use it to create the Private Service Connect endpoint.\nTo view summary information about an instance with Private Service Connect enabled, such as the `pscServiceAttachmentLink` field which displays the URI that points to the service attachment of the instance, use the [gcloud sql instances describe](/sdk/gcloud/reference/sql/instances/describe) command:\n```\ngcloud sql instances describe INSTANCE_NAME \\--project=PROJECT_ID\n```\n **Note: ** The service attachment URI is used to create the Private Service Connect endpoint.\nMake the following replacements:- : the name of the Cloud SQL instance to which Private Service Connect endpoints in VPC networks can connect\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\nThe following example shows a sample output for this command:\n```\ngcloud sql instances describe myinstance \\--project=12345...pscServiceAttachmentLink: projects/45678/regions/myregion/serviceAttachments/myserviceattachment\n```To get the service attachment URI, use the [google_compute_addressTerraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_address) .\n [  cloud_sql/postgres_instance_psc/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_psc/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_psc/main.tf) \n```\nresource \"google_compute_address\" \"default\" {\n name   = \"psc-compute-address\"\n region  = \"us-central1\"\n address_type = \"INTERNAL\"\n subnetwork = \"default\"  # Replace value with the name of the subnet here.\n address  = \"10.128.0.42\" # Replace value with the IP address to reserve.\n}\ndata \"google_sql_database_instance\" \"default\" {\n name = resource.google_sql_database_instance.default.name\n}\nresource \"google_compute_forwarding_rule\" \"default\" {\n name     = \"psc-forwarding-rule-${google_sql_database_instance.default.name}\"\n region    = \"us-central1\"\n network    = \"default\"\n ip_address   = google_compute_address.default.self_link\n load_balancing_scheme = \"\"\n target    = data.google_sql_database_instance.default.psc_service_attachment_link\n}\n```\nTo apply your Terraform configuration in a Google Cloud project, complete the steps in the following sections.## Prepare Cloud Shell\n- Launch [Cloud Shell](https://shell.cloud.google.com/) .\n- Set the default Google Cloud project  where you want to apply your Terraform configurations.You only need to run this command once per project, and you can run it in any directory.```\nexport GOOGLE_CLOUD_PROJECT=PROJECT_ID\n```Environment variables are overridden if you set explicit values in the Terraform  configuration file.\n## Prepare the directoryEach Terraform configuration file must have its own directory (also called a ).- In [Cloud Shell](https://shell.cloud.google.com/) , create a directory and a new  file within that directory. The filename must have the`.tf`extension\u2014for example`main.tf`. In this  tutorial, the file is referred to as`main.tf`.```\nmkdir DIRECTORY && cd DIRECTORY && touch main.tf\n```\n- If you are following a tutorial, you can copy the sample code in each section or step.Copy the sample code into the newly created `main.tf` .Optionally, copy the code from GitHub. This is recommended  when the Terraform snippet is part of an end-to-end solution.\n- Review and modify the sample parameters to apply to your environment.\n- Save your changes.\n- Initialize Terraform. You only need to do this once per directory.```\nterraform init\n```Optionally, to use the latest Google provider version, include the `-upgrade` option:```\nterraform init -upgrade\n```\n## Apply the changes\n- Review the configuration and verify that the resources that Terraform is going to create or  update match your expectations:```\nterraform plan\n```Make corrections to the configuration as necessary.\n- Apply the Terraform configuration by running the following command and entering`yes`at the prompt:```\nterraform apply\n```Wait until Terraform displays the \"Apply complete!\" message.\n- [Open your Google Cloud project](https://console.cloud.google.com/) to view  the results. In the Google Cloud console, navigate to your resources in the UI to make sure  that Terraform has created or updated them.\n **Note:** Terraform samples typically assume that the required APIs are enabled in your Google Cloud project.\n## Create a Private Service Connect endpoint\nYou can reserve an internal IP address for the Private Service Connect endpoint and [create an endpoint](/vpc/docs/configure-private-service-connect-services#create-endpoint) with that address. To create the endpoint, you need the [service attachment URI](#get-service-attachment) and the projects that are allowed for the instance.\n- To reserve an internal IP address for the Private Service Connect endpoint, use the [gcloud compute addresses create](/sdk/gcloud/reference/compute/addresses/create) command:```\ngcloud compute addresses create ADDRESS_NAME \\--project=PROJECT_ID \\--region=REGION_NAME \\--subnet=SUBNET_NAME \\--addresses=INTERNAL_IP_ADDRESS\n```Make the following replacements:- : the name of the internal IP address.\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project for the endpoint.\n- : the region name for the endpoint.\n- : the subnet name for the IP address.\n- : the IP address to reserve. This IP address must be within the subnet's primary IP range. The IP address can be an [RFC 1918](https://datatracker.ietf.org/doc/html/rfc1918) address or a subnet with non-RFC ranges.\n- To verify that the IP address is reserved, use the [gcloud compute addresses list](/sdk/gcloud/reference/compute/addresses/list) command:```\ngcloud compute addresses list ADDRESS_NAME \\--project=PROJECT_ID\n```In the response, verify that a `RESERVED` status appears for the IP address.\n- To create the Private Service Connect endpoint and point it to the Cloud SQL service attachment, use the [gcloud compute forwarding-rules create](/sdk/gcloud/reference/compute/forwarding-rules/create) command:```\ngcloud compute forwarding-rules create ENDPOINT_NAME \\--address=ADDRESS_NAME \\--project=PROJECT_ID \\--region=REGION_NAME \\--network=NETWORK_NAME \\--target-service-attachment=SERVICE_ATTACHMENT_URI\n```Make the following replacements:- : the name of the endpoint\n- : the name of the VPC network for the endpoint\n- : the URI of the service attachment\n- To verify that the service attachment accepts the endpoint, use the [gcloud compute forwarding-rules describe](/sdk/gcloud/reference/compute/forwarding-rules/describe) command:```\ngcloud compute forwarding-rules describe ENDPOINT_NAME \\--project=PROJECT_ID \\--region=REGION_NAME\n```In the response, verify that an `ACCEPTED` status appears for the `pscConnectionStatus` field. The endpoint can connect to the service attachment.## Connect to a Cloud SQL instance\nYou can connect to a Cloud SQL instance with Private Service Connect enabled by using an internal IP address, a DNS record, the Cloud SQL Auth Proxy, the Cloud SQL Language Connectors, or other Google Cloud applications.\n### Configure a DNS managed zone and a DNS record\nCloud SQL doesn't create DNS records automatically. Instead, the instance lookup API response provides a suggested DNS name. We recommend that you create the DNS record in a [private DNS zone](/dns/docs/dns-overview#private_zone) in the corresponding VPC network. This provides a consistent way of using the Cloud SQL Auth Proxy to connect from different networks.\n**Important: ** If you're using the [Cloud SQL Auth Proxy](#connect-cloud-sql-auth-proxy) or the [Cloud SQL Language Connectors](#connect-using-language-connectors) , then set up a [DNS record](/dns/docs/records-overview) which matches the recommended DNS name provided for the instance. For more information, see [Connect using the Cloud SQL Auth Proxy](#connect-cloud-sql-auth-proxy) .\n- To view summary information about a Cloud SQL instance, including the DNS name of the instance, use the [gcloud sql instances describe](/sdk/gcloud/reference/sql/instances/describe) command:```\ngcloud sql instances describe INSTANCE_NAME \\--project=PROJECT_ID\n```Make the following replacements:- : the name of the Cloud SQL instance\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\nIn the response, verify that the DNS name appears. This name has the following pattern: `` `.` `` `.` `` `.sql.goog.` . For example: `1a23b4cd5e67.1a2b345c6d27.us-central1.sql.goog.` . **Note:** DNS names always end with a period ( `.` ).\n- To create a private DNS zone, use the [gcloud dns managed-zones create](/sdk/gcloud/reference/dns/managed-zones/create) command. This zone is associated with the VPC network that's used to connect to the Cloud SQL instance through the Private Service Connect endpoint. **Note:** For each VPC network, create a DNS zone.```\ngcloud dns managed-zones create ZONE_NAME \\--project=PROJECT_ID \\--description=DESCRIPTION \\--dns-name=DNS_NAME \\--networks=NETWORK_NAME \\--visibility=private\n```Make the following replacements:- : the name of the DNS zone\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the zone\n- : a description of the zone (for example, a DNS zone for the Cloud SQL instance)\n- : the DNS name for the zone, such as`` `.sql.goog.`(whereis the region name for the zone)\n- : the name of the VPC network\n- After you [create the Private Service Connect endpoint](#create-psc-endpoint) , to create a DNS record in the zone, use the [gcloud dns record-sets create](/sdk/gcloud/reference/dns/record-sets/create) command:```\ngcloud dns record-sets create DNS_NAME \\--project=PROJECT_ID \\--type=RRSET_TYPE \\--rrdatas=RR_DATA \\--zone=ZONE_NAME\n```Make the following replacements:- : the DNS name that you retrieved earlier in this procedure.\n- : the resource record type of the DNS record set (for example,`A`).\n- : the IP address allocated for the Private Service Connect endpoint (for example,`198.51.100.5`). You can also enter multiple values such as`rrdata1 rrdata2 rrdata3`(for example,`10.1.2.3 10.2.3.4 10.3.4.5`).\n### Connect directly using a DNS record\nBefore connecting to a Cloud SQL instance using a DNS record, complete the following actions:\n- [Create a Private Service Connect endpoint](#create-psc-endpoint) .\n- Confirm that the service attachment of the instance accepts the endpoint. To verify that the status of the endpoint is`ACCEPTED`, [check the status](#create-psc-endpoint) .\n- [Configure a DNS managed zone and a DNS record](#configure-dns) .\nAfter you meet these conditions, use the DNS name to access the instance from any VPC network where you created the endpoint.\n- To retrieve the DNS record of the Private Service Connect endpoint, use the [gcloud compute addresses describe](/sdk/gcloud/reference/compute/addresses/describe) command:```\ngcloud compute addresses describe DNS_RECORD \\--project=PROJECT_ID \\--region=REGION_NAME\n```Make the following replacements:- : the DNS record for the endpoint\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the endpoint\n- : the region name for the endpoint\n- To connect to the Cloud SQL instance, use the DNS record.```\npsql \"sslmode=disable dbname=DATABASE_NAME user=USERNAME host=DNS_RECORD\"\n```Make the following replacements:- : the name of the Cloud SQL for PostgreSQL database that's contained within the instance\n- : the name of the user that's connecting to the instance\n- : the endpoint's DNS record\n### Connect directly through an internal IP address\nBefore connecting to a Cloud SQL instance with Private Service Connect enabled, complete the following actions:\n- [Create a Private Service Connect endpoint](#create-psc-endpoint) .\n- Confirm that the service attachment of the instance accepts the endpoint. To verify that the status of the endpoint is`ACCEPTED`, [check the status](#create-psc-endpoint) .\nAfter you meet these conditions, use the endpoint's IP address to access the instance from any VPC network where you created the endpoint.\n- To retrieve the IP address of the Private Service Connect endpoint, use the [gcloud compute addresses describe](/sdk/gcloud/reference/compute/addresses/describe) command:```\ngcloud compute addresses describe ADDRESS_NAME \\--project=PROJECT_ID \\--region=REGION_NAME\n```Make the following replacements:- : the name of the endpoint's IP address\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the endpoint\n- : the region name for the endpoint\n- To connect to the Cloud SQL instance, use the internal IP address.```\npsql \"sslmode=disable dbname=DATABASE_NAME user=USERNAME hostaddr=IP_ADDRESS\"\n```Make the following replacements:- : the name of the Cloud SQL for PostgreSQL database that's contained within the instance\n- : the name of the user that's connecting to the instance\n- : the endpoint's IP address\n### Connect using the Cloud SQL Auth Proxy\nThe [Cloud SQL Auth Proxy](/sql/docs/postgres/sql-proxy) is a connector that provides secure access to an instance with Private Service Connect enabled without a need for authorized networks or for configuring SSL.\nTo allow Cloud SQL Auth Proxy client connections, set up a [DNS record](/dns/docs/records-overview) which matches the recommended [DNS name](#configure-dns) that's provided for the instance. The DNS record is a mapping between a DNS resource and a domain name.\nTo connect to instances with Private Service Connect enabled, you must [download and install the binary for the Cloud SQL Auth Proxy](/sql/docs/postgres/connect-auth-proxy#install) . The binary that you download depends on the operating system, and whether it uses a 32-bit or 64-bit kernel. Most newer hardware uses a 64-bit kernel.\nIf you're unsure whether your machine is running a 32-bit or 64-bit kernel, then use the `uname -a` command for Linux or macOS. For Windows, see the [Windows documentation](https://support.microsoft.com/en-us/windows/32-bit-and-64-bit-windows-frequently-asked-questions-c6ca9541-8dce-4d48-0415-94a3faa2e13d) .\nThe Cloud SQL Auth Proxy supports connections to instances with Private Service Connect enabled. For more information, see [Start the Cloud SQL Auth Proxy](/sql/docs/postgres/connect-auth-proxy#start-proxy) .\n- To view summary information about a Cloud SQL instance, including the connection name of the instance, use the [gcloud sql instances describe](/sdk/gcloud/reference/sql/instances/describe) command. This connection name is in the format of `` `:` `` `:` `` .```\ngcloud sql instances describe INSTANCE_NAME \\--project=PROJECT_ID \\--format='value(connectionName)'\n```Make the following replacements:- : the name of the Cloud SQL instance\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- Copy the instance connection name.\n- Launch the Cloud SQL Auth Proxy:```\n./cloud-sql-proxy INSTANCE_CONNECTION_NAME --psc \n```Replace with the instance connection name that you copied in the previous step. **Note: ** Use the `psc` flag to start the Cloud SQL Auth Proxy to connect to instances with Private Service Connect enabled.\n### Connect using the Cloud SQL Language Connectors\nThe [Cloud SQL Language Connectors](/sql/docs/postgres/language-connectors) are libraries that provide secure access to a Cloud SQL instance with Private Service Connect enabled without a need for authorized networks or for configuring SSL.\nTo allow connections with Cloud SQL Language Connectors, set up a [DNS record](#configure-dns) which matches the recommended [DNS name](#configure-dns) that's provided for the instance. The DNS record is a mapping between a DNS resource and a domain name.\nThe Cloud SQL Language Connectors support Private Service Connect connections through the `PSC` IP type within their respective libraries.\n- [Cloud SQL Python Connector](https://github.com/GoogleCloudPlatform/cloud-sql-python-connector) \n- [Cloud SQL Go Connector](https://github.com/GoogleCloudPlatform/cloud-sql-go-connector) \n- [Cloud SQL Java Connector](https://github.com/GoogleCloudPlatform/cloud-sql-jdbc-socket-factory) \n- [Cloud SQL Node.js Connector](https://github.com/GoogleCloudPlatform/cloud-sql-nodejs-connector) \n### Connect from App Engine Standard, Cloud Run, or Cloud Functions\nTo connect to Cloud SQL instances with Private Service Connect enabled, you can use [App Engine Standard](/sql/docs/postgres/connect-app-engine-standard) , [Cloud Run](/sql/docs/postgres/connect-run) , or [Cloud Functions](/sql/docs/postgres/connect-functions) .\nIn these supported serverless environments, both the [Cloud SQL Language Connectors](/sql/docs/postgres/language-connectors) and direct TCP connections by using an IP address and port number are supported. For direct TCP connections, this is the IP address that you reserve when you [create the Private Service Connect endpoint](#create-psc-endpoint) . You can specify the IP address as the address for the database host.\nIf you [create a DNS record](#configure-dns) for the endpoint, then you can specify this record for the host.\n### Connect from BigQuery\nTo access data in Cloud SQL and make queries against this data over an internal IP connection, use the `--enable-google-private-path` parameter . This parameter is valid only if:\n- You use the`--no-assign-ip`parameter.\n- You use the`--network`parameter to specify the name of the VPC network that you want to use to create an internal connection.\n## Test connectivity\nTo test inbound connectivity to a Cloud SQL instance with Private Service Connect enabled, set the IP address of the Private Service Connect endpoint to be the destination IP address.\nTo create a connectivity test for a Cloud SQL instance with Private Service Connect enabled, use the [gcloud network-management connectivity-tests create](/sdk/gcloud/reference/network-management/connectivity-tests/create) command:\n```\ngcloud network-management connectivity-tests create CONNECTIVITY_TEST_NAME \\--source-instance=SOURCE_INSTANCE \\--destination-cloud-sql-instance=DESTINATION_CLOUD_SQL_INSTANCE \\--destination-network=DESTINATION_NETWORK \\--destination-port=DESTINATION_PORT \\--protocol=tcp\n```\nMake the following replacements:- : the name of the connectivity test.\n- : the URI for the Compute Engine instance where the source IP address is located (for example,`projects/myproject/zones/myzone/instances/myinstance`).\n- : the URL for the Cloud SQL instance (for example,`projects/myproject/instances/myinstance`).\n- : the URI for the VPC network where the destination IP address is located (for example,`projects/myproject/global/networks/mynetwork`).\n- : the port number reserved for the instance. For Cloud SQL for PostgreSQL instances, the port number is`5432`.\n**Note: ** In addition to testing connectivity, you can restrict connectivity to Private Service Connect endpoints from service consumers in a VPC network. To do this, use the [gcloud compute firewall-rules create](/sdk/gcloud/reference/compute/firewall-rules/create) command to create a network egress firewall rule. This rule applies to the IP address of an endpoint. For the rule, define the source to be all VMs in the VPC network and specify a tag or service account.\n## Limitations\n- You can set up to 20 Private Service Connect endpoints that connect to the service attachment of a Cloud SQL instance with Private Service Connect enabled.\n- The following [flags](/sql/docs/postgres/create-instance) are invalidated or impacted:- `--no-assign-ip:`use this flag because Cloud SQL instances with Private Service Connect enabled aren't supported to use other connectivity types such as external IP connections\n- `--authorized-networks:`you can't use this flag to add [authorized networks](/sql/docs/postgres/authorize-networks) \n- `--network:`you can't use this flag because it's associated with [private services access](/sql/docs/postgres/configure-private-services-access) \n- `--allocated-ip-range-name:`you can't use this flag because allowed IP range names aren't supported\n- You can't create an [external replica](/sql/docs/postgres/replication/configure-external-replica) of an instance with Private Service Connect enabled.\n- You can't activate or deactivate Private Service Connect on an existing instance.\n- You can't configure an instance that has Private Service Connect enabled to use private services access or external IP connections.- You can't enable external IP connections on an instance with Private Service Connect enabled.\n- You can't enable private services access or add authorized networks to the instance.\n- You can't change the [connectivity type](/sql/docs/postgres/connect-overview) of the instance.\n- You can't use the`gcloud sql connect`command, Cloud Shell, or Cloud Build to connect to Cloud SQL instances with Private Service Connect enabled.\n- If you perform [homogeneous migrations to Cloud SQL](/database-migration/docs/postgres) , then you can't use Database Migration Service to connect to Cloud SQL instances with Private Service Connect enabled.\n- When [testing connectivity to a Cloud SQL instance with Private Service Connect enabled](#test-connectivity-cloud-sql-instance-psc-enabled) , you can't set the following items:- The instance's internal IP address or DNS name as the destination directly\n- The instance as the source\n- The IP address of the Private Service Connect endpoint as the source\n- IP-based allowlisting by using authorized networks isn't supported.\n- The`pglogical`,`pl/proxy`,`dblink`, and`postgres_fdw` [extensions](/sql/docs/postgres/extensions) aren't supported.\n- Client IP-based control, logging, and metrics aren't supported for Query and System insights. However, VPN and Interconnect are supported.\n- If your network project contains instances that use the old Cloud SQL network architecture, then you can't create a Private Service Connect instance. Cloud SQL provides tools to help you upgrade your instances from the old network architecture to the new network architecture. For more information or to check the network architecture of the Cloud SQL instances in your project and perform any necessary upgrades, see [Upgrade an instance to the new network architecture](/sql/docs/postgres/upgrade-cloud-sql-instance-new-network-architecture) .## Troubleshoot\nThis section contains information about issues associated with Cloud SQL instances with Private Service Connect enabled along with steps for troubleshooting the issues.\n| Issue                      | Troubleshooting                                                                                                                                                                                     |\n|:--------------------------------------------------------------------------------------------||\n| nan                       | nan                                                                                                                                                                                        |\n| The service attachment of the instance doesn't accept the Private Service Connect endpoint. | To check the endpoint's status, use the gcloud compute forwarding-rules command. gcloud compute forwarding-rules ENDPOINT_NAME \\ --project=PROJECT_ID \\ --region=REGION_NAME \\ | grep pscConnectionStatus Make the following replacements: ENDPOINT_NAME: the name of the endpoint PROJECT_ID: the ID or project number of the Google Cloud project that contains the endpoint REGION_NAME: the region name for the endpoint Verify that the status of the endpoint is ACCEPTED. If the status is PENDING, then the instance isn't allowing the Google Cloud project that contains the endpoint. Make sure that the network project in which the endpoint is created is allowed. For more information, see Edit an instance with Private Service Connect enabled. |\n## What's next\n- Learn more about [private IP](/sql/docs/postgres/private-ip) .\n- Learn more about [Private Service Connect](/sql/docs/postgres/about-private-service-connect) .\n- Learn more about [creating a read replica](/sql/docs/postgres/replication/create-replica#create-read-replica-cloud-sql-instance-psc-enabled) of an instance with Private Service Connect enabled.\n- Learn more about [cloning](/sql/docs/postgres/clone-instance#clone-instance) an instance with Private Service Connect enabled.\n- Learn more about [viewing summary information](/sql/docs/postgres/instance-info#info) about instances with Private Service Connect enabled.\n- Learn more about [setting](/sql/docs/postgres/configure-ha#ha-instance) and [removing](/sql/docs/postgres/configure-ha#deactivate-ha-instance) high availability for an instance with Private Service Connect enabled.\n- Learn more about [editing](/sql/docs/postgres/edit-instance#edit-psc-instance) and [deleting](/sql/docs/postgres/delete-instance#delete-cloud-sql-instance) an instance with Private Service Connect enabled.", "guide": "Cloud SQL"}