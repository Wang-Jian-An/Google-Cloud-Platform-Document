{"title": "Cloud SQL - \u5f9e App Engine \u6a19\u6e96\u74b0\u5883\u9023\u63a5", "url": "https://cloud.google.com/sql/docs/postgres/connect-app-engine-standard?hl=zh-cn", "abstract": "# Cloud SQL - \u5f9e App Engine \u6a19\u6e96\u74b0\u5883\u9023\u63a5\n\u672c\u9801\u9762\u4ecb\u7d39\u4e86\u5f9e App Engine \u6a19\u6e96\u74b0\u5883\u4e2d\u904b\u884c\u7684\u670d\u52d9\u9023\u63a5\u5230 Cloud SQL \u5be6\u4f8b\u7684\u76f8\u95dc\u4fe1\u606f\u548c\u793a\u4f8b\u3002\nCloud SQL \u662f\u4e00\u9805\u5168\u4ee3\u7ba1\u5f0f\u6578\u64da\u5eab\u670d\u52d9\uff0c\u53ef\u5e6b\u52a9\u60a8\u5728\u96f2\u7aef\u8a2d\u7f6e\u3001\u7dad\u8b77\u3001\u7ba1\u7406\u548c\u63a7\u5236\u95dc\u4fc2\u578b\u6578\u64da\u5eab\u3002\nApp Engine \u662f\u5168\u4ee3\u7ba1\u5f0f\u7121\u670d\u52d9\u5668\u5e73\u81fa\uff0c\u53ef\u7528\u65bc\u5927\u898f\u6a21\u958b\u767c\u548c\u8a17\u7ba1 Web \u61c9\u7528\u3002\u60a8\u53ef\u4ee5\u9078\u64c7\u591a\u7a2e\u4e3b\u6d41\u7684\u8a9e\u8a00\u3001\u5eab\u548c\u6846\u67b6\u4f86\u958b\u767c\u61c9\u7528\uff0c\u7136\u5f8c\u8b93 App Engine \u7232\u60a8\u9810\u914d\u670d\u52d9\u5668\u4e26\u6839\u64da\u9700\u6c42\u64f4\u7e2e\u61c9\u7528\u5be6\u4f8b\u6578\u91cf\u3002\n", "content": "## \u8a2d\u7f6e Cloud SQL \u5be6\u4f8b\n- \u5982\u679c\u60a8\u8981\u5f9e\u67d0\u500b Google Cloud \u9805\u76ee\u9023\u63a5\uff0c\u5247\u5728\u8a72\u9805\u76ee\u4e2d\u5553\u7528 Cloud SQL Admin API\uff08\u5982\u679c\u60a8\u5c1a\u672a\u57f7\u884c\u6b64\u64cd\u4f5c\uff09\uff1aTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them [\u5553\u7528 API](https://console.cloud.google.com/flows/enableapi?apiid=sqladmin&%3Bredirect=https%3A%2F%2Fconsole.cloud.google.com&hl=zh-cn) \n- [\u5275\u5efa\u4e00\u500b Cloud SQL for PostgreSQL \u5be6\u4f8b](https://cloud.google.com/sql/docs/postgres/create-instance?hl=zh-cn) \u3002\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0cCloud SQL \u6703\u7232\u65b0\u5be6\u4f8b\u5206\u914d\u516c\u5171 IP \u5730\u5740\u3002  \u60a8\u9084\u53ef\u4ee5\u9078\u64c7\u5206\u914d\u5c08\u7528 IP \u5730\u5740\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u9019\u5169\u7a2e\u5730\u5740\u7684\u9023\u63a5\u65b9\u6848\uff0c\u8acb\u53c3\u95b1 [\u9023\u63a5\u6982\u89bd](https://cloud.google.com/sql/docs/postgres/connect-overview?hl=zh-cn) \u9801\u9762\u3002## \u914d\u7f6e App Engine \u6a19\u6e96\u74b0\u5883\n\u5982\u9700\u914d\u7f6e App Engine \u6a19\u6e96\u74b0\u5883\u4ee5\u5141\u8a31\u9023\u63a5\u5230\u4f7f\u7528\u516c\u5171 IP \u5730\u5740\u7684 Cloud SQL \u5be6\u4f8b\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u78ba\u4fdd\u4e0a\u9762\u5275\u5efa\u7684\u5be6\u4f8b\u5177\u6709\u516c\u5171 IP \u5730\u5740\u3002\u60a8\u53ef\u4ee5\u5728 [Google Cloud \u63a7\u5236\u6aaf](https://console.cloud.google.com/sql?hl=zh-cn) \u4e2d\u7684\u5be6\u4f8b **\u6982\u89bd** \u9801\u9762\u4e0a\u9a57\u8b49\u9019\u4e00\u9ede\u3002\u5982\u679c\u60a8\u9700\u8981\u6dfb\u52a0\u4e00\u500b\u516c\u5171 IP \u5730\u5740\uff0c\u8acb\u53c3\u95b1 [\u914d\u7f6e\u516c\u5171 IP \u5730\u5740\u9801\u9762](https://cloud.google.com/sql/docs/postgres/configure-ip?hl=zh-cn) \u4f86\u67e5\u770b\u76f8\u95dc\u8aaa\u660e\u3002\n- \u7372\u53d6\u5be6\u4f8b\u7684\u3002\u60a8\u53ef\u4ee5\u5728 [Google Cloud \u63a7\u5236\u6aaf](https://console.cloud.google.com/sql?hl=zh-cn) \u4e2d\u7684\u5be6\u4f8b **\u6982\u89bd** \u9801\u9762\u4e0a\u6216\u8005\u901a\u904e\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u627e\u5230\u5b83\uff1a`gcloud sql instances describe [INSTANCE_NAME]`\u3002\n- \u78ba\u4fdd\u60a8\u7684\u61c9\u7528\u7528\u65bc\u5c0d Cloud SQL \u8abf\u7528\u9032\u884c\u8eab\u4efd\u9a57\u8b49\u7684\u670d\u52d9\u8cec\u865f\u5177\u6709\u9069\u7576\u7684 [Cloud SQL \u89d2\u8272\u548c\u6b0a\u9650](https://cloud.google.com/sql/docs/mysql/project-access-control?hl=zh-cn#roles) \u3002\n- \u60a8\u7684\u670d\u52d9\u7684\u670d\u52d9\u8cec\u865f\u9700\u8981\u4ee5\u4e0b\u67d0\u500b [IAM \u89d2\u8272](https://cloud.google.com/iam/docs/understanding-roles?hl=zh-cn#cloud-sql-roles) \uff1a\n- `Cloud SQL Client`\uff08\u9996\u9078\uff09\n- `Cloud SQL Editor`\n- `Cloud SQL Admin`\n\u6216\u8005\uff0c\u60a8\u4e5f\u53ef\u4ee5\u624b\u52d5\u5206\u914d\u4e0b\u5217 IAM \u6b0a\u9650\uff1a- `cloudsql.instances.connect`\n- `cloudsql.instances.get`\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u5c07 IAM \u89d2\u8272\u6dfb\u52a0\u5230\u670d\u52d9\u8cec\u865f\uff0c\u8acb\u53c3\u95b1 [\u5411\u670d\u52d9\u8cec\u865f\u6388\u4e88\u89d2\u8272](https://cloud.google.com/iam/docs/granting-roles-to-service-accounts?hl=zh-cn) \u3002\n\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u61c9\u7528\u5c07\u4f7f\u7528 [App Engine \u670d\u52d9\u8cec\u865f](https://cloud.google.com/appengine/docs/standard/python3/service-account?hl=zh-cn) \u5411\u9023\u63a5\u6388\u6b0a\u3002\u670d\u52d9\u8cec\u865f\u8eab\u4efd\u7684\u683c\u5f0f\u7232 `` `@appspot.gserviceaccount.com` \u3002\u5982\u679c\u6388\u6b0a\u670d\u52d9\u8cec\u865f\u8207 Cloud SQL \u5be6\u4f8b\u5206\u8655\u4e0d\u540c\u7684\u9805\u76ee\uff0c\u5247\u9700\u8981\u7232\u9019\u5169\u500b\u9805\u76ee\u6dfb\u52a0 Cloud SQL Admin API \u548c IAM \u6b0a\u9650\u3002\n\u5982\u679c\u6388\u6b0a\u670d\u52d9\u8cec\u865f\u6240\u5c6c\u7684\u9805\u76ee\u8207\u5305\u542b Cloud SQL \u5be6\u4f8b\u7684\u9805\u76ee\u4e0d\u540c\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u5728\u9019\u5169\u500b\u9805\u76ee\u4e2d\u5553\u7528 Cloud SQL Admin API\u3002\n- \u5c0d\u65bc\u5305\u542b Cloud SQL \u5be6\u4f8b\u7684\u9805\u76ee\u4e2d\u7684\u670d\u52d9\u8cec\u865f\uff0c\u6dfb\u52a0 [IAM \u6b0a\u9650](https://cloud.google.com/sql/docs/mysql/roles-and-permissions?hl=zh-cn#serverless-roles-permissions) \u3002\u7121\u670d\u52d9\u5668 VPC \u8a2a\u554f\u901a\u9053\u9023\u63a5\u5668\u4f7f\u7528\u5c08\u7528 IP \u5730\u5740\u4f86\u8655\u7406\u8207\u60a8\u7684 VPC \u7db2\u7d61\u7684\u901a\u4fe1\u3002\u5982\u9700\u76f4\u63a5\u4f7f\u7528\u5c08\u7528 IP \u5730\u5740\u9032\u884c\u9023\u63a5\uff0c\u60a8\u5fc5\u9808\uff1a\n- \u78ba\u4fdd\u524d\u9762\u5275\u5efa\u7684 Cloud SQL \u5be6\u4f8b\u5177\u6709\u5c08\u7528 IP \u5730\u5740\u3002\u5982\u679c\u60a8\u9700\u8981\u6dfb\u52a0\u5c08\u7528 IP \u5730\u5740\uff0c\u8acb\u53c3\u95b1 [\u914d\u7f6e\u5c08\u7528 IP](https://cloud.google.com/sql/docs/postgres/configure-private-ip?hl=zh-cn) \u4f86\u67e5\u770b\u76f8\u95dc\u8aaa\u660e\u3002\n- \u5728 Cloud SQL \u5be6\u4f8b\u6240\u5728\u7684\u540c\u4e00 VPC \u7db2\u7d61\u4e2d [\u5275\u5efa](https://cloud.google.com/vpc/docs/configure-serverless-vpc-access?hl=zh-cn#creating_a_connector) \u7121\u670d\u52d9\u5668 VPC \u8a2a\u554f\u901a\u9053\u9023\u63a5\u5668\u3002\u8acb\u6ce8\u610f\u4ee5\u4e0b\u689d\u4ef6\uff1a\n- \u9664\u975e\u60a8\u4f7f\u7528 [\u5171\u4eab VPC](https://cloud.google.com/vpc/docs/configure-serverless-vpc-access?hl=zh-cn#shared-vpc) \uff0c\u5426\u5247\u9023\u63a5\u5668\u5fc5\u9808\u8207\u4f7f\u7528\u5b83\u7684\u8cc7\u6e90\u4f4d\u65bc\u540c\u4e00\u9805\u76ee\u548c\u5340\u57df\u4e2d\uff0c\u4f46\u8a72\u9023\u63a5\u5668\u53ef\u5411\u5176\u4ed6\u5340\u57df\u4e2d\u7684\u8cc7\u6e90\u767c\u9001\u6d41\u91cf\u3002\n- \u7121\u670d\u52d9\u5668 VPC \u8a2a\u554f\u901a\u9053\u652f\u6301\u8207\u4f7f\u7528 [Cloud VPN](https://cloud.google.com/vpn/docs?hl=zh-cn) \u548c [VPC \u7db2\u7d61\u5c0d\u7b49\u4e92\u9023](https://cloud.google.com/vpc/docs/using-vpc-peering?hl=zh-cn) \u9023\u63a5\u7684 VPC \u7db2\u7d61\u9032\u884c\u901a\u4fe1\u3002\n- \u7121\u670d\u52d9\u5668 VPC \u8a2a\u554f\u901a\u9053\u4e0d\u652f\u6301 [\u820a\u7248\u7db2\u7d61](https://cloud.google.com/vpc/docs/legacy?hl=zh-cn) \u3002\n- \u5c07 App Engine \u6a19\u6e96\u74b0\u5883\u914d\u7f6e\u7232\u4f7f\u7528\u8a72\u9023\u63a5\u5668\u3002\n- \u4f7f\u7528\u5be6\u4f8b\u7684\u5c08\u7528 IP \u5730\u5740\u548c\u7aef\u53e3`5432`\u9032\u884c\u9023\u63a5\u3002## \u9023\u63a5\u5230 Cloud SQL\n\u914d\u7f6e App Engine \u6a19\u6e96\u74b0\u5883\u5f8c\uff0c\u60a8\u53ef\u4ee5\u9023\u63a5\u5230 Cloud SQL \u5be6\u4f8b\u3002\n\u5c0d\u65bc\u516c\u5171 IP \u8def\u5f91\uff0cApp Engine \u6a19\u6e96\u74b0\u5883\u63d0\u4f9b\u4e86\u52a0\u5bc6\u529f\u80fd\uff0c\u4e26\u901a\u904e\u5169\u7a2e\u65b9\u5f0f\u4f7f\u7528 [Cloud SQL Auth \u4ee3\u7406](https://cloud.google.com/sql/docs/postgres/sql-proxy?hl=zh-cn) \u9032\u884c\u9023\u63a5\uff1a\n- \u901a\u904e [Unix \u5957\u63a5\u5b57](#connect-unix-socket) \n- \u4f7f\u7528 [Cloud SQL \u9023\u63a5\u5668](#connect-connectors) \n\u5c0d\u65bc\u5c08\u7528 IP \u8def\u5f91\uff0c\u60a8\u7684\u61c9\u7528\u6703\u901a\u904e VPC \u7db2\u7d61\u76f4\u63a5\u9023\u63a5\u5230\u60a8\u7684\u5be6\u4f8b\u3002\u6b64\u65b9\u6cd5\u4f7f\u7528 TCP \u76f4\u63a5\u9023\u63a5\u5230 Cloud SQL \u5be6\u4f8b\uff0c\u7121\u9700\u4f7f\u7528 Cloud SQL Auth \u4ee3\u7406\u3002\n### \u4f7f\u7528 TCP \u9023\u63a5\u4f7f\u7528\u4f5c\u7232\u4e3b\u6a5f\u7684 Cloud SQL \u5be6\u4f8b\u7684\u5c08\u7528 IP \u5730\u5740\u548c\u7aef\u53e3 `5432` \u9032\u884c\u9023\u63a5\u3002\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/python-docs-samples/tree/master/cloud-sql/postgres/sqlalchemy/README.md) \u3002\n [  cloud-sql/postgres/sqlalchemy/connect_tcp.py ](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/cloud-sql/postgres/sqlalchemy/connect_tcp.py) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/cloud-sql/postgres/sqlalchemy/connect_tcp.py) \n```\nimport osimport sslimport sqlalchemydef connect_tcp_socket() -> sqlalchemy.engine.base.Engine:\u00a0 \u00a0 \"\"\"Initializes a TCP connection pool for a Cloud SQL instance of Postgres.\"\"\"\u00a0 \u00a0 # Note: Saving credentials in environment variables is convenient, but not\u00a0 \u00a0 # secure - consider a more secure solution such as\u00a0 \u00a0 # Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 \u00a0 # keep secrets safe.\u00a0 \u00a0 db_host = os.environ[\u00a0 \u00a0 \u00a0 \u00a0 \"INSTANCE_HOST\"\u00a0 \u00a0 ] \u00a0# e.g. '127.0.0.1' ('172.17.0.1' if deployed to GAE Flex)\u00a0 \u00a0 db_user = os.environ[\"DB_USER\"] \u00a0# e.g. 'my-db-user'\u00a0 \u00a0 db_pass = os.environ[\"DB_PASS\"] \u00a0# e.g. 'my-db-password'\u00a0 \u00a0 db_name = os.environ[\"DB_NAME\"] \u00a0# e.g. 'my-database'\u00a0 \u00a0 db_port = os.environ[\"DB_PORT\"] \u00a0# e.g. 5432\u00a0 \u00a0 pool = sqlalchemy.create_engine(\u00a0 \u00a0 \u00a0 \u00a0 # Equivalent URL:\u00a0 \u00a0 \u00a0 \u00a0 # postgresql+pg8000://<db_user>:<db_pass>@<db_host>:<db_port>/<db_name>\u00a0 \u00a0 \u00a0 \u00a0 sqlalchemy.engine.url.URL.create(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 drivername=\"postgresql+pg8000\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 username=db_user,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 password=db_pass,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 host=db_host,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port=db_port,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 database=db_name,\u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 # ...\u00a0 \u00a0 )\u00a0 \u00a0 return pool\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/master/cloud-sql/postgres/servlet/README.md) \u3002\n\u6ce8\u610f\uff1a\n- CLOUD_SQL_CONNECTION_NAME \u61c9\u8868\u793a\u7232 <MY-PROJECT>:<INSTANCE-REGION>:<INSTANCE-NAME>\n- \u4f7f\u7528\u53c3\u6578 ipTypes=PRIVATE \u5c07\u5f37\u5236 SocketFactory \u8207\u5be6\u4f8b\u7684\u95dc\u806f\u5c08\u7528 IP \u9023\u63a5\n- \u5982\u9700\u67e5\u770b pom.xml \u6587\u4ef6\u7684 JDBC \u5957\u63a5\u5b57\u5de5\u5ee0\u7248\u672c\u7684\u8981\u6c42\uff0c\u8acb\u9ede\u64ca [\u6b64\u8655](https://github.com/GoogleCloudPlatform/cloud-sql-jdbc-socket-factory/blob/main/docs/jdbc-mysql.md) \u3002\n [  cloud-sql/postgres/servlet/src/main/java/com/example/cloudsql/TcpConnectionPoolFactory.java ](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/cloud-sql/postgres/servlet/src/main/java/com/example/cloudsql/TcpConnectionPoolFactory.java) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/cloud-sql/postgres/servlet/src/main/java/com/example/cloudsql/TcpConnectionPoolFactory.java) \n```\nimport com.zaxxer.hikari.HikariConfig;import com.zaxxer.hikari.HikariDataSource;import javax.sql.DataSource;public class TcpConnectionPoolFactory extends ConnectionPoolFactory {\u00a0 // Note: Saving credentials in environment variables is convenient, but not\u00a0 // secure - consider a more secure solution such as\u00a0 // Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 // keep secrets safe.\u00a0 private static final String DB_USER = System.getenv(\"DB_USER\");\u00a0 private static final String DB_PASS = System.getenv(\"DB_PASS\");\u00a0 private static final String DB_NAME = System.getenv(\"DB_NAME\");\u00a0 private static final String INSTANCE_HOST = System.getenv(\"INSTANCE_HOST\");\u00a0 private static final String DB_PORT = System.getenv(\"DB_PORT\");\u00a0 public static DataSource createConnectionPool() {\u00a0 \u00a0 // The configuration object specifies behaviors for the connection pool.\u00a0 \u00a0 HikariConfig config = new HikariConfig();\u00a0 \u00a0 // The following URL is equivalent to setting the config options below:\u00a0 \u00a0 // jdbc:postgresql://<INSTANCE_HOST>:<DB_PORT>/<DB_NAME>?user=<DB_USER>&password=<DB_PASS>\u00a0 \u00a0 // See the link below for more info on building a JDBC URL for the Cloud SQL JDBC Socket Factory\u00a0 \u00a0 // https://github.com/GoogleCloudPlatform/cloud-sql-jdbc-socket-factory#creating-the-jdbc-url\u00a0 \u00a0 // Configure which instance and what database user to connect with.\u00a0 \u00a0 config.setJdbcUrl(String.format(\"jdbc:postgresql://%s:%s/%s\", INSTANCE_HOST, DB_PORT, DB_NAME));\u00a0 \u00a0 config.setUsername(DB_USER); // e.g. \"root\", \"postgres\"\u00a0 \u00a0 config.setPassword(DB_PASS); // e.g. \"my-password\"\u00a0 \u00a0 // ... Specify additional connection properties here.\u00a0 \u00a0 // ...\u00a0 \u00a0 // Initialize the connection pool using the configuration object.\u00a0 \u00a0 return new HikariDataSource(config);\u00a0 }}\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/master/cloud-sql/postgres/knex/README.md) \u3002\n [  cloud-sql/postgres/knex/connect-tcp.js ](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/cloud-sql/postgres/knex/connect-tcp.js) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/cloud-sql/postgres/knex/connect-tcp.js) \n```\nconst Knex = require('knex');const fs = require('fs');// createTcpPool initializes a TCP connection pool for a Cloud SQL// instance of Postgres.const createTcpPool = async config => {\u00a0 // Note: Saving credentials in environment variables is convenient, but not\u00a0 // secure - consider a more secure solution such as\u00a0 // Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 // keep secrets safe.\u00a0 const dbConfig = {\u00a0 \u00a0 client: 'pg',\u00a0 \u00a0 connection: {\u00a0 \u00a0 \u00a0 host: process.env.INSTANCE_HOST, // e.g. '127.0.0.1'\u00a0 \u00a0 \u00a0 port: process.env.DB_PORT, // e.g. '5432'\u00a0 \u00a0 \u00a0 user: process.env.DB_USER, // e.g. 'my-user'\u00a0 \u00a0 \u00a0 password: process.env.DB_PASS, // e.g. 'my-user-password'\u00a0 \u00a0 \u00a0 database: process.env.DB_NAME, // e.g. 'my-database'\u00a0 \u00a0 },\u00a0 \u00a0 // ... Specify additional properties here.\u00a0 \u00a0 ...config,\u00a0 };\u00a0 // Establish a connection to the database.\u00a0 return Knex(dbConfig);};\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/golang-samples/tree/master/cloudsql/postgres/database-sql/README.md) \u3002\n [  cloudsql/postgres/database-sql/connect_tcp.go ](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/cloudsql/postgres/database-sql/connect_tcp.go) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/cloudsql/postgres/database-sql/connect_tcp.go) \n```\npackage cloudsqlimport (\u00a0 \u00a0 \u00a0 \u00a0 \"database/sql\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"log\"\u00a0 \u00a0 \u00a0 \u00a0 \"os\"\u00a0 \u00a0 \u00a0 \u00a0 // Note: If connecting using the App Engine Flex Go runtime, use\u00a0 \u00a0 \u00a0 \u00a0 // \"github.com/jackc/pgx/stdlib\" instead, since v5 requires\u00a0 \u00a0 \u00a0 \u00a0 // Go modules which are not supported by App Engine Flex.\u00a0 \u00a0 \u00a0 \u00a0 _ \"github.com/jackc/pgx/v5/stdlib\")// connectTCPSocket initializes a TCP connection pool for a Cloud SQL// instance of Postgres.func connectTCPSocket() (*sql.DB, error) {\u00a0 \u00a0 \u00a0 \u00a0 mustGetenv := func(k string) string {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 v := os.Getenv(k)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if v == \"\" {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatalf(\"Fatal Error in connect_tcp.go: %s environment variable not set.\", k)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return v\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Note: Saving credentials in environment variables is convenient, but not\u00a0 \u00a0 \u00a0 \u00a0 // secure - consider a more secure solution such as\u00a0 \u00a0 \u00a0 \u00a0 // Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 \u00a0 \u00a0 \u00a0 // keep secrets safe.\u00a0 \u00a0 \u00a0 \u00a0 var (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbUser \u00a0 \u00a0= mustGetenv(\"DB_USER\") \u00a0 \u00a0 \u00a0 // e.g. 'my-db-user'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbPwd \u00a0 \u00a0 = mustGetenv(\"DB_PASS\") \u00a0 \u00a0 \u00a0 // e.g. 'my-db-password'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbTCPHost = mustGetenv(\"INSTANCE_HOST\") // e.g. '127.0.0.1' ('172.17.0.1' if deployed to GAE Flex)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbPort \u00a0 \u00a0= mustGetenv(\"DB_PORT\") \u00a0 \u00a0 \u00a0 // e.g. '5432'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbName \u00a0 \u00a0= mustGetenv(\"DB_NAME\") \u00a0 \u00a0 \u00a0 // e.g. 'my-database'\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 dbURI := fmt.Sprintf(\"host=%s user=%s password=%s port=%s database=%s\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dbTCPHost, dbUser, dbPwd, dbPort, dbName)\u00a0 \u00a0 \u00a0 \u00a0 // dbPool is the pool of database connections.\u00a0 \u00a0 \u00a0 \u00a0 dbPool, err := sql.Open(\"pgx\", dbURI)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"sql.Open: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // ...\u00a0 \u00a0 \u00a0 \u00a0 return dbPool, nil}\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/master/cloud-sql/mysql/README.md) \u3002\n [  cloud-sql/postgres/ConnectTcp.cs ](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/cloud-sql/postgres/ConnectTcp.cs) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/cloud-sql/postgres/ConnectTcp.cs) \n```\nusing Npgsql;using System;namespace CloudSql{\u00a0 \u00a0 public class PostgreSqlTcp\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 public static NpgsqlConnectionStringBuilder NewPostgreSqlTCPConnectionString()\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Equivalent connection string:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // \"Uid=<DB_USER>;Pwd=<DB_PASS>;Host=<INSTANCE_HOST>;Database=<DB_NAME>;\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 var connectionString = new NpgsqlConnectionStringBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Note: Saving credentials in environment variables is convenient, but not\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // secure - consider a more secure solution such as\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // keep secrets safe.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Host = Environment.GetEnvironmentVariable(\"INSTANCE_HOST\"), \u00a0 \u00a0 // e.g. '127.0.0.1'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set Host to 'cloudsql' when deploying to App Engine Flexible environment\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Username = Environment.GetEnvironmentVariable(\"DB_USER\"), // e.g. 'my-db-user'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Password = Environment.GetEnvironmentVariable(\"DB_PASS\"), // e.g. 'my-db-password'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Database = Environment.GetEnvironmentVariable(\"DB_NAME\"), // e.g. 'my-database'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // The Cloud SQL proxy provides encryption between the proxy and instance.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SslMode = SslMode.Disable,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 connectionString.Pooling = true;\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Specify additional properties here.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return connectionString;\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/ruby-docs-samples/tree/master/cloud-sql/postgres/activerecord/README.md) \u3002\n [  cloud-sql/postgres/activerecord/config/database_tcp.yml ](https://github.com/GoogleCloudPlatform/ruby-docs-samples/blob/HEAD/cloud-sql/postgres/activerecord/config/database_tcp.yml) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/ruby-docs-samples/blob/HEAD/cloud-sql/postgres/activerecord/config/database_tcp.yml) \n```\ntcp: &tcp\u00a0 adapter: postgresql\u00a0 # Configure additional properties here.\u00a0 # Note: Saving credentials in environment variables is convenient, but not\u00a0 # secure - consider a more secure solution such as\u00a0 # Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 # keep secrets safe.\u00a0 username: <%= ENV[\"DB_USER\"] %> \u00a0# e.g. \"my-database-user\"\u00a0 password: <%= ENV[\"DB_PASS\"] %> # e.g. \"my-database-password\"\u00a0 database: <%= ENV.fetch(\"DB_NAME\") { \"vote_development\" } %>\u00a0 host: <%= ENV.fetch(\"INSTANCE_HOST\") { \"127.0.0.1\" }%> # '172.17.0.1' if deployed to GAE Flex\u00a0 port: <%= ENV.fetch(\"DB_PORT\") { 5432 }%>\n```\u5982\u9700\u77ad\u89e3 Web \u61c9\u7528\u74b0\u5883\u4e0b\u7684\u6b64\u4ee3\u78bc\u6bb5\uff0c\u8acb\u67e5\u770b [GitHub \u4e0a\u7684 README](https://github.com/GoogleCloudPlatform/php-docs-samples/tree/main/cloud_sql/postgres/pdo/README.md) \u3002\n [  cloud_sql/postgres/pdo/src/DatabaseTcp.php ](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/cloud_sql/postgres/pdo/src/DatabaseTcp.php) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/cloud_sql/postgres/pdo/src/DatabaseTcp.php) \n```\nnamespace Google\\Cloud\\Samples\\CloudSQL\\Postgres;use PDO;use PDOException;use RuntimeException;use TypeError;class DatabaseTcp{\u00a0 \u00a0 public static function initTcpDatabaseConnection(): PDO\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Note: Saving credentials in environment variables is convenient, but not\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // secure - consider a more secure solution such as\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Cloud Secret Manager (https://cloud.google.com/secret-manager) to help\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // keep secrets safe.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $username = getenv('DB_USER'); // e.g. 'your_db_user'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $password = getenv('DB_PASS'); // e.g. 'your_db_password'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $dbName = getenv('DB_NAME'); // e.g. 'your_db_name'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $instanceHost = getenv('INSTANCE_HOST'); // e.g. '127.0.0.1' ('172.17.0.1' for GAE Flex)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Connect using TCP\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $dsn = sprintf('pgsql:dbname=%s;host=%s', $dbName, $instanceHost);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Connect to the database\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $conn = new PDO(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $dsn,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $username,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $password,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # ...\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 } catch (TypeError $e) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 throw new RuntimeException(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sprintf(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'Invalid or missing configuration! Make sure you have set ' .\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 '$username, $password, $dbName, and $instanceHost (for TCP mode). ' .\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'The PHP error was %s',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e->getMessage()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e->getCode(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 } catch (PDOException $e) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 throw new RuntimeException(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sprintf(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'Could not connect to the Cloud SQL Database. Check that ' .\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'your username and password are correct, that the Cloud SQL ' .\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'proxy is running, and that the database exists and is ready ' .\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'for use. For more assistance, refer to %s. The PDO error was %s',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'https://cloud.google.com/sql/docs/postgres/connect-external-app',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e->getMessage()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e->getCode(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $e\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 );\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return $conn;\u00a0 \u00a0 }}\n```\n## \u6700\u4f73\u505a\u6cd5\u548c\u5176\u4ed6\u4fe1\u606f\n\u5728\u672c\u5730\u6e2c\u8a66\u61c9\u7528\u6642\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 [Cloud SQL Auth \u4ee3\u7406](https://cloud.google.com/sql/docs/postgres/sql-proxy?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u7d30\u8aaa\u660e\uff0c\u8acb\u53c3\u95b1 [\u5feb\u901f\u5165\u9580\uff1a\u4f7f\u7528 Cloud SQL Auth \u4ee3\u7406](https://cloud.google.com/sql/docs/mysql/connect-instance-auth-proxy?hl=zh-cn) \u3002\n### \u9023\u63a5\u6c60\n\u8207\u5e95\u5c64\u6578\u64da\u5eab\u7684\u9023\u63a5\u53ef\u80fd\u6703\u88ab\u6578\u64da\u5eab\u670d\u52d9\u5668\u672c\u8eab\u6216\u5e95\u5c64\u57fa\u790e\u67b6\u69cb\u65b7\u958b\u3002\u7232\u4e86\u7de9\u89e3\u6b64\u554f\u984c\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u4f7f\u7528\u652f\u6301 [\u9023\u63a5\u6c60](https://cloud.google.com/sql/docs/mysql/manage-connections?hl=zh-cn#pools) \u548c\u81ea\u52d5\u91cd\u65b0\u9023\u63a5\u7684\u5ba2\u6236\u7aef\u5eab\u3002\n### \u9023\u63a5\u9650\u5236\n\u6bcf\u500b\u5728\u6a19\u6e96\u74b0\u5883\u4e2d\u904b\u884c\u7684 App Engine \u5be6\u4f8b\u8207\u5176\u4ed6\u5be6\u4f8b\u7684 \u3002\u5c0d\u65bc PHP 5.5 \u61c9\u7528\uff0c \u3002\u6b64\u9650\u5236\u9069\u7528\u65bc\u55ae\u500b\u61c9\u7528\u5be6\u4f8b\u3002\u9019\u610f\u5473\u7740 App Engine \u61c9\u7528\u7684\u6bcf\u500b\u5be6\u4f8b\u90fd\u53ef\u4ee5\u8207\u6578\u64da\u5eab\u5efa\u7acb\u9019\u9ebc\u591a\u9023\u63a5\uff0c\u4e26\u4e14\u5728\u64f4\u5bb9\u6642\uff0c\u6bcf\u500b\u90e8\u7f72\u7684\u9023\u63a5\u7e3d\u6578\u53ef\u4ee5\u96a8\u4e4b\u589e\u52a0\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u64f4\u7e2e\u5143\u7d20](https://cloud.google.com/appengine/docs/standard/python/config/appref?hl=zh-cn#scaling_elements) \u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u9023\u63a5\u6c60\u4f86\u9650\u5236\u6bcf\u500b\u5be6\u4f8b\u4f7f\u7528\u7684\u6700\u5927\u9023\u63a5\u6578\u3002\u5982\u9700\u67e5\u770b\u6709\u95dc\u5982\u4f55\u9650\u5236\u9023\u63a5\u6578\u7684\u8a73\u7d30\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 [\u7ba1\u7406\u6578\u64da\u5eab\u9023\u63a5](https://cloud.google.com/sql/docs/mysql/manage-connections?hl=zh-cn#count) \u9801\u9762\u3002\nApp Engine \u61c9\u7528\u53d7\u8acb\u6c42\u6642\u9593\u9650\u5236\u7684\u7d04\u675f\uff0c\u5177\u9ad4\u53d6\u6c7a\u65bc\u4f7f\u7528\u60c5\u6cc1\u548c\u74b0\u5883\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1\u5be6\u4f8b\u5728 App Engine \u6a19\u6e96\u74b0\u5883 [\u6a19\u6e96](https://cloud.google.com/appengine/docs/standard/python/how-instances-are-managed?hl=zh-cn#timeout) \u548c [\u67d4\u6027\u74b0\u5883](https://cloud.google.com/appengine/docs/flexible/python/how-instances-are-managed?hl=zh-cn) \u4e2d\u7684\u7ba1\u7406\u65b9\u5f0f\u3002\n### API \u914d\u984d\u9650\u5236\nApp Engine \u63d0\u4f9b\u4e86\u4e00\u7a2e\u4f7f\u7528 Cloud SQL Auth \u4ee3\u7406\u9032\u884c\u9023\u63a5\u7684\u6a5f\u5236\uff0c\u8a72\u4ee3\u7406\u4f7f\u7528 Cloud SQL Admin API\u3002 [API \u914d\u984d\u9650\u5236](https://console.cloud.google.com/iam-admin/quotas?service=sqladmin.googleapis.com&hl=zh-cn) \u9069\u7528\u65bc Cloud SQL Auth \u4ee3\u7406\u3002Cloud SQL Admin API \u5553\u52d5\u6642\uff0c\u4f7f\u7528\u7684\u914d\u984d\u7232 2\uff0c\u4e4b\u5f8c\u5e73\u5747\u6bcf\u5c0f\u6642\u7232 2\u3002\u9ed8\u8a8d\u914d\u984d\u7232\u6bcf\u4f4d\u7528\u6236\u6bcf\u5206\u9418 180\u3002App Engine \u61c9\u7528\u9084\u53d7 [App Engine \u914d\u984d](https://cloud.google.com/appengine/docs/quotas?hl=zh-cn) \u9801\u9762\u4e0a\u6240\u8ff0\u7684\u5176\u4ed6\u914d\u984d\u548c\u9650\u5236\u7684\u7d04\u675f\u3002", "guide": "Cloud SQL"}