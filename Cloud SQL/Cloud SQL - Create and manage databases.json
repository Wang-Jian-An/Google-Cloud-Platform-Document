{"title": "Cloud SQL - Create and manage databases", "url": "https://cloud.google.com/sql/docs/postgres/create-manage-databases", "abstract": "# Cloud SQL - Create and manage databases\nThis page contains information about creating, listing, and deleting PostgreSQL databases on a Cloud SQL instance.\nA newly-created instance has a `postgres` database.\n[PostgreSQL documentation](https://www.postgresql.org/docs/current/static/managing-databases.html)\n", "content": "## Before you begin\nBefore completing the tasks on this page, you must have:\n- Created a Cloud SQL instance. For more information, see [Creating instances](/sql/docs/postgres/create-instance) .\nIf you plan to use the psql client to create or manage your databases, you must have:\n- Configured access and connected to the instance with a`psql`client. For more information about connection options, see [Connection Options for External Applications](/sql/docs/postgres/external-connection-methods) .## Create a database on the Cloud SQL instance\n**Note:** The **postgres** database is the default database you connect to before you create any other databases. After you create another database, switch to it to create tables and insert data. Don't use the **postgres** database for your application's data.The maximum length of the database name is 64 characters. For more information  on other criteria for this name, see [Identifiers and Key Words](https://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) .If you don't specify a character set and collation when you create your database, the database will have the following default values:- Character set:`UTF8`\n- Collation:`en_US.UTF8`**Note: ** You can't use the Google Cloud console to set values for the character set and collation. To set these values, use a`psql`client to create your database. For more information about using this client to create the database, refer to the contents in the **psql Client** tab.- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Select **Databases** from the SQL navigation menu.\n- Click **Create database** .\n- In the **New database** dialog, specify the name of the database.\n- Click **Create** .\n **Note: ** You can't use`gcloud`to set values for the character set and collation. To set these values, use a`psql`client to create your database. For more information about using this client to create the database, refer to the contents in the **psql Client** tab.\nFor reference information, see [gcloud sql databases create](https://cloud.google.com/sdk/gcloud/reference/sql/databases/create) .\n```\ngcloud sql databases create DATABASE_NAME \\--instance=INSTANCE_NAME \n``` **Note: ** You can't use Terraform to set values for the character set and collation. To set these values, use a`psql`client to create your database. For more information about using this client to create the database, refer to the contents in the **psql Client** tab.\nTo create a database, use a [Terraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database) .\n [  cloud_sql/postgres_database_basic/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_database_basic/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_database_basic/main.tf) \n```\nresource \"google_sql_database\" \"database\" {\n name  = \"my-database\"\n instance = google_sql_database_instance.instance.name\n}\n```To apply your Terraform configuration in a Google Cloud project, complete the steps in the following sections.## Prepare Cloud Shell\n- Launch [Cloud Shell](https://shell.cloud.google.com/) .\n- Set the default Google Cloud project  where you want to apply your Terraform configurations.You only need to run this command once per project, and you can run it in any directory.```\nexport GOOGLE_CLOUD_PROJECT=PROJECT_ID\n```Environment variables are overridden if you set explicit values in the Terraform  configuration file.\n## Prepare the directoryEach Terraform configuration file must have its own directory (also called a ).- In [Cloud Shell](https://shell.cloud.google.com/) , create a directory and a new  file within that directory. The filename must have the`.tf`extension\u2014for example`main.tf`. In this  tutorial, the file is referred to as`main.tf`.```\nmkdir DIRECTORY && cd DIRECTORY && touch main.tf\n```\n- If you are following a tutorial, you can copy the sample code in each section or step.Copy the sample code into the newly created `main.tf` .Optionally, copy the code from GitHub. This is recommended  when the Terraform snippet is part of an end-to-end solution.\n- Review and modify the sample parameters to apply to your environment.\n- Save your changes.\n- Initialize Terraform. You only need to do this once per directory.```\nterraform init\n```Optionally, to use the latest Google provider version, include the `-upgrade` option:```\nterraform init -upgrade\n```\n## Apply the changes\n- Review the configuration and verify that the resources that Terraform is going to create or  update match your expectations:```\nterraform plan\n```Make corrections to the configuration as necessary.\n- Apply the Terraform configuration by running the following command and entering`yes`at the prompt:```\nterraform apply\n```Wait until Terraform displays the \"Apply complete!\" message.\n- [Open your Google Cloud project](https://console.cloud.google.com/) to view  the results. In the Google Cloud console, navigate to your resources in the UI to make sure  that Terraform has created or updated them.\n **Note:** Terraform samples typically assume that the required APIs are enabled in your Google Cloud project.To delete your changes, do the following:- To disable deletion protection, in your Terraform configuration file set the`deletion_protection`argument to`false`.```\ndeletion_protection = \"false\"\n```\n- Apply the updated Terraform configuration by running the following command and    entering`yes`at the prompt:```\nterraform apply\n```\n- Remove resources previously applied with your Terraform configuration by running the following command and entering `yes` at the prompt:```\nterraform destroy\n```\n **Note: ** You can't use REST APIs to set values for the character set and collation. To set these values, use a`psql`client to create your database. For more information about using this client to create the database, refer to the contents in the **psql Client** tab.\nThe following request uses the [databases:insert](/sql/docs/postgres/admin-api/rest/v1/databases/insert) method to create a new database on the specified instance.\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The name of a database inside the Cloud SQL instance\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/databases\n```\nRequest JSON body:\n```\n{\n \"project\": \"project-id\",\n \"instance\": \"instance-id\",\n \"name\": \"database-name\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following: **Note: ** You can't use REST APIs to set values for the character set and collation. To set these values, use a`psql`client to create your database. For more information about using this client to create the database, refer to the contents in the **psql Client** tab.\nThe following request uses the [databases:insert](/sql/docs/postgres/admin-api/rest/v1beta4/databases/insert) method to create a new database on the specified instance.\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The name of a database inside the Cloud SQL instance\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/databases\n```\nRequest JSON body:\n```\n{\n \"project\": \"project-id\",\n \"instance\": \"instance-id\",\n \"name\": \"database-name\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:For reference information, see [CREATE DATABASE](https://www.postgresql.org/docs/current/static/sql-createdatabase.html) in the PostgreSQL documentation.\nSee the following topics in the PostgreSQL documentation for background and a list of supported character set values:- [Collation Support](https://www.postgresql.org/docs/current/static/collation.html) \n- [Character Set Support](https://www.postgresql.org/docs/current/static/multibyte.html) \n```\nCREATE DATABASE database_name\u00a0 [[ ENCODING encoding ][ LC_COLLATE lc_collate ]];\n```\nFor example: `CREATE DATABASE \"example_db\" WITH OWNER \"example_user\" ENCODING 'UTF8' LC_COLLATE = 'pl_PL.utf8' LC_CTYPE = 'pl_PL.utf8' TEMPLATE template0;` \nNote: The default template is`template1`. However, psql uses`template0`because it's the only template that accepts a specific encoding and character set. For more information, see [Template Databases](https://www.postgresql.org/docs/current/static/manage-ag-templatedbs.html) .\n## List your databases\nTo list all databases on an instance:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Click **Databases** from the left side menu. The **Databases** page lists databases along with their collation type,  character set, and database type.\nFor reference information, see [gcloud sql databases list](https://cloud.google.com/sdk/gcloud/reference/sql/databases/list) .\n```\ngcloud sql databases list \\--instance=INSTANCE_NAME\n```The following request uses the [databases:list](/sql/docs/postgres/admin-api/rest/v1/databases/list) method to list the databases for an instance.\nWhen you list the databases using the API, you see additional template databases and a system database that are not displayed by the console. You cannot delete or manage the system database.\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/databases\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:The following request uses the [databases:list](/sql/docs/postgres/admin-api/rest/v1beta4/databases/list) method to list the databases for an instance.\nWhen you list the databases using the API, you see additional template databases and a system database that are not displayed by the console. You cannot delete or manage the system database.\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/databases\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:For reference information, see [list](https://www.postgresql.org/docs/current/static/app-psql.html) .\nWhen you list the databases using the `psql` client, you see additional template databases and a system database that are not displayed by the console. You cannot delete or manage the system database.\n```\n\\l\n```\n## Delete a database\nTo delete a database on the Cloud SQL instance:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Click **Databases** from the left side menu.\n- In the database list, find the database you want to delete and click the trash can icon.\n- In the **Delete database** dialog box, enter the name of the database and then click **Delete** .\nFor reference information, see [gcloud sql databases delete](https://cloud.google.com/sdk/gcloud/reference/sql/databases/delete) .\n```\ngcloud sql databases delete DATABASE_NAME \\--instance=INSTANCE_NAME\n```The following request uses the [databases:delete](/sql/docs/postgres/admin-api/rest/v1/databases/delete) method to delete the specified database.\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The name of a database inside the Cloud SQL instance\nHTTP method and URL:\n```\nDELETE https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/databases/database-name\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:The following request uses the [databases:delete](/sql/docs/postgres/admin-api/rest/v1beta4/databases/delete) method to delete the specified database.\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The name of a database inside the Cloud SQL instance\nHTTP method and URL:\n```\nDELETE https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/databases/database-name\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:For reference information, see [DROP DATABASE](https://www.postgresql.org/docs/current/static/sql-dropdatabase.html) in the PostgreSQL documentation.\n```\nDROP DATABASE [database_name];\n```\n## What's next\n- [Manage users](/sql/docs/postgres/create-manage-users) for your instance.\n- [Import data](/sql/docs/postgres/import-export) into your instance.\n- Learn about [options for connecting to your instance using the psql client](/sql/docs/postgres/external-connection-methods) .\n- [Create a database table](https://www.postgresql.org/docs/current/static/sql-createtable.html) .", "guide": "Cloud SQL"}