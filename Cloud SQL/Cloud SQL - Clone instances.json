{"title": "Cloud SQL - Clone instances", "url": "https://cloud.google.com/sql/docs/postgres/clone-instance", "abstract": "# Cloud SQL - Clone instances\nThis page explains cloning, and describes how to clone an instance.\n", "content": "## Overview\nCloning a Cloud SQL instance creates a new instance that is a copy of the source instance. The new instance is completely independent from the source instance.\n**Note:** If there are many changes done recently on your instance, then cloning the instance might start a long-running operation.\n## Frequently asked questions\n| Question                       | Answer                                       |\n|:-------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Does cloning impact performance?                 | No. Cloning has no performance impact on the source instance.                         |\n| Are backups copied to the new instance?               | No. The new instance creates new automated backups. Manual backups are not copied over from the source instance.            |\n| Does the new instance have the same IP address or addresses?          | No. The new instance has a new IP address or addresses.                           |\n| Does the new instance have the same configuration settings?          | Yes. The new instance has the same settings such as database flags, connectivity options, machine type, and storage and memory settings.      |\n| Are replicas copied to the new instance?               | No. You need to create new replicas for the new instance.                          |\n| Can you clone a replica?                   | No. You can't clone a replica.                                 |\n| Can you make a clone from an earlier point in time?            | Yes. Point-in-time recovery uses cloning to restore an instance from an earlier point in time. This helps you recover your database from a destructive event. |\n| Are the maintenance settings of the source instance automatically copied to the clone instance? | No. You need to configure the maintenance settings for the clone instance.                      |\n| Can you clone an instance when the zone for the instance isn't available?      | Yes. When you clone an instance, you can specify a different zone for the instance.                    |\n| Can you clone a database to another project?              | No. You can't clone a database to another project.                            |\n| Can you clone an instance that was once a clone?             | Yes. You can clone an instance that was cloned from another instance.                       |\n| Are database users copied to the new instance?             | Yes, database users are copied to the new instance. Passwords for these users are also copied so they don't need to be recreated.        |\n## Clone an instance\nYou can clone a Cloud SQL instance by using the Google Cloud console, [](/sdk/gcloud)  [gcloud CLI](/sdk/gcloud) , Terraform, or the API.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Find the row of the instance to clone.\n- In the **Actions** column, click themore_vert **More Actions** menu.\n- Click **Create clone** .\n- On the **Create a clone** page, update the instance ID if needed, and click **Create clone** , leaving **Clone current state of instance** selected.You are returned to the instance listing page while the clone initializes.\nTo clone an instance, use the [gcloud sql instances clone](/sdk/gcloud/reference/sql/instances/clone) command:\n```\ngcloud sql instances clone SOURCE_INSTANCE_NAME DESTINATION_INSTANCE_NAME \\--project=PROJECT_ID\n```\nMake the following replacements:- : the name of the Cloud SQL instance to clone\n- : the name of the cloned instance\n- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the source and destination instances\nTo run the `gcloud sql instances clone` command, you must have the ` [cloudsql.instances.clone](/sql/docs/postgres/iam-roles#permissions-roles) ` permission. For more information about required permissions to run [gcloud CLI](/sdk/gcloud) commands, see [Cloud SQL permissions](/sql/docs/postgres/iam-permissions) .\n **Note: ** If you want to clone an instance that has [Private Service Connect](/sql/docs/postgres/about-private-service-connect) enabled for it, then you don't need to specify the `enable-private-service-connect` , `allowed-psc-projects` , and `no-assign-ip` flags. The cloned instance inherits these flags from the source instance.To clone the instance, use a [Terraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance) \n [  cloud_sql/postgres_instance_clone/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_clone/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_clone/main.tf) \n```\nresource \"google_sql_database_instance\" \"clone\" {\n name    = \"postgres-instance-clone-name\"\n region   = \"us-central1\"\n database_version = \"POSTGRES_12\"\n clone {\n source_instance_name = google_sql_database_instance.source.id\n }\n # set `deletion_protection` to true, will ensure that one cannot accidentally delete this instance by\n # use of Terraform whereas `deletion_protection_enabled` flag protects this instance at the GCP level.\n deletion_protection = false\n}\n```To apply your Terraform configuration in a Google Cloud project, complete the steps in the following sections.## Prepare Cloud Shell\n- Launch [Cloud Shell](https://shell.cloud.google.com/) .\n- Set the default Google Cloud project  where you want to apply your Terraform configurations.You only need to run this command once per project, and you can run it in any directory.```\nexport GOOGLE_CLOUD_PROJECT=PROJECT_ID\n```Environment variables are overridden if you set explicit values in the Terraform  configuration file.\n## Prepare the directoryEach Terraform configuration file must have its own directory (also called a ).- In [Cloud Shell](https://shell.cloud.google.com/) , create a directory and a new  file within that directory. The filename must have the`.tf`extension\u2014for example`main.tf`. In this  tutorial, the file is referred to as`main.tf`.```\nmkdir DIRECTORY && cd DIRECTORY && touch main.tf\n```\n- If you are following a tutorial, you can copy the sample code in each section or step.Copy the sample code into the newly created `main.tf` .Optionally, copy the code from GitHub. This is recommended  when the Terraform snippet is part of an end-to-end solution.\n- Review and modify the sample parameters to apply to your environment.\n- Save your changes.\n- Initialize Terraform. You only need to do this once per directory.```\nterraform init\n```Optionally, to use the latest Google provider version, include the `-upgrade` option:```\nterraform init -upgrade\n```\n## Apply the changes\n- Review the configuration and verify that the resources that Terraform is going to create or  update match your expectations:```\nterraform plan\n```Make corrections to the configuration as necessary.\n- Apply the Terraform configuration by running the following command and entering`yes`at the prompt:```\nterraform apply\n```Wait until Terraform displays the \"Apply complete!\" message.\n- [Open your Google Cloud project](https://console.cloud.google.com/) to view  the results. In the Google Cloud console, navigate to your resources in the UI to make sure  that Terraform has created or updated them.\n **Note:** Terraform samples typically assume that the required APIs are enabled in your Google Cloud project.To delete your changes, do the following:- To disable deletion protection, in your Terraform configuration file set the`deletion_protection`argument to`false`.```\ndeletion_protection = \"false\"\n```\n- Apply the updated Terraform configuration by running the following command and    entering`yes`at the prompt:```\nterraform apply\n```\n- Remove resources previously applied with your Terraform configuration by running the following command and entering `yes` at the prompt:```\nterraform destroy\n```\nBefore using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the source and destination instances\n- : the name of the Cloud SQL instance to clone\n- : the name of the cloned instance\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/SOURCE_INSTANCE_NAME/clone\n```\nRequest JSON body:\n```\n{\n \"cloneContext\":\n {\n \"destinationInstanceName\": \"DESTINATION_INSTANCE_NAME\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:To use the [instances.clone](/sql/docs/postgres/admin-api/rest/v1/instances/clone) API method, you must have the ` [cloudsql.instances.clone](/sql/docs/postgres/iam-roles#permissions-roles) ` permission. For more information about required permissions to use API methods, see [Cloud SQL permissions](/sql/docs/postgres/iam-permissions) .\n **Note: ** If you want to clone an instance that has [Private Service Connect](/sql/docs/postgres/about-private-service-connect) enabled for it, then you don't need to specify the `allowedConsumerProjects` and `pscEnabled` flags. The cloned instance inherits these flags from the source instance.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the source and destination instances\n- : the name of the Cloud SQL instance to clone\n- : the name of the cloned instance\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/SOURCE_INSTANCE_NAME/clone\n```\nRequest JSON body:\n```\n{\n \"cloneContext\":\n {\n \"destinationInstanceName\": \"DESTINATION_INSTANCE_NAME\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:To use the [instances.clone](/sql/docs/postgres/admin-api/rest/v1beta4/instances/clone) API method, you must have the ` [cloudsql.instances.clone](/sql/docs/postgres/iam-roles#permissions-roles) ` permission. For more information about required permissions to use API methods, see [Cloud SQL permissions](/sql/docs/postgres/iam-permissions) .\n **Note: ** If you want to clone an instance that has [Private Service Connect](/sql/docs/postgres/about-private-service-connect) enabled for it, then you don't need to specify the `allowedConsumerProjects` and `pscEnabled` flags. The cloned instance inherits these flags from the source instance.\n## Clone an unavailable instance\nClone an [instance that isn't available](/sql/docs/postgres/backup-recovery/restore#pitr-instance-not-available) to a different zone because of the following reasons:- The current zone in which the instance is configured isn't accessible. This instance has a`FAILED`state.\n- The instance is undergoing maintenance. This instance has a`MAINTENANCE`state.\nTo clone an unavailable instance, complete the following steps:- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Find the row of the instance to clone.\n- In the **Actions** column, click themore_vert **More Actions** menu.\n- Click **Create clone** .\n- On the **Create a clone** page, complete the following actions:- In the **Instance ID** field, update the instance ID, if needed.\n- Click **Clone from an earlier point in time** .\n- In the **Point in time** field, select a date and time from which you want to clone data. This recovers the state of the instance from that point in time.\n- Click **Create clone** .\n- While the clone initializes, you're returned to the instance listing page.\nClone an [instance that isn't available](/sql/docs/postgres/backup-recovery/restore#pitr-instance-not-available) to a different zone because the current zone in which the instance is configured isn't accessible.\n```\ngcloud sql instances clone SOURCE_INSTANCE_NAME TARGET_INSTANCE_NAME \\--point-in-time DATE_AND_TIME_STAMP \\--preferred-zone ZONE_NAME\n```\nThe user or service account that's running the `gcloud sql instances clone` command must have the `cloudsql.instances.clone` permission. For more information about required permissions to run [gcloud CLI](/sdk/gcloud) commands, see [Cloud SQL permissions](/sql/docs/postgres/iam-permissions) .Clone an [instance that isn't available](/sql/docs/postgres/backup-recovery/restore#pitr-instance-not-available) to a different zone because the current zone in which the instance is configured isn't accessible.\nBefore using any of the request data, make the following replacements:- : the project ID.\n- : the name of the source instance.\n- : the name of the target (cloned) instance.\n- : a date-and-time stamp for the source instance in the [UTC time zone](https://www.timeanddate.com/time/zone/timezone/utc) and in the [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339) format (for example,`2012-11-15T16:19:00.094Z`).\n- : Optional. The zone name for the target instance. This is used to specify a different zone for the Cloud SQL instance that you want to clone. For a regional instance, this zone replaces the primary zone, but the secondary zone remains the same as the instance.\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/SOURCE_INSTANCE_NAME/clone\n```\nRequest JSON body:\n```\n{\n \"cloneContext\":\n {\n \"destinationInstanceName\": \"TARGET_INSTANCE_NAME\",\n \"pointInTime\": \"DATE_AND_TIME_STAMP\",\n \"preferredZone\": \"ZONE_NAME\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:The user or service account that's using the [instances.clone](/sql/docs/postgres/admin-api/rest/v1beta4/instances/clone) API method must have the `cloudsql.instances.clone` permission. For more information about required permissions to use API methods, see [Cloud SQL permissions](/sql/docs/postgres/iam-permissions) .Clone an [instance that isn't available](/sql/docs/postgres/backup-recovery/restore#pitr-instance-not-available) to a different zone because the current zone in which the instance is configured isn't accessible.\nBefore using any of the request data, make the following replacements:- : the project ID.\n- : the name of the source instance.\n- : the name of the target (cloned) instance.\n- : a date-and-time stamp for the source instance in  the [UTC time zone](https://www.timeanddate.com/time/zone/timezone/utc) and in the [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339) format (for example,`2012-11-15T16:19:00.094Z`).\n- : Optional. The zone name for the target instance. This is used to specify a different zone for the Cloud SQL instance that you want to clone. For a regional instance, this zone replaces the primary zone, but the secondary zone remains the same as the instance.\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/SOURCE_INSTANCE_NAME/clone\n```\nRequest JSON body:\n```\n{\n \"cloneContext\":\n {\n \"destinationInstanceName\": \"TARGET_INSTANCE_NAME\",\n \"pointInTime\": \"DATE_AND_TIME_STAMP\",\n \"preferredZone\": \"ZONE_NAME\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:The user or service account that's using the [instances.clone](/sql/docs/postgres/admin-api/rest/v1beta4/instances/clone) API method must have the `cloudsql.instances.clone` permission. For more information about required permissions to use API methods, see [Cloud SQL permissions](/sql/docs/postgres/iam-permissions) .\n## Clone an instance that uses an internal IP address\nIf your Cloud SQL instance uses an internal IP address, you can optionally specify an [allocated IP range](/vpc/docs/configure-private-services-access#listing_allocated_ip_address_ranges) for the clone's new IP address. For example, `google-managed-services-default` .\nClone the instance, optionally specifying the allocated IP range you  want to use:\n```\ngcloud sql instances clone SOURCE_INSTANCE_NAME TARGET_INSTANCE_NAME \\--allocated-ip-range-name ALLOCATED_IP_RANGE_NAME\n```\nThe user or service account that's running the `gcloud sql instances clone` command must have the `cloudsql.instances.clone` permission. For more information about required permissions to run [gcloud CLI](/sdk/gcloud) commands, see [Cloud SQL permissions](/sql/docs/postgres/iam-permissions) .Clone the instance, optionally specifying the allocated IP range you  want to use:\nBefore using any of the request data, make the following replacements:- : the project ID\n- : the source instance ID\n- : the target instance ID\n- : the name of an allocated IP range\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances/source-instance-id/clone\n```\nRequest JSON body:\n```\n{\n \"cloneContext\":\n {\n \"destinationInstanceName\": \"target-instance-id\",\n \"allocatedIpRange\": \"allocated-ip-range-name\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:The user or service account that's using the [instances.clone](/sql/docs/postgres/admin-api/rest/v1beta4/instances/clone) API method must have the `cloudsql.instances.clone` permission. For more information about required permissions to use API methods, see [Cloud SQL permissions](/sql/docs/postgres/iam-permissions) .Clone the instance, optionally specifying the allocated IP range you  want to use:\nBefore using any of the request data, make the following replacements:- : the project ID\n- : the source instance ID\n- : the target instance ID\n- : the name of an allocated IP range\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/source-instance-id/clone\n```\nRequest JSON body:\n```\n{\n \"cloneContext\":\n {\n \"destinationInstanceName\": \"target-instance-id\",\n \"allocatedIpRange\": \"allocated-ip-range-name\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:The user or service account that's using the [instances.clone](/sql/docs/postgres/admin-api/rest/v1beta4/instances/clone) API method must have the `cloudsql.instances.clone` permission. For more information about required permissions to use API methods, see [Cloud SQL permissions](/sql/docs/postgres/iam-permissions) .\nIf you don't specify an allocated IP range, the following behavior is applied:\n- If the source instance was created with a specified range, the cloned instance is created in the same range.\n- If the source instance was not created with a specified range, the cloned instance is created in a random range.## Troubleshoot\n| Issue                                            | Troubleshooting                                                                                                               |\n|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Cloning fails with constraints/sql.restrictAuthorizedNetworks error.                            | The cloning operation is blocked by the Authorized Networks configuration. Authorized Networks are configured for public IP addresses in the Connectivity section of the Google Cloud console, and cloning is not permitted due to security considerations. Remove all Authorized Networks entries from the Cloud SQL instance if you can. Otherwise, create a replica without any Authorized Networks entries.              |\n| Error message: Failed to create subnetwork. Couldn't find free blocks in allocated IP ranges. Please allocate new ranges for this service provider. Help Token: [help-token-id]. | You're trying to use the Google Cloud console to clone an instance with a private IP address, but you didn't specify the allocated IP range that you want to use and the source instance isn't created with the specified range. As a result, the cloned instance is created in a random range. Use gcloud to clone the instance and provide a value for the --allocated-ip-range-name parameter. For more information, see Cloning an instance with a private IP. |", "guide": "Cloud SQL"}