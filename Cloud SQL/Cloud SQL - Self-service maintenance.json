{"title": "Cloud SQL - Self-service maintenance", "url": "https://cloud.google.com/sql/docs/postgres/self-service-maintenance", "abstract": "# Cloud SQL - Self-service maintenance\nThis page describes self-service maintenance, which lets you accept a maintenance update on your instance outside of the normal flow of scheduled maintenance.\n", "content": "## Overview\nCloud SQL regularly releases software improvements, such as patches for known vulnerabilities, through new maintenance versions. While Cloud SQL schedules maintenance updates once every few months to ensure you have the latest maintenance version, you might want to use self-service maintenance if:\n- You need an update sooner than your next scheduled maintenance event.\n- You want to catch up to the latest maintenance version after skipping your most recent scheduled maintenance event.\nYou're not required to manually update to the latest version. You can let Cloud SQL automatically update your maintenance version during your next scheduled maintenance event.\n### Manage maintenance on all read replicas of a primary instance\nWhen you perform self-service maintenance on a primary instance that has [read replicas](/sql/docs/postgres/replication#read-replicas) , Cloud SQL automatically applies the maintenance update to all its read replicas. If you have more than three read replica instances, then the instances are divided into groups and updated in parallel. As the final step, the maintenance update is applied to the primary instance.\nIf necessary, you can still perform self-service maintenance on a single read replica. However, to ensure that all read replica instances and the primary instance operate on the same maintenance version, we recommend that you perform self-service maintenance on all the read replicas of a primary instance at the same time.\nTo update a single read replica instance, specify that read replica instance when you perform self-service maintenance.\n## Before you begin\nBefore you perform self-service maintenance, first check the current maintenance version. Then you can [determine the targetmaintenance version](#determine-target-maintenance-version) that you want to update to and [update the instance](#update-single-instance) to that version. If you use read replicas, then [update all the read replicas of the primary instance](#update-all-read-replica-instances) to that version.\nTo see the current maintenance version of an instance, use the following procedure:\nBefore you run the following `gcloud` command, make the following  replacement:- : The instance to query\n```\ngcloud sql instances describe INSTANCE_ID\u00a0 \n```\nThe maintenance version that is installed on the instance is indicated next to the `maintenanceVersion` attribute.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#instance\",\n \"state\": \"RUNNABLE\",\n \"databaseVersion\": \"POSTGRES_13\"\n}\n```\nLook for the `maintenanceVersion` item in the `DatabaseInstance` section of the response.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#instance\",\n \"state\": \"RUNNABLE\",\n \"databaseVersion\": \"POSTGRES_13\"\n}\n```\nLook for the `maintenanceVersion` item in the `DatabaseInstance` section of the response.\n## Determine the target maintenance version\nUse the following method to view the maintenance versions you can select as your target. You can't update to a version earlier than the current maintenance version.\nBefore you run the following `gcloud` command, make the following  replacement:- : The instance to query\n```\ngcloud sql instances describe INSTANCE_ID\u00a0 \n```\nThe available maintenance version is indicated next to the `availableMaintenanceVersions` attribute.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#instance\",\n \"state\": \"RUNNABLE\",\n \"databaseVersion\": \"POSTGRES_13\"\n}\n```\nLook for the `availableMaintenanceVersions` item in the `DatabaseInstance` section of the response.Before using any of the request data, make the following replacements:- : the ID or [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project that contains the instance\n- : the name of the instance that you're configuring for high availability\nHTTP method and URL:\n```\nGET https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_NAME\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#instance\",\n \"state\": \"RUNNABLE\",\n \"databaseVersion\": \"POSTGRES_13\"\n}\n```\nLook for the `availableMaintenanceVersions` item in the `DatabaseInstance` section of the response.\n## Update all read replicas of a primary instance to the target maintenance version\nTo perform a maintenance update on all read replica instances of a primary instance, use the following procedure.\n**Note:** After you update an instance to the latest maintenance version, you can't revert to an earlier version.\nBefore using the following `gcloud` command, make the following  replacement:- : The ID of the primary instance\n- : The Cloud SQL maintenance version to apply\n```\ngcloud sql instances patch PRIMARY_INSTANCE_ID \\\u00a0 \u00a0--maintenance-version=MAINTENANCE_VERSION\u00a0 \n```\nAt the prompt for confirmation, type `Y` to continue, or  type `N` to cancel.\nIf you select `Y` , then the update process applies the specified maintenance version to all read replicas first before updating the primary instance. Any read replica instances that have already been updated to the target maintenance version are skipped.\nIf you select `N` , then no instances are updated.\nAfter the update of the read replicas and the primary instance completes, a message similar to the following appears:\n```\n Patching Cloud SQL instance....done.\n Patching Cloud SQL instance....done.\n Patching Cloud SQL instance....done.\n Updated [https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/PRIMARY_INSTANCE_ID]\n \n```To create an instance, use a [Terraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance) .\n [  cloud_sql/postgres_instance_ssm/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_ssm/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_ssm/main.tf) \n```\nresource \"google_sql_database_instance\" \"postgres_ssm_instance_name\" {\n name    = \"postgres-ssm-instance-name\"\n region    = \"asia-northeast1\"\n database_version = \"POSTGRES_14\"\n maintenance_version = \"POSTGRES_14_4.R20220710.01_07\"\n settings {\n tier = \"db-f1-micro\"\n }\n # set `deletion_protection` to true, will ensure that one cannot accidentally delete this instance by\n # use of Terraform whereas `deletion_protection_enabled` flag protects this instance at the GCP level.\n deletion_protection = false\n}\n```To apply your Terraform configuration in a Google Cloud project, complete the steps in the following sections.## Prepare Cloud Shell\n- Launch [Cloud Shell](https://shell.cloud.google.com/) .\n- Set the default Google Cloud project  where you want to apply your Terraform configurations.You only need to run this command once per project, and you can run it in any directory.```\nexport GOOGLE_CLOUD_PROJECT=PROJECT_ID\n```Environment variables are overridden if you set explicit values in the Terraform  configuration file.\n## Prepare the directoryEach Terraform configuration file must have its own directory (also called a ).- In [Cloud Shell](https://shell.cloud.google.com/) , create a directory and a new  file within that directory. The filename must have the`.tf`extension\u2014for example`main.tf`. In this  tutorial, the file is referred to as`main.tf`.```\nmkdir DIRECTORY && cd DIRECTORY && touch main.tf\n```\n- If you are following a tutorial, you can copy the sample code in each section or step.Copy the sample code into the newly created `main.tf` .Optionally, copy the code from GitHub. This is recommended  when the Terraform snippet is part of an end-to-end solution.\n- Review and modify the sample parameters to apply to your environment.\n- Save your changes.\n- Initialize Terraform. You only need to do this once per directory.```\nterraform init\n```Optionally, to use the latest Google provider version, include the `-upgrade` option:```\nterraform init -upgrade\n```\n## Apply the changes\n- Review the configuration and verify that the resources that Terraform is going to create or  update match your expectations:```\nterraform plan\n```Make corrections to the configuration as necessary.\n- Apply the Terraform configuration by running the following command and entering`yes`at the prompt:```\nterraform apply\n```Wait until Terraform displays the \"Apply complete!\" message.\n- [Open your Google Cloud project](https://console.cloud.google.com/) to view  the results. In the Google Cloud console, navigate to your resources in the UI to make sure  that Terraform has created or updated them.\n **Note:** Terraform samples typically assume that the required APIs are enabled in your Google Cloud project.To delete your changes, do the following:- To disable deletion protection, in your Terraform configuration file set the`deletion_protection`argument to`false`.```\ndeletion_protection = \"false\"\n```\n- Apply the updated Terraform configuration by running the following command and    entering`yes`at the prompt:```\nterraform apply\n```\n- Remove resources previously applied with your Terraform configuration by running the following command and entering `yes` at the prompt:```\nterraform destroy\n```\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID of the primary instance\n- : The Cloud SQL software maintenance version to apply\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_ID\n```\nRequest JSON body:\n```\n{\n \"maintenanceVersion\": \"MAINTENANCE_VERSION\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_ID\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"startTime\": \"08:00\",\n \"endTime\": \"08:01\",\n \"operationType\": UPDATE,\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"PRIMARY_INSTANCE_ID\",\n \"selfLink\": \"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID of the primary instance\n- : The Cloud SQL software maintenance version to apply\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_ID\n```\nRequest JSON body:\n```\n{\n \"maintenanceVersion\": \"MAINTENANCE_VERSION\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_ID\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"startTime\": \"08:00\",\n \"endTime\": \"08:01\",\n \"operationType\": UPDATE,\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"INSTANCE_ID\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\n## Update a single instance to the target maintenance version\nTo perform a maintenance update on a single instance, use the following procedure. If necessary, you can use this procedure to update a single read replica instance.\n**Note:** After you update an instance to the latest maintenance version, you can't revert to an earlier version.\nBefore using the following `gcloud` command, make the following  replacements:- : The ID of the instance. This instance can be a  read replica instance.\n- : The Cloud SQL maintenance version to apply\n```\n\u00a0 gcloud sql instances patch INSTANCE_ID \\\u00a0 \u00a0 \u00a0--maintenance-version=MAINTENANCE_VERSION\u00a0 \n```\nIf you specify a read replica, then a prompt for confirmation appears. Type `Y` to continue or `N` to cancel.- If you select`Y`, then the update process applies the specified maintenance version only to the specified read replica.\n- If you select`N`, then no instances are updated.\nAfter the update of the instance completes, a message similar to the following appears:\n```\n Patching Cloud SQL instance....done.\n Updated [https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_ID]\n \n```To create an instance, use a [Terraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance) .\n [  cloud_sql/postgres_instance_ssm/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_ssm/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/cloud_sql/postgres_instance_ssm/main.tf) \n```\nresource \"google_sql_database_instance\" \"postgres_ssm_instance_name\" {\n name    = \"postgres-ssm-instance-name\"\n region    = \"asia-northeast1\"\n database_version = \"POSTGRES_14\"\n maintenance_version = \"POSTGRES_14_4.R20220710.01_07\"\n settings {\n tier = \"db-f1-micro\"\n }\n # set `deletion_protection` to true, will ensure that one cannot accidentally delete this instance by\n # use of Terraform whereas `deletion_protection_enabled` flag protects this instance at the GCP level.\n deletion_protection = false\n}\n```To apply your Terraform configuration in a Google Cloud project, complete the steps in the following sections.## Prepare Cloud Shell\n- Launch [Cloud Shell](https://shell.cloud.google.com/) .\n- Set the default Google Cloud project  where you want to apply your Terraform configurations.You only need to run this command once per project, and you can run it in any directory.```\nexport GOOGLE_CLOUD_PROJECT=PROJECT_ID\n```Environment variables are overridden if you set explicit values in the Terraform  configuration file.\n## Prepare the directoryEach Terraform configuration file must have its own directory (also called a ).- In [Cloud Shell](https://shell.cloud.google.com/) , create a directory and a new  file within that directory. The filename must have the`.tf`extension\u2014for example`main.tf`. In this  tutorial, the file is referred to as`main.tf`.```\nmkdir DIRECTORY && cd DIRECTORY && touch main.tf\n```\n- If you are following a tutorial, you can copy the sample code in each section or step.Copy the sample code into the newly created `main.tf` .Optionally, copy the code from GitHub. This is recommended  when the Terraform snippet is part of an end-to-end solution.\n- Review and modify the sample parameters to apply to your environment.\n- Save your changes.\n- Initialize Terraform. You only need to do this once per directory.```\nterraform init\n```Optionally, to use the latest Google provider version, include the `-upgrade` option:```\nterraform init -upgrade\n```\n## Apply the changes\n- Review the configuration and verify that the resources that Terraform is going to create or  update match your expectations:```\nterraform plan\n```Make corrections to the configuration as necessary.\n- Apply the Terraform configuration by running the following command and entering`yes`at the prompt:```\nterraform apply\n```Wait until Terraform displays the \"Apply complete!\" message.\n- [Open your Google Cloud project](https://console.cloud.google.com/) to view  the results. In the Google Cloud console, navigate to your resources in the UI to make sure  that Terraform has created or updated them.\n **Note:** Terraform samples typically assume that the required APIs are enabled in your Google Cloud project.To delete your changes, do the following:- To disable deletion protection, in your Terraform configuration file set the`deletion_protection`argument to`false`.```\ndeletion_protection = \"false\"\n```\n- Apply the updated Terraform configuration by running the following command and    entering`yes`at the prompt:```\nterraform apply\n```\n- Remove resources previously applied with your Terraform configuration by running the following command and entering `yes` at the prompt:```\nterraform destroy\n```\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID, which can be a read replica instance\n- : The Cloud SQL software maintenance version to apply\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_ID\n```\nRequest JSON body:\n```\n{\n \"maintenanceVersion\": \"MAINTENANCE_VERSION\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/instances/INSTANCE_ID\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"startTime\": \"08:00\",\n \"endTime\": \"08:01\",\n \"operationType\": UPDATE,\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"PRIMARY_INSTANCE_ID\",\n \"selfLink\": \"https://sqladmin.googleapis.com/v1/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\nBefore using any of the request data, make the following replacements:- : The project ID\n- : The instance ID, which can be a  read replica instance\n- : The Cloud SQL software maintenance version to apply\nHTTP method and URL:\n```\nPATCH https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_ID\n```\nRequest JSON body:\n```\n{\n \"maintenanceVersion\": \"MAINTENANCE_VERSION\"\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n```\n{\n \"kind\": \"sql#operation\",\n \"targetLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/instances/INSTANCE_ID\",\n \"status\": \"PENDING\",\n \"user\": \"user@example.com\",\n \"insertTime\": \"2020-01-16T02:32:12.281Z\",\n \"startTime\": \"08:00\",\n \"endTime\": \"08:01\",\n \"operationType\": UPDATE,\n \"name\": \"OPERATION_ID\",\n \"targetId\": \"INSTANCE_ID\",\n \"selfLink\": \"https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT_ID/operations/OPERATION_ID\",\n \"targetProject\": \"PROJECT_ID\"\n}\n```\n## Troubleshoot\n| Issue                    | Troubleshooting                                                                  |\n|:-----------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Can't apply maintenance update to a stopped instance.        | To resolve, start the instance before you perform the self-service maintenance update.                                                |\n| Due to a difference in the database major version, the maintenance update failed. | You can't use self-service maintenance to upgrade the database major version of an instance. To upgrade the major version of an instance, use one of the following procedures: Upgrade the database major version in-place Upgrade the database major version by migrating data |\n## What's next\n- View [instance operations logs](/sql/docs/postgres/logging#logs) .\n- Read the [Maintenance FAQ](/sql/docs/postgres/maintenance#maintenance_faq) .\n- Learn more about [replication in Cloud SQL](/sql/docs/postgres/replication) .", "guide": "Cloud SQL"}