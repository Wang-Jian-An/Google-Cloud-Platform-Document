{"title": "Cloud SQL - Connect to Cloud SQL for MySQL from Cloud Functions", "url": "https://cloud.google.com/sql/docs/mysql/connect-instance-cloud-functions", "abstract": "# Cloud SQL - Connect to Cloud SQL for MySQL from Cloud Functions\n# Connect to Cloud SQL for MySQL from Cloud Functions\nLearn how to deploy a sample app on [Cloud Functions](/functions/docs) connected to a MySQL instance by using the Google Cloud console and a client application.\nAssuming that you complete all the steps in a timely manner, the resources created in this quickstart typically cost less than one dollar (USD).", "content": "## Before you begin **Note:** The name you use for your project must be between 4 and 30 characters. When you type the name, the form suggests a project ID, which you can edit. The project ID must be between 6 and 30 characters, with a lowercase letter as the first character. You can use a dash, lowercase letter, or digit for the remaining characters, but the last character cannot be a dash.- Enable the Cloud APIs necessary to run a Cloud SQL sample app on Cloud Functions.\nClick **Enable APIs** to enable the APIs required for this quickstart.\n [Enable APIs](https://console.cloud.google.com/flows/enableapi?apiid=cloudfunctions,sqladmin.googleapis.com,run.googleapis.com,cloudbuild.googleapis.com,artifactregistry.googleapis.com,eventarc.googleapis.com,compute.googleapis.com,servicenetworking.googleapis.com,pubsub.googleapis.com,logging.googleapis.com) \nThis enables the following APIs:- Cloud Functions API\n- Cloud SQL Admin API\n- Cloud Run Admin API\n- Cloud Build API\n- Artifact Registry API\n- Eventarc API\n- Compute Engine API\n- Service Networking API\n- Cloud Logging API\nClick the following button to open Cloud Shell, which provides   command-line access to your Google Cloud resources directly from the browser.   Cloud Shell can be used to run the `gcloud` commands presented throughout this quickstart.\n [Open Cloud Shell](/console/sql/instances?cloudshell=true) \nRun the following `gcloud` command using Cloud Shell:\n```\ngcloud services enable cloudfunctions.googleapis.com sqladmin.googleapis.com run.googleapis.com cloudbuild.googleapis.com artifactregistry.googleapis.com eventarc.googleapis.com compute.googleapis.com servicenetworking.googleapis.com pubsub.googleapis.com logging.googleapis.com\n```\nThis command enables the following APIs:- Cloud Functions API\n- Cloud SQL Admin API\n- Cloud Run API\n- Cloud Build API\n- Artifact Registry API\n- Eventarc API\n- Compute Engine API\n- Service Networking API\n- Cloud Logging API\n- Add the **Cloud Functions Invoker** IAM role to your user. [Add the role](https://console.cloud.google.com/iam-admin/iam) \n## Set up Cloud SQL\n### Create a Cloud SQL instance\n### Create a database- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Select`quickstart-instance`.\n- From the SQL navigation menu, select **Databases** .\n- Click **Create database** .\n- In the **Database name** field of the **Create a database** dialog  box, enter`quickstart-db`. Leave the values for the character set and collation.\n- Click **Create** .Run the [gcloud sql databases create](/sdk/gcloud/reference/sql/databases/create) command to create a database.\n```\ngcloud sql databases create quickstart-db --instance=quickstart-instance\n```\n### Create a user- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- From the SQL navigation menu, select **Users** .\n- Click **Add user account** .\n- In the **Add a user account** page for the,   add the following information:- In the **Username** field, enter`quickstart-user`.\n- In the **Password** field, specify a password for your database user.    Make a note of this for use in a later step of this quickstart.\n- Click **Add** .\nBefore running the following command, make the following replacements:- with a password for your database user.    Make a note of this for use in a later step of this quickstart.\nRun the [gcloud sql users create](/sdk/gcloud/reference/sql/users/create) command to create the user.\n```\ngcloud sql users create quickstart-user \\--instance=quickstart-instance \\--password=DB_PASS\n```\nUser name length limits are the same for Cloud SQL as for on-premises MySQL; 32 characters for MySQL 8.0, 16 characters for earlier versions.\n## Configure a Cloud Functions service account\nConfigure the service account used by Cloud Functions so that it has the **Cloud SQL Client** role with permissions to connect to Cloud SQL.- In the Google Cloud console, go to the **IAM** page. [Go to IAM](https://console.cloud.google.com/iam-admin/iam) \n- For the service account named **Compute Engine default service account** ,    click the pencil icon.\n- **Note:** The name of the service account appears     in the **Name** column. This column is next to the identifier of the     service account (in the **Principal** column). The identifier is     typically an email address.\n- Click **ADD ANOTHER ROLE** .\n- Add the **Role** named **Cloud SQL Client** .\n- Click **Save** .\n- Run the following`gcloud`command to get a list of    your project's service accounts:```\ngcloud iam service-accounts list\n```\n- Copy the **EMAIL** of the **Compute Engine service account** .\n- Run the following command to add the **Cloud SQL Client** role to **Compute Engine service account** :```\ngcloud projects add-iam-policy-binding YOUR_PROJECT_ID \\\u00a0 --member=\"serviceAccount:SERVICE_ACCOUNT_EMAIL\" \\\u00a0 --role=\"roles/cloudsql.client\"\n```\n## Create a function\n- In the Google Cloud console, go to the **Cloud Functions** page. [Go to Cloud Functions](https://console.cloud.google.com/functions) \n- Click **Create function** .\n- For the **Environment** , select **2nd gen** .\n- In the **Function name** field, enter`quickstart-function`.\n- In the **Authentication** region, select **Allow unauthenticated invocations** .\n- Click **Next** .\n- From the **Runtime** menu, select one of the following languages:\n- | Language | Version number |\n|:-----------|-----------------:|\n| Go   |    1.2 |\n| Java  |    17 |\n| Node.js |    18 |\n| Python  |    3.1 |\n- In the **Source code** menu, verify that the **Inline editor** is selected.  In this step, you use the default function provided in the editor.\n## Deploy the function\n- At the bottom of the Cloud Functions page, click **Deploy** . The  Google Cloud console redirects you to the function's details page.\n- When the function deployment is complete, click the **URL** link to see  a web browser displaying the message`Hello, World!`.\n## Deploy the Cloud SQL sample app as a function\nYou configure and deploy the Cloud SQL sample app as a function in Cloud Functions. First, you use Cloud Shell to configure and build the sample app. Then, you use Cloud Functions to deploy the sample app.\nThere are two ways to configure, build, and deploy the app depending on if you created a Cloud SQL for MySQL instance with a Public IP or a Private IP.\n### Configure a Cloud SQL sample app\n### Deploy the sample appThe steps to deploy the sample to Cloud Functions depend on the type of IP address you assigned to your Cloud SQL instance.\n## Clean upTo avoid incurring charges to your Google Cloud account for   the resources used on this page, follow these steps.- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- Select the`quickstart-instance`instance to open the **Instance details** page.\n- In the icon bar at the top of the page, click **Delete** .\n- In the **Delete instance** dialog box, type`quickstart-instance`, and then click **Delete** to delete the instance.\n- In the Google Cloud console, go to the **Cloud Functions** page. [Go to Cloud Functions](https://console.cloud.google.com/functions) \n- Select the checkbox next to the`quickstart-function`service name.\n- Click **Delete** at the top of the Cloud Functions page.\n### Optional cleanup stepsIf you're not using the **Cloud SQL client** role that you assigned to the Compute Engine service account, you can remove it.- In the Google Cloud console, go to the **IAM** page. [Go to IAM](https://console.cloud.google.com/iam-admin/iam) \n- Click the edit icon (which looks like a pencil) for the IAM account named **Compute Engine default service account** .\n- Delete the **Cloud SQL client** role.\n- Click **Save** .\nIf you're not using the APIs that were enabled as part of this quickstart, you can disable them.- APIs that were enabled within this quickstart:- Compute Engine API\n- Cloud SQL Admin API\n- Cloud Run API\n- Container Registry API\n- Cloud Build API- In the Google Cloud console, go to the **APIs** page. [Go to APIs](https://console.cloud.google.com/apis) \n- Select any API that you would like to disable and then click the **Disable API** button.\n## What's next\nBased on your needs, you can learn more about\n [creating Cloud SQL instances](/sql/docs/mysql/create-instance) \n.\nYou also can learn about creating [MySQL users](/sql/docs/mysql/create-manage-users#creating) and [databases](/sql/docs/mysql/create-manage-databases#create) for your Cloud SQL instance.\nFor more information about pricing, see [Cloud SQL for MySQL pricing](/sql/docs/mysql/pricing) .\nLearn more about:- Configuring your Cloud SQL instance with a [public IP](/sql/docs/mysql/configure-ip) address.\n- Configuring your Cloud SQL instance with a [private IP](/sql/docs/mysql/configure-private-ip) address.\nAdditionally, you can learn about connecting to a Cloud SQL instance from other Google Cloud applications:- [From an application running on App Engine standard environment](/sql/docs/mysql/connect-app-engine) \n- [From an application running on Compute Engine](/sql/docs/mysql/connect-compute-engine) \n- [From an application running on GKE](/sql/docs/mysql/connect-kubernetes-engine) \n- [From Cloud Functions](/sql/docs/mysql/connect-functions)", "guide": "Cloud SQL"}