{"title": "Cloud SQL - Use a custom import to set up replication from large external databases", "url": "https://cloud.google.com/sql/docs/mysql/replication/custom-import-replication-from-external", "abstract": "# Cloud SQL - Use a custom import to set up replication from large external databases\nThis page describes the process for setting up external server replication using a custom import. These steps are the best option when you need to replicate from a large external database.\nYou must complete all the steps on this page. When finished, you can administer and monitor the replica the same way as you would any other Cloud SQL instance.\nThis process is supported only for external servers that are configured to use global transaction identifier (GTID)-based replication. Before replication can be initiated, you need to load data from the external server into the Cloud SQL replica. If you don't use GTID-based replication, then Cloud SQL can't identify the exact binary log position from which to begin replication. If you can't use GITD-based replication, then you need to configure your dump tool to institute a global read-only lock during the dump process.\nGTID replication isn't supported for [certain versions of Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/mysql-replication-gtid.html) , Amazon Aurora 5.6, and early releases of [Amazon Aurora 5.7](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/mysql-replication-gtid.html) .\n", "content": "## Before you begin\nBefore you start, you should have [configured the external server](/sql/docs/mysql/replication/configure-replication-from-external#setting_up_the_external_server_for_replication) , created the [source representation instance](/sql/docs/mysql/replication/configure-replication-from-external#setup-source-instance) , and set up the [Cloud SQL replica](/sql/docs/mysql/replication/configure-replication-from-external#setup-replica-instance) .\n## Update permissions for the replication user\nThe replication user on the external server is configured to accept connections from any host ( `%` ). You should update this user account so that it can only be used with the Cloud SQL replica. Open a terminal on the source database server and enter these commands:\n```\n\u00a0 \u00a0 UPDATE mysql.user\u00a0 \u00a0 SET Host='NEW_HOST' WHERE Host='OLD_HOST' AND User='USERNAME';\u00a0 \u00a0 GRANT REPLICATION SLAVE, EXECUTE ON *.*\u00a0 \u00a0 TO 'GCP_USERNAME'@'HOST';\u00a0 \u00a0 FLUSH PRIVILEGES;\n```\n```\nUPDATE mysql.userSET Host='192.0.2.0' WHERE Host='%' AND User='replicationUser';GRANT REPLICATION SLAVE, EXECUTE ON *.*TO 'gcp_user'@'gmail.com';FLUSH PRIVILEGES;\n```\n| Property  | Description             |\n|:-------------|:------------------------------------------------------------|\n| NEW_HOST  | Specify the outgoing IP of the Cloud SQL replica.   |\n| OLD_HOST  | The current value assigned to Host that you want to change. |\n| USERNAME  | The replication user account on the external server.  |\n| GCP_USERNAME | The username for the GCP user account.      |\n| HOST   | The hostname for the GCP user account.      |\n## Set up the Cloud SQL replica as a primary instance\nBecause Cloud SQL replica instances are read-only, in order to perform a custom import, you need to [promote the Cloud SQL replica](/sql/docs/mysql/replication/manage-replicas#promote-replica) to a standalone instance. Once the initial data import is complete, you demote the instance back to a replica.\n## Perform a custom dump and import\nIn this section, we show you how to create the dump file and import it into the eventual Cloud SQL replica using [mydumper](https://github.com/maxbube/mydumper) or the [mysqldump](https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html) client utilities.\nWhen you dump the data, you might need to exclude MySQL generic databases, including `mysql` , and `sys` , if they exist on the source instance. Otherwise, the data import fails. See [How to exclude (or include) databases?](https://github.com/maxbube/mydumper#how-to-exclude-or-include-databases) .\n### Use mydumper and myloader\nTo create a dump file and import it to Cloud SQL:\n- Create a dump file of the external server database using `mydumper` .```\n\u00a0 \u00a0$ mydumper -u USERNAME -p PASSWORD \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --threads=16 -o ./backup \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 -h HOST \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --no-locks \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --regex '^(?!(mysql\\.|sys\\.))'\n```| Property | Description                           |\n|:-----------|:--------------------------------------------------------------------------------------------------------------------|\n| USERNAME | The name of the replication user account or user account on the external server that has database read permissions. |\n| PASSWORD | Replication user password.                       |\n| HOST  | The IPv4 or DNS address for the external server.                 |\n- Import the data into the Cloud SQL instance using `myloader` .```\n\u00a0$ myloader -u REPLICA_USERNAME -p REPLICA_PASSWORD \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --threads=16 \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 -d ./backup -h HOST -o\n```| Property   | Description         |\n|:-----------------|:--------------------------------------------|\n| REPLICA_USERNAME | The user account on the Cloud SQL instance. |\n| REPLICA_PASSWORD | Cloud SQL instance user password.   |\n| HOST    | The IPv4 for the Cloud SQL instance.  |\n- Write down the GTID or binlog information of the data dump. You need this information when configuring the replication with the stored procedures.To get the GTID or binlog information of the data dump, run the following command:```\n\u00a0 sudo cat ./backup/metadata\n```\n### Use mysqldump\n- Create a dump using `mysqldump` :\n```\nmysqldump \\\u00a0 \u00a0 --host=EXTERNAL_HOST \\\u00a0 \u00a0 --port=EXTERNAL_PORT \\\u00a0 \u00a0 --user=USERNAME\\\u00a0 \u00a0 --password=PASSWORD \\\u00a0 \u00a0 --databases=DATABASE_LIST \u00a0\\\u00a0 \u00a0 --hex-blob \\\u00a0 \u00a0 --master-data=EXTERNAL_DATA \u00a0\\\u00a0 \u00a0 --no-autocommit \\\u00a0 \u00a0 --default-character-set=utf8mb4 \\\u00a0 \u00a0 --single-transaction \\\u00a0 \u00a0 GTID_PURGED \\\u00a0 \u00a0 ADD_DROP_TABLE \\\u00a0 \u00a0 ROUTINES \\\u00a0 \u00a0 COMPRESS \\\u00a0 \u00a0 GZIP\n```\n| Property  | Description                                                   |\n|:---------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| EXTERNAL_HOST | The IPv4 or DNS address for the external server.                                         |\n| EXTERNAL_PORT | The port for the external server. If the external server is hosted on Cloud SQL, this is 3306.                              |\n| USERNAME  | The name of the replication user account or user account on the external server that has database read permissions.                         |\n| USER_PASSWORD | Replication user password.                                               |\n| DATABASE_LIST | Space-separated list of all databases on the external server, except for the system databases (sys,mysql, performance_schema, and information_schema). Use the SHOW DATABASES MySQL command to list your databases. |\n| EXTERNAL_DATA | If your external server does not support GTID, and you have permission to access the global read lock on it, use --master-data=1. Otherwise, don't use this property.            |\n| GTID_PURGED | If your external server supports GTID, use --set-gtid-purged=on; otherwise, don't use this property.                            |\n| ADD_DROP_TABLE | If you want to add a DROP TABLE statement before each CREATE TABLE statement, include --add-drop-table.                            |\n| ROUTINES  | If you want to show stored routines, such as procedures and functions, in the output for dumped databases, include --routines.                      |\n| COMPRESS  | If you want to compress all information sent between the Cloud SQL replica and the external server, use --compress.                         |\n| GZIP   | If you want to compress the dump file even more, use | gzip. If your database contains data that does not compress well, such as binary incompressible data or JPG images, don't use this.       |\n```\nmysqldump \\\u00a0 \u00a0 --host=192.0.2.1 \\\u00a0 \u00a0 --port=3306 \\\u00a0 \u00a0 --user=replicationUser \\\u00a0 \u00a0 --password \\\u00a0 \u00a0 --databases guestbook journal \\\u00a0 \u00a0 --hex-blob \\\u00a0 \u00a0 --master-data=1 \\\u00a0 \u00a0 --no-autocommit \\\u00a0 \u00a0 --default-character-set=utf8mb4 \\\u00a0 \u00a0 --single-transaction \\\u00a0 \u00a0 --compress \\\u00a0 \u00a0 | gzip\n```\n- Write down the GTID or binlog information of the data dump. You need this information to configure the replication with the Cloud SQL stored procedures.For the GTID, look for a line similar to the following:```\n\u00a0 \u00a0SET @@GLOBAL.GTID_PURGED='32eb1e6a-17b6-11ea-a39e-06d94ac3ec98:1-33496';\n```For the binlog, look for a line similar to the following:```\n\u00a0 \u00a0CHANGE MASTER TO MASTER_LOG_FILE='mysql-bin-changelog.033877', MASTER_LOG_POS=360;\n```\n- Remove the following lines in the dump file that require super privileges. Since Cloud SQL users don't have super privileges, these lines cause the import to fail.For GTID-based replication: Remove the SET GTID_PURGED statement along with the session variable setting statement in the dump. For example:```\n\u00a0 \u00a0...\u00a0 \u00a0SET @MYSQLDUMP_TEMP_LOG_BIN = @@SESSION.SQL_LOG_BIN;\u00a0 \u00a0SET @@SESSION.SQL_LOG_BIN= 0;\u00a0 \u00a0...\u00a0 \u00a0SET @@GLOBAL.GTID_PURGED='32eb1e6a-17b6-11ea-a39e-06d94ac3ec98:1-33496';\u00a0 \u00a0...\u00a0 \u00a0SET @@SESSION.SQL_LOG_BIN=@MYSQLDUMP_TEMP_LOG_BIN;\n```For binlog-based replication, remove the CHANGE MASTER statement. For example:```\n\u00a0 \u00a0...\u00a0 \u00a0CHANGE MASTER TO MASTER_LOG_FILE='mysql-bin-changelog.033877', MASTER_LOG_POS=360;\u00a0 \u00a0 ...\n```\n- Import the data into the Cloud SQL replica, using the `mysql` CLI:\n```\nmysql -h REPLICA_HOST -u REPLICA_USER \\-p REPLICA_DATABASE_NAME RESULT_FILE\n```\n| Property    | Description           |\n|:----------------------|:------------------------------------------------------|\n| REPLICA_HOST   | Host on which MySQL server is located.    |\n| REPLICA_USER   | MySQL user name to use when connecting to the server. |\n| REPLICA_DATABASE_NAME | Name of the database where the data is located.  |\n| RESULT_FILE   | Name of the dump file to import.      |\n```\n\u00a0 mysql -h 255.255.255.255 -u replica_username -p replica_db < result.sql\n```\nYou can also import the dump file using a Google Cloud bucket. See [Importing data from a SQL dump file into Cloud SQL](/sql/docs/mysql/import-export/importing#mysqldump) .\n## Demote the Cloud SQL instance\nTo demote the Cloud SQL instance to a Cloud SQL replica, use the [demoteMaster](/sql/docs/mysql/admin-api/rest/v1beta4/instances/demoteMaster) method on the instance.\n- Prepare a request JSON file with the name of the instance you want to demote.\n```\n\u00a0{\u00a0 \u00a0 \"demoteMasterContext\": {\u00a0 \u00a0 \u00a0 \"masterInstanceName\": SOURCE_REPRESENTATION_INSTANCE_NAME,\u00a0 \u00a0 \u00a0 \"skipReplicationSetup\": true\u00a0 \u00a0 \u00a0 }\u00a0}\n```\n| Property       | Description          |\n|:------------------------------------|:------------------------------------------------|\n| SOURCE_REPRESENTATION_INSTANCE_NAME | The name of the source representation instance. |\n```\n\u00a0 \u00a0{\u00a0 \u00a0 \u00a0\"demoteMasterContext\": {\u00a0 \u00a0 \u00a0 \u00a0\"masterInstanceName\": \"cloudsql-source-instance\",\u00a0 \u00a0 \u00a0 \u00a0\"skipReplicationSetup\": true\u00a0 \u00a0 \u00a0}\u00a0 \u00a0}\n```\n- Open a terminal and use the following commands to invoke `demoteMaster` :\n```\n\u00a0 gcloud auth login\u00a0 ACCESS_TOKEN=\"$(gcloud auth print-access-token)\"\u00a0 curl --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\u00a0 \u00a0 --header 'Content-Type: application/json' \\\u00a0 \u00a0 --data @JSON_PATH \\\u00a0 \u00a0 -X POST \\\u00a0 https://sqladmin.googleapis.com/sql/v1beta4/projects/PROJECT-ID/instances/INSTANCE-NAME/demoteMaster\n```\n| Property  | Description        |\n|:--------------|:----------------------------------------|\n| JSON_PATH  | The path to the JSON file.    |\n| PROJECT_ID | The ID of your project in Google Cloud. |\n| INSTANCE-NAME | The name of the instance to demote.  |\n```\n\u00a0 \u00a0gcloud auth login\u00a0 \u00a0ACCESS_TOKEN=\"$(gcloud auth print-access-token)\"\u00a0 \u00a0curl --header \"Authorization: Bearer ${ACCESS_TOKEN}\" \\\u00a0 \u00a0 \u00a0--header 'Content-Type: application/json' \\\u00a0 \u00a0 \u00a0--data @./source.json \\\u00a0 \u00a0 \u00a0-X POST \\\u00a0 \u00a0https://sqladmin.googleapis.com/sql/v1beta4/projects/MyProject/instances/cloudsql-replica-instance/demoteMaster\n```\n### What you should see when you finish\nTo ensure your instances were set up correctly, go to the [Cloud SQL Instances page](https://console.cloud.google.com/sql/instances) .\nYou should see your source representation instance and Cloud SQL replica. They look similar to the following:\n| Instance ID      | Type     | Public IP  |\n|:-----------------------------------|:-----------------------|:----------------|\n| (-) source-representation-instance | MySQL external primary | 10.68.48.3:3306 |\n| replica-instance     | MySQL read replica  | 34.66.48.59  |\n## Start replication on the Cloud SQL instance\n**Note:** IP addresses should be preserved in the Promote or Demote steps. If another operation comes in between the steps, then the IP address of the Cloud SQL instance may change. If replication is broken because of a connectivity issue, check the outgoing IP addresses and make sure that the appropriate IP addresses are allowlisted on the external source.\nThis step uses Cloud SQL stored procedures. The Cloud SQL stored procedures are installed after calling the `demoteMaster` request. They are removed after calling `promoteReplica` . For more information, see [Stored procedures for replication management](/sql/docs/mysql/stored-procedures#stored_procedures_for_replication_management) .\n- Log on to the replica instance. For more information, see [Connecting using a database client from a local machine](/sql/docs/mysql/connect-admin-ip) .\n- Use the `mysql.resetMaster` stored procedure to reset replication settings.```\n\u00a0mysql> call mysql.resetMaster();\n```\n- Configure the replication. This step requires the GTID or binlog information that you previously wrote down.\n- Configure the`gtid_purged`field with the`mysql.skipTransactionWithGtid(` `` `)`stored procedure.\n| Property  | Description      |\n|:-------------|:---------------------------------|\n| GTID_TO_SKIP | The GTID set value to configure. |\nFor example:\n```\n\u00a0 \u00a0 mysql> call mysql.skipTransactionWithGtid('32eb1e6a-17b6-11ea-a39e-06d94ac3ec98:1-33496');\n```\n- Run the`mysql.setupExternalSourceAutoPosition(` `` `,` `` `,` `` `,` `` `,` `` `,` `` `,` `` `)`stored procedure.\n| Property    | Description                                         |\n|:---------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| HOST     | Source endpoint.                                        |\n| PORT     | Source port.                                         |\n| USER_NAME   | Source user.                                         |\n| USER_PASSWORD  | Source user password.                                      |\n| MASTER_AUTO_POSITION | Value of the master_auto_position parameter. Possible values are 0, 1.                          |\n| USE_SSL    | Whether to use SSL-based replication. Possible values are true, false. If true, you need to set the caCertificate field in the DemoteMaster request.       |\n| USE_SSL_CLIENT_AUTH | Whether to use SSL client authentication. Possible values are true, false. If true, you need to set the clientKey and clientCertificates fields in the demoteMaster request. |\n```\n\u00a0 \u00a0 mysql> call mysql.setupExternalSourceAutoPosition('1.1.1.1', 3306, \\\u00a0 \u00a0 'USERNAME', 'PASSWORD', \\\u00a0 \u00a0 /* master_auto_position= */ 1,false, false); \\\n```\nRun the `mysql.setupExternalSource(` `` `,` `` `,` `` `,` `` `,` `` `,` `` `,` `` `,` `` `)` stored procedure.\n| Property   | Description                                         |\n|:--------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| HOST    | Source endpoint.                                        |\n| PORT    | Source port.                                         |\n| USER_NAME   | Source user.                                         |\n| USER_PASSWORD  | Source user password.                                      |\n| SOURCE_LOG_NAME  | The name of the binary log on the source database instance that contains the replication information.                  |\n| SOURCE_LOG_POS  | The location in the mysql_binary_log_file_name binary log at which replication starts reading the replication information.             |\n| USE_SSL    | Whether to use SSL-based replication. Possible values are true, false. If true, you need to set the caCertificate field in the DemoteMaster request.       |\n| USE_SSL_CLIENT_AUTH | Whether to use SSL client authentication. Possible values are true, false. If true, you need to set the clientKey and clientCertificates fields in the demoteMaster request. |\n```\n\u00a0 \u00a0 mysql> call mysql.setupExternalSource('1.1.1.1', 3306, \\\u00a0 \u00a0 'user_name', 'password', 'mysql-bin-changelog.033877', 360, \\\u00a0 \u00a0 false, false);\n```\n- Use the `mysql.startReplication()` stored procedure to start replication from the external database.```\n\u00a0 \u00a0mysql> call mysql.startReplication();\n```\n- Verify the replication status. Make sure that both the `Slave_IO_Running` and `Slave_SQL_Running` fields say `YES` .```\n\u00a0 \u00a0mysql> show slave status\\G\n```The output from this command looks similar to the following:```\n\u00a0 \u00a0*************************** 1. row ***************************\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Slave_IO_State: Waiting for master to send event\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Master_Host: 1.1.1.1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Master_User: user_name\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Master_Port: 3306\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Connect_Retry: 60\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Master_Log_File: mysql-bin-changelog.000001\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Read_Master_Log_Pos: 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Relay_Log_File: relay-log.000002\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Relay_Log_Pos: 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Relay_Master_Log_File: mysql-bin-changelog.000001\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Slave_IO_Running: Yes\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Slave_SQL_Running: Yes\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Replicate_Do_DB:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Replicate_Ignore_DB:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Replicate_Do_Table:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Replicate_Ignore_Table:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Replicate_Wild_Do_Table:\u00a0 \u00a0 \u00a0 Replicate_Wild_Ignore_Table: mysql.%\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Last_Errno: 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Last_Error:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Skip_Counter: 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Exec_Master_Log_Pos: 412\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Relay_Log_Space: 752\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Until_Condition: None\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Until_Log_File:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Until_Log_Pos: 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Master_SSL_Allowed: No\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Master_SSL_CA_File:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Master_SSL_CA_Path:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Master_SSL_Cert:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Master_SSL_Cipher:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Master_SSL_Key:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Seconds_Behind_Master: 0\u00a0 \u00a0 Master_SSL_Verify_Server_Cert: No\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Last_IO_Errno: 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Last_IO_Error:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Last_SQL_Errno: 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Last_SQL_Error:\u00a0 \u00a0 \u00a0 Replicate_Ignore_Server_Ids:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Master_Server_Id: 1509941531\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Master_UUID: 1cb2c80e-90f0-11eb-9ea3-02389b1c2e6f\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Master_Info_File: mysql.slave_master_info\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SQL_Delay: 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SQL_Remaining_Delay: NULL\u00a0 \u00a0 \u00a0 Slave_SQL_Running_State: Slave has read all r\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Master_Retry_Count: 86400\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Master_Bind:\u00a0 \u00a0 \u00a0 Last_IO_Error_Timestamp:\u00a0 \u00a0 \u00a0Last_SQL_Error_Timestamp:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Master_SSL_Crl:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Master_SSL_Crlpath:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Retrieved_Gtid_Set:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Executed_Gtid_Set: 478af53c-bd24-11eb-be72-42010a80002a:1-226\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Auto_Position: 0\u00a0 \u00a01 row in set (0.00 sec)\n```## Proceed with replication\nOnce you start replication from the external server, you need to monitor replication and then complete your migration. To learn more, see [Monitoring replication](/sql/docs/mysql/replication/configure-replication-from-external#monitoring_replication) .\n## Troubleshoot\n| Issue                      | Troubleshooting                                                                                                                     |\n|:---------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Lost connection to MySQL server during query when dumping table.        | The source may have become unavailable, or the dump contained packets too large. Make sure the external primary is available to connect. You can also modify the values of the net_read_timeout and net_write_timeout flags on the source instance to stop the error. For more information on the allowable values for these flags, see Configure database flags. To learn more about using mysqldump flags for managed import migration, see Allowed and default initial sync flags |\n| The initial data migration was successful, but no data is being replicated.     | One possible root cause could be your source database has defined replication flags which result in some or all database changes not being replicated over. Make sure the replication flags such as binlog-do-db, binlog-ignore-db, replicate-do-db or replicate-ignore-db are not set in a conflicting way. Run the command show master status on the primary instance to see the current settings.                      |\n| The initial data migration was successful but data replication stops working after a while. | Things to try: Check the replication metrics for your replica instance in the Cloud Monitoring section of the Google Cloud console. The errors from the MySQL IO thread or SQL thread can be found in Cloud Logging in the mysql.err log files. The error can also be found when connecting to the replica instance. Run the command SHOW SLAVE STATUS, and check for the following fields in the output: Slave_IO_Running Slave_SQL_Running Last_IO_Error Last_SQL_Error    |\n| mysqld check failed: data disk is full.              | The data disk of the replica instance is full. Increase the disk size of the replica instance. You can either manually increase the disk size or enable auto storage increase.                                                                            |\n### Review your replication logs\nWhen you [verify your replication settings](#verify-replication) , logs are produced.\nYou can view these logs by following these steps:\n- Go to the Logs Viewer in the Google Cloud console. [Go to the Logs Viewer](https://console.cloud.google.com/logs?resource=cloudsql_database) \n- Select the Cloud SQL replica from the **Instance** dropdown.\n- Select the`replication-setup.log`log file.\nIf the Cloud SQL replica is unable to connect to the external server, confirm the following:\n- Any firewall on the external server is configured to allow connections   from the Cloud SQL replica's [outgoing IP address](#outgoing-ip) .\n- Your SSL/TLS configuration is correct.\n- Your replication user, host, and password are correct.## What's next\n- Learn about [updating an instance](/sql/docs/mysql/edit-instance) .\n- Learn about [managing replicas](/sql/docs/mysql/replication/manage-replicas) .\n- Learn about [monitoring instances](/sql/docs/mysql/monitor-instance) .\n- Learn about [promoting your Cloud SQL replica](/sql/docs/mysql/replication/manage-replicas#promote-replica) to [promote the replica to a standalone instance and stop replicating from theexternal server](/sql/docs/mysql/migrate-data#migrating-to-sql) .", "guide": "Cloud SQL"}