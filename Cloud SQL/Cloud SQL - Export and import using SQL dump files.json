{"title": "Cloud SQL - Export and import using SQL dump files", "url": "https://cloud.google.com/sql/docs/postgres/import-export/import-export-sql", "abstract": "# Cloud SQL - Export and import using SQL dump files\nThis page describes exporting and importing data into Cloud SQL instances using SQL dump files.\n**Note:** If you're migrating an entire database from a supported database server (on-premises, in AWS, or Cloud SQL) to a new Cloud SQL instance, you can use [Database Migration Service](/database-migration/docs) instead of exporting and then importing files. If you're exporting to create a new instance from the exported file, consider [restoring from a backup to a different instance](/sql/docs/postgres/backup-recovery/restoring#restorebackups-another-instance) or [cloning the instance](/sql/docs/postgres/clone-instance) .You can cancel the import of data into Cloud SQL instances and  the export of data from the instances.  This data is contained in SQL dump files. For  more information about cancelling an import or export operation, see [Cancel the import and export of data](/sql/docs/postgres/import-export/cancel-import-export) .\n", "content": "## Before you begin\n**Important:** Before starting a large export, ensure that at least 25 percent of the database size is free (on the instance). Doing so helps prevent issues with aggressive autogrowth, which can affect the availability of the instance.\nExports use database resources, but they do not interfere with normal database operations unless the instance is under-provisioned.\nFor best practices, see [Best Practices for Importing and Exporting Data](/sql/docs/postgres/import-export) .\nAfter completing an import operation, [verify](/sql/docs/postgres/import-export#verify) the results.\n## Export data from Cloud SQL for PostgreSQL\n### Required roles and permissions for exporting from Cloud SQL for PostgreSQL\nTo export data from Cloud SQL into Cloud Storage, the user initiating the export must have one of the following roles:\n- The [Cloud SQL Editor](/sql/docs/postgres/iam-roles) role\n- A [custom role](/iam/docs/understanding-custom-roles) ,  including the following permissions:- `cloudsql.instances.get`\n- `cloudsql.instances.export`\nAdditionally, the service account for the Cloud SQL instance must have one of the following roles:- The`storage.objectAdmin`Identity and Access Management (IAM) role\n- A custom role, including the following permissions:- `storage.objects.create`\n- `storage.objects.list`(for exporting files in parallel only)\n- `storage.objects.delete`(for exporting files in parallel only)For help with IAM roles, see [Identity and Access Management](/storage/docs/access-control/iam) .\n**Note** : The changes that you make to the IAM permissions and roles might take a few minutes to take effect. For more information, see [Access change propagation](/iam/docs/access-change-propagation) .### Export to a SQL dump file from Cloud SQL for PostgreSQL\n[gcloud CLI](/sdk/gcloud)\n[pg_dump](https://www.postgresql.org/docs/current/static/app-pgdump.html)\nIf you plan to import your data into Cloud SQL, you must follow the instructions provided in [Exporting data from an external database server](https://cloud.google.com/sql/docs/postgres/import-export/import-export-dmp#external-server) so that your SQL dump file is formatted correctly for Cloud SQL.\n**Note:** If your data contains large objects (blobs), the export can consume a large amount of memory, impacting instance performance. For help, see [Known Issues](/sql/docs/postgres/known-issues#import-export) .\nTo export data from a database on a Cloud SQL instance to a SQL dump file in a Cloud Storage bucket:\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Click **Export** .\n- In the **File format** section, click **SQL** to create a SQL dump file.\n- In the **Data to export** section, use the drop-down menu to select the database  you want to export from.\n- In the **Destination** section, select **Browse** to search for a  Cloud Storage bucket or folder for your export.\n- Click **Export** to begin the export.\n- [Create a Cloud Storage bucket](/storage/docs/creating-buckets) .\n- Find the service account for the Cloud SQL instance you're exporting from. You can do this running the`gcloud sql instances describe`command. Look for the`serviceAccountEmailAddress`field in the output.```\ngcloud sql instances describe INSTANCE_NAME\u00a0 \n```\n- Use` [gsutil iam](/storage/docs/gsutil/commands/iam) `to grant the`storage.objectAdmin` [IAM role](/storage/docs/access-control/iam-roles) to the service account. For help with setting IAM permissions, see [ Using IAM permissions](/storage/docs/access-control/using-iam-permissions) .\n- Export the database to your Cloud Storage bucket: **Note: ** Use the`--offload`flag if you want to use serverless export. Otherwise, remove it from the following command.```\ngcloud sql export sql INSTANCE_NAME gs://BUCKET_NAME/sqldumpfile.gz \\\n--database=DATABASE_NAME \\\n--offload\n \n```The `export sql` command does not contain triggers or stored procedures, but does contain views.  To export triggers and/or stored procedures, use the [pg_dump](https://www.postgresql.org/docs/current/static/app-pgdump.html) tool.For more information about using the `export sql` command, see the [sql export sql](/sdk/gcloud/reference/sql/export/sql) command reference page.\n- If you do not need to retain the IAM role you set  previously, [revoke](/iam/docs/granting-changing-revoking-access#revoking-console) it now.\n- Create a bucket for the export:```\ngsutil mb -p PROJECT_NAME -l LOCATION_NAME gs://BUCKET_NAME\n```This step is not required, but strongly recommended, so you do not open up access to any other data.\n- Provide your instance with the`legacyBucketWriter` [IAM role](/storage/docs/access-control/iam-roles) for your bucket. For help with setting IAM permissions, see [UsingIAM permissions](/storage/docs/access-control/using-iam-permissions) .\n- Export your database:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The Cloud Storage bucket name\n- : The path to the SQL dump fle\n- : The name of a database inside the Cloud SQL instance\n- : The name of a database inside the Cloud SQL instance\n- : Enables serverless export. Set to`true`to  use serverless export. **Note:** Serverless export costs extra. See the [pricing page](/sql/pricing#storage-networking-prices) .\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/export\n```\nRequest JSON body:\n```\n{\n \"exportContext\":\n {\n  \"fileType\": \"SQL\",\n  \"uri\": \"gs://bucket_name/path_to_dump_file\",\n  \"databases\": [\"database_name\"],\n  \"offload\": true | false\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- If you do not need to retain the IAM role you set previously, remove it now.For the complete list of parameters for the request, see the\n [instances:export](/sql/docs/postgres/admin-api/rest/v1beta4/instances/export) \npage.\n- Create a bucket for the export:```\ngsutil mb -p PROJECT_NAME -l LOCATION_NAME gs://BUCKET_NAME\n```This step is not required, but strongly recommended, so you do not open up access to any other data.\n- Provide your instance with the`storage.objectAdmin` [IAM role](/storage/docs/access-control/iam-roles) for your bucket. For help with setting IAM permissions, see [UsingIAM permissions](/storage/docs/access-control/using-iam-permissions) .\n- Export your database:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The Cloud Storage bucket name\n- : The path to the SQL dump fle\n- : The name of a database inside the Cloud SQL instance\n- : The name of a database inside the Cloud SQL instance\n- : Enables serverless export. Set to`true`to  use serverless export. **Note:** Serverless export costs extra. See the [pricing page](/sql/pricing#storage-networking-prices) .\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/export\n```\nRequest JSON body:\n```\n{\n \"exportContext\":\n {\n  \"fileType\": \"SQL\",\n  \"uri\": \"gs://bucket_name/path_to_dump_file\",\n  \"databases\": [\"database_name\"],\n  \"offload\": true | false\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:\n- If you do not need to retain the IAM role you set previously, [revoke](/iam/docs/granting-changing-revoking-access#revoking-console) it now.For the complete list of parameters for the request, see the\n [instances:export](/sql/docs/postgres/admin-api/rest/v1beta4/instances/export) \npage.\n## Import data to Cloud SQL for PostgreSQL\n### Required roles and permissions for importing to Cloud SQL for PostgreSQL\nTo import data from Cloud Storage into Cloud SQL, the user initiating the import must have one of the following roles:\n- The [Cloud SQL Editor](/sql/docs/postgres/iam-roles) role\n- A [custom role](/iam/docs/understanding-custom-roles) ,  including the following permissions:- `cloudsql.instances.get`\n- `cloudsql.instances.import`\nAdditionally, the service account for the Cloud SQL instance must have one of the following roles:- The`storage.objectAdmin`IAM role\n- A custom role, including the following permissions:- `storage.objects.get`\n- `storage.objects.list`(for importing files in parallel only)For help with IAM roles, see [Identity and Access Management](/storage/docs/access-control/iam) .\n**Note** : The changes that you make to the IAM permissions and roles might take a few minutes to take effect. For more information, see [Access change propagation](/iam/docs/access-change-propagation) .### Import a SQL dump file to Cloud SQL for PostgreSQL\nSQL files are plain text files with a sequence of SQL commands.\n- In the Google Cloud console, go to the **Cloud SQL Instances** page. [Go to Cloud SQL Instances](https://console.cloud.google.com/sql) \n- To open the **Overview** page of an instance, click the instance name.\n- Click **Import** .\n- In the **Choose the file you'd like to import data from** section, enter the path to the bucket and SQL dump file to use for the import, or browse to an existing file.You can import a compressed ( `.gz` ) or an uncompressed ( `.sql` ) file.\n- For **Format** , select **SQL** .\n- Select the database you want the data to be imported into.This causes Cloud SQL to run the `USE DATABASE` statement before the import.If your SQL dump file includes a`USE DATABASE`statement, it overrides the database you set in  the Google Cloud console.\n- If you want to specify a user to perform the import, select the user.If your import file contains statements that must be performed  by a specific user, use this field to specify that user.\n- Click **Import** to start the import.\n- [Create a Cloud Storage bucket.](/storage/docs/creating-buckets) \n- Upload the file to your bucket.For help with uploading files to buckets, see [Uploading objects](/storage/docs/uploading-objects) .\n- Describe the instance you are importing to:```\ngcloud sql instances describe INSTANCE_NAME\n```\n- Copy the`serviceAccountEmailAddress`field.\n- Use` [gsutil iam](/storage/docs/gsutil/commands/iam) `to grant the`storage.objectAdmin` [IAM role](/storage/docs/access-control/iam-roles) to the service account for the bucket.```\ngsutil iam ch serviceAccount:SERVICE-ACCOUNT:objectAdmin \\gs://BUCKET_NAME\u00a0 \n```For help with setting IAM permissions, see [Using IAM permissions](/storage/docs/access-control/using-iam-permissions) .\n- Import the database:```\ngcloud sql import sql INSTANCE_NAME gs://BUCKET_NAME/IMPORT_FILE_NAME \\--database=DATABASE_NAME\n```For information about using the `import sql` command, see the [sql import sql](/sdk/gcloud/reference/sql/import/sql) command reference page.If the command returns an error like `ERROR_RDBMS` , review the  permissions; this error is often due to permissions issues.\n- If you do not need to retain the IAM permissions you set previously, remove them using` [gsutil iam](/storage/docs/gsutil/commands/iam) `.\n- Create a SQL dump file. The linked instructions set certain flags that make the dump file compatible with Cloud SQL.- If you are importing data from an on-premises PostgreSQL server:\n- Create a SQL dump file using the  instructions in [Exporting data using pg_dump](/sql/docs/postgres/import-export/exporting#external-server) .\n- Create a bucket in Cloud Storage using the instructions in [Create buckets](/storage/docs/creating-buckets) .\n- Upload the SQL dump file to the Cloud Storage bucket using the   procedure in [Upload objects](/storage/docs/uploading-objects) .\n- [Create a Cloud Storage bucket.](/storage/docs/creating-buckets) \n- Upload the file to your bucket.For help with uploading files to buckets, see [Uploading objects](/storage/docs/uploading-objects) .\n- Provide your instance with the`legacyBucketWriter`and`objectViewer` [IAM roles](/storage/docs/access-control/iam-roles) for your bucket. For help with setting IAM permissions, see [Using IAM permissions](/storage/docs/access-control/using-iam-permissions) .\n- Import your dump file:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The Cloud Storage bucket name\n- : The path to the SQL file\n- : The name of a database inside the Cloud SQL instance\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/v1/projects/project-id/instances/instance-id/import\n```\nRequest JSON body:\n```\n{\n \"importContext\":\n {\n  \"fileType\": \"SQL\",\n  \"uri\": \"gs://bucket_name/path_to_sql_file\",\n  \"database\": \"database_name\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:To use a different user for the import, specify the `importContext.importUser` property.For the complete list of parameters for the request, see the [instances:import](/sql/docs/postgres/admin-api/rest/v1beta4/instances/import) page.\n- If you do not need to retain the IAM permissions you set previously, remove them now.\n- Create a SQL dump file. The linked instructions set certain flags that make the dump file compatible with Cloud SQL.- If you are importing data from an on-premises PostgreSQL server:\n- Create a SQL dump file using the  instructions in [Exporting data using pg_dump](/sql/docs/postgres/import-export/exporting#external-server) .\n- Create a bucket in Cloud Storage using the instructions in [Create buckets](/storage/docs/creating-buckets) .\n- Upload the SQL dump file to the Cloud Storage bucket using the   procedure in [Upload objects](/storage/docs/uploading-objects) .\n- [Create a Cloud Storage bucket.](/storage/docs/creating-buckets) \n- Upload the file to your bucket.For help with uploading files to buckets, see [Uploading objects](/storage/docs/uploading-objects) .\n- Provide your instance with the`storage.objectAdmin` [IAM role](/storage/docs/access-control/iam-roles) for your bucket. For help with setting IAM permissions, see [Using IAM permissions](/storage/docs/access-control/using-iam-permissions) .\n- Import your dump file:Before using any of the request data, make the following replacements:- : The project ID\n- : The instance ID\n- : The Cloud Storage bucket name\n- : The path to the SQL file\n- : The name of a database inside the Cloud SQL instance\nHTTP method and URL:\n```\nPOST https://sqladmin.googleapis.com/sql/v1beta4/projects/project-id/instances/instance-id/import\n```\nRequest JSON body:\n```\n{\n \"importContext\":\n {\n  \"fileType\": \"SQL\",\n  \"uri\": \"gs://bucket_name/path_to_sql_file\",\n  \"database\": \"database_name\"\n }\n}\n```\nTo send your request, expand one of these options:You should receive a JSON response similar to the following:To use a different user for the import, specify the `importContext.importUser` property.For the complete list of parameters for the request, see the [instances:import](/sql/docs/postgres/admin-api/rest/v1beta4/instances/import) page.\n- If you do not need to retain the IAM permissions you set previously, remove them now.\n## What's next\n- Learn how to [check the status of import and export operations](/sql/docs/postgres/import-export/checking-status-import-export) .\n- Learn more about [best practices for importing and exporting data](/sql/docs/postgres/import-export) .\n- Learn more about [Cloud Storage](/storage/docs) .\n- [Known issues for imports and exports](/sql/docs/postgres/known-issues#import-export) .", "guide": "Cloud SQL"}