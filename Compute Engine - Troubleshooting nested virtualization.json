{"title": "Compute Engine - Troubleshooting nested virtualization", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Troubleshooting nested virtualization\nThis document describes common errors that you may run into when using nested virtualization and methods for resolving those errors. For more information about nested virtualization, see [Creating nested VMs](/compute/docs/instances/nested-virtualization/creating-nested-vms) .\n", "content": "## Can't start nested VM\nIf your project is part of an organization, your organization might have disabled the ability to create VMs with nested virtualization. Make sure that [nested virtualization is allowed](/compute/docs/instances/nested-virtualization/managing-constraint#checking_whether_nested_virtualization_is_allowed) before you try to create a VM that has nested virtualization enabled.\n## Processor not displaying nested virtualization\nIf the `grep -c vmx /proc/cpuinfo` command returns `0` and reports that the VM is not enabled for nesting, make sure that you have started your VM with a CPU platform of Haswell or later. For more information, see [Nested virtualizationoverview](/compute/docs/instances/nested-virtualization/overview) .\n## Can't exit nested VM\nIf you did not run `screen` before each nested VM session, you can either shut down the nested VM or stop the process from another terminal. To shut down the nested VM, run the `poweroff` command from within your nested VM. Alternatively, log into the host VM in another terminal and end the process, then run `screen` on the host VM before you start a new nested VM.\n## iptables not forwarding traffic\n- `iptables`resolve rules from top to bottom. Make sure your rules are higher priority than other rules.\n- Check that there are no conflicting rules intercepting your packets.\n- Consider flushing your `iptables` : **Note:** Flushing `iptables` disables your firewall. You should only do this if you want to start over configuring your firewall.- First, set the default policies:```\nsudo iptables -P INPUT ACCEPTsudo iptables -P FORWARD ACCEPTsudo iptables -P OUTPUT ACCEPT\n```\n- Next, flush all tables and chains, and delete non-default chains:```\nsudo iptables -t nat -Fsudo iptables -t mangle -Fsudo iptables -Fsudo iptables -X\n```", "guide": "Compute Engine"}