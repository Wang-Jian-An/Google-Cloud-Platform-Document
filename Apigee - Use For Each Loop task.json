{"title": "Apigee - Use For Each Loop task", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Use For Each Loop task\n**Announcement:** Application Integration is now available for your Google Cloud project. You can now use both Apigee Integration and Application Integration within the same Google Cloud project. [Learn more](/apigee/docs/api-platform/integration/using-application-integration)\nThis tutorial shows you how to use the For Each Loop task for string concatenation. In this tutorial, you will create two integrations; a main integration and a sub integration. The main integration loops through a String array and for each element in the array, calls the sub integration which does the concatenation. The output after running the main integration is a concatenated string.\nTo complete this tutorial, perform the following tasks:\n- [Create the main integration](#create-main) \n- [Create variables in the main integration](#create-main-var) \n- [Create the sub integration](#create-sub) \n- [Create variables in the sub integration](#create-sub-var) \n- [Configure the sub integration](#configure-sub) \n- [Configure and run the main integration](#configure-main) ", "content": "## Create the main integration\nTo create a new integration, perform the following steps:\n- Go to the [Apigee UI](https://apigee.google.com) and sign in.\n- Select your organization using the drop-down menu in the upper left corner of the UI.\n- Click **Develop > Integrations** .\n- Click **CREATE NEW** .\n- Enter a name and description in the **Create Integration** dialog. **Note** : Integration names must meet the following requirements:- Names must start and end with letters or numbers.\n- Names cannot contain spaces or more than one dash or underscore in a row.\n- Select a **Region** for the integration from the list of supported regions.\n- Click **Create** to open the integration designer.\n- In the integration designer, click **+Add a task/trigger > Trigger > API Trigger** .\n- Drag the **API trigger** element to the integration designer.\n- Click **+Add a task/trigger > Tasks > For Each Loop** .\n- Drag the **For Each Loop** element to the integration designer.\n- Add a connection (edge) from the **API trigger** element to the For Each Loop element:- Click the **Fork** icon attached to the side of the **API trigger** element.\n- While still holding the mouse pointer, drag the mouse pointer to a region inside the For Each Loop element.\n- Release the mouse pointer.\n## Create variables in the main integration\nCreate the following variables in the main integration:\n- **WordArray** : A String array. The array values are sent to the sub integration for  concatenation.\n- **TempString** : A temporary string variable.\n- In the main integration, click **VAR** on the menubar.\n- Click **Add +** .\n- In the **Create Variable** dialog, set the following properties:- **Name** : Enter`WordArray`\n- **Data Type** : Select`String Array`\n- **Default Value** : Enter`Hello, World, Apigee, Integrations`\n- Click **Create** .\n- Click **Add +** .\n- In the **Create Variable** dialog, set the following properties:- **Name** : Enter`TempString`\n- **Data Type** : Select`String`\n- Click **Create** .\n- Click **OK** to close the **Variables** dialog.\n## Create the sub integration\nNow, create a sub integration (new integration) that concatenates the string.\nTo create the sub integration, perform the following steps:\n- In the Apigee UI, click **Develop > Integrations** .\n- Click **CREATE NEW** .\n- Enter a name and a description for the integration, and then click **Create** .\n- In the integration designer, click **+Add a task/trigger > Trigger > API Trigger** .\n- Drag the **API trigger** element to the integration designer.\n- Click **+Add a task/trigger > Tasks > Data Mapping** .\n- Drag the **Data Mapping** element to the integration designer.\n- Add a connection (edge) from the **API trigger** element to the Data Mapping element.## Create variables in the sub integration\nCreate the following variables in the sub integration:\n- **SubIntegrationInput** : An input variable of the integration. When the sub integration runs,  this variable contains a value from the **WordArray** variable of the main integration.\n- **SubIntegrationOutput** : An output variable of the integration. When the sub integration  completes a run, this variable has the concatenated string.\n- **SubIntegrationPreviousValue** : A input variable to hold the intermittent concatenated string for  each loop. This value for this variable is passed from the main integration.\n- In the main integration, click **VAR** on the menubar.\n- Click **Add +** .\n- In the **Create Variable** dialog, set the following properties:- **Name** : Enter``\n- **Data Type** : Select`String`\n- Specify if the variable is an input or a output variable:- If you are creating the **SubIntegrationInput** or the **SubIntegrationPreviousValue** variable,  select **Use as an input to integration** .\n- If you are creating the **SubIntegrationOutput** variable,  select **Use as an output of integration** .\n- Click **Create** .## Configure the sub integration\n- Click the **Data Mapping** element to view the configuration pane.\n- Click **** .\n- In the **Data Mapping Editor** :- Drag the **SubIntegrationPreviousValue** variable to the **Input** column.\n- In the **SubIntegrationPreviousValue** variable, click **Add function** and the select **CONCAT** .\n- Drag the **SubIntegrationInput** variable to the **CONCAT** function.\n- Drag the **SubIntegrationOutput** variable to the **Output** column.\n- Close the **Data Mapping Editor** .\n- Click **Publish** .## Configure and run the main integration\nNow, go back to the main integration and configure it to call the sub integration.\nTo configure the main integration, perform the following steps:\n- Open the main integration in the integration designer.\n- Click the For Each Loop element to view the configuration pane of the task.\n- Set the following properties in the configuration pane:- **List to iterate** : Select **WordArray** .\n- **API Trigger ID** : Enter trigger ID of the sub integration. You can get the trigger ID   value from the sub integration's **API Trigger** element.\n- **Integration name** : Enter the name of your sub integration.\n- **Iteration element sub-integration mapping** : Select **SubIntegrationInput** .\n- **Response parameter override mapping** :- In the **Sub-Integration output to map from** drop-down, select **SubIntegrationOutput** .\n- In the **Integration variable to override** drop-down, select **TempString** .\n- **Map to additional sub-integration input(s)** :- In the **Integration variable to map from** drop-down, select **TempString** .\n- In the **Sub-Integration input to map to** drop-down, select **SubIntegrationPreviousValue** .\n- Click **Publish** .\nIf both the main and the sub integration run successfully, in the execution summary dialog, you can see the concatenated string `HelloWorldApigeeIntegrations` in the **TempString** variable.", "guide": "Apigee"}