{"title": "Cloud Architecture Center - Best practices for protecting against cryptocurrency mining attacks", "url": "https://cloud.google.com/architecture/reference-patterns/overview", "abstract": "# Cloud Architecture Center - Best practices for protecting against cryptocurrency mining attacks\nLast reviewed 2023-10-20 UTC\nCryptocurrency mining (also known as ) is the process used to create new cryptocoins and verify transactions. Crytocurrency mining attacks occurs when attackers who gain access to your environment might also exploit your resources to run their own mining operations at your expense.\nAccording to the [November 2021 Threat Horizons report](https://services.google.com/fh/files/misc/gcat_threathorizons_full_nov2021.pdf) , cryptocurrency mining attacks are the most common way that attackers exploit your computing resources after they compromise your Google Cloud environment. The report also says that attackers typically download cryptocurrency mining software to your resources within 22 seconds of compromising your system. Cryptocurrency mining can rapidly increase costs, and a cryptocurrency mining attack can cause a much larger bill than you expected. Because costs can add quickly, you must put in place protective, detective, and mitigation measures to protect your organization.\nThis document is intended for security architects and administrators. It describes the best practices that you can take to help protect your Google Cloud resources from cryptocurrency mining attacks and to help mitigate the impact should an attack occur.\n", "content": "## Identify your threat vectors\nTo determine your organization's exposure to cryptocurrency mining attacks, you must identify the threat vectors that apply to your organization.\nThe November 2021 Threat Horizons report indicates that most attackers exploit vulnerabilities such as the following:\n- Weak password or no password for user accounts\n- Weak or no [authentication for Google Cloud APIs](/docs/authentication) \n- Vulnerabilities in third-party software\n- Misconfigurations in your Google Cloud environment or in third-party applications that you're running on Google Cloud\n- Leaked credentials, such as service account keys published in public GitHub repositories\nIn addition, you can subscribe to and review the following documents for a list of threat vectors:\n- Your government's cybersecurity advisories\n- [Google Cloud security bulletins](https://cloud.google.com/support/bulletins) \n- [Compute Engine security bulletins](/compute/docs/security-bulletins) \n- The security bulletins for the third-party applications that you are running in Google Cloud\n- Important [Google Cloud notifications](/resource-manager/docs/managing-notification-contacts) \nAfter you identify the threat vectors that apply to you, you can use the remaining best practices in this document to help address them.\n## Protect accounts and account credentials\nAttackers can exploit unguarded or mismanaged accounts to gain access to your Compute Engine resources. Google Cloud includes different options that you can configure to manage accounts and groups.\n### Restrict access to your cloud environment\nThe following table describes the [organizational policies](/resource-manager/docs/organization-policy/org-policy-constraints) that you can use to define who can access your cloud environment.\n| Organization policy constraint               | Description                     |\n|:------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------|\n| Domain restricted sharing                 | Specify which customer IDs for Cloud Identity or Google Workspace are valid.     |\n| Allowed AWS accounts that can be configured for workload identity federation in Cloud IAM | In a hybrid cloud environment, define which AWS accounts can use workload identify federation. |\n| Allowed external identity providers for workloads           | In a hybrid cloud environment, define which identity providers your workloads can use.   |\n### Set up MFA or 2FA\n[Cloud Identity](https://cloud.google.com/identity) supports multi-factor authentication (MFA) using various methods. Configure MFA, particularly for your privileged accounts. For more information, see [Enforce uniform MFA to company-owned resources](https://cloud.google.com/identity/solutions/enforce-mfa) .\nTo help prevent phishing attacks that can lead to cryptocurrency mining attacks, use [Titan Security Keys](https://cloud.google.com/titan-security-key) for two-factor authentication (2FA).\n### Configure least privilege\nLeast privilege ensures that users and services only have the access that they require to perform their specific tasks. Least privilege slows down the ability of attacks to spread throughout an organization because an attacker can't easily escalate their privileges.\nTo meet your organization's needs, use the fine-grained policies, roles, and permissions in [Identity and Access Management (IAM)](https://cloud.google.com/iam) . In addition, analyze your permissions regularly using [role recommender](/iam/docs/recommender-overview) and [Policy Analyzer](/asset-inventory/docs/analyzing-iam-policy) . Role recommender uses machine learning to analyze your settings and provide recommendations to help ensure that your role settings adhere to the principle of least privilege. Policy Analyzer lets you see which accounts have access to your cloud resources.\n### Monitor accounts\nIf you use groups to assign IAM policies, [monitor the group logs](https://support.google.com/a/answer/6270454) to ensure that non-corporate accounts aren't added. In addition, restrict the identities, based on Cloud Identity or Google Workspace domains, that can access your resources. For more information, see [Restricting identities by domain](/resource-manager/docs/organization-policy/restricting-domains) .\nEnsure that your offboarding procedures include processes to deactivate accounts and reset permissions when employees leave your organization or change roles. For more information, see [Revoking Access to Google Cloud](/docs/security/data-loss-prevention/revoking-user-access) .\nTo audit your users and groups, see [Audit logs for Google Workspace](/logging/docs/audit/gsuite-audit-logging) .\n## Reduce internet exposure to your Compute Engine and GKE resources\nReducing internet exposure means that your attackers have fewer opportunities to find and exploit vulnerabilities. This section describes the best practices that help protect your Compute Engine VMs and your Google Kubernetes Engine (GKE) clusters from internet exposure.\n### Restrict external traffic\nDo not assign [external IP addresses](/compute/docs/ip-addresses#externaladdresses) to your VMs. You can use the **Disable VPC External IPv6 usage**  [organization policy constraint](/resource-manager/docs/organization-policy/org-policy-constraints) to deny external IP addresses to all VMs. To view which VMs have publicly accessible IP addresses, see [Locating IP addresses for an instance](/compute/docs/instances/view-ip-address) . If your architecture requires external IP addresses for your VMs, use the **Define allowed external IPs for VM instances** organization policy, which lets you define a list of instance names that are permitted to have external IP addresses.\nRestrict GKE nodes to internal IP addresses only. For more information, see [Creating a private cluster](/kubernetes-engine/docs/how-to/private-clusters) .\nRestrict inbound (ingress) and outbound (egress) traffic to the internet for all resources in your projects. For more information, see [VPC firewall rules](/vpc/docs/firewalls) and [Hierarchical firewall policies](/vpc/docs/firewall-policies) .\nFor more information about restricting external traffic, such as configuring Cloud NAT to allow outgoing communications for VMs without external IP address or using a proxy load balancer for incoming communications, see [Securely connecting to VM instances](https://cloud.google.com/solutions/connecting-securely) .\n### Use service perimeters\nCreate a [service perimeter](/vpc-service-controls/docs/service-perimeters) for your Compute Engine and GKE resources using [VPC Service Controls](https://cloud.google.com/vpc-service-controls) . VPC Service Controls lets you control communications to your Compute Engine resources from outside of the perimeter. Service perimeters allow free communication within the perimeter, block data exfiltration, and block service communication from outside the perimeter. Use [context-aware access](/vpc-service-controls/docs/context-aware-access) attributes like IP addresses and users' identities to further control access to Google Cloud services from the internet.\n### Set up zero trust security\nSet up zero trust security with [BeyondCorp Enterprise](https://cloud.google.com/beyondcorp) . BeyondCorp Enterprise provides [threat and data protection](https://support.google.com/a/answer/10104463) and [access controls](/beyondcorp-enterprise/docs/access-protection) . If your workloads are located both on-premises and in Google Cloud, configure Identity-Aware Proxy (IAP). Configure [TCP forwarding](/iap/docs/tcp-forwarding-overview) to control who can access administrative services like SSH and RDP on your Google Cloud resources from the public internet. TCP forwarding prevents these services from being openly exposed to the internet.\n## Secure your Compute Engine and GKE resources\nCryptocurrency mining requires access to your Compute Engine and GKE resources. This section describes the best practices that will help you secure your Compute Engine and GKE resources.\n### Secure your VM images\nUse hardened and curated VM images by configuring [Shielded VM](https://cloud.google.com/shielded-vm) . Shielded VM is designed to prevent malicious code such as kernel-level malware or rootkits from being loaded during the boot cycle. Shielded VM provides boot security, monitors integrity, and uses the [Virtual Trusted Platform Module (vTPM)](/security/shielded-cloud/shielded-vm#vtpm) .\nTo restrict which images can be deployed, you can implement [trusted image policies](/compute/docs/images/restricting-image-access) . The **Define trusted image projects** organization policy defines which projects can store images and persistent disks. Ensure that only trusted and maintained images exist in those projects.\nIn GKE, ensure that your containers use [base images](/software-supply-chain-security/docs/base-images) , which are regularly updated with security patches. Also, consider [distroless container images](https://github.com/GoogleContainerTools/distroless) that include only your application and its runtime dependencies.\n### Secure SSH access to VMs\nConfigure [OS Login](/compute/docs/oslogin) to manage SSH access to the VMs running in Compute Engine. OS Login simplifies SSH access management by linking your administrator's Linux user account to their Google identity. OS Login works with IAM so that you can define the privileges that administrators have.\nFor more information, see [Protect VMs and containers](/architecture/framework/security/compute-container-security#protect_vms_and_containers) .\n### Restrict service accounts\nA [service account](/iam/docs/understanding-service-accounts) is a Google Cloud account that workloads use to [call the Google API of a service](https://developers.google.com/identity/protocols/OAuth2ServiceAccount#authorizingrequests) .\nDo not permit Google Cloud to assign default service account roles to resources when they are created. For more information, see [Restricting service account usage](/resource-manager/docs/organization-policy/restricting-service-accounts#disable_service_account_default_grants) .\nIf your applications are running outside of Google Cloud, and yet require access to Google Cloud resources, do not use service account keys. Instead, implement [workload identity federation](/iam/docs/workload-identity-federation) to manage external identities and the permissions that you associate with them. For GKE, you can implement [workload identities](/kubernetes-engine/docs/concepts/workload-identity) . For more information, see [Choose the right authentication method for your use case](https://cloud.google.com/docs/authentication#auth-decision-tree) .\nFor more best practices that help secure service accounts, see [Best practices for working with service accounts](/iam/docs/best-practices-service-accounts) .\n### Monitor usage of service accounts and service account keys\n[Set up monitoring](/iam/docs/service-account-monitoring) so that you can track how service accounts and service account keys are being used in your organization. To get visibility into notable usage patterns, use [service account insights](/iam/docs/manage-service-account-insights) . For example, you can use service account insights to track how permissions are used in your projects and to identify unused service accounts. To see when your service accounts and keys were last used to call a Google API for authentication activities, [view recent usage for service accounts and service account keys](/iam/docs/service-account-recent-usage) .\n### Monitor and patch VMs and containers\nTo start a cryptocurrency mining attack, attackers often exploit misconfigurations and software vulnerabilities to gain access to Compute Engine and GKE resources.\nTo obtain insight into the vulnerabilities and misconfigurations that apply to your environment, use [Security Health Analytics](/security-command-center/docs/how-to-use-security-health-analytics) to scan your resources. In particular, if you use Security Command Center Premium, review any [Compute Engine instance findings](/security-command-center/docs/concepts-vulnerabilities-findings#compute-instance-findings) and [Container findings](/security-command-center/docs/concepts-vulnerabilities-findings#container-findings) and set up processes to resolve them quickly.\nUse [Artifact Analysis](/container-analysis/docs/automated-scanning-howto) to check for vulnerabilities in the container images that you store in Artifact Registry or Container Registry.\nEnsure that your organization can deploy patches as soon as they are available. You can use [OS patch management](/compute/docs/os-patch-management) for Compute Engine. Google automatically [patches vulnerabilities](/kubernetes-engine/docs/resources/security-patching) in GKE. For more information, see [Keep your images and clusters up to date](/architecture/framework/security/compute-container-security#keep_your_images_and_clusters_up_to_date) .\n## Protect your applications using a WAF\nAttackers can try to access your network by finding [Layer 7](https://en.wikipedia.org/wiki/OSI_model) vulnerabilities within your deployed applications. To help mitigate against these attacks, configure [Google Cloud Armor](/armor/docs/security-policy-overview) , which is a web application firewall (WAF) that uses Layer 7 filtering and security policies. Google Cloud Armor provides denial of service (DoS) and WAF protection for applications and services hosted on Google Cloud, on your premises, or on other clouds.\nGoogle Cloud Armor includes a WAF rule to help address [Apache Log4j vulnerabilities](https://logging.apache.org/log4j/2.x/security.html) . Attackers can use Log4j vulnerabilities to introduce malware that can perform unauthorized cryptocurrency mining. For more information, see [Google Cloud Armor WAF rule to help address Apache Log4j vulnerability](https://cloud.google.com/blog/products/identity-security/cloud-armor-waf-rule-to-help-address-apache-log4j-vulnerability) .\n## Secure your supply chain\nContinuous integration and continuous delivery (CI/CD) provides a mechanism for getting your latest functionality to your customers quickly. To help prevent cryptocurrency mining attacks against your pipeline, perform code analysis and monitor your pipeline for malicious attacks.\nImplement [Binary Authorization](https://cloud.google.com/binary-authorization) to ensure that all images are signed by trusted authorities during the development process and then enforce signature validation when you deploy the images.\nMove security checks to as early in the CI/CD process as possible (sometimes referred to as ). For more information, see [Shifting left on security: Securing software supply chains](https://cloud.google.com/solutions/shifting-left-on-security) . For information on setting up a secure supply chain with GKE, see [Software supply chain security](/software-supply-chain-security/docs/overview) .\n## Manage secrets and keys\nA key attack vector for unauthorized cryptocurrency mining attacks is insecure or leaked secrets. This section describes the best practices that you can use to help protect your secrets and encryption keys.\n### Rotate encryption keys regularly\nEnsure that all encryption keys are rotated regularly. If Cloud KMS manages your encryption keys, you can [rotate your encryption keys automatically](/kms/docs/key-rotation) .\nIf you use service accounts that have Google-managed key pairs, the keys are also automatically rotated.\n### Avoid downloading secrets\nExposed secrets are a key attack vector for attackers. If at all possible, do not download encryption keys or other secrets, including service account keys. If you must download keys, ensure that your organization has a key rotation process in place.\nIf you are using GitHub or other public repository, you must avoid leaking credentials. Implement tools such as [secret scanning](https://docs.github.com/en/code-security/secret-scanning/about-secret-scanning) , which warns you about exposed secrets in your GitHub repositories. To stop keys from being committed to your GitHub repositories, consider using tools such as [git-secrets](https://github.com/awslabs/git-secrets) .\nUse secret management solutions such as [Secret Manager](https://cloud.google.com/secret-manager) and [Hashicorp Vault](https://www.vaultproject.io/) to store your secrets, rotate them regularly, and apply least privilege.\n## Detect anomalous activity\nTo monitor for anomalous activity, configure Google Cloud and third-party monitoring tools and set up alerts. For example, configure alerts based on administrator activity in [Compute Engine audit logging information](/compute/docs/logging/audit-logging) and [GKE audit logs](/kubernetes-engine/docs/how-to/audit-logging#example_filters_for_your_admin_activity_log) .\nIn addition, use [Event Threat Detection](/security-command-center/docs/concepts-event-threat-detection-overview) in Security Command Center to identify threats that are based on administrator activities, Google Groups changes, and IAM permission changes. Use [Virtual Machine Threat Detection](/security-command-center/docs/concepts-vm-threat-detection-overview) in Security Command Center to identify threats related to your Compute Engine VMs. For more information about Security Command Center services, see [Security Command Center service tiers](/security-command-center/docs/concepts-security-command-center-overview#tiers) .\nTo help detect network-based threats such as malware, configure [Cloud IDS](https://cloud.google.com/intrusion-detection-system) .\n### Participate in the Security Command Center Cryptomining Protection Program\nIf you are a Security Command Center Premium customer and use Compute Engine, you can participate in the [Security Command Center Cryptomining Protection Program](/security-command-center/cryptomining-protection-program) . This program lets you defray the Compute Engine VM costs related to undetected and unauthorized cryptomining attacks in your Compute Engine VM environment. You must implement the [cryptomining detection best practices](/security-command-center/docs/cryptomining-detection-best-practices) , some of which overlap with the other best practices that are described on this page.\n## Update your incident response plan\nEnsure that your incident response plan and your playbooks provide prescriptive guidance for how your organization will respond to cryptocurrency mining attacks. For example, ensure that your plan includes the following:\n- How to file a [support case](https://cloud.google.com/support/docs/procedures#create_a_support_case) with Cloud Customer Care and contact your [Google technical account manager (TAM)](https://cloud.google.com/tam) . If you do not have a support account, review the available [support plans](https://cloud.google.com/support) and create one.\n- How to tell the difference between legitimate [high performance computing (HPC)](https://cloud.google.com/solutions/hpc) workloads and cryptocurrency mining attacks. For example, you can tag which projects have HPC enabled, and set up alerts for unexpected cost increases.\n- How to deal with [compromised Google Cloud credentials](/docs/security/compromised-credentials) .\n- How to quarantine infected systems and restore from healthy backups.\n- Who in your organization must be notified to investigate and respond to the attack.\n- What information needs to be logged for your retrospective activities.\n- How to verify that your remediation activities effectively removed the mining activities and addressed the initial vulnerability that led to the attack.\n- How to respond to an alert sent from Cloud Customer Care. For more information, see [Policy violations FAQ](https://support.google.com/cloud/answer/7002354) .\nFor more information, see [Respond to and recover from attacks](/architecture/bps-for-mitigating-ransomware-attacks#respond_to_and_recover_from_attacks) .\n## Implement a disaster recovery plan\nTo prepare for a cryptocurrency mining attack, complete [business continuity](https://cloud.google.com/solutions/security-and-resilience) and [disaster recovery plans](/architecture/dr-scenarios-planning-guide) , create an incident response playbook, and perform tabletop exercises.\nIf unauthorized cryptocurrency mining occurs, ensure that you can address the threat vector that caused the initial breach and that you can reconstruct your environment from a known good state. Your disaster recovery plan must provide for the ability to determine what a known good state is so that the attacker can't repeatedly use the same vulnerabilities to exploit your resources.\n## What's next\n- Find more security best practices in [Google Cloud Architecture Framework: Security, privacy, and compliance](/architecture/framework/security) .\n- [Protect against ransomware attacks](/architecture/bps-for-mitigating-ransomware-attacks) .\n- Deploy a secure baseline in Google Cloud, as described in the [Google Cloud enterprise foundations blueprint](/architecture/security-foundations) .", "guide": "Cloud Architecture Center"}