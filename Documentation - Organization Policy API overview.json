{"title": "Documentation - Organization Policy API overview", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Organization Policy API overview\nThe Organization Policy API uses Kubernetes custom resources and relies on the Kubernetes Resource Model (KRM). It is used to manage the lifecycle of organization policies such as creating, updating, deleting.\nTo use the Organization Policy API, we recommend that you use the Kubernetes CLI `kubectl` . If your application needs to use its own libraries to call this API, use the following example, the [full API definition](/distributed-cloud/hosted/docs/latest/gdch/apis/service/org-policy/org-policy-krm-api) , and the dedicated [policy match page](/distributed-cloud/hosted/docs/latest/gdch/apis/service/org-policy/policy-match-section) to build your requests.\n**Warning:** While organization policies leverage an open-source API that's marked as beta ( `constraints.gatekeeper.sh/v1beta1` ), the organization policy system itself is in alpha. Additional APIs may be introduced in the future to facilitate the management of organisation policies.\n", "content": "## Service endpoint and discovery document\nThe API endpoint for the Organization Policy API is: `https://` `` `/apis/constraints.gatekeeper.sh/v1beta1` where `` is the endpoint of the GDCH API server.\nUsing the `kubectl proxy` command, you can access that URL in your browser or with a tool such as `curl` to get the discovery document for the Organization Policy API. The `kubectl proxy` command opens up a proxy to the Kubernetes API server on your local machine. Once that command is running, you can access the document at the following URL: `http://127.0.0.1:8001/apis/constraints.gatekeeper.sh/v1beta1` .\n## Example KRM\nThe following is an example of a `GDCHRestrictedServices` object in the Organization Policy API to restrict the use of the Database Services to projects that have the label `owner: dba-team` .\n```\napiVersion: constraints.gatekeeper.sh/v1beta1kind: GDCHRestrictedServicemetadata:\u00a0 name: db-restricted-to-dbasspec:\u00a0 match:\u00a0 \u00a0 scope: Namespaced\u00a0 \u00a0 namespaceSelector:\u00a0 \u00a0 \u00a0 matchExpressions:\u00a0 \u00a0 \u00a0 # We are restricting the use of the service in namespaces that\u00a0 \u00a0 \u00a0 # DON'T have the owner: dba-team label\u00a0 \u00a0 \u00a0 - key: owner\u00a0 \u00a0 \u00a0 \u00a0 operator: NotIn\u00a0 \u00a0 \u00a0 \u00a0 values:\u00a0 \u00a0 \u00a0 \u00a0 - dba-team\u00a0 \u00a0 kinds:\u00a0 \u00a0 - apiGroups:\u00a0 \u00a0 \u00a0 - \"postgresql.ods.anthosapis.com\"\u00a0 \u00a0 \u00a0 kinds:\u00a0 \u00a0 \u00a0 - Dbclusters\u00a0 \u00a0 \u00a0 - Backupplans\u00a0 \u00a0 \u00a0 - Imports\u00a0 \u00a0 \u00a0 - Restores\u00a0 \u00a0 - apiGroups:\u00a0 \u00a0 \u00a0 - \"oracle.ods.anthosapis.com\"\u00a0 \u00a0 \u00a0 kinds:\u00a0 \u00a0 \u00a0 - Dbclusters\u00a0 \u00a0 \u00a0 - Backupplans\u00a0 \u00a0 \u00a0 - Imports\u00a0 parameters:\u00a0 \u00a0 disabledOperations:\u00a0 \u00a0 \u00a0 - \"UPDATE\"\u00a0 \u00a0 \u00a0 - \"CREATE\"\n```", "guide": "Documentation"}