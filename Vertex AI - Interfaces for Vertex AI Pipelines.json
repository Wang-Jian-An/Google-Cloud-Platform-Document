{"title": "Vertex AI - Interfaces for Vertex AI Pipelines", "url": "https://cloud.google.com/vertex-ai/docs/start/introduction-unified-platform", "abstract": "# Vertex AI - Interfaces for Vertex AI Pipelines\nTo learn more,  run the \"Learn how to build Python function-based Kubeflow pipeline   components\" Jupyter notebook in one of the following  environments: [Openin Colab](https://colab.research.google.com/github/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/pipelines/lightweight_functions_component_io_kfp.ipynb) | [Openin Vertex AI Workbench user-managed notebooks](https://console.cloud.google.com/vertex-ai/workbench/deploy-notebook?download_url=https%3A%2F%2Fraw.githubusercontent.com%2FGoogleCloudPlatform%2Fvertex-ai-samples%2Fmain%2Fnotebooks%2Fofficial%2Fpipelines%2Flightweight_functions_component_io_kfp.ipynb) | [View on GitHub](https://github.com/GoogleCloudPlatform/vertex-ai-samples/blob/main/notebooks/official/pipelines/lightweight_functions_component_io_kfp.ipynb)\nThis page lists the interfaces that you can use to define and run ML pipelines on Vertex AI Pipelines.\n", "content": "## Interfaces to define a pipeline\nVertex AI Pipelines supports ML pipelines defined using the Kubeflow Pipelines (KFP) SDK or the TensorFlow Extended (TFX) SDK.\n### Kubeflow Pipelines (KFP) SDK\nUse KFP for all use cases where you don't need to use TensorFlow Extended to process huge amounts of structured or text data.\nVertex AI Pipelines supports KFP SDK v1.8 or later. However, to use the code samples in the Vertex AI Pipelines documentation, use KFP SDK v2.\nWhen you use the KFP SDK, you can define your ML workflow by building custom components and also by reusing prebuilt components, such as the Google Cloud Pipeline Components. Google Cloud Pipeline Components let you easily use Vertex AI services like AutoML in your ML pipeline. Vertex AI Pipelines supports Google Cloud Pipeline Components SDK v2 or later. For more information about Google Cloud Pipeline Components, see [Introduction to Google Cloud Pipeline Components](/vertex-ai/docs/pipelines/components-introduction) .\nTo learn how to build a pipeline using the Kubeflow Pipelines, see [Build a pipeline](/vertex-ai/docs/pipelines/build-pipeline) . To learn more about Kubeflow Pipelines, see the [Kubeflow Pipelines documentation](https://www.kubeflow.org/docs/components/pipelines/) .\n### TensorFlow Extended (TFX) SDK\nUse TFX if you use TensorFlow Extended in your ML workflow to process terabytes of structured or text data. Vertex AI Pipelines supports TFX SDK v0.30.0 or later.\nTo learn how to build ML pipelines using TFX, see the [Getting started tutorials](https://www.tensorflow.org/tfx/tutorials) section on the [TensorFlow Extended in Production tutorials](https://www.tensorflow.org/tfx/tutorials#tfx-on-google-cloud) .\n## Interfaces to run a pipeline\nAfter you define your ML pipeline, you can create an ML pipeline run using any of the following interfaces:\n- REST API\n- SDK clients\n- Google Cloud console\n**Note:** Vertex AI Pipelines doesn't support the gcloud CLI interface.\nFor more information about the interfaces you can use to interact with Vertex AI, see [Interfaces for Vertex AI](/vertex-ai/docs/start/introduction-interfaces) .\n### REST API\nTo create a pipeline run using REST, use the `Pipelines` service API. This API uses the [projects.locations.pipelineJobs](/vertex-ai/docs/reference/rest/v1/projects.locations.pipelineJobs) REST resource.\n**Note:** Breaking changes to the `Pipelines` service API are communicated as preview launches. You can test the changes announced in preview, see the the API documentation for [projects.locations.pipelineJobs (v1beta1)](/vertex-ai/docs/reference/rest/v1beta1/projects.locations.pipelineJobs) . For more information about the preview launch stage, see the [launch stage descriptions](/products#product-launch-stages) .\n### SDK Clients\nVertex AI Pipelines lets you create pipeline runs using the Vertex AI SDK for Python or client libraries.\nThe Vertex AI SDK for Python ( `aiplatform` ) is the recommended SDK for programmatically working with the `Pipelines` service API. For more information about this SDK, see the [API documentation for google.cloud.aiplatform.PipelineJob](/python/docs/reference/aiplatform/latest/google.cloud.aiplatform/google.cloud.aiplatform.PipelineJob) .\nClient libraries are programmatically Generated API Clients (GAPIC) SDKs. Vertex AI Pipelines supports the following client libraries:\n- Python ( `aiplatform` `v1` and `v1beta1` )\n- Java\n- Node.js\n- [Go](https://cloud.google.com/go/docs/reference/cloud.google.com/go/aiplatform/latest/apiv1#cloud_google_com_go_aiplatform_apiv1_PipelineClient) \nFor more information, see [Install the Vertex AI client libraries](/vertex-ai/docs/start/client-libraries) .\n### Google Cloud console (GUI)\nGoogle Cloud console is the recommended way for reviewing and monitoring your pipeline runs. You can also perform other tasks using the Google Cloud console, such as creating, deleting and cloning pipeline runs, accessing the Template Gallery, and retrieving the billing label for a pipeline run.\n[Go to Pipelines in Google Cloud console](https://console.cloud.google.com/vertex-ai/pipelines)\n## What's next\n- Get started by [learning how to define a pipeline using the Kubeflow Pipelines SDK](/vertex-ai/docs/pipelines/build-pipeline) .\n- [Learn how to run a pipeline](/vertex-ai/docs/pipelines/run-pipeline) .\n- Learn about [best practices for implementing custom-trained ML models on Vertex AI](https://cloud.google.com/architecture/ml-on-gcp-best-practices#machine-learning-workflow-orchestration) .", "guide": "Vertex AI"}