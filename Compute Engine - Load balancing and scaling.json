{"title": "Compute Engine - Load balancing and scaling", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Load balancing and scaling\nGoogle Cloud offers load balancing and autoscaling for [groups of instances](/compute/docs/instance-groups) .\n", "content": "## Load balancing\nGoogle Cloud offers server-side load balancing so you can distribute incoming traffic across multiple virtual machine (VM) instances. Load balancing provides the following benefits:\n- Scale your app\n- Support heavy traffic\n- Detect and automatically remove unhealthy VM instances using [health checks](/load-balancing/docs/health-check-concepts) . Instances that become healthy again are automatically re-added.\n- Route traffic to the closest virtual machine\nGoogle Cloud load balancing uses forwarding rule resources to match certain types of traffic and forward it to a load balancer. For example, a forwarding rule can match TCP traffic destined to port 80 on IP address `192.0.2.1` , then forward it to a load balancer, which then directs it to healthy VM instances.\nGoogle Cloud load balancing is a managed service, which means its components are redundant and highly available. If a load balancing component fails, it is restarted or replaced automatically and immediately.\nGoogle Cloud offers several different types of load balancing that differ in capabilities, usage scenarios, and how you configure them. See [Google Cloud load balancing documentation](/load-balancing/docs) for descriptions.\n## Autoscaling\nCompute Engine offers autoscaling to automatically add or remove VM instances from a [managed instance group (MIG)](/compute/docs/instance-groups#managed_instance_groups) based on increases or decreases in load. Autoscaling lets your apps gracefully handle increases in traffic, and it reduces cost when the need for resources is lower. You can autoscale a MIG based on its CPU utilization, Cloud Monitoring metrics, schedules, or load balancing serving capacity.\nWhen you set up an autoscaler to scale based on load balancing serving capacity, the autoscaler watches the serving capacity of an instance group and scales when the VM instances are over or under capacity. The serving capacity of an instance can be defined in the load balancer's [backend service](/load-balancing/docs/backend-service) and can be based on either utilization or requests per second. For more information, see [Scaling based on load balancing serving capacity](/compute/docs/autoscaler/scaling-load-balancing) .\nTo learn more about autoscaling, see [Autoscaling groups of instances](/compute/docs/autoscaler) .\n## What's next\n- Learn more about [instance groups](/compute/docs/instance-groups) .\n- Learn how to [autoscale managed instance groups](/compute/docs/autoscaler) based on:- [CPU utilization](/compute/docs/autoscaler/scaling-cpu) \n- [Load balancing serving capacity](/compute/docs/autoscaler/scaling-load-balancing) \n- [Monitoring metrics](/compute/docs/autoscaler/scaling-stackdriver-monitoring-metrics) \n- [Schedules](/compute/docs/autoscaler/scaling-schedules) \n- Learn how to [choose a load balancer](/load-balancing/docs/choosing-load-balancer) and- How to [set up an external Application Load Balancer](/load-balancing/docs/https/setting-up-https) \n- How to [set up an external passthrough Network Load Balancer](/load-balancing/docs/network/setting-up-network)", "guide": "Compute Engine"}