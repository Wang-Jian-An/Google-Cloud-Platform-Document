{"title": "Documentation - Protected application strategies", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Protected application strategies\nProtected application strategies allows you to run specific pre-execution and post-execution hooks and define custom behavior for quiescing, backing up, or restoring a stateful workload. There are three backup and restore strategies that you can use when defining a `ProtectedApplication` resource:\n- [Back up all and restore all](#backup-all-restore-all) \n- [Back up one and restore all](#backup-one-restore-all) \n- [Dump and load](#dump-load) \nStrategy definitions can include the following values:\n| Type    | Attribute  | Description                                                                                                                |\n|:--------------------|:-----------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| BackupAllRestoreAll | nan    | Back up and restore everything in the component.                                                                                                      |\n| nan     | backupPreHooks | List of hooks to execute before backup.                                                                                                         |\n| nan     | backupPostHooks | List of hooks to execute after backup.                                                                                                         |\n| nan     | volumeSelector | Label selector specifying what persistent volumes to backup. If empty, all PVs are selected.                                                                                           |\n| backupOneRestoreAll | nan    | Back up one copy of a selected Pod and use it to restore all Pods.                                                                                                  |\n| nan     | backupTargetName | The name of the preferred Deployment or StatefulSet to use for the backup.                                                                                                |\n| nan     | backupPreHooks | List of hooks to execute before backup.                                                                                                         |\n| nan     | backupPostHooks | List of hooks to execute after backup.                                                                                                         |\n| nan     | volumeSelector | Label selector specifying what persistent volumes to back up. If empty, all PVs are selected.                                                                                           |\n| dumpAndLoad   | nan    | Uses a dedicated volume for backup and restore.                                                                                                       |\n| nan     | dumpTarget  | Specifies the name of the preferred Deployment or StatefulSet that is used to dump the component data. The target Pod is selected based on how this component is composed: Deployment: pick the only Pod created by the target Deployment. Single-StatefulSet: pick the second Pod created by the target StatefulSet if the replica number is greater than two. Otherwise, pick the only Pod. Multi-StatefulSet: pick the first Pod created by the target StatefulSet |\n| nan     | loadTarget  | Specifies the name of the preferred Deployment or StatefulSet that is used to load the component data. The target Pod is selected based on how this component is composed: Deployment: pick the only Pod created by the target Deployment. StatefulSet: always pick the first Pod created by the target StatefulSet.                                     |\n| nan     | dumpHooks  | List of hooks that are used to dump the data.                                                                                                       |\n| nan     | backupPostHooks | List of hooks to execute after backup.                                                                                                         |\n| nan     | loadHooks  | List of hooks that are used to load the data of this component from dedicated volume. It might also include cleanup steps after the load is completed. The execution target Pod will be one of the Pods selected from the LoadTarget.                                                         |\n| nan     | volumeSelector | Label selector specifying what persistent volumes to backup. If empty, all PVs are selected.                                                                                           |\n", "content": "## Back up all and restore all\nThis strategy backs up all of the application resources during the backup, and restores all of those resources during the restore. This strategy works best for standalone applications, where applications have no replication between Pods.\nFor a backup all and restore all strategy, include the following information in the resource definition:\n- **Hooks** : define commands that are executed before and after taking volume backups, such as application quiesce and unquiesce steps. These commands are executed on all pods within a component.\n- **Volume selection** : provides finer granularity on which volumes are backed up and restored within the component. Any volumes not selected are not backed up. During a restore, any volumes skipped during backup are restored as empty volumes.\nThis example creates a `ProtectedApplication` resource that quiesces the file system before backing up the logs volume and unquiesces after the backup:\n```\nkind: ProtectedApplicationapiVersion: gkebackup.gke.io/v1metadata:\u00a0 name: nginx\u00a0 namespace: salesspec:\u00a0 resourceSelection:\u00a0 \u00a0 type: Selector\u00a0 \u00a0 selector:\u00a0 \u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 \u00a0 app: nginx\u00a0 components:\u00a0 - name: nginx-app\u00a0 \u00a0 resourceKind: Deployment\u00a0 \u00a0 resourceNames: [\"nginx\"]\u00a0 \u00a0 strategy:\u00a0 \u00a0 \u00a0 type: BackupAllRestoreAll\u00a0 \u00a0 \u00a0 backupAllRestoreAll:\u00a0 \u00a0 \u00a0 \u00a0 backupPreHooks:\u00a0 \u00a0 \u00a0 \u00a0 - name: fsfreeze\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 container: nginx\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Commands: [ /sbin/fsfreeze, -f, /var/log/nginx ]\u00a0 \u00a0 \u00a0 \u00a0 backupPostHooks:\u00a0 \u00a0 \u00a0 \u00a0 - name: fsunfreeze\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 container: nginx\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 commands: [ /sbin/fsfreeze, -u, /var/log/nginx ]\n```\n## Back up one and restore all\nThis strategy backs up one copy of a selected Pod. This single copy is the source for restoring all Pods during a restore. This method can help reduce storage cost and backup time. This strategy works in a high availability configuration when a component is deployed with one primary `PersistentVolumeClaim` and multiple secondary `PersistentVolumeClaims` .\nFor a back up one and restore all strategy, you must include the following information in the resource definition:\n- **Backup target** : specifies which`Deployment`or`StatefulSet`to use to back up the data. The best Pod to back up is automatically selected. In a high availability configuration, Google recommends to back up from a secondary`PersistentVolumeClaim`.\n- **Hooks** : defines commands that are executed before and after taking volume backups, such as application quiesce and unquiesce steps. These commands are only executed on the selected backup Pod.\n- **Volume selection** : provides finer granularity on which volumes are backed up and restored within the component.\nIf a component is configured with multiple `Deployment` or `StatefulSet` resources, all resources must have the same `PersistentVolume` structure, and follow these rules:\n- The number of`PersistentVolumeClaim`resources used by all`Deployment`or`StatefulSet`resources must be the same.\n- The purpose of`PersistentVolumeClaim`resources in the same index must be the same. For`StatefulSet`resources, the index is defined in the`volumeClaimTemplate`. For`Deployment`resources, the index is defined in`Volume`resources and any non-persistent volumes are skipped.\nGiven these considerations, multiple volume sets can be selected for backup, but only one volume from each volume set will be selected.\nThis example, assuming an architecture of one primary `StatefulSet` and a secondary `StatefulSet` , shows a backup of the volumes within a single Pod in a secondary `StatefulSet` , and then a restore to all other volumes:\n```\nkind: ProtectedApplicationapiVersion: gkebackup.gke.io/v1metadata:\u00a0 name: mariadb\u00a0 namespace: mariadbspec:\u00a0 resourceSelection:\u00a0 \u00a0 type: Selector\u00a0 \u00a0 selector:\u00a0 \u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 \u00a0 app: mariadb\u00a0 components:\u00a0 - name: mariadb\u00a0 \u00a0 resourceKind: StatefulSet\u00a0 \u00a0 resourceNames: [\"mariadb-primary\", \"mariadb-secondary\"]\u00a0 \u00a0 strategy:\u00a0 \u00a0 \u00a0 type: BackupOneRestoreAll\u00a0 \u00a0 \u00a0 backupOneRestoreAll:\u00a0 \u00a0 \u00a0 \u00a0 backupTargetName: mariadb-secondary\u00a0 \u00a0 \u00a0 \u00a0 backupPreHooks:\u00a0 \u00a0 \u00a0 \u00a0 - name: quiesce\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 container: mariadb\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 command: [...]\u00a0 \u00a0 \u00a0 \u00a0 backupPostHooks:\u00a0 \u00a0 \u00a0 \u00a0 - name: unquiesce\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 container: mariadb\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 command: [...]\n```\n## Dump and load\nThis strategy uses a dedicated volume for backup and restore processes and requires a dedicated `PersistentVolumeClaim` attached to a component that stores dump data. For a dump and load strategy, include the following information in the resource definition:\n- **Dump target:** specifies which`Deployment`or`StatefulSet`should be used to dump the data. The best Pod to back up is automatically selected. In a high availability configuration, it is recommended to back up from a secondary`PersistentVolumeClaim`.\n- **Load target:** specifies which`Deployment`or`StatefulSet`should be used to load the data. The best Pod to back up is automatically selected. The load target does not have to be the same as the dump target.\n- **Hooks:** defines the commands that are executed before and after taking volume backups. There are specific hooks you must define for dump and load strategies:- **Dump hooks:** defines the hooks that dump the data into the dedicated volume before back up. This hook is executed only on the selected dump Pod.\n- **Load hooks:** defines the hooks that load the data after the application starts. This hook is executed only on the selected load Pod.\n- **Optional - Post-backup hooks:** defines the hooks that are executed after the dedicated volumes are backed up, such as cleanup steps. This hook is executed only on the selected dump Pod.\n- **Volume selection:** specifies all of the dedicated volumes that will store the dump data. You must select only one volume for each dump and load Pod.\nIf the application consists of `Deployments` , each `Deployment` must have exactly one replica.\nThis example, assuming an architecture of one primary `StatefulSet` and a secondary `StatefulSet` with dedicated `PersistentVolumeClaims` for both primary and secondary `StatefulSets` , shows a dump and load strategy:\n```\nkind: ProtectedApplicationapiVersion: gkebackup.gke.io/v1metadata:\u00a0 name: mariadb\u00a0 namespace: mariadbspec:\u00a0 resourceSelection:\u00a0 \u00a0 type: Selector\u00a0 \u00a0 selector:\u00a0 \u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 \u00a0 app: mariadb\u00a0 components:\u00a0 - name: mariadb-dump\u00a0 \u00a0 resourceKind: StatefulSet\u00a0 \u00a0 resourceNames: [\"mariadb-primary\", \"mariadb-secondary\"]\u00a0 \u00a0 backupStrategy:\u00a0 \u00a0 \u00a0 type: DumpAndLoad\u00a0 \u00a0 \u00a0 DumpAndLoad:\u00a0 \u00a0 \u00a0 \u00a0 loadTarget: mariadb-primary\u00a0 \u00a0 \u00a0 \u00a0 dumpTarget: mariadb-secondary\u00a0 \u00a0 \u00a0 \u00a0 dumpHooks:\u00a0 \u00a0 \u00a0 \u00a0 - name: db_dump\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 container: mariadb\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 commands:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - bash\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - \"-c\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mysqldump -u root --all-databases > /backup/mysql_backup.dump\u00a0 \u00a0 \u00a0 \u00a0 loadHooks:\u00a0 \u00a0 \u00a0 \u00a0 - name: db_load\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 container: mariadb\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 commands:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - bash\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - \"-c\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mysql -u root < /backup/mysql_backup.sql\u00a0 \u00a0 volumeSelector:\u00a0 \u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 \u00a0 gkebackup.gke.io/backup: dedicated-volume\n```", "guide": "Documentation"}