{"title": "Cloud Shell - Create private tutorials in Cloud Shell", "url": "https://cloud.google.com/shell/docs/cloud-shell-tutorials/private-tutorials", "abstract": "# Cloud Shell - Create private tutorials in Cloud Shell\nCloud Shell supports the creation of private tutorials, enabling you to design tutorials specifically for your audience.\nAfter you've authored tutorials using the [Writing tutorials in Cloud Shell](/shell/docs/cloud-shell-tutorials/tutorials) guide and followed the best practices detailed in the [Tutorial Style guide](/shell/docs/cloud-shell-tutorials/style-guide) , you can host your tutorial in a private Git repository to make it available to your users.\n", "content": "## Host private tutorials\nTo make your tutorial private, you need a private Git repository to host it in. You can use any Git repository hosting service you prefer. This guide uses [Cloud Source Repositories](/source-repositories) ; private Git repositories hosted on Google Cloud.\n**Note:** To use Cloud Source Repositories, you must enable billing on your project. For details on the cost of using Cloud Source Repositories, see the Cloud Source Repositories [pricing guide](/source-repositories/docs/pricing) .\nTo create a Cloud Source Repositories repository to host your private tutorial:\n- Launch the Cloud Shell terminal. For a standalone Cloud Shell session, use [shell.cloud.google.com](https://shell.cloud.google.com) .\n- Create a private repository:```\ngcloud source repos create REPO_NAME\n```\n- Clone your repository to Cloud Shell:```\ngcloud source repos clone REPO_NAME\n```\n- Move your tutorial file to your locally created repository:```\nmv PATH/TO/TUTORIAL REPO_NAME/PATH/TO/TUTORIAL\n```\n- Go to your local repository:```\ncd REPO_NAME\n```\n- Add the tutorial to commit:```\ngit add .\n```\n- Commit the files to the repository with a comment describing the history of this action:```\ngit commit -m \"Add private tutorial to Cloud Source Repositories\"\n```\n- Using the `git push` command, add the contents of the local repository to Cloud Source Repositories:```\ngit push origin master\n```\n- View your repository and its contents in the Google Cloud console: [Open Cloud Source Repositories](https://source.cloud.google.com/repos) ## Create an Open in Cloud Shell link\nTo help your users reach your tutorial, you can use the Cloud Shell's Open in Cloud Shell feature that lets you define how users access your tutorial. For details on how to customize your link, see the [Open in Cloud Shell guide](https://cloud.google.com/shell/docs/open-in-cloud-shell) .\nFor a tutorial hosted in a Cloud Source Repositories repository, you'll need to define the `cloudshell_git_repo` parameter with the URL of your repository.\nAn example of a link with `cloudshell_git_repo` defined:\n```\nhttps://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://source.developers.google.com/p/project_name/r/repo_name\n```\nYou can style this link as a button to embed in your documentation for your users to easily find:\n```\n[![Open in Cloud Shell](https://gstatic.com/cloudssh/images/open-btn.svg)](https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://source.developers.google.com/p/project_name/r/repo_name)\n```\n## Customize tutorials with add-on tools\nYou can further customize your private tutorial experience by providing your users with custom tooling to work with your tutorial.\nTo do so, you can create a Docker image that functions as a custom Cloud Shell environment with all the additional packages and custom configurations you want made available to your user. For details on how to create a custom container image and update your Open in Cloud Shell link to reference this container image, see the [Customizing container image guide](/shell/docs/customizing-container-image) .", "guide": "Cloud Shell"}