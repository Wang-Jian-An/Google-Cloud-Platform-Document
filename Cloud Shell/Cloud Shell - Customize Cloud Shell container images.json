{"title": "Cloud Shell - Customize Cloud Shell container images", "url": "https://cloud.google.com/shell/docs/customizing-container-image", "abstract": "# Cloud Shell - Customize Cloud Shell container images\nThis page describes how to create and use a custom Docker image as a Cloud Shell environment.\nTo create a custom Cloud Shell experience, create a Docker image that functions as a custom Cloud Shell environment with your specified additional packages and custom configurations. Your Docker image must be based on the base [Cloud Shell image](https://gcr.io/cloudshell-images/cloudshell:latest) and hosted in Container Registry.\n**Note:** Container Registry is deprecated and scheduled for shutdown. Organizations that haven't used Container Registry prior to January 8, 2024 have new gcr.io repositories hosted on Artifact Registry by default. After May 15, 2024, Google Cloud projects without previous usage of Container Registry will only support hosting and managing images for the `gcr.io` domain in [Artifact Registry](/artifact-registry/docs) .Container Registry is scheduled for shutdown on March 18, 2025. For details on the deprecation, see [Container Registry deprecation](/container-registry/docs/deprecations/container-registry-deprecation) .\n", "content": "## Create a custom Docker image\nTo follow step-by-step guidance for this task directly in the Cloud Shell Editor, click **Guide me** :\n[Guide me](https://ide.cloud.google.com/?walkthrough_id=shell--custom_shell_image)\nCreate your own custom Docker image by following these instructions:\n- In a Cloud Shell terminal tab, run the following command to create a boilerplate custom image in a repository hosted by Cloud Source Repositories:```\ncloudshell env create-custom-image NEW_REPO_NAME\n``` **Note:** If you'd like to use an existing repository, you can view a list of your repositories by running `gcloud source repos list` .Alternatively, if you'd prefer to manually deploy to Container Registry or use your own automation flow, you can create a new, empty Dockerfile and skip to step 3.\n- Open your new Dockerfile by following the instructions printed to your command line:```\ncd $HOME/NEW_REPO_NAME && cloudshell edit Dockerfile\n```\n- Add any additional packages you want made available in your Cloud Shell experience below the first line. For example:```\nFROM gcr.io/cloudshell-images/cloudshell:latestRUN apt-get -y install lsof\n```The first line in your Dockerfile, `FROM gcr.io/cloudshell-images/cloudshell:latest` , references the base Cloud Shell image and shouldn't be removed.\n- Build your image locally by running:```\ncloudshell env build-local\n```\n- Test your image locally and verify that your installed packages are present by running:```\ncloudshell env run\n```To exit testing, run:```\nexit\n```\n- Commit your code changes locally:```\ngit commit -a -m \"Initial custom environment check-in.\"\n```\n- Push your code changes to Cloud Source Repositories:```\ngit push origin master\n```\n- Finally, push your custom image to Container Registry:```\ncloudshell env push\n```## Update your Open in Cloud Shell link\nTo use your custom image with [Open in Cloud Shell](/shell/docs/open-in-cloud-shell) links, you need to make it public first. For steps to make a custom image public, follow the [Container Registry access control guide](/container-registry/docs/access-control) .\nAfter you've set up the right access settings, you can update your **Open in Cloud Shell** link to specify the `cloudshell_git_repo` and `cloudshell_image` parameters. For example, to add an **Open in CloudShell** button, edit the URLs in following example and then add a link similar to the following to your Markdown file:\n```\n[![Open in Cloud Shell](https://gstatic.com/cloudssh/images/open-btn.svg)](https://shell.cloud.google.com/cloudshell/editor?cloudshell_git_repo=REPO_URL&cloudshell_image=DOCKER_IMAGE_URL)\n```\nReplace the following values:\n- : URL to the location of your repository\n- : URL to the Docker image\nFor more information about these and other parameters, see [Open in Cloud Shell](/shell/docs/open-in-cloud-shell) .\n## Keeping custom container image up-to-date\nYour custom container must be based on the latest public [Cloud Shell image](https://gcr.io/cloudshell-images/cloudshell:latest) to work on Cloud Shell. We recommend that you perform weekly rebuilds to keep the custom image up-to-date.", "guide": "Cloud Shell"}