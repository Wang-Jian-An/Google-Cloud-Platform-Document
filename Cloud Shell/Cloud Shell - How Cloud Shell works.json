{"title": "Cloud Shell - How Cloud Shell works", "url": "https://cloud.google.com/shell/docs/how-cloud-shell-works", "abstract": "# Cloud Shell - How Cloud Shell works\nCloud Shell provisions a Compute Engine virtual machine running a Debian-based Linux operating system for your temporary use. This virtual machine is owned and managed by Google Cloud, so will not appear within any of your Google Cloud projects.\n**Note:** Your organization controls whether you have access to Cloud Shell.\nCloud Shell instances are provisioned on a per-user, per-session basis. The instance persists while your Cloud Shell session is active; after an hour of inactivity, your session terminates and its VM is discarded. For more on usage quotas, refer to the [limitations guide](/shell/docs/limitations#usage_limits) .\nWith the default Cloud Shell experience, you are allocated with an ephemeral, pre-configured VM and the environment you work with is a Docker container running on that VM. You can also [customize yourenvironment](/shell/docs/custom-environments) automatically on VM boot to ensure that your Cloud Shell instance includes your preferred tools.\n", "content": "## Persistent disk storage\nCloud Shell provisions 5 GB of free [persistent disk storage](/compute/docs/disks/persistent-disks) mounted as your `$HOME` directory on the virtual machine instance. This storage is on a per-user basis and is available across projects. Unlike the instance itself, this storage does not time out on inactivity. All files you store in your home directory, including installed software, scripts and user configuration files like `.bashrc` and `.vimrc` , persist between sessions. Your `$HOME` directory is private to you and can't be accessed by other users.\n**Warning:** If you delete your `$HOME` directory, or if you don't access Cloud Shell for 120 days, Cloud Shell automatically deletes your `$HOME` directory and can't recover your files. You'll receive an email notification before this occurs. Starting a Cloud Shell session prevents the `$HOME` directory persistent storage from being recycled.\nFor more control of your storage persistence, you can use [Cloud Workstations](https://cloud.google.com/workstations/docs/overview) .\nCloud Shell also offers [Ephemeral mode](/shell/docs/using-cloud-shell#choosing_ephemeral_mode) which is the Cloud Shell experience without persistent disk storage. With Ephemeral mode, you'll have faster startup times but all the files you create in your session are lost on session end.\n## Authorization\nWhen you make a Google Cloud API call or use a command-line tool that requires credentials (such as the Google Cloud CLI) with Cloud Shell for the first time, Cloud Shell prompts you to authorize. Click **Authorize** to allow the tool to use your credentials to make calls.\nRefer to the [Authorizing with Cloud Shell](/shell/docs/auth) for more details.\n## Pre-configured environment variables\nWhen Cloud Shell is started, the active project in the Google Cloud console is propagated to your `gcloud` configuration inside Cloud Shell for immediate use. `GOOGLE_CLOUD_PROJECT` , the environmental variable used by Application Default Credentials library support to define the project ID, is also set to point to the active project in the Google Cloud console. The environment variable `WEB_HOST` points to the hostname of your Cloud Shell VM which you can use to make HTTPS requests to the environment.\n**Note:** While `GOOGLE_CLOUD_PROJECT` inherits the active project from the Google Cloud console, your Cloud Shell instance is not directly associated with or managed by this project.\n## Zone selection\nCloud Shell is globally distributed across multiple Google Cloud regions. When you first connect to Cloud Shell, you are automatically assigned to the closest available region. You can't pick your own region and if Cloud Shell doesn't pick the closest region, Cloud Shell tries to migrate your Cloud Shell VM to a closer region when your Cloud Shell VM isn't in use.\nTo view your current region, run the following command from a Cloud Shell session:\n```\ncurl metadata/computeMetadata/v1/instance/zone\n```\n## Image rollout\nThe Cloud Shell container image is updated weekly to keep prepackaged tools up to date. This means Cloud Shell always comes with the latest versions of the gcloud CLI, Docker, and other utilities.\n## Root user\nWhen you set up a Cloud Shell session, you get a regular Unix user account with a username based on your email address. With this access, you have full root privileges on your allocated VM and can even run sudo commands, if you need to.\n## Available tools\nThe Cloud Shell virtual machine instance has the following pre-installed tools:\n| Type      | Tool                    |\n|:-------------------------|:-----------------------------------------------------------------------------------|\n| Linux shell interpreters | bash sh                   |\n| Linux utilities   | Standard Debian system utilities             |\n| gcloud CLI and tools  | App Engine SDK Google Cloud CLI including the gcloud CLI gsutil for Cloud Storage |\n| Text editors    | Emacs Vim Nano                  |\n| Build and package tools | Gradle Helm Make Maven Bazel npm nvm pip Composer         |\n| Source control tools  | Git Mercurial                  |\n| Additional tools   | Docker iPython MySQL client gRPC compiler TensorFlow Terraform      |\nYou can install additional software packages on the virtual machine instance but the installation will not persist after the instance terminates unless you install the software in your `$HOME` directory or create a [custom environment](/shell/docs/custom-environments) .\n## Language support\n**Note:** Language versions might change. You can however install different versions if you need to using the [environment customization script](/shell/docs/configuring-cloud-shell#environment_customization) .\nThe Cloud Shell virtual machine instance provides pre-installed language support for the following:\n| Language | Version                  |\n|:-----------|:------------------------------------------------------------------------------|\n| Java  | JRE/JDK 17.0.6 (OpenJDK)              |\n| Go   | 1.20.4                  |\n| Python  | 3.9.2                   |\n| Node.js | v18.12.1                  |\n| Ruby  | 2.7.8                   |\n| PHP  | 7.4.33                  |\n| .NET Core | SDKs 2.1, 3.1, 5.0, and 6.0 Core runtimes 2.1.30, 3.1.32, 5.0.17, and 6.0.16 |\nThe default version of the Java environment is 11. To change the current Cloud Shell session to use version 1.8 of the JRE and JDK, enter the following at the Cloud Shell command prompt:\n```\nsudo update-java-alternatives -s java-1.8.0-openjdk-amd64 && export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\n```\nTo change back to 11:\n```\nsudo update-java-alternatives -s java-1.11.0-openjdk-amd64 && export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/jre\n```\n## Safe mode\nIf there's a problem in your `.bashrc` or `.tmux.conf` files, Cloud Shell immediately closes after connection. Safe mode restarts your Cloud Shell instance and logs you in as root, allowing you to fix any issues in the files.\nTo open Cloud Shell in safe mode:\n- Append`cloudshellsafemode=true`to the URL.\n- In Cloud Shell, clickmore_vert, click **Safe Mode** , and then click **Restart** .\nTo permanently delete all files in your home directory and restore your Cloud Shell home directory to a clean state, you can [reset your Cloud Shell VM](/shell/docs/resetting-cloud-shell) .", "guide": "Cloud Shell"}