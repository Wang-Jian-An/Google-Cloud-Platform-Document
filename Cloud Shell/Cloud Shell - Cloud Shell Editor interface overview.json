{"title": "Cloud Shell - Cloud Shell Editor interface overview", "url": "https://cloud.google.com/shell/docs/editor-overview", "abstract": "# Cloud Shell - Cloud Shell Editor interface overview\nThis page describes the features of the Cloud Shell Editor.\n", "content": "## View and edit files\nCloud Shell comes with a built-in code editor that allows you to browse file directories, and view and edit files, with continued access to the Cloud Shell. The Cloud Shell Editor is available by default with every Cloud Shell instance, and is based on [Code OSS](https://github.com/microsoft/vscode) .\nTo work with the Cloud Shell Editor, follow these steps:\n- Launch the Cloud Shell Editor by clicking **Open Editor** on the toolbar of the Cloud Shell window. The editor opens above the Cloud Shell terminal window. **Tip:** You can also launch the Cloud Shell Editor by navigating to [ide.cloud.google.com](https://ide.cloud.google.com) .\n- Use the side bar on the left to browse the file directories. Use the editor groups on the right to view and edit your files.\n- Use the activity bar on the left to toggle the editor and the Cloud Shell window, upload and download files, preview web applications on a Cloud Shell virtual machine instance, and view usage statistics.For more information about the user interface, see [User interface](https://code.visualstudio.com/docs/getstarted/userinterface) .## Open a file in Cloud Shell Editor\nTo open an existing file in Cloud Shell Editor from Cloud Shell, run the [cloudshell](/shell/docs/using-cloudshell-command) command:\n```\ncloudshell edit README-cloudshell.txt\n```\n## Upload and download files\nYou can manage your files with the Cloud Shell Editor Explorer. Right-click the directory or file you want to use in the Cloud Shell Editor Explorer and then click one of the available options: **Download** , **Upload** .\n## Activity bar\nTo open the Cloud Shell Editor views, in the activity bar, click **Cloud Code** .\nFrom the Cloud Code view, you can expand the following views:\n- Development Sessions: Monitor your Kubernetes applications with a structured logging view.\n- Kubernetes: Monitor and manage your GKE and minikube resources. For more information, see [Manage Kubernetes clusters](/code/docs/shell/adding-a-cluster) .\n- Cloud Run: Monitor and manage your Cloud Run resources. For more information, see [Manage Cloud Run services in Cloud Run](/code/docs/shell/manage-cloud-run-services) \n- Cloud APIs: Browse and enable Cloud APIs and add Cloud Client Libraries to your project. For more information, see [Manage Cloud APIs and Cloud Client Libraries](/code/docs/shell/client-libraries) \n- Secret Manager: Manage secrets in Secret Manager. For more information, see [Manage secrets with Secret Manager(/code/docs/shell/secret-manager).\n- Help and feedback: Links to open walkthroughs, view documentation, change settings, report issues or request features, view release notes, or sign out of Google Cloud.\nThe activity bar also includes the following views:\n- **Explorer** : View the folders and files in your current workspace.\n- **Search** : Search your files for a string or regular expression.\n- **Source Control** : Manage application files with the Cloud Shell Editor's Git support.\n- **Debug** : Debug your application by setting breakpoints and inspecting variables.## Language support\nThe Cloud Shell Editor supports Go, Python, Java, .NET Core, and Node.js, providing language features such as:\n- Smart highlighting, code suggestions, and context-based completions\n- Linting and providing descriptive errors\n- Code navigation (Go to definitions, declarations, references, and implementations)\n- Intuitive debugging support## Cloud Code integration\nThe Cloud Shell Editor comes with Cloud Code support.\nCloud Code provides IDE support for the full development cycle of Kubernetes and Cloud Run applications, from creating and customizing a new application from a sample application to running your finished application. Cloud Code also provides run-ready samples, out-of-the-box configuration snippets, and a tailored debugging experience.\nCloud Code supports the development of applications in Node.js, Python, Java, Go, and .NET Core.\nIn addition to the Cloud Code menu available in the status bar of Cloud Shell, you can also access Cloud Code commands using the command palette; press `Cmd` / `Ctrl` + `Shift` + `P` or click **View** > **Command Palette** to display available commands.\nFor a comprehensive look at what you can do with Cloud Code using Cloud Shell, see [Getting started with Cloud Code](/shell/docs/getting-started-with-cloud-code) .\n## Version control support\nCloud Shell Editor comes with pre-configured version control. With Cloud Shell, you can initialize repositories, diff between file states, stage, unstage, and commit changes.\nFor more information, see [Using version control](/shell/docs/version-control) .\n## Workspace management\nWith Cloud Shell, you can manage and configure your projects as workspaces. Workspaces usually represent your root project folder and with the Cloud Shell Editor, you can create, open, and save workspaces as well as customize them with project-specific settings.\nFor more information about working with workspaces, see [Workspace management](/shell/docs/workspaces) .\n## Debugging support\nCloud Shell allows you to easily debug your application, with full debugging support for Go, Node.js, Python, and Java applications. You can create launch configurations, set breakpoints, and inspect variables, all inside Cloud Shell Editor.\nAdditionally, you can debug Kubernetes applications on a local cluster (like minikube or Docker Desktop) or a remote cluster on GKE or any other Cloud provider.\nFor more information, see [Debugging with Cloud Shell](/shell/docs/debugging) .\n## Built-in terminal\nAccess your underlying Cloud Shell instance without having to leave the editor by navigating to **Terminal** > **New Terminal** . You can also run multiple terminal windows by using the **Split Terminal** option.", "guide": "Cloud Shell"}