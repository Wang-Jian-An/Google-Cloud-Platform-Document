{"title": "Cloud Shell - Workspace management in the Cloud Shell Editor", "url": "https://cloud.google.com/shell/docs/workspaces", "abstract": "# Cloud Shell - Workspace management in the Cloud Shell Editor\nThe Cloud Shell Editor lets you manage your projects as workspaces. A workspace usually represents the root folder of your project and includes your project-specific configuration files. A Home workspace (based on your Home directory) is created for you automatically.\nWith workspaces, you can specify persistent settings, run and debug configurations, and UI states (like open files) for all the folders in your workspace.\nThis page explains how to create, open, save, and close a workspace, and configure Cloud Shell Editor and workspace settings.\n", "content": "## Create a new workspace\nTo create a new workspace:\n- Using the Cloud Shell terminal, create a new directory to use as your workspace:- Use`mkdir`to manually create a new directory\n- Use`git clone`to copy in an existing repository\n- After your directory is ready, open it as a new workspace by clicking **File** > **Open Workspace** .## Open a workspace\nYou can open a workspace in one of the following ways:\n- Click **File** > **Open Folder** .\n- If no workspaces are open, click the **Open Folder** button in the Cloud Shell Editor Explorer view.\n- Select a recently opened workspace from the Recent section in the Welcome to Cloud Shell window.Alternatively, click **File** > **Open Recent Workspace** .## Open a Home workspace\nTo operate using a Home workspace, open your Home directory as your workspace by clicking **File** > **Open Folder** and then choose your Home directory.\n### Save a workspace\nAfter you've added project folders to your workspace and configured it, you can save your workspace under a new name by clicking **File** > **Save Workspace As** .\n### Close a workspace\nTo close your workspace, click **File** > **Close Folder** and then click **OK** when prompted.\n## Configure settings\nThe Cloud Shell Editor's behavior and interface are easily configured with the Settings menu. You can define your preferences for debugging configurations, YAML editing support, and Command Palette history limits, among a variety of settings using this Settings editor. Settings are accessible through the Settings Gear , in the bottom left corner of the editor.\nThere are three scopes for settings:\n- **User settings:** : Globally-applicable settings, applied to all your instances     of the Cloud Shell Editor. This configuration is     stored in the browser.\n- **Remote settings:** : Globally-applicable settings, applied to all your     instances of the Cloud Shell Editor. These     settings are stored in your Cloud Shell home     directory under     $HOME/.codeoss/data/Machine/settings.json.\n- **Workspace settings** : Workspace-specific settings, applied to only the     active workspace. These settings are saved in the     .codeoss/settings.json file in your workspace folder and     can be shared using [version control](/shell/docs/version-control) or by [downloading](/shell/docs/uploading-and-downloading-files) the workspace folder.\n**Note:** When a setting is set in more than one scope remote settings override user settings, and workspace settings override both remote and user settings.\nTo search for a setting, you can use the **Search Settings** search bar that returns a set of settings that match your query, filtering out those that don't relate to your criteria. The settings themselves can be set either by filling in the input field, choosing an option from a dropdown menu, or toggling a checkbox.", "guide": "Cloud Shell"}