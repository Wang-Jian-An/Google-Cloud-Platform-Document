{"title": "Compute Engine - Sending email with SendGrid", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Sending email with SendGrid\nThis tutorial shows how to use SendGrid to send email from an app running on a Compute Engine virtual machine (VM) instance.", "content": "## Objectives\n- Use SendGrid with Postfix on a Compute Engine instance.\n- Use SendGrid in Java code running on a Compute Engine instance.\n- Use SendGrid in Node.js code running on a Compute Engine instance.\n- Use SendGrid with a Microsoft Exchange edge transport server on a Compute Engine instance.\nFor other information about setting up SendGrid, see the [SendGrid developerdocumentation](https://sendgrid.com/docs/for-developers) .## CostsIn this document, you use the following billable components of Google Cloud:- Compute Engine\nTo generate a cost estimate based on your projected usage,  use the [pricing calculator](/products/calculator) . ## Before you begin- In the Google Cloud console, go to the **Create an instance** page. [Go to Create an instance](https://console.cloud.google.com/compute/instancesAdd) \n- Set **Name** to`sendgrid-tutorial`.\n- In the **Boot disk** section, click **Change** to begin configuring your boot disk.\n- On the **Public images** tab, choose **a Debian or CentOS image version** .\n- Click **Select** .\n- To create the VM, click **Create** .\n- Use the [Google Cloud Marketplace](https://console.cloud.google.com/marketplace/details/sendgrid-app/sendgrid-email) to sign up for the SendGrid email service. Make a note of your SendGrid SMTP  account credentials, which include username, password, and hostname. Your  SMTP username and password are the same as what you used to sign up for the  service. The SendGrid hostname is`smtp.sendgrid.net`.\n- Create an API key:- [Sign in to SendGrid](https://sendgrid.com) and go to **Settings > API Keys** .\n- Create an API key.\n- Select the permissions for the key. At a minimum, the key must have **Mail send** permissions to send email.\n- Click **Save** to create the key.\n- SendGrid generates a new key. This is the **only** copy  of the key, so make sure that you copy the key and save it for later.## Sending mail from your instance with PostfixComplete the following steps to connect to your **sendgrid-tutorial** instance and run SendGrid with [Postfix](http://www.postfix.org/) .\n **Note:** The SendGrid documentation provides a set of instructions for Postfix installation and setup. If you run into issues setting up Postfix with SendGrid, review the [SendGrid Postfix](https://sendgrid.com/docs/Integrate/Mail_Servers/postfix.html) instructions.\n### Connect to your sendgrid-tutorial instance using SSH\n- In the Google Cloud console, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- In the list of virtual machine instances, click **SSH** in the row of  the instance that you want to connect to.\n### Configuring SendGrid as an SMTP relay with PostfixRun the following commands in your SSH terminal to use SendGrid as an SMTP relay with Postfix.- Become a superuser:```\nsudo su ```\n- Set a safe umask:```\numask 077\n```\n- Install the Postfix Mail Transport Agent:\n```\napt update && apt -y install postfix libsasl2-modules\n```\n```\nyum install postfix cyrus-sasl-plain cyrus-sasl-md5 -y\n```\nIf prompted, select the **Local Only** configuration and accept the default domain name.\n- Modify the Postfix configuration options. Open `/etc/postfix/main.cf` for editing. For example, to use the `nano` text editor, enter the following command:```\nnano /etc/postfix/main.cf\n```\n- Update the file:- Comment out the following lines:```\n# default_transport = error\n# relay_transport = error\n```\n- Add the following lines to the end of the file:```\nrelayhost = [smtp.sendgrid.net]:2525smtp_tls_security_level = encryptsmtp_sasl_auth_enable = yessmtp_sasl_password_maps = hash:/etc/postfix/sasl_passwdheader_size_limit = 4096000smtp_sasl_security_options = noanonymous\n```The above lines enforce SSL/TLS support and configure SMTP authentication for these requests. A simple access and security layer (SASL) module handles authentication in the Postfix configuration.\n- Save and close the file.\n- Generate the SASL password map using the API key you generated in the [Before you begin](#before-you-begin) section. Replace `` with the API key you generated.```\necho [smtp.sendgrid.net]:2525 apikey:your-api-key >> /etc/postfix/sasl_passwd\n```\n- Use the `postmap` utility to generate a `.db` file:```\npostmap /etc/postfix/sasl_passwd\n```\n- Verify that you have a `.db` file:```\nls -l /etc/postfix/sasl_passwd*\n``````\n-rw------- 1 root root ... /etc/postfix/sasl_passwd\n-rw------- 1 root root ... /etc/postfix/sasl_passwd.db\n```\n- Remove the file containing your credentials because it is no longer needed:```\nrm /etc/postfix/sasl_passwd\n```\n- Set the permissions on your `.db` file and verify that the other file was removed:```\nchmod 600 /etc/postfix/sasl_passwd.dbls -la /etc/postfix/sasl_passwd*\n``````\n-rw------- 1 root root ... /etc/postfix/sasl_passwd.db\n```\n- Reload your configuration to load the modified parameters:\n```\n/etc/init.d/postfix restart\n```\n```\npostfix reload\n```\n- Install the `mailutils` or `mailx` package:\n```\napt -y install mailutils\n```\n```\nyum install mailx -y\n```\n- Send a test email:```\necho 'message' | mail -s subject email@example.com\n```Replace the following:- ``: The body of the email.\n- ``: The subject of the email.\n- ``: The email address that you want to send a message to.\nLook in your system logs for a status line containing `status` and the successful server response code `(250)` :\n```\ntail -n 5 /var/log/syslog\n```\n```\ntail -n 5 /var/log/maillog\n```\n## Sending mail with Java on your instance\n### Connect to your sendgrid-tutorial instance using SSH\n- In the Google Cloud console, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- In the list of virtual machine instances, click **SSH** in the row of  the instance that you want to connect to.\n### Construct and send an email messageThe following instructions use the SendGrid [Java client library](https://sendgrid.com/docs/Integrate/Code_Examples/java.html) to construct and send an email message through SendGrid. You can view the full example on [GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/tree/master/compute/sendgrid) .\nIn your SSH terminal:- Become a superuser and set a safe umask:```\nsudo su -umask 077\n```\n- Install Java and Maven:```\napt -y update && apt -y install git-core openjdk-11-jdk maven\n```\n- Clone the GitHub repo:```\ngit clone https://github.com/GoogleCloudPlatform/java-docs-samples.git\n```\n- Go to the main source code for the example:```\ncd /root/java-docs-samples/compute/sendgrid/src/main/java/com/example/compute/sendgrid\n```\n- Open `SendEmailServelet.java` for editing.- Replace `` with the [API key](https://sendgrid.com/docs/Classroom/Send/How_Emails_Are_Sent/api_keys.html) for your SendGrid account.\n- Replace `` with the email address you want to send mail from.\n- Replace `` with the email address you want to send mail to.\n- Go to the root directory of the sample code:```\ncd /root/java-docs-samples/compute/sendgrid\n```\n- Package the Java class:```\nmvn clean package\n```\n- Go to the new `target` directory:```\ncd target\n```\n- Set permissions that let you execute the jar file:```\nchmod +x compute-sendgrid-1.0-SNAPSHOT-jar-with-dependencies.jar\n```\n- Run the alternative Java version selector:```\nupdate-alternatives --config java\n```Select the `java-11-openjdk-amd64` option.\n- Execute the Java file:```\njava -jar compute-sendgrid-1.0-SNAPSHOT-jar-with-dependencies.jar\n```\n## Sending mail with Node.js on your instanceTo run this sample, you must have `Node.js` version 7.6 or later installed on the VM instance.\n### Connect to your sendgrid-tutorial instance using SSH\n- In the Google Cloud console, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- In the list of virtual machine instances, click **SSH** in the row of  the instance that you want to connect to.\n### Construct and send an email messageIn your SSH terminal:- Become a superuser and set a safe umask:```\nsudo su -umask 077\n```\n- Update your package repositories:\n```\napt update\n```\n```\nyum update -y\n```\n- Install Node.js dependencies:\n```\napt -y install git-core curl build-essential openssl libssl-dev\n```\n```\nyum install git-core curl openssl openssl-devel -yyum groupinstall \"Development Tools\" -y\n```\n- Install [Node.js](https://nodejs.org/en/download/package-manager/) . By default, the installation also installs [npm](https://www.npmjs.com/) :\n```\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo bash -sudo apt -y install nodejs\n```\n```\ncurl --silent --location https://rpm.nodesource.com/setup_14.x | bash ```\nThen, install Node.js:\n```\nyum -y install nodejs\n```\n- Install the SendGrid Node.js client:```\nnpm install sendgrid\n```\n- Clone the sample repository:```\ngit clone https://github.com/GoogleCloudPlatform/nodejs-docs-samples.git\n```\n- Go to the directory that contains the SendGrid sample:```\ncd nodejs-docs-samples/compute\n```\n- Copy the `sendgrid.js` file:```\ncp sendgrid.js sendmail.js\n```\n- Open `sendmail.js` for editing.- Replace `` with the [API key](https://sendgrid.com/docs/Classroom/Send/How_Emails_Are_Sent/api_keys.html) for your SendGrid account.\n- Replace `` with the email address that you want to send mail from.\n- Replace `` with the email address that you want to send mail to.\n [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/compute/sendgrid.js) ```\n// This sample is based off of:// https://github.com/sendgrid/sendgrid-nodejs/tree/master/packages/mailconst sendgrid = require('@sendgrid/mail');sendgrid.setApiKey(process.env.SENDGRID_API_KEY || '<your-sendgrid-api-key>');async function sendgridExample() {\u00a0 await sendgrid.send({\u00a0 \u00a0 to: 'to_email@example.com',\u00a0 \u00a0 from: 'from_email@example.com',\u00a0 \u00a0 subject: 'Sendgrid test email from Node.js on Google Cloud Platform',\u00a0 \u00a0 text: 'Well hello! This is a Sendgrid test email from Node.js on Google Cloud Platform.',\u00a0 });}sendgridExample();\n```\n- Run the program to send an email message through SendGrid:```\nnode sendmail.js\n```\n## Sending mail from an Exchange edge transport serverYou can set up Microsoft Exchange to send outbound email with SendGrid by configuring an outbound send connector. For details, see [Deploying Microsoft Exchange Server 2016 on Compute Engine](/solutions/deploying-microsoft-exchange-server-2016-on-compute-engine#setting_up_outbound_email_flow_by_using_sendgrid) .## Clean upTo avoid incurring charges to your Google Cloud account for the resources used in this   tutorial, either delete the project that contains the resources, or keep the project and   delete the individual resources.\n### Delete the project\nThe easiest way to eliminate billing is to delete the project that you created for the tutorial.\nTo delete the project:\n- **Caution** : Deleting a project has the following effects:- **Everything in the project is deleted.** If you used an existing project for  the tasks in this document, when you delete it, you also delete any other work you've  done in the project.\n- **Custom project IDs are lost.** When you created this project, you might have created a custom project ID that you want to use in  the future. To preserve the URLs that use the project ID, such as an`appspot.com`URL, delete selected resources inside the project instead of deleting the whole project.\nIf you plan to explore multiple architectures, tutorials, or quickstarts, reusing projects  can help you avoid exceeding project quota limits.\n- In the Google Cloud console, go to the **Manage resources** page. [Go to Manage resources](https://console.cloud.google.com/iam-admin/projects) \n- In the project list, select the project that you  want to delete, and then click **Delete** .\n- In the dialog, type the project ID, and then click **Shut down** to delete the project.### Delete your Compute Engine instance\nTo delete a Compute Engine instance:\n- In the Google Cloud console, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- Select the checkbox for   your`sendgrid-tutorial`instance.\n- To delete the instance, clickmore_vert **More actions** , click **Delete** ,  and then follow the instructions.\n## What's nextExplore reference architectures, diagrams, and best practices about Google Cloud. Take a look at our [Cloud Architecture Center](/architecture) .", "guide": "Compute Engine"}