{"title": "Documentation - KRM API backup.gdc.goog/v1 control plane API", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - KRM API backup.gdc.goog/v1 control plane API\n", "content": "## backup.gdc.goog/v1\nPackage v1 contains API Schema definitions for the hybrid v1 API group\n### Backup\nBackup is the Schema for the backups API.\n- [BackupList](#backuplist)\n| Field    | Description             |\n|:--------------------|:--------------------------------------------------------------|\n| apiVersion string | backup.gdc.goog/v1           |\n| kind string   | Backup              |\n| metadata ObjectMeta | Refer to Kubernetes API documentation for fields of metadata. |\n| spec BackupSpec  | nan               |\n| status BackupStatus | nan               |\n### BackupConfig\nBackupConfig is an inner message type that defines the configuration of creating a backup from this BackupPlan.\n- [BackupPlanSpec](#backupplanspec) - [BackupSpec](#backupspec)\n| Field       | Description                                                                                        |\n|:------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| backupScope BackupScope  | BackupScope specifies the resource selection scope of a Backup. Examples include: all_namespaces, selected namespaces, and selected applications. You must specify a single value for backup_scope. The BackupScope must be one of the following types: BackupScope: * BackupConfig_AllNamespaces * BackupConfig_SelectedNamespaces * BackupConfig_SelectedApplications |\n| backupRepository string  | BackupRepository is the name of the BackupRepository identifying the secondary storage for this BackupPlan.                                                                |\n| includeVolumeData boolean  | IncludeVolumeData is a boolean flag that specifies whether volume data should be backed up. If unset, the default is false.                                                            |\n| includeSecrets boolean  | IncludeSecrets is a boolean flag that specifies whether secrets should be backed up. If unset, the default is false.                                                             |\n| encryptionKey EncryptionKey | EncryptionKey specifies an encryption key. This field is immutable.                                                                          |\n| volumeStrategy VolumeStrategy | VolumeStrategy specifies tradeoffs to use when backing up volumes.                                                                          |\n### BackupInfo\nBackupInfo holds the name and state of a backup in RecentBackups.\n- [BackupPlanStatus](#backupplanstatus)\n| Field    | Description            |\n|:------------------|:----------------------------------------------------------|\n| name string  | Name is the name of the Backup.       |\n| state BackupState | State is the status of the most recently executed Backup. |\n### BackupList\nBackupList contains a list of Backups.\n| Field    | Description             |\n|:-------------------|:--------------------------------------------------------------|\n| apiVersion string | backup.gdc.goog/v1           |\n| kind string  | BackupList             |\n| metadata ListMeta | Refer to Kubernetes API documentation for fields of metadata. |\n| items Backup array | nan               |\n### BackupPlan\nBackupPlan is the Schema for the BackupPlans API.\n- [BackupPlanList](#backupplanlist)\n| Field     | Description             |\n|:------------------------|:--------------------------------------------------------------|\n| apiVersion string  | backup.gdc.goog/v1           |\n| kind string    | BackupPlan             |\n| metadata ObjectMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| spec BackupPlanSpec  | nan               |\n| status BackupPlanStatus | nan               |\n### BackupPlanList\nBackupPlanList contains a list of BackupPlans.\n| Field     | Description             |\n|:-----------------------|:--------------------------------------------------------------|\n| apiVersion string  | backup.gdc.goog/v1           |\n| kind string   | BackupPlanList            |\n| metadata ListMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| items BackupPlan array | nan               |\n### BackupPlanSpec\nBackupPlanSpec defines the desired state of BackupPlan.\n- [BackupPlan](#backupplan)\n| Field       | Description                                                                                |\n|:--------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| clusterName string    | ClusterName is the name of the source cluster in a project of which this plan is associated with.                                                          |\n| backupSchedule Schedule   | BackupSchedule defines the scheduled Backup creation under this BackupPlan.                                                                |\n| backupConfig BackupConfig  | BackupConfig defines the Backup configuration of this BackupPlan.                                                                  |\n| retentionPolicy RetentionPolicy | RetentionPolicy governs the lifecycle of Backups created under this plan.                                                                |\n| description string    | Description is a user specified descriptive string for this BackupPlan.                                                                 |\n| deactivated boolean    | Deactivated is a boolean flag that indicates whether the plan has been deactivated. Setting this field to \"True\" locks the plan meaning no further updates will be allowed, including changes to the deactivated field. It also prevents new backups from being created under this plan, both manually or scheduled. Default to \"False\". |\n### BackupPlanStatus\nBackupPlanStatus defines the observed state of a BackupPlan.\n- [BackupPlan](#backupplan)\n| Field       | Description                       |\n|:-------------------------------|:------------------------------------------------------------------------------------------------------|\n| lastBackupTime Time   | LastBackupTime is the timestamp for the most recently executed Backup.        |\n| nextBackupTime Time   | NextBackupTime is the timestamp for the next scheduled Backup.          |\n| state State     | State details the current state of the BackupPlan.             |\n| lastBackupState BackupState | LastBackupState is the state of the most recently created Backup.          |\n| lastBackupStateReason string | LastBackupStateReason is a human-readable description of why the last Backup is in the current state. |\n| recentBackups BackupInfo array | RecentBackups are the most recent Backups created by the BackupPlan.         |\n### BackupRepository\nBackupRepository is the Schema for the BackupRepositories API.\n- [BackupRepositoryList](#backuprepositorylist)\n| Field       | Description             |\n|:------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | backup.gdc.goog/v1           |\n| kind string     | BackupRepository            |\n| metadata ObjectMeta   | Refer to Kubernetes API documentation for fields of metadata. |\n| spec BackupRepositorySpec  | nan               |\n| status BackupRepositoryStatus | nan               |\n### BackupRepositoryList\nBackupRepositoryList contains a list of BackupRepositories.\n| Field      | Description             |\n|:-----------------------------|:--------------------------------------------------------------|\n| apiVersion string   | backup.gdc.goog/v1           |\n| kind string     | BackupRepositoryList           |\n| metadata ListMeta   | Refer to Kubernetes API documentation for fields of metadata. |\n| items BackupRepository array | nan               |\n### BackupRepositorySpec\nBackupRepositorySpec defines the desired state of BackupRepository.\n- [BackupRepository](#backuprepository)\n| Field         | Description                                                                                                                                                                   |\n|:--------------------------------------||\n| secretReference SecretReference  | SecretReference is a reference to an Access Secret which is dependent on your storage system of choice. Used for making requests to this endpoint. For example, an S3 Access Secret.                                                                                                                        |\n| endpoint string      | Endpoint is used to access the Backup repository. In the case of Google Private Cloud, this would be the S3 endpoint that provides access to the Tenant project.                                                                                                                             |\n| type RepositoryType     | Type is the type of the Backup repository. For example, S3 or Google Cloud Storage, which tells the agent which storage system or API to use.                                                                                                                                  |\n| s3Options S3Options     | S3Options represents the data used for configuring access to S3-compatible BackupRepo.                                                                                                                                                |\n| importPolicy ImportPolicy    | ImportPolicy determines if this Backup repository is read-only or read/write.                                                                                                                                                  |\n| importSubstitution ImportSubstitution | ImportSubstitution determines if we should substitute the Backup Repository name of imported resources with this BR's name                                                                                                                                       |\n| force boolean       | Force is used to specify the action that a read/write Backup repository should take if the storage bucket that it is initialized with has already been claimed by a different Backup repository. If 'true', the new Backup repository will still claim ownership of the storage bucket by replacing the existing sentinel file with its own sentinel file. If 'false', the creation of the new Backup repository will fail with an error. The default value is 'false'. This should only be used if the sentinel file that will be overridden no longer has a Backup repository, otherwise that Backup repository will enter an error state which may cause undesired side effects. |\n### BackupRepositoryStatus\nBackupRepositoryStatus defines the observed state of BackupRepository.\n- [BackupRepository](#backuprepository)\n| Field         | Description                               |\n|:----------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------|\n| sentinelEtag string      | SentinelEtag is used to link a Backup repository to the sentinel file that it owns.             |\n| reconciliationError ReconciliationError | ReconciliationError describes any errors that have occurred during the most recent reconciliation attempt for the Backup Repository. |\n| reconciliationErrorMessage string  | ReconciliationErrorMessage stores any error messages that occur during reconciliation.            |\n| initialImportDone boolean    | InitialImportDone determines if this Backup repository has completed the initial import or not.          |\n### BackupScope\nBackupScope defines which namespaces and applications to backup.\n- [BackupConfig](#backupconfig) - [RestoreConfig](#restoreconfig)\n| Field        | Description                  |\n|:-------------------------------------|:----------------------------------------------------------------------------------|\n| allNamespaces boolean    | AllNamespaces, if set to true, indicates that all namespaces should be backed up. |\n| selectedNamespaces Namespaces  | SelectedNamespaces, if set, specifies the list of namespaces to back up.   |\n| selectedApplications NamespacedNames | SelectedApplications, if set, specifies the list of applications to back up.  |\n### BackupSpec\nBackupSpec defines the desired state of Backup.\n- [Backup](#backup)\n| Field      | Description                                                                                                                                                                                                                    |\n|:--------------------------||\n| backupPlanName string  | BackupPlanName specifies the name of the BackupPlan from which this Backup was created.                                                                                                                                                                                                 |\n| backupConfig BackupConfig | BackupConfig is a configuration used at the time that this backup was generated from the given BackupPlan. This should be copied from the BackupPlan that this Backup was generated by (rather than a reference). This field should not be set by the user, and should only be set by the BackupPlan scheduler and the ManualBackupRequest.                                                                                                                                    |\n| description string  | Description specifies an optional string description of the Backup. This field has no impact on functionality.                                                                                                                                                                                            |\n| manual boolean   | Manual is a boolean flag that determines whether the Backup resource was created manually. If True, this Backup has been created manually, If False, this Backup has been created automatically from the BackupPlan schedule.                                                                                                                                                                |\n| deleteLockDays integer | DeleteLockDays specifies the number of days from the create_time of this Backup for which deletion will be blocked. For backups created automatically from a Backup schedule, this field will be set to the value of BackupPlan.RetentionPolicy.backup_delete_block_days. For backups created manually that leave this field unspecified, the service will assign the value of BackupPlan.RetentionPolicy.backup_delete_block_days. If a Backup is created where the value of this field is less than the value of BackupPlan.RetentionPolicy.backup_delete_block_days, an invalid response will be returned from the service. This field must be an integer value between 0-90 (inclusive). This field may only be increased by an update request, or an invalid response will be returned by the service. Note, this field only applies to backups with a Succeeded state. Default to 0. |\n| retainDays integer  | RetainDays specifies how many days to keep this backup for, after which it is automatically deleted. This is calculated from the create_time of the Backup. If this field is not specified or set to 0, it means the backup will not be automatically deleted. For backups automatically created from a a backup schedule, this field will be assigned the value of BackupPlan.RetentionPolicy.backup_retain_days. For backups created manually that leave this field unspecified, the service will assign the value of BackupPlan.RetentionPolicy.backup_retain_days. If a Backup is created where the value of this field is less than the value of delete_lock_days, an invalid response is returned by the service. This field may only be increased by an update request, or an invalid response will be returned by the service. Default to 0.          |\n### BackupStatus\nBackupStatus defines the observed state of a Backup.\n- [Backup](#backup)\n| Field       | Description                                                                           |\n|:--------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| clusterMetadata ClusterMetadata | ClusterMetadata contains metadata about the cluster.                                                                 |\n| jobCreated boolean    | JobCreated indicates whether a BackupJob has been created for this Backup.                                                           |\n| state BackupState    | State indicates the current state of the Backup.                                                                  |\n| reason string     | StateReason is a human-readable description of why the Backup is in the current state.                                                        |\n| createTime Time     | CreateTime is the timestamp of when this Backup resource was created. This can be converted to and from RFC 3339                                                  |\n| updateTime Time     | UpdateTime is the timestamp when this BackupPlan resource was last updated. This can be converted to and from RFC 3339                                                |\n| resourceCount integer   | ResourceCount is the total number of resources backed up.                                                                |\n| volumeCount integer    | VolumeCount is the total number of volumes backed up.                                                                 |\n| sizeBytes integer    | SizeBytes is the total size in bytes.                                                                     |\n| podCount integer    | PodCount is the total number of workload pods backed up.                                                                |\n| systemPodCount integer   | SystemPodCount is the total number of system pods backed up. These pods are excluded from billing.                                                     |\n| vmCount integer     | VmCount is the total number of Virtual Machines backed up.                                                               |\n| deleteLockExpireTime Time  | DeleteLockExpireTime defines the time when the deletion lock will expire. This is an output only field calculated from create_time + delete_lock_days, and will be updated accordingly when the delete_lock_days field of a Backup has been updated. Note, this field only applies to Backups with a Succeeded state. |\n| retainExpireTime Time   | RetainExpireTime defines the time when the Backup will be automatically deleted. It's an output only field calculated from create_time + retain_days, and will be updated accordingly when the retain_days field of a Backup has been updated.                  |\n| completeTime Time    | CompleteTime is the completion time of the Backup.                                                                 |\n### ClusterMetadata\nClusterMetadata\n- [BackupStatus](#backupstatus)\n| Field       | Description                           |\n|:--------------------------------|:--------------------------------------------------------------------------------------------------------------------|\n| clusterName string    | ClusterName is the name of the source cluster from where the Backup has been created from.       |\n| k8sVersion string    | K8SVersion is the Kubernetes server version.                  |\n| platformVersion PlatformVersion | platform version PlatformVersion is the platform version types that can be assigned to PlatformVersion: *GpcVersion |\n### ClusterResourceConflictPolicy\n`string` ClusterResourceConflictPolicy defines the restoration behavior for non-namespaced cluster resources when a conflict occurs.\n- [RestoreConfig](#restoreconfig) - [RestorePolicies](#restorepolicies)\n### ClusterResourceSelection\nClusterResourceSelection specifies the selection of non-namespaced resources for restoration.\n- [RestoreConfig](#restoreconfig) - [RestoreResourceSelection](#restoreresourceselection)\n| Field        | Description                                                                                                 |\n|:-----------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| selectedGroupKinds GroupKind array | SelectedGroupKinds is a list of GroupKinds, a non-namespaced resource must be included as one of the GroupKinds specified in the list. Note: Even though PersistentVolume resources are non-namespaced, these will be handled separately. See VolumeDataRestorePolicy for details. Specifying a PersistentVolume GroupKind in this list does not affect whether or not a PersistentVolume will be restored. |\n### DeleteBackupRequest\nDeleteBackupRequest is the Schema for the DeleteBackupRequests API.\n- [DeleteBackupRequestList](#deletebackuprequestlist)\n| Field       | Description             |\n|:---------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | backup.gdc.goog/v1           |\n| kind string      | DeleteBackupRequest           |\n| metadata ObjectMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| spec DeleteBackupRequestSpec  | nan               |\n| status DeleteBackupRequestStatus | nan               |\n### DeleteBackupRequestList\nDeleteBackupRequestList contains a list of DeleteBackupRequests.\n| Field       | Description             |\n|:--------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | backup.gdc.goog/v1           |\n| kind string      | DeleteBackupRequestList          |\n| metadata ListMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| items DeleteBackupRequest array | nan               |\n### DeleteBackupRequestSpec\nDeleteBackupRequestSpec defines the desired state of DeleteBackupRequest.\n- [DeleteBackupRequest](#deletebackuprequest)\n| Field    | Description                              |\n|:------------------|:-----------------------------------------------------------------------------------------------------------------------------------|\n| backupName string | BackupName is the name of the backup to be deleted. Note: the backup must be exist in the same namespace as the DeletBackupRequest |\n### DeleteBackupRequestStatus\nDeleteBackupRequestStatus defines the observed state of DeleteBackupRequest.\n- [DeleteBackupRequest](#deletebackuprequest)\n| Field     | Description                |\n|:-------------------------|:------------------------------------------------------------------------|\n| timeToExpire Time  | TimeToExpire is the time the resource expires.       |\n| statusField StatusFields | StatusField is the status of the observed state of DeleteBackupRequest. |\n### EncryptionKey\nEncryptionKey defines an encryption key. For preview, support Google Cloud Platform KMS only.\n- [BackupConfig](#backupconfig) - [RestoreConfig](#restoreconfig)\n| Field      | Description                           |\n|:---------------------------|:---------------------------------------------------------------------------------------------------------------------|\n| gcpKMSEncryptionKey string | GcpKmsEncryptionKey specifies a Google KMS encryption key in the format: projects//locations//keyRings//cryptoKeys/. |\n### ImportPolicy\n`string` ImportPolicy represents whether we are working with a read-only or read/write repository.\n- [BackupRepositorySpec](#backuprepositoryspec)\n### ImportSubstitution\nImportSubstitution represents whether we substitute the Backup Repository name on imported resources.\n- [BackupRepositorySpec](#backuprepositoryspec)\n| Field     | Description |\n|:-------------------------|--------------:|\n| substituteBRName boolean |   nan |\n### ManualBackupRequest\nManualBackupRequest is the Schema for the ManualBackupRequests API.\n- [ManualBackupRequestList](#manualbackuprequestlist)\n| Field       | Description             |\n|:---------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | backup.gdc.goog/v1           |\n| kind string      | ManualBackupRequest           |\n| metadata ObjectMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| spec ManualBackupRequestSpec  | nan               |\n| status ManualBackupRequestStatus | nan               |\n### ManualBackupRequestList\nManualBackupRequestList contains a list of ManualBackupRequests.\n| Field       | Description             |\n|:--------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | backup.gdc.goog/v1           |\n| kind string      | ManualBackupRequestList          |\n| metadata ListMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| items ManualBackupRequest array | nan               |\n### ManualBackupRequestSpec\nManualBackupRequestSpec defines the desired state of ManualBackupRequest.\n- [ManualBackupRequest](#manualbackuprequest)\n| Field     | Description                                                                                                                                                                                                        |\n|:-----------------------||\n| backupName string  | BackupName is the name of the manual Backup to be created.                                                                                                                                                                                             |\n| backupPlanName string | BackupPlanName is the name of the BackupPlan from which the BackupConfig is pulled.                                                                                                                                                                                      |\n| description string  | Description is a user-specified descriptive string for the Backup created by this ManualBackupRequest.                                                                                                                                                                                  |\n| deleteLockDays integer | DeleteLockDays is the number of days from the create_time of this Backup for which deletion will be blocked. For backups automatically created from a schedule, this field will be given the value of BackupPlan.RetentionPolicy.backup_delete_block_days. If a Backup is created with this field unspecified, it is given the value of BackupPlan.RetentionPolicy.backup_delete_block_days. If this Backup is created with this field set to a value less than the value of BackupPlan.RetentionPolicy.backup_delete_block_days, an invalid response will be returned from the agent. This field must be a value within 0-90 (inclusive). This field may only be increased by an update request, or an invalid response will be returned by the agent. Note that this field only applies to Backups with a Succeeded state. Default to 0. |\n| retainDays integer  | RetainDays specifies how many days to keep this backup for, after which it is automatically deleted. If this field is not specified or set to 0, it means the Backup will not be automatically deleted. For backups automatically created from a backup schedule, this field will be assigned the value of BackupPlan.RetentionPolicy.backup_default_retain_days. For created Backups that leave this field unspecified causes the agent to use the value of BackupPlan.RetentionPolicy.backup_default_retain_days. Creation of a Backup with this field set to a value SMALLER than delete_lock_days results in an invalid response from the agent. This field may ONLY be increased in an Update request, or an invalid response will be returned by the agent immediately. Default to 0.            |\n### ManualBackupRequestStatus\nManualBackupRequestStatus defines the observed state of ManualBackupRequest.\n- [ManualBackupRequest](#manualbackuprequest)\n| Field     | Description            |\n|:-------------------------|:---------------------------------------------------------|\n| timeToExpire Time  | The time the resource should expire.      |\n| statusField StatusFields | The status of the observed state of ManualBackupRequest. |\n### ManualRestoreRequest\nManualRestoreRequest is the Schema for the ManualRestoreRequests API.\n- [ManualRestoreRequestList](#manualrestorerequestlist)\n| Field        | Description             |\n|:----------------------------------|:--------------------------------------------------------------|\n| apiVersion string     | backup.gdc.goog/v1           |\n| kind string      | ManualRestoreRequest           |\n| metadata ObjectMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| spec ManualRestoreRequestSpec  | nan               |\n| status ManualRestoreRequestStatus | nan               |\n### ManualRestoreRequestList\nManualRestoreRequestList contains a list of ManualRestoreRequests.\n| Field       | Description             |\n|:---------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | backup.gdc.goog/v1           |\n| kind string      | ManualRestoreRequestList          |\n| metadata ListMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| items ManualRestoreRequest array | nan               |\n### ManualRestoreRequestSpec\nManualRestoreRequestSpec defines the desired state of ManualRestoreRequest.\n- [ManualRestoreRequest](#manualrestorerequest)\n| Field     | Description                        |\n|:-----------------------|:-----------------------------------------------------------------------------------------------------------|\n| restoreName string  | RestoreName is the name of the manual restore to be created.            |\n| restorePlanName string | RestorePlanName is the name of the RestorePlan to pull the RestoreConfig from.        |\n| backupName string  | BackupName is the name of the Backup that is being restored.            |\n| description string  | Description is the user-specified descriptive string for the restore created by this ManualRestoreRequest. |\n### ManualRestoreRequestStatus\nManualRestoreRequestStatus defines the observed state of ManualRestoreRequest.\n- [ManualRestoreRequest](#manualrestorerequest)\n| Field     | Description                |\n|:-------------------------|:-------------------------------------------------------------------------|\n| timeToExpire Time  | TimeToExpire is the time when the resource should expire.    |\n| statusField StatusFields | StatusField is the status of the observed state of ManualRestoreRequest. |\n### NamespacedName\nNamespacedName defines a name in a specific namespace.\n- [NamespacedNames](#namespacednames) - [NamespacedResourceSelection](#namespacedresourceselection) - [VolumeBackupSpec](#volumebackupspec) - [VolumeRestoreSpec](#volumerestorespec)\n| Field   | Description            |\n|:-----------------|:----------------------------------------------------------|\n| namespace string | Namespace is the namespace of the resource in Kubernetes. |\n| name string  | Name is the name of the resource in Kubernetes.   |\n### NamespacedNames\n- [BackupScope](#backupscope)\n| Field        | Description         |\n|:-------------------------------------|:-----------------------------------------------|\n| namespacedNames NamespacedName array | NamespacedNames is a list of namespaced names. |\n### NamespacedResourceRestoreMode\n`string` NamespacedResourceRestoreMode defines the restoration behavior for namespaced resources.\n- [RestoreConfig](#restoreconfig) - [RestorePolicies](#restorepolicies)\n### NamespacedResourceSelection\nNamespacedResourceSelection specifies the selection of namespaced resources for restoraion. One of the following values must be specified along with a matching `Type` : 1. AllNamespaces 2. SelectedNamespaces 3. SelectedApplications\n- [RestoreResourceSelection](#restoreresourceselection)\n| Field          | Description                                                                                                      |\n|:------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| type NamespacedResourceSelectionType  | Type specifies the type of selection to use.                                                                                              |\n| allNamespaces boolean      | AllNamespaces specifies whether or not to restore all namespaced resources in the Backup. Leaving this field unspecified, or setting it to False with the Type set to NamespacedResourceSelectionType.AllNamespaces is invalid.                                                 |\n| selectedNamespaces string array   | SelectedNamespaces is a list of the selected namespaces to restore. If a value is provided along the Type set to NamespacedResourceSelectionType.SelectedNamespaces, resources with an original namespace that feature in the specified in the list will be restored. Note, specifying an empty string in this list will not restore non-namespaced cluster resources. To restore cluster resources, see ClusterResourceSelection. |\n| selectedApplications NamespacedName array | SelectedApplications is a list of selected ProtectedApplication resources to restore. If a value is provided, along with the Type set to NamespacedResourceSelectionType.SelectedApplications, the resources belonging to one of the listed applications will be restored.                                       |\n### NamespacedResourceSelectionType\n`string` NamespacedResourceSelectionType is the type of namespaced resources selection.\n- [NamespacedResourceSelection](#namespacedresourceselection)\n### Namespaces\n- [BackupScope](#backupscope)\n| Field     | Description       |\n|:------------------------|:------------------------------------|\n| namespaces string array | Namespaces is a list of namespaces. |\n### ObjectStorageBackupConfig\nObjectStorageBackupConfig configures backups of object storage.\n| Field      | Description                                                          |\n|:-----------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| apiVersion string   | backup.gdc.goog/v1                                                         |\n| kind string     | ObjectStorageBackupConfig                                                       |\n| metadata ObjectMeta   | Refer to Kubernetes API documentation for fields of metadata.                                              |\n| source ObjectStorageEndpoint | Source is the source object storage to be backed up.                                                |\n| target ObjectStorageEndpoint | Target is the target to which the backup will be written.                                               |\n| timestamp boolean   | Timestamp determines whether to store each transfer in a timestamped sub-path of the bucket. If set to True, the structure is YYYY-MM-DD-hh:mm:ss. This helps to store copies taken from multiple points in time of a backup. Defaults to 'False'. |\n### ObjectStorageEndpoint\nObjectStorageEndpoint represents an object storage endpoint as well as the credentials to access it.\n- [ObjectStorageBackupConfig](#objectstoragebackupconfig)\n| Field       | Description                    |\n|:--------------------------------|:-----------------------------------------------------------------------------------------|\n| endpoint string     | Endpoint is used to access object storage. For example, https://s3.svc.     |\n| bucket string     | Bucket is the bucket within the endpoint to scope reference.        |\n| secretReference SecretReference | SecretReference is the reference to S3 access credentials used to access object storage. |\n### PlatformVersion\nPlatformVersion defines the platform's version.\n- [ClusterMetadata](#clustermetadata)\n| Field    | Description           |\n|:------------------|:-------------------------------------------------------|\n| gpcVersion string | GpcVersion specifies the Google Private Cloud version. |\n### ReconciliationError\n`string` ReconciliationError denotes any error that was encountered during reconciliation.\n- [BackupRepositoryStatus](#backuprepositorystatus)\n### RepositoryType\n`string` RepositoryType represents the type of endpoint being written to.\n- [BackupRepositorySpec](#backuprepositoryspec)\n### ResourceFilter\nResourceFilter defines the rules to filter down the list of candidate resources to provide transformation rules against. Given all fields with ResourceFilter is optional, not specifying any of the ResourceFilter fields will result in matching on all resources.\n- [TransformationRule](#transformationrule)\n| Field      | Description                                                                                                      |\n|:---------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| namespaces string array | Namespaces, if not empty, specifies a list of target namespaces a transformation rule will apply to. A resource's original namespace should match ONE of the names in the list to be considered as a transformation candidate. An empty string is expected in the list for any non-namespaced resource to be considered. If empty, all namespaces will be considered.                |\n| groupKinds GroupKind array | GroupKinds, if not empty, specifies a list of target GroupKinds a transformation rule will apply to. A resource's original GroupKind should match ONE of the GroupKinds specified in the list to be considered as a transformation candidate. If empty, all GroupKinds will be considred. NOTE: A resource needs to satisfy both Namespaces requirement AND GroupKinds requirement to be considered as a transformation candidate. |\n| jsonPath string   | JSONPath is the string representation of the path in the JSON which leads to the field(s) in the target resource for filtering. JSONPath documentation can be viewed here: https://github.com/json-path/JsonPath/blob/master/README.md JSONPath formats can be tested online (e.g. https://jsonpath.com/)                               |\n### Restore\nRestore is the Schema for the Restores API.\n- [RestoreList](#restorelist)\n| Field    | Description             |\n|:---------------------|:--------------------------------------------------------------|\n| apiVersion string | backup.gdc.goog/v1           |\n| kind string   | Restore              |\n| metadata ObjectMeta | Refer to Kubernetes API documentation for fields of metadata. |\n| spec RestoreSpec  | nan               |\n| status RestoreStatus | nan               |\n### RestoreConfig\nRestoreConfig defines the configuration of a restore.\n- [RestorePlanSpec](#restoreplanspec) - [RestoreSpec](#restorespec)\n| Field              | Description                                                                                                                                                              |\n|:------------------------------------------------------------||\n| volumeDataRestorePolicy VolumeDataRestorePolicy    | VolumeDataRestorePolicy specifies what policy to use for volume data restoration. Provides a default value of NO_VOLUME_DATA_RESTORATION if no value is specified.                                                                                                                        |\n| clusterResourceConflictPolicy ClusterResourceConflictPolicy | ClusterResourceConflictPolicy specifies the policy that resolves conflicts when restoring cluster-scoped resources. The request is invalid if this field is not specified. This request is invalid if this field has a value of CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED and cluster_resource_restore_scope is specified.                                                                                 |\n| namespacedResourceRestoreMode NamespacedResourceRestoreMode | NamespacedResourceRestoreMode specifies what restoration mode to use for namespaced resources. The request is invalid if this field is not specified. The request is invalid if this field has a value of NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED and namespaced_resource_restore_scope is specified.                                                                                      |\n| clusterResources ClusterResourceSelection     | ClusterResources specifies the non-namespaced resources to be restored. If this field is not specified, no cluster resource will be restored. Note: even though PersistentVolume resources are non-namespaced, they will be handled separately. See VolumeDataRestorePolicy for details. Specifying a PersistentVolume GroupKind in this list does not determine whether a PersistentVolume will be restored.                                                             |\n| namespacedResourceAllowlist GroupKind array     | NamespacedResourceAllowlist specifies the specific namespaced resources to restore. If defined, only the resources defined in this allowlist will be restored.                                                                                                                         |\n| restoreScope BackupScope         | NamespacedResourceRestoreScope specifies selected namespaces resources to restore. One of the entries must be specified along with a valid Type. Types that are valid to be assigned to restoreScope: * AllNamespaces, * SelectedNamespaces, * SelectedApplications.                                                                                                |\n| substitutionRules SubstitutionRule array     | SubstitutionRules specifies rules to substitute values in the backed-up K8s resources during restore. An empty list means no substitution will occur. Substitution rules are applied sequentially in the order defined. This order matters, as changes made by a rule may impact the matching logic of the subsequent rule. Only 1 of SubstitutionRules or TransformationRules can be specified for a given restore operation.                                                         |\n| transformationRules TransformationRule array    | TransformationRules specifies rules to transform values in the backed-up K8s resources during restore. An empty list means no transformation will happen. Transformation rules are applied sequentially in the order defined. This order matters, as changes made by a rule may impact the matching logic of a subsequent rule. Only 1 of SubstitutionRules or TransformationRules can be specified for a given restore operation.                                                        |\n| backupRepository string          | BackupRepository is the name of the backup repository which identifies the repository for the restore resource. This field must be attached in read/write mode. Note: this backup repository may differ from the backup repository for the backup this restore references. If this field is not supplied then it will be picked using the following logic: 1. If the backup that we are performing the restore on points to a read/write repository in the current cluster, then we will pick that. 2. If the backup that we are performing a restore on points to a read/only repository, we will pick any read/write repository from the cluster and use that. |\n| encryptionKey EncryptionKey         | EncryptionKey specifies an encryption key. This field is immutable.                                                                                                                                                |\n### RestoreList\nRestoreList contains a list of Restores.\n| Field    | Description             |\n|:--------------------|:--------------------------------------------------------------|\n| apiVersion string | backup.gdc.goog/v1           |\n| kind string   | RestoreList             |\n| metadata ListMeta | Refer to Kubernetes API documentation for fields of metadata. |\n| items Restore array | nan               |\n### RestorePlan\nRestorePlan is the Schema for the RestorePlans API.\n- [RestorePlanList](#restoreplanlist)\n| Field     | Description             |\n|:-------------------------|:--------------------------------------------------------------|\n| apiVersion string  | backup.gdc.goog/v1           |\n| kind string    | RestorePlan             |\n| metadata ObjectMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| spec RestorePlanSpec  | nan               |\n| status RestorePlanStatus | nan               |\n### RestorePlanList\nRestorePlanList contains a list of RestorePlans.\n| Field     | Description             |\n|:------------------------|:--------------------------------------------------------------|\n| apiVersion string  | backup.gdc.goog/v1           |\n| kind string    | RestorePlanList            |\n| metadata ListMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| items RestorePlan array | nan               |\n### RestorePlanSpec\nRestorePlanSpec defines the desired state of the RestorePlan.\n- [RestorePlan](#restoreplan)\n| Field      | Description                                        |\n|:----------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| backupPlanName string  | BackupPlanName is the name of the BackupPlan from which Backups may be used as the source for Restores created via this RestorePlan. This field is required and immutable. |\n| restoreConfig RestoreConfig | RestoreConfig defines a restore configuration of this RestorePlan.                           |\n| clusterName string   | ClusterName is the name of the source cluster in a project which this plan is associated with.                    |\n| description string   | Description is a user-specified descriptive string for this RestorePlan.                         |\n### RestorePlanStatus\nRestorePlanStatus defines the observed state of RestorePlan.\n- [RestorePlan](#restoreplan)\n| Field    | Description                |\n|:---------------------|:-------------------------------------------------------------------------|\n| lastRestoreTime Time | LastRestoreTime is the timestamp for the most recently executed restore. |\n| state StatusFields | StatusField details the current state of the restore plan.    |\n### RestoreSpec\nRestoreSpec defines the desired state of Restore.\n- [Restore](#restore)\n| Field      | Description                       |\n|:----------------------------|:-----------------------------------------------------------------------------------------------------|\n| backupName string   | BackupName is the full name of the Backup resource this Restore resource uses to restore from.  |\n| restorePlanName string  | RestorePlanName is the name of the restore plan from which this restore inherited its RestoreConfig. |\n| clusterName string   | ClusterName is the name of the cluster this restore targets.           |\n| restoreConfig RestoreConfig | RestoreConfig is the configuration of the restore.             |\n| description string   | Description is an optional string description of the backup. This has no impact on functionality. |\n### RestoreState\n`string`\n- [RestoreStatus](#restorestatus)\n### RestoreStatus\nRestoreStatus defines the observed state of Restore.\n- [Restore](#restore)\n| Field       | Description                      |\n|:-------------------------------|:---------------------------------------------------------------------------------------------------|\n| state RestoreState    | State is the current state of the restore.               |\n| stateReason string    | StateReason is a human-readable description of why the restore is in the current state.   |\n| jobCreated boolean    | JobCreated indicates whether a RestoreJob has been created for this restore.      |\n| resourcesRestoredCount integer | ResourcesRestoredCount is the number of resources restored in this restore action.     |\n| resourcesExcludedCount integer | ResourcesExcludedCount is the number of resources excluded in this restore action.     |\n| resourcesFailedCount integer | ResourcesFailedCount is the number of resources that failed to be restored in this restore action. |\n| restoredVolumesCount integer | RestoredVolumesCount is the number of volumes restored in this restore action.      |\n| startTime Time     | CreateTime is the create time of the restore process.            |\n| completeTime Time    | CompleteTime is the end time of the restore process.            |\n### RetentionPolicy\nRetentionPolicy is an inner message type to define: 1. When to automatically delete Backups created under this BackupPlan 2. A plan-level minimum number of Backup retain days. These retain days block deletion. 3. A lock to disallow any policy updates.\n- [BackupPlanSpec](#backupplanspec)\n| Field      | Description                                                                                                                                                                         |\n|:-----------------------------||\n| backupDeleteLockDays integer | BackupDeleteLockDays is the number of days during for which deletion of a Backup created under this BackupPlan will be blocked. Default to 0. This field must be an integer value between 0-90 (inclusive). A Backup created under this BackupPlan will not be deletable until it reaches the value of the Backup's create_time + backup_delete_lock_days. Updating this field of a BackupPlan does not affect existing Backups under it. Backups created after a successful update will automatically inherit the new value.                                             |\n| backupRetainDays integer  | BackupRetainDays is the number of days after which the service will delete a Backup. If specified, a Backup created under this BackupPlan will be automatically deleted after it reaches the values of create_time + backup_retain_days. If not specified, Backups created under this BackupPlan will not be subject to automatic deletion. Updating this field does not affect existing Backups under it. Backups created after a successful update will automatically inherit the new value. Note: Specifying a value for backup_retain_days that is smaller than backup_delete_lock_days at the time of the creation or update will be considered as invalid, and the request will be rejected immediately. |\n| locked boolean    | Locked is a boolean flag that denotes whether the retention policy of this BackupPlan is locked. If set to True, no further update is allowed on this policy, including the locked field itself. Default to False.                                                                                                                        |\n### S3Options\nS3Options defines the options for calling into an S3 endpoint for the BackupRepository.\n- [BackupRepositorySpec](#backuprepositoryspec)\n| Field      | Description                                   |\n|:----------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------|\n| bucket string    | Bucket is the bucket within the endpoint to upload Backups to.                      |\n| region string    | Region is the region of a given endpoint. Formatting is Storage System dependent.                 |\n| forcePathStyle boolean  | ForcePathStyle decides whether to force path style URLs for objects. For example, https://s3.amazonaws.com// instead of https://.s3.amazonaws.com/. |\n| serverSideEncryption string | ServerSideEncryption is the server-side encryption algorithm used when storing objects. For example, AES256, aws:kms.        |\n| kmsKeyId string    | KmsKeyID is the KMS key ID to use for object storage if server-side encryption is using KMS.              |\n### Schedule\nSchedule is an inner message type that defines a cron schedule.\n- [BackupPlanSpec](#backupplanspec)\n| Field    | Description                              |\n|:--------------------|:-----------------------------------------------------------------------------------------------------------------------------------|\n| cronSchedule string | CronSchedule is a cron string schedule on which an operation will be executed.              |\n| paused boolean  | Paused is a boolean flag to toggle scheduled operation. If set to True, the scheduled operation will be inactive. Default to True. |\n### State\n`string` State is a value specifying what state the backup plan is currently in.\n- [BackupPlanStatus](#backupplanstatus)\n### SubstitutionRule\nSubstitutionRule defines the rules for substitution.\n- [RestoreConfig](#restoreconfig)\n| Field      | Description                                                                                |\n|:--------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| target SubstitutionTarget | Target specifies the matching criteria that check whether a resource is a substitution candidate and has fields that match the supplied JSONPath.                                               |\n| originValuePattern string | OriginalValuePattern is a regular expression pattern string which will be applied to the JSON value matched from the supplied Target value. If not specified, the original value will always be substituted using the specified NewValue. Note: an empty string is a legitimate regex pattern, and will be treated like any other string. |\n| newValue string   | NewValue specifies the desired value in string format to substitute to.                                                                 |\n### SubstitutionTarget\nSubstitutionTarget defines rules of target candidates for substitution.\n- [SubstitutionRule](#substitutionrule)\n| Field      | Description                                                                                                     |\n|:---------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| namespaces string array | Namespaces, if not empty, specifies a list of target namespaces a substitution rule will be applied to. A resource's original namespace should match one of the names in the list to be considered as a substitution candidate. For any non-namespaced resource to be considered, an empty string must be provided. If empty, all namespaces will be considered.                |\n| groupKinds GroupKind array | GroupKinds, if not empty, specifies a list of target GroupKinds a substitution rule will apply to. A resource's original GroupKind should match one of the GroupKinds specified in the list to be considered as a substitution candidate. If empty, all GroupKinds will be considred. Note: a resource needs to satisfy both namespace requirements and GroupKind requirements to be considered as a substitution candidate. |\n| jsonPath string   | JSONPath is the string representation of the JSON Path which leads to the fields in the target resource, which will be in the JSON format for substitution.                                                                 |\n### TransformationRule\nTransformationRule defines rules of transformation utilizing jsonPatch.\n- [RestoreConfig](#restoreconfig)\n| Field          | Description                                        |\n|:--------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| fieldActions TransformationRuleAction array | FieldActions specifies a list of operations to take against candidate resources based on the JSON Patch RFC                |\n| resourceFilter ResourceFilter    | ResourceFilter specifies matching criteria to check whether a resource is a transformation candidate. Note: an empty/blank resourceFilter means match on all resources. |\n### TransformationRuleAction\nTransformationRuleAction is modeled off of the jsonPatch RFC definition: https://www.rfc-editor.org/rfc/rfc6902#section-4.4\n- [TransformationRule](#transformationrule)\n| Field       | Description                                                       |\n|:-------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| op TransformationRuleOperation | Op (operation) specifies the type of action the user wants to perform as part of transforming resource(s) upon a restore operation. The list of valid operations can be viewed at https://www.rfc-editor.org/rfc/rfc6902#section-4.4 |\n| from string     | From is the JSON patch representation of a path within the JSON which leads to the field(s) in the target resource for move and copy operations                      |\n| path string     | Path is the JSON patch representation of a path within the JSON which leads to the field(s) in the target resource for some operations                        |\n| value string     | Value specifies the desired value in string format to use for transformation.                                      |\n### TransformationRuleOperation\n`string` TransformationRuleOperation is the intended operation for a transformation rule\n- [TransformationRuleAction](#transformationruleaction)\n### VolumeBackup\nVolumeBackup is the Schema for the VolumeBackups API.\n- [VolumeBackupList](#volumebackuplist)\n| Field      | Description             |\n|:--------------------------|:--------------------------------------------------------------|\n| apiVersion string   | backup.gdc.goog/v1           |\n| kind string    | VolumeBackup             |\n| metadata ObjectMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VolumeBackupSpec  | nan               |\n| status VolumeBackupStatus | nan               |\n### VolumeBackupList\nVolumeBackupList contains a list of VolumeBackups.\n| Field     | Description             |\n|:-------------------------|:--------------------------------------------------------------|\n| apiVersion string  | backup.gdc.goog/v1           |\n| kind string    | VolumeBackupList            |\n| metadata ListMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| items VolumeBackup array | nan               |\n### VolumeBackupSpec\nVolumeBackupSpec defines the desired state of VolumeBackup.\n- [VolumeBackup](#volumebackup)\n| Field      | Description                                                              |\n|:--------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| backupName string   | BackupName is the name of the associated Backup. Each VolumeBackup must be associated with a Backup.                                        |\n| backupPlanName string  | BackupPlanName is the name of the Backup plan from which the asssociated Backup was created.                                          |\n| sourcePVC NamespacedName | SourcePvc refers to the source persistent volume claim from which the volume backup is taken from.                                        |\n| volumeBackupHandle string | VolumeBackupHandle is an underlying volume Backup handle, which uniquely identifies a volume Backup inside of a volume Backup repository. This handle doesn't have a unified format and is treated as an opaque string. DEPRECATED: Use the status field instead. |\n### VolumeBackupStatus\nVolumeBackupStatus defines the observed state of VolumeBackup.\n- [VolumeBackup](#volumebackup)\n| Field      | Description                                                    |\n|:--------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| volumeBackupHandle string | VolumeBackupHandle is an underlying volume Backup handle, which uniquely identifies a volume Backup inside of a volume Backup repository. This handle doesn't have a unified format and is treated as an opaque string. |\n| format VolumeBackupFormat | Format is a volume Backup format. For example, PD, Portable, etc.                                      |\n| storageBytes integer  | StorageBytes is the size of the volume Backup in the Backup storage. For incremental backups this value may dynamically change if one of the previous volume Backups was deleted.          |\n| diskSizeBytes integer  | DiskSizeBytes is yhe minimum size of the disk to which this volume Backup can be restored.                                |\n| state VolumeBackupState | State is the current state of the volume Backup.                                          |\n| message string   | StateMessage is a human-readable message indicating details about why the Backup is in this state.                              |\n| completeTime Time   | CompleteTime is the timestamp when this VolumeBackup resource was completed in the text format of RFC 3339.                            |\n### VolumeDataRestorePolicy\n`string` VolumeDataRestorePolicy defines different volume data restoration policies.\n- [RestoreConfig](#restoreconfig) - [RestorePolicies](#restorepolicies)\n### VolumeRestore\nVolumeRestore is the Schema for the VolumeRestores API.\n- [VolumeRestoreList](#volumerestorelist)\n| Field      | Description             |\n|:---------------------------|:--------------------------------------------------------------|\n| apiVersion string   | backup.gdc.goog/v1           |\n| kind string    | VolumeRestore             |\n| metadata ObjectMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VolumeRestoreSpec  | nan               |\n| status VolumeRestoreStatus | nan               |\n### VolumeRestoreList\nVolumeRestoreList contains a list of VolumeRestores.\n| Field      | Description             |\n|:--------------------------|:--------------------------------------------------------------|\n| apiVersion string   | backup.gdc.goog/v1           |\n| kind string    | VolumeRestoreList            |\n| metadata ListMeta   | Refer to Kubernetes API documentation for fields of metadata. |\n| items VolumeRestore array | nan               |\n### VolumeRestoreSpec\nVolumeRestoreSpec defines the desired state of VolumeRestore.\n- [VolumeRestore](#volumerestore)\n| Field     | Description                  |\n|:-------------------------|:---------------------------------------------------------------------------------|\n| restoreName string  | RestoreName is the name of the restore resource that created this VolumeRestore. |\n| volumeBackupName string | VolumeBackupName is the name of the VolumeBackup resource that we are restoring. |\n| targetPvc NamespacedName | TargetPvc refers to the target PVC to be restored.        |\n### VolumeRestoreStatus\nVolumeRestoreStatus defines the observed state of VolumeRestore.\n- [VolumeRestore](#volumerestore)\n| Field      | Description                                                    |\n|:--------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| volumeBackupHandle string | VolumeBackupHandle is an underlying volume Backup handle, which uniquely identifies a volume Backup inside of a volume Backup repository. This handle doesn't have a unified format and is treated as an opaque string. |\n| state VolumeRestoreState | State is the current state of the volume restoration.                                         |\n| stateMessage string  | StateMessage is a human readable description of the current state.                                      |\n| completeTime Time   | CompleteTime is the end time of the volume restore process.                                        |\n### VolumeStrategy\n`string` VolumeStrategy specifies tradeoffs to use when backing up volumes.\n- [BackupConfig](#backupconfig)", "guide": "Documentation"}