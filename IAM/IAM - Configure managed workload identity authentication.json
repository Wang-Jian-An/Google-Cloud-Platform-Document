{"title": "IAM - Configure managed workload identity authentication", "url": "https://cloud.google.com/iam/docs/create-managed-workload-identities", "abstract": "# IAM - Configure managed workload identity authentication\n**Preview** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section of the [Service Specific Terms](/terms/service-terms#1) . Pre-GA features are available \"as is\" and might have limited support. For more information, see the [launch stage descriptions](/products#product-launch-stages) .For information about access to this release, see the [access request page](https://forms.gle/KC1Lq77gMn3kTtWDA) .\nThis page explains how to configure [managed workload identities](/iam/docs/managed-workload-identity) using the gcloud CLI.\nThis page also describes how to set up automatic provisioning and lifecycle management of managed workload identities for Compute Engine. You configure certificate authority (CA) pools to issue certificates using [Certificate Authority Service](/certificate-authority-service) . CA Service is a highly-available, scalable Google Cloud service that simplifies and automates the deployment, management, and security of CA services. You can create virtual machine instances (VMs) that are provisioned with X.509 credentials from the configured CA pool. These credentials can then be used to establish mTLS connections between workloads.\n", "content": "## Before you begin\n- [Create or select a Google Cloud project](https://cloud.google.com/resource-manager/docs/creating-managing-projects) .- Create a Google Cloud project:```\ngcloud projects create PROJECT_ID\n```Replace `` with a name for the Google Cloud project you are creating.\n- Select the Google Cloud project that you created:```\ngcloud config set project PROJECT_ID\n```Replace `` with your Google Cloud project name.- [Request access to the managed workload identities Preview]() . **Important:** You must wait until you receive a confirmation that your project has been added to the allowlist before moving on to the next steps.\n- Understand [managed workload identities](/iam/docs/managed-workload-identity) .\n- Learn about certificate issuance using [Certificate Authority Service](/certificate-authority-service) .\n- Learn how to [authenticate Compute Engine workloads using managedworkload identities](/compute/docs/access/authenticate-workloads-over-mtls) .\n- Enable the IAM and Certificate Authority Service APIs:```\ngcloud services enable iam.googleapis.com privateca.googleapis.com\n```\n- Configure Google Cloud CLI to use the project that was added to the allowlist for billing and quota.```\ngcloud config set billing/quota_project PROJECT_ID\n```Replace with the ID of the project that was added to the allowlist for the managed workload identity preview.\n### Required roles\nTo get the permissions that you need to create managed workload identities and provision managed workload identity certificates,   ask your administrator to grant you the  following IAM roles on the project:\n- To create and configure managed workload identities:- [IAM Workload Identity Pool Admin ](https://cloud.google.com/iam/docs/understanding-roles#iam.workloadIdentityPoolAdmin) (`roles/iam.workloadIdentityPoolAdmin`)\n- [Service Account Admin ](https://cloud.google.com/iam/docs/understanding-roles#iam.serviceAccountAdmin) (`roles/iam.serviceAccountAdmin`)\n- To create and configure CA pools: [CA Service Admin ](https://cloud.google.com/iam/docs/understanding-roles#privateca.admin) (`roles/privateca.admin`)\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYou might also be able to get  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .\nAlternatively, the IAM Owner ( `roles/owner` ) basic role also includes permissions to configure managed workload identities. You should not grant basic roles in a production environment, but you can grant them in a development or test environment.\n## Overview\nTo use managed workload identities for your applications, you must perform the following tasks:\n- **Security Administrator** :- [Create managed workload identities](#configure_identities) in a workload identity pool.\n- [Define the workload attestation policy](#define_the_workload_attestation_policy) and create a service account.\n- [Configure Certificate Authority Service to issue certificates for managed workload identities](#configure_ca) .\n- [Authorize managed workload identities to request certificates from the CA pool](#grant-role-ca-pool) .\n- [Define the trust and certificate issuance config](#define_partner_metadata) .\n- [Create a configuration file to upload the partner metadata for a VM](#create_json_file) .\n- **Compute Administrator** :Enable managed workload identities for workloads running in Compute Engine:- For [individuals VMs](/compute/docs/access/authenticate-workloads-over-mtls#enable-workload-id-vms) .\n- For [managed-instance groups (MIGs)](/compute/docs/access/authenticate-workloads-over-mtls#create-workload-id-migs) .\n## Create managed workload identities\nManaged workload identities enables Google Cloud to automatically provision credentials for workload identity pool identities onto your workloads. Workload identities are defined within a workload identity pool, and are organized into administrative boundaries called .\n### Create a workload identity pool\nYou must create a pool in `TRUST_DOMAIN` mode to create managed workload identities. To create a workload identity pool for managed workload identities, use the `workload-identity-pools create` command.\n```\ngcloud iam workload-identity-pools create POOL_ID \\\n --location=\"global\" \\\n --mode=\"TRUST_DOMAIN\"\n```\nReplace the following:\n- ``: the unique ID for the pool. The ID must be between 4 and 32 characters, and can contain only lowercase alphanumeric characters and dashes, and start and end with an alphanumeric character. After you create a workload identity pool, you can't change its ID.\nTo verify that your workload identity pool was created in `TRUST_DOMAIN` mode, use the `workload-identity-pools describe` command.\n```\ngcloud iam workload-identity-pools describe POOL_ID \\\n --location=\"global\"\n```\nThe command output should look similar to the following:\n```\nmode: TRUST_DOMAIN\nname: projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID\nstate: ACTIVE\n```\nIf `mode: TRUST_DOMAIN` is not present in the command output, [verifythat your project has been added to the allowlist for the managed workload identityPreview](#before_you_begin) and that you've correctly configured your gcloud CLI to use the correct project for billing and quota. You might need to update to a newer version of the gcloud CLI.\n### Create a namespace\nThe `workload-identity-pools namespaces create` command lets you create a namespace in a workload identity pool.\n```\ngcloud iam workload-identity-pools namespaces create NAMESPACE_ID \\\n --workload-identity-pool=\"POOL_ID\" \\\n --location=\"global\"\n```\nReplace the following:\n- ``: the unique ID for the namespace. The ID must be between 2 and 63 characters, contain only lowercase alphanumeric characters and dashes, and start and end with an alphanumeric character. After you create a namespace, you cannot change its ID.\n- ``: the workload identity pool ID that you created earlier.\n### Create a managed workload identity\nThe `workload-identity-pools managed-identities create` command lets you create a managed workload identity in a workload identity pool.\n```\ngcloud iam workload-identity-pools managed-identities create MANAGED_IDENTITY_ID \\\n --namespace=\"NAMESPACE_ID\" \\\n --workload-identity-pool=\"POOL_ID\" \\\n --location=\"global\"\n```\nReplace the following:\n- ``: the unique ID for the managed identity. The ID must be between 2 and 63 characters, contain only lowercase alphanumeric characters and dashes, and start and end with an alphanumeric character. After you create a managed workload identity, you cannot change its ID.\n- ``: the namespace ID that you created earlier.\n- ``: the workload identity pool ID that you created earlier.\nThe SPIFFE identity for your managed workload identity is equal to the following:\n```\nspiffe://POOL_ID.global.PROJECT_NUMBER.workload.id.goog/ns/NAMESPACE_ID/sa/MANAGED_IDENTITY_ID\n```\n## Define the workload attestation policy\nA workload [attestation policy](/iam/docs/managed-workload-identity#resources) ensures that only trusted workloads can use the managed identity. You must allow your workload to use the managed workload identity before it can be issued credentials.\nTo do this, you [create](/iam/docs/service-accounts-create) a user-managed service account and [attach](/iam/docs/attach-service-accounts) it to your workload. Your workload will use the managed workload identity as its identity when it authenticates to other workloads using [mutual TLS (mTLS)](/beyondcorp-enterprise/docs/understand-mtls) , and your workload will use the service account as its identity when it accesses other Google Cloud services and resources.\nThe [service-accounts create command](/sdk/gcloud/reference/iam/service-accounts/create) lets you create a managed workload identity in a workload identity pool.\nTo create the attached service account, run the following command:\n```\ngcloud iam service-accounts create SERVICE_ACCOUNT_NAME\n```\nReplace the following:\n- ``: the name of the service account\nTo create a workload attestation policy that allows your workloads with the service account attached to be issued credentials for the managed workload identity, use the `workload-identity-pools managed-identities workload-sources create` command:\n```\ngcloud iam workload-identity-pools managed-identities workload-sources create \\\n project-WORKLOAD_PROJECT_NUMBER \\\n --single-attribute-selectors \"compute.googleapis.com/Instance.attached_service_account.email=SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com\" \\\n --managed-identity MANAGED_IDENTITY_ID \\\n --namespace NAMESPACE_ID \\\n --workload-identity-pool POOL_ID \\\n --location \"global\"\n```\nReplace the following:\n- ``: the name of the service account.\n- ``: the project number for the project that contains your workload. The policy allows workloads within this project to use the managed workload identity.\n- ``: the ID of the project containing the service account.\n- ``: the unique ID for the managed identity.\n- ``: the namespace ID that you created. earlier.\n- ``: the workload identity pool ID that you created earlier.\nFor a given workload identity pool, you can define a maximum of 50 single attribute selectors for your workload project.\nTo learn about how to update or delete an attestation policy, run the following command:\n```\ngcloud iam workload-identity-pools managed-identities workload-sources --help\n```\n## Configure Certificate Authority Service to issue certificates for managed workload identities\nCreate the recommended set up for root and subordinate certificate authorities (CAs) using [Certificate Authority Service pools](/certificate-authority-service/docs/ca-pool) . The subordinate CA pool issues the X.509 workload identity certificates to VMs.\n**Note:** The CA pools configured to issue certificates for Compute Engine VMs using managed workload identities must reside in the same region as the VM. If you want to design a [multi-region architecture for resilience to regional outages](/architecture/framework/reliability/design-scale-high-availability#design_a_multi-region_architecture_for_resilience_to_regional_outages) , we recommend that you configure a subordinate Certificate Authority Service CA pool for each of your workload's regions, so that each of your Compute Engine VMs can reference an in-region subordinate Certificate Authority Service CA pool.\nAfter configuring the CA pools, you then authorize the managed workload identities to request and receive the signed certificates from the CA pools.\n### Configure the root CA pool\nUse the Google Cloud CLI interface to Certificate Authority Service to configure a root CA pool.\n**Note:** You cannot move or export a CA pool after it has been created.\nCreate the root CA pool.- Create the root CA pool in the **Enterprise** tier, which is meant for long-lived, low-volume certificate issuance using the [gcloud privateca pools create command](/sdk/gcloud/reference/privateca/pools/create) .```\ngcloud privateca pools create ROOT_CA_POOL_ID \\\n --location=REGION \\\n --tier=enterprise\n```Replace the following:- : a unique ID for the root CA pool. The ID can be up to 64 characters in length and must contain only lower and uppercase alphanumeric characters, underscores, or hyphens. The pool ID must be unique within the region.\n- : the region where the root CA pool is located.\nFor more information, see [Creating CA pools](/certificate-authority-service/docs/creating-ca-pool) .\n- Create a root CA in the root CA pool using the [gcloud privateca roots create command](/sdk/gcloud/reference/privateca/roots/create) . You might be prompted to [enable the root CA](/certificate-authority-service/docs/creating-certificate-authorities#enable-root) if this is the only CA in the root CA Pool.For example, you might use a command similar to the following to create a root CA.```\ngcloud privateca roots create ROOT_CA_ID \\\n --pool=ROOT_CA_POOL_ID \\\n --subject \"CN=ROOT_CA_CN, O=ROOT_CA_ORGANIZATION\" \\\n --key-algorithm=\"ec-p256-sha256\" \\\n --max-chain-length=1 \\\n --location=REGION\n```Replace the following:- : a unique name for the root CA. The CA name can be up to 64 characters in length and must contain only lower and uppercase alphanumeric characters, underscores, or hyphens. The CA name must be unique within the region.\n- : the ID of the root CA pool.\n- : the common name of the root CA.\n- : the organization of the root CA.\n- : the region where the root CA pool is located.\nFor more information, see [Create a root certificate authority](/certificate-authority-service/docs/creating-certificate-authorities) . For more information about the `subject` fields for the CA, see [Subject](/certificate-authority-service/docs/using-cel#subject) .\n- Optional: Repeat the previous steps to create an additional root CA in the root CA pool. This can be useful for [root CA rotation](/certificate-authority-service/docs/managing-ca-rotation) .\n### Configure the subordinate CAs\nUse the Google Cloud CLI interface to Certificate Authority Service to create a subordinate CA pool and subordinate CA.\nIf you have multiple certificate issuance scenarios, you can create a subordinate CA for each of those scenarios. Also, adding multiple subordinate CAs in a CA pool helps you achieve better load-balancing of certificate requests.\nUse the [gcloud privateca pools create command](/sdk/gcloud/reference/privateca/pools/create) to create a subordinate CA pool.- Create the subordinate CA pool in the **DevOps** tier, which is meant for high volume, short-lived certificate issuance .```\ngcloud privateca pools create SUBORDINATE_CA_POOL_ID \\\n --location=REGION \\\n --tier=devops\n```Replace the following:- : a unique ID for the subordinate CA pool. The ID can be up to 64 characters in length and must contain only lowercase and uppercase alphanumeric characters, underscores, or hyphens. The pool ID must be unique within the region.\n- : the region in which to create the subordinate CA pool.\nFor more information, see [Creating CA pools](/certificate-authority-service/docs/creating-ca-pool) .\n- Create a subordinate CA in the subordinate CA pool using the [gcloud privateca subordinates create command](/sdk/gcloud/reference/privateca/subordinates/create) . Don't change the default [config-based issuance mode](/certificate-authority-service/docs/reference/rest/v1/projects.locations.caPools#issuancemodes) .For example, you might use a command similar to the following to create a subordinate CA.```\ngcloud privateca subordinates create SUBORDINATE_CA_ID \\\n --pool=SUBORDINATE_CA_POOL_ID \\\n --location=REGION \\\n --issuer-pool=ROOT_CA_POOL_ID \\\n --issuer-location=REGION \\\n --subject=\"CN=SUBORDINATE_CA_CN, O=SUBORDINATE_CA_ORGANIZATION\" \\\n --key-algorithm=\"ec-p256-sha256\" \\\n --use-preset-profile=subordinate_mtls_pathlen_0\n```Replace the following:- : a unique name for the subordinate CA. The name can be up to 64 characters in length and must contain only lowercase and uppercase alphanumeric characters, underscores, or hyphens. The pool name must be unique within the region.\n- : the name of the subordinate CA pool.\n- : the region where the subordinate CA pool is located.\n- : the ID of the root CA pool.\n- : the region of the root CA pool.\n- : the common name of the subordinate CA.\n- : the name of the subordinate CA issuing organization.\nFor more information, see [Creating CA pools](/certificate-authority-service/docs/creating-ca-pool) . For more information about the `subject` fields for the CA, see [Subject](/certificate-authority-service/docs/using-cel#subject) .\n### Authorize managed workload identities to request certificates from the CA pool\nThe managed workload identities require permissions to request certificates from the CA Service and get the public certificates.\n- Grant the [CA Service Workload Certificate Requester (roles/privateca.workloadCertificateRequester)](/iam/docs/understanding-roles#privateca.workloadCertificateRequester) IAM role on each subordinate CA pool to the managed workload identity. The following [gcloud privateca pools add-iam-policy-binding command](/sdk/gcloud/reference/privateca/pools/add-iam-policy-binding) authorizes the managed workload identity to request certificates from the CA Service certificate chains.```\ngcloud privateca pools add-iam-policy-binding SUBORDINATE_CA_POOL_ID \\\n --location=REGION \\\n --role=roles/privateca.workloadCertificateRequester \\\n --member=\"principalSet://iam.googleapis.com/projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/*\"\n```Replace the following:- : the ID for the subordinate CA pool.\n- : the region of the subordinate CA pool.\n- : the project number of the project that contains the workload identity pool.\n- : the ID of the workload identity pool.\n- Grant the [CA Service Pool Reader (roles/privateca.poolReader)](/iam/docs/understanding-roles#privateca.poolReader) IAM role on the subordinate CA pools to the managed workload identity. This authorizes the managed workload identity to get the signed X.509 certificates from the CA's certificate chains.```\ngcloud privateca pools add-iam-policy-binding SUBORDINATE_CA_POOL_ID \\\n --location=REGION \\\n --role=roles/privateca.poolReader \\\n --member=\"principalSet://iam.googleapis.com/projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/*\"\n```Replace the following:- : the ID for the subordinate CA pool.\n- : the region of the subordinate CA pool.\n- : the project number of the project that contains the workload identity pool.\n- : the ID of the workload identity pool.\n## Define the trust and certificate issuance config\nYou use this information to create a JSON file that is uploaded as partner data when creating a VM.\n### Define the certificate issuance config\nThe following [certificate issuance config](/certificate-manager/docs/how-it-works#issuance-configs) is required to enable managed workload identities for Compute Engine.\n```\n{\n \"primary_certificate_authority_config\": {\n \"certificate_authority_config\": {\n  \"ca_pool\": \"projects/PROJECT_ID/locations/REGION/caPools/SUBORDINATE_CA_POOL_ID\"\n }\n },\n \"key_algorithm\": \"ALGORITHM\",\n \"workload_certificate_lifetime_seconds\": \"DURATION\",\n \"rotation_window_percentage\": \"ROTATION_WINDOW_PERCENTAGE\"\n}\n```\nReplace the following:\n- : the name of the project that contains the CA pool\n- : the region where the subordinate CA pool is located\n- : the name of the subordinate CA pool\n- : the encryption algorithm used to generate the private key. Valid values are`rsa-2048`(default),`rsa-3072`,`rsa-4096`,`ecdsa-p256`and`ecdsa-p384`.\n- : Optional: The leaf certificate validity duration, in seconds. The value must be between 3600 and 315360000. If not specified, the default value of 86400 is used. The actually validity of the issued certificate also depends on the issuing CA, because it may restrict the lifetime of the issued certificate.\n- : Optional: The percentage of the certificate's lifetime at which a renewal triggers. Value must be between 1 and 100. The default value is 66 percent. You must set the rotation window percentage in relation to the certificate lifetime so that certificate renewal occurs at least 7 days after the certificate has been issued and at least 7 days before it expires.\n### Define the trust config\nThe [trust config](/certificate-manager/docs/how-it-works#trust-configs) contains the set of trust anchors for validating peer certificates. This includes the following:\n- Trusted CA pool resource URIs: A set of CA pool resource URIs that are trusted to issue certificates in the same trust domain as the VMs belongs to.\n- PEM formatted CA certificates: A set of PEM-formatted CA certificates trusted to issue certificates in the same trust domain as the VMs belongs to.\n**Note:** The trust config must contain an entry for the SPIFFE trust domain `` `.global.` `` `.workload.id.goog` , which corresponds to the SPIFFE trust domain of managed identity assigned to the VM. Not specifying this would result in provisioning failure of workload certificates.\n```\n{\n \"POOL_ID.global.PROJECT_NUMBER.workload.id.goog\": {\n \"trust_anchors\": [  {\n  \"ca_pool\": \"projects/PROJECT_NAME/locations/REGION/caPools/SUBORDINATE_CA_POOL_ID\"\n  },\n  {\n  \"pem_certificate\": \"PEM-encoded certificate\"\n  }\n ]\n }\n}\n```\nReplace the following:\n- : the ID of the workload identity pool\n- : the project number of the project that that contains the workload identity pool\n- : the name of the project that contains the CA pool\n- : the region where the subordinate CA pool is located\n- : the ID of the subordinate CA pool\n- : Optional: a set of PEM-formatted CA certificates trusted to issue certificates in the same trust domain that the VMs belongs to\n### Create a configuration file to upload the partner metadata for a VM\nCreate a JSON file that contains the following:\n- The configuration for the workload identity\n- The information from [Define the certificate issuance config](#define_cert_issuance_config) \n- The information from [Define the trust config](#define_trust_config) \nSave this file as `CONFIGS.json` . This file is used when creating VMs to run applications that use managed workload identities.\n**Note:** The format of the JSON and the values provided must be valid. The VM creation will fail if the file provides invalid input.\nYour `CONFIGS.json` file should be similar to the following:\n```\n\u00a0 {\u00a0 \"wc.compute.googleapis.com\": {\u00a0 \u00a0 \u00a0\"entries\": {\u00a0 \u00a0 \u00a0 \u00a0 \"certificate-issuance-config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"primary_certificate_authority_config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"certificate_authority_config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"ca_pool\": \"projects/PROJECT_ID/locations/REGION/caPools/SUBORDINATE_CA_POOL_ID\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"key_algorithm\": \"ALGORITHM\"\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"trust-config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"POOL_ID.global.PROJECT_NUMBER.workload.id.goog\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"trust_anchors\": [{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"ca_pool\": \"projects/PROJECT_ID/locations/REGION/caPools/SUBORDINATE_CA_POOL_ID\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0}\u00a0 }\u00a0 },\u00a0 \"iam.googleapis.com\": {\u00a0 \u00a0 \u00a0\"entries\": {\u00a0 \u00a0 \u00a0 \u00a0 \"workload-identity\": \"spiffe://POOL_ID.global.PROJECT_NUMBER.workload.id.goog/ns/NAMESPACE_ID/sa/MANAGED_IDENTITY_ID\"\u00a0 \u00a0 \u00a0}\u00a0 }\u00a0 }\u00a0 \n```\n## What's next\n- [Configure workload to workload authentication using mTLS](/compute/docs/access/authenticate-workloads-over-mtls) .\n- Learn more about [creating CA pools](/certificate-authority-service/docs/creating-ca-pool) .", "guide": "IAM"}