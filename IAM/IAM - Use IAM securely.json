{"title": "IAM - Use IAM securely", "url": "https://cloud.google.com/iam/docs/using-iam-securely", "abstract": "# IAM - Use IAM securely\nThis page recommends security best practices that you should keep in mind when using IAM.\nThis page is designed for users who are proficient with IAM. If you are just starting out with IAM, these instructions will not teach you how to use it; instead, new users should start with the [IAM Quickstart](/iam/docs/grant-role-console) .\n", "content": "## Least privilege\n| 0                                                                                                                                                                                                                                       |\n||\n| \u2751 Basic roles include thousands of permissions across all Google Cloud services. In production environments, do not grant basic roles unless there is no alternative. Instead, grant the most limited predefined roles or custom roles that meet your needs. If you need to replace a basic role, you can use role recommendations to determine which roles to grant instead. You can also use the Policy Simulator to ensure that changing the role won't affect the principal's access. It might be appropriate to grant basic roles in the following cases: When the Google Cloud service does not provide a predefined role. See the predefined roles table for a list of all available predefined roles. When you want to grant broader permissions for a project. This often happens when you're granting permissions in development or test environments. When you work in a small team where the team members don't need granular permissions. |\n| \u2751 Treat each component of your application as a separate trust boundary. If you have multiple services that require different permissions, create a separate service account for each of the services, then grant only the required permissions to each service account.                                                                                                                                                                     |\n| \u2751 Remember that the allow policies for child resources inherit from the allow policies for their parent resources. For example, if the allow policy for a project grants a user the ability to administer Compute Engine virtual machine (VM) instances, then the user can administer any Compute Engine VM in that project, regardless of the allow policy you set on each VM.                                                                                                                                            |\n| \u2751 Grant roles at the smallest scope needed. For example, if a user only needs access to publish Pub/Sub topics, grant the Publisher role to the user for that topic.                                                                                                                                                                                              |\n| \u2751 Specify which principals can act as service accounts. Users who are granted the Service Account User role for a service account can access all the resources to which the service account has access. Therefore, be cautious when granting the Service Account User role to a user.                                                                                                                                                                  |\n| \u2751 Specify who has access to create and manage service accounts in your project.                                                                                                                                                                                                                    |\n| \u2751 Granting the Project IAM Admin and Folder IAM Admin predefined roles will allow access to modify allow policies without also allowing direct read, write, and administrative access to all resources. Granting the Owner (roles/owner) role to a principal will allow them to access and modify almost all resources, including modifying allow policies. This amount of privilege is potentially risky. Grant the Owner role only when (nearly) universal access is required.                                                                                                                  |\n| \u2751 Use conditional role bindings to let access expire automatically, and consider granting privileged access only on a just-in-time basis.                                                                                                                                                                                                     |\n[](None)\n## Service accounts\n| 0                                                    |\n|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| \u2751 Adopt best practices for working with service accounts. Ensure that service accounts have limited privileges, and protect against potential security threats.             |\n| \u2751 Do not delete service accounts that are in use by running instances. This could result in all or parts of your application to fail if you have not transitioned to using an alternative service account first. |\n| \u2751 Use the display name of a service account to keep track of what the service account is used for and what permissions it needs.                     |\n## Service account keys\n| 0                                                                                                                    |\n|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| \u2751 Avoid using service account keys if another option is available. Service account keys are a security risk if not managed correctly. You should choose a more secure alternative to service account keys whenever possible. If you must authenticate with a service account key, you are responsible for the security of the private key and for other management operations such as key rotation. For more information, see best practices for managing service account keys. |\n| \u2751 Rotate your service account keys using the IAM service account API. You can rotate a key by creating a new key, switching applications to use the new key, disabling the old key, and then deleting the old key when you are sure that it is no longer needed.                                                    |\n| \u2751 Implement processes to manage user-managed service account keys.                                                                                                    |\n| \u2751 Be careful not to confuse encryption keys with service account keys. Encryption keys are typically used to encrypt data and service account keys are used for secure access to Google Cloud APIs.                                                                    |\n| \u2751 Don't check in the service account keys into the source code or leave them in the Downloads directory.                                                                                           |\n## Auditing\n| 0                               |\n|:--------------------------------------------------------------------------------------------------------------------------|\n| \u2751 Use logs from Cloud Audit Logs to regularly audit changes to your allow policy.           |\n| \u2751 Export audit logs to Cloud Storage to store your logs for long periods of time.           |\n| \u2751 Audit who has the ability to change your allow policies on your projects.            |\n| \u2751 Manage access to logs using Logging roles.                    |\n| \u2751 Apply the same access policies to the Google Cloud resource that you use to route logs as applied to the Logs Explorer. |\n| \u2751 Use logs from Cloud Audit Logs to regularly audit access to service account keys.          |\n## Policy management\n| 0                                              |\n|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| \u2751 If a principal needs access to all projects in your organization, grant roles to the principal at the organization level.               |\n| \u2751 Grant roles to a Google group instead of individual users when possible. It is easier to update the members of a Google group than to update the principals in your allow policies. |", "guide": "IAM"}