{"title": "IAM - List and edit service accounts", "url": "https://cloud.google.com/iam/docs/service-accounts-list-edit", "abstract": "# IAM - List and edit service accounts\nThis page explains how to list and edit service accounts using the Identity and Access Management (IAM) API, the Google Cloud console, and the `gcloud` command- line tool.\n", "content": "## Before you begin\n- Enable the IAM API. [Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=iam.googleapis.com&redirect=https://console.cloud.google.com) \n- Set up authentication.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.You can use the gcloud CLI samples on this page from  either of the following development environments:- **Cloud Shell** : To use an online terminal with the   gcloud CLI already set up, activate Cloud Shell.At the bottom of this page, a Cloud Shell session starts    and displays a command-line prompt. It can take a few seconds for    the session to initialize.\n- **Local shell** : To use the gcloud CLI in a local   development environment, [install](/sdk/docs/install) and [initialize](/sdk/docs/initializing) the gcloud CLI.\nTo use the C++ samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the .NET samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the Go samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the Java samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the Python samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```\n- Understand [IAM service accounts](/iam/docs/service-account-overview) \n### Required roles\nTo get the permissions that you need to manage service accounts,   ask your administrator to grant you the  following IAM roles on the project:\n- To view service accounts: [View Service Accounts ](https://cloud.google.com/iam/docs/understanding-roles#iam.serviceAccountViewer) (`roles/iam.serviceAccountViewer`)\n- To edit service accounts: [Service Account Admin ](https://cloud.google.com/iam/docs/understanding-roles#iam.serviceAccountAdmin) (`roles/iam.serviceAccountAdmin`)\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYou might also be able to get  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .\nTo learn more about these roles, see [Service Accounts roles](/iam/docs/understanding-roles#service-accounts-roles) .\nIAM basic roles also contain permissions to manage service accounts. You should not grant basic roles in a production environment, but you can grant them in a development or test environment.\n## Listing service accounts\nYou can list the [user-managed service accounts](/iam/docs/service-accounts#user-managed) in a project to help you audit service accounts and keys, or as part of a custom tool for managing service accounts.\nYou can't list the [service agents](/iam/docs/service-agents) or other [Google-managed service accounts](/iam/docs/service-account-types#google-managed) that might appear in your project's allow policy and audit logs. Google-managed service accounts aren't located in your project, and you can't access them directly.\n- In the Google Cloud console, go to the **Service accounts** page. [Go to Service accounts](https://console.cloud.google.com/iam-admin/serviceaccounts) \n- Select a project.The **Service accounts** page lists all of the user-managed service accounts in the project you selected.\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Execute the ` [gcloud iam service-accounts list](/sdk/gcloud/reference/iam/service-accounts/list) ` command to list all service accounts in a project.Command:```\ngcloud iam service-accounts list\n```The output is the list of all user-managed service accounts in the project:```\nNAME     EMAIL\nSA_DISPLAY_NAME_1 SA_NAME_1@PROJECT_ID.iam.gserviceaccount.com\nSA_DISPLAY_NAME_2 SA_NAME_2@PROJECT_ID.iam.gserviceaccount.com\n```\nTo learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C++ API reference documentation](/cpp/docs/reference/iam/latest) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/iam/samples/iam_samples.cc) \n```\nnamespace iam = ::google::cloud::iam_admin_v1;[](std::string const& project_id) {\u00a0 iam::IAMClient client(iam::MakeIAMConnection());\u00a0 int count = 0;\u00a0 for (auto& sa : client.ListServiceAccounts(\"projects/\" + project_id)) {\u00a0 \u00a0 if (!sa) throw std::move(sa).status();\u00a0 \u00a0 std::cout << \"ServiceAccount successfully retrieved: \" << sa->name()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 << \"\\n\";\u00a0 \u00a0 ++count;\u00a0 }\u00a0 if (count == 0) {\u00a0 \u00a0 std::cout << \"No service accounts found in project: \" << project_id\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 << \"\\n\";\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C# API reference documentation](https://developers.google.com/api-client-library/dotnet/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/iam/api/ServiceAccounts/ServiceAccountsList.cs) \n```\nusing System;using System.Collections.Generic;using Google.Apis.Auth.OAuth2;using Google.Apis.Iam.v1;using Google.Apis.Iam.v1.Data;public partial class ServiceAccounts{\u00a0 \u00a0 public static IList<ServiceAccount> ListServiceAccounts(string projectId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 var credential = GoogleCredential.GetApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .CreateScoped(IamService.Scope.CloudPlatform);\u00a0 \u00a0 \u00a0 \u00a0 var service = new IamService(new IamService.Initializer\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HttpClientInitializer = credential\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 var response = service.Projects.ServiceAccounts.List(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"projects/\" + projectId).Execute();\u00a0 \u00a0 \u00a0 \u00a0 foreach (ServiceAccount account in response.Accounts)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(\"Name: \" + account.Name);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(\"Display Name: \" + account.DisplayName);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(\"Email: \" + account.Email);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine();\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return response.Accounts;\u00a0 \u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Go API reference documentation](https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/snippets/service_accounts_list.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"google.golang.org/api/iam/v1\")// listServiceAccounts lists a project's service accounts.func listServiceAccounts(w io.Writer, projectID string) ([]*iam.ServiceAccount, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 service, err := iam.NewService(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"iam.NewService: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 response, err := service.Projects.ServiceAccounts.List(\"projects/\" + projectID).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"Projects.ServiceAccounts.List: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 for _, account := range response.Accounts {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Listing service account: %v\\n\", account.Name)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return response.Accounts, nil}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Java API reference documentation](https://developers.google.com/api-client-library/java/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/api-client/src/main/java/iam/snippets/ListServiceAccounts.java) \n```\nimport com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;import com.google.api.client.json.gson.GsonFactory;import com.google.api.services.iam.v1.Iam;import com.google.api.services.iam.v1.IamScopes;import com.google.api.services.iam.v1.model.ListServiceAccountsResponse;import com.google.api.services.iam.v1.model.ServiceAccount;import com.google.auth.http.HttpCredentialsAdapter;import com.google.auth.oauth2.GoogleCredentials;import java.io.IOException;import java.security.GeneralSecurityException;import java.util.Collections;import java.util.List;public class ListServiceAccounts {\u00a0 // Lists all service accounts for the current project.\u00a0 public static void listServiceAccounts(String projectId) {\u00a0 \u00a0 // String projectId = \"my-project-id\"\u00a0 \u00a0 Iam service = null;\u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 service = initService();\u00a0 \u00a0 } catch (IOException | GeneralSecurityException e) {\u00a0 \u00a0 \u00a0 System.out.println(\"Unable to initialize service: \\n\" + e.toString());\u00a0 \u00a0 \u00a0 return;\u00a0 \u00a0 }\u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 ListServiceAccountsResponse response =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 service.projects().serviceAccounts().list(\"projects/\" + projectId).execute();\u00a0 \u00a0 \u00a0 List<ServiceAccount> serviceAccounts = response.getAccounts();\u00a0 \u00a0 \u00a0 for (ServiceAccount account : serviceAccounts) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Name: \" + account.getName());\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Display Name: \" + account.getDisplayName());\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Email: \" + account.getEmail());\u00a0 \u00a0 \u00a0 \u00a0 System.out.println();\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 } catch (IOException e) {\u00a0 \u00a0 \u00a0 System.out.println(\"Unable to list service accounts: \\n\" + e.toString());\u00a0 \u00a0 }\u00a0 }\u00a0 private static Iam initService() throws GeneralSecurityException, IOException {\u00a0 \u00a0 // Use the Application Default Credentials strategy for authentication. For more info, see:\u00a0 \u00a0 // https://cloud.google.com/docs/authentication/production#finding_credentials_automatically\u00a0 \u00a0 GoogleCredentials credential =\u00a0 \u00a0 \u00a0 \u00a0 GoogleCredentials.getApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .createScoped(Collections.singleton(IamScopes.CLOUD_PLATFORM));\u00a0 \u00a0 // Initialize the IAM service, which can be used to send requests to the IAM API.\u00a0 \u00a0 Iam service =\u00a0 \u00a0 \u00a0 \u00a0 new Iam.Builder(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GoogleNetHttpTransport.newTrustedTransport(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GsonFactory.getDefaultInstance(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new HttpCredentialsAdapter(credential))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setApplicationName(\"service-accounts\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 return service;\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Python API reference documentation](https://developers.google.com/api-client-library/python/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/api-client/service_accounts.py) \n```\nimport osfrom google.oauth2 import service_account \u00a0# type: ignoreimport googleapiclient.discovery \u00a0# type: ignoredef list_service_accounts(project_id: str) -> dict:\u00a0 \u00a0 \"\"\"Lists all service accounts for the current project.\"\"\"\u00a0 \u00a0 credentials = service_account.Credentials.from_service_account_file(\u00a0 \u00a0 \u00a0 \u00a0 filename=os.environ[\"GOOGLE_APPLICATION_CREDENTIALS\"],\u00a0 \u00a0 \u00a0 \u00a0 scopes=[\"https://www.googleapis.com/auth/cloud-platform\"],\u00a0 \u00a0 )\u00a0 \u00a0 service = googleapiclient.discovery.build(\"iam\", \"v1\", credentials=credentials)\u00a0 \u00a0 service_accounts = (\u00a0 \u00a0 \u00a0 \u00a0 service.projects()\u00a0 \u00a0 \u00a0 \u00a0 .serviceAccounts()\u00a0 \u00a0 \u00a0 \u00a0 .list(name=\"projects/\" + project_id)\u00a0 \u00a0 \u00a0 \u00a0 .execute()\u00a0 \u00a0 )\u00a0 \u00a0 for account in service_accounts[\"accounts\"]:\u00a0 \u00a0 \u00a0 \u00a0 print(\"Name: \" + account[\"name\"])\u00a0 \u00a0 \u00a0 \u00a0 print(\"Email: \" + account[\"email\"])\u00a0 \u00a0 \u00a0 \u00a0 print(\" \")\u00a0 \u00a0 return service_accounts\n```The ` [serviceAccounts.list](/iam/docs/reference/rest/v1/projects.serviceAccounts/list) ` method lists every user-managed service account in your project.\nBefore using any of the request data, make the following replacements:- ``: Your Google Cloud project ID. Project IDs are alphanumeric strings, like`my-project`.\nHTTP method and URL:\n```\nGET https://iam.googleapis.com/v1/projects/PROJECT_ID/serviceAccounts\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:\n```\n{\n \"accounts\": [ {\n  \"name\": \"projects/my-project/serviceAccounts/sa-1@my-project.iam.gserviceaccount.com\",\n  \"projectId\": \"my-project\",\n  \"uniqueId\": \"123456789012345678901\",\n  \"email\": \"sa-1@my-project.iam.gserviceaccount.com\",\n  \"description\": \"My first service account\",\n  \"displayName\": \"Service account 1\",\n  \"etag\": \"BwUpTsLVUkQ=\",\n  \"oauth2ClientId\": \"987654321098765432109\"\n },\n {\n  \"name\": \"projects/my-project/serviceAccounts/sa-2@my-project.iam.gserviceaccount.com\",\n  \"projectId\": \"my-project\",\n  \"uniqueId\": \"234567890123456789012\",\n  \"email\": \"sa-2@my-project.iam.gserviceaccount.com\",\n  \"description\": \"My second service account\",\n  \"displayName\": \"Service account 2\",\n  \"etag\": \"UkQpTwBVUsL=\",\n  \"oauth2ClientId\": \"876543210987654321098\"\n }\n ]\n}\n```\n## Edit a service account\nThe display name (friendly name) and description of a service account are commonly used to capture additional information about the service account, such as the purpose of the service account or a contact person for the account.\n- In the Google Cloud console, go to the **Service accounts** page. [Go to Service accounts](https://console.cloud.google.com/iam-admin/serviceaccounts) \n- Select a project.\n- Click the email address of the service account that you want to rename.\n- Enter the new name in the **Name** box, then click **Save** .\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Execute the ` [gcloud iam service-accounts update](/sdk/gcloud/reference/iam/service-accounts/update) ` command to update a service account.Command:```\ngcloud iam service-accounts update \\\n SA_NAME@PROJECT_ID.iam.gserviceaccount.com \\\n --description=\"UPDATED_SA_DESCRIPTION\" \\\n --display-name=\"UPDATED_DISPLAY_NAME\"\n```The output is the renamed service account:```\ndescription: UPDATED_SA_DESCRIPTION\ndisplayName: UPDATED_DISPLAY_NAME\nname: projects/PROJECT_ID/serviceAccounts/SA_NAME@PROJECT_ID.iam.gserviceaccount.com\n```\nTo learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C++ API reference documentation](/cpp/docs/reference/iam/latest) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/iam/samples/iam_samples.cc) \n```\nnamespace iam = ::google::cloud::iam_admin_v1;[](std::string const& name, std::string const& display_name) {\u00a0 iam::IAMClient client(iam::MakeIAMConnection());\u00a0 google::iam::admin::v1::PatchServiceAccountRequest request;\u00a0 google::iam::admin::v1::ServiceAccount service_account;\u00a0 service_account.set_name(name);\u00a0 service_account.set_display_name(display_name);\u00a0 google::protobuf::FieldMask update_mask;\u00a0 *update_mask.add_paths() = \"display_name\";\u00a0 *request.mutable_service_account() = service_account;\u00a0 *request.mutable_update_mask() = update_mask;\u00a0 auto response = client.PatchServiceAccount(request);\u00a0 if (!response) throw std::move(response).status();\u00a0 std::cout << \"ServiceAccount successfully updated: \"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 << response->DebugString() << \"\\n\";}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C# API reference documentation](https://developers.google.com/api-client-library/dotnet/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/iam/api/ServiceAccounts/ServiceAccountsRename.cs) \n```\nusing System;using Google.Apis.Auth.OAuth2;using Google.Apis.Iam.v1;using Google.Apis.Iam.v1.Data;public partial class ServiceAccounts{\u00a0 \u00a0 public static ServiceAccount RenameServiceAccount(string email,\u00a0 \u00a0 \u00a0 \u00a0 string newDisplayName)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 var credential = GoogleCredential.GetApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .CreateScoped(IamService.Scope.CloudPlatform);\u00a0 \u00a0 \u00a0 \u00a0 var service = new IamService(new IamService.Initializer\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HttpClientInitializer = credential\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 // First, get a ServiceAccount using List() or Get().\u00a0 \u00a0 \u00a0 \u00a0 string resource = \"projects/-/serviceAccounts/\" + email;\u00a0 \u00a0 \u00a0 \u00a0 var serviceAccount = service.Projects.ServiceAccounts.Get(resource)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .Execute();\u00a0 \u00a0 \u00a0 \u00a0 // Then you can update the display name.\u00a0 \u00a0 \u00a0 \u00a0 serviceAccount.DisplayName = newDisplayName;\u00a0 \u00a0 \u00a0 \u00a0 serviceAccount = service.Projects.ServiceAccounts.Update(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 serviceAccount, resource).Execute();\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine($\"Updated display name for {serviceAccount.Email} \" +\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"to: \" + serviceAccount.DisplayName);\u00a0 \u00a0 \u00a0 \u00a0 return serviceAccount;\u00a0 \u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Go API reference documentation](https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/snippets/service_accounts_rename.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"google.golang.org/api/iam/v1\")// renameServiceAccount renames a service account.func renameServiceAccount(w io.Writer, email, newDisplayName string) (*iam.ServiceAccount, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 service, err := iam.NewService(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"iam.NewService: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // First, get a ServiceAccount using List() or Get().\u00a0 \u00a0 \u00a0 \u00a0 resource := \"projects/-/serviceAccounts/\" + email\u00a0 \u00a0 \u00a0 \u00a0 serviceAccount, err := service.Projects.ServiceAccounts.Get(resource).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"Projects.ServiceAccounts.Get: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Then you can update the display name.\u00a0 \u00a0 \u00a0 \u00a0 serviceAccount.DisplayName = newDisplayName\u00a0 \u00a0 \u00a0 \u00a0 serviceAccount, err = service.Projects.ServiceAccounts.Update(resource, serviceAccount).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"Projects.ServiceAccounts.Update: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Updated service account: %v\", serviceAccount.Email)\u00a0 \u00a0 \u00a0 \u00a0 return serviceAccount, nil}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Java API reference documentation](https://developers.google.com/api-client-library/java/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/api-client/src/main/java/iam/snippets/RenameServiceAccount.java) \n```\nimport com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;import com.google.api.client.json.gson.GsonFactory;import com.google.api.services.iam.v1.Iam;import com.google.api.services.iam.v1.IamScopes;import com.google.api.services.iam.v1.model.ServiceAccount;import com.google.auth.http.HttpCredentialsAdapter;import com.google.auth.oauth2.GoogleCredentials;import java.io.IOException;import java.security.GeneralSecurityException;import java.util.Collections;public class RenameServiceAccount {\u00a0 // Changes a service account's display name.\u00a0 public static void renameServiceAccount(String projectId, String serviceAccountName) {\u00a0 \u00a0 // String projectId = \"my-project-id\";\u00a0 \u00a0 // String serviceAccountName = \"my-service-account-name\";\u00a0 \u00a0 Iam service = null;\u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 service = initService();\u00a0 \u00a0 } catch (IOException | GeneralSecurityException e) {\u00a0 \u00a0 \u00a0 System.out.println(\"Unable to initialize service: \\n\" + e.toString());\u00a0 \u00a0 \u00a0 return;\u00a0 \u00a0 }\u00a0 \u00a0 String serviceAccountEmail = serviceAccountName + \"@\" + projectId + \".iam.gserviceaccount.com\";\u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 // First, get a service account using List() or Get()\u00a0 \u00a0 \u00a0 ServiceAccount serviceAccount =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 service\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .projects()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .serviceAccounts()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .get(\"projects/-/serviceAccounts/\" + serviceAccountEmail)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .execute();\u00a0 \u00a0 \u00a0 // Then you can update the display name\u00a0 \u00a0 \u00a0 serviceAccount.setDisplayName(\"your-new-display-name\");\u00a0 \u00a0 \u00a0 serviceAccount =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 service\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .projects()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .serviceAccounts()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .update(serviceAccount.getName(), serviceAccount)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .execute();\u00a0 \u00a0 \u00a0 System.out.println(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Updated display name for \"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + serviceAccount.getName()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" to: \"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + serviceAccount.getDisplayName());\u00a0 \u00a0 } catch (IOException e) {\u00a0 \u00a0 \u00a0 System.out.println(\"Unable to rename service account: \\n\" + e.toString());\u00a0 \u00a0 }\u00a0 }\u00a0 private static Iam initService() throws GeneralSecurityException, IOException {\u00a0 \u00a0 // Use the Application Default Credentials strategy for authentication. For more info, see:\u00a0 \u00a0 // https://cloud.google.com/docs/authentication/production#finding_credentials_automatically\u00a0 \u00a0 GoogleCredentials credential =\u00a0 \u00a0 \u00a0 \u00a0 GoogleCredentials.getApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .createScoped(Collections.singleton(IamScopes.CLOUD_PLATFORM));\u00a0 \u00a0 // Initialize the IAM service, which can be used to send requests to the IAM API.\u00a0 \u00a0 Iam service =\u00a0 \u00a0 \u00a0 \u00a0 new Iam.Builder(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GoogleNetHttpTransport.newTrustedTransport(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GsonFactory.getDefaultInstance(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new HttpCredentialsAdapter(credential))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setApplicationName(\"service-accounts\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 return service;\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Python API reference documentation](https://developers.google.com/api-client-library/python/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/api-client/service_accounts.py) \n```\nimport osfrom google.oauth2 import service_account \u00a0# type: ignoreimport googleapiclient.discovery \u00a0# type: ignoredef rename_service_account(email: str, new_display_name: str) -> dict:\u00a0 \u00a0 \"\"\"Changes a service account's display name.\"\"\"\u00a0 \u00a0 # First, get a service account using List() or Get()\u00a0 \u00a0 credentials = service_account.Credentials.from_service_account_file(\u00a0 \u00a0 \u00a0 \u00a0 filename=os.environ[\"GOOGLE_APPLICATION_CREDENTIALS\"],\u00a0 \u00a0 \u00a0 \u00a0 scopes=[\"https://www.googleapis.com/auth/cloud-platform\"],\u00a0 \u00a0 )\u00a0 \u00a0 service = googleapiclient.discovery.build(\"iam\", \"v1\", credentials=credentials)\u00a0 \u00a0 resource = \"projects/-/serviceAccounts/\" + email\u00a0 \u00a0 my_service_account = (\u00a0 \u00a0 \u00a0 \u00a0 service.projects().serviceAccounts().get(name=resource).execute()\u00a0 \u00a0 )\u00a0 \u00a0 # Then you can update the display name\u00a0 \u00a0 my_service_account[\"displayName\"] = new_display_name\u00a0 \u00a0 my_service_account = (\u00a0 \u00a0 \u00a0 \u00a0 service.projects()\u00a0 \u00a0 \u00a0 \u00a0 .serviceAccounts()\u00a0 \u00a0 \u00a0 \u00a0 .update(name=resource, body=my_service_account)\u00a0 \u00a0 \u00a0 \u00a0 .execute()\u00a0 \u00a0 )\u00a0 \u00a0 print(\u00a0 \u00a0 \u00a0 \u00a0 \"Updated display name for {} to: {}\".format(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 my_service_account[\"email\"], my_service_account[\"displayName\"]\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 )\u00a0 \u00a0 return my_service_account\n```The ` [serviceAccounts.patch](/iam/docs/reference/rest/v1/projects.serviceAccounts/patch) ` method updates a service account.\nBefore using any of the request data, make the following replacements:- ``: Your Google Cloud project ID. Project IDs are alphanumeric strings, like`my-project`.\n- ``: The ID of your service account. This can either be the service account's email address in the form`` `@` `` `.iam.gserviceaccount.com`, or the service account's unique numeric ID.\n- ``: The alphanumeric ID of your service account. This name must be between 6 and 30 characters, and can contain lowercase alphanumeric characters and dashes.\n- Replace at least one of the following:\n- ``: A new display name for your service   account.\n- ``: A new description for your service   account.\nHTTP method and URL:\n```\nPATCH https://iam.googleapis.com/v1/projects/PROJECT_ID/serviceAccounts/SA_ID \n```\nRequest JSON body:\n```\n{\n \"serviceAccount\": {\n \"email\": \"SA_NAME@PROJECT_ID.iam.gserviceaccount.com\",\n \"displayName\": \"UPDATED_DISPLAY_NAME\",\n \"description\": \"UPDATED_DESCRIPTION\"\n },\n \"updateMask\": \"displayName,description\"\n}\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:\n```\n{\n \"name\": \"projects/my-project/serviceAccounts/my-service-account@my-project.iam.gserviceaccount.com\",\n \"displayName\": \"My updated service account\",\n \"description\": \"An updated description of my service account\"\n}\n```\n## What's next\n- Learn how to [disable and enable service accounts](/iam/docs/service-accounts-disable-enable) .\n- Review the process for [granting IAM roles to all types of principals](/iam/docs/granting-changing-revoking-access) , including service accounts.\n- Explore how you can use [role recommendations](/iam/docs/recommender-overview) to downscope permissions for all principals, including service accounts.\n- Understand how to [attach service accounts to resources](/iam/docs/attach-service-accounts) .", "guide": "IAM"}