{"title": "IAM - Types of service accounts", "url": "https://cloud.google.com/iam/docs/service-account-types", "abstract": "# IAM - Types of service accounts\nService accounts can be divided into two categories: service accounts that you manage, and service accounts that Google manages. This page describes how each type of service account is created and used.\n", "content": "## User-managed service accounts\nUser-managed service accounts are service accounts that you create in your projects. You can update, disable, enable, and delete these service accounts at your discretion. You can also manage other principals' access to these service accounts.\nYou can create user-managed service accounts in your project using the IAM API, the Google Cloud console, or the Google Cloud CLI.\nBy default, you can create up to 100 user-managed service accounts in a project. If this quota does not meet your needs, you can use the Google Cloud console to [request a quota increase](/docs/quotas/view-manage#requesting_higher_quota) . Only user-created service accounts count towards this quota\u2014 [default serviceaccounts](#default) and [Google-managed service accounts](#google-managed) do not.\nWhen you create a user-managed service account in your project, you choose a name for the service account. This name appears in the email address that identifies the service account, which uses the following format:\n`` `@` `` `.iam.gserviceaccount.com`\nTo learn how to create a service account, see [Create service accounts](/iam/docs/service-accounts-create) .\n### Default service accounts\nDefault service accounts are user-managed service accounts that are created automatically when you enable or use certain Google Cloud services. These service accounts let the service deploy jobs that access other Google Cloud resources. You are responsible for managing default service accounts after they are created.\nIf your application runs in a Google Cloud environment that has a default service account, your application can use the credentials for the default service account to call Google Cloud APIs. Alternatively, you can create your own user-managed service account and use it to authenticate. For details, see [Set up Application Default Credentials](/docs/authentication/provide-credentials-adc#attached-sa) .\n**Important:** When a default service account is created, it is automatically granted the Editor role ( `roles/editor` ) on your project. This role includes a very large number of permissions. We strongly recommend that you either disable the automatic role grant by [ adding a constraint to your organization policy](/resource-manager/docs/organization-policy/restricting-service-accounts#disable_service_account_default_grants) , or revoke the Editor role manually. If you disable or revoke the role grant, you must decide which roles to grant to the default service accounts, then grant these roles yourself.If you are replacing a role binding that has existed for more than 90 days, [role recommendations](/iam/docs/recommender-overview) can help you determine which roles to grant instead. You can also use the [Policy Simulator](/iam/docs/understanding-simulator) to ensure that changing the role won't affect the service account's access.\nThe following table lists the services that create default service accounts:\n| Service                | Service account name     | Email address          |\n|:-----------------------------------------------------------------------|:---------------------------------------|:-----------------------------------------------------|\n| App Engine, and any Google Cloud service that uses App Engine   | App Engine default service account  | project-id@appspot.gserviceaccount.com    |\n| Compute Engine, and any Google Cloud service that uses Compute Engine | Compute Engine default service account | project-number-compute@developer.gserviceaccount.com |\n**Note:** Both the creation time and the email address format for default service accounts are subject to change.\n## Google-managed service accounts\nSome Google Cloud services need access to your resources so that they can act on your behalf. For example, when you use Cloud Run to run a container, the service needs access to any Pub/Sub topics that can trigger the container.\nTo meet this need, Google creates and manages service accounts for many Google Cloud services. These service accounts are known as Google-managed service accounts. You might see Google-managed service accounts in your project's allow policy, in audit logs, or on the IAM page in the Google Cloud console.\nGoogle-managed service accounts aren't created in your projects, so you won't see them when viewing your projects' service accounts.\n**Note:** Both the creation time and the email address format for Google-managed service accounts are subject to change.\nGoogle has the following types of Google-managed service accounts:\n- [Service-specific service agents](#service-agents) \n- [Google APIs Service Agent](#google-apis-service-agent) \n- [Role manager for Google-managed service accounts](#role-manager) \n### Visibility\nGoogle-managed service accounts aren't listed in the **Service accounts** page in the Google Cloud console. These service accounts aren't located in your project, and you can't access them directly.\nBy default, Google-managed service accounts also aren't listed in the **IAM** page in the Google Cloud console, even if they've been granted a role on your project. To view role grants for Google-managed service accounts, select the **Include Google-provided role grants** checkbox.## Service-specific service agents\nService agents are Google-managed service accounts that act on behalf of individual services. In many cases, these service agents are required for services to function properly. For example, service agents are what allow Cloud Logging sinks to write logs to Cloud Storage buckets.\nEach service agent is associated with a resource. This resource is typically a project, folder, or organization, though it can also be a service-specific resource\u2014for example, a Cloud SQL instance. This resource defines the scope of the service agent's actions. For example, if a service agent is associated with a project, it will act on behalf of a service for the project and its descendant resources.\nYou can determine which type of resource a service agent is associated with by looking at its email address:\n- If the service agent is associated with a project, folder, or organization, its email address contains the numeric ID for that project, folder, or organization.\n- If the service agent is associated with a service-specific resource, its email address contains a numeric project ID and a unique identifier. The numeric project ID indicates which project owns the resource that the service agent is associated with. The unique identifier distinguishes the service agent from other similar service agents in the same project.\n### Service agent creation\nThe exact time that a service agent is created depends on what type of resource it's associated with.\nService agents that are associated with a service-specific resource are created when you create the resource. For more information on how to identify and configure these service agents, review the documentation for the associated resource.\nService agents that are associated with projects, folders, and organizations are created as you need them, usually when you first use a service. If necessary, you can also ask Google Cloud to create service agents for a service before you use the service. For more information, see [Create and grant roles toservice agents](/iam/docs/create-service-agents) .\n### Service agent roles\nSome actions in Google Cloud require service agents to create and access resources on your behalf. For example, when you create a Dataproc cluster, the Dataproc service agent needs permission to create Compute Engine instances in your project in order to create the cluster.\nIn order get this access, service agents need specific IAM roles. Many project-level service agents are automatically granted the roles that they need. The names of these automatically granted roles typically end in `serviceAgent` or `ServiceAgent` . For other service agents, you need to grant them roles so that the service works correctly. To find out which service agents are granted roles automatically, see the [service agentreference](/iam/docs/service-agents) .\n**Warning:** Unless a [role recommendation](/iam/docs/recommender-overview) suggests it, do not revoke the roles that are granted to service agents. If you revoke these roles in a way that is not suggested by a role recommendation, some Google Cloud services will no longer work.\nIf you ask Google Cloud to create service agents before you use a service, you must grant the service agents the roles that they are typically granted automatically. This is because service agents that are created at a user's request aren't automatically granted roles. If you don't grant the service agents these roles, some services might not function properly. To learn how to grant these roles to service agents, see [Create and grant roles to serviceagents](/iam/docs/create-service-agents) .\n### Primary service agents\nIn the [service agent reference](/iam/docs/service-agents) , some service agents are identified as . Primary service agents are service agents whose email address is returned when you [trigger service agentcreation](/iam/docs/create-service-agents#create) for a service.\n## Google APIs Service Agent\nYour project's allow policy is likely to refer to a service account named the Google APIs Service Agent, with an email address that uses the following format: `` `@cloudservices.gserviceaccount.com`\nThis service account runs internal Google processes on your behalf. It is automatically granted the Editor role ( `roles/editor` ) on the project.\n**Warning:** Unless a [role recommendation](/iam/docs/recommender-overview) suggests it, do not revoke the roles that are granted to the Google APIs Service Agent. If you revoke these roles in a way that is not suggested by a role recommendation, some Google Cloud services will no longer work.\n## Role manager for Google-managed service accounts\nYour [audit logs](/iam/docs/audit-logging) for IAM might refer to the service account `service-agent-manager@system.gserviceaccount.com` .\nThis service account manages the roles that are granted to service agents. It is visible only in audit logs.\nFor example, if you use a new API, Google might automatically create a new service agent and grant it roles on your project. Granting these roles generates an audit log entry, which shows that `service-agent-manager@system.gserviceaccount.com` set the allow policy for the project.\n## What's next\n- Find out how to [create and manage service accounts](/iam/docs/managing-service-accounts) .\n- Learn how to [create and manage service account keys](/iam/docs/managing-service-account-keys) .\n- Get [best practices for working with service accounts](/iam/docs/best-practices-service-accounts) .\n- Review [best practices for managing service account keys](/iam/docs/best-practices-for-managing-service-account-keys) .", "guide": "IAM"}