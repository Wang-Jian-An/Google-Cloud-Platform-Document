{"title": "IAM - Troubleshooting \"withcond\" in policies and role bindings", "url": "https://cloud.google.com/iam/docs/troubleshooting-withcond", "abstract": "# IAM - Troubleshooting \"withcond\" in policies and role bindings\nWhen you view an [allow policy](/iam/docs/policies) , you might see role names that include the string `withcond` , followed by a hash value. For example, you might see a role name like `roles/iam.serviceAccountAdmin_withcond_2b17cc25d2cd9e2c54d8` .\nThis page explains when and why you might see the string `withcond` in an allow policy. It also recommends actions you should take if you see this string.\n", "content": "## Policy versions and conditional role bindings\nAn allow policy can be represented in several different forms. Each form is known as an [allow policy version](/iam/docs/policies#versions) .\nIn an allow policy that uses version `1` , some role bindings might contain the string `withcond` in a role name, followed by a hash value:\n```\n{\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:dana@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.serviceAccountAdmin_withcond_2b17cc25d2cd9e2c54d8\"\u00a0 \u00a0 }\u00a0 ],\u00a0 \"etag\": \"BwUjMhCsNvY=\",\u00a0 \"version\": 1}\n```\nThis format indicates that the role binding is [conditional](/iam/docs/policies#conditional-bindings) . In other words, the role is granted only if specific conditions are met.\nVersion `1` allow policies do not show these conditions. If you see the string `withcond` and a hash value, then the role binding includes a condition that you cannot see.\n## Solution: Specify policy version 3\nTo ensure that you can view and update the entire allow policy, including its conditions, you must always specify version `3` when you get or set an allow policy. To specify version `3` , complete the tasks in the following sections.\n### Update the gcloud tool\nIf you use the Google Cloud CLI, run `gcloud version` to check its version number. The output includes a string similar to `Google Cloud CLI 279.0.0` .\nIf the version number is less than 263.0.0, run `gcloud components update` to update the gcloud CLI. In version 263.0.0 and later, the gcloud CLI automatically specifies an allow policy version that supports conditions.\n### Update client libraries\nIf your application uses a client library, follow these steps:\n- Find the name and version number for the client library, then check the list of [client libraries that support allow policy versions](/iam/docs/policies#libraries) .- If you already use a recent version of the client library, and it supports allow policy versions, you do not need to update your client library. Continue to the next step.\n- If you use an older version of the client library, and a later version supports allow policy versions, update your client library to the latest version.\n- If you use a client library that does not support allow policy versions, you can add another client library that supports allow policy versions to your application. Use that client library to work with allow policies. Alternatively, you can use the [IAM REST API](/iam/docs/reference/rest) directly.\n- Update any code in your application that gets and sets allow policies:- When you get an allow policy, always [specify version 3](/iam/docs/policies#specifying-version-get) in the request.\n- When you set an allow policy, always [set the version field of the allow policy to 3](/iam/docs/policies#specifying-version-set) , and include the [etag field](/iam/docs/policies#etag) in your request. **Important:** If you omit the `etag` field, IAM allows you to overwrite the old allow policy with the new allow policy, even if this action causes data loss.\n### Update REST API calls\nIf your application uses the [IAM REST API](/iam/docs/reference/rest) directly, update any code that gets and sets allow policies:- When you get an allow policy, always [specify version 3](/iam/docs/policies#specifying-version-get) in the request.\n- When you set an allow policy, always [set the version field of the allow policy to 3](/iam/docs/policies#specifying-version-set) , and include the [etag field](/iam/docs/policies#etag) in your request. **Important:** If you omit the `etag` field, IAM allows you to overwrite the old allow policy with the new allow policy, even if this action causes data loss.### Update management tools for policies\nIf you keep local copies of your allow policies\u2014for example, if you store them in a version control system and treat them as code\u2014make sure that all of the tools you use meet these criteria:\n- All requests to get or set an allow policy specify version`3`\n- All requests to set an allow policy include the`etag`field in the request\nIf a tool does not meet these criteria, check for an updated version of the tool.\nAlso, make sure your management tools preserve conditional role grants, rather than adding a duplicate role grant that does not include a condition. For example, consider the following scenario:\n- You grant the Create Service Accounts role ( `roles/iam.serviceAccountCreator` ) to the user `vikram@example.com` on the folder `my-folder` . The allow policy for the folder looks similar to this example:```\n{\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:vikram@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.serviceAccountCreator\"\u00a0 \u00a0 }\u00a0 ],\u00a0 \"etag\": \"BuFmmMhCsNY=\",\u00a0 \"version\": 1}\n```\n- You use a tool to retrieve the allow policy and store it in a version control system.\n- You add a condition so that `vikram@example.com` can create service accounts only during the normal work week, based on the date and time in Berlin, Germany. The updated allow policy looks similar to this example:```\n{\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:vikram@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.serviceAccountCreator\",\u00a0 \u00a0 \u00a0 \"condition\": {\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"work_week_only\",\u00a0 \u00a0 \u00a0 \u00a0 \"expression\": \"request.time.getDayOfWeek('Europe/Berlin') >= 1 && request.time.getDayOfWeek('Europe/Berlin') <= 5\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ],\u00a0 \"etag\": \"BwWcR/B3tNk=\",\u00a0 \"version\": 3}\n```\n- You use a tool to retrieve the updated allow policy. The tool does not specify an allow policy version when it requests the allow policy, so you receive a version `1` allow policy with a modified role name:```\n{\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:vikram@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.serviceAccountCreator_withcond_a75dc089e6fa084bd379\"\u00a0 \u00a0 }\u00a0 ],\u00a0 \"etag\": \"BwWcR/B3tNk=\",\u00a0 \"version\": 1}\n```\nAt this point, the management tool might decide that the binding from `vikram@example.com` to the role `roles/iam.serviceAccountCreator` has disappeared, and that it should restore the original role binding to the allow policy:\nAvoid: Additional role binding with no condition\n```\n{\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:vikram@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.serviceAccountCreator_withcond_a75dc089e6fa084bd379\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:vikram@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.serviceAccountCreator\"\u00a0 \u00a0 }\u00a0 ],\u00a0 \"etag\": \"BwWd3HjhKxE=\",\u00a0 \"version\": 1}\n```\n**This change is not correct.** It grants the role `roles/iam.serviceAccountCreator` to `vikram@example.com` regardless of the day of the week. As a result, the condition in the first role binding has no effect.\nIf your management tools try to make this type of change, do not approve the change. Instead, you must update your management tools to specify version `3` in requests.\n## What's next\n- Learn more about [allow policies](/iam/docs/policies) .\n- Find out how to specify an allow policy version when you [get an allow policy](/iam/docs/policies#specifying-version-get) or [set an allow policy](/iam/docs/policies#specifying-version-set) .\n- Understand how to grant access conditionally with [IAM Conditions](/iam/docs/conditions-overview) .", "guide": "IAM"}