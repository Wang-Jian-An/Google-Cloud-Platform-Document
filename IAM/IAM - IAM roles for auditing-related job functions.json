{"title": "IAM - IAM roles for auditing-related job functions", "url": "https://cloud.google.com/iam/docs/job-functions/auditing", "abstract": "# IAM - IAM roles for auditing-related job functions\nThis topic describes how to configure Identity and Access Management permissions for a set of sample auditing scenarios. It provides guidance on which IAM roles to grant to the auditing-related functional roles in your company for each scenarios. The examples in this topic are mainly targeted at security administrators, auditors, and employees who manage auditing tasks for an organization.\nTo learn about audit logs for Google Cloud, see [Cloud Audit Logs](/logging/docs/audit) . To learn about the audit logs that IAM generates, see [IAM audit logging for service accounts](/iam/docs/audit-logging) .\n", "content": "## Scenario: Operational monitoring\nIn this scenario, an organization has a central security team that has the ability to review logs that may contain sensitive information both in Cloud Logging and when stored in long-term storage.\nHistorical audit data is stored in Cloud Storage. The organization uses an application to provide access to the historical audit data. The application uses a service account to access the log data. Due to the sensitivity of some of the audit log data, it is redacted using Sensitive Data Protection before being made accessible for viewing.\nThe table below explains the IAM roles that need to be granted to the CTO, security team, and service account, as well as the resource level at which the roles are granted.\n| Role        | Resource  | Principal  | Description                               |\n|:----------------------------------|:-------------|:--------------|:-------------------------------------------------------------------------------------------------------------------------------------|\n| resourcemanager.organizationAdmin | Organization | CTO   | The resourcemanager.organizationAdmin role gives the CTO the ability to assign permissions to the security team and service account. |\n| logging.viewer     | Organization | Security team | The logging.viewer role gives the security admin team the ability to view the Admin Activity logs.         |\n| logging.privateLogViewer   | Organization | Security team | The logging.privateLogViewer role gives the ability to view the Data Access logs.             |\nOnce log entries have been exported, access to the exported copies is controlled entirely by IAM permissions and roles on any of the destinations: Cloud Storage, BigQuery, or Pub/Sub. In this scenario, Cloud Storage is the destination for long term storage of audit logs.\n| Role   | Resource  | Principal  | Description                       |\n|:---------------|:-------------|:----------------|:------------------------------------------------------------------------------------------------------|\n| logging.viewer | Organization | Service account | The logging.viewer role permits the service account to read the Admin Activity logs in Cloud Logging. |\nData in the Data Access logs is deemed as personally identifiable information (PII) for this organization. Integrating the application with [Sensitive Data Protection](/dlp/docs) gives the ability to redact sensitive PII data when viewing Data Access logs whether they are in the Data Access logs or from the historical archive in Cloud Storage.\n| Role     | Resource | Principal  | Description                       |\n|:---------------------|:-----------|:----------------|:----------------------------------------------------------------------------------------------------|\n| storage.objectViewer | Bucket  | Service account | The storage.objectViewer role permits the service account to read the exported Admin Activity logs. |\nThe allow policy bound to the organization resource for this scenario will look similar to the following:\n```\n{\u00a0 \"bindings\": [{\u00a0 \u00a0 \"role\": \"roles/resourcemanager.organizationAdmin\",\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:cto@example.com\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"role\": \"roles/logging.viewer\",\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"group:security-team@example.com\",\u00a0 \u00a0 \u00a0 \u00a0 \"serviceAccount:prod-logviewer@admin-resources.iam.gserviceaccount.com\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"role\": \"roles/logging.privateLogViewer\",\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"group:security-team@example.com\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 }\u00a0 ]}\n```\nThe allow policy bound at the bucket configured as the destination sink for this scenario will look similar to the following:\n```\n{\u00a0 \"bindings\": [{\u00a0 \u00a0 \"role\": \"roles/storage.objectViewer\",\u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \"serviceAccount:prod-logviewer@admin-resources.iam.gserviceaccount.com\"\u00a0 \u00a0 ]\u00a0 }]}\n```\n## Scenario: Development teams monitoring their audit logs\nIn this scenario, the organization's developers need to look at audit logs generated while developing their applications. They are not permitted to review production logs unless they have been redacted using Sensitive Data Protection. A dashboard application is available to the developers that provides view-only access to exported production data. The organization's security team has access to all logs both in production and in the development environment.\nThe table below explains the IAM roles that need to be granted to the security team, developers, and service account, as well as the resource level at which the roles are granted.\n| Role      | Resource  | Principal  | Description                                              |\n|:-------------------------|:-------------|:---------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| logging.viewer   | Organization | Security team | The logging.viewer role gives the security admin team the ability to view the Admin Activity logs.                        |\n| logging.privateLogViewer | Organization | Security team | The logging.privateLogViewer role gives the ability to view the Data Access logs.                            |\n| logging.viewer   | Folder  | Developer team | The logging.viewer role gives the developer team the ability to view the Admin Activity logs generated by the developer projects contained in a folder where all developer projects are located. |\n| logging.privateLogViewer | Folder  | Developer team | The logging.privateLogViewer role gives the ability to view the Data Access logs.                            |\nAccess to the exported copies is controlled entirely by IAM permissions and roles on any of the destinations: Cloud Storage, BigQuery, or Pub/Sub. In this scenario, BigQuery is the destination for storage of audit logs.\n| Role    | Resource   | Principal     | Description                               |\n|:--------------------|:-----------------|:--------------------------|:-------------------------------------------------------------------------------------------------------------------------------------|\n| bigquery.dataViewer | BigQuery dataset | Dashboard service account | The bigquery.dataViewer role permits the service account used by the dashboard application to read the exported Admin Activity logs. |\nThe allow policy bound to the development team's folder resource for this scenario will look similar to the following:\n```\n{\u00a0 \"bindings\": [{\u00a0 \u00a0 \"role\": \"roles/logging.viewer\",\u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \"group:developer-team@example.com\"\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"role\": \"roles/logging.privateLogViewer\",\u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \"group:developer-team@example.com\"\u00a0 \u00a0 ]\u00a0 }]}\n```\nThe allow policy bound to the organization resource for this scenario will look similar to the following:\n```\n{\u00a0 \"bindings\": [{\u00a0 \u00a0 \"role\": \"roles/logging.viewer\",\u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \"group:security-team@example.com\"\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"role\": \"roles/logging.privateLogViewer\",\u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \"group:security-team@example.com\"\u00a0 \u00a0 ]\u00a0 }]}\n```\nThe allow policy bound at the BigQuery dataset that is configured as the destination sink for this scenario will look similar to the following:\n```\n{\u00a0 \"bindings\": [{\u00a0 \u00a0 \"role\": \"roles/bigquery.dataViewer\",\u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \"serviceAccount:prod-project-dashboard@admin-resources.iam.gserviceaccount.com\"\u00a0 \u00a0 ]\u00a0 }]}\n```\n## Scenario: External auditors\nIn this scenario, audit logs for an organization are aggregated and exported to a central sink location. A third-party auditor is granted access several times a year to review the organization's audit logs. The auditor is not authorized to view PII data in the Admin Activity logs. To comply with this requirement, a dashboard is available that provides access to the historic logs stored in BigQuery, and on request, to the Cloud Logging Admin Activity logs.\nThe organization creates a Google group for these external auditors and adds the current auditor to the group. This group is monitored and is typically granted access to the dashboard application.\nDuring normal access, the auditors' Google group is only granted access to view the historic logs stored in BigQuery. If any anomalies are discovered, the group is granted permission to view the actual Cloud Logging Admin Activity logs via the dashboard's elevated access mode. At the end of each audit period, the group's access is then revoked.\nData is redacted using Sensitive Data Protection before being made accessible for viewing via the dashboard application.\nThe table below explains IAM logging roles that an Organization Administrator can grant to the service account used by the dashboard, as well as the resource level at which the role is granted.\n| Role    | Resource   | Principal     | Description                               |\n|:--------------------|:-----------------|:--------------------------|:-------------------------------------------------------------------------------------------------------------------------------------|\n| logging.viewer  | Organization  | Dashboard service account | The logging.viewer role permits the service account to read the Admin Activity logs in Cloud Logging.        |\n| bigquery.dataViewer | BigQuery dataset | Dashboard service account | The bigquery.dataViewer role permits the service account used by the dashboard application to read the exported Admin Activity logs. |\nThe allow policy bound to the Organization resource for this scenario will look similar to the following:\n```\n{\u00a0 \"bindings\": [{\u00a0 \u00a0 \"role\": \"roles/logging.viewer\",\u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \"serviceAccount:prod-project-dashboard@admin-resources.iam.gserviceaccount.com\"\u00a0 \u00a0 ]\u00a0 }]}\n```\nThe allow policy bound at the BigQuery dataset that is configured as the destination sink for this scenario will look similar to the following:\n```\n{\u00a0 \"bindings\": [{\u00a0 \u00a0 \"role\": \"roles/bigquery.dataViewer\",\u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \"serviceAccount:prod-project-dashboard@admin-resources.iam.gserviceaccount.com\"\u00a0 \u00a0 ]\u00a0 }]}\n```", "guide": "IAM"}