{"title": "IAM - Attach service accounts to resources", "url": "https://cloud.google.com/iam/docs/attach-service-accounts", "abstract": "# IAM - Attach service accounts to resources\nFor some Google Cloud resources, you can specify a user-managed service account that the resource uses as its default identity. This process is known as the service account to the resource, or the service account with the resource.\nWhen the resource needs to access other Google Cloud services and resources, it uses its attached service account as its identity. For example, if you [attach a service account to a Compute Engineinstance](/compute/docs/access/service-accounts#associating_a_service_account_to_an_instance) , and the applications on the instance use a [client library](/apis/docs/client-libraries-explained) to call Google Cloud APIs, those applications automatically authenticate as the attached service account.\nThis page describes how to configure service accounts so that you can attach them to resources.\n", "content": "## Before you begin\n- Enable the IAM and Resource Manager APIs. [Enable the APIs](https://console.cloud.google.com/flows/enableapi?apiid=iam.googleapis.com,cloudresourcemanager.googleapis.com&redirect=https://console.cloud.google.com) \n- Make sure you understand [how service accounts work](/iam/docs/service-accounts) in IAM.## Attach a service account to a resource\nIn most cases, you must attach a service account to a resource when you create that resource. After the resource is created, you cannot change which service account is attached to the resource. Compute Engine instances are an exception to this rule; you can [change which service account is attached to an instance](/compute/docs/access/create-enable-service-accounts-for-instances#changeserviceaccountandscopes) as needed.\nBefore you attach a service account to a resource, you must configure the service account. This process differs depending on whether the service account and the resource are in the same project or in different projects. After you configure the service account, you can create the resource and attach the service account to that resource.\n### Configure for a resource in the same project\nBefore you attach a service account to another resource in the same project, [grant roles](/iam/docs/granting-changing-revoking-access) to the service account so it can access the appropriate resources, just as you would grant roles to any other principal.\n### Configure for a resource in a different project\nIn some cases, you might need to attach a service account to a resource that is located in a different project. For example, if you [create all of your service accounts in a single project](/iam/docs/service-account-overview#locations) , you might need to attach one of them to a new resource in a different project.\nBefore you attach a service account to a resource in another project, do the following:\n- In the project where the service account is located, follow the steps on this page to [enable service accounts to be attached across projects](#enabling-cross-project) .\n- Identify the project where you will create the resource.\n- Identify the type of resource that you will attach the service account to, as well as the service that owns that type of resource.For example, if you are creating a Pub/Sub subscription, then Pub/Sub is the service that owns the resource.\n- Find the email address of the service agent for the service.Different services use different service agents. For details, see [Service agents](/iam/docs/service-agents) . **Note:** Some services, including Dataflow, Dataproc, and Google Kubernetes Engine, can create Compute Engine instances or depend on Compute Engine in another way. For these services, you must find the email addresses for multiple service agents: one for Compute Engine, and another for the service that deploys the instances.\n- Grant the Service Account Token Creator role ( `roles/iam.serviceAccountTokenCreator` ) to the service agents:- In the Google Cloud console, go to the **Service accounts** page. [Go to Service accounts](https://console.cloud.google.com/projectselector/iam-admin/serviceaccounts) \n- Select the project that owns the service account that you will attach to a resource.\n- Click the email address of the service account that you will attach to a resource.\n- Go to the **Permissions** tab and find the section **Principals with accessto this service account** .\n- Click person_add **Grant access** , and then enter the email address of the service agent.\n- Click **Select a role** , type `Service Account Token Creator` , and click the role.\n- Click **Save** to save your changes.\n- Optional: If you need to grant the role to another service agent, repeat the previous steps.\nUse the [gcloud iam service-accounts add-iam-policy-binding](/sdk/gcloud/reference/iam/service-accounts/add-iam-policy-binding) command:\n```\ngcloud iam service-accounts add-iam-policy-binding \\\u00a0 \u00a0 SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com \\\u00a0 \u00a0 --member=serviceAccount:SERVICE_AGENT_EMAIL \\\u00a0 \u00a0 --role=roles/iam.serviceAccountTokenCreator\n```\nReplace the following values:- ``: The name of the user-managed service account that you are attaching to a resource.\n- ``: The project ID where the user-managed service account is located.\n- ``: The email address for the service agent.\nThe command prints the updated allow policy for the user-managed service account.\nOptional: If you need to grant the role to another service agent, run the command again.To grant this role, use the read-modify-write pattern to update the allow policy for your user-managed service account.\n **First, read the allow policy for the user-managed service account:** \nThe ` [projects.serviceAccounts.getIamPolicy](/iam/docs/reference/rest/v1/projects.serviceAccounts/getIamPolicy) ` method returns the allow policy for the service account.\nBefore using any of the request data, make the following replacements:- ``: Your Google Cloud project ID. Project IDs are alphanumeric strings, like`my-project`.\n- ``: The name of the user-managed service account that you are  binding to a resource.\nHTTP method and URL:\n```\nPOST https://iam.googleapis.com/v1/projects/PROJECT_ID/serviceAccounts/USER_SA_NAME@PROJECT_ID.iam.gserviceaccount.com:getIamPolicy\n```\nRequest JSON body:\n```\n{\n \"requestedPolicyVersion\": 3\n}\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:\n```\n{\n \"version\": 1,\n \"etag\": \"BwWl3KCTUMY=\",\n \"bindings\": [ {\n  \"role\": \"roles/iam.serviceAccountUser\",\n  \"members\": [  \"serviceAccount:my-service-account@my-project.iam.gserviceaccount.com\"\n  ]\n }\n ]\n}\n```\n **Next, modify the allow policy to grant the Service Account Token Creator roleto the service agent.** \n```\n{\u00a0 \"version\": 1,\u00a0 \"etag\": \"BwWl3KCTUMY=\",\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.serviceAccountTokenCreator\",\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"serviceAccount:SERVICE_AGENT_EMAIL\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.serviceAccountUser\",\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"serviceAccount:SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 }\u00a0 ]}\n```\nReplace the following:- ``: The email address for the service agent\n- ``: The name of the user-managed service account.\n- ``: The project ID where the user-managed service account is located.\n **Note:** If you need to grant the role to more than one service agent, add all of the service accounts to the `members` array.\n **Finally, write the updated allow policy:** \nThe ` [projects.serviceAccounts.setIamPolicy](/iam/docs/reference/rest/v1/projects.serviceAccounts/setIamPolicy) ` method updates the allow policy for your service account.\nBefore using any of the request data, make the following replacements:- ``: Your Google Cloud project ID. Project IDs are alphanumeric strings, like`my-project`.\n- ``: The name of the user-managed service account  that you are binding to a resource.\n- ``: The email address of the service agent that will  create access tokens for your user-managed service account.\nHTTP method and URL:\n```\nPOST https://iam.googleapis.com/v1/projects/PROJECT_ID/serviceAccounts/SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com:setIamPolicy\n```\nRequest JSON body:\n```\n{\n \"policy\": {\n \"version\": 1,\n \"etag\": \"BwWl3KCTUMY=\",\n \"bindings\": [  {\n  \"role\": \"roles/iam.serviceAccountTokenCreator\",\n  \"members\": [   \"serviceAccount:SERVICE_AGENT_EMAIL\"\n  ]\n  },\n  {\n  \"role\": \"roles/iam.serviceAccountUser\",\n  \"members\": [   \"serviceAccount:SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com\"\n  ]\n  }\n ]\n }\n}\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:\n```\n{\n \"version\": 1,\n \"etag\": \"BwWo331TkHE=\",\n \"bindings\": [ {\n  \"role\": \"roles/iam.serviceAccountTokenCreator\",\n  \"members\": [  \"serviceAccount:SERVICE_AGENT_EMAIL\"\n  ]\n },\n {\n  \"role\": \"roles/iam.serviceAccountUser\",\n  \"members\": [  \"serviceAccount:my-service-account@my-project.iam.gserviceaccount.com\"\n  ]\n }\n ]\n}\n```\n### Attach the service account to the new resource\nAfter you configure the user-managed service account, you can create a new resource and attach the service account to that resource. Make sure you create the new resource in the appropriate project.\nSee the instructions for the type of resource that you want to create:\n| Attaching a service account when creating a resource | Attaching a service account when creating a resource.1     |\n|:-------------------------------------------------------|:--------------------------------------------------------------------------|\n| AI Platform Prediction         | Model versions               |\n| AI Platform Training         | Jobs                  |\n| App Engine standard environment      | App versions                |\n| App Engine flexible environment      | App versions                |\n| Cloud Composer           | Environments                |\n| Cloud Functions          | Cloud Function               |\n| Cloud Life Sciences         | Pipelines                 |\n| Cloud Run            | Services                 |\n| Cloud Scheduler          | Jobs                  |\n| Cloud Source Repositories        | Project configs Pub/Sub configuration for repos      |\n| Compute Engine           | Instances Instance templates            |\n| Dataflow            | Jobs                  |\n| Datalab            | Instances                 |\n| Dataproc            | Clusters                 |\n| Eventarc            | Triggers                 |\n| Google Kubernetes Engine        | Clusters Node pools              |\n| Notebooks            | Notebook instances              |\n| Pub/Sub            | Subscriptions                |\n| Vertex AI            | Custom jobs Deployed models Hyperparameter tuning jobs Training pipelines |\n| Workflows            | Workflows                 |\nAfter you have created the resource and attached the service account to that resource, you can grant roles to the service account so it can access the appropriate resources. This process is the same as granting a role to any other principal.\nTo learn how to grant roles, see [Granting, changing, and revoking access to resources](/iam/docs/granting-changing-revoking-access) .\n## Attach a service account to a resource in another project\nBy default, you cannot create a service account in one project and attach it to a resource in another project. If you want to keep all of your service accounts in one project, you must update the [organization policy](/resource-manager/docs/organization-policy/overview) for that project.\n**Important:** After you update the organization policy, we strongly discourage you from undoing the changes, especially in production environments. If you undo the changes, your Google Cloud resources might not work correctly.\n### Enable service accounts to be attached across projects\nTo let users attach service accounts in one project to resources in another project, check the following [boolean constraints](/resource-manager/docs/organization-policy/understanding-constraints#boolean_constraint) in the organization policy for the project where your service accounts are located:\n- Ensure that the `iam.disableCrossProjectServiceAccountUsage` boolean constraint for the project.This boolean constraint controls whether you can attach a service account to a resource in another project. The constraint is enforced by default.When this constraint is not enforced, IAM adds a [project lien](/resource-manager/docs/project-liens) that prevents the project from being deleted. This lien has the origin `iam.googleapis.com/cross-project-service-accounts` . We strongly discourage you from deleting this lien.\n- Recommended: Ensure that the `iam.restrictCrossProjectServiceAccountLienRemoval` boolean constraint for the project.This boolean constraint ensures that principals can remove the project lien only if they have the `resourcemanager.projects.updateLiens` permission at the organization level. If this constraint is not enforced, principals can remove the project lien if they have this permission at the project level.\nTo learn how to view or change a boolean constraint in an organization policy, see [Creating and managing organization policies](/resource-manager/docs/organization-policy/creating-managing-policies) .\n### Disable service accounts from being attached across projects\nIf you previously [enabled service accounts to be attached acrossprojects](#attaching-different-project) , we strongly discourage you from disabling this feature, especially in production environments.\n**Caution:** If you disable service account from being attached across projects, your Google Cloud resources might not work correctly.\nSpecifically, in the project where your service accounts are located, you should not make any of these changes:\n- Do not update the project's organization policy tothe`iam.disableCrossProjectServiceAccountUsage`boolean constraint.\n- Do not update the project's organization policy tothe`iam.restrictCrossProjectServiceAccountLienRemoval`boolean constraint.\n- Do not remove the [project lien](/resource-manager/docs/project-liens) with the origin`iam.googleapis.com/cross-project-service-accounts`, which prevents you from deleting the project.\n- Do not delete the project.\nIf you are willing to accept the risk of disabling this feature, you can reduce your risk by [disabling the service accounts](/iam/docs/service-accounts-disable-enable#disabling) that you are using across projects, then monitoring your Google Cloud environment for issues. If you see any issues, you can [re-enable the service accounts](/iam/docs/service-accounts-disable-enable#enabling) . If you do not see any issues, then you might not have any Google Cloud resources that depend on a service account in a different project.\n## What's next\n- Find out how to [attach a service account to a Compute Engineinstance](/compute/docs/access/service-accounts#associating_a_service_account_to_an_instance) .\n- Review and apply [best practices for securing service accounts](/iam/docs/best-practices-service-accounts) .\n- Learn more about [audit logging for IAM](/iam/docs/audit-logging) .", "guide": "IAM"}