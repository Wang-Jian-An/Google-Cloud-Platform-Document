{"title": "IAM - Example logs for service accounts", "url": "https://cloud.google.com/iam/docs/audit-logging/examples-service-accounts", "abstract": "# IAM - Example logs for service accounts\nThis page shows examples of the audit logs that are generated when you manage or use a service account.\n**Note:** Each example shows only the most relevant fields in the log entries.\nFor more information about enabling and viewing audit logs, see [IAM audit logging](/iam/docs/audit-logging) .\n", "content": "## Logs for creating service accounts\nWhen you create or modify a service account, Identity and Access Management (IAM) generates log entries. The following example shows a log entry for creating a service account:\n```\n{\u00a0 \"protoPayload\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.audit.AuditLog\",\u00a0 \u00a0 \"authenticationInfo\": {\u00a0 \u00a0 \u00a0 \"principalEmail\": \"hao@example.com\"\u00a0 \u00a0 },\u00a0 \u00a0 \"methodName\": \"google.iam.admin.v1.CreateServiceAccount\",\u00a0 \u00a0 \"response\": {\u00a0 \u00a0 \u00a0 \"email\": \"my-service-account@my-project.iam.gserviceaccount.com\",\u00a0 \u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.iam.admin.v1.ServiceAccount\",\u00a0 \u00a0 \u00a0 \"display_name\": \"My service account.\"\u00a0 \u00a0 }\u00a0 },\u00a0 \"resource\": {\u00a0 \u00a0 \"type\": \"service_account\"\u00a0 }}\n```\n## Logs for granting roles\nThis section shows the log entries you receive when you grant roles that are related to service accounts.\n**Note:** You might see log entries in which the service account `service-agent-manager@system.gserviceaccount.com` grants roles to other Google-managed service accounts. This behavior is normal and expected. For details, see [Google-managed service accounts](/iam/docs/service-account-types#google-managed) .\n### Logs for granting the Service Account User role\nA principal can gain the same permissions as a service account by the service account. To allow a principal to impersonate a service account, you can [grant the Service Account User role](/iam/docs/service-account-permissions#user-role) ( `roles/iam.serviceAccountUser` ) to the principal for the service account.\nThe following example shows a log entry for granting the Service Account User role to a principal:\n```\n{\u00a0 \"logName\": \"projects/my-project/logs/cloudaudit.googleapis.com%2Factivity\",\u00a0 \"protoPayload\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.audit.AuditLog\",\u00a0 \u00a0 \"methodName\": \"google.iam.admin.v1.SetIAMPolicy\",\u00a0 \u00a0 \"request\": {\u00a0 \u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.iam.v1.SetIamPolicyRequest\",\u00a0 \u00a0 \u00a0 \"resource\": \"projects/-/serviceAccounts/my-service-account@my-project.iam.gserviceaccount.com\"\u00a0 \u00a0 },\u00a0 \u00a0 \"resourceName\": \"projects/-/serviceAccounts/123456789012345678901\",\u00a0 \u00a0 \"response\": {\u00a0 \u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.iam.v1.Policy\",\u00a0 \u00a0 \u00a0 \"bindings\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"user:srini@example.com\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.serviceAccountUser\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 }\u00a0 },\u00a0 \"resource\": {\u00a0 \u00a0 \"type\": \"service_account\"\u00a0 }}\n```\nWhen you [grant the Service Account Token Creator role](/iam/docs/service-account-permissions#token-creator-role) ( `roles/iam.serviceAccountTokenCreator` ), which allows a principal to create short-lived credentials, IAM generates a similar log entry.\n### Logs for granting access to a service account on a resource\nYou can [grant a role to a service account on a specific resource](/iam/docs/granting-changing-revoking-access) , which allows the service account to access the resource. If the service that owns the resource also supports audit logging, then granting a role to the service account generates an audit log entry. The log entry includes the field `protoPayload.authenticationInfo.principalEmail` , which identifies the principal that granted the role to the service account.\nThe following example shows an audit log entry for granting a role to a service account for a project. In this example, `julia@example.com` granted the Organization Viewer role ( `roles/resourcemanager.organizationViewer` ) to the service account. The `protoPayload.serviceName` field is set to `cloudresourcemanager.googleapis.com` , because Resource Manager is the Google Cloud service that manages projects. Also, the `resource.type` field is set to `project` :\n```\n{\u00a0 \"logName\": \"projects/my-project/logs/cloudaudit.googleapis.com%2Factivity\",\u00a0 \"protoPayload\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.audit.AuditLog\",\u00a0 \u00a0 \"authenticationInfo\": {\u00a0 \u00a0 \u00a0 \"principalEmail\": \"julia@example.com\"\u00a0 \u00a0 },\u00a0 \u00a0 \"methodName\": \"SetIamPolicy\",\u00a0 \u00a0 \"request\": {\u00a0 \u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.iam.v1.SetIamPolicyRequest\",\u00a0 \u00a0 \u00a0 \"resource\": \"my-project\"\u00a0 \u00a0 },\u00a0 \u00a0 \"resourceName\": \"projects/my-project\",\u00a0 \u00a0 \"response\": {\u00a0 \u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.iam.v1.Policy\",\u00a0 \u00a0 \u00a0 \"bindings\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"serviceAccount:my-service-account@my-project.iam.gserviceaccount.com\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"role\": \"roles/resourcemanager.organizationViewer\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 },\u00a0 \u00a0 \"serviceName\": \"cloudresourcemanager.googleapis.com\"\u00a0 },\u00a0 \"resource\": {\u00a0 \u00a0 \"type\": \"project\"\u00a0 }}\n```\n## Logs for setting up a Compute Engine instance to run as a service account\nIf a user has the Service Account User role ( `roles/iam.serviceAccountUser` ) on a service account, the user can [create a Compute Engine virtual machine (VM) instance](/compute/docs/access/create-enable-service-accounts-for-instances#using) that runs as that service account. In this scenario, the user creates the VM instance with their own credentials, and the request specifies a service account for the VM instance to use.\nWhen a user creates a VM instance, Compute Engine creates multiple log entries. The following example shows the first log entry, which identifies the user who created the VM instance and the service account that the instance uses. In this example, the user `jackie@example.com` created an instance that uses the service account `my-service-account@my-project.iam.gserviceaccount.com` . As a result, the `protoPayload.authenticationInfo.principalEmail` field is set to `jackie@example.com` , and the `protoPayload.request.serviceAccounts[0].email` field is set to `my-service-account@my-project.iam.gserviceaccount.com` :\n```\n{\u00a0 \"logName\": \"projects/my-project/logs/cloudaudit.googleapis.com%2Factivity\",\u00a0 \"protoPayload\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.audit.AuditLog\",\u00a0 \u00a0 \"authenticationInfo\": {\u00a0 \u00a0 \u00a0 \"principalEmail\": \"jackie@example.com\"\u00a0 \u00a0 },\u00a0 \u00a0 \"methodName\": \"v1.compute.instances.insert\",\u00a0 \u00a0 \"request\": {\u00a0 \u00a0 \u00a0 \"@type\": \"type.googleapis.com/compute.instances.insert\",\u00a0 \u00a0 \u00a0 \"serviceAccounts\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"email\": \"my-service-account@my-project.iam.gserviceaccount.com\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 },\u00a0 \u00a0 \"resourceName\": \"projects/my-project/zones/us-central1-a/instances/my-instance\"\u00a0 },\u00a0 \"resource\": {\u00a0 \u00a0 \"type\": \"gce_instance\"\u00a0 }}\n```\n## Logs for accessing Google Cloud with a service account key\nThis section shows the log entries you receive when you create a service account key, then use the key to access Google Cloud.\n### Logs for creating a service account key\nIf you have the Service Account Key Admin role ( `roles/iam.serviceAccountKeyAdmin` ) on a service account, you can create a service account key, then use the key to [authenticate requests to Google Cloud services](/docs/authentication/provide-credentials-adc#wlif-key) .\nThe following example shows a log entry for creating a service account key. In this example, the user `sam@example.com` created a key for the service account `my-service-account@my-project.iam.gserviceaccount.com` :\n```\n{\u00a0 \"logName\": \"projects/my-project/logs/cloudaudit.googleapis.com%2Factivity\",\u00a0 \"protoPayload\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.audit.AuditLog\",\u00a0 \u00a0 \"authenticationInfo\": {\u00a0 \u00a0 \u00a0 \"principalEmail\": \"sam@example.com\",\u00a0 \u00a0 },\u00a0 \u00a0 \"methodName\": \"google.iam.admin.v1.CreateServiceAccountKey\",\u00a0 \u00a0 \"request\": {\u00a0 \u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.iam.admin.v1.CreateServiceAccountKeyRequest\",\u00a0 \u00a0 \u00a0 \"name\": \"projects/-/serviceAccounts/my-service-account@my-project.iam.gserviceaccount.com\"\u00a0 \u00a0 },\u00a0 \u00a0 \"resourceName\": \"projects/-/serviceAccounts/123456789012345678901\"\u00a0 },\u00a0 \"resource\": {\u00a0 \u00a0 \"type\": \"service_account\"\u00a0 }}\n```\n### Logs for authenticating with a service account key\nAfter you create a service account key, you can use the key to [request an OAuth 2.0 access token for a service account](https://developers.google.com/identity/protocols/oauth2/service-account#authorizingrequests) , then use the access token to authenticate requests to Google Cloud services. In general, the audit logs for those services include the following information:\n- `protoPayload.authenticationInfo.principalEmail`: The email address of the service account that the access token represents.\n- `protoPayload.authenticationInfo.serviceAccountKeyName`: The service account key that was used to request the OAuth 2.0 access token. This field identifies the service account key by its [full resource name](/iam/docs/full-resource-names) , which uses the format`//iam.googleapis.com/projects/` `` `/serviceAccounts/` `` `/` `` `keys/` ``.\n**Note:** Some Google Cloud services, including App Engine and Compute Engine, do not log the service account key name.\nThe following example shows an audit log entry for a request to create a Memorystore for Redis instance. The request was authenticated with an OAuth 2.0 access token for a service account. In this example, the service account is named `my-service-account@my-project.iam.gserviceaccount.com` , and the service account key ID is `c71e040fb4b71d798ce4baca14e15ab62115aaef` :\n```\n{\u00a0 \"logName\": \"projects/my-project/logs/cloudaudit.googleapis.com%2Factivity\",\u00a0 \"protoPayload\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.audit.AuditLog\",\u00a0 \u00a0 \"authenticationInfo\": {\u00a0 \u00a0 \u00a0 \"principalEmail\": \"my-service-account@my-project.iam.gserviceaccount.com\",\u00a0 \u00a0 \u00a0 \"serviceAccountKeyName\": \"//iam.googleapis.com/projects/my-project/serviceAccounts/my-service-account@my-project.iam.gserviceaccount.com/keys/c71e040fb4b71d798ce4baca14e15ab62115aaef\"\u00a0 \u00a0 },\u00a0 \u00a0 \"methodName\": \"google.cloud.redis.v1.CloudRedis.CreateInstance\",\u00a0 \u00a0 \"request\": {\u00a0 \u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.redis.v1.CreateInstanceRequest\"\u00a0 \u00a0 }\u00a0 }}\n```\n## Logs for impersonating a service account to access Google Cloud\nThis section shows the log entries you receive when you create short-lived credentials for a service account, then use the credentials to impersonate the service account and access Google Cloud.\n### Logs for creating short-lived credentials\nIf you have the Service Account Token Creator role ( `roles/iam.serviceAccountTokenCreator` ) for a service account, you can [create short-lived credentials](/iam/docs/creating-short-lived-service-account-credentials) for the service account, then use the credentials to impersonate the service account. For example, you might create short-lived credentials to call a Google Cloud API from an application that does not run on Google Cloud.\nIAM can generate audit logs when principals create short-lived credentials. To receive these audit logs, you must [enable IAM audit logs for Data Access activity](/iam/docs/audit-logging#enabling_audit_logging) .\nAfter you enable IAM audit logs for Data Access activity, IAM generates an audit log entry each time a principal creates short-lived credentials. The entry includes the following fields:\n- `protoPayload.authenticationInfo.principalEmail`: The principal that created the short-lived credentials.\n- `resource.labels.email_id`: The service account for which short-lived credentials were generated.\nThe following example shows an audit log entry for a request to generate a short-lived OAuth 2.0 access token. In this example, the user `amara@example.com` created an access token for the service account `my-service-account@my-project.iam.gserviceaccount.com` :\n```\n{\u00a0 \"logName\": \"projects/my-project/logs/cloudaudit.googleapis.com%2Fdata_access\",\u00a0 \"protoPayload\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.audit.AuditLog\",\u00a0 \u00a0 \"authenticationInfo\": {\u00a0 \u00a0 \u00a0 \"principalEmail\": \"amara@example.com\"\u00a0 \u00a0 },\u00a0 \u00a0 \"methodName\": \"GenerateAccessToken\",\u00a0 \u00a0 \"request\": {\u00a0 \u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.iam.credentials.v1.GenerateAccessTokenRequest\",\u00a0 \u00a0 \u00a0 \"name\": \"projects/-/serviceAccounts/my-service-account@my-project.iam.gserviceaccount.com\"\u00a0 \u00a0 },\u00a0 \u00a0 \"serviceName\": \"iamcredentials.googleapis.com\"\u00a0 },\u00a0 \"resource\": {\u00a0 \u00a0 \"labels\": {\u00a0 \u00a0 \u00a0 \"email_id\": \"my-service-account@my-project.iam.gserviceaccount.com\",\u00a0 \u00a0 \u00a0 \"project_id\": \"my-project\",\u00a0 \u00a0 \u00a0 \"unique_id\": \"123456789012345678901\"\u00a0 \u00a0 },\u00a0 \u00a0 \"type\": \"service_account\"\u00a0 }}\n```\n### Logs for authenticating with short-lived credentials\nAfter you create short-lived credentials for a service account, you can use the credentials to impersonate the service account when you call Google Cloud APIs.\nSome of the methods you call might generate audit logs. In general, these log entries show the following identities:- The service account that the short-lived credentials are impersonating\n- The identity that created the short-lived credentials\n**Note:** Some Google Cloud services, including App Engine and Google Kubernetes Engine, do not log the identity that created the short-lived credentials.\nFor example, suppose that the user `yoon@example.com` creates short-lived credentials for the service account `my-service-account@my-project.iam.gserviceaccount.com` . The user then creates a new Pub/Sub topic, using the short-lived credentials to impersonate the service account. Pub/Sub generates a log entry that identifies the service account, as well as the user who is impersonating the service account:\n```\n{\u00a0 \"logName\": \"projects/my-project/logs/cloudaudit.googleapis.com%2Factivity\",\u00a0 \"protoPayload\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.audit.AuditLog\",\u00a0 \u00a0 \"authenticationInfo\": {\u00a0 \u00a0 \u00a0 \"principalEmail\": \"my-service-account@my-project.iam.gserviceaccount.com\",\u00a0 \u00a0 \u00a0 \"serviceAccountDelegationInfo\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"firstPartyPrincipal\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"principalEmail\": \"yoon@example.com\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 },\u00a0 \u00a0 \"methodName\": \"google.pubsub.v1.Publisher.CreateTopic\",\u00a0 \u00a0 \"request\": {\u00a0 \u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.pubsub.v1.Topic\",\u00a0 \u00a0 \u00a0 \"name\": \"projects/my-project/topics/my-topic\"\u00a0 \u00a0 },\u00a0 \u00a0 \"resourceName\": \"projects/my-project/topics/my-topic\"\u00a0 },\u00a0 \"resource\": {\u00a0 \u00a0 \"type\": \"pubsub_topic\"\u00a0 }}\n```\n## What's next\n- [Configure and view the audit logs](/iam/docs/audit-logging) for IAM.\n- Get more information about [Cloud Audit Logs](/logging/docs/audit) .\n- Learn about [service accounts](/iam/docs/service-accounts) .\n- [Create and manage service accounts](/iam/docs/creating-managing-service-accounts) .\n- [Create short-lived credentials](/iam/docs/creating-short-lived-service-account-credentials) for impersonating service accounts.", "guide": "IAM"}