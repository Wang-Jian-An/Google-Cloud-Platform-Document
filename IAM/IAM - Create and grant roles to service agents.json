{"title": "IAM - Create and grant roles to service agents", "url": "https://cloud.google.com/iam/docs/create-service-agents", "abstract": "# IAM - Create and grant roles to service agents\n**    Preview    \u2014 triggering service agent creation ** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nIn Google Cloud, project-level, folder-level, and organization-level [serviceagents](/iam/docs/service-account-types#service-agents) are created automatically as you enable and use Google Cloud services. Sometimes, these service agents are also automatically granted roles that allow them to create and access resources on your behalf.\nIf necessary, you can also ask Google Cloud to create project-level, folder-level, and organization-level service agents for a service before you use the service. Asking Google Cloud to create service agents lets you grant roles to service agents before you use a service. If a service agent hasn't been created yet, then you can't grant roles to the service agent.\nThis option is useful if you use one of the following strategies to manage your allow policies:\n- **A declarative framework like Terraform.** If your Terraform configuration doesn't include the service agents' roles, then those roles are revoked when you apply your configuration. By creating service agents and granting them roles in your Terraform configuration, you ensure that these roles aren't revoked.\n- **A policies-as-code-system** that stores copies of your current allow policies in a code repository. If you let Google Cloud grant roles to service agents automatically, those roles appear in your actual allow policy, but not in your stored copy of the allow policy. To resolve this inconsistency, you might incorrectly revoke these roles. By creating service agents and granting them roles proactively, you can help prevent drift between your code repository and your actual allow policies.\nAfter you trigger service agent creation, you must grant the service agents the roles that they are typically granted automatically. If you don't, some services might not function properly. This is because service agents that are created at a user's request aren't automatically granted roles.\n**Note:** To create and grant roles to service agents for service-specific resources, refer to the service's documentation.\n", "content": "## Before you begin\n- Enable the Resource Manager API. [Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=cloudresourcemanager.googleapis.com) \n- Understand [service agents](/iam/docs/service-account-types#service-agents) .\n### Required roles\nTriggering service agent creation doesn't require any IAM permissions. However, you need specific IAM permissions for other tasks on this page:\n- To get the permission that you need to list available services and their endpoints,   ask your administrator to grant you the [Service Usage Viewer ](https://cloud.google.com/iam/docs/understanding-roles#serviceusage.serviceUsageViewer) ( `roles/serviceusage.serviceUsageViewer` ) IAM role on the project, folder, or organization that you want to list available services for.    For more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .This predefined role contains the `serviceusage.services.list` permission, which is   required to list available services and their endpoints.You might also be able to get   this permission  with [custom roles](/iam/docs/creating-custom-roles) or  other [predefined roles](/iam/docs/understanding-roles) .\n- To get the permissions that you need to grant the service agents access,   ask your administrator to grant you the  following IAM roles on the project, folder, or organization that you're granting access to:- Grant service agents access to a project: [Project IAM Admin ](https://cloud.google.com/iam/docs/understanding-roles#resourcemanager.projectIamAdmin) (`roles/resourcemanager.projectIamAdmin`)\n- Grant service agents access to a folder: [Folder Admin ](https://cloud.google.com/iam/docs/understanding-roles#resourcemanager.folderAdmin) (`roles/resourcemanager.folderAdmin`)\n- Grant service agents access to projects, folders, and organizations: [Organization Admin ](https://cloud.google.com/iam/docs/understanding-roles#resourcemanager.organizationAdmin) (`roles/resourcemanager.organizationAdmin`)\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .These predefined roles contain     the permissions required to grant the service agents access. To see the exact permissions that are   required, expand the **Required permissions** section:You might also be able to get   these permissions  with [custom roles](/iam/docs/creating-custom-roles) or  other [predefined roles](/iam/docs/understanding-roles) .## Identify service agents to create\nTo identify the project-level, folder-level, and organization-level service agents that you need to ask Google Cloud to create, do the following:\n- Make a list of the services that you use and their API endpoints. To view all available services and their endpoints, use one of the following methods:\nGo to the **API Library** page in the Google Cloud console.\n [Go to API Library](https://console.cloud.google.com/apis/library) \nThe API endpoint is the **Service name** listed in the **Additional details** section.\nThe ` [gcloud services list](/sdk/gcloud/reference/services/list) ` command lists all available services for a project.\nBefore using any of the command data below, make the following replacements:- `` : Optional. An expression to filter  the results. For example, the following expression filters for all services  whose names contain `googleapis.com` but don't contain `sandbox` :```\nname ~ googleapis.com AND name !~ sandbox\n```For a list of filter expressions, see [gcloud topic  filters](/sdk/gcloud/reference/topic/filters) .\n- `` : Optional. The maximum number of results to list. The  default is `unlimited` .\nExecute the  following  command:\nThe response contains the names and titles of all available services. The API endpoint is the value in the `NAME` field.\nThe Service Usage API's ` [services.list](/service-usage/docs/reference/rest/v1/services/list) ` method lists all available services for a project.\nBefore using any of the request data, make the following replacements:- ``: The type of resource that you want to  list available services for. Use`projects`,`folders`,  or`organizations`.\n- ``: The ID of the Google Cloud  project, folder, or organization that you want to list available services  for. Project IDs are alphanumeric strings, like`my-project`.  Folder and organization IDs are numeric, like`123456789012`.\n- ``: Optional. The number of services to include in the  response. The default value is 50, and the maximum value is 200. If the number of services  is greater than the page size, the response contains a pagination token that you can use to  retrieve the next page of results.\n- ``: Optional. The pagination token returned in an earlier  response from this method. If specified, the list of services will start where the previous  request ended.\nHTTP method and URL:\n```\nGET https://serviceusage.googleapis.com/v1/RESOURCE_TYPE/RESOURCE_ID/services?pageSize=PAGE_SIZE&pageToken=NEXT_PAGE_TOKEN\n```\nTo send your request, expand one of these options:\nThe response contains the names and titles of all available services for the resource. If the number of available services is greater than the page size, the response also contains a pagination token.\nThe API endpoint is the value in the `name` field.- On the [service agent reference](/iam/docs/service-agents) page, search for each API endpoint.If the endpoint is listed in the table, find all service agents for that endpoint. Ignore any service agents whose email address contains the `` placeholder\u2014those service agents are for service-specific resources, not projects, folders, or organizations.For each project-level, folder-level, and organization-level service agent, record the following:- The format of the service agent's email address.\n- The role that the service agent is granted, if any.\n## Trigger service agent creation\nAfter you know which service agents you need to create, you can ask Google Cloud to create them.\nWhen you ask Google Cloud to create service agents, you provide it with a service and a resource. Then, Google Cloud creates all service agents for that service and that resource.\nFor each service that you need to create service agents for, do the following:- Review the service agent email addresses for the service. Use the placeholders in the email addresses to determine which resources you need to create service agents for:| Placeholder   | Where to create service agents     |\n|:--------------------|:-------------------------------------------------|\n| PROJECT_NUMBER  | Each project where you will use the service  |\n| FOLDER_NUMBER  | Each folder where you will use the service  |\n| ORGANIZATION_NUMBER | Each organization where you will use the service |\n- Create service agents for each resource.The ` [gcloud beta services identity create](/sdk/gcloud/reference/beta/services/identity/create) ` command creates all service agents for the specified API and resource.Before using any of the command data below, make the following replacements:- ``: The endpoint of the API that you want to create  a service agent for\u2014for example,`aiplatform.googleapis.com`.\n- ``: The type of resource that you want  to create a service agent for. Use`project`,`folder`, or`organization`.\n- `` : The ID of the Google Cloud  project, folder, or organization that you want to create a service agent  for. Project IDs are alphanumeric strings, like `my-project` .  Folder and organization IDs are numeric, like `123456789012` .You can create service agents for one resource at a time. If you need to create  service agents for multiple resources, run the command once for each  resource.\nExecute the  following  command:The response contains the email address of the service's primary service agent. This email address includes the numeric ID of the project, folder, or organization that you created service agents for.If the service doesn't have a primary service agent, the response doesn't contain an email address.The following is an example of a response for a service that has a primary service agent.\n```\nService identity created: service-232332569935@gcp-sa-aiplatform.iam.gserviceaccount.com\n```- Optional: Record the service agent email address in the response, if any. This email address identifies the service's [primary serviceagent](/iam/docs/service-account-types#primary) . You can use this identifier to grant roles to the primary service agent.\nTo learn how to apply or remove a Terraform configuration, see [Basic Terraform commands](/docs/terraform/basic-commands) .    For more information, see the [Terraform provider reference documentation](https://registry.terraform.io/providers/hashicorp/google/latest/docs) .\nFor each service that you need to create service agents for, do the following:- Review the service agent email addresses for the service. Use the placeholders in the email addresses to determine which resources you need to create service agents for:| Placeholder   | Where to create service agents     |\n|:--------------------|:-------------------------------------------------|\n| PROJECT_NUMBER  | Each project where you will use the service  |\n| FOLDER_NUMBER  | Each folder where you will use the service  |\n| ORGANIZATION_NUMBER | Each organization where you will use the service |\n- Create service agents for each resource. For example, the following code creates all project-level service agents for AI Platform: **Note:** Terraform only supports triggering the creation of project-level service agents. To trigger the creation of folder-level and organization-level service agents, use the Google Cloud CLI or REST API.\n [  iam/create_service_agent/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/HEAD/iam/create_service_agent/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/HEAD/iam/create_service_agent/main.tf) \n```\ndata \"google_project\" \"default\" {\n}\n# Create all project-level aiplatform.googleapis.com service agents\nresource \"google_project_service_identity\" \"default\" {\n provider = google-beta\n project = data.google_project.default.project_id\n service = \"aiplatform.googleapis.com\"\n}\n```For each service that you need to create service agents for, do the following:- Review the service agent email addresses for the service. Use the placeholders in the email addresses to determine which resources you need to create service agents for:| Placeholder   | Where to create service agents     |\n|:--------------------|:-------------------------------------------------|\n| PROJECT_NUMBER  | Each project where you will use the service  |\n| FOLDER_NUMBER  | Each folder where you will use the service  |\n| ORGANIZATION_NUMBER | Each organization where you will use the service |\n- Create service agents for each resource.The Service Usage API's ` [services.generateServiceIdentity](/service-usage/docs/reference/rest/v1beta1/services/generateServiceIdentity) ` method creates all service agents for the specified API and resource.Before using any of the request data, make the following replacements:- ``: The type of resource that you want to  create a service agent for. Use`projects`,`folders`,  or`organizations`.\n- `` : The ID of the Google Cloud  project, folder, or organization that you want to create service agents  for. Project IDs are alphanumeric strings, like `my-project` .  Folder and organization IDs are numeric, like `123456789012` .You can create service agents for one resource at a time. If you need to  create service agents for multiple resources, send one request for each  resource.\n- ``: The endpoint of the API that you want to create  a service agent for\u2014for example,`aiplatform.googleapis.com`.\nHTTP method and URL:\n```\nPOST https://serviceusage.googleapis.com/v1beta1/RESOURCE_TYPE/RESOURCE_ID/services/ENDPOINT:generateServiceIdentity\n```\nTo send your request, expand one of these options:The response contains an [Operation](/service-usage/docs/reference/rest/Shared.Types/ListOperationsResponse#Operation) indicting the status of your request. To check the status of the operation, use the [operations.get](/service-usage/docs/reference/rest/v1/operations/get) method.Finished operations contain the email address of the service's primary service agent. This email address includes the numeric ID of the project, folder, or organization that you created service agents for.If the service doesn't have a primary service agent, the response doesn't contain an email address.The following is an example of a finished operation for a service that has a primary service agent.\n```\n{\n \"name\": \"operations/finished.DONE_OPERATION\",\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.api.serviceusage.v1beta1.ServiceIdentity\",\n \"email\": \"service-232332569935@gcp-sa-aiplatform.iam.gserviceaccount.com\",\n \"uniqueId\": \"112245693826560101651\"\n }\n}\n```- Optional: Record the service agent email address in the response, if any. This email address identifies the service's [primary serviceagent](/iam/docs/service-account-types#primary) . You can use this identifier to grant roles to the primary service agent.## Grant roles to service agents\nAfter Google Cloud creates the necessary service agents for your projects, folders, and organizations, you use the service agents' email addresses to grant them roles.\nIf you asked Google Cloud to create service agents, you must grant those service agents the roles that they are typically granted automatically. If you don't, some services might not function properly. This is because service agents that are created at a user's request aren't automatically granted roles.\nTo learn how to identify automatically granted roles, see [Identify serviceagents to create](#identify-agents) .\n### Find the service agent's email address\nTo find a service agent's email address, do the following:\n- If you have not already, find the service agent's email address format. This format is documented in the [service agent reference](/iam/docs/service-agents) .\n- Replace any placeholders in the email address with the corresponding project, folder, or organization number.\nAlternatively, if the service agent is a [primary serviceagent](/iam/docs/service-account-types#primary) , you can get its email address by [triggeringservice agent creation](#create) for the service. The command to trigger service agent creation returns the primary service agent's email address.To learn how to apply or remove a Terraform configuration, see [Basic Terraform commands](/docs/terraform/basic-commands) .    For more information, see the [Terraform provider reference documentation](https://registry.terraform.io/providers/hashicorp/google/latest/docs) .- If you have not already, find the service agent's email address format. This format is documented in the [service agent reference](/iam/docs/service-agents) .\n- Replace any placeholders in the email address with expressions that reference the appropriate project, folder, or organization number.For example, consider the following situation:- The email address format is`service-` `` `@gcp-sa-aiplatform-cc.iam.gserviceaccount.com`\n- The service agent is for a project labeled`default`\nIn this case, the service agent's email address is as follows:```\nservice-${data.google_project.default.number}@gcp-sa-aiplatform-cc.iam.gserviceaccount.com\n```\nAlternatively, if a service agent is the primary service agent for a service, you can get its email address from the `email` attribute of the `google_project_service_identity` resource.\nFor example, if you have a `google_project_service_identity` block labeled `default` , you can get the email address of the service's primary service agent by using the following expression:\n```\n${google_project_service_identity.default.email}\n```\n- If you have not already, find the service agent's email address format. This format is documented in the [service agent reference](/iam/docs/service-agents) .\n- Replace any placeholders in the email address with the corresponding project, folder, or organization number.\nAlternatively, if the service agent is a [primary serviceagent](/iam/docs/service-account-types#primary) , you can get its email address by [triggeringservice agent creation](#create) for the service. The command to trigger service agent creation returns the primary service agent's email address.\n### Grant a role to the service agent\nAfter you find the service agent's email address, you can grant it a role just like you would grant a role to any other principal.\n- In the Google Cloud console, go to the **IAM** page. [Go to IAM](https://console.cloud.google.com/projectselector/iam-admin/iam?supportedpurview=project,folder,organizationId) \n- Select a project, folder, or organization.\n- Click person_add **Grant Access** , then enter the service agent's email address.\n- Select a role to grant from the drop-down list.\n- Optional: Add a [condition](/iam/docs/conditions-overview) to the role.\n- Click **Save** . The service agent is granted the role on the resource.\nThe ` [add-iam-policy-binding](/sdk/gcloud/reference/projects/add-iam-policy-binding) ` command lets you quickly grant a role to a principal.\nBefore using any of the command data below, make the following replacements:- `` : The resource type that you want to  manage access to. Use `projects` , `resource-manager folders` , or `organizations` .\n- `` : Your Google Cloud project, folder,  or organization ID. Project IDs are alphanumeric, like `my-project` .  Folder and organization IDs are numeric, like `123456789012` .\n- `` : An identifier for the principal, or member,  which usually has the following form: `` `:` `` . For example, `user:my-user@example.com` . For a full list of the values that `` can have, see the [Policy Binding reference](/iam/docs/reference/rest/v1/Policy#Binding) .For the principal type `user` , the domain name in the identifier must be  a Google Workspace domain or a Cloud Identity domain. To learn how to set  up a Cloud Identity domain, see the [overview of Cloud Identity](/identity/docs/overview) .\n- `` : The name of the role that you want  to revoke. Use one of the following formats:- Predefined roles:`roles/` `` `.` ``\n- Project-level custom roles:`projects/` `` `/roles/` ``\n- Organization-level custom roles:`organizations/` `` `/roles/` ``\nFor a list of predefined roles, see [Understanding roles](/iam/docs/understanding-roles) .\n- `` : The condition to add to the role  binding. If you don't want to add a condition, use the value `None` . For  more information about conditions, see the [conditions overview](/iam/docs/conditions-overview) .\nExecute the  following  command:\nThe response contains the updated IAM policy.To learn how to apply or remove a Terraform configuration, see [Basic Terraform commands](/docs/terraform/basic-commands) .    For more information, see the [Terraform provider reference documentation](https://registry.terraform.io/providers/hashicorp/google/latest/docs) .\n [  iam/create_service_agent/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/HEAD/iam/create_service_agent/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/HEAD/iam/create_service_agent/main.tf) \n```\n# Grant the AI Platform Custom Code Service Account the Vertex AI Custom\n# Code Service Agent role (roles/aiplatform.customCodeServiceAgent)\nresource \"google_project_iam_member\" \"custom_code\" {\n project = data.google_project.default.project_id\n role = \"roles/aiplatform.customCodeServiceAgent\"\n member = \"serviceAccount:service-${data.google_project.default.number}@gcp-sa-aiplatform-cc.iam.gserviceaccount.com\"\n}\n# Grant the primary aiplatform.googleapis.com service agent (AI Platform\n# Service Agent) the Vertex AI Service Agent role\n# (roles/aiplatform.serviceAgent)\nresource \"google_project_iam_member\" \"primary\" {\n project = data.google_project.default.project_id\n role = \"roles/aiplatform.serviceAgent\"\n member = \"serviceAccount:${google_project_service_identity.default.email}\"\n}\n```To grant a role with the REST API, use the read-modify-write pattern:- Read the current allow policy by calling `getIamPolicy()` .The Resource Manager API's ` [getIamPolicy](/resource-manager/reference/rest/v1/projects/getIamPolicy) ` method gets a project's, folder's, or organization's allow policy.Before using any of the request data, make the following replacements:- ``: The API version to use. For projects and organizations, use`v1`. For folders, use`v2`.\n- ``: The resource type whose policy you want to manage. Use the value`projects`,`folders`, or`organizations`.\n- ``: Your Google Cloud project, organization, or folder ID. Project IDs are alphanumeric strings, like`my-project`. Folder and organization IDs are numeric, like`123456789012`.\n- ``: The policy version to be returned. Requests should specify the most recent policy version, which is policy version 3. See [Specifyinga policy version when getting a policy](/iam/docs/policies#specifying-version-get) for details.\nHTTP method and URL:\n```\nPOST https://cloudresourcemanager.googleapis.com/API_VERSION/RESOURCE_TYPE/RESOURCE_ID:getIamPolicy\n```\nRequest JSON body:\n```\n{\n \"options\": {\n \"requestedPolicyVersion\": POLICY_VERSION\n }\n}\n```\nTo send your request, expand one of these options:The response contains the resource's allow policy. For example:\n```\n{\n \"version\": 1,\n \"etag\": \"BwWKmjvelug=\",\n \"bindings\": [ {\n  \"role\": \"roles/owner\",\n  \"members\": [  \"user:owner@example.com\"\n  ]\n }\n ]\n}\n```- Edit the resource's allow policy, either by using a text editor or programmatically, to add or remove any principals or role bindings. For example, you could add a new role binding, remove an existing role binding, or add or remove principals from an existing role binding.\n- Write the updated allow policy by calling `setIamPolicy()` .The Resource Manager API's ` [setIamPolicy](/resource-manager/reference/rest/v1/projects/setIamPolicy) ` method sets the policy in the request as the new allow policy for the project, folder, or organization.Before using any of the request data, make the following replacements:- ``: The API version to use. For projects and organizations, use`v1`. For folders, use`v2`.\n- ``: The resource type whose policy you want to manage. Use the value`projects`,`folders`, or`organizations`.\n- ``: Your Google Cloud project, organization, or folder ID. Project IDs are alphanumeric strings, like`my-project`. Folder and organization IDs are numeric, like`123456789012`.\n- `` : A JSON representation of the policy that you want to set. For more information about the format of a policy, see the [Policy reference](/iam/docs/reference/rest/v1/Policy) .\nHTTP method and URL:\n```\nPOST https://cloudresourcemanager.googleapis.com/API_VERSION/RESOURCE_TYPE/RESOURCE_ID:setIamPolicy\n```\nRequest JSON body:\n```\n{\n \"policy\": POLICY\n}\n```\nTo send your request, expand one of these options:The response contains the updated allow policy. **Note:** If you treat policies as code and store them in a version-control system, you should store the policy that is returned, not the policy that you sent in the request.## What's next\n- View a list of [all service agents](/iam/docs/service-agents) .\n- Explore other ways that you can [grant roles to principals](/iam/docs/granting-changing-revoking-access) .\n- Learn how to [create user-managed service accounts](/iam/docs/service-accounts-create) , which can act as identities for your workloads.\n- Learn more about [best practices for using Terraform onGoogle Cloud](/docs/terraform/best-practices-for-terraform) .\n- Explore all [Google Cloud Terraform samples](/docs/terraform/samples) .", "guide": "IAM"}