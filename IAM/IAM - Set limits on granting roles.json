{"title": "IAM - Set limits on granting roles", "url": "https://cloud.google.com/iam/docs/setting-limits-on-granting-roles", "abstract": "# IAM - Set limits on granting roles\nIn large organizations, it can be helpful to let teams independently manage the allow policies for their resources. However, letting a principal grant or revoke all IAM roles can greatly increase your security risk.\nYou can set limits on the roles that a principal can grant and revoke with Identity and Access Management (IAM) Conditions and the `iam.googleapis.com/modifiedGrantsByRole` API attribute. These limits let you create limited IAM admins who can manage their own team's allow policies, but only within the boundaries that you have set.\n", "content": "## Before you begin\n- Enable the Resource Manager API. [Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=cloudresourcemanager.googleapis.com&redirect=https://console.cloud.google.com) \n- Be familiar with the [structure of allow policies](/iam/docs/policies#structure) .\n- Understand [IAM Conditions](/iam/docs/conditions-overview) .\n### Required permissions\nTo get the permissions that you need to create limited IAM admins for a project, folder, or organization,   ask your administrator to grant you the  following IAM roles on the resource that you want to create a limited IAM admin for (project, folder, or organization):\n- To create a limited IAM admin for a project: [Project IAM Admin ](https://cloud.google.com/iam/docs/understanding-roles#resourcemanager.projectIamAdmin) (`roles/resourcemanager.projectIamAdmin`)\n- To create a limited IAM admin for a folder: [Folder Admin ](https://cloud.google.com/iam/docs/understanding-roles#resourcemanager.folderAdmin) (`roles/resourcemanager.folderAdmin`)\n- To create a limited IAM admin for a project, folder, or organization: [Organization Admin ](https://cloud.google.com/iam/docs/understanding-roles#resourcemanager.organizationAdmin) (`roles/resourcemanager.organizationAdmin`)\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nThese predefined roles contain     the permissions required to create limited IAM admins for a project, folder, or organization. To see the exact permissions that are   required, expand the **Required permissions** section:\nYou might also be able to get   these permissions  with [custom roles](/iam/docs/creating-custom-roles) or  other [predefined roles](/iam/docs/understanding-roles) .\n## Common use cases\nThe following sections describe how you can use limited role granting to enable self-service management of allow policies.\n### Create limited IAM admins\nConsider a scenario where you want to let a user, Finn ( `finn@example.com` ), act as a limited IAM admin for your project. You want Finn to be able to grant and revoke only the App Engine Admin ( `roles/appengine.appAdmin` ) and App Engine Viewer ( `roles/appengine.appViewer` ) roles for your project.\nTo grant this limited ability, you conditionally grant Finn the Project IAM Admin role ( `roles/resourcemanager.projectIamAdmin` ). The Project IAM Admin role allows Finn to grant and revoke IAM roles, and the condition limits which roles Finn can grant and revoke:\n```\n{\u00a0 \"version\": 3,\u00a0 \"etag\": \"BwWKmjvelug=\",\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:owner@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/owner\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"finn@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/resourcemanager.projectIamAdmin\",\u00a0 \u00a0 \u00a0 \"condition\": {\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"only_appengine_admin_viewer_roles\",\u00a0 \u00a0 \u00a0 \u00a0 \"description\": \"Only allows changes to role bindings with the App Engine Admin or Viewer roles\",\u00a0 \u00a0 \u00a0 \u00a0 \"expression\":\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"api.getAttribute('iam.googleapis.com/modifiedGrantsByRole', []).hasOnly(['roles/appengine.appAdmin', 'roles/appengine.appViewer'])\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\nThis conditional role binding lets Finn do the following:\n- Grant the App Engine Admin and App Engine Viewer roles for the project.\n- Revoke the App Engine Admin and App Engine Viewer roles for the project.\n- Add, remove, or modify conditions for project-level role bindings that grant the App Engine Admin and App Engine Viewer roles.\n- Perform other actions allowed by the Project IAM Admin role that do not modify the project's allow policy. For example, Finn could use the [projects.getIamPolicy](/resource-manager/reference/rest/v1/projects/getIamPolicy) method to get the project's allow policy.\nThis conditional role binding does not let Finn do any of the following:\n- Modify allow policies for resources other than the project.\n- Grant roles other than the App Engine Admin or App Engine Viewer roles.\n- Revoke roles other than the App Engine Admin or App Engine Viewer roles.\n- Add, remove, or modify conditions for role bindings that do not grant the App Engine Admin or App Engine Viewer roles.\n### Allow users to manage limited IAM admins\nConsider a scenario where you want to make a user, Lila, a limited IAM admin for her team. You want Lila to be able to grant and revoke only the Compute Admin role ( `roles/compute.admin` ) for her project. However, you also want to let Lila select other users to act as limited IAM admins. In other words, you want to let Lila allow other users to grant and revoke only the Compute Admin role.\nYou might think that the solution is to grant Lila the Project IAM Admin role ( `roles/resourcemanager.projectIamAdmin` ), and then give her the ability to grant or revoke that role for others. However, if you grant Lila the Project IAM Admin role, she could remove the condition from her own role and give herself the ability to grant or revoke any IAM role.\nTo help prevent this privilege escalation, you instead [create a Google group](https://support.google.com/groups/answer/2464926) , `iam-compute-admins@example.com` , for the project's limited IAM admins. Then, you [add Lila to the group](https://support.google.com/groups/answer/2465464) and [make her a group manager](https://support.google.com/groups/answer/2464975) .\nAfter you create the group, you conditionally grant the group the Project IAM Admin role ( `roles/resourcemanager.projectIamAdmin` ). The Project IAM Admin role allows group members to grant and revoke IAM roles, and the condition limits which roles they can grant and revoke:\n```\n{\u00a0 \"version\": 3,\u00a0 \"etag\": \"BwWKmjvelug=\",\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:owner@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/owner\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"iam-compute-admins@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/resourcemanager.projectIamAdmin\",\u00a0 \u00a0 \u00a0 \"condition\": {\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"only_compute_admin_role\",\u00a0 \u00a0 \u00a0 \u00a0 \"description\": \"Only allows changes to role bindings for the Compute Admin role\",\u00a0 \u00a0 \u00a0 \u00a0 \"expression\":\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"api.getAttribute('iam.googleapis.com/modifiedGrantsByRole', []).hasOnly(['roles/compute.admin'])\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\nAs a **member** of the `iam-compute-admins@example.com` group, Lila can do the following:\n- Grant the Compute Admin role for the project by adding a new binding for the role, or by adding a principal to an existing binding for the role.\n- Revoke the Compute Admin role by removing an existing binding for the role, or by removing a principal from an existing binding for the role.\n- Modify grants for the Compute Admin role by adding, removing, or modifying conditions attached to bindings for the role.\n- Perform other actions allowed by the Project IAM Admin role that do not modify the project's allow policy. For example, she could use the [projects.getIamPolicy](/resource-manager/reference/rest/v1/projects/getIamPolicy) method to get the project's allow policy.\nAs a **manager** of the `iam-compute-admins@example.com` group, Lila can allow other users to grant or revoke the Compute Admin role by adding them to the `iam-compute-admins@example.com` group.\nLila cannot do the following:\n- Give herself the ability to grant or revoke other roles.\n- Modify allow policies for resources other than the project.\n- Grant roles other than the Compute Admin role.\n- Revoke roles other than the Compute Admin role.\n- Add, remove, or modify conditions for role bindings that do not grant the Compute Admin role.## Limit role granting\nThe following sections explain how to let principals grant or revoke only certain roles.\n**Caution:** Some Google Cloud services do not recognize  limits on role granting. If a limited IAM admin tries to  grant a role on a resource, and the resource's service does not recognize  limits on role granting, then the request fails. For a list of services  that recognize limits on role granting, see [ IAM API attributes](/iam/docs/conditions-attribute-reference#api-attributes-iam) .The exception to this behavior is [ BigQuery datasets](/bigquery/docs/reference/rest/v2/datasets) . Datasets do not recognize the `modifiedGrantsByRole` attribute, but limited IAM  admins can still grant or revoke roles on datasets. Specifically, if a  limited IAM admin's role includes permissions to grant roles  on datasets, **they can do so** , regardless of any limits placed on their  role granting.\n### Write a condition expression to limit role granting\nTo limit a principal's ability to grant roles, write a condition expression that specifies the roles a principal can grant or revoke.\nUse the following format for your condition expression:\n```\napi.getAttribute('iam.googleapis.com/modifiedGrantsByRole', []).hasOnly(roles)\n```\nThis expression does the following:\n- Gets the API attribute `iam.googleapis.com/modifiedGrantsByRole` using the [api.getAttribute()](/iam/docs/conditions-attribute-reference#api-functions) function.For a request to set the allow policy of a resource, this attribute contains the role names from the bindings that the request modifies. For other types of requests, the attribute is not defined. In these cases, the function returns the default value ( `[]` ). **Note:** Not all services recognize the `iam.googleapis.com/modifiedGrantsByRole` attribute. If a service does not recognize this attribute, you cannot use this attribute to limit role granting for that service. For a list of services that recognize this attribute, see [IAM API attributes](/iam/docs/conditions-attribute-reference#api-attributes-iam) .\n- Uses the `hasOnly()` [Common Expression Language (CEL)](https://github.com/google/cel-spec) function to define and enforce the roles that the principal is allowed to grant or revoke.The input for the `hasOnly()` function is a list of the roles that the principal is allowed to grant or revoke. If the roles in the `iam.googleapis.com/modifiedGrantsByRole` attribute are included in this list, the function returns `true` . If they are not, the function returns `false` .If the `iam.googleapis.com/modifiedGrantsByRole` attribute contains the default value ( `[]` ), the function returns `true` , because `[]` does not contain any roles not included in the list.\nTo customize this expression, replace `` with a list of the roles that the principal is allowed to grant or revoke. For example, to let the principal grant or revoke only the Pub/Sub Editor ( `roles/pubsub.editor` ) and Pub/Sub Publisher ( `roles/pubsub.publisher` ) roles, use the value `['roles/pubsub.editor', 'roles/pubsub.publisher']` .\nYou can include up to 10 values in the list of allowed roles. All of these values must be string constants.\n**Note:** You cannot customize the default value for `api.getAttribute` functions involving `iam.googleapis.com/modifiedGrantsByRole` . It must be an empty list.\n**Warning:** Do not include the following types of roles in the list of allowed roles:- Roles with permissions to grant and revoke IAM roles (that  is, roles with permission names that end in`setIamPolicy`).\n- Custom roles that the limited IAM admin can modify. For  example, if the limited IAM admin also has the Role  Administrator role (`roles/iam.roleAdmin`) on a project, don't  allow them to grant or revoke project-level custom roles.\nBoth of these types of roles contain, or could contain, permission to modify  allow policies. As a result, limited IAM admins who can grant  and revoke these types of roles can give themselves permission to grant and  revoke all IAM roles.For example, if a user is a limited IAM admin for a project,  and you let them grant or revoke a custom role that they can modify, they  could add the `resourcemanager.projects.setIamPolicy` permission  to the custom role, then grant themselves that role unconditionally. They  would then be able to grant and revoke all IAM roles for the  project.### Limit role granting with conditional role bindings\nTo allow a principal to grant or revoke only certain roles, use the condition expression from the preceding section to create a conditional role binding. Then, add the conditional role binding to a resource's allow policy.\n**Note:** Conditional role bindings do not override role bindings with no conditions. If a principal is bound to a role, and the role binding does not have a condition, then the principal always has that role. Adding the principal to a conditional binding for the same role has no effect.- Select a resource that represents the scope that you want to let a principal grant and revoke roles for:- If you want to let a principal grant and revoke certain roles for all resources within an **organization** , select an organization.\n- If you want to let a principal grant and revoke certain roles for all resources within an **folder** , select a folder.\n- If you want to let a principal grant and revoke certain roles for all resources within a **project** , select a project.\n **Note:** While other resource types [recognize limits on rolegranting](/iam/docs/conditions-attribute-reference#api-attributes-iam) , only projects, folders, and organizations accept conditions to limit role granting in their allow policies.\n- Select a role that allows a principal to set the allow policy for the resource type you selected (project, folder, or organization). To follow the principle of least privilege, choose one of the following predefined roles:- **Projects** : Project IAM Admin (`roles/resourcemanager.projectIamAdmin`)\n- **Folders** : Folder IAM Admin (`roles/resourcemanager.folderIamAdmin`)\n- **Organizations** : Organization Admin ( `roles/resourcemanager.organizationAdmin` ). **Note:** This role also allows principals to set the allow policy for projects and folders.\nAlternatively, choose a custom role that includes the `resourcemanager.` `` `.setIamPolicy` and `resourcemanager.` `` `.getIamPolicy` permissions, where `` is `project` , `folder` , or `organization` . **Note:** You can also select a role that allows a principal to set the allow policy for specific resources within a project, folder, or organization. For example, you could select the Storage Admin role, which includes permissions to set allow policies for buckets and objects. However, if you do so, the principal will also be able to use the other permissions included in the role.\n- Conditionally grant a principal your chosen role on the project, folder, or organization you selected.The new allow policy is applied, and your principal can modify bindings for only the roles you have allowed.- In the Google Cloud console, go to the **IAM** page. [Go to the IAM page](https://console.cloud.google.com/iam-admin/iam) \n- Make sure the name of your project, folder, or organization appears in the resource selector at the top of the page. The resource selector tells you what project, folder, or organization you are currently working in.If you don't see the name of your resource, click the resource selector, then select your resource.\n- In the list of principals, locate the principal that will grant and revoke roles, and click the button.\n- In the **Edit permissions** panel, select the role you chose previously. Then under **IAM condition (optional)** , click **Add IAMcondition** .\n- In the **Edit condition** panel, enter a title and optional description for the condition.\n- Click the **Condition Editor** tab and enter the expression you wrote in [Writing a condition expression to limit role granting](#writing-condition) . This expression limits which roles the principal can grant or revoke.For example, the following condition expression limits the principal to granting and revoking the Pub/Sub Editor ( `roles/pubsub.editor` ) and Pub/Sub Publisher ( `roles/pubsub.publisher` ) roles:```\napi.getAttribute('iam.googleapis.com/modifiedGrantsByRole', []).hasOnly(['roles/pubsub.editor', 'roles/pubsub.publisher'])\n``` **Warning:** Do not include the following types of roles in the list of allowed roles:- Roles with permissions to grant and revoke IAM roles (that  is, roles with permission names that end in`setIamPolicy`).\n- Custom roles that the limited IAM admin can modify. For  example, if the limited IAM admin also has the Role  Administrator role (`roles/iam.roleAdmin`) on a project, don't  allow them to grant or revoke project-level custom roles.\nLimited IAM admins who can grant and revoke these types of  roles can give themselves permission to grant and revoke all  IAM roles. See [Writing a condition expression to limit role granting](#writing-condition) for more information.\n- Click **Save** to apply the condition.\n- After the **Edit condition** panel is closed, click **Save** in the **Edit permissions** panel to update your allow policy.\nAllow policies are set using the [read-modify-write](/iam/docs/granting-changing-revoking-access#policy-overview) pattern.\n **First, read the allow policy for the resource:** \nExecute the [get-iam-policy](/sdk/gcloud/reference/projects/get-iam-policy) command. This command gets the current allow policy for the resource.\nCommand:\n```\ngcloud resource-type get-iam-policy resource-id --format=json > path\n```\nReplace the following values:- ``: The resource type that you want to let a principal grant or revoke roles for. Use one of the following:`projects`,`resource-manager folders`, or`organizations`.\n- ``: Your Google Cloud project, folder, or organization ID.\n- ``: The path of the file to download the allow policy to.\nThe allow policy is saved in JSON format, for example:\n```\n{\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:project-owner@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/owner\"\u00a0 \u00a0 }\u00a0 ],\u00a0 \"etag\": \"BwWKmjvelug=\",\u00a0 \"version\": 1}\n```\n **Next, modify the allow policy.** \nTo let a principal only modify bindings for certain roles, add the highlighted conditional role binding:\n```\n{\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:owner@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/owner\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"principal\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"role\",\u00a0 \u00a0 \u00a0 \"condition\": {\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"title\",\u00a0 \u00a0 \u00a0 \u00a0 \"description\": \"description\",\u00a0 \u00a0 \u00a0 \u00a0 \"expression\":\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"expression\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ],\u00a0 \"etag\": \"BwWKmjvelug=\",\u00a0 \"version\": 3}\n```\nReplace the following values:- ``: The principal that will grant or revoke certain roles. For example,`user:my-user@example.com`. To see the formats of each principal type, see the [Binding reference](/resource-manager/reference/rest/Shared.Types/Binding) .\n- ``: The role you chose in the preceding steps. This role must include the`setIamPolicy`permission for the resource type you chose.\n- ``: A string briefly describing the condition. For example,`only_pubsub_roles`.\n- ``: Optional. An additional description for the condition. For example,`Only allows granting/revoking the Pub/Sub editor and publisher roles`.\n- `` : The expression you wrote in [Writing a condition expression to limit role granting](#writing-condition) . This expression limits which roles that the principal can grant or revoke.For example, the following condition expression limits the principal to granting and revoking the Pub/Sub Editor ( `roles/pubsub.editor` ) and Pub/Sub Publisher ( `roles/pubsub.publisher` ) roles:```\napi.getAttribute('iam.googleapis.com/modifiedGrantsByRole', []).hasOnly(['roles/pubsub.editor', 'roles/pubsub.publisher'])\n``` **Warning:** Do not include the following types of roles in the list of allowed roles:- Roles with permissions to grant and revoke IAM roles (that  is, roles with permission names that end in`setIamPolicy`).\n- Custom roles that the limited IAM admin can modify. For  example, if the limited IAM admin also has the Role  Administrator role (`roles/iam.roleAdmin`) on a project, don't  allow them to grant or revoke project-level custom roles.\nLimited IAM admins who can grant and revoke these types of  roles can give themselves permission to grant and revoke all  IAM roles. See [Writing a condition expression to limit role granting](#writing-condition) for more information.\n **Finally, write the updated allow policy:** \nSet the new allow policy by executing the [set-iam-policy](/sdk/gcloud/reference/projects/set-iam-policy) command for the resource:\n```\ngcloud resource-type set-iam-policy resource-id path\n```\nReplace the following values:- ``: The resource type that you want to let a principal grant or revoke roles for. Use one of the following:`projects`,`resource-manager folders`, or`organizations`.\n- ``: Your Google Cloud project, folder, or organization ID.\n- ``: A path to the file containing the updated allow policy.\nThe new allow policy is applied, and the principal will be able to modify bindings for only the roles you have allowed.Allow policies are set using the [read-modify-write](/iam/docs/granting-changing-revoking-access#policy-overview) pattern.\n **First, read the allow policy for the resource:** \nThe Resource Manager API's ` [getIamPolicy](/resource-manager/reference/rest/v1/projects/getIamPolicy) ` method gets a project's, folder's, or organization's allow policy.\nBefore using any of the request data, make the following replacements:- ``: The API version to use. For projects and organizations, use`v1`. For folders, use`v2`.\n- ``: The resource type whose policy you want to manage. Use the value`projects`,`folders`, or`organizations`.\n- ``: Your Google Cloud project, organization, or folder ID. Project IDs are alphanumeric strings, like`my-project`. Folder and organization IDs are numeric, like`123456789012`.\n- ``: The policy version to be returned. Requests should specify the most recent policy version, which is policy version 3. See [Specifyinga policy version when getting a policy](/iam/docs/policies#specifying-version-get) for details.\nHTTP method and URL:\n```\nPOST https://cloudresourcemanager.googleapis.com/API_VERSION/RESOURCE_TYPE/RESOURCE_ID:getIamPolicy\n```\nRequest JSON body:\n```\n{\n \"options\": {\n \"requestedPolicyVersion\": POLICY_VERSION\n }\n}\n```\nTo send your request, expand one of these options:\nThe response contains the resource's allow policy. For example:\n```\n{\n \"version\": 1,\n \"etag\": \"BwWKmjvelug=\",\n \"bindings\": [ {\n  \"role\": \"roles/owner\",\n  \"members\": [  \"user:owner@example.com\"\n  ]\n }\n ]\n}\n```\n **Next, modify the allow policy.** \nAdd a conditional role binding that lets a principal grant and revoke only certain roles. Make sure to change the `version` field to the value `3` :\n```\n{\u00a0 \"version\": 3,\u00a0 \"etag\": \"BwWKmjvelug=\",\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:owner@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/owner\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"PRINCIPAL\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"ROLE\",\u00a0 \u00a0 \u00a0 \"condition\": {\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"TITLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"description\": \"DESCRIPTION\",\u00a0 \u00a0 \u00a0 \u00a0 \"expression\":\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"EXPRESSION\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```- ``: The principal that will grant or revoke certain roles. For example,`user:my-user@example.com`. To see the formats of each principal type, see the [Binding reference](/resource-manager/reference/rest/Shared.Types/Binding) .\n- ``: The role you chose in the preceding steps. This role must include the`setIamPolicy`permission for the resource type you chose.\n- ``: A string briefly describing the condition. For example,`only_pubsub_roles`.\n- ``: Optional. An additional description for the condition. For example,`Only allows granting/revoking the Pub/Sub editor and publisher roles`.\n- `` : The expression you wrote in [Writing a condition expression to limit role granting](#writing-condition) . This expression limits which roles that the principal can grant or revoke.For example, the following condition expression limits the principal to granting and revoking the Pub/Sub Editor ( `roles/pubsub.editor` ) and Pub/Sub Publisher ( `roles/pubsub.publisher` ) roles:```\napi.getAttribute('iam.googleapis.com/modifiedGrantsByRole', []).hasOnly(['roles/pubsub.editor', 'roles/pubsub.publisher'])\n``` **Warning:** Do not include the following types of roles in the list of allowed roles:- Roles with permissions to grant and revoke IAM roles (that  is, roles with permission names that end in`setIamPolicy`).\n- Custom roles that the limited IAM admin can modify. For  example, if the limited IAM admin also has the Role  Administrator role (`roles/iam.roleAdmin`) on a project, don't  allow them to grant or revoke project-level custom roles.\nLimited IAM admins who can grant and revoke these types of  roles can give themselves permission to grant and revoke all  IAM roles. See [Writing a condition expression to limit role granting](#writing-condition) for more information.\n **Finally, write the updated allow policy:** \nThe Resource Manager API's ` [setIamPolicy](/resource-manager/reference/rest/v1/projects/setIamPolicy) ` method sets the allow policy in the request as the new allow policy for the project, folder, or organization.\nBefore using any of the request data, make the following replacements:- ``: The API version to use. For projects and organizations, use`v1`. For folders, use`v2`.\n- ``: The resource type whose policy you want to manage. Use the value`projects`,`folders`, or`organizations`.\n- ``: Your Google Cloud project, organization, or folder ID. Project IDs are alphanumeric strings, like`my-project`. Folder and organization IDs are numeric, like`123456789012`.\n- `` : A JSON representation of the policy that you want to set. For more information about the format of a policy, see the [Policy reference](/iam/docs/reference/rest/v1/Policy) .For example, to set the policy shown in the previous step, replace `` with the following:```\n{\u00a0 \"version\": 3,\u00a0 \"etag\": \"BwWKmjvelug=\",\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"user:owner@example.com\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/owner\"\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"principal\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"role\",\u00a0 \u00a0 \u00a0 \"condition\": {\u00a0 \u00a0 \u00a0 \u00a0 \"title\": \"title\",\u00a0 \u00a0 \u00a0 \u00a0 \"description\": \"description\",\u00a0 \u00a0 \u00a0 \u00a0 \"expression\":\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"expression\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\nHTTP method and URL:\n```\nPOST https://cloudresourcemanager.googleapis.com/API_VERSION/RESOURCE_TYPE/RESOURCE_ID:setIamPolicy\n```\nRequest JSON body:\n```\n{\n \"policy\": POLICY\n}\n```\nTo send your request, expand one of these options:\nThe response contains the updated allow policy.\n **Note:** If you treat policies as code and store them in a version-control system, you should store the policy that is returned, not the policy that you sent in the request.\n## What's next\n- Enforce the principle of least privilege with [rolerecommendations](/iam/docs/recommender-overview) .\n- Learn how to use IAM Conditions to [configure temporary access](/iam/docs/configuring-temporary-access) and [configure resource-based access](/iam/docs/configuring-resource-based-access) .", "guide": "IAM"}