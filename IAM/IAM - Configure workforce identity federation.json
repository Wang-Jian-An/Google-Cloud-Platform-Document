{"title": "IAM - Configure workforce identity federation", "url": "https://cloud.google.com/iam/docs/configuring-workforce-identity-federation", "abstract": "# IAM - Configure workforce identity federation\nThis guide describes how to configure workforce identity federation with an identity provider (IdP) that supports [OIDC](https://openid.net/connect/) or [SAML 2.0](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html) .\nFor IdP-specific instructions, see the following:\n- [Configure Azure AD-based workforce identity federation](/iam/docs/workforce-sign-in-azure-ad) \n- [Configure Okta-based workforce identity federation](/iam/docs/workforce-sign-in-okta) ", "content": "## Before you begin\n- You must have a Google Cloud organization set up.\n- Enable the Identity and Access Management (IAM) and Resource Manager APIs. [Enable the APIs](https://console.cloud.google.com/flows/enableapi?apiid=iam.googleapis.com,cloudresourcemanager.googleapis.com&redirect=https://console.cloud.google.com) \n- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- For sign-in, your IdP must provide signed authentication information: OIDC IdPs must provide a JWT, and SAML IdP responses must be signed.\n- To receive important information about changes to your organization or Google Cloud products, you must provide [Essential Contacts](/resource-manager/docs/managing-notification-contacts) . For more information, see the [Workforce Identity Federation overview](/iam/docs/workforce-identity-federation#essential-contacts) .## Required roles\nTo get the permissions that you need to configure workforce identity federation,   ask your administrator to grant you the [Workforce Identity Pool Admin ](https://cloud.google.com/iam/docs/understanding-roles#iam.workforcePoolAdmin) ( `roles/iam.workforcePoolAdmin` ) IAM role on the organization.    For more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYou might also be able to get  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .\nAlternatively, the Owner basic role ( `roles/owner` ) also includes permissions to configure workforce identity federation. You should not grant basic roles in a production environment, but you can grant them in a development or test environment.\n## Configure workforce identity federation\nTo configure workforce identity federation, you create a [workforce identity pool](/iam/docs/workforce-identity-federation#workforce-identity-pools) and a [workforce identity pool provider](/iam/docs/workforce-identity-federation#workforce-identity-pool-providers) .\n### Create a workforce identity pool\nTo create the pool, execute the following command:\n**    Preview     ** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .To create the workforce identity pool, do the following:- In the Google Cloud console, go to the **Workforce Identity Pools** page: [Go to Workforce Identity Pools](https://console.cloud.google.com/iam-admin/workforce-identity-pools) \n- Click **Create pool** and do the following:- In **Name** , enter the name of the pool. **Pool ID** is automatically derived from the name as you type.\n- Optional: To update the ID, click **Edit** .\n- Optional: In **Description** , enter a description of the pool.\n- **Session duration** is set by default. To enter a custom session duration, click **Edit** . Session duration determines how long the Google Cloud access tokens, [console (federated)](/iam/docs/workforce-identity-federation#console-federated) sign-in sessions, and gcloud CLI sign-in sessions from this workforce pool are valid. The duration must be greater than 15 minutes (900s) and less than 12 hours (43200s). If session duration is not set, it defaults to a duration of one hour (3600s).\n- To create the pool in the enabled state, make sure that **Enabled Pool** is on.\n- To create the workforce identity pool, click **Next** .\nTo create the workforce identity pool, run the following command:\n```\ngcloud iam workforce-pools create WORKFORCE_POOL_ID \\\u00a0 \u00a0 --organization=ORGANIZATION_ID \\\u00a0 \u00a0 --description=\"DESCRIPTION\" \\\u00a0 \u00a0 --session-duration=SESSION_DURATION \\\u00a0 \u00a0 --location=global\n```\nReplace the following:- ``: an ID that you choose to represent your Google Cloud workforce pool. For information on formatting the ID, see the [Query parameters](/iam/docs/reference/rest/v1/locations.workforcePools.providers/create#query-parameters) section in the API documentation.\n- ``: the numeric organization ID of your Google Cloud organization.\n- ``: a workforce identity pool description.\n- ``: the session duration, which determines how long the Google Cloud access tokens, [console (federated)](/iam/docs/workforce-identity-federation#console-federated) sign-in sessions, and gcloud CLI sign-in sessions from this workforce pool are valid. The duration must be greater than 15 minutes (900s) and less than 12 hours (43200s). If session duration is not set, it defaults to a duration of one hour (3600s).\n **Tip:** Run `gcloud iam workforce-pools create --help` to find other parameters you can customize for this command.\n### Create a workforce identity pool provider\nThis section describes how to create a [workforce identity pool provider](/iam/docs/workforce-identity-federation#workforce-identity-pool-providers) to enable your IdP users to access Google Cloud. You can configure the provider to use either the OIDC or SAML protocol.\nTo create a workforce identity pool provider using the OIDC protocol, do the following:\n- In your OIDC IdP, register a new application for Google Cloud workforce identity federation. Note the client ID and issuer URI provided by the IdP. You use them in this document.\n- If you plan to set up user access to the console, add the following redirect URL to your OIDC IdP:```\nhttps://auth.cloud.google/signin-callback/locations/global/workforcePools/WORKFORCE_POOL_ID/providers/WORKFORCE_PROVIDER_ID\n```To learn how to configure console (federated) sign-in, see [Set up user access to the console (federated)](/iam/docs/workforce-console-sso) .\n- In Google Cloud, to create the provider, do the following:\nIn the Google Cloud console, to create an OIDC provider that uses [authorization code flow](/iam/docs/workforce-identity-federation#oidc-flow-types) , do the following:\n- In the Google Cloud console, go to the **Workforce Identity Pools** page: [Go to Workforce Identity Pools](https://console.cloud.google.com/iam-admin/workforce-identity-pools) \n- In the **Workforce Identity Pools** table, select the pool for which you want to create the provider.\n- In the **Providers** table, click **Add Provider** .\n- In **Select a protocol** , select **Open ID Connect (OIDC)** .\n- In **Create a pool provider** , do the following:- In **Name** , enter a name for the provider.\n- In **Issuer (URL)** , enter the issuer URI. The OIDC issuer URI must be in a valid URI format and start with`https`; for example,`https://example.com/oidc`.\n- Enter the **Client ID** , the OIDC client ID that is registered with your OIDC IdP; the ID must match the`aud`claim of the JWT that is issued by your IdP.\n- To create a provider that is enabled, make sure **Enabled Provider** is on.\n- Click **Continue** .\n- In **Response type** do the following. Response type is used only for a web-based single-sign-on flow.- In **Response type** , select **Code** .\n- In **Client secret** , enter the client secret from your IdP.\n- In **Assertion claims behavior** , select either of the following:- **User info and ID token** \n- **Only ID token** \n- Click **Continue** .\n- In **Configure provider** , you can configure an attribute mapping and an attribute condition. To create an [attribute mapping](/iam/docs/workforce-identity-federation#attribute-mappings) , do the following. You can provide either the IdP field name or a [CEL-formatted](/iam/docs/workforce-identity-federation#attribute-conditions) expression that returns a string.- Required: In **OIDC 1** , enter the subject from the IdP; for example,`assertion.sub`.\n- Optional: To add additional attribute mappings, do the following:- Click **Add mapping** .\n- In **Google n** , whereis a number, enter one of the [Google Cloud-supported keys](/iam/docs/workforce-identity-federation#attribute-mappings) .\n- In the corresponding **OIDC n** field, enter the name of the IdP-specific field to map, in CEL format.\n- To create an attribute condition, do the following:- Click **Add condition** .\n- In **Attribute Conditions** , enter a condition in [CEL format](/iam/docs/workforce-identity-federation#attribute-conditions) ; for example,`assertion.role == 'gcp-users'`. This example condition ensures that only users with the role`gcp-users`can sign in using this provider.\n- To create the provider, click **Submit** .\nIn the Google Cloud console, to create an OIDC provider that uses [implicit flow](/iam/docs/workforce-identity-federation#oidc-flow-types) , do the following:\n- In the Google Cloud console, go to the **Workforce Identity Pools** page: [Go to Workforce Identity Pools](https://console.cloud.google.com/iam-admin/workforce-identity-pools) \n- In the **Workforce Identity Pools** table, select the pool for which you want to create the provider.\n- In the **Providers** table, click **Add Provider** .\n- In **Select a protocol** , select **Open ID Connect (OIDC)** .\n- In **Create a pool provider** , do the following:- In **Name** , enter a name for the provider.\n- In **Issuer (URL)** , enter the issuer URI. The OIDC issuer URI must be in a valid URI format and start with`https`; for example,`https://example.com/oidc`.\n- Enter the **Client ID** , the OIDC client ID that is registered with your OIDC IdP; the ID must match the`aud`claim of the JWT that is issued by your IdP.\n- To create a provider that is enabled, make sure **Enabled Provider** is on.\n- Click **Continue** .\n- In **Response type** do the following. Response type is used only for a web-based single-sign-on flow.- In **Response type** , select **ID token** .\n- Click **Continue** .\n- In **Configure provider** , you can configure an attribute mapping and an attribute condition. To create an [attribute mapping](/iam/docs/workforce-identity-federation#attribute-mappings) , do the following. You can provide either the IdP field name or a [CEL-formatted](/iam/docs/workforce-identity-federation#attribute-conditions) expression that returns a string.- Required: In **OIDC 1** , enter the subject from the IdP; for example, `assertion.sub` .\n- Optional: To add additional attribute mappings, do the following:- Click **Add mapping** .\n- In **Google n** , whereis a number, enter one of the [Google Cloud-supported keys](/iam/docs/workforce-identity-federation#attribute-mappings) .\n- In the corresponding **OIDC n** field, enter the name of the IdP-specific field to map, in CEL format.\n- To create an attribute condition, do the following:- Click **Add condition** .\n- In **Attribute Conditions** , enter a condition in [CEL format](/iam/docs/workforce-identity-federation#attribute-conditions) ; for example,`assertion.role == 'gcp-users'`. This example condition ensures that only users with the role`gcp-users`can sign in using this provider.\n- To create the provider, click **Submit** .To create an OIDC provider that uses [authorization code flow](/iam/docs/workforce-identity-federation#oidc-flow-types) for web sign-in, run the following command:\n```\ngcloud iam workforce-pools providers create-oidc PROVIDER_ID \\\n --workforce-pool=WORKFORCE_POOL_ID \\\n --display-name=\"DISPLAY_NAME\" \\\n --description=\"DESCRIPTION\" \\\n --issuer-uri=\"ISSUER_URI\" \\\n --client-id=\"OIDC_CLIENT_ID\" \\ --client-secret-value=\"OIDC_CLIENT_SECRET\" \\\n --web-sso-response-type=\"code\" \\\n --web-sso-assertion-claims-behavior=\"merge-user-info-over-id-token-claims\" \\\n --web-sso-additional-scopes=\"WEB_SSO_ADDITIONAL_SCOPES\" \\\n --attribute-mapping=\"ATTRIBUTE_MAPPING\" \\\n --attribute-condition=\"ATTRIBUTE_CONDITION\" \\\n --jwk-json-path=\"JWK_JSON_PATH\" \\\n --location=global\n```\nReplace the following:- ``: A unique provider ID. The prefix`gcp-`is reserved and can't be used in a pool or provider ID.\n- ``: The workforce identity pool ID  to connect your IdP to.\n- ``: An optional user-friendly display  name for the provider; for example,`idp-eu-employees`.\n- ``: An optional workforce provider  description; for example,`IdP for Partner Example Organization employees`.\n- ``: The OIDC issuer URI, in a  valid URI format, that starts with`https`; for example,`https://example.com/oidc`. Note: For security reasons,``must use the HTTPS scheme.\n- ``: The OIDC client ID that is  registered with your OIDC IdP; the ID must match the`aud`claim  of the JWT that is issued by your IdP.\n- ``: The OIDC client secret.\n- ``: Optional additional scopes to send to the OIDC IdP  for console (federated) or gcloud CLI browser-based sign-in.\n- ``: An [attribute mapping](/iam/docs/workforce-identity-federation#attribute-mappings) ;  for example:```\ngoogle.subject=assertion.sub,google.groups=assertion.group1,attribute.costcenter=assertion.costcenter\n```This example maps the IdP attributes`subject`,`assertion.group1`, and`costcenter`in the OIDC assertion to`google.subject`,`google.groups`, and`attribute.costcenter`attributes, respectively.\n- ``: An [attribute condition](/iam/docs/workforce-identity-federation#attribute-conditions) ;  for example,`assertion.role == 'gcp-users'`. This example condition ensures that only users with the role`gcp-users`can sign in using this provider.\n- ``: An optional path to a [locally uploaded OIDC JWKs](/iam/docs/workforce-identity-federation#json-web-keys) .  If this parameter isn't supplied, Google Cloud instead uses your IdP's `/.well-known/openid-configuration` path to  source the JWKs containing the public keys. For more information about locally uploaded OIDC JWKs, see [manage OIDC JWKs](/iam/docs/manage-workforce-identity-pools-providers#manage-oidc-keys) .\n **Note:** Local OIDC JWKs can be uploaded through [implicit flow or code flow](/iam/docs/workforce-identity-federation#oidc-flow-types) , but can only be used in [programmatic flow](/iam/docs/workforce-obtaining-short-lived-credentials) , in which you directly call the STS `/token` endpoint with a credential from the third-party IdP to exchange for a Google Cloud access token for your workforce pool.\nIn the command response,\nis the name of the pool; for example,\n`locations/global/workforcePools/enterprise-example-organization-employees`\n.\nTo create an OIDC provider that uses the [implicit flow](/iam/docs/workforce-identity-federation#oidc-flow-types) for web sign-in, run the following command:\n```\ngcloud iam workforce-pools providers create-oidc PROVIDER_ID \\\n --workforce-pool=WORKFORCE_POOL_ID \\\n --display-name=\"DISPLAY_NAME\" \\\n --description=\"DESCRIPTION\" \\\n --issuer-uri=\"ISSUER_URI\" \\\n --client-id=\"OIDC_CLIENT_ID\" \\\n --web-sso-response-type=\"id-token\" \\\n --web-sso-assertion-claims-behavior=\"only-id-token-claims\" \\\n --web-sso-additional-scopes=\"WEB_SSO_ADDITIONAL_SCOPES\" \\\n --attribute-mapping=\"ATTRIBUTE_MAPPING\" \\\n --attribute-condition=\"ATTRIBUTE_CONDITION\" \\\n --jwk-json-path=\"JWK_JSON_PATH\" \\\n --location=global\n```\nReplace the following:- ``: A unique provider ID. The prefix`gcp-`is reserved and can't be used in a pool or provider ID.\n- ``: The workforce identity pool ID  to connect your IdP to.\n- ``: An optional user-friendly display  name for the provider; for example,`idp-eu-employees`.\n- ``: An optional workforce provider  description; for example,`IdP for Partner Example Organization employees`.\n- ``: The OIDC issuer URI, in a  valid URI format, that starts with`https`; for example,`https://example.com/oidc`. Note: For security reasons,``must use the HTTPS scheme.\n- ``: The OIDC client ID that is  registered with your OIDC IdP; the ID must match the`aud`claim  of the JWT that is issued by your IdP.\n- ``: Optional additional scopes to send to the OIDC IdP  for console (federated) or gcloud CLI browser-based sign-in.\n- ``: An [attribute mapping](/iam/docs/workforce-identity-federation#attribute-mappings) ;  for example:```\ngoogle.subject=assertion.sub,google.groups=assertion.group1,attribute.costcenter=assertion.costcenter\n```This example maps the IdP attributes`subject`,`assertion.group1`, and`costcenter`in the OIDC assertion to`google.subject`,`google.groups`, and`attribute.costcenter`attributes, respectively.\n- ``: An [attribute condition](/iam/docs/workforce-identity-federation#attribute-conditions) ;  for example,`assertion.role == 'gcp-users'`. This example condition ensures that only users with the role`gcp-users`can sign in using this provider.\n- ``: An optional path to a [locally uploaded OIDC JWKs](/iam/docs/workforce-identity-federation#json-web-keys) .  If this parameter isn't supplied, Google Cloud instead uses your IdP's `/.well-known/openid-configuration` path to  source the JWKs containing the public keys. For more information about locally uploaded OIDC JWKs, see [manage OIDC JWKs](/iam/docs/manage-workforce-identity-pools-providers#manage-oidc-keys) .\n **Note:** Local OIDC JWKs can be uploaded through [implicit flow or code flow](/iam/docs/workforce-identity-federation#oidc-flow-types) , but can only be used in [programmatic flow](/iam/docs/workforce-obtaining-short-lived-credentials) , in which you directly call the STS `/token` endpoint with a credential from the third-party IdP to exchange for a Google Cloud access token for your workforce pool.\nIn the command response,\nis the name of the pool; for example,\n`locations/global/workforcePools/enterprise-example-organization-employees`\n.\nThe prefix `gcp-` is reserved and can't be used in a pool or provider ID.\nFor OIDC federation, you can use `assertion.` `` : a string equal to the value of the like-named claim in the ID token payload.\n- In your SAML IdP, register a new application for Google Cloud workforce identity federation.\n- Set the audience for SAML assertions. It is usually the `SP Entity ID` field in your IdP configuration. You must set it to the following URL:```\nhttps://iam.googleapis.com/locations/global/workforcePools/WORKFORCE_POOL_ID/providers/PROVIDER_ID\n```\n- If you plan to set up user access to the console, in your SAML IdP, set the redirect URL or Assertion Consumer Service (ACS) URL field to the following URL:```\nhttps://auth.cloud.google/signin-callback/locations/global/workforcePools/WORKFORCE_POOL_ID/providers/WORKFORCE_PROVIDER_ID\n```See [Set up user access to the console](/iam/docs/workforce-console-sso) for more details on configuring console sign-in.\n- In Google Cloud, create a SAML workforce identity pool provider using your IdP's SAML metadata document. You can download the SAML metadata XML document from your IdP. The document must include at least the following:- A SAML entity ID for your IdP.\n- The single-sign-on URL for your IdP.\n- At least one signing public key. See [Key requirements](#key-requirements) later in this guide for details on signing keys.\nTo configure the SAML provider using the Google Cloud console, do the following:- In the Google Cloud console, go to the **Workforce Identity Pools** page: [Go to Workforce Identity Pools](https://console.cloud.google.com/iam-admin/workforce-identity-pools) \n- In the **Workforce Identity Pools** table, select the pool for which you want to create the provider.\n- In the **Providers** table, click **Add Provider** .\n- In **Select a protocol** , select **SAML** .\n- In **Create a pool provider** do the following:- In **Name** , enter a name for the provider.\n- Optional: In **Description** , enter a description for the provider.\n- In **IDP metadata file (XML)** , select the metadata XML file that you generated earlier in this guide.\n- Ensure that **Enabled provider** is enabled.\n- Click **Continue** .\n- In **Configure provider** , do the following:- In **Attribute mapping** , enter a CEL expression for `google.subject` .\n- Optional: To enter other mappings, click **Add mapping** and enter other mappings\u2014for example:```\ngoogle.subject=assertion.subject,google.groups=assertion.attributes['https://example.com/aliases'],attribute.costcenter=assertion.attributes.costcenter[0]\n```This example maps the IdP attributes`assertion.subject`,`assertion.attributes['https://example.com/aliases']`, and`assertion.attributes.costcenter[0]`to the Google Cloud attributes`google.subject`,`google.groups`, and`google.costcenter`, respectively.\n- Optional: To add an attribute condition, click **Add condition** and enter a CEL expression representing an attribute condition. For example, to limit the `ipaddr` attribute to a certain IP range you can set the condition `assertion.attributes.ipaddr.startsWith('98.11.12.')` . This example condition ensures that only users with an IP address that starts with `98.11.12.` can sign in using this workforce provider.\n- Click **Continue** .\n- To create the provider, click **Submit** .\nTo configure the SAML provider using the gcloud CLI, do the following:\n```\n\u00a0 gcloud iam workforce-pools providers create-saml PROVIDER_ID \\\u00a0 \u00a0 \u00a0 --workforce-pool=WORKFORCE_POOL_ID \\\u00a0 \u00a0 \u00a0 --display-name=\"DISPLAY_NAME\" \\\u00a0 \u00a0 \u00a0 --description=\"DESCRIPTION\" \\\u00a0 \u00a0 \u00a0 --idp-metadata-path=METADATA_FILE_PATH \\\u00a0 \u00a0 \u00a0 --attribute-mapping=\"ATTRIBUTE_MAPPING\" \\\u00a0 \u00a0 \u00a0 --attribute-condition=\"ATTRIBUTE_CONDITION\" \\\u00a0 \u00a0 \u00a0 --location=global\n```\nReplace the following:- ``: The provider ID.\n- ``: The pool ID.\n- ``The display name for the provider; for example,`idp-eu-employees`.\n- ``: The description for the workforce identity pool provider; for example,`IdP for Partner Example Organization EU employees`.\n- ``: The file path of the SAML metadata.\n- `` : The [attribute mapping](/iam/docs/workforce-identity-federation#attribute-mappings) ; for example:```\ngoogle.subject=assertion.subject,google.groups=assertion.attributes['https://example.com/aliases'],attribute.costcenter=assertion.attributes.costcenter[0]\n```This example maps the IdP attributes`assertion.subject`,`assertion.attributes['https://example.com/aliases']`, and`assertion.attributes.costcenter[0]`to the Google Cloud attributes`google.subject`,`google.groups`, and`google.costcenter`, respectively.\n- `` : An [attribute condition](/iam/docs/workforce-identity-federation#attribute-conditions) . For example, to limit the `ipaddr` attribute to a certain IP range you can set the condition `assertion.attributes.ipaddr.startsWith('98.11.12.')` . This example condition ensures that only users with an IP address that starts with `98.11.12.` can sign in using this workforce provider.\nIt can take a few minutes for the provider to begin accepting requests.\nFor SAML federation, you can use the following keywords in attribute mappings and conditions:- `assertion.subject`: a string equal to the`NameID`attribute in the SAML assertion.\n- `assertion.attributes.` ``: a string list equal to the values of the like-named attributes in the SAML assertion.### Optional: Accept encrypted SAML assertions from your IdPTo enable your SAML 2.0 IdP to produce encrypted SAML assertions that can be accepted by workforce identity federation, do the following:\n- In workforce identity federation, do the following:\n- Create an asymmetric key pair for your workforce identity pool provider.\n- Download a certificate file that contains the public key.\n- Configure your SAML IdP to use the public key to encrypt SAML assertions it issues.\n- In your IdP, do the following:\n- Enable assertion encryption, also known as token encryption.\n- Upload the public key that you created in workforce identity federation.\n- Confirm that your IdP produces encrypted SAML assertions.\nNote that, even with SAML encryption provider keys configured, workforce identity federation can still process a plaintext assertion.\nThis section guides you through creating an asymmetric key pair that enables workforce identity federation to accept encrypted SAML assertions.\nGoogle Cloud uses the private key to decrypt the SAML assertions that your IdP issues. To create an asymmetric key pair for use with SAML encryption, run the following command. To learn more, see [Supported SAML encryption algorithms](#supported-saml-encryption-algorithms) .\n```\ngcloud iam workforce-pools providers keys create KEY_ID \\\u00a0 \u00a0 --workforce-pool WORKFORCE_POOL_ID \\\u00a0 \u00a0 --provider PROVIDER_ID \\\u00a0 \u00a0 --location global \\\u00a0 \u00a0 --use encryption \\\u00a0 \u00a0 --spec KEY_SPECIFICATION\n```\nReplace the following:\n- ``: a key name of your choice\n- ``: the pool ID\n- ``: the provider ID\n- ``: the key specification, which can be one of`rsa-2048`,`rsa-3072`, and`rsa-4096`.\nAfter the key pair is created, to download the public key into a certificate file, execute the following command. Only workforce identity federation has access to the private key.\n```\ngcloud iam workforce-pools providers keys describe KEY_ID \\\u00a0 \u00a0 --workforce-pool WORKFORCE_POOL_ID \\\u00a0 \u00a0 --provider PROVIDER_ID \\\u00a0 \u00a0 --location global \\\u00a0 \u00a0 --format \"value(keyData.key)\" \\\u00a0 \u00a0 > CERTIFICATE_PATH\n```\nReplace the following:\n- ``: the key name\n- ``: the pool ID\n- ``: the provider ID\n- ``: the path to write the certificate to\u2014for example,`saml-certificate.cer`or`saml-certificate.pem`\nConfigure your SAML IdP to use the public certificate downloaded from the last step to encrypt the SAML assertions that it issues. Consult your IdP team for specific instructions.\nAfter you configure your IdP to encrypt SAML assertions, we recommend that you check to make sure that the assertions it generates are actually encrypted. Even with SAML assertion encryption configured, workforce identity federation can still process plaintext assertions.\nTo delete SAML encryption keys run the following command:\n```\n\u00a0 gcloud iam workforce-pools providers keys delete KEY_ID \\\u00a0 \u00a0 \u00a0 --workforce-pool WORKFORCE_POOL_ID \\\u00a0 \u00a0 \u00a0 --provider PROVIDER_ID \\\u00a0 \u00a0 \u00a0 --location global\n```\nReplace the following:\n- ``: the key name\n- ``: the pool ID\n- ``: the provider ID\nWorkforce identity federation supports the following key transport algorithms:- [http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p](http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p) \n- [http://www.w3.org/2009/xmlenc11#rsa-oaep\"](http://www.w3.org/2009/xmlenc11#rsa-oaep) \n- [http://www.w3.org/2001/04/xmlenc#rsa-1_5\"](http://www.w3.org/2001/04/xmlenc#rsa-1_5) \nWorkforce identity federation supports the following block encryption algorithms:- [http://www.w3.org/2001/04/xmlenc#aes128-cbc](http://www.w3.org/2001/04/xmlenc#aes128-cbc) \n- [http://www.w3.org/2001/04/xmlenc#aes192-cbc](http://www.w3.org/2001/04/xmlenc#aes192-cbc) \n- [http://www.w3.org/2001/04/xmlenc#aes256-cbc](http://www.w3.org/2001/04/xmlenc#aes256-cbc) \n- [http://www.w3.org/2009/xmlenc11#aes128-gcm](http://www.w3.org/2009/xmlenc11#aes128-gcm) \n- [http://www.w3.org/2009/xmlenc11#aes256-gcm](http://www.w3.org/2009/xmlenc11#aes256-gcm) \nThe following key specifications apply to SAML X.509 signing keys:- An RSA public key that is wrapped in an [X.509 v3 certificate](https://tools.ietf.org/html/rfc5280) .\n- Certificate validity requirements:- `notBefore`: a timestamp that is no more than 7 days in the future\n- `notAfter`: a timestamp that is no more than 15 years in the future\n- Recommended algorithms:- [RSAwithSHA256](https://www.w3.org/TR/xmldsig-core1/#sec-PKCS1) (supported key sizes (bits): 2048, 3072, 4096)\n- [ECDSAwithSHA256](https://www.w3.org/TR/xmldsig-core1/#sec-ECDSA) \nA workforce identity pool provider can be configured with at most three signing keys at a given time. When multiple keys exist, Google Cloud iterates through them and attempts to use each non-expired key to fulfill a token exchange request.\nAs a security best practice, we strongly recommend that you don't reuse the same key pair with other services. **Important:** To ensure that your workforce users' access isn't disrupted when your keys expire, we recommend that you regularly update your keys. The public signing keys used to validate SAML assertion signatures have an expiration date. After the expiration date, the keys can't be used for token exchanges.\nTo update your IdP's signing keys, do the following:- Create a new asymmetric key pair and configure the SAML identity provider with the key pair. You initially mark it as inactive before activating it in a later step.\n- Download a SAML metadata XML document from your IdP. **Note:** The document must contain both the existing signing key and the newly created signing key.\n- Update the workforce identity pool provider resource using the SAML metadata document. When multiple keys exist, Google Cloud iterates through each non-expired key and attempts to it to fulfill a token exchange request.To update the workforce identity pool provider with the SAML metadata, execute the following command.```\ngcloud iam workforce-pools providers update-saml PROVIDER_ID \\\u00a0 \u00a0 --workforce-pool=WORKFORCE_POOL_ID \\\u00a0 \u00a0 --idp-metadata-path=SAML_METADATA_FILE_PATH \\\u00a0 \u00a0 --location=global\n```Replace the following:- ``: the provider ID\n- ``: the workforce identity pool ID\n- ``: the path to the SAML metadata file\n- Wait for the operation returned from the previous step to complete (the operation is marked as done), and then in your SAML IdP, activate the new signing key. The old signing key is marked as inactive. Assertions issued by your IdP are signed using the new key.\nThe following steps are optional, but we recommend you perform them as a best practice:- Delete the old, now inactive, signing key from your IdP.\n- Download the SAML metadata XML document from your IdP.\n- Update the workforce identity pool provider resource using the SAML metadata document. Google Cloud refuses assertions that are signed with the expired signing key. To update the document, execute the following command:```\ngcloud iam workforce-pools providers update-saml PROVIDER_ID \\\u00a0 \u00a0 --workforce-pool=WORKFORCE_POOL_ID \\\u00a0 \u00a0 --idp-metadata-path=SAML_METADATA_FILE_PATH \\\u00a0 \u00a0 --location=global\n```Replace the following:- ``: the provider ID\n- ``: the workforce identity pool ID\n- ``: the SAML metadata file path\n### Key deletion constraintGoogle Cloud refuses assertions signed with a deleted key.\n **Caution:** Accidentally deleting a key that is still in use can lead to outages. You can only update a workforce identity pool provider resource if the SAML metadata contains at least one non-expired signing key. This restriction is skipped if all existing signing keys are expired.\n## Represent workforce pool users in IAM policies\nThe following table shows the principal identifiers that you use to grant roles to a single user, a group of users, users carrying a particular claim, or all users from a workforce pool.\n**Note:** You can't grant the Owner role ( `roles/owner` ) to a workforce user on projects.\n| Identities            | Identifier format                         |\n|:---------------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------|\n| Single identity in a workforce identity pool    | principal://iam.googleapis.com/locations/global/workforcePools/POOL_ID/subject/SUBJECT_ATTRIBUTE_VALUE    |\n| All workforce identities in a group      | principalSet://iam.googleapis.com/locations/global/workforcePools/POOL_ID/group/GROUP_ID       |\n| All workforce identities with a specific attribute value | principalSet://iam.googleapis.com/locations/global/workforcePools/POOL_ID/attribute.ATTRIBUTE_NAME/ATTRIBUTE_VALUE |\n| All identities in a workforce identity pool    | principalSet://iam.googleapis.com/locations/global/workforcePools/POOL_ID/*          |\n## Grant IAM roles to principals\nYou can grant roles to principals, such as single identities, groups of identities, or an entire pool.\nTo grant a role on a project to a principal, execute the following command:\n```\ngcloud projects add-iam-policy-binding PROJECT_ID \\\u00a0 \u00a0 --role=\"ROLE\" \\\u00a0 \u00a0 --member=\"PRINCIPAL\"\n```\nReplace the following:\n- ``: the project ID\n- ``: the role to set\n- ``: the principal; see [Representing workforce identity pool users in IAM policies](#representing-workforce-users) .\nIn the example that follows, the command grants the Storage Admin ( `roles/storage.admin` ) to all identities within the group `` :\n```\ngcloud projects add-iam-policy-binding my-project \\\u00a0 \u00a0 --role=\"roles/storage.admin\" \\\u00a0 \u00a0 --member=\"principalSet://iam.googleapis.com/locations/global/workforcePools/WORKFORCE_POOL_ID/group/GROUP_ID\"\n```\nFor more information about the principal format, see [Represent workforce identity pool users in IAM policies](#representing-workforce-users) .\n## Delete users\nWorkforce identity federation creates user metadata and resources for federated user identities. If you choose to delete users, in your IdP, for example, you must also explicitly delete these resources in Google Cloud. To do so, see [Delete workforce identity federation users and their data](/iam/docs/workforce-delete-user-data) .\nYou might see resources continue to be associated with a user that was deleted. This is because deleting user metadata and resources requires a long-running operation. After you initiate a deletion of a user's identity, processes that the user initiated before the deletion can continue to run until the processes complete or are canceled.\n## What's next\n- [Obtain short-lived credentials for workforce identity federation](/iam/docs/workforce-obtaining-short-lived-credentials) \n- [Manage workforce identity pool providers](/iam/docs/manage-workforce-identity-pools-providers) \n- [Delete workforce identity federation users and their data](/iam/docs/workforce-delete-user-data) \n- Learn which Google Cloud products [support workforce identity federation](/iam/docs/federated-identity-supported-services) \n- [Set up user access to console (federated)](/iam/docs/workforce-console-sso)", "guide": "IAM"}