{"title": "IAM - Manage access to other resources", "url": "https://cloud.google.com/iam/docs/manage-access-other-resources", "abstract": "# IAM - Manage access to other resources\nThis page describes the general process for granting, changing, and revoking access to resources that accept allow policies.\n**Note:** The process for managing access to certain resources might vary slightly from the process described on this page. For resource-specific instructions, see the following guides:- [Manage access to  projects, folders, and organizations](/iam/docs/granting-changing-revoking-access) \n- [Manage access to  service accounts](/iam/docs/manage-access-service-accounts) \nIn Identity and Access Management (IAM), access is granted through , also known as IAM policies. An allow policy is attached to a Google Cloud resource. Each allow policy contains a collection of that associate one or more principals, such as users or service accounts, with an IAM role. These role bindings grant the specified roles to the principals, both on the resource that the allow policy is attached to and on all of that resource's [descendants](/resource-manager/docs/cloud-platform-resource-hierarchy) . For more information about allow policies, see [Understanding allow policies](/iam/docs/policies) .\nThis page describes how to manage access to resources using the Google Cloud console, the Google Cloud CLI, and the REST API. You can also manage access using the Google Cloud client libraries.\n**Note:** You can also use deny policies to prevent principals from using specific IAM permissions. For more information, see [Deny policies](/iam/docs/deny-overview) .\n", "content": "## Before you begin\nReview the list of [resource types that accept allow policies](/iam/docs/resource-types-with-policies) .\n### Required permissions\nTo manage access to a resource, you need permissions to get the resource, and to get and set the allow policy for the resource. These permissions have the following form, where `` is the name of the service that owns the resource and `` is the name of the resource type that you want to manage access to:\n- `` `.` `` `.get`\n- `` `.` `` `.getIamPolicy`\n- `` `.` `` `.setIamPolicy`\nFor example, to manage access to a Compute Engine instance, you need the following permissions:\n- `compute.instances.get`\n- `compute.instances.getIamPolicy`\n- `compute.instances.setIamPolicy`\nTo gain the required permissions, ask your administrator to grant you a predefined or custom role that includes the permissions. For example, your administrator could grant you the Security Admin role ( `roles/iam.securityAdmin` ), which includes permissions to manage access to almost all Google Cloud resources.\n**Note:** When you create some resources, such as projects, roles might be automatically granted on the resources. These roles are granted even if you do not have permission to manage the allow policy for the new resource. For more information, see [Default policies](/iam/docs/policies#default) .\n## View current access\nThe following section shows you how to use the Google Cloud console, the gcloud CLI, and the REST API to view who has access to a resource. You can also view access by using the Google Cloud client libraries to get the resource's allow policy.\n**Note:** The Google Cloud console shows access in a list form, rather than directly showing the resource's allow policy.- In the Google Cloud console, go to the page that lists the resource that you want to view access to.For example, to manage access to a Compute Engine instance, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- Select the checkbox next to the resource that you want to view access to.\n- Ensure that the info panel is visible. If it is not visible, click **Show info panel** . The info panel's **permissions** tab lists all principals who have access to the resource.If the **Show inherited permissions** switch is on, the list includes principals with inherited roles; that is, principals whose access comes from roles on parent resources rather than roles on the resource itself. For more information about policy inheritance, see [Policy inheritance and theresource hierarchy](/iam/docs/policies#inheritance) .\nTo see who has access to your resource, get the allow policy for the resource. To learn how to interpret allow policies, see [Understanding allow policies](/iam/docs/policies) .\n **Note:** A resource's allow policy does not show any roles gained through [policy inheritance](/iam/docs/policies#inheritance) . To view inherited roles, use the Google Cloud console, or follow the instructions on [Viewing effective IAM policies](/asset-inventory/docs/view-effective-iam-policies) .To get the allow policy for the resource, run the `get-iam-policy` command for the resource.\nThe format for this command varies depending on the resource type you're managing access to. To find the format for your resource, find the reference for the resource's `get-iam-policy` command in the [Google Cloud CLIreference](/sdk/gcloud/reference) . This reference is organized by service, then resource. For example, to get the allow policy of a Compute Engine VM instance, follow the format described in the [gcloud compute instances get-iam-policyreference](/sdk/gcloud/reference/compute/instances/get-iam-policy) .\nOptionally, add the following arguments to the command to specify the format and export the results:\n```\n--format=FORMAT > PATH\n```\nProvide the following values:- ``: The desired format for the policy. Use`json`or`yaml`.\n- ``: The path to a new output file for the policy.\nWhen you run the command, the resource's allow policy is either printed to the console or exported to the specified file.To see who has access to your resource, get the resource's allow policy. To learn how to interpret allow policies, see [Understanding allow policies](/iam/docs/policies) .\n **Note:** A resource's allow policy does not show any roles gained through [policy inheritance](/iam/docs/policies#inheritance) . To view inherited roles, use the Google Cloud console, or follow the instructions on [Viewing effective IAM policies](/asset-inventory/docs/view-effective-iam-policies) .To get the resource's allow policy, use the resource's `getIamPolicy` method.\nThe HTTP method, URL, and request body depend on the resource that you want to view access to. To find these details, find the API reference for the service that owns the resource, then find the reference for the resource's `getIamPolicy` method. For example, the HTTP method, URL, and request body for a Compute Engine instance are specified in the [instances getIamPolicyreference](/compute/docs/reference/rest/v1/instances/getIamPolicy) .\nThe response for any resource's `getIamPolicy` method contains the resource's allow policy.\n## Grant or revoke a single role\nYou can use the Google Cloud console and the gcloud CLI to quickly grant or revoke a single role for a single principal, without editing the resource's allow policy directly. Common types of principals include Google accounts, service accounts, Google groups, and domains. For a list of all principal types, see [Concepts related to identity](/iam/docs/overview#concepts_related_identity) .\n**Note:** In general, policy changes take effect within 2 minutes. However, in some cases, it can take 7 minutes or more for changes to propagate across the system.\nIf you need help to identify the most appropriate predefined role, see [Choose predefined roles](/iam/docs/choose-predefined-roles) .\n### Grant a single role\nTo grant a single role to a principal, do the following:\n- In the Google Cloud console, go to the page listing the resource that you want to view access to.For example, to manage access to a Compute Engine instance, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- Select the checkbox next to the resource that you want to manage access to.\n- Ensure that the info panel is visible. If it is not visible, click **Show info panel** .\n- Select a principal to grant a role to:- To grant a role to a principal who already has other roles on the resource, find a row containing the principal, click edit **Editprincipal** in that row, and click add **Add anotherrole** . **Note:** You cannot edit inherited roles when managing access to a resource. To edit inherited roles, go to the resource where the role was granted.\n- To grant a role to a principal who does not already have other roles on the resource, click person_add **Addprincipal** , then enter the principal's email address or other identifier.\n- Select a role to grant from the drop-down list. For best security practices, choose a role that includes only the permissions that your principal needs.\n- Optional: Add a [condition](/iam/docs/conditions-overview) to the role.\n- Click **Save** . The principal is granted the role on the resource.\nTo quickly grant a role to a principal, run the `add-iam-policy-binding` command.\nThe format for this command varies depending on the resource type you're managing access to. To find the format for your resource, find the reference for the resource's `add-iam-policy-binding` command in the [Google Cloud CLIreference](/sdk/gcloud/reference) . This reference is organized by service, then resource. For example, to grant a principal a role on a Compute Engine instance, follow the format described in the [gcloud compute instances add-iam-policy-binding reference](/sdk/gcloud/reference/compute/instances/add-iam-policy-binding) .\n### Revoke a single role\nTo revoke a single role from a principal, do the following:\n- In the Google Cloud console, go to the page listing the resource that you want to revoke access from.For example, to manage access to a Compute Engine instance, go to the **VM instances** page: [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- Select the checkbox next to the resource that you want to manage access to.\n- Ensure that the info panel is visible. If it is not visible, click **Show info panel** .\n- Find the row containing the principal, then click edit **Editprincipal** in that row. **Note:** You cannot edit inherited roles when managing access to a resource. To edit inherited roles, go to the resource where the role was granted.\n- Click the **Delete** delete button for the role that you want to revoke, and then click **Save** .\nTo quickly revoke a role from a principal, run the `remove-iam-policy-binding` command.\nThe format for this command varies depending on the resource type you're managing access to. To find the format for your resource, find the reference for the resource's `remove-iam-policy-binding` command in the [Google Cloud CLIreference](/sdk/gcloud/reference) . This reference is organized by service, then resource. For example, to grant a principal a role on a Compute Engine instance, follow the format described in the [gcloud compute instancesremove-iam-policy-binding reference](/sdk/gcloud/reference/compute/instances/remove-iam-policy-binding) .\n## Grant or revoke multiple roles using Google Cloud console\nYou can use the Google Cloud console to grant and revoke multiple roles for a single principal:\n- In the Google Cloud console, go to the page listing the resource that you want to view access to.For example, to manage access to a Compute Engine instance, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- Select the checkbox next to the resource that you want to manage access to.\n- If the info panel is not visible, click **Show info panel** .\n- Select the principal whose roles you want to modify:- To modify roles for a principal who already has roles on the resource, find a row containing the principal, click edit **Editprincipal** in that row, and click add **Add anotherrole** . **Note:** You cannot edit inherited roles when managing access to a resource. To edit inherited roles, go to the resource where the role was granted.\n- To grant roles to a principal who doesn't have any existing roles on the resource, click person_add **Addprincipal** , then enter the principal's email address or other identifier.\n- Modify the principal's roles:- To grant a role to a principal who doesn't have any existing roles on the resource, click **Select a role** , then select a role to grant from the drop-down list.\n- To grant an additional role to the principal, click **Add another role** , then select a role to grant from the drop-down list.\n- To replace one of the principal's roles with a different role, click the existing role, then choose a different role to grant from the drop-down list.\n- To revoke one of the principal's roles, click the **Delete** deletebutton for each role that you want to revoke.\nYou can also [add a condition](/iam/docs/managing-conditional-role-bindings#add) to a role, [modify a role'scondition](/iam/docs/managing-conditional-role-bindings#modify) , or [remove a role'scondition](/iam/docs/managing-conditional-role-bindings#removing) .\n- Click **Save** .\n[](None)\n## Grant or revoke multiple roles programmatically\nTo make large-scale access changes that involve granting and revoking multiple roles for multiple principals, use the pattern to update the resource's allow policy:\n- Read the current allow policy by calling`getIamPolicy()`.\n- Edit the allow policy, either by using a text editor or programmatically, to add or remove any principals or role bindings.\n- Write the updated allow policy by calling`setIamPolicy()`.\nThis section shows how to use the gcloud CLI and the REST API to update the allow policy. You can also update the allow policy using the Google Cloud client libraries.\n**Note:** In general, policy changes take effect within 2 minutes. However, in some cases, it can take 7 minutes or more for changes to propagate across the system.\n### Get the current allow policy\nTo get the allow policy for the resource, run the `get-iam-policy` command for the resource.\nThe format for this command varies depending on the resource type you're managing access to. To find the format for your resource, find the reference for the resource's `get-iam-policy` command in the [Google Cloud CLIreference](/sdk/gcloud/reference) . This reference is organized by service, then resource. For example, to get the allow policy of a Compute Engine VM instance, follow the format described in the [gcloud compute instances get-iam-policyreference](/sdk/gcloud/reference/compute/instances/get-iam-policy) .\nOptionally, add the following arguments to the command to specify the format and export the results:\n```\n--format=FORMAT > PATH\n```\nProvide the following values:- ``: The desired format for the allow policy. Use`json`or`yaml`.\n- ``: The path to a new output file for the allow policy.\nWhen you run the command, the resource's allow policy is either printed to the console or exported to the specified file.To get the resource's allow policy, use the resource's `getIamPolicy` method.\nThe HTTP method, URL, and request body depend on the resource that you want to view access to. To find these details, find the API reference for the service that owns the resource, then find the reference for the resource's `getIamPolicy` method. For example, the HTTP method, URL, and request body for a Compute Engine VM instance are specified in the [instances getIamPolicy reference](/compute/docs/reference/rest/v1/instances/getIamPolicy) .\nThe response for any resource's `getIamPolicy` method contains the resource's allow policy. Save the response in a file of the appropriate type ( `json` or `yaml` ).\n### Modify the allow policy\nProgrammatically or using a text editor, modify the local copy of your resource's allow policy to reflect the roles you want to grant or revoke.\nTo ensure that you do not overwrite other changes, do not edit or remove the allow policy's `etag` field. The `etag` field identifies the current state of the allow policy. When you [set the updated allow policy](#setting-policy) , IAM compares the `etag` value in the request with the existing `etag` , and only writes the allow policy if the values match.\n**Important:** None of your changes will take effect until you [set the updated allow policy](#setting-policy) .\nTo edit the roles that an allow policy grants, you need to edit the role bindings in the allow policy. Role bindings have the following format:\n```\n{\u00a0 \"role\": \"ROLE_NAME\",\u00a0 \"members\": [\u00a0 \u00a0 \"PRINCIPAL_1\",\u00a0 \u00a0 \"PRINCIPAL_2\",\u00a0 \u00a0 ...\u00a0 \u00a0 \"PRINCIPAL_N\"\u00a0 ],\u00a0 \"conditions:\" {\u00a0 \u00a0 CONDITIONS\u00a0 }}\n```\nThe placeholders have the following values:\n- `` : The name of the role that you want to grant. Use one of the following formats:- Predefined roles:`roles/` `` `.` ``\n- Project-level custom roles:`projects/` `` `/roles/` ``\n- Organization-level custom roles:`organizations/` `` `/roles/` ``\nFor a list of predefined roles, see [Understandingroles](/iam/docs/understanding-roles) .\n- `` , `` , `...` `` : Identifiers for the principals that you want to grant the role to.Principal identifiers usually have the following form: `` `:` `` . For example, `user:my-user@example.com` . For a full list of the values that `` can have, see the [Policy Binding reference](/iam/docs/reference/rest/v1/Policy#Binding) .For the principal type `user` , the domain name in the identifier must be a Google Workspace domain or a Cloud Identity domain. To learn how to set up a Cloud Identity domain, see the [overview of Cloud Identity](/identity/docs/overview) .\n- `` : Optional. Any [conditions](/iam/docs/conditions-overview) that specify when access will be granted.To grant roles to your principals, modify the role bindings in the allow policy. To learn what roles you can grant, see [Understanding roles](/iam/docs/understanding-roles) , or [view grantable roles](/iam/docs/viewing-grantable-roles) for the resource. If you need help to identify the most appropriate predefined roles, see [Choose predefined roles](/iam/docs/choose-predefined-roles) .\nOptionally, you can use [conditions](/iam/docs/conditions-overview) to grant roles only when certain requirements are met.\nTo grant a role that is already included in the allow policy, add the principal to an existing role binding:\nEdit the allow policy by adding the principal to an existing role binding. Note that this change will not take effect until you [set the updated allow policy](#setting-policy) .\nFor example, imagine the allow policy contains the following role binding, which grants the Compute Instance Admin role ( `roles/compute.instanceAdmin` ) to `kai@example.com` :\n```\n{\u00a0 \"role\": \"roles/compute.instanceAdmin\",\u00a0 \"members\": [\u00a0 \u00a0 \"user:kai@example.com\"\u00a0 ]}\n```\nTo grant that same role to `raha@example.com` , add `raha@example.com` to the existing role binding:\n```\n{\u00a0 \"role\": \"roles/compute.instanceAdmin\",\u00a0 \"members\": [\u00a0 \u00a0 \"user:kai@example.com\",\u00a0 \u00a0 \"user:raha@example.com\"\u00a0 ]}\n```Edit the allow policy by adding the principal to an existing role binding. Note that this change will not take effect until you [set the updated allow policy](#setting-policy) .\nFor example, imagine the allow policy contains the following role binding, which grants the Compute Instance Admin role ( `roles/compute.instanceAdmin` ) to `kai@example.com` :\n```\n{\u00a0 \"role\": \"roles/compute.instanceAdmin\",\u00a0 \"members\": [\u00a0 \u00a0 \"user:kai@example.com\"\u00a0 ]}\n```\nTo grant that same role to `raha@example.com` , add `raha@example.com` to the existing role binding:\n```\n{\u00a0 \"role\": \"roles/compute.instanceAdmin\",\u00a0 \"members\": [\u00a0 \u00a0 \"user:kai@example.com\",\u00a0 \u00a0 \"user:raha@example.com\"\u00a0 ]}\n```\nTo grant a role that is not yet included in the allow policy, add a new role binding:\nEdit the allow policy by adding a new role binding that grants the role to the principal. This change will not take effect until you [set the updated allow policy](#setting-policy) .\nFor example, to grant the Compute Load Balancer Admin role ( `roles/compute.loadBalancerAdmin` ) to `raha@example.com` , add the following role binding to the `bindings` array for the allow policy:\n```\n{\u00a0 \"role\": \"roles/compute.loadBalancerAdmin\",\u00a0 \"members\": [\u00a0 \u00a0 \"user:raha@example.com\"\u00a0 ]}\n```Edit the allow policy by adding a new role binding that grants the role to the principal. This change will not take effect until you [set the updated allow policy](#setting-policy) .\nFor example, to grant the Compute Load Balancer Admin role ( `roles/compute.loadBalancerAdmin` ) to `raha@example.com` , add the following role binding to the `bindings` array for the allow policy:\n```\n{\u00a0 \"role\": \"roles/compute.loadBalancerAdmin\",\u00a0 \"members\": [\u00a0 \u00a0 \"user:raha@example.com\"\u00a0 ]}\n```\nTo revoke a role, remove the principal from the role binding. If there are no other principals in the role binding, remove the entire role binding.\n**Note:** Role bindings with no principals are not allowed and will result in an error when setting the allow policy.\nRevoke a role by editing the JSON or YAML allow policy returned by the `get-iam-policy` command. This change will not take effect until you [set the updated allow policy](#setting-policy) .\nTo revoke a role from a principal, delete the desired principals or bindings from the `bindings` array for the allow policy.Revoke a role by editing the JSON or YAML allow policy returned by the `get-iam-policy` command. This change will not take effect until you [set the updated allow policy](#setting-policy) .\nTo revoke a role from a principal, delete the desired principals or bindings from the `bindings` array for the allow policy.\n### Set the allow policy\nAfter you modify the allow policy to grant and revoke the desired roles, call `setIamPolicy()` to make the updates.\n**Warning:** Setting a new allow policy permanently overwrites the existing allow policy on the resource. To avoid removing role bindings unintentionally, always follow the read-modify-write pattern when updating an allow policy: read the existing allow policy, modify it as needed, and then write the updated version of the allow policy.\nTo set the allow policy for the resource, run the `set-iam-policy` command for the resource.\nThe format for this command varies depending on the resource type you're managing access to. To find the format for your resource, find the reference for the resource's `set-iam-policy` command in the [Google Cloud CLIreference](/sdk/gcloud/reference) . This reference is organized by service, then resource. For example, to get the allow policy of a Compute Engine VM instance, follow the format described in the [gcloud compute instances set-iam-policyreference](/sdk/gcloud/reference/compute/instances/set-iam-policy) .\nThe response for any resource's `set-iam-policy` command contains the resource's updated allow policy.\n **Note:** If you treat policies as code and store them in a version-control system, you should store the policy that is returned, not the policy that you sent in the request.To set the resource's allow policy, use the resource's `setIamPolicy` method.\nThe HTTP method, URL, and request body depend on the resource that you want to view access to. To find these details, find the API reference for the service that owns the resource, then find the reference for the resource's `setIamPolicy` method. For example, the HTTP method, URL, and request body for a Compute Engine VM instance are specified in the [instances setIamPolicy reference](/compute/docs/reference/rest/v1/instances/getIamPolicy) .\nThe response for any resource's `setIamPolicy` method contains the resource's updated allow policy.\n **Note:** If you treat policies as code and store them in a version-control system, you should store the policy that is returned, not the policy that you sent in the request.\n## What's next\n- Learn how to [manage access to projects, folders, andorganizations](/iam/docs/granting-changing-revoking-access) or how to [manage access to service accounts](/iam/docs/manage-access-service-accounts) .\n- Find out how to [choose the most appropriate predefined roles](/iam/docs/choose-predefined-roles) .\n- Use the [Policy Troubleshooter](/iam/docs/troubleshooting-access) to understand why a user does or doesn't have access to a resource or have permission to call an API.\n- Discover how to [view the roles that you can grant on a particularresource](/iam/docs/viewing-grantable-roles) .\n- Learn how to make a principal's access conditional with [conditional role bindings](/iam/docs/conditions-overview) .", "guide": "IAM"}