{"title": "IAM - Upload service account keys", "url": "https://cloud.google.com/iam/docs/keys-upload", "abstract": "# IAM - Upload service account keys\nThis page explains how to upload a public key for a service account. After you upload the public key, you can use the private key from the key pair to authenticate as the service account.\n**Note:** If you need to access resources from a workload that runs outside of Google Cloud, such as on Amazon Web Services (AWS) or Microsoft Azure, consider using [workload identity federation](/iam/docs/workload-identity-federation) instead of service account keys. Federation lets your workloads access resources directly, using a short-lived access token, and eliminates the maintenance and security burden associated with service account keys.\n", "content": "## Before you begin\n- Enable the IAM API. [Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=iam.googleapis.com&redirect=https://console.cloud.google.com) \n- Understand [service account credentials](/iam/docs/service-account-creds) .\n### Required roles\nTo get the permissions that you need to upload service account keys,   ask your administrator to grant you the [Service Account Key Admin ](https://cloud.google.com/iam/docs/understanding-roles#iam.serviceAccountKeyAdmin) ( `roles/iam.serviceAccountKeyAdmin` ) IAM role on the project, or the service account whose keys you want to manage.    For more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYou might also be able to get  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .\nFor more information, see [Service Accounts roles](/iam/docs/understanding-roles#service-accounts-roles) .\nIAM basic roles also contain permissions to manage service account keys. You should not grant basic roles in a production environment, but you can grant them in a development or test environment.\n## Upload a public key for a service account\nYou can upload the public key portion of a [user-managed key pair](/iam/docs/service-account-creds#user-managed) to associate it with a service account. After you upload the public key, you can use the private key from the key pair as a service account key.\nThe key you upload must be an RSA public key that is wrapped in an [X.509 v3 certificate](https://tools.ietf.org/html/rfc5280) and encoded in base64. You can use tools such as [OpenSSL](https://www.openssl.org/) to generate a key and certificate in this format.\n**Do not include any private information in the X.509 certificate.** Specifically, use a generic subject, and do not add any optional attributes. Certificates are publicly visible; any private information in the certificate is visible to anyone who retrieves the certificate. For more information, see [Avoid disclosing confidential information in uploaded X.509certificates](/iam/docs/best-practices-for-managing-service-account-keys#confidential-information) .\nFor example, the following command generates a 2048-bit RSA key pair and wraps the public key in a self-signed certificate that is valid for 365 days:\n```\nopenssl req -x509 -nodes -newkey rsa:2048 -days 365 \\\u00a0 \u00a0 -keyout /path/to/private_key.pem \\\u00a0 \u00a0 -out /path/to/public_key.pem \\\u00a0 \u00a0 -subj \"/CN=unused\"\n```\nYou can then upload the `public_key.pem` file as the public key for a service account.\n- In the Google Cloud console, go to the **Service accounts** page. [Go to Service accounts](https://console.cloud.google.com/iam-admin/serviceaccounts?walkthrough_id=iam--upload-service-account-keys&start_index=1#step_index=1) school The remaining steps will appear automatically in the Google Cloud console.\n- Select a project.\n- On the **Service accounts** page, click the email address of the service account that you want to upload a key for.\n- Click the **Keys** tab.\n- Click the **Add key** drop-down menu, then select **Upload existing key** .\n- Click **Browse** , then find and select your public key file. Alternatively, you can copy and paste the contents of your public key file into the **Paste existing key** box.\n- Click **Upload** .\nExecute the [gcloud iam service-accounts keys upload](/sdk/gcloud/reference/iam/service-accounts/keys/upload) command to upload a public key for signing service account keys.\nReplace the following values:- ``: The path to the file containing the key data to upload\u2014for example,`./public_key.pem`.\n- ``: The name of the service account to upload a key for.\n- ``: Your Google Cloud project ID.\n```\ngcloud iam service-accounts keys upload KEY_FILE \\\n --iam-account=SA_NAME@PROJECT_ID.iam.gserviceaccount.com\n```\nThe output contains a unique identifier for the uploaded key:\n```\nName: projects/PROJECT_ID/serviceAccounts/SA_NAME@PROJECT_ID.iam.gserviceaccount.com/keys/c7b74879da78e4cdcbe7e1bf5e129375c0bfa8d0\n```\nTo determine whether the command was successful, execute the [gcloud iam service-accounts keys list](/sdk/gcloud/reference/iam/service-accounts/keys/list) command:\n```\ngcloud iam service-accounts keys list \\\n --iam-account=SA_NAME@PROJECT_ID.iam.gserviceaccount.com\n```\nThe output will contain the same unique identifier that was returned after the key was created:\n| 0          | 1     | 2     | 3  |\n|:-----------------------------------------|:---------------------|:---------------------|:---------|\n| KEY_ID         | CREATED_AT   | EXPIRES_AT   | DISABLED |\n| c7b74879da78e4cdcbe7e1bf5e129375c0bfa8d0 | 2019-06-26T21:01:42Z | 9999-12-31T23:59:59Z | nan  |The ` [projects.serviceAccounts.keys.upload](/iam/docs/reference/rest/v1/projects.serviceAccounts.keys/upload) ` method uploads the public key from a user-managed key pair, and adds this key to the service account.\nBefore using any of the request data, make the following replacements:- ``: Your Google Cloud project ID. Project IDs are alphanumeric strings, like`my-project`.\n- ``: The name of the service account to associate the key with.\n- ``: The public key data for the key pair. Must be an RSA  public key that is wrapped in an X.509 v3 certificate. Encode the public key data in base64,  including the first line,`-----BEGIN CERTIFICATE-----`, and the last line,`-----END CERTIFICATE-----`.\nHTTP method and URL:\n```\nPOST https://iam.googleapis.com/v1/projects/PROJECT_ID/serviceAccounts/SA_NAME@PROJECT_ID.iam.gserviceaccount.com/keys:upload\n```\nRequest JSON body:\n```\n{\n \"publicKeyData\": \"PUBLIC_KEY_DATA\"\n}\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:\n```\n{\n \"name\": \"projects/my-project/serviceAccounts/my-service-account@my-project.iam.gserviceaccount.com/keys/c7b74879da78e4cdcbe7e1bf5e129375c0bfa8d0\",\n \"validAfterTime\": \"2020-05-17T19:31:19Z\",\n \"validBeforeTime\": \"2021-05-17T19:31:19Z\",\n \"keyAlgorithm\": \"KEY_ALG_RSA_2048\",\n \"keyOrigin\": \"USER_PROVIDED\",\n \"keyType\": \"USER_MANAGED\"\n}\n```\n## Disable public key uploads\nTo disable the ability to upload keys for your project, see [Restricting service account key upload](/resource-manager/docs/organization-policy/restricting-service-accounts#disable_service_account_key_upload) .\n## What's next\n- Learn how to [create and delete service account keys](/iam/docs/keys-create-delete) .\n- Learn how to [list and get service account keys](/iam/docs/keys-list-get) .\n- Learn about [alternatives to service account keys for authentication](/docs/authentication#auth-decision-tree) .\n- Learn how to use service account keys to [authenticate as a serviceaccount](/docs/authentication/provide-credentials-adc#wlif-key) .\n- Understand the [best practices for managing service accountkeys](/iam/docs/best-practices-for-managing-service-account-keys) .", "guide": "IAM"}