{"title": "IAM - Delete and undelete service accounts", "url": "https://cloud.google.com/iam/docs/service-accounts-delete-undelete", "abstract": "# IAM - Delete and undelete service accounts\nThis page explains how to delete and undelete service accounts using the Identity and Access Management (IAM) API, the Google Cloud console, and the `gcloud` command- line tool.\n", "content": "## Before you begin\n- Enable the IAM API. [Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=iam.googleapis.com&redirect=https://console.cloud.google.com) \n- Set up authentication.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.You can use the gcloud CLI samples on this page from  either of the following development environments:- **Cloud Shell** : To use an online terminal with the   gcloud CLI already set up, activate Cloud Shell.At the bottom of this page, a Cloud Shell session starts    and displays a command-line prompt. It can take a few seconds for    the session to initialize.\n- **Local shell** : To use the gcloud CLI in a local   development environment, [install](/sdk/docs/install) and [initialize](/sdk/docs/initializing) the gcloud CLI.\nTo use the C++ samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the .NET samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the Go samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the Java samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the Python samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```\n- Understand [IAM service accounts](/iam/docs/service-account-overview) \n### Required roles\nTo get the permissions that you need to delete and undelete service accounts,   ask your administrator to grant you the  following IAM roles on the project:\n- To delete service accounts: [Delete Service Accounts ](https://cloud.google.com/iam/docs/understanding-roles#iam.serviceAccountDeleter) (`roles/iam.serviceAccountDeleter`)\n- To delete and undelete service accounts: [Service Account Admin ](https://cloud.google.com/iam/docs/understanding-roles#iam.serviceAccountAdmin) (`roles/iam.serviceAccountAdmin`)\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYou might also be able to get  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .\nTo learn more about these roles, see [Service Accounts roles](/iam/docs/understanding-roles#service-accounts-roles) .\nIAM basic roles also contain permissions to manage service accounts. You should not grant basic roles in a production environment, but you can grant them in a development or test environment.\n## Delete a service account\nWhen you delete a service account, applications will no longer have access to Google Cloud resources through that service account. If you delete the default App Engine and Compute Engine service accounts, then the App Engine apps and Compute Engine VM instances that use those service accounts will no longer have access to resources in the project.\nDelete service accounts with caution. Make sure your critical applications are no longer using a service account before deleting it. If you're not sure whether a service account is being used, Google recommends [disabling the service account](/iam/docs/service-accounts-disable-enable#disabling) instead of deleting it. Disabled service accounts can be re-enabled if they are still needed.\nIf you want to restore a deleted service account, you can [undelete](#undeleting) it, if it's been 30 days or less since you deleted the service account. After 30 days, IAM permanently removes the service account. Google Cloud cannot recover the service account after it is permanently removed, even if you file a support request.\nTo further reduce the risk of deleting a necessary service account, you can also enable [change risk recommendations](/recommender/docs/change-risk-recommendations) . Change risk recommendations generate warnings when you try to delete service accounts that Google Cloud has identified as important.\nIf you delete a service account, then create a new service account with the same name, the new service account is treated as a separate identity; it does not inherit the roles granted to the deleted service account. In contrast, when you delete a service account, then undelete it, the service account's identity does not change, and the service account retains its roles.\nWhen a service account is deleted, its role bindings are not immediately removed; they are automatically purged from the system after a maximum of 60 days. Until that time, the service account appears in role bindings with a `deleted:` prefix and a `?uid=` `` suffix, where `` is a unique numeric ID for the service account.\nDeleted service accounts do not count towards your [service account quota](/iam/quotas) .\n- In the Google Cloud console, go to the **Service accounts** page. [Go to Service accounts](https://console.cloud.google.com/iam-admin/serviceaccounts) \n- Select a project.\n- Select the service account you want to delete, and then click **Delete** delete .\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Execute the ` [gcloud iam service-accounts delete](/sdk/gcloud/reference/iam/service-accounts/delete) ` command to delete a service account.Command:```\ngcloud iam service-accounts delete \\\n SA_NAME@PROJECT_ID.iam.gserviceaccount.com\n```Output:```\nDeleted service account SA_NAME@PROJECT_ID.iam.gserviceaccount.com\n```\nTo learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C++ API reference documentation](/cpp/docs/reference/iam/latest) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/iam/samples/iam_samples.cc) \n```\nnamespace iam = ::google::cloud::iam_admin_v1;[](std::string const& name) {\u00a0 iam::IAMClient client(iam::MakeIAMConnection());\u00a0 auto response = client.DeleteServiceAccount(name);\u00a0 if (!response.ok()) throw std::runtime_error(response.message());\u00a0 std::cout << \"ServiceAccount successfully deleted.\\n\";}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C# API reference documentation](https://developers.google.com/api-client-library/dotnet/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/iam/api/ServiceAccounts/ServiceAccountsDelete.cs) \n```\nusing System;using Google.Apis.Auth.OAuth2;using Google.Apis.Iam.v1;public partial class ServiceAccounts{\u00a0 \u00a0 public static void DeleteServiceAccount(string email)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 var credential = GoogleCredential.GetApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .CreateScoped(IamService.Scope.CloudPlatform);\u00a0 \u00a0 \u00a0 \u00a0 var service = new IamService(new IamService.Initializer\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HttpClientInitializer = credential\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 string resource = \"projects/-/serviceAccounts/\" + email;\u00a0 \u00a0 \u00a0 \u00a0 service.Projects.ServiceAccounts.Delete(resource).Execute();\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(\"Deleted service account: \" + email);\u00a0 \u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Go API reference documentation](https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/snippets/service_accounts_delete.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"google.golang.org/api/iam/v1\")// deleteServiceAccount deletes a service account.func deleteServiceAccount(w io.Writer, email string) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 service, err := iam.NewService(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"iam.NewService: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 _, err = service.Projects.ServiceAccounts.Delete(\"projects/-/serviceAccounts/\" + email).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"Projects.ServiceAccounts.Delete: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Deleted service account: %v\", email)\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Java API reference documentation](https://developers.google.com/api-client-library/java/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/api-client/src/main/java/iam/snippets/DeleteServiceAccount.java) \n```\nimport com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;import com.google.api.client.json.gson.GsonFactory;import com.google.api.services.iam.v1.Iam;import com.google.api.services.iam.v1.IamScopes;import com.google.auth.http.HttpCredentialsAdapter;import com.google.auth.oauth2.GoogleCredentials;import java.io.IOException;import java.security.GeneralSecurityException;import java.util.Collections;public class DeleteServiceAccount {\u00a0 // Deletes a service account.\u00a0 public static void deleteServiceAccount(String projectId, String serviceAccountName) {\u00a0 \u00a0 // String projectId = \"my-project-id\";\u00a0 \u00a0 // String serviceAccountName = \"my-service-account-name\";\u00a0 \u00a0 Iam service = null;\u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 service = initService();\u00a0 \u00a0 } catch (IOException | GeneralSecurityException e) {\u00a0 \u00a0 \u00a0 System.out.println(\"Unable to initialize service: \\n\" + e.toString());\u00a0 \u00a0 \u00a0 return;\u00a0 \u00a0 }\u00a0 \u00a0 String serviceAccountEmail = serviceAccountName + \"@\" + projectId + \".iam.gserviceaccount.com\";\u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 service\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .projects()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .serviceAccounts()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .delete(\"projects/-/serviceAccounts/\" + serviceAccountEmail)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .execute();\u00a0 \u00a0 \u00a0 System.out.println(\"Deleted service account: \" + serviceAccountEmail);\u00a0 \u00a0 } catch (IOException e) {\u00a0 \u00a0 \u00a0 System.out.println(\"Unable to delete service account: \\n\" + e.toString());\u00a0 \u00a0 }\u00a0 }\u00a0 private static Iam initService() throws GeneralSecurityException, IOException {\u00a0 \u00a0 // Use the Application Default Credentials strategy for authentication. For more info, see:\u00a0 \u00a0 // https://cloud.google.com/docs/authentication/production#finding_credentials_automatically\u00a0 \u00a0 GoogleCredentials credential =\u00a0 \u00a0 \u00a0 \u00a0 GoogleCredentials.getApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .createScoped(Collections.singleton(IamScopes.CLOUD_PLATFORM));\u00a0 \u00a0 // Initialize the IAM service, which can be used to send requests to the IAM API.\u00a0 \u00a0 Iam service =\u00a0 \u00a0 \u00a0 \u00a0 new Iam.Builder(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GoogleNetHttpTransport.newTrustedTransport(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GsonFactory.getDefaultInstance(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new HttpCredentialsAdapter(credential))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setApplicationName(\"service-accounts\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 return service;\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Python API reference documentation](https://developers.google.com/api-client-library/python/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/api-client/service_accounts.py) \n```\nimport osfrom google.oauth2 import service_account \u00a0# type: ignoreimport googleapiclient.discovery \u00a0# type: ignoredef delete_service_account(email: str) -> None:\u00a0 \u00a0 \"\"\"Deletes a service account.\"\"\"\u00a0 \u00a0 credentials = service_account.Credentials.from_service_account_file(\u00a0 \u00a0 \u00a0 \u00a0 filename=os.environ[\"GOOGLE_APPLICATION_CREDENTIALS\"],\u00a0 \u00a0 \u00a0 \u00a0 scopes=[\"https://www.googleapis.com/auth/cloud-platform\"],\u00a0 \u00a0 )\u00a0 \u00a0 service = googleapiclient.discovery.build(\"iam\", \"v1\", credentials=credentials)\u00a0 \u00a0 service.projects().serviceAccounts().delete(\u00a0 \u00a0 \u00a0 \u00a0 name=\"projects/-/serviceAccounts/\" + email\u00a0 \u00a0 ).execute()\u00a0 \u00a0 print(\"Deleted service account: \" + email)\n```The ` [serviceAccounts.delete](/iam/docs/reference/rest/v1/projects.serviceAccounts/delete) ` method deletes a service account.\nBefore using any of the request data, make the following replacements:- ``: Your Google Cloud project ID. Project IDs are alphanumeric strings, like`my-project`.\n- ``: The ID of your service account. This can either be the service account's email address in the form`` `@` `` `.iam.gserviceaccount.com`, or the service account's unique numeric ID.\nHTTP method and URL:\n```\nDELETE https://iam.googleapis.com/v1/projects/PROJECT_ID/serviceAccounts/SA_ID\n```\nTo send your request, expand one of these options:\nIf successful, the response body will be empty.\n## Undelete a service account\nIn some cases, you can use the `undelete` command to undelete a deleted service account. You can usually undelete a deleted service account if it meets these criteria:\n- **The service account was deleted less than 30 daysago.** After 30 days, IAM permanently removes the service account. Google Cloud cannot recover the service account after it is permanently removed, even if you file a support request.\n- **There is no existing service account with the same name as the deleted serviceaccount.** For example, suppose that you accidentally delete the service account `my-service-account@project-id.iam.gserviceaccount.com` . You still need a service account with that name, so you create a new service account with the same name, `my-service-account@project-id.iam.gserviceaccount.com` .The new service account does not inherit the permissions of the deleted service account. In effect, it is completely separate from the deleted service account. However, you cannot undelete the original service account, because the new service account has the same name.To address this issue, delete the new service account, then try to undelete the original service account.\nIf you are not able to undelete the service account, you can create a new service account with the same name; revoke all of the roles from the deleted service account; and grant the same roles to the new service account. For details, see [Policies with deleted principals](/iam/docs/policies#handle-deleted-members) .\n### Find a deleted service account's numeric ID\nWhen you undelete a service account, you must provide its numeric ID. The numeric ID is a 21-digit number, such as `123456789012345678901` , that uniquely identifies the service account. For example, if you delete a service account, then create a new service account with the same name, the original service account and the new service account will have different numeric IDs.\nIf you know that a binding in an allow policy includes the deleted service account, you can [get the allow policy](/iam/docs/granting-changing-revoking-access#getting-policy) , then find the numeric ID in the allow policy. The numeric ID is appended to the name of the deleted service account. For example, in this allow policy, the numeric ID for the deleted service account is `123456789012345678901` :\n```\n{\u00a0 \"version\": 1,\u00a0 \"etag\": \"BwUjMhCsNvY=\",\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"deleted:serviceAccount:my-service-account@project-id.iam.gserviceaccount.com?uid=123456789012345678901\"\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.serviceAccountUser\"\u00a0 \u00a0 },\u00a0 ]}\n```\nNumeric IDs are only appended to the names of deleted principals.\nAlternatively, you can search your audit logs for the `DeleteServiceAccount` operation that deleted the service account:\n- In the Google Cloud console, go to the **Logs explorer** page. [Go to Logs explorer](https://console.cloud.google.com/logs/query) \n- In the query editor, enter the following query, replacing `` with the email address of your service account (for example, `my-service-account@project-id.iam.gserviceaccount.com` ):```\nresource.type=\"service_account\"\nresource.labels.email_id=\"SERVICE_ACCOUNT_EMAIL\"\n\"DeleteServiceAccount\"\n```\n- If the service account was deleted more than an hour ago, click schedule **Last 1 hour** , select a longer period of time from the drop-down list, then click **Apply** .\n- Click **Run query** . The Logs Explorer displays the `DeleteServiceAccount` operations that affected service accounts with the name you specified.\n- Find and note the numeric ID of the deleted service account by doing one of the following:- If the search results include only one `DeleteServiceAccount` operation, find the numeric ID in the **Unique ID** field of the **Log fields** pane.\n- If the search results show more than one log, do the following:- Find the correct log entry. To find the correct log entry, click the keyboard_arrow_right expander arrow next to a log entry. Review the details of the log entry and determine whether the log entry shows the operation that you want to undo. Repeat this process until you find the correct log entry.\n- In the correct log entry, locate the service account's numeric ID. To locate the numeric ID, expand the log entry's `protoPayload` field, then find the `resourceName` field.The numeric ID is everything after `serviceAccounts` in the `resourceName` field.\n### Undelete the service account by numeric ID\nAfter you find the numeric ID for the deleted service account, you can try to undelete the service account.\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Execute the ` [gcloud beta iam service-accounts undelete](/sdk/gcloud/reference/beta/iam/service-accounts/undelete) ` command to undelete a service account.Command:```\ngcloud beta iam service-accounts undelete ACCOUNT_ID\n```Output:```\nrestoredAccount:\u00a0 \u00a0 email: SA_NAME@PROJECT_ID.iam.gserviceaccount.com\u00a0 \u00a0 etag: BwWWE7zpApg=\u00a0 \u00a0 name: projects/PROJECT_ID/serviceAccounts/SA_NAME@PROJECT_ID.iam.gserviceaccount.com\u00a0 \u00a0 oauth2ClientId: '123456789012345678901'\u00a0 \u00a0 projectId: PROJECT_ID\u00a0 \u00a0 uniqueId: 'ACCOUNT_ID'\n```\nThe ` [serviceAccounts.undelete](/iam/docs/reference/rest/v1/projects.serviceAccounts/undelete) ` method restores a deleted service account.\nBefore using any of the request data, make the following replacements:- ``: Your Google Cloud project ID. Project IDs are alphanumeric strings, like`my-project`.\n- ``: The unique numeric ID of the service account.\nHTTP method and URL:\n```\nPOST https://iam.googleapis.com/v1/projects/PROJECT_ID/serviceAccounts/SA_NUMERIC_ID:undelete\n```\nTo send your request, expand one of these options:\nIf the account can be undeleted, you receive a `200 OK` response code with details about the restored service account, like the following:\n```\n{\n \"restoredAccount\": {\n \"name\": \"projects/my-project/serviceAccounts/my-service-account@my-project.iam.gserviceaccount.com\",\n \"projectId\": \"my-project\",\n \"uniqueId\": \"123456789012345678901\",\n \"email\": \"my-service-account@my-project.iam.gserviceaccount.com\",\n \"displayName\": \"My service account\",\n \"etag\": \"BwUp3rVlzes=\",\n \"description\": \"A service account for running jobs in my project\",\n \"oauth2ClientId\": \"987654321098765432109\"\n }\n}\n```\n## What's next\n- Learn how to [list and edit service accounts](/iam/docs/service-accounts-list-edit) .\n- Review the process for [granting IAM roles to all types of principals](/iam/docs/granting-changing-revoking-access) , including service accounts.\n- Understand how to [attach service accounts to resources](/iam/docs/attach-service-accounts) .", "guide": "IAM"}