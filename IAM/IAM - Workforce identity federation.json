{"title": "IAM - Workforce identity federation", "url": "https://cloud.google.com/iam/docs/workforce-identity-federation", "abstract": "# IAM - Workforce identity federation\nThis document describes the key concepts of workforce identity federation.\n", "content": "## What is workforce identity federation?\nWorkforce identity federation lets you use an external identity provider (IdP) to authenticate and authorize a workforce\u2014a group of , such as employees, partners, and contractors\u2014using IAM, so that the users can access Google Cloud services. With workforce identity federation you don't need to synchronize user identities from your existing IdP to Google Cloud identities, as you would with Cloud Identity's [Google Cloud Directory Sync (GCDS)](https://tools.google.com/dlpage/dirsync/) . Workforce identity federation extends Google Cloud's identity capabilities to support syncless, attribute-based single sign on.\n**Note:** In some IdPs, attributes are also known as claims or assertions.\nAfter user authentication, information that is received from the IdP is used to determine the scope of access to the Google Cloud resources.\nYou can use workforce identity federation with any IdP that supports [OpenIDConnect (OIDC)](https://openid.net/connect/) or [SAML 2.0](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html) , such as Azure Active Directory (Azure AD), Active Directory Federation Services (AD FS), Okta, and others.\n**Note:** You can also use your IdP to authenticate instead of workforce users. To learn more, see [Workload identity federation](/iam/docs/workload-identity-federation) .\n## Workforce identity pools\nWorkforce identity pools let you manage groups of workforce identities and their access to Google Cloud resources.\nPools let you do the following:\n- Group user identities; for example,`employees`or`partners`\n- Grant IAM access to an entire pool or a subset thereof.\n- Federate identities from one or more IdPs.\n- Define policies on a group of users that require similar access permissions.\n- Specify IdP-specific configuration information, including [attribute mapping](#attribute-mappings) and [attribute conditions](#attribute-conditions) .\n- Enable the Google Cloud CLI and API access for third-party identities.\n- Log access by users within a pool to Cloud Audit Logs, along with the pool ID.\nYou can create multiple pools. For an example that describes one such approach, see [Example: Multiple workforce identity pools](#example-multiple-workforce-pools) .\nPools are configured at the [Google Cloud organization level](/resource-manager/docs/cloud-platform-resource-hierarchy#organizations) . Because of this, pools are available across all projects and folders within the organization, as long as you have the appropriate IAM permissions to view the pool. When you first set up workforce identity federation for your organization, you provide a name for the pool. In IAM allow policies, you reference the pool by its name. Because of this, we recommend that you name the pool so that it clearly describes the identities it contains.\n## Workforce identity pool providers\nA workforce identity pool provider is an entity that describes a relationship between your Google Cloud organization and your IdP.\nWorkforce identity federation follows the [OAuth 2.0 Token Exchange specification (RFC 8693)](https://datatracker.ietf.org/doc/html/rfc8693) . You provide a credential from your external identity provider to the Security Token Service, which verifies the identity in the credential, and then returns a short-lived Google Cloud access token in exchange.\n### OIDC flow types\nFor OIDC providers, workforce identity federation supports both [authorization code flow](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth) and [implicit flow](https://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth) . Authorization code flow is considered to be the most secure, because tokens are returned from the IdP in a separate, secure backend transaction, directly from the IdP to Google Cloud, after users authenticate. As a result, code flow transactions can retrieve tokens of any size, so you can have more claims to use for attribute mapping and attribute condition. In implicit flow, by comparison, the ID Token is returned from the IdP to the browser. Tokens are subject to individual browser URL size limits.\n## Google Cloud workforce identity federation console\nUsers in a [workforce identity pool](#workforce-identity-pools) can [access the Google Cloud Workforce Identity Federation console, also known as the console (federated)](/iam/docs/workforce-console-sso) . The console provides these users with UI access to Google Cloud [products that support workforce identity federation](/iam/docs/federated-identity-supported-services) .\n## Attribute mappings\nYour IdP provides attributes, referred to by some IdPs as . Attributes contain information about your users. You can map these attributes for use by Google Cloud using [Common Expression Language (CEL)](https://github.com/google/cel-spec) .\nThis section describes the set of required and optional attributes that Google Cloud provides.\nYou can also define custom attributes in your IdP that can then be used by specific Google Cloud products; for example in IAM allow policies.\nThe maximum size for attribute mappings is 4 KB.\nThe attributes are as follows:\n- `google.subject` (Required): a unique identifier for the authenticating user. It is , because Cloud Audit Logs logs record the contents of this field as the principal. You can use this field to configure IAM for authorization decisions. We recommend that you don't use a mutable value because if you change the value in your IdP's user directory, the user loses access.The maximum length is 127 bytes.\n- `google.groups` (Optional): the collection of groups that the authenticating user is a member of. You can configure a logic expression using a subset of CEL that produces . You can also use this field to configure IAM for authorization decisions. Limitations for `google.groups` are as follows:- We recommend that you limit the group name to 100 characters.\n- If one user is associated with more than 100 groups, define a smaller set of groups, and only include those groups in assertions used to federate the user to Google Cloud.\n- If you use this attribute to grant access in IAM, every member in the mapped groups is granted access. Therefore, we recommend that you ensure that only authorized users in your organization can modify the membership of the mapped groups.\n- `google.display_name` (Optional): attribute that is of the signed-in user in the Google Cloud console. This attribute can't be used in IAM allow policies nor in the attribute condition.The maximum length is 100 bytes.\n- `google.profile_photo` (Optional): a URL of the user's thumbnail photo. We recommend the photo to be 400x400 pixels. When this attribute is set, the image is visible as the user's profile picture in the Google Cloud console. If this value isn't set, or it can't be fetched, a generic user icon is displayed instead. This attribute can't be used in either IAM allow policies or in the attribute condition.\n- `google.posix_username` (Optional): a unique POSIX-compliant username string used for the following:- [SSH-in-browser](/compute/docs/ssh-in-browser) .\n- [OS Login with workforce identity federation](/compute/docs/oslogin/manage-oslogin-in-an-org#use_workforce_identity_federation_with_os_login) ( [Preview](/products#product-launch-stages) ).\nThis attribute can't be used in IAM allow policies or in the attribute condition. The maximum length is 32 characters.\n- `attribute.` `` (Optional): a customer-defined attribute that is present in a user's IdP token. You can use these custom attributes to define your authorization strategy in an IAM allow policy. For example, you can choose to define an attribute such as the user's cost center: `attribute.costcenter = \"1234\"` . This attribute could then be used in IAM conditions to grant access only to users in that cost center.You can configure a maximum of 50 custom attribute mapping rules. The maximum size of each such rule is 2048 characters.Although we don't have restrictions on the attributes you can map here, we strongly recommend that you choose attributes whose values are stable. For example, an attribute like `attribute.job_description` might change for many reasons (such as improving its readability). As an alternative, consider using `attribute.role` . Changes to the latter indicate a change of assigned responsibility and align with changes in the access granted to the user.\nYou can transform attribute values using [standard CEL functions](https://github.com/google/cel-spec/blob/master/doc/langdef.md) . You can also use the following custom functions:\n- [split function](https://pkg.go.dev/github.com/google/cel-go/ext#readme-split) splits a string on the provided separator value. For example, to extract the attribute `username` from an email address attribute by splitting its value at the `@` and using the first string, use the following attribute mapping:```\nattribute.username=assertion.email.split(\"@\")[0]\n```\n- [join function](https://pkg.go.dev/github.com/google/cel-go/ext#readme-join) joins a list of strings on the provided separator value. For example, to populates the custom attribute `department` by concatenating a list of strings with `.` as a separator, use the following attribute mapping:```\nattribute.department=assertion.department.join(\".\")\n```## Attribute conditions\nAttribute conditions are optional CEL expressions that let you set constraints on the identity attributes that Google Cloud accepts.\nThe benefits of using attribute conditions include the following:\n- You can use attribute conditions to allow only a subset of external identities to authenticate to your Google Cloud project. For example, you might want to allow only those identities that are in a specific team to sign in, especially if you are using a public IdP. For another example, you might want to allow your accounting team to sign in, but not your engineering team.\n- Attribute conditions let you prevent credentials intended for use with another platform from being used with Google Cloud, and vice-versa. This helps avoid the [confused deputy problem](https://wikipedia.org/wiki/Confused_deputy_problem) .## Represent workforce pool users in IAM policies\nThe following table shows the principal identifiers that you use to grant roles to a single user, a group of users, users carrying a particular claim, or all users from a workforce pool.\n**Note:** You can't grant the Owner role ( `roles/owner` ) to a workforce user on projects.\n| Identities            | Identifier format                         |\n|:---------------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------|\n| Single identity in a workforce identity pool    | principal://iam.googleapis.com/locations/global/workforcePools/POOL_ID/subject/SUBJECT_ATTRIBUTE_VALUE    |\n| All workforce identities in a group      | principalSet://iam.googleapis.com/locations/global/workforcePools/POOL_ID/group/GROUP_ID       |\n| All workforce identities with a specific attribute value | principalSet://iam.googleapis.com/locations/global/workforcePools/POOL_ID/attribute.ATTRIBUTE_NAME/ATTRIBUTE_VALUE |\n| All identities in a workforce identity pool    | principalSet://iam.googleapis.com/locations/global/workforcePools/POOL_ID/*          |\n### JSON web keys\nThe workforce pool provider can access [JSON web keys (JWKs)](https://www.rfc-editor.org/rfc/rfc7517) that are provided by your IdP in the `jwks_uri` field in the `/.well-known/openid-configuration` document. If your OIDC provider doesn't provide this information, or your issuer is not publicly accessible, you can manually upload the JWKs when you create or update the OIDC provider.\n## Restrict cross-organization access\nWorkforce identity pool principals can't directly access resources outside of the organization that they belong to. However, if a principal is given permission to [impersonate a service account](/iam/docs/impersonating-service-accounts) within the organization, this constraint can be bypassed as service accounts aren't equally restricted.\n## Workforce pools user project\nMost Google Cloud APIs charge billing and quota use to the project that contains the resource that your API request accesses. These APIs are called . A few Google Cloud APIs charge to the project associated with the client; these are called . The project used for billing and quota purposes is called the .\nWhen you create a workforce identity federation configuration file, you specify a . This project is used to identify your application to the Google APIs that it calls. The workforce pools user project is also used as the default quota project for client-based APIs, unless you use the gcloud CLI to initiate the API request. You must have the `serviceusage.services.use` permission, which is included in the Service Usage Consumer ( `roles/serviceusage.serviceUsageConsumer` ) role, for the project that you specify.\nFor more information about the quota project, resource-based APIs, and client-based APIs, see [Quota project overview](/docs/quota/quota-project) .\n## Example: multiple workforce identity pools\nThis section contains an example that illustrates typical use of multiple pools.\nYou can create one pool for employees and another for partners. Multinational organizations might create separate pools for different divisions in their organization. Pools allow for distributed management, in which different groups can independently manage their specific pool where roles are granted only to the identities in the pool.\nFor example, suppose that a company named Enterprise Example Organization contracts a different company named Partner Example Organization Inc to provide Google Kubernetes Engine (GKE) DevOps services. For Partner Example Organization workforce to provide the services, their workforce must be allowed to access Google Kubernetes Engine (GKE) and other Google Cloud resources in Enterprise Example Organization's organization. Enterprise Example organization already has a workforce identity pool called `enterprise-example-organization-employees` .\nTo allow Partner Example Organization to manage access to Enterprise Example Organization's resources, Enterprise Example Organization creates a separate workforce pool for Partner Example Organization workforce users so that Partner Example Organization can manage it. Enterprise Example Organization provides the workforce pool to a Partner Example Organization administrator. Partner Example Organization's administrator uses their own IdP to grant access to their workforce.\nTo do this, Enterprise Example Organization's Admin performs the following tasks:\n- Create an identity such as `partner-organization-admin@example.com` for the Partner Example Organization administrator in Enterprise Example Organization's IdP, which is already configured in the pool called `enterprise-example-organization-employees` .\n- Create a new workforce pool called `example-organization-partner` .\n- Create the following allow policy for the `example-organization-partner` pool:```\n{\u00a0 \"bindings\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"role\": \"roles/iam.workforcePoolEditor\",\u00a0 \u00a0 \u00a0 \"members\": [\u00a0 \u00a0 \u00a0 \u00a0 \"principalSet://iam.googleapis.com/locations/global/workforcePools/enterprise-example-organization-employees/subject/partner-organization-admin@example.com\"\u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 }\u00a0 ]}\n```\n- Grant roles for `example-organization-partner` pool on the resources they need access to in Enterprise Example Organization's organization.\nPartner Example Organization's admin can now configure the `example-organization-partner` pool to connect with their IdP. They can then allow Partner Example Organization workforce to sign in with Partner Example Organization's IdP credentials. After they sign in, Partner Example Organization workforce users can access Google Cloud resources, constrained by policies that are defined by Enterprise Example Organization.\n## Easier access management\nIn large enterprises, IT administrators often create security groups as part of a best-practices access-control model. Security groups govern access to internal resources. Further, companies often create additional groups for employees and other groups for partners to extend this access-control model to cloud resources. This can result in proliferation of deeply nested groups that can become very difficult to manage.\nYour organization might also have policies that limit the number of groups that you can create so as to keep the user directory hierarchy reasonably flat. A better solution to prevent misconfiguration of IAM policies and limit growth of groups is to use multiple pools to create a broader separation of users from different organizational units and business units, and partner organizations. You can then reference these pools and groups contained within these pools to define IAM policies (see examples in the Configuring IAM step).\n## VPC Service Controls limitations\nWorkforce identity federation, workforce pool configuration APIs, and Security Token Service APIs don't support VPC Service Controls. However, Google Cloud products that workforce pool users can access support VPC Service Controls. To learn more, see VPC Service Controls's [supported products and limitations](/vpc-service-controls/docs/supported-products) page.\n## Workforce identity federation and Essential Contacts\nTo receive important information about changes to your organization or Google Cloud products, you must provide [Essential Contacts](/resource-manager/docs/managing-notification-contacts) when using workforce identity federation. Cloud Identity users can be contacted through their Cloud Identity email address, but workforce identity federation users are contacted using Essential Contacts.\nWhen you use the Google Cloud console to create or manage workforce identity pools, you will see a banner that asks you to configure an essential contact with the **Legal** and **Suspension** category. Alternatively, you can define a contact in the **All** category if you don't have separate contacts. Supplying the contacts will remove the banner.\n## What's next\n- To learn how to set up workforce identity federation, see [Configuring workforce identity federation](/iam/docs/configuring-workforce-identity-federation) . For IdP-specific instructions, see:- [Configure workforce identity federation with Azure AD and sign in users](/iam/docs/workforce-sign-in-azure-ad) \n- [Configure workforce identity federation with Okta and sign in users](/iam/docs/workforce-sign-in-okta) \n- [Obtain short-lived tokens for workforce identity federation](/iam/docs/workforce-obtaining-short-lived-credentials) \n- [Manage workforce pools providers](/iam/docs/manage-workforce-identity-pools-providers) \n- [Delete workforce identity federation users and their data](/iam/docs/workforce-delete-user-data) \n- [View workforce identity federation audit logs](/iam/docs/audit-logging/examples-workforce-identity) \n- [View products that support workforce identity federation](/iam/docs/federated-identity-supported-services) \n- [Set up user access to console (federated)](/iam/docs/workforce-console-sso)", "guide": "IAM"}