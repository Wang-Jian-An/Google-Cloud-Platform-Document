{"title": "IAM - IAM audit logging", "url": "https://cloud.google.com/iam/docs/audit-logging", "abstract": "# IAM - IAM audit logging\nThis document describes the audit logs created by Identity and Access Management as part of [Cloud Audit Logs](/logging/docs/audit) .\n", "content": "## Overview\nGoogle Cloud services write audit logs to help you answer the questions, \"Who did what, where, and when?\" within your Google Cloud resources.\nYour Google Cloud projects contain only the audit logs for resources that are directly within the Google Cloud project. Other Google Cloud resources, such as folders, organizations, and billing accounts, contain the audit logs for the entity itself.\nFor a general overview of Cloud Audit Logs, see [Cloud Audit Logs overview](/logging/docs/audit) . For a deeper understanding of the audit log format, see [Understand audit logs](/logging/docs/audit/understanding-audit-logs) .\n## Available audit logs\nThe following types of audit logs are available for IAM:\n- Admin Activity audit logsIncludes \"admin write\" operations that write metadata or configuration   information.You can't disable Admin Activity audit logs.\n- Data Access audit logsIncludes \"admin read\" operations that read metadata or configuration   information.     Also includes \"data read\" and \"data write\" operations that   read or write user-provided data.To receive Data Access audit logs, you must [   explicitly enable](/logging/docs/audit/configure-data-access#config-console-enable) them.\nFor fuller descriptions of the audit log types, see [Types of audit logs](/logging/docs/audit#types) .\n## Audited operations\nThe following table summarizes which API operations correspond to each audit log type in IAM:\n| Audit logs category                                                                                                                                                                                                                            | IAM operations                                                                                                                                                                                                                                                                                                 |\n|||\n| Admin Activity logs (ADMIN_WRITE)                                                                                                                                                                                                                        | Custom roles: CreateRole1 DeleteRole1 UndeleteRole1 UpdateRole1 Deny policies: google.iam.v2.Policies.CreatePolicy google.iam.v2.Policies.DeletePolicy google.iam.v2.Policies.UpdatePolicy google.iam.v2beta.Policies.CreatePolicy google.iam.v2beta.Policies.DeletePolicy google.iam.v2beta.Policies.UpdatePolicy Service accounts: CreateServiceAccount DeleteServiceAccount1 DisableServiceAccount EnableServiceAccount GetServiceAccount PatchServiceAccount SetIAMPolicy1 UndeleteServiceAccount UpdateServiceAccount Service account keys: CreateServiceAccountKey1 DeleteServiceAccountKey UploadServiceAccountKey Workload identity pools: CreateWorkloadIdentityPool DeleteWorkloadIdentityPool UndeleteWorkloadIdentityPool UpdateWorkloadIdentityPool Workload identity pool providers: CreateWorkloadIdentityPoolProvider DeleteWorkloadIdentityPoolProvider UndeleteWorkloadIdentityPoolProvider UpdateWorkloadIdentityPoolProvider Workforce pools: CreateWorkforcePool DeleteWorkforcePool UndeleteWorkforcePool UpdateWorkforcePool Workforce pool providers: CreateWorkforcePoolProvider DeleteWorkforcePoolProvider UndeleteWorkforcePoolProvider UpdateWorkforcePoolProvider |\n| Data Access logs (ADMIN_READ)                                                                                                                                                                                                                         | Allow policies: GetEffectivePolicy2, 3 google.iam.admin.v1.GetIAMPolicy google.iam.admin.v1.GetPolicyDetails2, 4 Credentials: ExchangeToken google.identity.sts.SecurityTokenService.WebSignIn Custom roles: GetRole ListRoles Deny policies: google.iam.v2.Policies.GetPolicy google.iam.v2.Policies.ListPolicies google.iam.v2beta.Policies.GetPolicy google.iam.v2beta.Policies.ListPolicies Grantable roles: QueryGrantableRoles2 Service accounts: GenerateAccessToken GenerateIdToken ListServiceAccounts SignBlob SignJwt Service account keys: GetServiceAccountKey ListServiceAccountKeys Workload identity pools: GetWorkloadIdentityPool ListWorkloadIdentityPools Workload identity pool providers: GetWorkloadIdentityPoolProvider ListWorkloadIdentityPoolProviders Workforce pools: GetWorkforcePool ListWorkforcePools Workforce pool providers: GetWorkforcePoolProvider ListWorkforcePoolProviders                                                                  |\n| 1 If you enable ADMIN_READ audit logs, then some log entries for this method might be written as Data Access logs. You can use exclusion filters to prevent Cloud Logging from ingesting the Data Access log entries. 2 This method can cause a getIamPolicy method to be called in other services' APIs. For example, if this method needs to check the allow policy for a Compute Engine instance, then the instances.getIamPolicy method in the Compute Engine API is called. To receive audit logs for these additional services, you must enable ADMIN_READ audit logs for the other services' APIs. 3 GetEffectivePolicy is a private method in the IAM API. When you use the Policy Troubleshooter API, it might call this method internally. 4 google.iam.admin.v1.GetPolicyDetails is a private method in the IAM API. When you use the Google Cloud console, it might call this method internally. | 1 If you enable ADMIN_READ audit logs, then some log entries for this method might be written as Data Access logs. You can use exclusion filters to prevent Cloud Logging from ingesting the Data Access log entries. 2 This method can cause a getIamPolicy method to be called in other services' APIs. For example, if this method needs to check the allow policy for a Compute Engine instance, then the instances.getIamPolicy method in the Compute Engine API is called. To receive audit logs for these additional services, you must enable ADMIN_READ audit logs for the other services' APIs. 3 GetEffectivePolicy is a private method in the IAM API. When you use the Policy Troubleshooter API, it might call this method internally. 4 google.iam.admin.v1.GetPolicyDetails is a private method in the IAM API. When you use the Google Cloud console, it might call this method internally.                                                                    |\nYou can also view examples of [audit log entries for service accounts](/iam/docs/audit-logging/examples-service-accounts) .\n## Audit log format\nAudit log entries include the following objects:\n- The log entry itself, which is an object of type [LogEntry](/logging/docs/reference/v2/rest/v2/LogEntry) . Useful fields include the following:- The`logName`contains the resource ID and audit log type.\n- The`resource`contains the target of the audited operation.\n- The`timeStamp`contains the time of the audited operation.\n- The`protoPayload`contains the audited information.\n- The audit logging data, which is an [AuditLog](/logging/docs/reference/audit/auditlog/rest/Shared.Types/AuditLog) object held in the `protoPayload` field of the log entry.\n- Optional service-specific audit information, which is a service-specific object. For earlier integrations, this object is held in the `serviceData` field of the `AuditLog` object; later integrations use the `metadata` field.\nFor other fields in these objects, and how to interpret them, review [Understand audit logs](/logging/docs/audit/understanding-audit-logs) .\n### Log name\nCloud Audit Logs log names include resource identifiers indicating the Google Cloud project or other Google Cloud entity that owns the audit logs, and whether the log contains Admin Activity, Data Access, Policy Denied, or System Event audit logging data.\nThe following are the audit log names, including variables for the resource identifiers:\n```\n projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\n projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Fdata_access\n projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Fsystem_event\n projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Fpolicy\n folders/FOLDER_ID/logs/cloudaudit.googleapis.com%2Factivity\n folders/FOLDER_ID/logs/cloudaudit.googleapis.com%2Fdata_access\n folders/FOLDER_ID/logs/cloudaudit.googleapis.com%2Fsystem_event\n folders/FOLDER_ID/logs/cloudaudit.googleapis.com%2Fpolicy\n billingAccounts/BILLING_ACCOUNT_ID/logs/cloudaudit.googleapis.com%2Factivity\n billingAccounts/BILLING_ACCOUNT_ID/logs/cloudaudit.googleapis.com%2Fdata_access\n billingAccounts/BILLING_ACCOUNT_ID/logs/cloudaudit.googleapis.com%2Fsystem_event\n billingAccounts/BILLING_ACCOUNT_ID/logs/cloudaudit.googleapis.com%2Fpolicy\n organizations/ORGANIZATION_ID/logs/cloudaudit.googleapis.com%2Factivity\n organizations/ORGANIZATION_ID/logs/cloudaudit.googleapis.com%2Fdata_access\n organizations/ORGANIZATION_ID/logs/cloudaudit.googleapis.com%2Fsystem_event\n organizations/ORGANIZATION_ID/logs/cloudaudit.googleapis.com%2Fpolicy\n```\n**Note:** The part of the log name following `/logs/` must be URL-encoded. The forward-slash character, `/` , must be written as `%2F` .\n### Service name\nIAM audit logs use one of the following service names:\n- `iam.googleapis.com`: Used for the [IAM API](/iam/docs/reference/rest) , and for methods that are called internally by the [Policy Troubleshooter API](/iam/docs/reference/policytroubleshooter/rest) .\n- `iamcredentials.googleapis.com` : Used for the [Service Account Credentials API](/iam/docs/reference/credentials/rest) , which creates short-lived credentials for service accounts. **Note:** The IAM API also includes methods for signing binary blobs and JSON Web Tokens (JWTs). These methods are being deprecated. Use the Service Account Credentials API instead.\n- `sts.googleapis.com` : Used for the [Security Token Service API](/iam/docs/reference/sts/rest) , which exchanges Google or third-party credentials for a Google short-lived access token.For a list of all the Cloud Logging API service names and their corresponding monitored resource type, see [Map services to resources](/logging/docs/api/v2/resource-list#service-names) .\n### Resource types\nIAM audit logs use one of the following resource types:\n- `api`: A request to list information about multiple IAM roles or policies.\n- `audited_resource`: A request to exchange credentials for a Google access token.\n- `iam_role`: An IAM custom role.\n- `service_account`: An IAM service account, or a service account key.For a list of all the Cloud Logging monitored resource types and descriptive information, see [Monitored resource types](/logging/docs/api/v2/resource-list#resource-types) .\n### Caller identities\nThe IP address of the caller is held in the `RequestMetadata.caller_ip` field of the [AuditLog](/logging/docs/reference/audit/auditlog/rest/Shared.Types/AuditLog) object. Logging might redact certain caller identities and IP addresses.\nFor information about what information is redacted in audit logs, see [Caller identities in audit logs](/logging/docs/audit#user-id) .\n## Enable audit logging\nAdmin Activity audit logs are always enabled; you can't disable them.\nData Access audit logs are disabled by default and aren't written unless explicitly enabled (the exception is Data Access audit logs for BigQuery, which can't be disabled).\nFor information about enabling some or all of your Data Access audit logs, see [Enable Data Access audit logs](/logging/docs/audit/configure-data-access) .\n## Permissions and roles\n[IAM](/iam/docs) permissions and roles determine your ability to access audit logs data in Google Cloud resources.\nWhen deciding which [Logging-specific permissions and roles](/logging/docs/access-control#permissions_and_roles) apply to your use case, consider the following:\n- The Logs Viewer role ( `roles/logging.viewer` ) gives you read-only access to Admin Activity, Policy Denied, and System Event audit logs. If you have just this role, you cannot view Data Access audit logs that are in the `_Default` bucket.\n- The Private Logs Viewer role `(roles/logging.privateLogViewer` ) includes the permissions contained in `roles/logging.viewer` , plus the ability to read Data Access audit logs in the `_Default` bucket.Note that if these private logs are stored in user-defined buckets, then any user who has permissions to read logs in those buckets can read the private logs. For more information about log buckets, see [Routing and storage overview](/logging/docs/routing/overview) .\nFor more information about the IAM permissions and roles that apply to audit logs data, see [Access control with IAM](/logging/docs/access-control) .\n## View logs\nYou can query for all audit logs or you can query for logs by their [audit log name](#log_name) . The audit log name includes the [resource identifier](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project, folder, billing account, or organization for which you want to view audit logging information. Your queries can specify indexed [LogEntry](/logging/docs/reference/v2/rest/v2/LogEntry) fields, and if you use the **Log Analytics** page, which supports SQL queries, then you can [view your query results as a chart](/logging/docs/analyze/charts) .\nFor more information about querying your logs, see the following pages:\n- [Build queries in the Logs Explorer](/logging/docs/view/building-queries) .\n- [Query and view logs in Log Analytics](/logging/docs/analyze/query-and-view) .\n- [Sample queries for security insights](/logging/docs/analyze/analyze-audit-logs) .\nIn the Google Cloud console, you can use the Logs Explorer to retrieve your audit log entries for your Google Cloud project, folder, or organization:\n **Note:** You can't view audit logs for Cloud Billing accounts in the Google Cloud console. You must use the API or the gcloud CLI.- In the navigation panel of the Google Cloud console, select **Logging** , and then select **Logs Explorer** : [Go to Logs Explorer](https://console.cloud.google.com/logs/query) \n- Select an existing Google Cloud project, folder, or organization.\n- To display all audit logs, enter either of the following queries into the query-editor field, and then click **Run query** :```\nlogName:\"cloudaudit.googleapis.com\"\n``````\nprotoPayload.\"@type\"=\"type.googleapis.com/google.cloud.audit.AuditLog\"\n```\n- To display the audit logs for a specific resource and audit log type, in the **Query builder** pane, do the following:- In **Resource type** , select the Google Cloud resource whose audit logs you want to see.\n- In **Log name** , select the audit log type that you want to see:- For Admin Activity audit logs, select **activity** .\n- For Data Access audit logs, select **data_access** .\n- For System Event audit logs, select **system_event** .\n- For Policy Denied audit logs, select **policy** .\n- Click **Run query** .\nIf you don't see these options, then there aren't any audit logs of that type available in the Google Cloud project, folder, or organization.If you're experiencing issues when trying to view logs in the Logs Explorer, see the [troubleshooting](/logging/docs/view/logs-explorer-interface#troubleshooting) information.For more information about querying by using the Logs Explorer, see [Build queries in the Logs Explorer](/logging/docs/view/building-queries) . For information about summarizing log entries in the Logs Explorer by using Duet AI, see [Summarize log entries with Duet AI assistance](/logging/docs/view/summarize-log-entries-duet-ai) .\nThe Google Cloud CLI provides a command-line interface to the Logging API. Supply a valid resource identifier in each of the log names. For example, if your query includes a , then the project identifier you supply must refer to the currently selected Google Cloud project.\nTo read your Google Cloud project-level audit log entries, run the following command:\n```\ngcloud logging read \"logName : projects/PROJECT_ID/logs/cloudaudit.googleapis.com\" \\\n --project=PROJECT_ID\n```\nTo read your folder-level audit log entries, run the following command:\n```\ngcloud logging read \"logName : folders/FOLDER_ID/logs/cloudaudit.googleapis.com\" \\\n --folder=FOLDER_ID\n```\nTo read your organization-level audit log entries, run the following command:\n```\ngcloud logging read \"logName : organizations/ORGANIZATION_ID/logs/cloudaudit.googleapis.com\" \\\n --organization=ORGANIZATION_ID\n```\nTo read your Cloud Billing account-level audit log entries, run the following command:\n```\ngcloud logging read \"logName : billingAccounts/BILLING_ACCOUNT_ID/logs/cloudaudit.googleapis.com\" \\\n --billing-account=BILLING_ACCOUNT_ID\n```\nAdd the [--freshness flag](/sdk/gcloud/reference/logging/read#--freshness) to your command to read logs that are more than 1 day old.\nFor more information about using the gcloud CLI, see [gcloud logging read](/sdk/gcloud/reference/logging/read) .\nWhen building your queries, supply a valid resource identifier in each of the log names. For example, if your query includes a , then the project identifier you supply must refer to the currently selected Google Cloud project.\nFor example, to use the Logging API to view your project-level audit log entries, do the following:- Go to the **Try this API** section in the documentation for the [entries.list](/logging/docs/reference/v2/rest/v2/entries/list) method.\n- Put the following into the **Request body** part of the **Try thisAPI** form. Clicking this [prepopulated form](/logging/docs/reference/v2/rest/v2/entries/list?apix_params=%7B%22resource%22%3A%7B%22resourceNames%22%3A%5B%22projects%2F%5BPROJECT_ID%5D%22%5D%2C%22pageSize%22%3A5%2C%22filter%22%3A%22logName%3D(projects%2F%5BPROJECT_ID%5D%2Flogs%2Fcloudaudit.googleapis.com%252Factivity%20OR%20projects%2F%5BPROJECT_ID%5D%2Flogs%2Fcloudaudit.googleapis.com%252Fsystem_events%20OR%20projects%2F%5BPROJECT_ID%5D%2Flogs%2Fcloudaudit.googleapis.com%252Fdata_access)%22%7D%7D) automatically fills the request body, but you need to supply a valid in each of the log names.```\n{\n \"resourceNames\": [ \"projects/PROJECT_ID\"\n ],\n \"pageSize\": 5,\n \"filter\": \"logName : projects/PROJECT_ID/logs/cloudaudit.googleapis.com\"\n}\n```\n- Click **Execute** .## Sample queries\nTo find audit logs for IAM, use the following queries in the Logs Explorer:\nBefore using the sample queries, replace the following values:\n- ``: Everything preceding the`@`symbol in the service account's email address. For example, the service account ID of the service account`service-account@example.iam.gserviceaccount.com`is`service-account`.\n- ``: The full email address of the service account. For example,`service-account@example.iam.gserviceaccount.com`.\n- ``: The full role name, including any`organizations/`,`projects/`, or`roles/`prefixes. For example,`organizations/123456789012/roles/myCompanyAdmin`.\n| Query name         | Expression                                                                       |\n|:-------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Service account created     | resource.type = \"service_account\" protoPayload.serviceName = \"iam.googleapis.com\" protoPayload.methodName:\"CreateServiceAccount\" log_id(\"cloudaudit.googleapis.com/activity\") (protoPayload.request.account_id:\"SERVICE_ACCOUNT_SHORT_ID\" OR protoPayload.response.email:\"SERVICE_ACCOUNT_EMAIL\") |\n| Service account deleted     | resource.type = \"service_account\" protoPayload.serviceName = \"iam.googleapis.com\" protoPayload.methodName:\"DeleteServiceAccount\" log_id(\"cloudaudit.googleapis.com/activity\") resource.labels.email_id:\"SERVICE_ACCOUNT_EMAIL\"                  |\n| Service account key created    | resource.type = \"service_account\" protoPayload.serviceName = \"iam.googleapis.com\" protoPayload.methodName:\"CreateServiceAccountKey\" log_id(\"cloudaudit.googleapis.com/activity\") resource.labels.email_id:\"SERVICE_ACCOUNT_EMAIL\"                 |\n| Service account key deleted    | resource.type = \"service_account\" protoPayload.serviceName = \"iam.googleapis.com\" protoPayload.methodName:\"DeleteServiceAccountKey\" log_id(\"cloudaudit.googleapis.com/activity\") resource.labels.email_id:\"SERVICE_ACCOUNT_EMAIL\"                 |\n| Any resource created, modified, or deleted | log_id(\"cloudaudit.googleapis.com/activity\") AND protoPayload.methodName:(\"create\" OR \"delete\" OR \"update\")                                              |\n| Custom role updated      | log_id(\"cloudaudit.googleapis.com/activity\") resource.type = \"iam_role\" protoPayload.serviceName = \"iam.googleapis.com\" protoPayload.methodName:\"UpdateRole\" resource.labels.role_name:\"ROLE_NAME\"                         |\n| Project-level allow policy updated   | resource.type = \"project\" AND log_id(\"cloudaudit.googleapis.com/activity\") AND protoPayload.methodName:\"SetIamPolicy\"                                            |\nTo use the sample queries, do the following:\n- Replace the variables with your own project information, then copy the expression using the clipboard icon .\n- In the navigation panel of the Google Cloud console, select **Logging** , and then select **Logs Explorer** : [Go to Logs Explorer](https://console.cloud.google.com/logs/query) \n- Enable **Show query** to open the query-editor field, then paste the expression into the query-editor field: \n- Click **Run query** . Logs that match your query are listed in the **Queryresults** pane.## Route audit logs\nYou can [route audit logs](/logging/docs/routing/overview) to supported destinations in the same way that you can route other kinds of logs. Here are some reasons you might want to route your audit logs:\n- To keep audit logs for a longer period of time or to use more powerful search capabilities, you can route copies of your audit logs to Cloud Storage, BigQuery, or Pub/Sub. Using Pub/Sub, you can route to other applications, other repositories, and to third parties.\n- To manage your audit logs across an entire organization, you can create [aggregated sinks](/logging/docs/export/aggregated_sinks) that can route logs from any or all Google Cloud projects in the organization.\n- If your enabled Data Access audit logs are pushing your Google Cloud projects over your log allotments, you can create sinks that exclude the Data Access audit logs from Logging.\nFor instructions about routing logs, see [Route logs to supported destinations](/logging/docs/export/configure_export_v2) .\n## Pricing\nFor more information about pricing, see [Cloud Logging pricing summary](/stackdriver/pricing#logs-costs) .\n## What's next\n- Get information about [Cloud Audit Logs](/logging/docs/audit) .\n- Review [examples of audit log entries for service accounts](/iam/docs/audit-logging/examples-service-accounts) .\n- Learn more about [service accounts](/iam/docs/service-accounts) .", "guide": "IAM"}