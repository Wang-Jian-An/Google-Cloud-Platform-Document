{"title": "IAM - Create and manage custom roles", "url": "https://cloud.google.com/iam/docs/creating-custom-roles", "abstract": "# IAM - Create and manage custom roles\nThis page describes how to create and manage Identity and Access Management (IAM) custom roles. Managing roles includes modifying, disabling, listing, deleting, and undeleting roles.\n", "content": "## Before you begin\n- Enable the IAM API. [Enable the API](https://console.cloud.google.com/flows/enableapi?apiid=iam.googleapis.com&redirect=https://console.cloud.google.com) \n- Set up authentication.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.You can use the gcloud CLI samples on this page from  either of the following development environments:- **Cloud Shell** : To use an online terminal with the   gcloud CLI already set up, activate Cloud Shell.At the bottom of this page, a Cloud Shell session starts    and displays a command-line prompt. It can take a few seconds for    the session to initialize.\n- **Local shell** : To use the gcloud CLI in a local   development environment, [install](/sdk/docs/install) and [initialize](/sdk/docs/initializing) the gcloud CLI.\nTo use the C++ samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the .NET samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the Go samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the Java samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the Python samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [ Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) in the Google Cloud authentication documentation.To use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```\n- Understand the Google Cloud [resource hierarchy](/iam/docs/overview#resource-hierarchy) .\n- Read [Understanding IAM custom roles](/iam/docs/understanding-custom-roles) .\n### Required roles\nTo get the permissions that you need to create and manage custom roles,   ask your administrator to grant you the  following IAM roles:\n- To manage roles for a project: [Role Administrator ](https://cloud.google.com/iam/docs/understanding-roles#iam.roleAdmin) (`roles/iam.roleAdmin`)    on the project that you want to manage roles for\n- To manage roles for an organization: [Organization Role Administrator ](https://cloud.google.com/iam/docs/understanding-roles#iam.organizationRoleAdmin) (`roles/iam.organizationRoleAdmin`)    on the organization that you want to manage roles for\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYou might also be able to get  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .\n[](None)\n## View available permissions for projects, folders, and organizations\nYou can create custom roles for an entire organization, or for a specific project in that organization. The permissions that are available for custom roles depend on where you create the role. For example, if a permission can only be used at the organization level, then you can't include that permission in a project-level custom role.\nTo check which permissions are available for organization-level and project-level custom roles, you can use the gcloud CLI or the Identity and Access Management API to list the permissions that are available in a specific organization or project. For example, you can get all permissions that are available for custom roles that are created in your project.\nSome permissions might not be visible to you or usable in a custom role, even if they are supported in custom roles. For example, a permission might not be available for use in custom roles if you have not [enabled the API](/apis/docs/getting-started#enabling_apis) for the service.\nTo learn more about the permissions that you can add to custom roles, see [Supported permissions](/iam/docs/roles-overview#custom-role-supported-permissions) .\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Use the ` [gcloud iam list-testable-permissions](/sdk/gcloud/reference/iam/list-testable-permissions) ` command to get a list of permissions that are available for custom roles in a  specific project or organization. The response lists the permissions that you  can use in custom roles for that project or organization.To list permissions that are available in custom roles for a project or  organization, run this command:```\ngcloud iam list-testable-permissions FULL_RESOURCE_NAME \\\n --filter=\"customRolesSupportLevel!=NOT_SUPPORTED\"\n```Replace `` with one of the following  values:- Project: `//cloudresourcemanager.googleapis.com/projects/` `` (for example, `//cloudresourcemanager.googleapis.com/projects/my-project` )\n- Organization: `//cloudresourcemanager.googleapis.com/organizations/` `` (for example, `//cloudresourcemanager.googleapis.com/organizations/123456789012` )\nThe results indicate whether each permission is supported in custom roles.  Permissions that do not have a `customRolesSupportLevel` field are fully  supported.The `list-testable-permissions` command might return hundreds of results. This  partial example shows the format of each result:```\n--name: appengine.applications.create\nstage: GA\n--customRolesSupportLevel: TESTING\nname: appengine.applications.disable\nstage: GA\n--name: appengine.applications.get\nstage: GA\n--name: appengine.applications.update\nstage: GA\n--name: appengine.instances.delete\nstage: GA\n--name: appengine.instances.get\nstage: GA\n--\n```\nTo learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C++ API reference documentation](/cpp/docs/reference/iam/latest) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/iam/samples/iam_samples.cc) \n```\nnamespace iam = ::google::cloud::iam_admin_v1;[](std::string const& resource) {\u00a0 iam::IAMClient client(iam::MakeIAMConnection());\u00a0 google::iam::admin::v1::QueryTestablePermissionsRequest request;\u00a0 request.set_full_resource_name(resource);\u00a0 int count = 0;\u00a0 for (auto& permission : client.QueryTestablePermissions(request)) {\u00a0 \u00a0 if (!permission) throw std::move(permission).status();\u00a0 \u00a0 std::cout << \"Permission successfully retrieved: \" << permission->name()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 << \"\\n\";\u00a0 \u00a0 ++count;\u00a0 }\u00a0 if (count == 0) {\u00a0 \u00a0 std::cout << \"No testable permissions found in resource: \" << resource\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 << \"\\n\";\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C# API reference documentation](https://developers.google.com/api-client-library/dotnet/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/iam/api/CustomRoles/PermissionsQueryTestable.cs) \n```\nusing System;using System.Collections.Generic;using Google.Apis.Auth.OAuth2;using Google.Apis.Iam.v1;using Google.Apis.Iam.v1.Data;public partial class CustomRoles{\u00a0 \u00a0 public static IList<Permission> QueryTestablePermissions(\u00a0 \u00a0 \u00a0 \u00a0 string fullResourceName)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 var credential = GoogleCredential.GetApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .CreateScoped(IamService.Scope.CloudPlatform);\u00a0 \u00a0 \u00a0 \u00a0 var service = new IamService(new IamService.Initializer\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HttpClientInitializer = credential\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 var request = new QueryTestablePermissionsRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 FullResourceName = fullResourceName\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 var response = service.Permissions.QueryTestablePermissions(request)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .Execute();\u00a0 \u00a0 \u00a0 \u00a0 foreach (var p in response.Permissions)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(p.Name);\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return response.Permissions;\u00a0 \u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Go API reference documentation](https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/snippets/permissions_query_testable.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"google.golang.org/api/iam/v1\")// queryTestablePermissions lists testable permissions on a resource.func queryTestablePermissions(w io.Writer, fullResourceName string) ([]*iam.Permission, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 service, err := iam.NewService(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"iam.NewService: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 request := &iam.QueryTestablePermissionsRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 FullResourceName: fullResourceName,\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 response, err := service.Permissions.QueryTestablePermissions(request).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"Permissions.QueryTestablePermissions: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 for _, p := range response.Permissions {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Found permissions: %v\", p.Name)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return response.Permissions, nil}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Java API reference documentation](https://developers.google.com/api-client-library/java/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/QueryTestablePermissions.java) \n```\nimport com.google.cloud.iam.admin.v1.IAMClient;import com.google.cloud.iam.admin.v1.IAMClient.QueryTestablePermissionsPagedResponse;import com.google.iam.admin.v1.QueryTestablePermissionsRequest;import java.io.IOException;/** View available permissions in a project. */public class QueryTestablePermissions {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace the variable before running the sample.\u00a0 \u00a0 // Full resource names can take one of the following forms:\u00a0 \u00a0 // cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 // cloudresourcemanager.googleapis.com/organizations/NUMERIC_ID\u00a0 \u00a0 String fullResourceName = \"your-full-resource-name\";\u00a0 \u00a0 queryTestablePermissions(fullResourceName);\u00a0 }\u00a0 public static void queryTestablePermissions(String fullResourceName) throws IOException {\u00a0 \u00a0 QueryTestablePermissionsRequest queryTestablePermissionsRequest =\u00a0 \u00a0 \u00a0 \u00a0 QueryTestablePermissionsRequest.newBuilder().setFullResourceName(fullResourceName).build();\u00a0 \u00a0 try (IAMClient iamClient = IAMClient.create()) {\u00a0 \u00a0 \u00a0 QueryTestablePermissionsPagedResponse queryTestablePermissionsPagedResponse =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 iamClient.queryTestablePermissions(queryTestablePermissionsRequest);\u00a0 \u00a0 \u00a0 queryTestablePermissionsPagedResponse\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .iterateAll()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .forEach(permission -> System.out.println(permission.getName()));\u00a0 \u00a0 }\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Python API reference documentation](https://developers.google.com/api-client-library/python/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/api-client/custom_roles.py) \n```\ndef query_testable_permissions(resource: str) -> None:\u00a0 \u00a0 \"\"\"Lists valid permissions for a resource.\"\"\"\u00a0 \u00a0 # pylint: disable=no-member\u00a0 \u00a0 permissions = (\u00a0 \u00a0 \u00a0 \u00a0 service.permissions()\u00a0 \u00a0 \u00a0 \u00a0 .queryTestablePermissions(body={\"fullResourceName\": resource})\u00a0 \u00a0 \u00a0 \u00a0 .execute()[\"permissions\"]\u00a0 \u00a0 )\u00a0 \u00a0 for p in permissions:\u00a0 \u00a0 \u00a0 \u00a0 print(p[\"name\"])\n```The ` [permissions.queryTestablePermissions](/iam/docs/reference/rest/v1/permissions/queryTestablePermissions) ` method lists permissions available in an organization or project.\nBefore using any of the request data, make the following replacements:- ``: A URI consisting of the service name and the path to the resource. For examples, see [Full resource names](/iam/docs/full-resource-names) .\n- ``: Optional. The number of permissions to include in the response. The default value is 100, and the maximum value is 1,000. If the number of permissions is greater than the page size, the response contains a pagination token that you can use to retrieve the next page of results.\n- ``: Optional. The pagination token returned in an earlier response from this method. If specified, the list of testable permissions will start where the previous response ended.\nHTTP method and URL:\n```\nPOST https://iam.googleapis.com/v1/permissions:queryTestablePermissions\n```\nRequest JSON body:\n```\n{\n \"fullResourceName\": \"FULL_RESOURCE_NAME\"\n \"pageSize\": PAGE_SIZE,\n \"pageToken\": \"NEXT_PAGE_TOKEN\"\n}\n```\nTo send your request, expand one of these options:\nThe response contains the list of permissions.\n **Note:** Permissions that do not have a`customRolesSupportLevel`field are fully supported in custom roles.\n```\n{\n \"permissions\": [ {\n  \"name\": \"iam.serviceAccountKeys.create\",\n  \"stage\": \"GA\"\n },\n {\n  \"name\": \"iam.serviceAccountKeys.delete\",\n  \"stage\": \"GA\"\n },\n {\n  \"name\": \"iam.serviceAccountKeys.get\",\n  \"stage\": \"GA\"\n }\n ],\n \"nextPageToken\": \"CgoHBajEfjUDQyABEPaIv5vIiMDTVhgDIhtpYW0uc2VydmljZUFjY291bnRLZXlzLmxpc3Q\"\n}\n```\n[](None)\n## Get the role metadata\nBefore you create a custom role, you might want to get the metadata for both predefined and custom roles. Role metadata includes the role ID and permissions contained in the role. You can view the metadata using the Google Cloud console or the IAM API.\nTo view the role metadata, use one of the methods below:\n- In the Google Cloud console, go to the **Roles** page. [ Go to the Roles page](https://console.cloud.google.com/iam-admin/roles) \n- Select your organization or project from the drop-down list at the top of the page.\n- Select the checkbox for one or more roles to view the role permissions. The right side panel displays the permissions contained in the role(s), if any.\nThe icons in the **Type** column indicate if it's a custom role (\"factory\" icon) or a predefined role (hexagon icon).If you want to find all the roles that include a specific permission, type the permission name in the **Filter** box at the top of the Roles list.\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Use the ` [gcloud iam roles describe](/sdk/gcloud/reference/iam/roles/describe) ` command to view metadata for predefined roles and custom roles.To view the metadata for a predefined role, execute the following command:```\ngcloud iam roles describe ROLE_ID\n````` is the ID of the role. Predefined roles include  the `role` prefix in their IDs, for example, `roles/iam.roleViewer` .The following example demonstrates the output of the `describe` command  when executed on the predefined role `roles/iam.roleViewer` :`gcloud iam roles describe roles/iam.roleViewer````\ndescription: Read access to all custom roles in the project.etag: AA==includedPermissions:- iam.roles.get- iam.roles.list- resourcemanager.projects.get- resourcemanager.projects.getIamPolicyname: roles/iam.roleViewerstage: GAtitle: Role Viewer\n```To view the metadata for a custom role, execute one of the following commands:- To view the metadata for a custom role created at the organization level,   execute the following command:```\ngcloud iam roles describe --organization=ORGANIZATION_ID ROLE_ID\n```\n- To view the metadata for a custom role created at the project level,   execute the following command:```\ngcloud iam roles describe --project=PROJECT_ID ROLE_ID\n```\nEach placeholder value is described below:- `` is the numeric ID of the organization,   such as `123456789012` .\n- `` is the name of the project, such as `my-project` .\n- `` is the ID of the role, excluding any prefixes   like `projects/` , `organizations/` , or `roles/` . For example, `myCompanyAdmin` .\nFor more information, see the reference documentation for `` ` [gcloud iam roles describe](/sdk/gcloud/reference/iam/roles/describe) ` .\nTo learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C++ API reference documentation](/cpp/docs/reference/iam/latest) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/iam/samples/iam_samples.cc) \n```\nnamespace iam = ::google::cloud::iam_admin_v1;[](std::string const& name) {\u00a0 iam::IAMClient client(iam::MakeIAMConnection());\u00a0 google::iam::admin::v1::GetRoleRequest request;\u00a0 request.set_name(name);\u00a0 auto response = client.GetRole(request);\u00a0 if (!response) throw std::move(response).status();\u00a0 std::cout << \"Role successfully retrieved: \" << response->DebugString()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 << \"\\n\";}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C# API reference documentation](https://developers.google.com/api-client-library/dotnet/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/iam/api/CustomRoles/RolesGet.cs) \n```\nusing System;using Google.Apis.Auth.OAuth2;using Google.Apis.Iam.v1;using Google.Apis.Iam.v1.Data;public partial class CustomRoles{\u00a0 \u00a0 public static Role GetRole(string name)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 var credential = GoogleCredential.GetApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .CreateScoped(IamService.Scope.CloudPlatform);\u00a0 \u00a0 \u00a0 \u00a0 var service = new IamService(new IamService.Initializer\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HttpClientInitializer = credential\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 var role = service.Roles.Get(name).Execute();\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(role.Name);\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(String.Join(\", \", role.IncludedPermissions));\u00a0 \u00a0 \u00a0 \u00a0 return role;\u00a0 \u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Go API reference documentation](https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/snippets/roles_get.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"google.golang.org/api/iam/v1\")// getRole gets role metadata.func getRole(w io.Writer, name string) (*iam.Role, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 service, err := iam.NewService(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"iam.NewService: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 role, err := service.Roles.Get(name).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"Roles.Get: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Got role: %v\\n\", role.Name)\u00a0 \u00a0 \u00a0 \u00a0 for _, permission := range role.IncludedPermissions {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Got permission: %v\\n\", permission)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return role, nil}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Java API reference documentation](https://developers.google.com/api-client-library/java/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/GetRole.java) \n```\nimport com.google.cloud.iam.admin.v1.IAMClient;import com.google.iam.admin.v1.GetRoleRequest;import com.google.iam.admin.v1.Role;import java.io.IOException;/** Get role metadata. Specifically, printing out role permissions. */public class GetRole {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace the variable before running the sample.\u00a0 \u00a0 String roleId = \"a unique identifier (e.g. testViewer)\";\u00a0 \u00a0 getRole(roleId);\u00a0 }\u00a0 public static void getRole(String roleId) throws IOException {\u00a0 \u00a0 GetRoleRequest getRoleRequest = GetRoleRequest.newBuilder().setName(roleId).build();\u00a0 \u00a0 // Initialize client for sending requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (IAMClient iamClient = IAMClient.create()) {\u00a0 \u00a0 \u00a0 Role role = iamClient.getRole(getRoleRequest);\u00a0 \u00a0 \u00a0 role.getIncludedPermissionsList().forEach(permission -> System.out.println(permission));\u00a0 \u00a0 }\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Python API reference documentation](https://developers.google.com/api-client-library/python/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/api-client/custom_roles.py) \n```\ndef get_role(name: str) -> None:\u00a0 \u00a0 \"\"\"Gets a role.\"\"\"\u00a0 \u00a0 # pylint: disable=no-member\u00a0 \u00a0 role = service.roles().get(name=name).execute()\u00a0 \u00a0 print(role[\"name\"])\u00a0 \u00a0 for permission in role[\"includedPermissions\"]:\u00a0 \u00a0 \u00a0 \u00a0 print(permission)\n```The ` [roles.get](/iam/docs/reference/rest/v1/projects.roles/get) ` method gets the definition of a role.\nBefore using any of the request data, make the following replacements:- ``: The full role name, including any`organizations/`,`projects/`, or`roles/`prefixes. For example,`organizations/123456789012/roles/myCompanyAdmin`.\nHTTP method and URL:\n```\nGET https://iam.googleapis.com/v1/ROLE_NAME\n```\nTo send your request, expand one of these options:\nThe response contains the role definition.\n```\n{\n \"name\": \"projects/my-project/roles/customRole\",\n \"title\": \"My Custom Role\",\n \"description\": \"My custom role description.\",\n \"includedPermissions\": [ \"storage.buckets.get\",\n \"storage.buckets.list\"\n ],\n \"etag\": \"BwWiPg2fmDE=\"\n}\n```\n## Create a custom role\nYou can create a custom role at the project or organization level.\n**Note:** You cannot define custom roles at the folder level. If you need to use a custom role within a folder, define the custom role at the organization level.\nAn organization-level custom role can include any of the IAM [permissions that are supported in customroles](/iam/docs/custom-roles-permissions-support) . A project-level custom role can contain any supported permission permissions that can only be used at the organization or folder level, such as `resourcemanager.organizations.get` . If you try to add these permissions to a project-level custom role, you see an error message:\nThe following warning message is displayed: \"Not applicable for project-level custom roles\". The permission will be automatically unselected from the list of included permissions, and you can proceed with creating the role.\nThe following error message is returned: `INVALID_ARGUMENT: Permission` `` `is not valid` . The custom role will not be created until you first remove the permission from the role definition and try the operation again.\nThe following error message is returned: `Permission` `` `is not valid` , along with an HTTP 400 error code and a status of `INVALID_ARGUMENT` . The custom role will not be created until you first remove the permission from the role definition and try the operation again.\nEach custom role can contain up to 3,000 permissions. Also, the maximum total size of the title, description, and permission names for a custom role is 64 KB. If you need to create a larger custom role, you can split the permissions across multiple custom roles. Choose role titles that show the relationship between the custom roles, such as `Custom Admin (1 of 2)` and `Custom Admin (2 of 2)` .\nEach custom role can have a launch stage. Most launch stages are informational, and help you keep track of whether each role is ready for widespread use. Additionally, the `DISABLED` launch stage lets you [disable a customrole](#disabling-custom-role) . For more information about launch stages, see [Testing and deploying](/iam/docs/roles-overview#custom-role-testing-deploying) .\nSome predefined roles contain deprecated permissions or permissions that are otherwise not permitted in custom roles. If you try to create a custom role based on one of these predefined roles, the custom role will omit the deprecated and restricted permissions.\nTo create a new custom role from scratch:- In the Google Cloud console, go to the **Roles** page. [ Go to the Roles page](https://console.cloud.google.com/iam-admin/roles) \n- Using the drop-down list at the top of the page, select the organization or project in which you want to create a role.\n- Click **Create Role** .\n- Enter a **Name** , **Title** , **Description** , and **Role launch stage** for the role. The role name cannot be changed after the role is created.\n- Click **Add Permissions** .\n- Select the permissions you want to include in the role and click **AddPermissions** . Use the **All Services** and **All Types** drop-down lists to filter and select permissions by services and types.\nCreating a custom role based on an existing predefined role:- In the Google Cloud console, go to the **Roles** page. [Go to the Roles page](https://console.cloud.google.com/iam-admin/roles) \n- Select the organization or project in which you want to create a role.\n- Select the roles on which you want to base the new custom role.\n- Click **Create Role from Selection** .\n- Enter a **Name** , **Title** , **Description** , and **Role launch stage** for the role. The role name cannot be changed after the role is created.\n- Uncheck the permissions you want to exclude from the role.\n- Click **Add Permissions** to include any permissions.\n- Click **Create** .\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Use the ` [gcloud iam roles create](/sdk/gcloud/reference/iam/roles/create) ` command to create new custom roles. You can use this command in two ways:- By providing a YAML file that contains the role definition\n- By using flags to specify the role definition\nWhen creating a custom role, you must specify whether it applies to the  organization level or project level by using the `--organization=` `` or `--project=` `` flags. Each example below creates a  custom role at the project level.A custom role can contain only [permissions that are supported in custom roles](/iam/docs/custom-roles-permissions-support) .  If the custom role contains other permissions, the command fails. **To create a custom role using a YAML file:** Create a YAML file that contains the definition for your custom role. The  file must be structured in the following way:```\ntitle: ROLE_TITLEdescription: ROLE_DESCRIPTIONstage: LAUNCH_STAGEincludedPermissions:- PERMISSION_1- PERMISSION_2\n```Each placeholder value is described below:- `` is a friendly title for the role, such as `\"My Company Admin\"` .\n- `` is a short description of the   role, such as `\"My custom role description\"` .\n- `` indicates the stage of a role in the   launch lifecycle, such as `ALPHA` , `BETA` , or `GA` .\n- `` and `` are permissions to include in the custom role, such as `iam.roles.get` . You   can't use wildcard characters ( `*` ) in permission names.\nSave the YAML file, and then execute one of the following commands:- To create a custom role at the organization level, execute the following   command:```\ngcloud iam roles create ROLE_ID--organization=ORGANIZATION_ID \\\n --file=YAML_FILE_PATH\n```\n- To create a custom role at the project level, execute the following command:```\ngcloud iam roles create ROLE_ID --project=PROJECT_ID \\\n --file=YAML_FILE_PATH\n```\nEach placeholder value is described below:- `` is the name of the role, such as `myCompanyAdmin` .\n- `` is the numeric ID of the organization, such as `123456789012` .\n- `` is the name of the project, such as `my-project` .\n- `` is the path to the location of your YAML file that   contains the custom role definition.\n **Examples** The following example YAML file demonstrates how to create a role definition:```\ntitle: \"My Company Admin\"description: \"My custom role description.\"stage: \"ALPHA\"includedPermissions:- iam.roles.get- iam.roles.list\n```The following example demonstrates how to create a role at the organization level using the YAML file:```\ngcloud iam roles create myCompanyAdmin --organization=123456789012 \\\n --file=my-role-definition.yaml\n```If the role was created successfully, the command's output is similar to the following:```\nCreated role [myCompanyAdmin].description: My custom role description.etag: BwVkBX0sQD0=includedPermissions:- iam.roles.get- iam.roles.listname: organizations/123456789012/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n```The following example demonstrates how to create a role at the project level  using the YAML file:```\ngcloud iam roles create myCompanyAdmin --project=my-project \\\n --file=my-role-definition.yaml\n```If the role was created successfully, the command's output is similar to the  following:```\nCreated role [myCompanyAdmin].description: My custom role description.etag: BwVkBX0sQD0=includedPermissions:- iam.roles.get- iam.roles.listname: projects/my-project/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n``` **To create a custom role using flags:** Execute one of the following commands:- To create a custom role at the organization level, execute the following   command:```\ngcloud iam roles create ROLE_ID--organization=ORGANIZATION_ID \\\n --title=ROLE_TITLE --description=ROLE_DESCRIPTION \\\n --permissions=\"PERMISSIONS_LIST\" --stage=LAUNCH_STAGE\n```\n- To create a custom role at the project level, execute the following command:```\ngcloud iam roles create ROLE_ID --project=PROJECT_ID \\\n --title=ROLE_TITLE --description=ROLE_DESCRIPTION \\\n --permissions=\"PERMISSIONS_LIST\" --stage=LAUNCH_STAGE\n```\nEach placeholder value is described below:- `` is the name of the role, such as `myCompanyAdmin` .\n- `` is the numeric ID of the organization,   such as `123456789012` .\n- `` is the name of the project, such as `my-project` .\n- `` is a friendly title for the role, such as `\"My Company Admin\"` .\n- `` is a short description of the role,   such as `\"My custom role description.\"` .\n- `` contains a comma-separated list of   permissions you want to include in the custom role. For example: `iam.roles.get,iam.roles.list` . You can't use wildcard characters ( `*` ) in   permission names.\n- `` indicates the stage of a role in the   launch lifecycle, such as `ALPHA` , `BETA` , or `GA` .\n **Examples** The following example demonstrates how to create a role at the organization  level using flags:```\ngcloud iam roles create myCompanyAdmin --organization=123456789012 \\\n --title=\"My Company Admin\" --description=\"My custom role description.\" \\\n --permissions=\"iam.roles.get,iam.roles.list\" --stage=ALPHA\n```If the role was created successfully, the command's output is similar to the  following:```\nCreated role [myCompanyAdmin].description: My custom role description.etag: BwVkBX0sQD0=includedPermissions:- iam.roles.get- iam.roles.listname: organizations/123456789012/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n```The following example demonstrates how to create a role at the project  level using flags:```\ngcloud iam roles create myCompanyAdmin --project=my-project \\\n --title=\"My Company Admin\" --description=\"My custom role description.\" \\\n --permissions=\"iam.roles.get,iam.roles.list\" --stage=ALPHA\n```If the role was created successfully, the command's output is similar to the  following:```\nCreated role [myCompanyAdmin].description: My custom role description.etag: BwVkBX0sQD0=includedPermissions:- iam.roles.get- iam.roles.listname: projects/my-project/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n```\nTo learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C++ API reference documentation](/cpp/docs/reference/iam/latest) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/iam/samples/iam_samples.cc) \n```\nnamespace iam = ::google::cloud::iam_admin_v1;[](std::string const& parent, std::string const& role_id,\u00a0 \u00a0std::vector<std::string> const& included_permissions) {\u00a0 iam::IAMClient client(iam::MakeIAMConnection());\u00a0 google::iam::admin::v1::CreateRoleRequest request;\u00a0 request.set_parent(\"projects/\" + parent);\u00a0 request.set_role_id(role_id);\u00a0 google::iam::admin::v1::Role role;\u00a0 role.set_stage(google::iam::admin::v1::Role::GA);\u00a0 for (auto const& permission : included_permissions) {\u00a0 \u00a0 *role.add_included_permissions() = permission;\u00a0 }\u00a0 *request.mutable_role() = role;\u00a0 auto response = client.CreateRole(request);\u00a0 if (!response) throw std::move(response).status();\u00a0 std::cout << \"Role successfully created: \" << response->DebugString()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 << \"\\n\";}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C# API reference documentation](https://developers.google.com/api-client-library/dotnet/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/iam/api/CustomRoles/RolesCreate.cs) \n```\nusing System;using System.Collections.Generic;using Google.Apis.Auth.OAuth2;using Google.Apis.Iam.v1;using Google.Apis.Iam.v1.Data;public partial class CustomRoles{\u00a0 \u00a0 public static Role CreateRole(string name, string projectId, string title,\u00a0 \u00a0 \u00a0 \u00a0 string description, IList<string> permissions, string stage)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 var credential = GoogleCredential.GetApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .CreateScoped(IamService.Scope.CloudPlatform);\u00a0 \u00a0 \u00a0 \u00a0 var service = new IamService(new IamService.Initializer\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HttpClientInitializer = credential\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 var role = new Role\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Title = title,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Description = description,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 IncludedPermissions = permissions,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Stage = stage\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 var request = new CreateRoleRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Role = role,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 RoleId = name\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 role = service.Projects.Roles.Create(request,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"projects/\" + projectId).Execute();\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(\"Created role: \" + role.Name);\u00a0 \u00a0 \u00a0 \u00a0 return role;\u00a0 \u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Go API reference documentation](https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/snippets/roles_create.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"google.golang.org/api/iam/v1\")// createRole creates a custom role.func createRole(w io.Writer, projectID, name, title, description, stage string, permissions []string) (*iam.Role, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 service, err := iam.NewService(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"iam.NewService: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 request := &iam.CreateRoleRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Role: &iam.Role{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Title: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 title,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Description: \u00a0 \u00a0 \u00a0 \u00a0 description,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 IncludedPermissions: permissions,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Stage: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stage,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 RoleId: name,\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 role, err := service.Projects.Roles.Create(\"projects/\"+projectID, request).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"Projects.Roles.Create: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Created role: %v\", role.Name)\u00a0 \u00a0 \u00a0 \u00a0 return role, nil}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Java API reference documentation](https://developers.google.com/api-client-library/java/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/CreateRole.java) \n```\nimport com.google.cloud.iam.admin.v1.IAMClient;import com.google.iam.admin.v1.CreateRoleRequest;import com.google.iam.admin.v1.Role;import com.google.iam.admin.v1.Role.RoleLaunchStage;import java.io.IOException;import java.util.Arrays;/** Create role. */public class CreateRole {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace the variables before running the sample.\u00a0 \u00a0 String projectId = \"your-project-id\";\u00a0 \u00a0 String roleId = \"a unique identifier (e.g. testViewer)\";\u00a0 \u00a0 String title = \"a title for your role (e.g. IAM Role Viewer)\";\u00a0 \u00a0 String description = \"a description of the role\";\u00a0 \u00a0 Iterable<String> includedPermissions =\u00a0 \u00a0 \u00a0 \u00a0 Arrays.asList(\"roles/iam.roleViewer\", \"roles/logging.viewer\");\u00a0 \u00a0 createRole(projectId, title, description, includedPermissions, roleId);\u00a0 }\u00a0 public static void createRole(\u00a0 \u00a0 \u00a0 String projectId,\u00a0 \u00a0 \u00a0 String title,\u00a0 \u00a0 \u00a0 String description,\u00a0 \u00a0 \u00a0 Iterable<String> includedPermissions,\u00a0 \u00a0 \u00a0 String roleId)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 Role.Builder roleBuilder =\u00a0 \u00a0 \u00a0 \u00a0 Role.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setTitle(title)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDescription(description)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addAllIncludedPermissions(includedPermissions)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // See launch stage enums at\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // https://cloud.google.com/iam/docs/reference/rpc/google.iam.admin.v1#rolelaunchstage\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setStage(RoleLaunchStage.BETA);\u00a0 \u00a0 CreateRoleRequest createRoleRequest =\u00a0 \u00a0 \u00a0 \u00a0 CreateRoleRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setParent(\"projects/\" + projectId)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setRoleId(roleId)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setRole(roleBuilder)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client for sending requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (IAMClient iamClient = IAMClient.create()) {\u00a0 \u00a0 \u00a0 Role result = iamClient.createRole(createRoleRequest);\u00a0 \u00a0 \u00a0 System.out.println(\"Created role: \" + result.getName());\u00a0 \u00a0 }\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Python API reference documentation](https://developers.google.com/api-client-library/python/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/api-client/custom_roles.py) \n```\ndef create_role(\u00a0 \u00a0 name: str, project: str, title: str, description: str, permissions: str, stage: str) -> dict:\u00a0 \u00a0 \"\"\"Creates a role.\"\"\"\u00a0 \u00a0 # pylint: disable=no-member\u00a0 \u00a0 role = (\u00a0 \u00a0 \u00a0 \u00a0 service.projects()\u00a0 \u00a0 \u00a0 \u00a0 .roles()\u00a0 \u00a0 \u00a0 \u00a0 .create(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 parent=\"projects/\" + project,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 body={\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"roleId\": name,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"role\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"title\": title,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"description\": description,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"includedPermissions\": permissions,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"stage\": stage,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 .execute()\u00a0 \u00a0 )\u00a0 \u00a0 print(\"Created role: \" + role[\"name\"])\u00a0 \u00a0 return role\n```The ` [roles.create](/iam/docs/reference/rest/v1/projects.roles/create) ` method creates a custom role in a project or organization.\nBefore using any of the request data, make the following replacements:- ``: The resource type whose custom roles you want to manage. Use the value`projects`or`organizations`.\n- ``: The project ID or organization ID whose custom roles you want to manage. Project IDs are alphanumeric strings, like`my-project`. Organization IDs are numeric, like`123456789012`.\n- ``: The name of the role, such as`myCompanyAdmin`.\n- ``: The human-readable title for the role. For example,`My Company Admin`.\n- ``: A description for the role. For example,`\"The company admin role allows company admins to access important resources\"`.\n- `` and `` : The permissions that you want to include in the role. For example, `storage.objects.update` . You can't use wildcard characters ( `*` ) in permission names.A custom role can contain only [permissions that are supported in custom  roles](/iam/docs/custom-roles-permissions-support) . If the custom role contains other permissions, the request fails.\n- ``: The current launch stage of the role. This field can contain one of the following values:`EAP`,`ALPHA`,`BETA`,`GA`,`DEPRECATED`, or`DISABLED`.\nHTTP method and URL:\n```\nPOST https://iam.googleapis.com/v1/RESOURCE_TYPE/RESOURCE_ID/roles\n```\nRequest JSON body:\n```\n{\n \"roleId\": \"ROLE_ID\",\n \"role\": {\n \"title\": \"ROLE_TITLE\",\n \"description\": \"ROLE_DESCRIPTION\",\n \"includedPermissions\": [  \"PERMISSION_1\",\n  \"PERMISSION_2\"\n ],\n \"stage\": \"LAUNCH_STAGE\"\n }\n}\n```\nTo send your request, expand one of these options:\nThe response contains the role you created.\n```\n{\n \"name\": \"projects/myProject/roles/myCompanyAdmin\",\n \"title\": \"My Company Admin\",\n \"description\": \"My custom role description.\",\n \"includedPermissions\": [ \"iam.roles.get\",\n \"iam.roles.list\"\n ],\n \"etag\": \"BwWox/JbaZw=\"\n}\n```\n[](None)\n## Edit an existing custom role\nA common pattern for updating a resource's metadata, such as a custom role, is the pattern. With this pattern, you read the role's current state, update the data locally, and then send the modified data for writing.\nThe read-modify-write pattern can cause a conflict if two or more independent processes attempt the sequence simultaneously. For example, if two owners for a project try to make conflicting changes to a role at the same time, some changes could fail. IAM solves this problem using an `etag` property in custom roles. This property is used to verify if the custom role has changed since the last request. When you make a request to IAM with an etag value, IAM compares the etag value in the request with the existing etag value associated with the custom role. It writes the change only if the etag values match.\nWhen you update a role, first get the role using `roles.get()` , update the role, and then write the updated role using `roles.patch()` . Use the etag value when setting the role only if the corresponding role in `roles.get()` contains an etag value.\n**Note:** When modifying a custom role by adding or removing any of the following permissions: `resourcemanager.organizations.get` , `resourcemanager.folders.get` , and `resourcemanager.projects.get` , the change to the custom role can require up to 24 hours to take effect for the `organizations.search` and `folders.search` Cloud Resource Manager APIs. The API `projects.list` is also subject to this delay for API calls that do not provide a filter specifying a parent type and ID. This delay occurs because these permissions involve search functionality, and it can take up to 24 hours between rebuilds of the search index.\n- In the Google Cloud console, go to the **Roles** page. [Go to the Roles page](https://console.cloud.google.com/iam-admin/roles) \n- Using the drop-down list at the top of the page, select the project or organization that contains the role that you want to edit.\n- Click a custom role.\n- Click **Edit Role** .\n- To update the role's metadata, edit the role's **Title** , **Description** , or **Role launch stage** .\n- To update the role's permissions, do the following:- Click **Add Permissions** to add new permissions to the role.\n- Uncheck permissions to remove permissions from the role.\n- Click **Update** to save the edited role.\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Use the ` [gcloud iam roles update](/sdk/gcloud/reference/iam/roles/update) ` command to update custom roles. You can use this command in two ways:- By providing a YAML file that contains the updated role definition\n- By using flags to specify the updated role definition\nWhen updating a custom role, you must specify whether it applies to the  organization level or project level by using the `--organization=` `` or `--project=` `` flags. Each example below creates a  custom role at the project level. **To update a custom role using a YAML file:** Get the current definition for the role by executing one of the following commands:- To get the role definition of an organization-level custom role, execute the   following command:```\ngcloud iam roles describe ROLE_ID --organization=ORGANIZATION_ID\n```\n- To get the role definition of a project-level custom role, execute the following command:```\ngcloud iam roles describe ROLE_ID --project=PROJECT_ID\n```\nEach placeholder value is described below:- `` is the name of the role to update, such as `myCompanyAdmin` .\n- `` is the numeric ID of the organization, such as `123456789012` .\n- `` is the name of the project, such as `my-project` .\nThe `describe` command returns the role's definition and includes  an `etag` value that uniquely identifies the current version  of the role. The `etag` value should be provided in the updated  role definition to ensure that any concurrent role changes are not overwritten.The `describe` command returns the following output:```\ndescription: ROLE_DESCRIPTIONetag: ETAGincludedPermissions:- PERMISSION_1- PERMISSION_2name: ROLE_NAMEstage: LAUNCH_STAGEtitle: ROLE_TITLE\n```Each placeholder value is described below:- `` is a short description of the role,   such as `\"My custom role description\"` .\n- `` is the unique identifier for the current   version of the role, such as `BwVkBkbfr70=` .\n- `` and `` are permissions to include in the custom role, such as `iam.roles.get` .   You can't use wildcard characters ( `*` ) in permission names.\n- `` is the full role name, including any `organizations/` , `projects/` , or `roles/` prefixes. For example, `organizations/123456789012/roles/myCompanyAdmin.`\n- `` indicates the stage of a role in the   launch lifecycle, such as `ALPHA` , `BETA` , or `GA` .\n- `` is a friendly title for the role, such as `\"My Company Admin\"` .\nTo update the role, either include the outputted role definition to a YAML  file or update the original YAML file with the outputted `etag` value.Consider the following example YAML file, which contains the output from  the `describe` command for a project-level role and adds two  Cloud Storage permissions:```\ndescription: My custom role description.etag: BwVkBkbfr70=includedPermissions:- iam.roles.get- iam.roles.list- storage.buckets.get- storage.buckets.listname: projects/my-project/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n```Save the YAML file, and then execute one of the following commands:- To update an organization-level role, execute the following command:```\ngcloud iam roles update ROLE_ID--organization=ORGANIZATION_ID \\\n --file=YAML_FILE_PATH\n```\n- To update a project-level role, execute the following command:```\ngcloud iam roles update ROLE_ID --project=PROJECT_ID \\\n --file=YAML_FILE_PATH\n```\nEach placeholder value is described below:- `` is the name of the role to update, such as `myCompanyAdmin` .\n- `` is the numeric ID of the organization,   such as `123456789012` .\n- `` is the name of the project, such as `my-project-id` .\n- `` is the path to the location of your YAML   file that contains the updated custom role definition.\n **Examples** The following example demonstrates how to update an organization-level role using a YAML file:```\ngcloud iam roles update ROLE_ID --organization=ORGANIZATION_ID \\\n --file=YAML_FILE_PATH\n```- To update a project-level role, execute the following command:```\ngcloud iam roles update ROLE_ID --project=PROJECT_ID \\\n --file=YAML_FILE_PATH\n```\nEach placeholder value is described below:- `` is the name of the role to update, such as `myCompanyAdmin` .\n- `` is the numeric ID of the organization, such as `123456789012` .\n- `` is the name of the project, such as `my-project` .\n- `` is the path to the location of your YAML file that   contains the updated custom role definition.\n **Examples** The following example demonstrates how to update an organization-level role  using a YAML file:```\ngcloud iam roles update myCompanyAdmin --organization=123456789012 \\\n --file=my-role-definition.yaml\n```If the role was updated successfully, the command's output is similar to the  following:```\ndescription: My custom role description.etag: BwVkBwDN0lg=includedPermissions:- iam.roles.get- iam.roles.list- storage.buckets.get- storage.buckets.listname: organizations/123456789012/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n```The following example demonstrates how to update a project-level role using a YAML file:```\ngcloud iam roles update myCompanyAdmin --project=my-project \\\n --file=my-role-definition.yaml\n```If the role was updated successfully, the command's output is similar to the following:```\ndescription: My custom role description.etag: BwVkBwDN0lg=includedPermissions:- iam.roles.get- iam.roles.list- storage.buckets.get- storage.buckets.listname: projects/my-project/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n``` **To update a custom role using flags:** Each part of a role definition can be updated using a corresponding flag.  See the ` [gcloud iam roles update](/sdk/gcloud/reference/iam/roles/update) ` topic for a list of all possible flags.You can use the following flags to add or remove permissions:- `--add-permissions=` `` : Adds one or more   comma-separated permissions to the role. You can't use wildcard characters   ( `*` ) in permission names.\n- `--remove-permissions=` `` : Removes one or more   comma-separated permissions from the role. You can't use wildcard characters   ( `*` ) in permission names.\nAlternatively, you can simply specify the new permissions using the `--permissions=` `` flag and providing a  comma-separated list of permissions to replace the existing permissions list.To update other parts of the role definition, execute one of the following  commands:- To update an organization-level role, execute the following command:```\ngcloud iam roles update ROLE_ID--organization=ORGANIZATION_ID \\\n --title=ROLE_TITLE --description=ROLE_DESCRIPTION \\\n --stage=LAUNCH_STAGE\n```\n- To update a project-level role, execute the following command:```\ngcloud iam roles update ROLE_ID --project=PROJECT_ID \\\n --title=ROLE_TITLE --description=ROLE_DESCRIPTION \\\n --stage=LAUNCH_STAGE\n```\nEach placeholder value is described below:- `` is the name of the role, such as `myCompanyAdmin` .\n- `` is the numeric ID of the organization,   such as `123456789012` .\n- `` is the name of the project, such as `my-project` .\n- `` is a friendly title for the role, such as `\"My Company Admin\"` .\n- `` is a short description of the role,   such as `\"My custom role description.\"` .\n- `` indicates the stage of a role in the   launch lifecycle, such as `ALPHA` , `BETA` , or `GA` .\n **Examples** The following example demonstrates how to add permissions to an  organization-level role using flags:```\ngcloud iam roles update myCompanyAdmin --organization=123456789012 \\\n --add-permissions=\"storage.buckets.get,storage.buckets.list\"\n```If the role was updated successfully, the command's output is similar to the following:```\ndescription: My custom role description.etag: BwVkBwDN0lg=includedPermissions:- iam.roles.get- iam.roles.list- storage.buckets.get- storage.buckets.listname: organization/123456789012/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n```The following example demonstrates how to add permissions to a project-level role using flags:```\ngcloud iam roles update myCompanyAdmin --project=my-project \\\n --add-permissions=\"storage.buckets.get,storage.buckets.list\"\n```If the role was updated successfully, the command's output is similar to the following:```\ndescription: My custom role description.etag: BwVkBwDN0lg=includedPermissions:- iam.roles.get- iam.roles.list- storage.buckets.get- storage.buckets.listname: projects/my-project/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n```\nTo learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C++ API reference documentation](/cpp/docs/reference/iam/latest) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/iam/samples/iam_samples.cc) \n```\nnamespace iam = ::google::cloud::iam_admin_v1;[](std::string const& name, std::string const& title) {\u00a0 iam::IAMClient client(iam::MakeIAMConnection());\u00a0 google::iam::admin::v1::UpdateRoleRequest request;\u00a0 request.set_name(name);\u00a0 google::iam::admin::v1::Role role;\u00a0 role.set_title(title);\u00a0 google::protobuf::FieldMask update_mask;\u00a0 *update_mask.add_paths() = \"title\";\u00a0 *request.mutable_role() = role;\u00a0 *request.mutable_update_mask() = update_mask;\u00a0 auto response = client.UpdateRole(request);\u00a0 if (!response) throw std::move(response).status();\u00a0 std::cout << \"Role successfully updated: \" << response->DebugString()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 << \"\\n\";}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C# API reference documentation](https://developers.google.com/api-client-library/dotnet/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/iam/api/CustomRoles/RolesEdit.cs) \n```\nusing System;using System.Collections.Generic;using Google.Apis.Auth.OAuth2;using Google.Apis.Iam.v1;using Google.Apis.Iam.v1.Data;public partial class CustomRoles{\u00a0 \u00a0 public static Role EditRole(string name, string projectId, string newTitle,\u00a0 \u00a0 \u00a0 \u00a0 string newDescription, IList<string> newPermissions, string newStage)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 var credential = GoogleCredential.GetApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .CreateScoped(IamService.Scope.CloudPlatform);\u00a0 \u00a0 \u00a0 \u00a0 var service = new IamService(new IamService.Initializer\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HttpClientInitializer = credential\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 // First, get a Role using List() or Get().\u00a0 \u00a0 \u00a0 \u00a0 string resource = $\"projects/{projectId}/roles/{name}\";\u00a0 \u00a0 \u00a0 \u00a0 var role = service.Projects.Roles.Get(resource).Execute();\u00a0 \u00a0 \u00a0 \u00a0 // Then you can update its fields.\u00a0 \u00a0 \u00a0 \u00a0 role.Title = newTitle;\u00a0 \u00a0 \u00a0 \u00a0 role.Description = newDescription;\u00a0 \u00a0 \u00a0 \u00a0 role.IncludedPermissions = newPermissions;\u00a0 \u00a0 \u00a0 \u00a0 role.Stage = newStage;\u00a0 \u00a0 \u00a0 \u00a0 role = service.Projects.Roles.Patch(role, resource).Execute();\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(\"Updated role: \" + role.Name);\u00a0 \u00a0 \u00a0 \u00a0 return role;\u00a0 \u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Go API reference documentation](https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/snippets/roles_edit.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"google.golang.org/api/iam/v1\")// editRole modifies a custom role.func editRole(w io.Writer, projectID, name, newTitle, newDescription, newStage string, newPermissions []string) (*iam.Role, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 service, err := iam.NewService(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"iam.NewService: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resource := \"projects/\" + projectID + \"/roles/\" + name\u00a0 \u00a0 \u00a0 \u00a0 role, err := service.Projects.Roles.Get(resource).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"Projects.Roles.Get: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 role.Title = newTitle\u00a0 \u00a0 \u00a0 \u00a0 role.Description = newDescription\u00a0 \u00a0 \u00a0 \u00a0 role.IncludedPermissions = newPermissions\u00a0 \u00a0 \u00a0 \u00a0 role.Stage = newStage\u00a0 \u00a0 \u00a0 \u00a0 role, err = service.Projects.Roles.Patch(resource, role).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"Projects.Roles.Patch: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Updated role: %v\", role.Name)\u00a0 \u00a0 \u00a0 \u00a0 return role, nil}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Java API reference documentation](https://developers.google.com/api-client-library/java/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/EditRole.java) \n```\nimport com.google.cloud.iam.admin.v1.IAMClient;import com.google.iam.admin.v1.Role;import com.google.iam.admin.v1.Role.RoleLaunchStage;import com.google.iam.admin.v1.UpdateRoleRequest;import com.google.protobuf.FieldMask;import java.io.IOException;/** Edit role metadata. Specifically, update description and launch stage. */public class EditRole {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace the variables before running the sample.\u00a0 \u00a0 // Role ID must point to an existing role.\u00a0 \u00a0 String projectId = \"your-project-id\";\u00a0 \u00a0 String roleId = \"a unique identifier (e.g. testViewer)\";\u00a0 \u00a0 String description = \"a new description of the role\";\u00a0 \u00a0 editRole(projectId, roleId, description);\u00a0 }\u00a0 public static void editRole(String projectId, String roleId, String description)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 String roleName = \"projects/\" + projectId + \"/roles/\" + roleId;\u00a0 \u00a0 Role.Builder roleBuilder =\u00a0 \u00a0 \u00a0 \u00a0 Role.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setName(roleName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDescription(description)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // See launch stage enums at\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // https://cloud.google.com/iam/docs/reference/rpc/google.iam.admin.v1#rolelaunchstage\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setStage(RoleLaunchStage.GA);\u00a0 \u00a0 FieldMask fieldMask = FieldMask.newBuilder().addPaths(\"description\").addPaths(\"stage\").build();\u00a0 \u00a0 UpdateRoleRequest updateRoleRequest =\u00a0 \u00a0 \u00a0 \u00a0 UpdateRoleRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setName(roleName)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setRole(roleBuilder)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setUpdateMask(fieldMask)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // Initialize client for sending requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (IAMClient iamClient = IAMClient.create()) {\u00a0 \u00a0 \u00a0 Role result = iamClient.updateRole(updateRoleRequest);\u00a0 \u00a0 \u00a0 System.out.println(\"Edited role:\\n\" + result);\u00a0 \u00a0 }\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Python API reference documentation](https://developers.google.com/api-client-library/python/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/api-client/custom_roles.py) \n```\ndef edit_role(\u00a0 \u00a0 name: str, project: str, title: str, description: str, permissions: str, stage: str) -> dict:\u00a0 \u00a0 \"\"\"Creates a role.\"\"\"\u00a0 \u00a0 # pylint: disable=no-member\u00a0 \u00a0 role = (\u00a0 \u00a0 \u00a0 \u00a0 service.projects()\u00a0 \u00a0 \u00a0 \u00a0 .roles()\u00a0 \u00a0 \u00a0 \u00a0 .patch(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name=\"projects/\" + project + \"/roles/\" + name,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 body={\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"title\": title,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"description\": description,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"includedPermissions\": permissions,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"stage\": stage,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 .execute()\u00a0 \u00a0 )\u00a0 \u00a0 print(\"Updated role: \" + role[\"name\"])\u00a0 \u00a0 return role\n```The ` [roles.patch](/iam/docs/reference/rest/v1/projects.roles/patch) ` method updates a custom role in a project or organization.\nBefore using any of the request data, make the following replacements:\n **Required:** - ``: The resource type whose custom roles you want to manage. Use the value`projects`or`organizations`.\n- ``: The project ID or organization ID whose custom roles you want to manage. Project IDs are alphanumeric strings, like`my-project`. Organization IDs are numeric, like`123456789012`.\n- ``: The full role name, including any`organizations/`,`projects/`, or`roles/`prefixes. For example,`organizations/123456789012/roles/myCompanyAdmin`.\n **Recommended:** - ``: An identifier for a version of the role. Include this field to prevent overwriting other role changes.\n **Optional (define one or more of the following values):** - ``: The human-readable title for the role. For example,`My Company Admin`.\n- ``: A description for the role. For example,`\"The company admin role allows company admins to access important resources\"`.\n- ``and``: The permissions that you want to include in the role. For example,`storage.objects.update`. You can't use wildcard characters (`*`) in permission names.\n- ``: The current launch stage of the role. This field can contain one of the following values:`EAP`,`ALPHA`,`BETA`,`GA`,`DEPRECATED`, or`DISABLED`.\nHTTP method and URL:\n```\nPATCH https://iam.googleapis.com/v1/RESOURCE_TYPE/RESOURCE_ID/roles\n```\nRequest JSON body:\n```\n{\n \"roleId\": \"ROLE_NAME\",\n \"title\": \"ROLE_TITLE\",\n \"description\": \"ROLE_DESCRIPTION\",\n \"includedPermissions\": [ \"PERMISSION_1\",\n \"PERMISSION_2\"\n ],\n \"stage\": \"LAUNCH-STAGE\",\n \"etag\": \"ETAG\"\n}\n```\nTo send your request, expand one of these options:\nThe response contains an abbreviated role definition that includes the role name, the fields that you updated, and an etag that identifies the current version of the role.\n```\n{\n \"name\": \"projects/test-project-1000092/roles/myCompanyAdmin\",\n \"title\": \"My Updated Company Admin\",\n \"includedPermissions\": [ \"storage.buckets.get\",\n \"storage.buckets.list\"\n ],\n \"stage\": \"BETA\",\n \"etag\": \"BwWoyDpAxBc=\"\n}\n```\n[](None)\n## Disable a custom role\nYou can disable a custom role by changing its launch stage to `DISABLED` . When a role is disabled, any role bindings related to the role are inactivated, meaning that granting the role to a user has no effect.\n- In the Google Cloud console, go to the **Roles** page. [ Go to the Roles page](https://console.cloud.google.com/iam-admin/roles) \n- Click \"Select a project\" drop-down list at the top of the page.\n- Select your organization or project.\n- Select a custom role and click **Disable** .\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Use the ` [gcloud iam roles update](/sdk/gcloud/reference/iam/roles/update) ` command to disable a custom role by setting its launch stage to `DISABLED` .As described in the **gcloud** tab of the [Editing an existing custom role](#editing_an_existing_custom_role) section, you can update an existing custom role in the following two ways:- By providing a YAML file that contains the updated role definition\n- By using flags to specify the updated role definition\nThe easiest way to disable an existing custom role is to use the `--stage` flag and set it to `DISABLED` . Execute one of the following commands:- To disable an organization-level role, execute the following command:```\ngcloud iam roles update ROLE_ID--organization=ORGANIZATION_ID \\\n --stage=DISABLED\n```\n- To disable a project-level role, execute the following command:```\ngcloud iam roles update ROLE_ID --project=PROJECT_ID \\\n --stage=DISABLED\n```\nEach placeholder value is described below:- `` is the name of the role, such as `myCompanyAdmin` .\n- `` is the numeric ID of the organization, such as `123456789012` .\n- `` is the name of the project, such as `my-project` .\n **Examples** The following example demonstrates how to disable an organization-level role:```\ngcloud iam roles update myCompanyAdmin --organization=123456789012 \\\n --stage=DISABLED\n```If the role was updated successfully, the command's output is similar to the following:```\ndescription: My custom role description.etag: BwVkB5NLIQw=includedPermissions:- iam.roles.get- iam.roles.listname: organization/123456789012/roles/myCompanyAdminstage: DISABLEDtitle: My Company Admin\n```The following example demonstrates how to disable a project-level role:```\ngcloud iam roles update myCompanyAdmin --project=my-project \\\n --stage=DISABLED\n```If the role was updated successfully, the command's output is similar to the following:```\ndescription: My custom role description.etag: BwVkB5NLIQw=includedPermissions:- iam.roles.get- iam.roles.listname: projects/my-project/roles/myCompanyAdminstage: DISABLEDtitle: My Company Admin\n```\n [Update](/iam/docs/creating-custom-roles#editing_an_existing_custom_role) the `stage` field of the role to `DISABLED` . [Update](/iam/docs/creating-custom-roles#editing_an_existing_custom_role) the `stage` field of the role to `DISABLED` . [Update](/iam/docs/creating-custom-roles#editing_an_existing_custom_role) the `stage` field of the role to `DISABLED` . [Update](/iam/docs/creating-custom-roles#editing_an_existing_custom_role) the `stage` field of the role to `DISABLED` . [Update](/iam/docs/creating-custom-roles#editing_an_existing_custom_role) the `stage` field of the role to `DISABLED` .The ` [roles.patch](/iam/docs/reference/rest/v1/projects.roles/patch) ` method lets you change a custom role's launch stage to `DISABLED` , which disables the role.\nBefore using any of the request data, make the following replacements:- ``: The resource type whose custom roles you want to manage. Use the value`projects`or`organizations`.\n- ``: The project ID or organization ID whose custom roles you want to manage. Project IDs are alphanumeric strings, like`my-project`. Organization IDs are numeric, like`123456789012`.\n- ``: The full role name, including any`organizations/`,`projects/`, or`roles/`prefixes. For example,`organizations/123456789012/roles/myCompanyAdmin`.\n- ``: An identifier for a version of the role. Include this field to prevent overwriting other role changes.\nHTTP method and URL:\n```\nPATCH https://iam.googleapis.com/v1/RESOURCE_TYPE/RESOURCE_ID/roles\n```\nRequest JSON body:\n```\n{\n \"roleId\": \"ROLE_NAME\",\n \"stage\": DISABLED,\n \"etag\": \"ETAG\"\n}\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:\n```\n{\n \"name\": \"projects/test-project-1000092/roles/myCompanyAdmin\",\n \"stage\": \"DISABLED\",\n \"etag\": \"BwWoyDpAxBc=\"\n}\n```\n[](None)\n## List roles\nYou can list all custom roles created in your project or organization.\nIn the Google Cloud console, go to the **Roles** page.\n [ Go to the Roles page](https://console.cloud.google.com/iam-admin/roles) \nAll the custom roles for the organization or project that you have selected are listed on the page.\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Use the ` [gcloud iam roles list](/sdk/gcloud/reference/iam/roles/list) ` command to list custom roles and predefined roles for a project or organization:- To list organization-level custom roles, execute the following command:```\ngcloud iam roles list --organization=ORGANIZATION_ID\n```\n- To list project-level custom roles, execute the following command:```\ngcloud iam roles list --project=PROJECT_ID\n```\nEach placeholder value is described below:- `` is the numeric ID of the organization, such as `123456789012` .\n- `` is the name of the project, such as `my-project` .\nTo list deleted roles, you can also specify the `--show-deleted` flag.Execute the following command to list predefined roles:```\ngcloud iam roles list\n```\nTo learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C++ API reference documentation](/cpp/docs/reference/iam/latest) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/iam/samples/iam_samples.cc) \n```\nnamespace iam = ::google::cloud::iam_admin_v1;[](std::string const& project) {\u00a0 iam::IAMClient client(iam::MakeIAMConnection());\u00a0 int count = 0;\u00a0 google::iam::admin::v1::ListRolesRequest request;\u00a0 request.set_parent(project);\u00a0 for (auto& role : client.ListRoles(request)) {\u00a0 \u00a0 if (!role) throw std::move(role).status();\u00a0 \u00a0 std::cout << \"Roles successfully retrieved: \" << role->name() << \"\\n\";\u00a0 \u00a0 ++count;\u00a0 }\u00a0 if (count == 0) {\u00a0 \u00a0 std::cout << \"No roles found in project: \" << project << \"\\n\";\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C# API reference documentation](https://developers.google.com/api-client-library/dotnet/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/iam/api/CustomRoles/RolesList.cs) \n```\nusing System;using System.Collections.Generic;using Google.Apis.Auth.OAuth2;using Google.Apis.Iam.v1;using Google.Apis.Iam.v1.Data;public partial class CustomRoles{\u00a0 \u00a0 public static IList<Role> ListRoles(string projectId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 var credential = GoogleCredential.GetApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .CreateScoped(IamService.Scope.CloudPlatform);\u00a0 \u00a0 \u00a0 \u00a0 var service = new IamService(new IamService.Initializer\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HttpClientInitializer = credential\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 var response = service.Projects.Roles.List(\"projects/\" + projectId)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .Execute();\u00a0 \u00a0 \u00a0 \u00a0 foreach (var role in response.Roles)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(role.Name);\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return response.Roles;\u00a0 \u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Go API reference documentation](https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/snippets/roles_list.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"google.golang.org/api/iam/v1\")// listRoles lists a project's roles.func listRoles(w io.Writer, projectID string) ([]*iam.Role, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 service, err := iam.NewService(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"iam.NewService: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 response, err := service.Projects.Roles.List(\"projects/\" + projectID).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"Projects.Roles.List: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 for _, role := range response.Roles {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Listing role: %v\\n\", role.Name)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return response.Roles, nil}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Java API reference documentation](https://developers.google.com/api-client-library/java/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/ListRoles.java) \n```\nimport com.google.cloud.iam.admin.v1.IAMClient;import com.google.cloud.iam.admin.v1.IAMClient.ListRolesPagedResponse;import com.google.iam.admin.v1.ListRolesRequest;import java.io.IOException;/** List roles in a project. */public class ListRoles {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace the variable before running the sample.\u00a0 \u00a0 String projectId = \"your-project-id\";\u00a0 \u00a0 listRoles(projectId);\u00a0 }\u00a0 public static void listRoles(String projectId) throws IOException {\u00a0 \u00a0 ListRolesRequest listRolesRequest =\u00a0 \u00a0 \u00a0 \u00a0 ListRolesRequest.newBuilder().setParent(\"projects/\" + projectId).build();\u00a0 \u00a0 // Initialize client for sending requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (IAMClient iamClient = IAMClient.create()) {\u00a0 \u00a0 \u00a0 ListRolesPagedResponse listRolesResponse = iamClient.listRoles(listRolesRequest);\u00a0 \u00a0 \u00a0 listRolesResponse.iterateAll().forEach(role -> System.out.println(role));\u00a0 \u00a0 }\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Python API reference documentation](https://developers.google.com/api-client-library/python/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/api-client/custom_roles.py) \n```\ndef list_roles(project_id: str) -> None:\u00a0 \u00a0 \"\"\"Lists roles.\"\"\"\u00a0 \u00a0 # pylint: disable=no-member\u00a0 \u00a0 roles = service.roles().list(parent=\"projects/\" + project_id).execute()[\"roles\"]\u00a0 \u00a0 for role in roles:\u00a0 \u00a0 \u00a0 \u00a0 print(role[\"name\"])\n```The ` [roles.list](/iam/docs/reference/rest/v1/projects.roles/list) ` method lists all of the custom roles in a project or organization.\nBefore using any of the request data, make the following replacements:- ``: The resource type whose custom roles you want to manage. Use the value`projects`or`organizations`.\n- ``: The project ID or organization ID whose custom roles you want to manage. Project IDs are alphanumeric strings, like`my-project`. Organization IDs are numeric, like`123456789012`.\n- ``: Optional. The information to include for the returned roles. To include the roles' permissions, set this field to`FULL`. To exclude the roles' permissions, set this field to`BASIC`. The default value is`BASIC`.\n- ``: Optional. The number of roles to include in the response. The default value is 300, and the maximum value is 1,000. If the number of roles is greater than the page size, the response contains a pagination token that you can use to retrieve the next page of results.\n- ``: Optional. The pagination token returned in an earlier response from this method. If specified, the list of roles will start where the previous request ended.\n **Note:** To list all predefined IAM roles, omit the``and``fields. For example:`GET https://iam.googleapis.com/v1/roles`.\nHTTP method and URL:\n```\nGET https://iam.googleapis.com/v1/RESOURCE_TYPE/RESOURCE_ID/roles?view=ROLE_VIEW&pageSize=PAGE_SIZE&pageToken=NEXT_PAGE_TOKEN\n```\nTo send your request, expand one of these options:\nYou should receive a JSON response similar to the following:\n```\n{\n \"roles\": [ {\n  \"name\": \"projects/my-project/roles/customRole1\",\n  \"title\": \"First Custom Role\",\n  \"description\": \"Created on: 2020-06-01\",\n  \"etag\": \"BwWiPg2fmDE=\"\n },\n {\n  \"name\": \"projects/my-project/roles/customRole2\",\n  \"title\": \"Second Custom Role\",\n  \"description\": \"Created on: 2020-06-07\",\n  \"etag\": \"BwWiuX53Wi0=\"\n }\n ]\n}\n```\n[](None)\n## Delete a custom role\nYou can delete any custom role in your project or organization.\n**Important:** Deleted roles are suspended and cannot be used to create new role bindings in allow policies. Existing role bindings that include the deleted role have no effect.\n- In the Google Cloud console, go to the **Roles** page. [ Go to the Roles page](https://console.cloud.google.com/iam-admin/roles) \n- Select the role you wish to delete and click **Delete** on the top of the page.\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Use the ` [gcloud iam roles delete](/sdk/gcloud/reference/iam/roles/delete) ` command to delete a custom role:- To delete an organization-level custom role, execute the following command:```\ngcloud iam roles delete ROLE_ID --organization=ORGANIZATION_ID\n```\n- To delete a project-level custom role, execute the following command:```\ngcloud iam roles delete ROLE_ID --project=PROJECT_ID\n```\nEach placeholder value is described below:- `` is the name of the role, such as `myCompanyAdmin` .\n- `` is the numeric ID of the organization, such as `123456789012` .\n- `` is the name of the project, such as `my-project` .\nThe role will not be included in `gcloud iam roles list` , unless the `--show-deleted` flag is included. Deleted roles are indicated by the `deleted: true` block in a `list` response, such as:```\n--deleted: true\ndescription: My custom role description.\netag: BwVkB5NLIQw=\nname: projects/my-project/roles/myCompanyAdmin\ntitle: My Company Admin\n--\n```\nTo learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C++ API reference documentation](/cpp/docs/reference/iam/latest) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/iam/samples/iam_samples.cc) \n```\nnamespace iam = ::google::cloud::iam_admin_v1;[](std::string const& name) {\u00a0 iam::IAMClient client(iam::MakeIAMConnection());\u00a0 google::iam::admin::v1::DeleteRoleRequest request;\u00a0 request.set_name(name);\u00a0 auto response = client.DeleteRole(request);\u00a0 if (!response) throw std::move(response).status();\u00a0 std::cout << \"Role successfully deleted: \" << response->DebugString()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 << \"\\n\";}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C# API reference documentation](https://developers.google.com/api-client-library/dotnet/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/iam/api/CustomRoles/RolesDelete.cs) \n```\nusing System;using Google.Apis.Auth.OAuth2;using Google.Apis.Iam.v1;using Google.Apis.Iam.v1.Data;public partial class CustomRoles{\u00a0 \u00a0 public static void DeleteRole(string name, string projectId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 var credential = GoogleCredential.GetApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .CreateScoped(IamService.Scope.CloudPlatform);\u00a0 \u00a0 \u00a0 \u00a0 var service = new IamService(new IamService.Initializer\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HttpClientInitializer = credential\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 service.Projects.Roles.Delete(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 $\"projects/{projectId}/roles/{name}\").Execute();\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(\"Deleted role: \" + name);\u00a0 \u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Go API reference documentation](https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/snippets/roles_delete.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"google.golang.org/api/iam/v1\")// deleteRole deletes a custom role.func deleteRole(w io.Writer, projectID, name string) error {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 service, err := iam.NewService(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"iam.NewService: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 _, err = service.Projects.Roles.Delete(\"projects/\" + projectID + \"/roles/\" + name).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"Projects.Roles.Delete: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Deleted role: %v\", name)\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Java API reference documentation](https://developers.google.com/api-client-library/java/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/DeleteRole.java) \n```\nimport com.google.cloud.iam.admin.v1.IAMClient;import com.google.iam.admin.v1.DeleteRoleRequest;import java.io.IOException;/** Delete role. */public class DeleteRole {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace the variables before running the sample.\u00a0 \u00a0 // Role ID must point to an existing role.\u00a0 \u00a0 String projectId = \"your-project-id\";\u00a0 \u00a0 String roleId = \"a unique identifier (e.g. testViewer)\";\u00a0 \u00a0 deleteRole(projectId, roleId);\u00a0 }\u00a0 public static void deleteRole(String projectId, String roleId) throws IOException {\u00a0 \u00a0 String roleName = \"projects/\" + projectId + \"/roles/\" + roleId;\u00a0 \u00a0 DeleteRoleRequest deleteRoleRequest = DeleteRoleRequest.newBuilder().setName(roleName).build();\u00a0 \u00a0 // Initialize client for sending requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (IAMClient iamClient = IAMClient.create()) {\u00a0 \u00a0 \u00a0 iamClient.deleteRole(deleteRoleRequest);\u00a0 \u00a0 \u00a0 System.out.println(\"Role deleted.\");\u00a0 \u00a0 }\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Python API reference documentation](https://developers.google.com/api-client-library/python/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/api-client/custom_roles.py) \n```\ndef delete_role(name: str, project: str) -> dict:\u00a0 \u00a0 \"\"\"Deletes a role.\"\"\"\u00a0 \u00a0 # pylint: disable=no-member\u00a0 \u00a0 role = (\u00a0 \u00a0 \u00a0 \u00a0 service.projects()\u00a0 \u00a0 \u00a0 \u00a0 .roles()\u00a0 \u00a0 \u00a0 \u00a0 .delete(name=\"projects/\" + project + \"/roles/\" + name)\u00a0 \u00a0 \u00a0 \u00a0 .execute()\u00a0 \u00a0 )\u00a0 \u00a0 print(\"Deleted role: \" + name)\u00a0 \u00a0 return role\n```The ` [roles.delete](/iam/docs/reference/rest/v1/projects.roles/delete) ` method deletes a custom role in a project or organization.\nBefore using any of the request data, make the following replacements:- ``: The full role name, including any`organizations/`,`projects/`, or`roles/`prefixes. For example,`organizations/123456789012/roles/myCompanyAdmin`.\nHTTP method and URL:\n```\nDELETE https://iam.googleapis.com/v1/ROLE_NAME\n```\nTo send your request, expand one of these options:\nThe response contains the definition of the role that was deleted.\n```\n{\n \"name\": \"projects/my-project/roles/myCompanyAdmin\",\n \"title\": \"My Company Admin\",\n \"description\": \"My custom role description.\",\n \"includedPermissions\": [ \"iam.roles.get\",\n \"iam.roles.list\"\n ],\n \"etag\": \"BwWiPg2fmDE=\",\n \"deleted\": true\n}\n```\nWhen a role is deleted, any role bindings that refer to the role remain in your allow policies, but they have no effect. You can undelete a role within 7 days. During this 7-day period, the Google Cloud console shows that the role was deleted. You can also list deleted roles programmatically, but they are omitted by default.\nAfter 7 to 14 days, the role is scheduled for permanent deletion. At this point, the role no longer counts towards the limit of 300 custom roles per organization or 300 custom roles per project.\n**Note:** Custom roles created in a project do not count towards your organization's custom role limit.\nThe permanent deletion process takes 30 days. During the 30-day window, the role and all associated bindings are permanently removed, and you cannot create a new role with the same role ID.\nAfter the role has been permanently deleted, up to 44 days after the initial deletion request, you can create a new role using the same role ID.\n[](None)\n## Undelete a custom role\nUndeleting a role returns it to its previous state.\nRoles can only be undeleted within 7 days. After 7 days, the role can be permanently deleted at any time, and all role bindings that refer to the role are removed.\n- In the Google Cloud console, go to the **Roles** page. [ Go to the Roles page](https://console.cloud.google.com/iam-admin/roles) \n- Locate the role you wish to undelete, click the more icon at the end of the row, and click **Undelete** .\n- In the Google Cloud console, activate Cloud Shell. [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) At the bottom of the Google Cloud console, a [Cloud Shell](/shell/docs/how-cloud-shell-works) session starts and displays a command-line prompt. Cloud Shell is a shell environment  with the Google Cloud CLI  already installed and with values already set for  your current project. It can take a few seconds for the session to initialize.\n- Use the ` [gcloud iam roles undelete](/sdk/gcloud/reference/iam/roles/delete) ` command to undelete a custom role:- To undelete an organization-level custom role, execute the following command:```\ngcloud iam roles undelete ROLE_ID --organization=ORGANIZATION_ID\n```\n- To undelete a project-level custom role, execute the following command:```\ngcloud iam roles undelete ROLE_ID --project=PROJECT_ID\n```\nEach placeholder value is described below:- `` is the name of the role, such as `myCompanyAdmin` .\n- `` is the numeric ID of the organization, such as `123456789012` .\n- `` is the name of the project, such as `my-project` .\n **Examples** The following example demonstrates how to undelete an organization-level custom role:```\ngcloud iam roles undelete myCompanyAdmin --organization=123456789012\n```If the role was undeleted successfully, the command's output is similar to the following:```\ndescription: My custom role description.etag: BwVkCAx9W6w=includedPermissions:- iam.roles.get- iam.roles.listname: organization/123456789012/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n```The following example demonstrates how to undelete a project-level custom role:```\ngcloud iam roles undelete myCompanyAdmin --project=my-project\n```If the role was undeleted successfully, the command's output is similar to the following:```\ndescription: My custom role description.etag: BwVkCAx9W6w=includedPermissions:- iam.roles.get- iam.roles.listname: projects/my-project/roles/myCompanyAdminstage: ALPHAtitle: My Company Admin\n```\nTo learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C++ API reference documentation](/cpp/docs/reference/iam/latest) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/iam/samples/iam_samples.cc) \n```\nnamespace iam = ::google::cloud::iam_admin_v1;[](std::string const& name) {\u00a0 iam::IAMClient client(iam::MakeIAMConnection());\u00a0 google::iam::admin::v1::UndeleteRoleRequest request;\u00a0 request.set_name(name);\u00a0 auto response = client.UndeleteRole(request);\u00a0 if (!response) throw std::move(response).status();\u00a0 std::cout << \"Role successfully undeleted: \" << response->DebugString()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 << \"\\n\";}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM C# API reference documentation](https://developers.google.com/api-client-library/dotnet/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/iam/api/CustomRoles/RolesUndelete.cs) \n```\nusing System;using Google.Apis.Auth.OAuth2;using Google.Apis.Iam.v1;using Google.Apis.Iam.v1.Data;public partial class CustomRoles{\u00a0 \u00a0 public static Role UndeleteRole(string name, string projectId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 var credential = GoogleCredential.GetApplicationDefault()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .CreateScoped(IamService.Scope.CloudPlatform);\u00a0 \u00a0 \u00a0 \u00a0 var service = new IamService(new IamService.Initializer\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HttpClientInitializer = credential\u00a0 \u00a0 \u00a0 \u00a0 });\u00a0 \u00a0 \u00a0 \u00a0 string resource = $\"projects/{projectId}/roles/{name}\";\u00a0 \u00a0 \u00a0 \u00a0 var role = service.Projects.Roles.Undelete(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new UndeleteRoleRequest(), resource).Execute();\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(\"Undeleted role: \" + role.Name);\u00a0 \u00a0 \u00a0 \u00a0 return role;\u00a0 \u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Go API reference documentation](https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/snippets/roles_undelete.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"google.golang.org/api/iam/v1\")// undeleteRole restores a deleted custom role.func undeleteRole(w io.Writer, projectID, name string) (*iam.Role, error) {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 service, err := iam.NewService(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"iam.NewService: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resource := \"projects/\" + projectID + \"/roles/\" + name\u00a0 \u00a0 \u00a0 \u00a0 request := &iam.UndeleteRoleRequest{}\u00a0 \u00a0 \u00a0 \u00a0 role, err := service.Projects.Roles.Undelete(resource, request).Do()\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil, fmt.Errorf(\"Projects.Roles.Undelete: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Undeleted role: %v\", role.Name)\u00a0 \u00a0 \u00a0 \u00a0 return role, nil}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Java API reference documentation](https://developers.google.com/api-client-library/java/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/UndeleteRole.java) \n```\nimport com.google.cloud.iam.admin.v1.IAMClient;import com.google.iam.admin.v1.Role;import com.google.iam.admin.v1.UndeleteRoleRequest;import java.io.IOException;/**\u00a0* Undelete a role to return it to its previous state. Undeleting only works on roles that were\u00a0* deleted in the past 7 days.\u00a0*/public class UndeleteRole {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace the variables before running the sample.\u00a0 \u00a0 // Role ID must point to a role that was deleted in the past 7 days.\u00a0 \u00a0 String projectId = \"your-project-id\";\u00a0 \u00a0 String roleId = \"a unique identifier (e.g. testViewer)\";\u00a0 \u00a0 undeleteRole(projectId, roleId);\u00a0 }\u00a0 public static void undeleteRole(String projectId, String roleId) throws IOException {\u00a0 \u00a0 String roleName = \"projects/\" + projectId + \"/roles/\" + roleId;\u00a0 \u00a0 UndeleteRoleRequest undeleteRoleRequest =\u00a0 \u00a0 \u00a0 \u00a0 UndeleteRoleRequest.newBuilder().setName(roleName).build();\u00a0 \u00a0 // Initialize client for sending requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests.\u00a0 \u00a0 try (IAMClient iamClient = IAMClient.create()) {\u00a0 \u00a0 \u00a0 Role result = iamClient.undeleteRole(undeleteRoleRequest);\u00a0 \u00a0 \u00a0 System.out.println(\"Undeleted role:\\n\" + result);\u00a0 \u00a0 }\u00a0 }}\n```To learn how to install and use the client library for IAM, see [IAM client libraries](/iam/docs/reference/libraries) .       For more information, see the [IAM Python API reference documentation](https://developers.google.com/api-client-library/python/apis/iam/v1) .\nTo authenticate to IAM, set up Application Default Credentials.  For more information, see [Before you begin](#before-you-begin) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/api-client/custom_roles.py) \n```\ndef undelete_role(name: str, project: str) -> dict:\u00a0 \u00a0 \"\"\"Undeletes a role.\"\"\"\u00a0 \u00a0 # pylint: disable=no-member\u00a0 \u00a0 role = (\u00a0 \u00a0 \u00a0 \u00a0 service.projects()\u00a0 \u00a0 \u00a0 \u00a0 .roles()\u00a0 \u00a0 \u00a0 \u00a0 .patch(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name=\"projects/\" + project + \"/roles/\" + name, body={\"stage\": \"DISABLED\"}\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 .execute()\u00a0 \u00a0 )\u00a0 \u00a0 print(\"Disabled role: \" + role[\"name\"])\u00a0 \u00a0 return role\n```The ` [roles.undelete](/iam/docs/reference/rest/v1/projects.roles/undelete) ` method undeletes a custom role in a project or organization.\nBefore using any of the request data, make the following replacements:- ``: The full role name, including any`organizations/`,`projects/`, or`roles/`prefixes. For example,`organizations/123456789012/roles/myCompanyAdmin`.\n- ``: An identifier for a version of the role. Include this field to prevent overwriting other role changes.\nHTTP method and URL:\n```\nPOST https://iam.googleapis.com/v1/ROLE_NAME:undelete\n```\nRequest JSON body:\n```\n{\n \"etag\": \"ETAG\"\n}\n```\nTo send your request, expand one of these options:\nThe response contains the definition of the role that was undeleted.\n```\n{\n \"name\": \"projects/my-project/roles/myCompanyAdmin\",\n \"title\": \"My Company Admin\",\n \"description\": \"My custom role description.\",\n \"includedPermissions\": [ \"iam.roles.get\",\n \"iam.roles.list\"\n ],\n \"etag\": \"BwWiPg2fmDE=\"\n}\n```\n## What's next\n- Find out how to [grant roles to principals](/iam/docs/granting-changing-revoking-access) .\n- Explore how you can use [role recommendations](/iam/docs/recommender-overview) to downscope permissions for principals.\n- Learn about [conditional role grants](/iam/docs/conditions-overview) , which grant a role only if specific conditions are met.", "guide": "IAM"}