{"title": "IAM - \u62d2\u7d55\u8a2a\u554f\u8cc7\u6e90", "url": "https://cloud.google.com/iam/docs/deny-access?hl=zh-cn", "abstract": "# IAM - \u62d2\u7d55\u8a2a\u554f\u8cc7\u6e90\n\u672c\u9801\u9762\u4ecb\u7d39\u77ad\u5982\u4f55\u901a\u904e\u963b\u6b62\u4e3b\u8cec\u865f\u4f7f\u7528\u7279\u5b9a\u7684 Identity and Access Management (IAM) \u6b0a\u9650\u4f86\u62d2\u7d55\u5176\u8a2a\u554f\u3002\n\u5728 IAM \u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 \u62d2\u7d55\u8a2a\u554f\u3002\u6bcf\u500b\u62d2\u7d55\u653f\u7b56\u90fd\u6703\u9644\u52a0\u5230 Google Cloud \u7d44\u7e54\u3001\u6587\u4ef6\u593e\u6216\u9805\u76ee\u3002\u62d2\u7d55\u653f\u7b56\u5305\u542b \uff0c\u7528\u65bc\u6a19\u8b58\u4e3b\u8cec\u865f\u4e26\u5217\u51fa\u4e3b\u8cec\u865f\u7121\u6cd5\u4f7f\u7528\u7684\u6b0a\u9650\u3002\n\u62d2\u7d55\u653f\u7b56\u8207 \uff08\u4e5f\u7a31\u7232 \uff09\u662f\u76f8\u4e92\u7368\u7acb\u7684\u3002\u5141\u8a31\u653f\u7b56\u901a\u904e\u5411\u4e3b\u8cec\u865f\u6388\u4e88 IAM \u89d2\u8272\u4f86\u63d0\u4f9b\u5c0d\u8cc7\u6e90\u7684\u8a2a\u554f\u6b0a\u9650\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528 Google Cloud CLI \u6216 IAM `v2` REST API \u4f86\u7ba1\u7406\u62d2\u7d55\u653f\u7b56\u3002\n", "content": "## \u6e96\u5099\u5de5\u4f5c\n-   Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them   \u5553\u7528 IAM API\u3002 [\u5553\u7528 API](https://console.cloud.google.com/flows/enableapi?apiid=iam.googleapis.com&%3Bredirect=https%3A%2F%2Fconsole.cloud.google.com&hl=zh-cn) \n- \u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49\u3002  Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them   \u9078\u64c7\u6a19\u7c64\u9801\u4ee5\u77ad\u89e3\u60a8\u6253\u7b97\u5982\u4f55\u4f7f\u7528\u672c\u9801\u9762\u4e0a\u7684\u793a\u4f8b\uff1a\n\u60a8\u53ef\u4ee5\u5f9e\u4ee5\u4e0b\u4efb\u4e00\u958b\u767c\u74b0\u5883\u4f7f\u7528\u672c\u9801\u9762\u4e0a\u7684 gcloud CLI \u793a\u4f8b\uff1a- **Cloud Shell** \uff1a\u5982\u9700\u4f7f\u7528\u5df2\u8a2d\u7f6e gcloud CLI \u7684\u5728\u7dda\u7d42\u7aef\uff0c\u8acb\u6fc0\u6d3b Cloud Shell\u3002Cloud Shell \u6703\u8a71\u6703\u5728\u9801\u9762\u5e95\u90e8\u5553\u52d5\uff0c\u4e26\u986f\u793a\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u3002\u8a72\u6703\u8a71\u53ef\u80fd\u9700\u8981\u5e7e\u79d2\u9418\u4f86\u5b8c\u6210\u521d\u59cb\u5316\u3002\n- **\u672c\u5730 shell** \uff1a\u5982\u9700\u5728\u672c\u5730\u958b\u767c\u74b0\u5883\u4e2d\u4f7f\u7528 gcloud CLI\uff0c\u8acb [\u5b89\u88dd](https://cloud.google.com/sdk/docs/install?hl=zh-cn) \u4e26 [\u521d\u59cb\u5316](https://cloud.google.com/sdk/docs/initializing?hl=zh-cn) gcloud CLI\u3002\n\u5982\u9700\u5f9e\u672c\u5730\u958b\u767c\u74b0\u5883\u4f7f\u7528\u672c\u9801\u9762\u4e0a\u7684 Terraform \u793a\u4f8b\uff0c\u8acb\u5b89\u88dd\u4e26\u521d\u59cb\u5316 gcloud CLI\uff0c\u7136\u5f8c\u4f7f\u7528\u7528\u6236\u6191\u64da\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- [\u5b89\u88dd](https://cloud.google.com/sdk/docs/install?hl=zh-cn) Google Cloud CLI\u3002\n- \u5982\u9700 [\u521d\u59cb\u5316](https://cloud.google.com/sdk/docs/initializing?hl=zh-cn) gcloud CLI\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud init\n```\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u7232\u60a8\u7684 Google \u8cec\u865f\u5275\u5efa\u672c\u5730\u8eab\u4efd\u9a57\u8b49\u6191\u64da\uff1a```\ngcloud auth application-default login\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 Google Cloud \u8eab\u4efd\u9a57\u8b49\u6587\u6a94\u4e2d\u7684 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\u5982\u9700\u5f9e\u672c\u5730\u958b\u767c\u74b0\u5883\u4f7f\u7528\u672c\u9801\u9762\u4e0a\u7684 Go \u793a\u4f8b\uff0c\u8acb\u5b89\u88dd\u4e26\u521d\u59cb\u5316 gcloud CLI\uff0c\u7136\u5f8c\u4f7f\u7528\u7528\u6236\u6191\u64da\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- [\u5b89\u88dd](https://cloud.google.com/sdk/docs/install?hl=zh-cn) Google Cloud CLI\u3002\n- \u5982\u9700 [\u521d\u59cb\u5316](https://cloud.google.com/sdk/docs/initializing?hl=zh-cn) gcloud CLI\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud init\n```\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u7232\u60a8\u7684 Google \u8cec\u865f\u5275\u5efa\u672c\u5730\u8eab\u4efd\u9a57\u8b49\u6191\u64da\uff1a```\ngcloud auth application-default login\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 Google Cloud \u8eab\u4efd\u9a57\u8b49\u6587\u6a94\u4e2d\u7684 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\u5982\u9700\u5f9e\u672c\u5730\u958b\u767c\u74b0\u5883\u4f7f\u7528\u672c\u9801\u9762\u4e0a\u7684 Java \u793a\u4f8b\uff0c\u8acb\u5b89\u88dd\u4e26\u521d\u59cb\u5316 gcloud CLI\uff0c\u7136\u5f8c\u4f7f\u7528\u7528\u6236\u6191\u64da\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- [\u5b89\u88dd](https://cloud.google.com/sdk/docs/install?hl=zh-cn) Google Cloud CLI\u3002\n- \u5982\u9700 [\u521d\u59cb\u5316](https://cloud.google.com/sdk/docs/initializing?hl=zh-cn) gcloud CLI\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud init\n```\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u7232\u60a8\u7684 Google \u8cec\u865f\u5275\u5efa\u672c\u5730\u8eab\u4efd\u9a57\u8b49\u6191\u64da\uff1a```\ngcloud auth application-default login\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 Google Cloud \u8eab\u4efd\u9a57\u8b49\u6587\u6a94\u4e2d\u7684 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\u5982\u9700\u5f9e\u672c\u5730\u958b\u767c\u74b0\u5883\u4f7f\u7528\u672c\u9801\u9762\u4e0a\u7684 Node.js \u793a\u4f8b\uff0c\u8acb\u5b89\u88dd\u4e26\u521d\u59cb\u5316 gcloud CLI\uff0c\u7136\u5f8c\u4f7f\u7528\u7528\u6236\u6191\u64da\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- [\u5b89\u88dd](https://cloud.google.com/sdk/docs/install?hl=zh-cn) Google Cloud CLI\u3002\n- \u5982\u9700 [\u521d\u59cb\u5316](https://cloud.google.com/sdk/docs/initializing?hl=zh-cn) gcloud CLI\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud init\n```\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u7232\u60a8\u7684 Google \u8cec\u865f\u5275\u5efa\u672c\u5730\u8eab\u4efd\u9a57\u8b49\u6191\u64da\uff1a```\ngcloud auth application-default login\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 Google Cloud \u8eab\u4efd\u9a57\u8b49\u6587\u6a94\u4e2d\u7684 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\u5982\u9700\u5f9e\u672c\u5730\u958b\u767c\u74b0\u5883\u4f7f\u7528\u672c\u9801\u9762\u4e0a\u7684 Python \u793a\u4f8b\uff0c\u8acb\u5b89\u88dd\u4e26\u521d\u59cb\u5316 gcloud CLI\uff0c\u7136\u5f8c\u4f7f\u7528\u7528\u6236\u6191\u64da\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- [\u5b89\u88dd](https://cloud.google.com/sdk/docs/install?hl=zh-cn) Google Cloud CLI\u3002\n- \u5982\u9700 [\u521d\u59cb\u5316](https://cloud.google.com/sdk/docs/initializing?hl=zh-cn) gcloud CLI\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud init\n```\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u7232\u60a8\u7684 Google \u8cec\u865f\u5275\u5efa\u672c\u5730\u8eab\u4efd\u9a57\u8b49\u6191\u64da\uff1a```\ngcloud auth application-default login\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 Google Cloud \u8eab\u4efd\u9a57\u8b49\u6587\u6a94\u4e2d\u7684 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\u5982\u9700\u5728\u672c\u5730\u958b\u767c\u74b0\u5883\u4e2d\u4f7f\u7528\u672c\u9801\u9762\u4e0a\u7684 REST API \u793a\u4f8b\uff0c\u8acb\u4f7f\u7528\u60a8\u63d0\u4f9b\u7d66 gcloud CLI \u7684\u6191\u64da\u3002- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- [\u5b89\u88dd](https://cloud.google.com/sdk/docs/install?hl=zh-cn) Google Cloud CLI\uff0c\u7136\u5f8c\u901a\u904e\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4 [\u521d\u59cb\u5316](https://cloud.google.com/sdk/docs/initializing?hl=zh-cn) Google Cloud CLI\uff1a\n- ```\ngcloud init\n```\n- \u95b1\u8b80 [\u62d2\u7d55\u653f\u7b56\u6982\u89bd](https://cloud.google.com/iam/docs/deny-overview?hl=zh-cn) \u3002\n### \u6240\u9700\u7684\u89d2\u8272\n\u5982\u9700\u7372\u5f97\u7ba1\u7406\u62d2\u7d55\u653f\u7b56\u6240\u9700\u7684\u6b0a\u9650\uff0c\u8acb\u8b93\u7ba1\u7406\u54e1\u5411\u60a8\u6388\u4e88\u7d44\u7e54\u7684\u4ee5\u4e0b IAM \u89d2\u8272\uff1a\n- [Deny Reviewer](https://cloud.google.com/iam/docs/understanding-roles?hl=zh-cn#iam.denyReviewer) (`roles/iam.denyReviewer`)\uff08\u5982\u9700\u67e5\u770b\u62d2\u7d55\u653f\u7b56\uff09\n- [Deny Admin](https://cloud.google.com/iam/docs/understanding-roles?hl=zh-cn#iam.denyAdmin) (`roles/iam.denyAdmin`)\uff08\u5982\u9700\u67e5\u770b\u3001\u5275\u5efa\u3001\u66f4\u65b0\u548c\u522a\u9664\u62d2\u7d55\u653f\u7b56\uff09\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u6388\u4e88\u89d2\u8272\uff0c\u8acb\u53c3\u95b1 [\u7ba1\u7406\u8a2a\u554f\u6b0a\u9650](https://cloud.google.com/iam/docs/granting-changing-revoking-access?hl=zh-cn) \u3002\n\u9019\u4e9b\u9810\u5b9a\u7fa9\u89d2\u8272\u5305\u542b\u7ba1\u7406\u62d2\u7d55\u653f\u7b56\u6240\u9700\u7684\u6b0a\u9650\u3002\u5982\u9700\u67e5\u770b\u6240\u9700\u7684\u78ba\u5207\u6b0a\u9650\uff0c\u8acb\u5c55\u958b **\u6240\u9700\u6b0a\u9650** \u90e8\u5206\uff1a\n\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 [\u81ea\u5b9a\u7fa9\u89d2\u8272](https://cloud.google.com/iam/docs/creating-custom-roles?hl=zh-cn) \u6216\u5176\u4ed6 [\u9810\u5b9a\u7fa9\u89d2\u8272](https://cloud.google.com/iam/docs/understanding-roles?hl=zh-cn) \u4f86\u7372\u53d6\u9019\u4e9b\u6b0a\u9650\u3002\n## \u78ba\u5b9a\u8981\u62d2\u7d55\u7684\u6b0a\u9650\n\u5728\u5275\u5efa\u62d2\u7d55\u653f\u7b56\u4e4b\u524d\uff0c\u60a8\u5fc5\u9808\u78ba\u5b9a\u8981\u62d2\u7d55\u7684\u6b0a\u9650\u4ee5\u53ca\u61c9\u8a72\u62d2\u7d55\u9019\u4e9b\u6b0a\u9650\u7684\u4e3b\u8cec\u865f\u3002\n\u53ea\u80fd\u62d2\u7d55\u90e8\u5206\u6b0a\u9650\u3002\u5982\u9700\u67e5\u770b\u60a8\u53ef\u4ee5\u62d2\u7d55\u7684\u6b0a\u9650\u5217\u8868\uff0c\u8acb\u53c3\u95b1 [\u62d2\u7d55\u653f\u7b56\u4e2d\u652f\u6301\u7684\u6b0a\u9650](https://cloud.google.com/iam/docs/deny-permissions-support?hl=zh-cn) \u3002\n\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u60a8\u9084\u53ef\u4ee5\u4f7f\u7528\u6b0a\u9650\u7d44\u4f86\u62d2\u7d55\u6b0a\u9650\u96c6\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6b0a\u9650\u7d44](https://cloud.google.com/iam/docs/deny-overview?hl=zh-cn#permission-groups) \u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528 `v2` REST API \u7ba1\u7406\u62d2\u7d55\u653f\u7b56\uff0c\u8a72 API \u9700\u8981\u7279\u6b8a\u683c\u5f0f\u7684\u6b0a\u9650\u540d\u7a31\u3002\u4f8b\u5982\uff0c\u7528\u65bc\u5275\u5efa IAM \u81ea\u5b9a\u7fa9\u89d2\u8272\u7684\u6b0a\u9650\u5982\u4e0b\u6240\u793a\uff1a\n- `v1`API:`iam.roles.create`\n- `v2`API:`iam.googleapis.com/roles.create`## \u78ba\u5b9a\u9023\u63a5\u9ede\n\u6bcf\u500b\u62d2\u7d55\u653f\u7b56\u90fd\u639b\u63a5\u5230\u7d44\u7e54\u3001\u6587\u4ef6\u593e\u6216\u9805\u76ee\u3002\u62d2\u7d55\u653f\u7b56\u9644\u52a0\u5230\u67d0\u500b\u8cc7\u6e90\u5f8c\uff0c\u8a72\u9805\u76ee\u3001\u6587\u4ef6\u593e\u6216\u7d44\u7e54\u4e2d\u6240\u6709\u8f03\u4f4e\u7d1a\u5c64\u7684\u8cc7\u6e90\u90fd\u6703\u7e7c\u627f\u62d2\u7d55\u653f\u7b56\u3002\u5982\u9700\u4f7f\u7528\u62d2\u7d55\u653f\u7b56\uff0c\u60a8\u9700\u8981\u62d2\u7d55\u653f\u7b56\u6240\u9644\u52a0\u7684\u8cc7\u6e90\u7684\u6a19\u8b58\u7b26\uff0c\u9019\u7a31\u7232\u9023\u63a5\u9ede \u3002\u6b64\u6a19\u8b58\u7b26\u4f7f\u7528\u4e0b\u8868\u4e2d\u7684\u67d0\u7a2e\u683c\u5f0f\uff1a\n| \u9023\u63a5\u9ede\u683c\u5f0f | \u9023\u63a5\u9ede\u683c\u5f0f.1                                                                      |\n|:-------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| \u7d44\u7e54   | cloudresourcemanager.googleapis.com/organizations/ORG_ID \u5c07 ORG_ID \u66ff\u63db\u7232\u6578\u5b57\u7d44\u7e54 ID\u3002\u5c0d\u65bc REST API\uff0c\u5c0d\u6574\u500b\u503c\u9032\u884c\u7db2\u5740\u7de8\u78bc\u3002 gcloud CLI \u793a\u4f8b\uff1a cloudresourcemanager.googleapis.com/organizations/123456789012 REST API \u793a\u4f8b\uff1a cloudresourcemanager.googleapis.com%2Forganizations%2F123456789012 |\n| \u6587\u4ef6\u593e  | cloudresourcemanager.googleapis.com/folders/FOLDER_ID \u5c07 FOLDER_ID \u66ff\u63db\u7232\u6578\u5b57\u6587\u4ef6\u593e ID\u3002\u5c0d\u65bc REST API\uff0c\u5c0d\u6574\u500b\u503c\u9032\u884c\u7db2\u5740\u7de8\u78bc\u3002 gcloud CLI \u793a\u4f8b\uff1a cloudresourcemanager.googleapis.com/folders/987654321098 REST API \u793a\u4f8b\uff1a cloudresourcemanager.googleapis.com%2Ffolders%2F987654321098   |\n| \u9805\u76ee   | cloudresourcemanager.googleapis.com/projects/PROJECT_ID \u5c07 PROJECT_ID \u66ff\u63db\u7232\u5b57\u6bcd\u6578\u5b57\u6216\u6578\u5b57\u9805\u76ee ID\u3002\u5c0d\u65bc REST API\uff0c\u5c0d\u6574\u500b\u503c\u9032\u884c\u7db2\u5740\u7de8\u78bc\u3002 gcloud CLI \u793a\u4f8b\uff1a cloudresourcemanager.googleapis.com/projects/my-project REST API \u793a\u4f8b\uff1a cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project |\n## \u5275\u5efa\u62d2\u7d55\u653f\u7b56\n\u60a8\u53ef\u4ee5\u5411\u7d44\u7e54\u3001\u6587\u4ef6\u593e\u548c\u9805\u76ee\u4e2d\u6dfb\u52a0\u62d2\u7d55\u653f\u7b56\u3002\u6bcf\u500b\u8cc7\u6e90\u6700\u591a\u53ef\u4ee5\u6709 500 \u500b\u62d2\u7d55\u653f\u7b56\u3002\n\u62d2\u7d55\u653f\u7b56\u5305\u542b\u62d2\u7d55\u898f\u5247\uff0c\u7528\u65bc\u6307\u5b9a\u4ee5\u4e0b\u5167\u5bb9\uff1a\n- \u8981\u62d2\u7d55\u7684\u6b0a\u9650\u3002\n- \u9019\u4e9b\u6b0a\u9650\u62d2\u7d55\u7684\u4e3b\u8cec\u865f\u3002\n- \u53ef\u9078\uff1a\u5728\u6b0a\u9650\u62d2\u7d55\u7684\u7bc4\u570d\u4e2d\u6392\u9664\u7684\u4e3b\u8cec\u865f\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u62d2\u7d55\u91dd\u5c0d\u67d0\u500b\u7fa3\u7d44\u7684\u6b0a\u9650\uff0c\u4f46\u6392\u9664\u8a72\u7fa3\u7d44\u4e2d\u7684\u7279\u5b9a\u7528\u6236\u3002\n- \u53ef\u9078\uff1a [\u689d\u4ef6\u8868\u9054\u5f0f](https://cloud.google.com/iam/docs/conditions-overview?hl=zh-cn) \uff0c\u7528\u65bc\u6307\u5b9a\u4e3b\u8cec\u865f\u4f55\u6642\u7121\u6cd5\u4f7f\u7528\u6b0a\u9650\u3002\u5728\u62d2\u7d55\u653f\u7b56\u4e2d\uff0c\u689d\u4ef6\u8868\u9054\u5f0f\u53ea\u80fd\u4f7f\u7528 [\u8cc7\u6e90\u6a19\u8a18](https://cloud.google.com/iam/docs/tags-access-control?hl=zh-cn) \u985e\u51fd\u6578\uff0c\u4e0d\u652f\u6301\u5176\u4ed6\u51fd\u6578\u548c\u904b\u7b97\u7b26\u3002\n\u6bcf\u500b\u8cc7\u6e90\u7684\u6240\u6709\u9644\u52a0\u62d2\u7d55\u653f\u7b56\u6700\u591a\u53ef\u4ee5\u6709 500 \u500b\u62d2\u7d55\u898f\u5247\u3002\n\u62d2\u7d55\u653f\u7b56\u901a\u904e [\u8cc7\u6e90\u5c64\u6b21\u7d50\u69cb](https://cloud.google.com/iam/docs/overview?hl=zh-cn#resource-hierarchy) \u9032\u884c\u7e7c\u627f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u5728\u7d44\u7e54\u7d1a\u5c64\u62d2\u7d55\u67d0\u9805\u6b0a\u9650\uff0c\u5247\u5728\u8a72\u7d44\u7e54\u5167\u7684\u6587\u4ef6\u593e\u548c\u9805\u76ee\u4e2d\u4ee5\u53ca\u6bcf\u500b\u9805\u76ee\u4e2d\u7279\u5b9a\u65bc\u670d\u52d9\u7684\u8cc7\u6e90\u4e0a\u4e5f\u6703\u88ab\u62d2\u7d55\u3002\n\u62d2\u7d55\u653f\u7b56\u6703\u66ff\u63db\u5141\u8a31\u653f\u7b56\u3002\u5982\u679c\u4e3b\u8cec\u865f\u88ab\u6388\u4e88\u67d0\u500b\u5305\u542b\u7279\u5b9a\u6b0a\u9650\u7684\u89d2\u8272\uff0c\u4f46\u62d2\u7d55\u653f\u7b56\u6307\u51fa\u4e3b\u8cec\u865f\u7121\u6cd5\u4f7f\u7528\u8a72\u6b0a\u9650\uff0c\u5247\u4e3b\u8cec\u865f\u7121\u6cd5\u4f7f\u7528\u8a72\u6b0a\u9650\u3002\n**\u6ce8\u610f\uff1a** \u653f\u7b56\u66f4\u6539\u901a\u5e38\u6703\u5728 2 \u5206\u9418\u5167\u751f\u6548\u3002\u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u66f4\u6539\u53ef\u80fd\u9700\u8981\u9577\u9054 7 \u5206\u9418\u7684\u6642\u9593\u624d\u80fd\u50b3\u64ad\u5230\u6574\u500b\u7cfb\u7d71\u3002\n\u5982\u9700\u7232\u8cc7\u6e90\u5275\u5efa\u62d2\u7d55\u653f\u7b56\uff0c\u8acb\u5148\u5275\u5efa\u5305\u542b\u653f\u7b56\u7684 JSON \u6587\u4ef6\u3002\u62d2\u7d55\u653f\u7b56\u4f7f\u7528\u4ee5\u4e0b\u683c\u5f0f\uff1a\n```\n{\u00a0 \"displayName\": \"POLICY_NAME\",\u00a0 \"rules\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"denyRule\": DENY_RULE_1\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"denyRule\": DENY_RULE_2\u00a0 \u00a0 },\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"denyRule\": DENY_RULE_N\u00a0 \u00a0 }\u00a0 ]}\n```\n\u8acb\u63d0\u4f9b\u4ee5\u4e0b\u503c\uff1a- ``\uff1a\u62d2\u7d55\u653f\u7b56\u7684\u986f\u793a\u540d\u3002\n- `` \u3001 `` \u3001 `...` `` \uff1a\u653f\u7b56\u4e2d\u7684\u62d2\u7d55\u898f\u5247\u3002\u6bcf\u500b\u62d2\u7d55\u898f\u5247\u90fd\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a- `deniedPermissions` \uff1a\u6307\u5b9a\u7684\u4e3b\u8cec\u865f\u7121\u6cd5\u4f7f\u7528\u7684\u6b0a\u9650\u5217\u8868\u3002\u9019\u4e9b\u6b0a\u9650\u5fc5\u9808 [\u5728\u62d2\u7d55\u653f\u7b56\u4e2d\u53d7\u652f\u6301](https://cloud.google.com/iam/docs/deny-permissions-support?hl=zh-cn) \u3002\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u60a8\u9084\u53ef\u4ee5\u4f7f\u7528\u6b0a\u9650\u7d44\u4f86\u62d2\u7d55\u6b0a\u9650\u96c6\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6b0a\u9650\u7d44](https://cloud.google.com/iam/docs/deny-overview?hl=zh-cn#permission-groups) \u3002\n- `deniedPrincipals`\uff1a\u7121\u6cd5\u4f7f\u7528\u6307\u5b9a\u6b0a\u9650\u7684\u4e3b\u8cec\u865f\u5217\u8868\u3002 [\u7232\u4e3b\u8cec\u865f\u6a19\u8b58\u7b26\u4f7f\u7528 v2 API \u683c\u5f0f](https://cloud.google.com/iam/docs/principal-identifiers?hl=zh-cn) \u3002\n- `exceptionPrincipals`\uff1a\u53ef\u9078\u3002\u53ef\u4ee5\u4f7f\u7528\u6307\u5b9a\u6b0a\u9650\u7684\u4e3b\u8cec\u865f\u5217\u8868\uff0c\u5373\u4f7f\u9019\u4e9b\u4e3b\u8cec\u865f\u5305\u542b\u5728`deniedPrincipals`\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u5b57\u6bb5\u4f86\u6392\u9664\u5c6c\u65bc\u88ab\u62d2\u7fa3\u7d44\u7684\u7279\u5b9a\u7528\u6236\u3002 [\u7232\u4e3b\u8cec\u865f\u6a19\u8b58\u7b26\u4f7f\u7528 v2 API \u683c\u5f0f](https://cloud.google.com/iam/docs/principal-identifiers?hl=zh-cn) \u3002\n- `denialCondition` \uff1a\u53ef\u9078\u3002 [\u689d\u4ef6\u8868\u9054\u5f0f](https://cloud.google.com/iam/docs/conditions-overview?hl=zh-cn) \uff0c\u7528\u65bc\u6307\u5b9a\u4e3b\u8cec\u865f\u4f55\u6642\u7121\u6cd5\u4f7f\u7528\u6b0a\u9650\u3002\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a- `expression`\uff1a\u4f7f\u7528 [\u901a\u7528\u8868\u9054\u5f0f\u8a9e\u8a00 (CEL) \u8a9e\u6cd5](https://github.com/google/cel-spec/blob/master/doc/langdef.md) \u7684\u689d\u4ef6\u8868\u9054\u5f0f\u3002\u8868\u9054\u5f0f\u5fc5\u9808\u4f7f\u7528 [CEL \u51fd\u6578\u4f86\u8a55\u4f30\u8cc7\u6e90\u6a19\u8a18](https://cloud.google.com/iam/docs/conditions-attribute-reference?hl=zh-cn#resource-tags) \u3002\u4e0d\u652f\u6301\u5176\u4ed6\u51fd\u6578\u548c\u904b\u7b97\u7b26\u3002\n- `title`\uff1a\u53ef\u9078\u3002\u689d\u4ef6\u76ee\u7684\u7684\u7c21\u8981\u6458\u8981\u3002\n- `description`\uff1a\u53ef\u9078\u3002\u689d\u4ef6\u7684\u8a73\u7d30\u8aaa\u660e\u3002\u5982\u9700\u67e5\u770b\u62d2\u7d55\u898f\u5247\u7684\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 [\u5e38\u898b\u4f7f\u7528\u5834\u666f](https://cloud.google.com/iam/docs/deny-overview?hl=zh-cn#use-cases) \u3002\n\u4f8b\u5982\uff0c\u4ee5\u4e0b\u62d2\u7d55\u653f\u7b56\u5305\u542b\u4e00\u500b\u62d2\u7d55\u898f\u5247\uff0c\u8a72\u898f\u5247\u62d2\u7d55\u91dd\u5c0d\u7528\u6236 `lucian@example.com` \u7684\u4e00\u500b\u6b0a\u9650\uff1a\n```\n{\u00a0 \"displayName\": \"My deny policy.\",\u00a0 \"rules\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"denyRule\": {\u00a0 \u00a0 \u00a0 \u00a0 \"deniedPrincipals\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"principal://goog/subject/lucian@example.com\"\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"deniedPermissions\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"iam.googleapis.com/roles.create\"\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\n\u63a5\u4e0b\u4f86\uff0c\u904b\u884c [gcloud iam policies create](https://cloud.google.com/sdk/gcloud/reference/iam/policies/create?hl=zh-cn) \u547d\u4ee4\uff1a\n```\ngcloud iam policies create POLICY_ID \\\u00a0 \u00a0 --attachment-point=ATTACHMENT_POINT \\\u00a0 \u00a0 --kind=denypolicies \\\u00a0 \u00a0 --policy-file=POLICY_FILE\n```\n\u8acb\u63d0\u4f9b\u4ee5\u4e0b\u503c\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u7684\u6a19\u8b58\u7b26\u3002\n- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n- `` \uff1a\u5305\u542b\u62d2\u7d55\u653f\u7b56\u7684 JSON \u6587\u4ef6\u7684\u6587\u4ef6\u8def\u5f91\u3002\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u5982\u679c\u6b64\u547d\u4ee4\u57f7\u884c\u6210\u529f\uff0c\u5c07\u4e0d\u6703\u8f38\u51fa\u4efb\u4f55\u8f38\u51fa\u5167\u5bb9\u3002\u5982\u9700\u8f38\u51fa\u8a73\u7d30\u97ff\u61c9\uff0c\u8acb\u5728\u547d\u4ee4\u4e2d\u6dfb\u52a0 `--format=json` \u6a19\u8a8c\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u4f7f\u7528\u540d\u7232 `policy.json` \u7684\u6587\u4ef6\u7232\u9805\u76ee `my-project` \u5275\u5efa\u540d\u7232 `my-deny-policy` \u7684\u62d2\u7d55\u653f\u7b56\uff1a\n```\ngcloud iam policies create my-deny-policy \\\u00a0 \u00a0 --attachment-point=cloudresourcemanager.googleapis.com/projects/my-project \\\u00a0 \u00a0 --kind=denypolicies \\\u00a0 \u00a0 --policy-file=policy.json\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u61c9\u7528\u6216\u79fb\u9664 Terraform \u914d\u7f6e\uff0c\u8acb\u53c3\u95b1 [\u57fa\u672c Terraform \u547d\u4ee4](https://cloud.google.com/docs/terraform/basic-commands?hl=zh-cn) \u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Terraform \u63d0\u4f9b\u7a0b\u5e8f\u53c3\u8003\u6587\u6a94](https://registry.terraform.io/providers/hashicorp/google/latest/docs) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/terraform-google-modules/terraform-docs-samples/blob/HEAD/iam/create_deny_policy/main.tf) \n```\ndata \"google_project\" \"default\" {}# Create a service accountresource \"google_service_account\" \"default\" {\u00a0 display_name = \"IAM Deny Example - Service Account\"\u00a0 account_id \u00a0 = \"example-sa\"\u00a0 project \u00a0 \u00a0 \u00a0= data.google_project.default.project_id}# Create an IAM deny policy that denies a permission for the service accountresource \"google_iam_deny_policy\" \"default\" {\u00a0 provider \u00a0 \u00a0 = google-beta\u00a0 parent \u00a0 \u00a0 \u00a0 = urlencode(\"cloudresourcemanager.googleapis.com/projects/${data.google_project.default.project_id}\")\u00a0 name \u00a0 \u00a0 \u00a0 \u00a0 = \"my-deny-policy\"\u00a0 display_name = \"My deny policy.\"\u00a0 rules {\u00a0 \u00a0 deny_rule {\u00a0 \u00a0 \u00a0 denied_principals \u00a0= [\"principal://iam.googleapis.com/projects/-/serviceAccounts/${google_service_account.default.email}\"]\u00a0 \u00a0 \u00a0 denied_permissions = [\"iam.googleapis.com/roles.create\"]\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Go API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/iam/latest/apiv2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/deny/create_deny_policy.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"cloud.google.com/go/iam/apiv2\"\u00a0 \u00a0 \u00a0 \u00a0 iampb \"google.golang.org/genproto/googleapis/iam/v2\"\u00a0 \u00a0 \u00a0 \u00a0 \"google.golang.org/genproto/googleapis/type/expr\")// createDenyPolicy creates a deny policy.func createDenyPolicy(w io.Writer, projectID, policyID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // You can add deny policies to organizations, folders, and projects.\u00a0 \u00a0 \u00a0 \u00a0 // Each of these resources can have up to 5 deny policies.\u00a0 \u00a0 \u00a0 \u00a0 // Deny policies contain deny rules, which specify the following:\u00a0 \u00a0 \u00a0 \u00a0 // 1. The permissions to deny and/or exempt.\u00a0 \u00a0 \u00a0 \u00a0 // 2. The principals that are denied, or exempted from denial.\u00a0 \u00a0 \u00a0 \u00a0 // 3. An optional condition on when to enforce the deny rules.\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"your_project_id\"\u00a0 \u00a0 \u00a0 \u00a0 // policyID := \"your_policy_id\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 policiesClient, err := iam.NewPoliciesClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewPoliciesClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer policiesClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 \u00a0 \u00a0 // the \"/\" with \"%%2F\".\u00a0 \u00a0 \u00a0 \u00a0 attachmentPoint := fmt.Sprintf(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com%%2Fprojects%%2F%s\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 projectID,\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 denyRule := &iampb.DenyRule{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Add one or more principals who should be denied the permissions specified in this rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For more information on allowed values,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // see: https://cloud.google.com/iam/help/deny/principal-identifiers\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeniedPrincipals: []string{\"principalSet://goog/public:all\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Optionally, set the principals who should be exempted from the\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // list of denied principals. For example, if you want to deny certain permissions\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // to a group but exempt a few principals, then add those here.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // ExceptionPrincipals: []string{\"principalSet://goog/group/project-admins@example.com\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the permissions to deny.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // The permission value is of the format: service_fqdn/resource.action\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For the list of supported permissions,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // see: https://cloud.google.com/iam/help/deny/supported-permissions\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeniedPermissions: []string{\"cloudresourcemanager.googleapis.com/projects.delete\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Optionally, add the permissions to be exempted from this rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Meaning, the deny rule will not be applicable to these permissions.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // ExceptionPermissions: []string{\"cloudresourcemanager.googleapis.com/projects.create\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the condition which will enforce the deny rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // If this condition is true, the deny rule will be applicable.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Else, the rule will not be enforced.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // The expression uses Common Expression Language syntax (CEL).\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Here we block access based on tags.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Here, we create a deny rule that denies the\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // cloudresourcemanager.googleapis.com/projects.delete permission\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // to everyone except project-admins@example.com for resources that are tagged test.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // A tag is a key-value pair that can be attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For more info, see: https://cloud.google.com/iam/docs/deny-access#create-deny-policy\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DenialCondition: &expr.Expr{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Expression: \"!resource.matchTag('12345678/env', 'test')\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Add the deny rule and a description for it.\u00a0 \u00a0 \u00a0 \u00a0 policyRule := &iampb.PolicyRule{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Description: \"block all principals from deleting projects, unless the principal is a member of project-admins@example.com and the project being deleted has a tag with the value test\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Kind: &iampb.PolicyRule_DenyRule{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DenyRule: denyRule,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 policy := &iampb.Policy{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DisplayName: \"Restrict project deletion access\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Rules: \u00a0 \u00a0 \u00a0 [](*iampb.PolicyRule){policyRule},\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 req := &iampb.CreatePolicyRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Construct the full path of the resource's deny policies.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Its format is: \"policies/ATTACHMENT_POINT/denypolicies\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Parent: \u00a0 fmt.Sprintf(\"policies/%s/denypolicies\", attachmentPoint),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Policy: \u00a0 policy,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 PolicyId: policyID,\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := policiesClient.CreatePolicy(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"unable to create policy: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 policy, err = op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"unable to wait for the operation: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Policy %s created\\n\", policy.GetName())\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/CreateDenyPolicy.java) \n```\nimport com.google.iam.v2.CreatePolicyRequest;import com.google.iam.v2.DenyRule;import com.google.iam.v2.PoliciesClient;import com.google.iam.v2.Policy;import com.google.iam.v2.PolicyRule;import com.google.longrunning.Operation;import com.google.type.Expr;import java.io.IOException;import java.net.URLEncoder;import java.nio.charset.StandardCharsets;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class CreateDenyPolicy {\u00a0 public static void main(String[] args)\u00a0 \u00a0 \u00a0 throws IOException, ExecutionException, InterruptedException, TimeoutException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 String projectId = \"your-google-cloud-project-id\";\u00a0 \u00a0 // Specify the id of the Deny policy you want to create.\u00a0 \u00a0 String policyId = \"deny-policy-id\";\u00a0 \u00a0 createDenyPolicy(projectId, policyId);\u00a0 }\u00a0 // Create a deny policy.\u00a0 // You can add deny policies to organizations, folders, and projects.\u00a0 // Each of these resources can have up to 5 deny policies.\u00a0 //\u00a0 // Deny policies contain deny rules, which specify the following:\u00a0 // 1. The permissions to deny and/or exempt.\u00a0 // 2. The principals that are denied, or exempted from denial.\u00a0 // 3. An optional condition on when to enforce the deny rules.\u00a0 public static void createDenyPolicy(String projectId, String policyId)\u00a0 \u00a0 \u00a0 throws IOException, ExecutionException, InterruptedException, TimeoutException {\u00a0 \u00a0 try (PoliciesClient policiesClient = PoliciesClient.create()) {\u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name.\u00a0 \u00a0 \u00a0 String urlEncodedResource =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 URLEncoder.encode(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com/projects/\", StandardCharsets.UTF_8);\u00a0 \u00a0 \u00a0 String attachmentPoint = String.format(\"%s%s\", urlEncodedResource, projectId);\u00a0 \u00a0 \u00a0 // Construct the full path of the resource to which the policy is attached.\u00a0 \u00a0 \u00a0 // Its format is: \"policies/{attachmentPoint}/denypolicies/{policyId}\"\u00a0 \u00a0 \u00a0 String policyParent = String.format(\"policies/%s/denypolicies\", attachmentPoint);\u00a0 \u00a0 \u00a0 DenyRule denyRule =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DenyRule.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Add one or more principals who should be denied the permissions specified in this\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For more information on allowed values, see:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // https://cloud.google.com/iam/docs/principal-identifiers\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addDeniedPrincipals(\"principalSet://goog/public:all\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Optionally, set the principals who should be exempted from the\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // list of denied principals. For example, if you want to deny certain permissions\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // to a group but exempt a few principals, then add those here.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // .addExceptionPrincipals(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 \u00a0 \"principalSet://goog/group/project-admins@example.com\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the permissions to deny.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // The permission value is of the format: service_fqdn/resource.action\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For the list of supported permissions, see:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // https://cloud.google.com/iam/help/deny/supported-permissions\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addDeniedPermissions(\"cloudresourcemanager.googleapis.com/projects.delete\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Optionally, add the permissions to be exempted from this rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Meaning, the deny rule will not be applicable to these permissions.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // .addExceptionPermissions(\"cloudresourcemanager.googleapis.com/projects.create\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the condition which will enforce the deny rule. If this condition is true,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // the deny rule will be applicable. Else, the rule will not be enforced.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDenialCondition(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Expr.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // The expression uses Common Expression Language syntax (CEL).\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Here we block access based on tags.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // A tag is a key-value pair that can be attached to an organization, folder,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // or project. You can use deny policies to deny permissions based on tags\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // without adding an IAM Condition to every role grant.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For example, imagine that you tag all of your projects as dev, test, or\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // prod. You want only members of project-admins@example.com to be able to\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // perform operations on projects that are tagged prod.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // To solve this problem, you create a deny rule that denies the\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // cloudresourcemanager.googleapis.com/projects.delete permission to everyone\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // except project-admins@example.com for resources that are tagged test.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setExpression(\"!resource.matchTag('12345678/env', 'test')\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setTitle(\"Only for test projects\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 // Add the deny rule and a description for it.\u00a0 \u00a0 \u00a0 Policy policy =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Policy.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the deny rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addRules(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 PolicyRule.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set a description for the rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDescription(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"block all principals from deleting projects, unless the principal\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" is a member of project-admins@example.com and the project\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" being deleted has a tag with the value test\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDenyRule(denyRule)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 // Set the policy resource path, policy rules and a unique ID for the policy.\u00a0 \u00a0 \u00a0 CreatePolicyRequest createPolicyRequest =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 CreatePolicyRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setParent(policyParent)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setPolicy(policy)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setPolicyId(policyId)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 // Build the create policy request.\u00a0 \u00a0 \u00a0 Operation operation =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 policiesClient\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .createPolicyCallable()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .futureCall(createPolicyRequest)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .get(3, TimeUnit.MINUTES);\u00a0 \u00a0 \u00a0 // Wait for the operation to complete.\u00a0 \u00a0 \u00a0 if (operation.hasError()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Error in creating the policy \" + operation.getError());\u00a0 \u00a0 \u00a0 \u00a0 return;\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 // Retrieve the policy name.\u00a0 \u00a0 \u00a0 Policy response = policiesClient.getPolicy(String.format(\"%s/%s\", policyParent, policyId));\u00a0 \u00a0 \u00a0 String policyName = response.getName();\u00a0 \u00a0 \u00a0 System.out.println(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Created the deny policy: \" + policyName.substring(policyName.lastIndexOf(\"/\") + 1));\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/iam/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/iam/deny/createDenyPolicy.js) \n```\n/**\u00a0* TODO(developer): Uncomment and replace these variables before running the sample.\u00a0*/// const projectId = 'YOUR_PROJECT_ID';// const policyID = 'YOUR_POLICY_ID';const {PoliciesClient} = require('@google-cloud/iam').v2;const iamClient = new PoliciesClient();// Each deny policy is attached to an organization, folder, or project.// To work with deny policies, specify the attachment point.//// Its format can be one of the following:// 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID// 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID// 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID//// The attachment point is identified by its URL-encoded resource name. Hence, replace// the \"/\" with \"%2F\".const attachmentPoint = `cloudresourcemanager.googleapis.com%2Fprojects%2F${projectId}`;const denyRule = {\u00a0 // Add one or more principals who should be denied the permissions specified in this rule.\u00a0 // For more information on allowed values, see: https://cloud.google.com/iam/help/deny/principal-identifiers\u00a0 deniedPrincipals: ['principalSet://goog/public:all'],\u00a0 // Optionally, set the principals who should be exempted from the\u00a0 // list of denied principals. For example, if you want to deny certain permissions\u00a0 // to a group but exempt a few principals, then add those here.\u00a0 // exceptionPrincipals: ['principalSet://goog/group/project-admins@example.com'],\u00a0 // Set the permissions to deny.\u00a0 // The permission value is of the format: service_fqdn/resource.action\u00a0 // For the list of supported permissions, see: https://cloud.google.com/iam/help/deny/supported-permissions\u00a0 deniedPermissions: ['cloudresourcemanager.googleapis.com/projects.delete'],\u00a0 // Optionally, add the permissions to be exempted from this rule.\u00a0 // Meaning, the deny rule will not be applicable to these permissions.\u00a0 // exceptionPermissions: ['cloudresourcemanager.googleapis.com/projects.create']\u00a0 //\u00a0 // Set the condition which will enforce the deny rule.\u00a0 // If this condition is true, the deny rule will be applicable. Else, the rule will not be enforced.\u00a0 // The expression uses Common Expression Language syntax (CEL).\u00a0 // Here we block access based on tags.\u00a0 //\u00a0 // Here, we create a deny rule that denies the cloudresourcemanager.googleapis.com/projects.delete permission to everyone except project-admins@example.com for resources that are tagged test.\u00a0 // A tag is a key-value pair that can be attached to an organization, folder, or project.\u00a0 // For more info, see: https://cloud.google.com/iam/docs/deny-access#create-deny-policy\u00a0 denialCondition: {\u00a0 \u00a0 expression: '!resource.matchTag(\"12345678/env\", \"test\")',\u00a0 },};async function createDenyPolicy() {\u00a0 const request = {\u00a0 \u00a0 parent: `policies/${attachmentPoint}/denypolicies`,\u00a0 \u00a0 policy: {\u00a0 \u00a0 \u00a0 displayName: 'Restrict project deletion access',\u00a0 \u00a0 \u00a0 rules: [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 description:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'block all principals from deleting projects, unless the principal is a member of project-admins@example.com and the project being deleted has a tag with the value test',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 denyRule,\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 },\u00a0 \u00a0 policyId,\u00a0 };\u00a0 const [operation] = await iamClient.createPolicy(request);\u00a0 const [policy] = await operation.promise();\u00a0 console.log(`Created the deny policy: ${policy.name}`);}createDenyPolicy();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/iam/latest/google.cloud.iam_v2.services.policies.PoliciesClient?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/cloud-client/snippets/create_deny_policy.py) \n```\ndef create_deny_policy(project_id: str, policy_id: str) -> None:\u00a0 \u00a0 from google.cloud import iam_v2\u00a0 \u00a0 from google.cloud.iam_v2 import types\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 \u00a0 Create a deny policy.\u00a0 \u00a0 \u00a0 You can add deny policies to organizations, folders, and projects.\u00a0 \u00a0 \u00a0 Each of these resources can have up to 5 deny policies.\u00a0 \u00a0 \u00a0 Deny policies contain deny rules, which specify the following:\u00a0 \u00a0 \u00a0 1. The permissions to deny and/or exempt.\u00a0 \u00a0 \u00a0 2. The principals that are denied, or exempted from denial.\u00a0 \u00a0 \u00a0 3. An optional condition on when to enforce the deny rules.\u00a0 \u00a0 \u00a0 Params:\u00a0 \u00a0 \u00a0 project_id: ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 \u00a0 policy_id: Specify the ID of the deny policy you want to create.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 policies_client = iam_v2.PoliciesClient()\u00a0 \u00a0 # Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 # To work with deny policies, specify the attachment point.\u00a0 \u00a0 #\u00a0 \u00a0 # Its format can be one of the following:\u00a0 \u00a0 # 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 # 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 # 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 #\u00a0 \u00a0 # The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 # the \"/\" with \"%2F\".\u00a0 \u00a0 attachment_point = f\"cloudresourcemanager.googleapis.com%2Fprojects%2F{project_id}\"\u00a0 \u00a0 deny_rule = types.DenyRule()\u00a0 \u00a0 # Add one or more principals who should be denied the permissions specified in this rule.\u00a0 \u00a0 # For more information on allowed values, see: https://cloud.google.com/iam/help/deny/principal-identifiers\u00a0 \u00a0 deny_rule.denied_principals = [\"principalSet://goog/public:all\"]\u00a0 \u00a0 # Optionally, set the principals who should be exempted from the\u00a0 \u00a0 # list of denied principals. For example, if you want to deny certain permissions\u00a0 \u00a0 # to a group but exempt a few principals, then add those here.\u00a0 \u00a0 # deny_rule.exception_principals = [\"principalSet://goog/group/project-admins@example.com\"]\u00a0 \u00a0 # Set the permissions to deny.\u00a0 \u00a0 # The permission value is of the format: service_fqdn/resource.action\u00a0 \u00a0 # For the list of supported permissions, see: https://cloud.google.com/iam/help/deny/supported-permissions\u00a0 \u00a0 deny_rule.denied_permissions = [\u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com/projects.delete\"\u00a0 \u00a0 ]\u00a0 \u00a0 # Optionally, add the permissions to be exempted from this rule.\u00a0 \u00a0 # Meaning, the deny rule will not be applicable to these permissions.\u00a0 \u00a0 # deny_rule.exception_permissions = [\"cloudresourcemanager.googleapis.com/projects.create\"]\u00a0 \u00a0 # Set the condition which will enforce the deny rule.\u00a0 \u00a0 # If this condition is true, the deny rule will be applicable. Else, the rule will not be enforced.\u00a0 \u00a0 # The expression uses Common Expression Language syntax (CEL).\u00a0 \u00a0 # Here we block access based on tags.\u00a0 \u00a0 #\u00a0 \u00a0 # Here, we create a deny rule that denies the cloudresourcemanager.googleapis.com/projects.delete permission to everyone except project-admins@example.com for resources that are tagged test.\u00a0 \u00a0 # A tag is a key-value pair that can be attached to an organization, folder, or project.\u00a0 \u00a0 # For more info, see: https://cloud.google.com/iam/docs/deny-access#create-deny-policy\u00a0 \u00a0 deny_rule.denial_condition = {\u00a0 \u00a0 \u00a0 \u00a0 \"expression\": \"!resource.matchTag('12345678/env', 'test')\"\u00a0 \u00a0 }\u00a0 \u00a0 # Add the deny rule and a description for it.\u00a0 \u00a0 policy_rule = types.PolicyRule()\u00a0 \u00a0 policy_rule.description = \"block all principals from deleting projects, unless the principal is a member of project-admins@example.com and the project being deleted has a tag with the value test\"\u00a0 \u00a0 policy_rule.deny_rule = deny_rule\u00a0 \u00a0 policy = types.Policy()\u00a0 \u00a0 policy.display_name = \"Restrict project deletion access\"\u00a0 \u00a0 policy.rules = [policy_rule]\u00a0 \u00a0 # Set the policy resource path, policy rules and a unique ID for the policy.\u00a0 \u00a0 request = types.CreatePolicyRequest()\u00a0 \u00a0 # Construct the full path of the resource's deny policies.\u00a0 \u00a0 # Its format is: \"policies/{attachmentPoint}/denypolicies\"\u00a0 \u00a0 request.parent = f\"policies/{attachment_point}/denypolicies\"\u00a0 \u00a0 request.policy = policy\u00a0 \u00a0 request.policy_id = policy_id\u00a0 \u00a0 # Build the create policy request and wait for the operation to complete.\u00a0 \u00a0 result = policies_client.create_policy(request=request).result()\u00a0 \u00a0 print(f\"Created the deny policy: {result.name.rsplit('/')[-1]}\")if __name__ == \"__main__\":\u00a0 \u00a0 import uuid\u00a0 \u00a0 # Your Google Cloud project ID.\u00a0 \u00a0 project_id = \"your-google-cloud-project-id\"\u00a0 \u00a0 # Any unique ID (0 to 63 chars) starting with a lowercase letter.\u00a0 \u00a0 policy_id = f\"deny-{uuid.uuid4()}\"\u00a0 \u00a0 # Test the policy lifecycle.\u00a0 \u00a0 create_deny_policy(project_id, policy_id)\n``` ` [policies.createPolicy](https://cloud.google.com/iam/docs/reference/rest/v2/policies/createPolicy?hl=zh-cn) ` \u65b9\u6cd5\u53ef\u4ee5\u7232\u8cc7\u6e90\u5275\u5efa\u4e00\u500b\u62d2\u7d55\u653f\u7b56\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u7db2\u5740\u7de8\u78bc\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n- ``\uff1a\u62d2\u7d55\u653f\u7b56\u7684\u6a19\u8b58\u7b26\u3002\n- ``\uff1a\u62d2\u7d55\u653f\u7b56\u7684\u986f\u793a\u540d\u3002\n- `` \u3001 `` \u3001 `...` `` \uff1a\u653f\u7b56\u4e2d\u7684\u62d2\u7d55\u898f\u5247\u3002\u6bcf\u500b\u62d2\u7d55\u898f\u5247\u90fd\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a- `deniedPermissions` \uff1a\u6307\u5b9a\u7684\u4e3b\u8cec\u865f\u7121\u6cd5\u4f7f\u7528\u7684\u6b0a\u9650\u5217\u8868\u3002\u9019\u4e9b\u6b0a\u9650\u5fc5\u9808 [\u5728\u62d2\u7d55\u653f\u7b56\u4e2d\u53d7\u652f\u6301](https://cloud.google.com/iam/docs/deny-permissions-support?hl=zh-cn) \u3002\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u60a8\u9084\u53ef\u4ee5\u4f7f\u7528\u6b0a\u9650\u7d44\u4f86\u62d2\u7d55\u6b0a\u9650\u96c6\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6b0a\u9650\u7d44](https://cloud.google.com/iam/docs/deny-overview?hl=zh-cn#permission-groups) \u3002\n- `deniedPrincipals`\uff1a\u7121\u6cd5\u4f7f\u7528\u6307\u5b9a\u6b0a\u9650\u7684\u4e3b\u8cec\u865f\u5217\u8868\u3002 [\u7232\u4e3b\u8cec\u865f\u6a19\u8b58\u7b26\u4f7f\u7528 v2 API \u683c\u5f0f](https://cloud.google.com/iam/docs/principal-identifiers?hl=zh-cn) \u3002\n- `exceptionPrincipals`\uff1a\u53ef\u9078\u3002\u53ef\u4ee5\u4f7f\u7528\u6307\u5b9a\u6b0a\u9650\u7684\u4e3b\u8cec\u865f\u5217\u8868\uff0c\u5373\u4f7f\u9019\u4e9b\u4e3b\u8cec\u865f\u5305\u542b\u5728`deniedPrincipals`\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u5b57\u6bb5\u4f86\u6392\u9664\u5c6c\u65bc\u88ab\u62d2\u7fa3\u7d44\u7684\u7279\u5b9a\u7528\u6236\u3002 [\u7232\u4e3b\u8cec\u865f\u6a19\u8b58\u7b26\u4f7f\u7528 v2 API \u683c\u5f0f](https://cloud.google.com/iam/docs/principal-identifiers?hl=zh-cn) \u3002\n- `denialCondition` \uff1a\u53ef\u9078\u3002 [\u689d\u4ef6\u8868\u9054\u5f0f](https://cloud.google.com/iam/docs/conditions-overview?hl=zh-cn) \uff0c\u7528\u65bc\u6307\u5b9a\u4e3b\u8cec\u865f\u4f55\u6642\u7121\u6cd5\u4f7f\u7528\u6b0a\u9650\u3002\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a- `expression`\uff1a\u4f7f\u7528 [\u901a\u7528\u8868\u9054\u5f0f\u8a9e\u8a00 (CEL) \u8a9e\u6cd5](https://github.com/google/cel-spec/blob/master/doc/langdef.md) \u7684\u689d\u4ef6\u8868\u9054\u5f0f\u3002\u8868\u9054\u5f0f\u5fc5\u9808\u4f7f\u7528 [CEL \u51fd\u6578\u4f86\u8a55\u4f30\u8cc7\u6e90\u6a19\u8a18](https://cloud.google.com/iam/docs/conditions-attribute-reference?hl=zh-cn#resource-tags) \u3002\u4e0d\u652f\u6301\u5176\u4ed6\u51fd\u6578\u548c\u904b\u7b97\u7b26\u3002\n- `title`\uff1a\u53ef\u9078\u3002\u689d\u4ef6\u76ee\u7684\u7684\u7c21\u8981\u6458\u8981\u3002\n- `description`\uff1a\u53ef\u9078\u3002\u689d\u4ef6\u7684\u8a73\u7d30\u8aaa\u660e\u3002\u5982\u9700\u67e5\u770b\u62d2\u7d55\u898f\u5247\u7684\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 [\u5e38\u898b\u4f7f\u7528\u5834\u666f](https://cloud.google.com/iam/docs/deny-overview?hl=zh-cn#use-cases) \u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPOST https://iam.googleapis.com/v2/policies/ENCODED_ATTACHMENT_POINT/denypolicies?policyId=POLICY_ID\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\n{\n \"displayName\": \"POLICY_NAME\",\n \"rules\": [ {\n  \"denyRule\": DENY_RULE_1\n },\n {\n  \"denyRule\": DENY_RULE_2\n },\n {\n  \"denyRule\": DENY_RULE_N\n }\n ]\n}\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6703\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy/operations/89cb3e508bf1ff01\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.iam.v2.PolicyOperationMetadata\",\n \"createTime\": \"2022-06-28T19:06:12.455151Z\"\n },\n \"response\": {\n \"@type\": \"type.googleapis.com/google.iam.v2.Policy\",\n \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy\",\n \"uid\": \"6665c437-a3b2-a018-6934-54dd16d3426e\",\n \"kind\": \"DenyPolicy\",\n \"displayName\": \"My deny policy.\",\n \"etag\": \"MTc3NDU4MjM4OTY0MzU5MjQ5OTI=\",\n \"createTime\": \"2022-06-28T19:06:12.455151Z\",\n \"updateTime\": \"2022-06-28T22:26:21.968687Z\"\n \"rules\": [  {\n  \"denyRule\": {\n   \"deniedPrincipals\": [   \"principal://goog/subject/lucian@example.com\"\n   ],\n   \"deniedPermissions\": [   \"iam.googleapis.com/roles.create\"\n   ]\n  }\n  }\n ]\n }\n}\n```\n\u8a72\u97ff\u61c9\u7528\u65bc\u6a19\u8b58\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u3002\u60a8\u53ef\u4ee5\u76e3\u63a7\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u7684\u72c0\u614b\uff0c\u4ee5\u77ad\u89e3\u5176\u5b8c\u6210\u6642\u9593\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u6aa2\u67e5\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u7684\u72c0\u614b](#check-operation-status) \u3002\n## \u5217\u51fa\u62d2\u7d55\u653f\u7b56\n\u4e00\u500b\u8cc7\u6e90\u53ef\u4ee5\u6709\u591a\u500b\u62d2\u7d55\u653f\u7b56\u3002\u60a8\u53ef\u4ee5\u5217\u51fa\u9644\u52a0\u5230\u67d0\u500b\u8cc7\u6e90\u7684\u6240\u6709\u62d2\u7d55\u653f\u7b56\uff0c\u7136\u5f8c [\u67e5\u770b\u6bcf\u500b\u62d2\u7d55\u653f\u7b56](#view-deny-policy) \u4ee5\u67e5\u770b\u6bcf\u500b\u653f\u7b56\u4e2d\u7684\u62d2\u7d55\u898f\u5247\u3002\n\u5982\u9700\u5217\u51fa\u67d0\u500b\u8cc7\u6e90\u7684\u62d2\u7d55\u653f\u7b56\uff0c\u8acb\u904b\u884c [gcloud iam policies list](https://cloud.google.com/sdk/gcloud/reference/iam/policies/list?hl=zh-cn) \u547d\u4ee4\uff1a\n```\ngcloud iam policies list \\\u00a0 \u00a0 --attachment-point=ATTACHMENT_POINT \\\u00a0 \u00a0 --kind=denypolicies \\\u00a0 \u00a0 --format=json\n```\n\u8acb\u63d0\u4f9b\u4ee5\u4e0b\u503c\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n\u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u5217\u51fa\u4e86\u9644\u52a0\u5230\u6578\u5b57 ID \u7232 `123456789012` \u7684\u7d44\u7e54\u7684\u62d2\u7d55\u653f\u7b56\uff1a\n```\ngcloud iam policies list \\\u00a0 \u00a0 --attachment-point=cloudresourcemanager.googleapis.com/organizations/123456789012 \\\u00a0 \u00a0 --kind=denypolicies \\\u00a0 \u00a0 --format=json\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Go API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/iam/latest/apiv2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/deny/list_deny_policies.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"cloud.google.com/go/iam/apiv2\"\u00a0 \u00a0 \u00a0 \u00a0 \"google.golang.org/api/iterator\"\u00a0 \u00a0 \u00a0 \u00a0 iampb \"google.golang.org/genproto/googleapis/iam/v2\")// listDenyPolicies lists all the deny policies that are attached to a resource.// A resource can have up to 5 deny policies.func listDenyPolicies(w io.Writer, projectID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"your_project_id\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 policiesClient, err := iam.NewPoliciesClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewPoliciesClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer policiesClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 \u00a0 \u00a0 // the \"/\" with \"%%2F\".\u00a0 \u00a0 \u00a0 \u00a0 attachmentPoint := fmt.Sprintf(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com%%2Fprojects%%2F%s\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 projectID,\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 req := &iampb.ListPoliciesRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Construct the full path of the resource's deny policies.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Its format is: \"policies/ATTACHMENT_POINT/denypolicies\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Parent: fmt.Sprintf(\"policies/%s/denypolicies\", attachmentPoint),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 it := policiesClient.ListPolicies(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Policies found in project %s:\\n\", projectID)\u00a0 \u00a0 \u00a0 \u00a0 for {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 policy, err := it.Next()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if err == iterator.Done {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 break\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"- %s\\n\", policy.GetName())\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/ListDenyPolicies.java) \n```\nimport com.google.iam.v2.PoliciesClient;import com.google.iam.v2.Policy;import java.io.IOException;import java.net.URLEncoder;import java.nio.charset.StandardCharsets;public class ListDenyPolicies {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 String projectId = \"your-google-cloud-project-id\";\u00a0 \u00a0 listDenyPolicies(projectId);\u00a0 }\u00a0 // List all the deny policies that are attached to a resource.\u00a0 // A resource can have up to 5 deny policies.\u00a0 public static void listDenyPolicies(String projectId) throws IOException {\u00a0 \u00a0 // Initialize the Policies client.\u00a0 \u00a0 try (PoliciesClient policiesClient = PoliciesClient.create()) {\u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name.\u00a0 \u00a0 \u00a0 String urlEncodedResource =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 URLEncoder.encode(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com/projects/\", StandardCharsets.UTF_8);\u00a0 \u00a0 \u00a0 String attachmentPoint = String.format(\"%s%s\", urlEncodedResource, projectId);\u00a0 \u00a0 \u00a0 // Construct the full path of the resource to which the policy is attached.\u00a0 \u00a0 \u00a0 // Its format is: \"policies/{attachmentPoint}/denypolicies\"\u00a0 \u00a0 \u00a0 String policyParent = String.format(\"policies/%s/denypolicies\", attachmentPoint);\u00a0 \u00a0 \u00a0 // Create a list request and iterate over the returned policies.\u00a0 \u00a0 \u00a0 for (Policy policy : policiesClient.listPolicies(policyParent).iterateAll()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(policy.getName());\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 System.out.println(\"Listed all deny policies\");\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/iam/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/iam/deny/listDenyPolicies.js) \n```\n/**\u00a0* TODO(developer): Uncomment and replace these variables before running the sample.\u00a0*/// const projectId = 'YOUR_PROJECT_ID';const {PoliciesClient} = require('@google-cloud/iam').v2;const iamClient = new PoliciesClient();// Each deny policy is attached to an organization, folder, or project.// To work with deny policies, specify the attachment point.//// Its format can be one of the following:// 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID// 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID// 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID//// The attachment point is identified by its URL-encoded resource name. Hence, replace// the \"/\" with \"%2F\".const attachmentPoint = `cloudresourcemanager.googleapis.com%2Fprojects%2F${projectId}`;async function listDenyPolicies() {\u00a0 const request = {\u00a0 \u00a0 parent: `policies/${attachmentPoint}/denypolicies`,\u00a0 };\u00a0 const policies = await iamClient.listPoliciesAsync(request);\u00a0 for await (const policy of policies) {\u00a0 \u00a0 console.log(`- ${policy.name}`);\u00a0 }}listDenyPolicies();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/iam/latest/google.cloud.iam_v2.services.policies.PoliciesClient?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/cloud-client/snippets/list_deny_policies.py) \n```\ndef list_deny_policy(project_id: str) -> None:\u00a0 \u00a0 from google.cloud import iam_v2\u00a0 \u00a0 from google.cloud.iam_v2 import types\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 List all the deny policies that are attached to a resource.\u00a0 \u00a0 A resource can have up to 5 deny policies.\u00a0 \u00a0 project_id: ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 policies_client = iam_v2.PoliciesClient()\u00a0 \u00a0 # Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 # To work with deny policies, specify the attachment point.\u00a0 \u00a0 #\u00a0 \u00a0 # Its format can be one of the following:\u00a0 \u00a0 # 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 # 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 # 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 #\u00a0 \u00a0 # The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 # the \"/\" with \"%2F\".\u00a0 \u00a0 attachment_point = f\"cloudresourcemanager.googleapis.com%2Fprojects%2F{project_id}\"\u00a0 \u00a0 request = types.ListPoliciesRequest()\u00a0 \u00a0 # Construct the full path of the resource's deny policies.\u00a0 \u00a0 # Its format is: \"policies/{attachmentPoint}/denypolicies\"\u00a0 \u00a0 request.parent = f\"policies/{attachment_point}/denypolicies\"\u00a0 \u00a0 # Create a list request and iterate over the returned policies.\u00a0 \u00a0 policies = policies_client.list_policies(request=request)\u00a0 \u00a0 for policy in policies:\u00a0 \u00a0 \u00a0 \u00a0 print(policy.name)\u00a0 \u00a0 print(\"Listed all deny policies\")if __name__ == \"__main__\":\u00a0 \u00a0 import uuid\u00a0 \u00a0 # Your Google Cloud project ID.\u00a0 \u00a0 project_id = \"your-google-cloud-project-id\"\u00a0 \u00a0 # Any unique ID (0 to 63 chars) starting with a lowercase letter.\u00a0 \u00a0 policy_id = f\"deny-{uuid.uuid4()}\"\u00a0 \u00a0 list_deny_policy(project_id)\n``` ` [policies.listPolicies](https://cloud.google.com/iam/docs/reference/rest/v2/policies/listPolicies?hl=zh-cn) ` \u65b9\u6cd5\u53ef\u5217\u51fa\u8cc7\u6e90\u7684\u62d2\u7d55\u653f\u7b56\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u7db2\u5740\u7de8\u78bc\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://iam.googleapis.com/v2/policies/ENCODED_ATTACHMENT_POINT/denypolicies\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6703\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"policies\": [ {\n  \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1067607927478/denypolicies/test-policy\",\n  \"uid\": \"6665c437-a3b2-a018-6934-54dd16d3426e\",\n  \"kind\": \"DenyPolicy\",\n  \"displayName\": \"My deny policy.\",\n  \"createTime\": \"2022-06-28T19:06:12.455151Z\",\n  \"updateTime\": \"2022-06-28T22:26:21.968687Z\"\n },\n {\n  \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1067607927478/denypolicies/test-policy-2\",\n  \"uid\": \"8465d710-ea20-0a08-d92c-b2a3ebf766ab\",\n  \"kind\": \"DenyPolicy\",\n  \"displayName\": \"My second deny policy.\",\n  \"createTime\": \"2022-06-05T19:21:53.595455Z\",\n  \"updateTime\": \"2022-06-05T19:21:53.595455Z\"\n },\n {\n  \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1067607927478/denypolicies/test-policy-3\",\n  \"uid\": \"ee9f7c2f-7e8c-b05c-d4e5-e03bfb2954e0\",\n  \"kind\": \"DenyPolicy\",\n  \"displayName\": \"My third deny policy.\",\n  \"createTime\": \"2022-06-05T19:22:26.770543Z\",\n  \"updateTime\": \"2022-06-05T19:22:26.770543Z\"\n }\n ]\n}\n```\n## \u67e5\u770b\u62d2\u7d55\u653f\u7b56\n\u60a8\u53ef\u4ee5\u67e5\u770b\u62d2\u7d55\u653f\u7b56\u4ee5\u67e5\u770b\u5176\u5305\u542b\u7684\u62d2\u7d55\u898f\u5247\uff0c\u5305\u62ec\u62d2\u7d55\u7684\u6b0a\u9650\u4ee5\u53ca\u7121\u6cd5\u4f7f\u7528\u9019\u4e9b\u6b0a\u9650\u7684\u4e3b\u8cec\u865f\u3002\n\u5982\u9700\u7372\u53d6\u8cc7\u6e90\u7684\u62d2\u7d55\u653f\u7b56\uff0c\u8acb\u904b\u884c [gcloud iam policies get](https://cloud.google.com/sdk/gcloud/reference/iam/policies/get?hl=zh-cn) \u547d\u4ee4\uff1a\n```\ngcloud iam policies get POLICY_ID \\\u00a0 \u00a0 --attachment-point=ATTACHMENT_POINT \\\u00a0 \u00a0 --kind=denypolicies \\\u00a0 \u00a0 --format=json\n```\n\u8acb\u63d0\u4f9b\u4ee5\u4e0b\u503c\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u7684\u6a19\u8b58\u7b26\u3002\n- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n\u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u6703\u7372\u53d6\u9805\u76ee `my-project` \u7684\u540d\u7232 `my-deny-policy` \u7684\u62d2\u7d55\u653f\u7b56\uff0c\u4e26\u5c07\u5176\u4fdd\u5b58\u5728\u540d\u7232 `policy.json` \u7684\u6587\u4ef6\u4e2d\uff1a\n```\ngcloud iam policies get my-deny-policy \\\u00a0 \u00a0 --attachment-point=cloudresourcemanager.googleapis.com/projects/my-project \\\u00a0 \u00a0 --kind=denypolicies \\\u00a0 \u00a0 --format=json \\\u00a0 \u00a0 > ./policy.json\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Go API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/iam/latest/apiv2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/deny/get_deny_policy.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"cloud.google.com/go/iam/apiv2\"\u00a0 \u00a0 \u00a0 \u00a0 iampb \"google.golang.org/genproto/googleapis/iam/v2\")// getDenyPolicy retrieves the deny policy given the project ID and policy ID.func getDenyPolicy(w io.Writer, projectID, policyID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"your_project_id\"\u00a0 \u00a0 \u00a0 \u00a0 // policyID := \"your_policy_id\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 policiesClient, err := iam.NewPoliciesClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewPoliciesClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer policiesClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 \u00a0 \u00a0 // the \"/\" with \"%%2F\".\u00a0 \u00a0 \u00a0 \u00a0 attachmentPoint := fmt.Sprintf(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com%%2Fprojects%%2F%s\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 projectID,\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 req := &iampb.GetPolicyRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Construct the full path of the policy.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Its format is: \"policies/ATTACHMENT_POINT/denypolicies/POLICY_ID\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: fmt.Sprintf(\"policies/%s/denypolicies/%s\", attachmentPoint, policyID),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 policy, err := policiesClient.GetPolicy(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"unable to get policy: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Policy %s retrieved\\n\", policy.GetName())\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/GetDenyPolicy.java) \n```\nimport com.google.iam.v2.GetPolicyRequest;import com.google.iam.v2.PoliciesClient;import com.google.iam.v2.Policy;import java.io.IOException;import java.net.URLEncoder;import java.nio.charset.StandardCharsets;public class GetDenyPolicy {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 String projectId = \"your-google-cloud-project-id\";\u00a0 \u00a0 // Specify the ID of the deny policy you want to retrieve.\u00a0 \u00a0 String policyId = \"deny-policy-id\";\u00a0 \u00a0 getDenyPolicy(projectId, policyId);\u00a0 }\u00a0 // Retrieve the deny policy given the project ID and policy ID.\u00a0 public static void getDenyPolicy(String projectId, String policyId) throws IOException {\u00a0 \u00a0 // Create the IAM Policies client.\u00a0 \u00a0 try (PoliciesClient policiesClient = PoliciesClient.create()) {\u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name.\u00a0 \u00a0 \u00a0 String urlEncodedResource =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 URLEncoder.encode(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com/projects/\", StandardCharsets.UTF_8);\u00a0 \u00a0 \u00a0 String attachmentPoint = String.format(\"%s%s\", urlEncodedResource, projectId);\u00a0 \u00a0 \u00a0 // Construct the full path of the resource to which the policy is attached.\u00a0 \u00a0 \u00a0 // Its format is: \"policies/{attachmentPoint}/denypolicies/{policyId}\"\u00a0 \u00a0 \u00a0 String policyParent = String.format(\"policies/%s/denypolicies/%s\", attachmentPoint, policyId);\u00a0 \u00a0 \u00a0 // Specify the policyParent and execute the GetPolicy request.\u00a0 \u00a0 \u00a0 GetPolicyRequest getPolicyRequest =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GetPolicyRequest.newBuilder().setName(policyParent).build();\u00a0 \u00a0 \u00a0 Policy policy = policiesClient.getPolicy(getPolicyRequest);\u00a0 \u00a0 \u00a0 System.out.printf(\"Retrieved the deny policy: %s : %s%n\", policyId, policy);\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/iam/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/iam/deny/getDenyPolicy.js) \n```\n/**\u00a0* TODO(developer): Uncomment and replace these variables before running the sample.\u00a0*/// const projectId = 'YOUR_PROJECT_ID';// const policyID = 'YOUR_POLICY_ID';const {PoliciesClient} = require('@google-cloud/iam').v2;const iamClient = new PoliciesClient();// Each deny policy is attached to an organization, folder, or project.// To work with deny policies, specify the attachment point.//// Its format can be one of the following:// 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID// 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID// 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID//// The attachment point is identified by its URL-encoded resource name. Hence, replace// the \"/\" with \"%2F\".const attachmentPoint = `cloudresourcemanager.googleapis.com%2Fprojects%2F${projectId}`;async function getDenyPolicy() {\u00a0 const request = {\u00a0 \u00a0 name: `policies/${attachmentPoint}/denypolicies/${policyId}`,\u00a0 };\u00a0 const [policy] = await iamClient.getPolicy(request);\u00a0 console.log(`Retrieved the deny policy: ${policy.name}`);}getDenyPolicy();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/iam/latest/google.cloud.iam_v2.services.policies.PoliciesClient?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/cloud-client/snippets/get_deny_policy.py) \n```\nfrom google.cloud import iam_v2from google.cloud.iam_v2 import Policy, typesdef get_deny_policy(project_id: str, policy_id: str) -> Policy:\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 Retrieve the deny policy given the project ID and policy ID.\u00a0 \u00a0 project_id: ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 policy_id: The ID of the deny policy you want to retrieve.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 policies_client = iam_v2.PoliciesClient()\u00a0 \u00a0 # Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 # To work with deny policies, specify the attachment point.\u00a0 \u00a0 #\u00a0 \u00a0 # Its format can be one of the following:\u00a0 \u00a0 # 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 # 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 # 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 #\u00a0 \u00a0 # The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 # the \"/\" with \"%2F\".\u00a0 \u00a0 attachment_point = f\"cloudresourcemanager.googleapis.com%2Fprojects%2F{project_id}\"\u00a0 \u00a0 request = types.GetPolicyRequest()\u00a0 \u00a0 # Construct the full path of the policy.\u00a0 \u00a0 # Its format is: \"policies/{attachmentPoint}/denypolicies/{policyId}\"\u00a0 \u00a0 request.name = f\"policies/{attachment_point}/denypolicies/{policy_id}\"\u00a0 \u00a0 # Execute the GetPolicy request.\u00a0 \u00a0 policy = policies_client.get_policy(request=request)\u00a0 \u00a0 print(f\"Retrieved the deny policy: {policy_id} : {policy}\")\u00a0 \u00a0 return policyif __name__ == \"__main__\":\u00a0 \u00a0 import uuid\u00a0 \u00a0 # Your Google Cloud project ID.\u00a0 \u00a0 project_id = \"your-google-cloud-project-id\"\u00a0 \u00a0 # Any unique ID (0 to 63 chars) starting with a lowercase letter.\u00a0 \u00a0 policy_id = f\"deny-{uuid.uuid4()}\"\u00a0 \u00a0 policy = get_deny_policy(project_id, policy_id)\n``` ` [policies.get](https://cloud.google.com/iam/docs/reference/rest/v2/policies/get?hl=zh-cn) ` \u65b9\u6cd5\u53ef\u7372\u53d6\u8cc7\u6e90\u7684\u62d2\u7d55\u653f\u7b56\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u7db2\u5740\u7de8\u78bc\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n- ``\uff1a\u62d2\u7d55\u653f\u7b56\u7684\u6a19\u8b58\u7b26\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://iam.googleapis.com/v2/policies/ENCODED_ATTACHMENT_POINT/denypolicies/POLICY_ID\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6703\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy\",\n \"uid\": \"6665c437-a3b2-a018-6934-54dd16d3426e\",\n \"kind\": \"DenyPolicy\",\n \"displayName\": \"My deny policy.\",\n \"etag\": \"MTc3NDU4MjM4OTY0MzU5MjQ5OTI=\",\n \"createTime\": \"2022-06-05T19:22:26.770543Z\",\n \"updateTime\": \"2022-06-05T19:22:26.770543Z\",\n \"rules\": [ {\n  \"denyRule\": {\n  \"deniedPrincipals\": [   \"principal://goog/subject/lucian@example.com\"\n  ],\n  \"deniedPermissions\": [   \"iam.googleapis.com/roles.create\"\n  ]\n  }\n }\n ]\n}\n```\n## \u66f4\u65b0\u62d2\u7d55\u653f\u7b56\n\u5275\u5efa\u62d2\u7d55\u653f\u7b56\u5f8c\uff0c\u60a8\u53ef\u4ee5\u66f4\u65b0\u5176\u5305\u542b\u7684\u62d2\u7d55\u898f\u5247\u53ca\u5176\u986f\u793a\u540d\u3002\n\u8981\u66f4\u65b0\u62d2\u7d55\u653f\u7b56\uff0c\u8acb\u4f7f\u7528 \u6a21\u5f0f\uff1a\n- \u8b80\u53d6\u653f\u7b56\u7684\u7576\u524d\u7248\u672c\u3002\n- \u6839\u64da\u9700\u8981\u4fee\u6539\u653f\u7b56\u4e2d\u7684\u4fe1\u606f\u3002\n- \u5beb\u5165\u66f4\u65b0\u5f8c\u7684\u653f\u7b56\u3002\n### \u8b80\u53d6\u62d2\u7d55\u653f\u7b56\n\u5982\u9700\u7372\u53d6\u8cc7\u6e90\u7684\u62d2\u7d55\u653f\u7b56\uff0c\u8acb\u904b\u884c [gcloud iam policies get](https://cloud.google.com/sdk/gcloud/reference/iam/policies/get?hl=zh-cn) \u547d\u4ee4\uff1a\n```\ngcloud iam policies get POLICY_ID \\\u00a0 \u00a0 --attachment-point=ATTACHMENT_POINT \\\u00a0 \u00a0 --kind=denypolicies \\\u00a0 \u00a0 --format=json\n```\n\u8acb\u63d0\u4f9b\u4ee5\u4e0b\u503c\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u7684\u6a19\u8b58\u7b26\u3002\n- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n\u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u6703\u7372\u53d6\u9805\u76ee `my-project` \u7684\u540d\u7232 `my-deny-policy` \u7684\u62d2\u7d55\u653f\u7b56\uff0c\u4e26\u5c07\u5176\u4fdd\u5b58\u5728\u540d\u7232 `policy.json` \u7684\u6587\u4ef6\u4e2d\uff1a\n```\ngcloud iam policies get my-deny-policy \\\u00a0 \u00a0 --attachment-point=cloudresourcemanager.googleapis.com/projects/my-project \\\u00a0 \u00a0 --kind=denypolicies \\\u00a0 \u00a0 --format=json \\\u00a0 \u00a0 > ./policy.json\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Go API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/iam/latest/apiv2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/deny/get_deny_policy.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"cloud.google.com/go/iam/apiv2\"\u00a0 \u00a0 \u00a0 \u00a0 iampb \"google.golang.org/genproto/googleapis/iam/v2\")// getDenyPolicy retrieves the deny policy given the project ID and policy ID.func getDenyPolicy(w io.Writer, projectID, policyID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"your_project_id\"\u00a0 \u00a0 \u00a0 \u00a0 // policyID := \"your_policy_id\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 policiesClient, err := iam.NewPoliciesClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewPoliciesClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer policiesClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 \u00a0 \u00a0 // the \"/\" with \"%%2F\".\u00a0 \u00a0 \u00a0 \u00a0 attachmentPoint := fmt.Sprintf(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com%%2Fprojects%%2F%s\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 projectID,\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 req := &iampb.GetPolicyRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Construct the full path of the policy.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Its format is: \"policies/ATTACHMENT_POINT/denypolicies/POLICY_ID\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: fmt.Sprintf(\"policies/%s/denypolicies/%s\", attachmentPoint, policyID),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 policy, err := policiesClient.GetPolicy(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"unable to get policy: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Policy %s retrieved\\n\", policy.GetName())\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/GetDenyPolicy.java) \n```\nimport com.google.iam.v2.GetPolicyRequest;import com.google.iam.v2.PoliciesClient;import com.google.iam.v2.Policy;import java.io.IOException;import java.net.URLEncoder;import java.nio.charset.StandardCharsets;public class GetDenyPolicy {\u00a0 public static void main(String[] args) throws IOException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 String projectId = \"your-google-cloud-project-id\";\u00a0 \u00a0 // Specify the ID of the deny policy you want to retrieve.\u00a0 \u00a0 String policyId = \"deny-policy-id\";\u00a0 \u00a0 getDenyPolicy(projectId, policyId);\u00a0 }\u00a0 // Retrieve the deny policy given the project ID and policy ID.\u00a0 public static void getDenyPolicy(String projectId, String policyId) throws IOException {\u00a0 \u00a0 // Create the IAM Policies client.\u00a0 \u00a0 try (PoliciesClient policiesClient = PoliciesClient.create()) {\u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name.\u00a0 \u00a0 \u00a0 String urlEncodedResource =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 URLEncoder.encode(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com/projects/\", StandardCharsets.UTF_8);\u00a0 \u00a0 \u00a0 String attachmentPoint = String.format(\"%s%s\", urlEncodedResource, projectId);\u00a0 \u00a0 \u00a0 // Construct the full path of the resource to which the policy is attached.\u00a0 \u00a0 \u00a0 // Its format is: \"policies/{attachmentPoint}/denypolicies/{policyId}\"\u00a0 \u00a0 \u00a0 String policyParent = String.format(\"policies/%s/denypolicies/%s\", attachmentPoint, policyId);\u00a0 \u00a0 \u00a0 // Specify the policyParent and execute the GetPolicy request.\u00a0 \u00a0 \u00a0 GetPolicyRequest getPolicyRequest =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GetPolicyRequest.newBuilder().setName(policyParent).build();\u00a0 \u00a0 \u00a0 Policy policy = policiesClient.getPolicy(getPolicyRequest);\u00a0 \u00a0 \u00a0 System.out.printf(\"Retrieved the deny policy: %s : %s%n\", policyId, policy);\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/iam/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/iam/deny/getDenyPolicy.js) \n```\n/**\u00a0* TODO(developer): Uncomment and replace these variables before running the sample.\u00a0*/// const projectId = 'YOUR_PROJECT_ID';// const policyID = 'YOUR_POLICY_ID';const {PoliciesClient} = require('@google-cloud/iam').v2;const iamClient = new PoliciesClient();// Each deny policy is attached to an organization, folder, or project.// To work with deny policies, specify the attachment point.//// Its format can be one of the following:// 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID// 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID// 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID//// The attachment point is identified by its URL-encoded resource name. Hence, replace// the \"/\" with \"%2F\".const attachmentPoint = `cloudresourcemanager.googleapis.com%2Fprojects%2F${projectId}`;async function getDenyPolicy() {\u00a0 const request = {\u00a0 \u00a0 name: `policies/${attachmentPoint}/denypolicies/${policyId}`,\u00a0 };\u00a0 const [policy] = await iamClient.getPolicy(request);\u00a0 console.log(`Retrieved the deny policy: ${policy.name}`);}getDenyPolicy();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/iam/latest/google.cloud.iam_v2.services.policies.PoliciesClient?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/cloud-client/snippets/get_deny_policy.py) \n```\nfrom google.cloud import iam_v2from google.cloud.iam_v2 import Policy, typesdef get_deny_policy(project_id: str, policy_id: str) -> Policy:\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 Retrieve the deny policy given the project ID and policy ID.\u00a0 \u00a0 project_id: ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 policy_id: The ID of the deny policy you want to retrieve.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 policies_client = iam_v2.PoliciesClient()\u00a0 \u00a0 # Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 # To work with deny policies, specify the attachment point.\u00a0 \u00a0 #\u00a0 \u00a0 # Its format can be one of the following:\u00a0 \u00a0 # 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 # 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 # 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 #\u00a0 \u00a0 # The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 # the \"/\" with \"%2F\".\u00a0 \u00a0 attachment_point = f\"cloudresourcemanager.googleapis.com%2Fprojects%2F{project_id}\"\u00a0 \u00a0 request = types.GetPolicyRequest()\u00a0 \u00a0 # Construct the full path of the policy.\u00a0 \u00a0 # Its format is: \"policies/{attachmentPoint}/denypolicies/{policyId}\"\u00a0 \u00a0 request.name = f\"policies/{attachment_point}/denypolicies/{policy_id}\"\u00a0 \u00a0 # Execute the GetPolicy request.\u00a0 \u00a0 policy = policies_client.get_policy(request=request)\u00a0 \u00a0 print(f\"Retrieved the deny policy: {policy_id} : {policy}\")\u00a0 \u00a0 return policyif __name__ == \"__main__\":\u00a0 \u00a0 import uuid\u00a0 \u00a0 # Your Google Cloud project ID.\u00a0 \u00a0 project_id = \"your-google-cloud-project-id\"\u00a0 \u00a0 # Any unique ID (0 to 63 chars) starting with a lowercase letter.\u00a0 \u00a0 policy_id = f\"deny-{uuid.uuid4()}\"\u00a0 \u00a0 policy = get_deny_policy(project_id, policy_id)\n``` ` [policies.get](https://cloud.google.com/iam/docs/reference/rest/v2/policies/get?hl=zh-cn) ` \u65b9\u6cd5\u53ef\u7372\u53d6\u8cc7\u6e90\u7684\u62d2\u7d55\u653f\u7b56\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u7db2\u5740\u7de8\u78bc\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n- ``\uff1a\u62d2\u7d55\u653f\u7b56\u7684\u6a19\u8b58\u7b26\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://iam.googleapis.com/v2/policies/ENCODED_ATTACHMENT_POINT/denypolicies/POLICY_ID\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6703\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy\",\n \"uid\": \"6665c437-a3b2-a018-6934-54dd16d3426e\",\n \"kind\": \"DenyPolicy\",\n \"displayName\": \"My deny policy.\",\n \"etag\": \"MTc3NDU4MjM4OTY0MzU5MjQ5OTI=\",\n \"createTime\": \"2022-06-05T19:22:26.770543Z\",\n \"updateTime\": \"2022-06-05T19:22:26.770543Z\",\n \"rules\": [ {\n  \"denyRule\": {\n  \"deniedPrincipals\": [   \"principal://goog/subject/lucian@example.com\"\n  ],\n  \"deniedPermissions\": [   \"iam.googleapis.com/roles.create\"\n  ]\n  }\n }\n ]\n}\n```\n### \u4fee\u6539\u62d2\u7d55\u653f\u7b56\n\u5982\u9700\u4fee\u6539\u62d2\u7d55\u653f\u7b56\uff0c\u8acb\u66f4\u6539\u5148\u524d\u5f9e IAM \u8b80\u53d6\u7684\u653f\u7b56\u526f\u672c\u3002\u60a8\u53ef\u4ee5\u66f4\u65b0\u986f\u793a\u540d\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u3001\u66f4\u6539\u6216\u79fb\u9664\u62d2\u7d55\u898f\u5247\u3002\u9019\u4e9b\u66f4\u6539\u5728\u60a8 [\u5beb\u5165\u66f4\u65b0\u5f8c\u7684\u653f\u7b56](#write-deny-policy) \u5f8c\u7e94\u6703\u751f\u6548\u3002\n**\u6ce8\u610f\uff1a** \u653f\u7b56\u66f4\u6539\u901a\u5e38\u6703\u5728 2 \u5206\u9418\u5167\u751f\u6548\u3002\u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u66f4\u6539\u53ef\u80fd\u9700\u8981\u9577\u9054 7 \u5206\u9418\u7684\u6642\u9593\u624d\u80fd\u50b3\u64ad\u5230\u6574\u500b\u7cfb\u7d71\u3002\n\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5411\u73fe\u6709\u62d2\u7d55\u898f\u5247\u6dfb\u52a0\u6b0a\u9650\uff1a\n```\n{\u00a0 \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy\",\u00a0 \"uid\": \"6665c437-a3b2-a018-6934-54dd16d3426e\",\u00a0 \"kind\": \"DenyPolicy\",\u00a0 \"displayName\": \"My deny policy.\",\u00a0 \"etag\": \"MTc3NDU4MjM4OTY0MzU5MjQ5OTI=\",\u00a0 \"createTime\": \"2021-10-05T19:22:26.770543Z\",\u00a0 \"updateTime\": \"2021-10-05T19:22:26.770543Z\",\u00a0 \"rules\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"denyRule\": {\u00a0 \u00a0 \u00a0 \u00a0 \"deniedPrincipals\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"principal://goog/subject/lucian@example.com\"\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"deniedPermissions\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"iam.googleapis.com/roles.create\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"iam.googleapis.com/roles.delete\"\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\n### \u7de8\u5beb\u66f4\u65b0\u5f8c\u7684\u62d2\u7d55\u653f\u7b56\n\u5728\u672c\u5730 [\u4fee\u6539\u62d2\u7d55\u653f\u7b56](#modify-deny-policy) \u5f8c\uff0c\u60a8\u5fc5\u9808\u5c07\u66f4\u65b0\u5f8c\u7684\u62d2\u7d55\u653f\u7b56\u5beb\u5165 IAM\u3002\n\u6bcf\u500b\u62d2\u7d55\u653f\u7b56\u90fd\u5305\u542b\u4e00\u500b `etag` \u5b57\u6bb5\uff0c\u7528\u65bc\u6a19\u8b58\u653f\u7b56\u7248\u672c\u3002\u6bcf\u6b21\u66f4\u65b0\u653f\u7b56\u6642\uff0c `etag` \u90fd\u6703\u66f4\u6539\u3002\u7576\u60a8\u7de8\u5beb\u66f4\u65b0\u5f8c\u7684\u653f\u7b56\u6642\uff0c\u8acb\u6c42\u4e2d\u7684 `etag` \u5fc5\u9808\u8207 IAM \u4e2d\u5b58\u5132\u7684\u7576\u524d `etag` \u5339\u914d\uff1a\u5982\u679c\u503c\u4e0d\u5339\u914d\uff0c\u8acb\u6c42\u5c07\u5931\u6557\u3002\u6b64\u529f\u80fd\u6709\u52a9\u65bc\u9632\u6b62\u4f75\u767c\u66f4\u6539\u5f7c\u6b64\u8986\u84cb\u3002\n\u5982\u9700\u66f4\u65b0\u8cc7\u6e90\u7684\u62d2\u7d55\u653f\u7b56\uff0c\u8acb\u904b\u884c [gcloud iam policies update](https://cloud.google.com/sdk/gcloud/reference/iam/policies/update?hl=zh-cn) \u547d\u4ee4\uff1a\n```\ngcloud iam policies update POLICY_ID \\\u00a0 \u00a0 --attachment-point=ATTACHMENT_POINT \\\u00a0 \u00a0 --kind=denypolicies \\\u00a0 \u00a0 --policy-file=POLICY_FILE\n```\n\u8acb\u63d0\u4f9b\u4ee5\u4e0b\u503c\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u7684\u6a19\u8b58\u7b26\u3002\n- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n- `` \uff1a\u5305\u542b\u62d2\u7d55\u653f\u7b56\u7684 JSON \u6587\u4ef6\u7684\u6587\u4ef6\u8def\u5f91\u3002\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u5982\u679c\u6b64\u547d\u4ee4\u57f7\u884c\u6210\u529f\uff0c\u5c07\u4e0d\u6703\u8f38\u51fa\u4efb\u4f55\u8f38\u51fa\u5167\u5bb9\u3002\u5982\u9700\u8f38\u51fa\u8a73\u7d30\u97ff\u61c9\uff0c\u8acb\u5728\u547d\u4ee4\u4e2d\u6dfb\u52a0 `--format=json` \u6a19\u8a8c\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u4f7f\u7528\u540d\u7232 `policy.json` \u7684\u6587\u4ef6\u66f4\u65b0\u9805\u76ee `my-project` \u7684\u540d\u7232 `my-deny-policy` \u7684\u62d2\u7d55\u653f\u7b56\uff1a\n```\ngcloud iam policies update my-deny-policy \\\u00a0 \u00a0 --attachment-point=cloudresourcemanager.googleapis.com/projects/my-project \\\u00a0 \u00a0 --kind=denypolicies \\\u00a0 \u00a0 --policy-file=policy.json\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Go API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/iam/latest/apiv2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/deny/update_deny_policy.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"cloud.google.com/go/iam/apiv2\"\u00a0 \u00a0 \u00a0 \u00a0 iampb \"google.golang.org/genproto/googleapis/iam/v2\"\u00a0 \u00a0 \u00a0 \u00a0 \"google.golang.org/genproto/googleapis/type/expr\")// updateDenyPolicy updates the deny rules and/ or its display name after policy creation.func updateDenyPolicy(w io.Writer, projectID, policyID, etag string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"your_project_id\"\u00a0 \u00a0 \u00a0 \u00a0 // policyID := \"your_policy_id\"\u00a0 \u00a0 \u00a0 \u00a0 // etag := \"your_etag\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 policiesClient, err := iam.NewPoliciesClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewPoliciesClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer policiesClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 \u00a0 \u00a0 // the \"/\" with \"%%2F\".\u00a0 \u00a0 \u00a0 \u00a0 attachmentPoint := fmt.Sprintf(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com%%2Fprojects%%2F%s\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 projectID,\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 denyRule := &iampb.DenyRule{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Add one or more principals who should be denied the permissions specified in this rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For more information on allowed values,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // see: https://cloud.google.com/iam/help/deny/principal-identifiers\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeniedPrincipals: []string{\"principalSet://goog/public:all\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Optionally, set the principals who should be exempted from the\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // list of denied principals. For example, if you want to deny certain permissions\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // to a group but exempt a few principals, then add those here.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // ExceptionPrincipals: []string{\"principalSet://goog/group/project-admins@example.com\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the permissions to deny.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // The permission value is of the format: service_fqdn/resource.action\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For the list of supported permissions,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // see: https://cloud.google.com/iam/help/deny/supported-permissions\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeniedPermissions: []string{\"cloudresourcemanager.googleapis.com/projects.delete\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Optionally, add the permissions to be exempted from this rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Meaning, the deny rule will not be applicable to these permissions.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // ExceptionPermissions: []string{\"cloudresourcemanager.googleapis.com/projects.create\"},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the condition which will enforce the deny rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // If this condition is true, the deny rule will be applicable.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Else, the rule will not be enforced.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // The expression uses Common Expression Language syntax (CEL).\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Here we block access based on tags.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Here, we create a deny rule that denies the\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // cloudresourcemanager.googleapis.com/projects.delete permission\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // to everyone except project-admins@example.com for resources that are tagged prod.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // A tag is a key-value pair that can be attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For more info, see: https://cloud.google.com/iam/docs/deny-access#create-deny-policy\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DenialCondition: &expr.Expr{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Expression: \"!resource.matchTag('12345678/env', 'prod')\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Set the rule description and deny rule to update.\u00a0 \u00a0 \u00a0 \u00a0 policyRule := &iampb.PolicyRule{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Description: \"block all principals from deleting projects, unless the principal is a member of project-admins@example.com and the project being deleted has a tag with the value prod\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Kind: &iampb.PolicyRule_DenyRule{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DenyRule: denyRule,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Set the policy resource path, version (etag) and the updated deny rules.\u00a0 \u00a0 \u00a0 \u00a0 policy := &iampb.Policy{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Construct the full path of the policy.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Its format is: \"policies/ATTACHMENT_POINT/denypolicies/POLICY_ID\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: \u00a0fmt.Sprintf(\"policies/%s/denypolicies/%s\", attachmentPoint, policyID),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Etag: \u00a0etag,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Rules: [](*iampb.PolicyRule){policyRule},\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Create the update policy request.\u00a0 \u00a0 \u00a0 \u00a0 req := &iampb.UpdatePolicyRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Policy: policy,\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := policiesClient.UpdatePolicy(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"unable to update policy: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 policy, err = op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"unable to wait for the operation: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Policy %s updated\\n\", policy.GetName())\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/UpdateDenyPolicy.java) \n```\nimport com.google.iam.v2.DenyRule;import com.google.iam.v2.PoliciesClient;import com.google.iam.v2.Policy;import com.google.iam.v2.PolicyRule;import com.google.iam.v2.UpdatePolicyRequest;import com.google.longrunning.Operation;import com.google.type.Expr;import java.io.IOException;import java.net.URLEncoder;import java.nio.charset.StandardCharsets;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class UpdateDenyPolicy {\u00a0 public static void main(String[] args)\u00a0 \u00a0 \u00a0 throws IOException, ExecutionException, InterruptedException, TimeoutException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 String projectId = \"your-google-cloud-project-id\";\u00a0 \u00a0 // Specify the ID of the Deny policy you want to retrieve.\u00a0 \u00a0 String policyId = \"deny-policy-id\";\u00a0 \u00a0 // Etag field that identifies the policy version. The etag changes each time\u00a0 \u00a0 // you update the policy. Get the etag of an existing policy by performing a GetPolicy request.\u00a0 \u00a0 String etag = \"policy_etag\";\u00a0 \u00a0 updateDenyPolicy(projectId, policyId, etag);\u00a0 }\u00a0 // Update the deny rules and/ or its display name after policy creation.\u00a0 public static void updateDenyPolicy(String projectId, String policyId, String etag)\u00a0 \u00a0 \u00a0 throws IOException, ExecutionException, InterruptedException, TimeoutException {\u00a0 \u00a0 try (PoliciesClient policiesClient = PoliciesClient.create()) {\u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name.\u00a0 \u00a0 \u00a0 String urlEncodedResource =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 URLEncoder.encode(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com/projects/\", StandardCharsets.UTF_8);\u00a0 \u00a0 \u00a0 String attachmentPoint = String.format(\"%s%s\", urlEncodedResource, projectId);\u00a0 \u00a0 \u00a0 // Construct the full path of the resource to which the policy is attached to.\u00a0 \u00a0 \u00a0 // Its format is: \"policies/{attachmentPoint}/denypolicies/{policyId}\"\u00a0 \u00a0 \u00a0 String policyParent = String.format(\"policies/%s/denypolicies/%s\", attachmentPoint, policyId);\u00a0 \u00a0 \u00a0 DenyRule denyRule =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DenyRule.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Add one or more principals who should be denied the permissions specified in this\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For more information on allowed values, see:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // https://cloud.google.com/iam/docs/principal-identifiers\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addDeniedPrincipals(\"principalSet://goog/public:all\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Optionally, set the principals who should be exempted from the list of principals\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // added in \"DeniedPrincipals\".\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Example, if you want to deny certain permissions to a group but exempt a few\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // principals, then add those here.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // .addExceptionPrincipals(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 \u00a0 \"principalSet://goog/group/project-admins@example.com\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the permissions to deny.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // The permission value is of the format: service_fqdn/resource.action\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For the list of supported permissions, see:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // https://cloud.google.com/iam/help/deny/supported-permissions\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addDeniedPermissions(\"cloudresourcemanager.googleapis.com/projects.delete\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Add the permissions to be exempted from this rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Meaning, the deny rule will not be applicable to these permissions.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // .addExceptionPermissions(\"cloudresourcemanager.googleapis.com/projects.get\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the condition which will enforce the deny rule.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // If this condition is true, the deny rule will be applicable. Else, the rule will\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // not be enforced.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDenialCondition(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Expr.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // The expression uses Common Expression Language syntax (CEL). Here we block\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // access based on tags.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // A tag is a key-value pair that can be attached to an organization, folder,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // or project. You can use deny policies to deny permissions based on tags\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // without adding an IAM Condition to every role grant.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // For example, imagine that you tag all of your projects as dev, test, or\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // prod. You want only members of project-admins@example.com to be able to\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // perform operations on projects that are tagged prod.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // To solve this problem, you create a deny rule that denies the\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // cloudresourcemanager.googleapis.com/projects.delete permission to everyone\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // except project-admins@example.com for resources that are tagged prod.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setExpression(\"!resource.matchTag('12345678/env', 'prod')\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setTitle(\"Only for prod projects\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 // Set the policy resource path, version (etag) and the updated deny rules.\u00a0 \u00a0 \u00a0 Policy policy =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Policy.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setName(policyParent)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEtag(etag)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .addRules(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 PolicyRule.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the rule description to update.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDescription(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"Block all principals from deleting projects, unless the principal\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \" is a member of project-admins@example.com and the project\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 + \"being deleted has a tag with the value prod\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Set the deny rule to update.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDenyRule(denyRule)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 // Create the update policy request.\u00a0 \u00a0 \u00a0 UpdatePolicyRequest updatePolicyRequest =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 UpdatePolicyRequest.newBuilder().setPolicy(policy).build();\u00a0 \u00a0 \u00a0 // Wait for the operation to complete.\u00a0 \u00a0 \u00a0 Operation operation =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 policiesClient\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .updatePolicyCallable()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .futureCall(updatePolicyRequest)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .get(3, TimeUnit.MINUTES);\u00a0 \u00a0 \u00a0 if (operation.hasError()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Error in updating the policy \" + operation.getError());\u00a0 \u00a0 \u00a0 \u00a0 return;\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 System.out.println(\"Updated the deny policy: \" + policyId);\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/iam/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/iam/deny/updateDenyPolicy.js) \n```\n/**\u00a0* TODO(developer): Uncomment and replace these variables before running the sample.\u00a0*/// const projectId = 'YOUR_PROJECT_ID';// const policyID = 'YOUR_POLICY_ID';// const etag = 'YOUR_ETAG';const {PoliciesClient} = require('@google-cloud/iam').v2;const iamClient = new PoliciesClient();// Each deny policy is attached to an organization, folder, or project.// To work with deny policies, specify the attachment point.//// Its format can be one of the following:// 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID// 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID// 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID//// The attachment point is identified by its URL-encoded resource name. Hence, replace// the \"/\" with \"%2F\".const attachmentPoint = `cloudresourcemanager.googleapis.com%2Fprojects%2F${projectId}`;const denyRule = {\u00a0 // Add one or more principals who should be denied the permissions specified in this rule.\u00a0 // For more information on allowed values, see: https://cloud.google.com/iam/help/deny/principal-identifiers\u00a0 deniedPrincipals: ['principalSet://goog/public:all'],\u00a0 // Optionally, set the principals who should be exempted from the\u00a0 // list of denied principals. For example, if you want to deny certain permissions\u00a0 // to a group but exempt a few principals, then add those here.\u00a0 // exceptionPrincipals: ['principalSet://goog/group/project-admins@example.com'],\u00a0 // Set the permissions to deny.\u00a0 // The permission value is of the format: service_fqdn/resource.action\u00a0 // For the list of supported permissions, see: https://cloud.google.com/iam/help/deny/supported-permissions\u00a0 deniedPermissions: ['cloudresourcemanager.googleapis.com/projects.delete'],\u00a0 // Optionally, add the permissions to be exempted from this rule.\u00a0 // Meaning, the deny rule will not be applicable to these permissions.\u00a0 // exceptionPermissions: ['cloudresourcemanager.googleapis.com/projects.create']\u00a0 //\u00a0 // Set the condition which will enforce the deny rule.\u00a0 // If this condition is true, the deny rule will be applicable. Else, the rule will not be enforced.\u00a0 // The expression uses Common Expression Language syntax (CEL).\u00a0 // Here we block access based on tags.\u00a0 //\u00a0 // Here, we create a deny rule that denies the cloudresourcemanager.googleapis.com/projects.delete permission to everyone except project-admins@example.com for resources that are tagged test.\u00a0 // A tag is a key-value pair that can be attached to an organization, folder, or project.\u00a0 // For more info, see: https://cloud.google.com/iam/docs/deny-access#create-deny-policy\u00a0 denialCondition: {\u00a0 \u00a0 expression: '!resource.matchTag(\"12345678/env\", \"prod\")',\u00a0 },};async function updateDenyPolicy() {\u00a0 const request = {\u00a0 \u00a0 policy: {\u00a0 \u00a0 \u00a0 name: `policies/${attachmentPoint}/denypolicies/${policyId}`,\u00a0 \u00a0 \u00a0 etag,\u00a0 \u00a0 \u00a0 rules: [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 description:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'block all principals from deleting projects, unless the principal is a member of project-admins@example.com and the project being deleted has a tag with the value prod',\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 denyRule,\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 },\u00a0 \u00a0 policyId,\u00a0 };\u00a0 const [operation] = await iamClient.updatePolicy(request);\u00a0 const [policy] = await operation.promise();\u00a0 console.log(`Updated the deny policy: ${policy.name}`);}updateDenyPolicy();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/iam/latest/google.cloud.iam_v2.services.policies.PoliciesClient?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/cloud-client/snippets/update_deny_policy.py) \n```\ndef update_deny_policy(project_id: str, policy_id: str, etag: str) -> None:\u00a0 \u00a0 from google.cloud import iam_v2\u00a0 \u00a0 from google.cloud.iam_v2 import types\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 Update the deny rules and/ or its display name after policy creation.\u00a0 \u00a0 project_id: ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 policy_id: The ID of the deny policy you want to retrieve.\u00a0 \u00a0 etag: Etag field that identifies the policy version. The etag changes each time\u00a0 \u00a0 you update the policy. Get the etag of an existing policy by performing a GetPolicy request.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 policies_client = iam_v2.PoliciesClient()\u00a0 \u00a0 # Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 # To work with deny policies, specify the attachment point.\u00a0 \u00a0 #\u00a0 \u00a0 # Its format can be one of the following:\u00a0 \u00a0 # 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 # 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 # 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 #\u00a0 \u00a0 # The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 # the \"/\" with \"%2F\".\u00a0 \u00a0 attachment_point = f\"cloudresourcemanager.googleapis.com%2Fprojects%2F{project_id}\"\u00a0 \u00a0 deny_rule = types.DenyRule()\u00a0 \u00a0 # Add one or more principals who should be denied the permissions specified in this rule.\u00a0 \u00a0 # For more information on allowed values, see: https://cloud.google.com/iam/help/deny/principal-identifiers\u00a0 \u00a0 deny_rule.denied_principals = [\"principalSet://goog/public:all\"]\u00a0 \u00a0 # Optionally, set the principals who should be exempted from the list of principals added in \"DeniedPrincipals\".\u00a0 \u00a0 # Example, if you want to deny certain permissions to a group but exempt a few principals, then add those here.\u00a0 \u00a0 # deny_rule.exception_principals = [\"principalSet://goog/group/project-admins@example.com\"]\u00a0 \u00a0 # Set the permissions to deny.\u00a0 \u00a0 # The permission value is of the format: service_fqdn/resource.action\u00a0 \u00a0 # For the list of supported permissions, see: https://cloud.google.com/iam/help/deny/supported-permissions\u00a0 \u00a0 deny_rule.denied_permissions = [\u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com/projects.delete\"\u00a0 \u00a0 ]\u00a0 \u00a0 # Add the permissions to be exempted from this rule.\u00a0 \u00a0 # Meaning, the deny rule will not be applicable to these permissions.\u00a0 \u00a0 # deny_rule.exception_permissions = [\"cloudresourcemanager.googleapis.com/projects.get\"]\u00a0 \u00a0 # Set the condition which will enforce the deny rule.\u00a0 \u00a0 # If this condition is true, the deny rule will be applicable. Else, the rule will not be enforced.\u00a0 \u00a0 #\u00a0 \u00a0 # The expression uses Common Expression Language syntax (CEL). Here we block access based on tags.\u00a0 \u00a0 #\u00a0 \u00a0 # Here, we create a deny rule that denies the cloudresourcemanager.googleapis.com/projects.delete permission to everyone except project-admins@example.com for resources that are tagged prod.\u00a0 \u00a0 # A tag is a key-value pair that can be attached to an organization, folder, or project.\u00a0 \u00a0 # For more info, see: https://cloud.google.com/iam/docs/deny-access#create-deny-policy\u00a0 \u00a0 deny_rule.denial_condition = {\u00a0 \u00a0 \u00a0 \u00a0 \"expression\": \"!resource.matchTag('12345678/env', 'prod')\"\u00a0 \u00a0 }\u00a0 \u00a0 # Set the rule description and deny rule to update.\u00a0 \u00a0 policy_rule = types.PolicyRule()\u00a0 \u00a0 policy_rule.description = \"block all principals from deleting projects, unless the principal is a member of project-admins@example.com and the project being deleted has a tag with the value prod\"\u00a0 \u00a0 policy_rule.deny_rule = deny_rule\u00a0 \u00a0 # Set the policy resource path, version (etag) and the updated deny rules.\u00a0 \u00a0 policy = types.Policy()\u00a0 \u00a0 # Construct the full path of the policy.\u00a0 \u00a0 # Its format is: \"policies/{attachmentPoint}/denypolicies/{policyId}\"\u00a0 \u00a0 policy.name = f\"policies/{attachment_point}/denypolicies/{policy_id}\"\u00a0 \u00a0 policy.etag = etag\u00a0 \u00a0 policy.rules = [policy_rule]\u00a0 \u00a0 # Create the update policy request.\u00a0 \u00a0 request = types.UpdatePolicyRequest()\u00a0 \u00a0 request.policy = policy\u00a0 \u00a0 result = policies_client.update_policy(request=request).result()\u00a0 \u00a0 print(f\"Updated the deny policy: {result.name.rsplit('/')[-1]}\")if __name__ == \"__main__\":\u00a0 \u00a0 import uuid\u00a0 \u00a0 # Your Google Cloud project ID.\u00a0 \u00a0 project_id = \"your-google-cloud-project-id\"\u00a0 \u00a0 # Any unique ID (0 to 63 chars) starting with a lowercase letter.\u00a0 \u00a0 policy_id = f\"deny-{uuid.uuid4()}\"\u00a0 \u00a0 # Get the etag by performing a Get policy request.\u00a0 \u00a0 etag = \"etag\"\u00a0 \u00a0 update_deny_policy(project_id, policy_id, etag)\n``` ` [policies.update](https://cloud.google.com/iam/docs/reference/rest/v2/policies/update?hl=zh-cn) ` \u65b9\u6cd5\u53ef\u66f4\u65b0\u62d2\u7d55\u653f\u7b56\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u7db2\u5740\u7de8\u78bc\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n- ``\uff1a\u62d2\u7d55\u653f\u7b56\u7684\u6a19\u8b58\u7b26\u3002\n- `` \uff1a\u66f4\u65b0\u5f8c\u7684\u62d2\u7d55\u653f\u7b56\u3002\u4f8b\u5982\uff0c\u5982\u9700\u7232\u4e0a\u4e00\u6b65\u4e2d\u986f\u793a\u7684\u653f\u7b56\u6dfb\u52a0\u6b0a\u9650\uff0c\u8acb\u5c07 `` \u66ff\u63db\u7232\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n{\u00a0 \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy\",\u00a0 \"uid\": \"6665c437-a3b2-a018-6934-54dd16d3426e\",\u00a0 \"kind\": \"DenyPolicy\",\u00a0 \"displayName\": \"My deny policy.\",\u00a0 \"etag\": \"MTc3NDU4MjM4OTY0MzU5MjQ5OTI=\",\u00a0 \"createTime\": \"2022-06-05T19:22:26.770543Z\",\u00a0 \"updateTime\": \"2022-06-05T19:22:26.770543Z\",\u00a0 \"rules\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"denyRule\": {\u00a0 \u00a0 \u00a0 \u00a0 \"deniedPrincipals\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"principal://goog/subject/lucian@example.com\"\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"deniedPermissions\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"iam.googleapis.com/roles.create\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"iam.googleapis.com/roles.delete\"\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 ]}\n```\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nPUT https://iam.googleapis.com/v2/policies/ENCODED_ATTACHMENT_POINT/denypolicies/POLICY_ID\n```\n\u8acb\u6c42 JSON \u6b63\u6587\uff1a\n```\nPOLICY\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6703\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy/operations/8b2d0ab2daf1ff01\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.iam.v2.PolicyOperationMetadata\",\n \"createTime\": \"2021-10-05T22:26:21.968687Z\"\n },\n \"response\": {\n \"@type\": \"type.googleapis.com/google.iam.v2.Policy\",\n \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy\",\n \"uid\": \"6665c437-a3b2-a018-6934-54dd16d3426e\",\n \"kind\": \"DenyPolicy\",\n \"displayName\": \"My deny policy.\",\n \"etag\": \"MTgxNTIxNDE3NTYxNjQxODYxMTI=\",\n \"createTime\": \"2022-06-05T19:22:26.770543Z\",\n \"updateTime\": \"2022-06-05T22:26:21.968687Z\",\n \"rules\": [  {\n  \"denyRule\": {\n   \"deniedPrincipals\": [   \"principal://goog/subject/lucian@example.com\"\n   ],\n   \"deniedPermissions\": [   \"iam.googleapis.com/roles.create\",\n   \"iam.googleapis.com/roles.delete\"\n   ]\n  }\n  }\n ]\n }\n}\n```\n\u8a72\u97ff\u61c9\u7528\u65bc\u6a19\u8b58\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u3002\u60a8\u53ef\u4ee5\u76e3\u63a7\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u7684\u72c0\u614b\uff0c\u4ee5\u77ad\u89e3\u5176\u5b8c\u6210\u6642\u9593\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u6aa2\u67e5\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u7684\u72c0\u614b](#check-operation-status) \u3002\n## \u522a\u9664\u62d2\u7d55\u653f\u7b56\n\u5982\u679c\u4e0d\u518d\u9700\u8981\u5f37\u5236\u57f7\u884c\u62d2\u7d55\u653f\u7b56\u4e2d\u7684\u898f\u5247\uff0c\u53ef\u4ee5\u522a\u9664\u62d2\u7d55\u653f\u7b56\u3002\n**\u6ce8\u610f** \uff1a\u522a\u9664\u62d2\u7d55\u653f\u7b56\u662f\u6c38\u4e45\u6027\u7684\u3002\u60a8\u7121\u6cd5\u6062\u5fa9\u5df2\u522a\u9664\u7684\u62d2\u7d55\u653f\u7b56\u3002\n\uff08\u53ef\u9078\uff09\u60a8\u53ef\u4ee5\u7232\u8981\u522a\u9664\u7684\u653f\u7b56\u7248\u672c\u6307\u5b9a `etag` \u3002\u5982\u679c\u60a8\u6307\u5b9a `etag` \uff0c\u5247\u5b83\u5fc5\u9808\u8207 IAM \u5b58\u5132\u7684\u7576\u524d `etag` \u5339\u914d\uff1b\u5982\u679c\u503c\u4e0d\u5339\u914d\uff0c\u5247\u8acb\u6c42\u5c07\u5931\u6557\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u529f\u80fd\u78ba\u4fdd\u522a\u9664\u9810\u671f\u7684\u653f\u7b56\uff0c\u800c\u4e0d\u662f\u8a72\u653f\u7b56\u7684\u66f4\u65b0\u7248\u672c\u3002\n\u5982\u679c\u60a8\u5728\u8acb\u6c42\u4e2d\u7701\u7565 `etag` \uff0c\u5247 IAM \u6703\u7121\u689d\u4ef6\u5730\u522a\u9664\u653f\u7b56\u3002\n**\u6ce8\u610f\uff1a** \u653f\u7b56\u66f4\u6539\u901a\u5e38\u6703\u5728 2 \u5206\u9418\u5167\u751f\u6548\u3002\u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u66f4\u6539\u53ef\u80fd\u9700\u8981\u9577\u9054 7 \u5206\u9418\u7684\u6642\u9593\u624d\u80fd\u50b3\u64ad\u5230\u6574\u500b\u7cfb\u7d71\u3002\n\u5982\u9700\u5f9e\u8cc7\u6e90\u4e2d\u522a\u9664\u62d2\u7d55\u653f\u7b56\uff0c\u8acb\u904b\u884c [gcloud iam policies delete](https://cloud.google.com/sdk/gcloud/reference/iam/policies/delete?hl=zh-cn) \u547d\u4ee4\uff1a\n```\ngcloud iam policies delete POLICY_ID \\\u00a0 \u00a0 --attachment-point=ATTACHMENT_POINT \\\u00a0 \u00a0 --kind=denypolicies\n```\n\u8acb\u63d0\u4f9b\u4ee5\u4e0b\u503c\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u7684\u6a19\u8b58\u7b26\u3002\n- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u6dfb\u52a0 `--etag=` `` \u6a19\u8a8c\u3002\u5c07 `` \u66ff\u63db\u7232\u62d2\u7d55\u653f\u7b56\u7684\u7576\u524d `etag` \u503c\u3002\n\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u5982\u679c\u6b64\u547d\u4ee4\u57f7\u884c\u6210\u529f\uff0c\u5c07\u4e0d\u6703\u8f38\u51fa\u4efb\u4f55\u8f38\u51fa\u5167\u5bb9\u3002\u5982\u9700\u8f38\u51fa\u8a73\u7d30\u97ff\u61c9\uff0c\u8acb\u5728\u547d\u4ee4\u4e2d\u6dfb\u52a0 `--format=json` \u6a19\u8a8c\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u6703\u5f9e\u9805\u76ee `my-project` \u4e2d\u522a\u9664\u540d\u7232 `my-deny-policy` \u7684\u62d2\u7d55\u653f\u7b56\uff1a\n```\ngcloud iam policies delete my-deny-policy \\\u00a0 \u00a0 --attachment-point=cloudresourcemanager.googleapis.com/projects/my-project \\\u00a0 \u00a0 --kind=denypolicies\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Go API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/go/docs/reference/cloud.google.com/go/iam/latest/apiv2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/iam/deny/delete_deny_policy.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 iam \"cloud.google.com/go/iam/apiv2\"\u00a0 \u00a0 \u00a0 \u00a0 iampb \"google.golang.org/genproto/googleapis/iam/v2\")// deleteDenyPolicy deletes the policy if you no longer want to enforce the rules in a deny policy.func deleteDenyPolicy(w io.Writer, projectID, policyID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"your_project_id\"\u00a0 \u00a0 \u00a0 \u00a0 // policyID := \"your_policy_id\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 policiesClient, err := iam.NewPoliciesClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewPoliciesClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer policiesClient.Close()\u00a0 \u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 \u00a0 \u00a0 // the \"/\" with \"%%2F\".\u00a0 \u00a0 \u00a0 \u00a0 attachmentPoint := fmt.Sprintf(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com%%2Fprojects%%2F%s\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 projectID,\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 req := &iampb.DeletePolicyRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Construct the full path of the policy.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Its format is: \"policies/ATTACHMENT_POINT/denypolicies/POLICY_ID\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: fmt.Sprintf(\"policies/%s/denypolicies/%s\", attachmentPoint, policyID),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := policiesClient.DeletePolicy(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"unable to delete policy: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 policy, err := op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"unable to wait for the operation: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Policy %s deleted\\n\", policy.GetName())\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v2?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/iam/snippets/src/main/java/DeleteDenyPolicy.java) \n```\nimport com.google.iam.v2.DeletePolicyRequest;import com.google.iam.v2.PoliciesClient;import com.google.longrunning.Operation;import java.io.IOException;import java.net.URLEncoder;import java.nio.charset.StandardCharsets;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class DeleteDenyPolicy {\u00a0 public static void main(String[] args)\u00a0 \u00a0 \u00a0 throws IOException, InterruptedException, ExecutionException, TimeoutException {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 // ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 String projectId = \"your-google-cloud-project-id\";\u00a0 \u00a0 // Specify the ID of the deny policy you want to retrieve.\u00a0 \u00a0 String policyId = \"deny-policy-id\";\u00a0 \u00a0 deleteDenyPolicy(projectId, policyId);\u00a0 }\u00a0 // Delete the policy if you no longer want to enforce the rules in a deny policy.\u00a0 public static void deleteDenyPolicy(String projectId, String policyId)\u00a0 \u00a0 \u00a0 throws IOException, InterruptedException, ExecutionException, TimeoutException {\u00a0 \u00a0 try (PoliciesClient policiesClient = PoliciesClient.create()) {\u00a0 \u00a0 \u00a0 // Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 \u00a0 // To work with deny policies, specify the attachment point.\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // Its format can be one of the following:\u00a0 \u00a0 \u00a0 // 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 \u00a0 // 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 \u00a0 // 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 \u00a0 //\u00a0 \u00a0 \u00a0 // The attachment point is identified by its URL-encoded resource name.\u00a0 \u00a0 \u00a0 String urlEncodedResource =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 URLEncoder.encode(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"cloudresourcemanager.googleapis.com/projects/\", StandardCharsets.UTF_8);\u00a0 \u00a0 \u00a0 String attachmentPoint = String.format(\"%s%s\", urlEncodedResource, projectId);\u00a0 \u00a0 \u00a0 // Construct the full path of the resource to which the policy is attached.\u00a0 \u00a0 \u00a0 // Its format is: \"policies/{attachmentPoint}/denypolicies/{policyId}\"\u00a0 \u00a0 \u00a0 String policyParent = String.format(\"policies/%s/denypolicies/%s\", attachmentPoint, policyId);\u00a0 \u00a0 \u00a0 // Create the DeletePolicy request.\u00a0 \u00a0 \u00a0 DeletePolicyRequest deletePolicyRequest =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeletePolicyRequest.newBuilder().setName(policyParent).build();\u00a0 \u00a0 \u00a0 // Delete the policy and wait for the operation to complete.\u00a0 \u00a0 \u00a0 Operation operation =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 policiesClient\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .deletePolicyCallable()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .futureCall(deletePolicyRequest)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .get(3, TimeUnit.MINUTES);\u00a0 \u00a0 \u00a0 if (operation.hasError()) {\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(\"Error in deleting the policy \" + operation.getError());\u00a0 \u00a0 \u00a0 \u00a0 return;\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 System.out.println(\"Deleted the deny policy: \" + policyId);\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/iam/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/iam/deny/deleteDenyPolicy.js) \n```\n/**\u00a0* TODO(developer): Uncomment and replace these variables before running the sample.\u00a0*/// const projectId = 'YOUR_PROJECT_ID';// const policyID = 'YOUR_POLICY_ID';const {PoliciesClient} = require('@google-cloud/iam').v2;const iamClient = new PoliciesClient();// Each deny policy is attached to an organization, folder, or project.// To work with deny policies, specify the attachment point.//// Its format can be one of the following:// 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID// 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID// 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID//// The attachment point is identified by its URL-encoded resource name. Hence, replace// the \"/\" with \"%2F\".const attachmentPoint = `cloudresourcemanager.googleapis.com%2Fprojects%2F${projectId}`;async function deleteDenyPolicy() {\u00a0 const request = {\u00a0 \u00a0 name: `policies/${attachmentPoint}/denypolicies/${policyId}`,\u00a0 };\u00a0 const [operation] = await iamClient.deletePolicy(request);\u00a0 const [policy] = await operation.promise();\u00a0 console.log(`Deleted the deny policy: ${policy.name}`);}deleteDenyPolicy();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 IAM \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [IAM \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/iam/docs/reference/libraries?hl=zh-cn) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [IAM Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/iam/latest/google.cloud.iam_v2.services.policies.PoliciesClient?hl=zh-cn) \u3002\n\u5982\u9700\u5411 IAM \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e96\u5099\u5de5\u4f5c](#before-you-begin) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/iam/cloud-client/snippets/delete_deny_policy.py) \n```\ndef delete_deny_policy(project_id: str, policy_id: str) -> None:\u00a0 \u00a0 from google.cloud import iam_v2\u00a0 \u00a0 from google.cloud.iam_v2 import types\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 Delete the policy if you no longer want to enforce the rules in a deny policy.\u00a0 \u00a0 project_id: ID or number of the Google Cloud project you want to use.\u00a0 \u00a0 policy_id: The ID of the deny policy you want to retrieve.\u00a0 \u00a0 \"\"\"\u00a0 \u00a0 policies_client = iam_v2.PoliciesClient()\u00a0 \u00a0 # Each deny policy is attached to an organization, folder, or project.\u00a0 \u00a0 # To work with deny policies, specify the attachment point.\u00a0 \u00a0 #\u00a0 \u00a0 # Its format can be one of the following:\u00a0 \u00a0 # 1. cloudresourcemanager.googleapis.com/organizations/ORG_ID\u00a0 \u00a0 # 2. cloudresourcemanager.googleapis.com/folders/FOLDER_ID\u00a0 \u00a0 # 3. cloudresourcemanager.googleapis.com/projects/PROJECT_ID\u00a0 \u00a0 #\u00a0 \u00a0 # The attachment point is identified by its URL-encoded resource name. Hence, replace\u00a0 \u00a0 # the \"/\" with \"%2F\".\u00a0 \u00a0 attachment_point = f\"cloudresourcemanager.googleapis.com%2Fprojects%2F{project_id}\"\u00a0 \u00a0 request = types.DeletePolicyRequest()\u00a0 \u00a0 # Construct the full path of the policy.\u00a0 \u00a0 # Its format is: \"policies/{attachmentPoint}/denypolicies/{policyId}\"\u00a0 \u00a0 request.name = f\"policies/{attachment_point}/denypolicies/{policy_id}\"\u00a0 \u00a0 # Create the DeletePolicy request.\u00a0 \u00a0 result = policies_client.delete_policy(request=request).result()\u00a0 \u00a0 print(f\"Deleted the deny policy: {result.name.rsplit('/')[-1]}\")if __name__ == \"__main__\":\u00a0 \u00a0 import uuid\u00a0 \u00a0 # Your Google Cloud project ID.\u00a0 \u00a0 project_id = \"your-google-cloud-project-id\"\u00a0 \u00a0 # Any unique ID (0 to 63 chars) starting with a lowercase letter.\u00a0 \u00a0 policy_id = f\"deny-{uuid.uuid4()}\"\u00a0 \u00a0 delete_deny_policy(project_id, policy_id)\n``` ` [policies.delete](https://cloud.google.com/iam/docs/reference/rest/v2/policies/delete?hl=zh-cn) ` \u65b9\u6cd5\u53ef\u5f9e\u8cc7\u6e90\u4e2d\u522a\u9664\u62d2\u7d55\u653f\u7b56\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u7db2\u5740\u7de8\u78bc\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n- ``\uff1a\u62d2\u7d55\u653f\u7b56\u7684\u6a19\u8b58\u7b26\u3002\n- ``\uff1a\u53ef\u9078\u3002\u653f\u7b56\u7248\u672c\u7684\u6a19\u8b58\u7b26\u3002\u5982\u679c\u5b58\u5728\uff0c\u5247\u6b64\u503c\u5fc5\u9808\u8207\u653f\u7b56\u7684\u7576\u524d`etag`\u503c\u5339\u914d\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nDELETE https://iam.googleapis.com/v2/policies/ENCODED_ATTACHMENT_POINT/denypolicies/POLICY_ID?etag=ETAG\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6703\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy/operations/8223fe308bf1ff01\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.iam.v2.PolicyOperationMetadata\",\n \"createTime\": \"2021-10-05T19:45:00.133311Z\"\n },\n \"response\": {\n \"@type\": \"type.googleapis.com/google.iam.v2.Policy\",\n \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy\",\n \"kind\": \"DenyPolicy\",\n \"displayName\": \"My deny policy.\",\n \"etag\": \"MTc3NDU4MjM4OTY0MzU5MjQ5OTI=\",\n \"createTime\": \"2022-06-28T19:06:12.455151Z\",\n \"updateTime\": \"2022-07-05T19:45:00.133311Z\",\n \"deleteTime\": \"2022-07-05T19:45:00.133311Z\",\n \"rules\": [  {\n  \"denyRule\": {\n   \"deniedPrincipals\": [   \"principal://goog/subject/lucian@example.com\"\n   ],\n   \"deniedPermissions\": [   \"iam.googleapis.com/roles.create\"\n   ]\n  }\n  }\n ]\n }\n}\n```\n\u8a72\u97ff\u61c9\u7528\u65bc\u6a19\u8b58\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u3002\u60a8\u53ef\u4ee5\u76e3\u63a7\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u7684\u72c0\u614b\uff0c\u4ee5\u77ad\u89e3\u5176\u5b8c\u6210\u6642\u9593\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u6aa2\u67e5\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u7684\u72c0\u614b](#check-operation-status) \u3002\n## \u6aa2\u67e5\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u7684\u72c0\u614b\n\u4f7f\u7528 REST API \u6216\u5ba2\u6236\u7aef\u5eab\u6642\uff0c\u4efb\u4f55\u66f4\u6539\u62d2\u7d55\u653f\u7b56\u7684\u65b9\u6cd5\u90fd\u6703\u8fd4\u56de\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u6216 LRO\u3002\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u6703\u8ddf\u8e64\u8acb\u6c42\u7684\u72c0\u614b\uff0c\u4e26\u6307\u793a\u653f\u7b56\u66f4\u6539\u662f\u5426\u5df2\u5b8c\u6210\u3002\n**\u6ce8\u610f** \uff1a\u5982\u679c\u60a8\u4f7f\u7528 gcloud CLI\uff0c\u5247\u53ef\u4ee5\u901a\u904e\u904b\u884c\u5e36\u6709 `--format=json` \u6a19\u8a8c\u7684\u547d\u4ee4\u4f86\u67e5\u770b\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u60a8\u5fc5\u9808\u4f7f\u7528 REST API \u6216\u5ba2\u6236\u7aef\u5eab\u4f86\u7372\u53d6\u64cd\u4f5c\u7684\u72c0\u614b\u3002\n\u672c\u9801\u9762\u4e0a\u7684\u4ee3\u78bc\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u7b49\u5f85\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u5b8c\u6210\uff0c\u7136\u5f8c\u8a2a\u554f\u5176\u7d50\u679c\u3002\u672c\u9801\u9762\u4e0a\u7684\u4ee3\u78bc\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u7b49\u5f85\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u5b8c\u6210\uff0c\u7136\u5f8c\u8a2a\u554f\u5176\u7d50\u679c\u3002\u672c\u9801\u9762\u4e0a\u7684\u4ee3\u78bc\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u7b49\u5f85\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u5b8c\u6210\uff0c\u7136\u5f8c\u8a2a\u554f\u5176\u7d50\u679c\u3002\u672c\u9801\u9762\u4e0a\u7684\u4ee3\u78bc\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u7b49\u5f85\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u5b8c\u6210\uff0c\u7136\u5f8c\u8a2a\u554f\u5176\u7d50\u679c\u3002 ` [policies.operations.get](https://cloud.google.com/iam/docs/reference/rest/v2/policies.operations/get?hl=zh-cn) ` \u65b9\u6cd5\u53ef\u8fd4\u56de\u9577\u6642\u9593\u904b\u884c\u7684\u64cd\u4f5c\u7684\u72c0\u614b\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- `` \uff1a\u62d2\u7d55\u653f\u7b56\u6240\u95dc\u806f\u7684\u8cc7\u6e90\u7684\u7db2\u5740\u7de8\u78bc\u6a19\u8b58\u7b26\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u8a2d\u7f6e\u6b64\u503c\u7684\u683c\u5f0f\uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u78ba\u5b9a\u9023\u63a5\u9ede](#attachment-point) \u3002\n- ``\uff1a\u64cd\u4f5c\u7684\u6a19\u8b58\u7b26\u3002\u60a8\u5728\u539f\u59cb\u8acb\u6c42\u7684\u97ff\u61c9\u4e2d\u6536\u5230\u6b64\u6a19\u8b58\u7b26\uff08\u4f5c\u7232\u64cd\u4f5c\u540d\u7a31\u7684\u4e00\u90e8\u5206\uff09\u3002\u4f7f\u7528\u64cd\u4f5c\u540d\u7a31\u672b\u5c3e\u7684\u5341\u516d\u9032\u5236\u503c\u3002\u4f8b\u5982`89cb3e508bf1ff01`\u3002\nHTTP \u65b9\u6cd5\u548c\u7db2\u5740\uff1a\n```\nGET https://iam.googleapis.com/v2/policies/ENCODED_ATTACHMENT_POINT/operations/OPERATION_ID\n```\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\n\u60a8\u61c9\u8a72\u6703\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"policies/cloudresourcemanager.googleapis.com%2Fprojects%2F1234567890123/denypolicies/my-policy/operations/89cb3e508bf1ff01\",\n \"done\": true\n}\n```\n\u5982\u679c\u64cd\u4f5c\u7684 `done` \u5b57\u6bb5\u4e0d\u5b58\u5728\uff0c\u8acb\u91cd\u8907\u7372\u53d6\u64cd\u4f5c\uff0c\u4ee5\u6301\u7e8c\u76e3\u63a7\u5176\u72c0\u614b\u3002\u4f7f\u7528 [\u622a\u65b7\u6307\u6578\u9000\u907f\u7b97\u6cd5](https://cloud.google.com/iam/docs/retry-strategy?hl=zh-cn#algorithm) \u5728\u6bcf\u500b\u8acb\u6c42\u4e4b\u9593\u5f15\u5165\u5ef6\u9072\u3002\u7576 `done` \u5b57\u6bb5\u8a2d\u7f6e\u7232 `true` \u6642\uff0c\u64cd\u4f5c\u5b8c\u6210\uff0c\u60a8\u53ef\u4ee5\u505c\u6b62\u7372\u53d6\u64cd\u4f5c\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u78ba\u5b9a [\u5728\u62d2\u7d55\u653f\u7b56\u4e2d\u53d7\u652f\u6301\u7684\u6b0a\u9650](https://cloud.google.com/iam/docs/deny-permissions-support?hl=zh-cn) \u3002\n- \u7372\u53d6 [\u62d2\u7d55\u653f\u7b56\u4e2d\u7684\u4e3b\u8cec\u865f\u6a19\u8b58\u7b26](https://cloud.google.com/iam/docs/principal-identifiers?hl=zh-cn) \u7684\u683c\u5f0f\u3002\n- \u77ad\u89e3\u5982\u4f55 [\u6392\u67e5\u5305\u542b\u62d2\u7d55\u653f\u7b56\u7684\u8a2a\u554f\u6b0a\u9650\u554f\u984c](https://cloud.google.com/iam/docs/troubleshoot-policies?hl=zh-cn) \u3002\n- \u8a73\u7d30\u77ad\u89e3\u5982\u4f55 [\u62d2\u7d55\u8a2a\u554f\u4e3b\u8cec\u865f](https://cloud.google.com/iam/docs/deny-overview?hl=zh-cn) \u3002", "guide": "IAM"}