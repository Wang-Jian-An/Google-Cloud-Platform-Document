{"title": "IAM - Service account key rotation", "url": "https://cloud.google.com/iam/docs/key-rotation", "abstract": "# IAM - Service account key rotation\n[Service account keys](/iam/docs/service-account-creds#key-types) are private keys that let you authenticate as a service account. Key rotation is the process of replacing your existing keys with new keys and then invalidating the replaced keys. We recommend that you routinely rotate all keys that you manage, including your service account keys.\nRotating service account keys can help reduce the risk posed by leaked or stolen keys. If a key is leaked, it might take bad actors days or weeks to discover the key. If you regularly rotate your service account keys, there's a higher chance that the leaked keys will be invalid by the time a bad actor gets them.\nHaving an established process for rotating service account keys also helps you act quickly if you suspect that a service account key has been compromised.\n**Note:** If you need to access resources from a workload that runs outside of Google Cloud, such as on Amazon Web Services (AWS) or Microsoft Azure, consider using [workload identity federation](/iam/docs/workload-identity-federation) instead of service account keys. Federation lets your workloads access resources directly, using a short-lived access token, and eliminates the maintenance and security burden associated with service account keys.\n", "content": "## How often to rotate keys\nWe recommend rotating your keys at least every 90 days to reduce the risk posed by leaked keys.\nIf you believe that a service account key has been compromised, we recommend that you rotate it immediately.\n## Key rotation process\nTo rotate service account keys, do the following:\n- Identify the service account keys that need to be rotated.\n- Create new keys for the same service accounts.\n- Replace the existing keys with the new keys across all applications.\n- Disable the replaced keys and monitor the applications to confirm that they work as expected.\n- Delete the service account keys that were replaced.\nYou can complete these steps by using a centralized secret management service, or by using a custom notification system.\n### Centralized secret management service\nMany centralized secret management services, like [HashiCorp Vault](https://www.vaultproject.io) , provide automatic secret rotation. You can use these services to store and rotate your service account keys.\nWe don't recommend using Google Cloud's Secret Manager to store and rotate service account keys. This is because, to access Secret Manager secrets, your application needs an identity that Google Cloud can recognize. If your application already has an identity that Google Cloud can recognize, then your application can use that identity to authenticate to Google Cloud instead of using a service account key.\nThe same concept applies for other cloud-based secret management services, like Azure KeyVault and AWS Secret Manager. If an application already has an identity that these cloud providers can recognize, would be able to use that identity to authenticate to Google Cloud instead of using a service account key.\n### Custom notification system\nAnother approach to service account key rotation is to create a system that sends notifications when keys need to be rotated. For example, you could create a system that sends alerts when it detects keys that were created more than 90 days ago.\nFirst, you need to identify the keys that need to be rotated. To identify these keys, we recommend using Cloud Asset Inventory to search for all service account keys that were created before a certain time.\nFor example, the following command lists all service account keys that were created before `2023-03-10 00:00:00 UTC` in the organization with the ID `123456789012` :\n```\ngcloud asset search-all-resources \\\n --scope=\"organizations/123456789012\" \\\n --query=\"createTime < 2023-03-10\" \\\n --asset-types=\"iam.googleapis.com/ServiceAccountKey\" \\\n --order-by=\"createTime\"\n```\nTo learn more about searching resources in Cloud Asset Inventory, see [Searchingresources](/asset-inventory/docs/searching-resources) . After identifying the keys that need to be rotated, you can send out notifications to the appropriate teams.\nWhen someone is notified to rotate a key, they should do the following:\n- [Create a new key](/iam/docs/keys-create-delete#creating) for the same service account.\n- Replace the existing key with the new key across all applications.\n- [Disable the key](/iam/docs/keys-disable-enable#disabling) that they replaced and monitor the applications to confirm that they work as expected.\n- After they confirm that the applications are working as expected, [delete thereplaced key](/iam/docs/keys-create-delete#deleting) .## Expiring service account keys\nWe don't recommend using expiring service account keys for key rotation. This is because expiring keys can cause outages if they aren't rotated properly. For more information about the use cases for expiring service account keys, see [expiry times for user-managed keys](/iam/docs/service-account-creds#key-expiry) .\n## What's next\n- Use Cloud Asset Inventory to [search for resources](/asset-inventory/docs/searching-resources) , including service account keys, by creation time.\n- [Create](/iam/docs/keys-create-delete#creating) , [disable](/iam/docs/keys-disable-enable#disabling) , and [delete](/iam/docs/keys-create-delete#deleting) service account keys.", "guide": "IAM"}