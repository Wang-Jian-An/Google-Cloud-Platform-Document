{"title": "Apigee - Step 6: Configure the cluster", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 6: Configure the cluster\nYou are currently viewing version 1.9 of the Apigee hybrid documentation. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\n", "content": "## \n Specify configuration overrides\nThe Apigee hybrid installer uses defaults for many settings; however, there are a few settings that do not have defaults. You must provide values for these settings, as explained next.\n**Important:** Apigee hybrid v1.9.4 has been updated with one critical hotfix release. If you wish, you can apply the required configuration settings for the hotfix directly in the configuration overrides file described in this step. If you add the hotfix upgrade configurations now, you do not have to perform any further hotfix upgrades later. The configuration settings for the hotfix (v1.9.4-hotfix.1) are listed in the [upgrade guide](https://cloud.google.com/apigee/docs/hybrid/v1.9/upgrade#install-hotfix) . See also the release note for the hotfix release:- [hybrid v1.9.4-hotfix.1](/apigee/docs/hybrid/release-notes#hybrid_v194-hotfix1) \n### Before you begin\nWe recommend you review the following scenarios to determine if you want to configure your cluster for them. These configurations are optional.\n- If you are planning on installing hybrid in multiple regions, read [Multi-region deployment](/apigee/docs/hybrid/v1.9/multi-region) before continuing.\n- Apigee hybrid provides default passwords for the Cassandra users; however, we recommend that you change the default user passwords. See [Configuring TLS for Cassandra](/apigee/docs/hybrid/v1.9/cassandra-tls) for details.\n- If you want to configure the storage and heap settings for Cassandra, see [ Configure storage and heap settings](https://cloud.google.com/apigee/docs/hybrid/v1.9/cassandra-production) .\n- For production installation scenarios, configure [persistent solid state disk (SSD)](/compute/docs/disks#pdspecs) storage for Cassandra.  We do not support using [local SSDs](/compute/docs/disks#localssds) for Apigee hybrid. For  details, see [  Add SSD storage for production deployments](https://cloud.google.com/apigee/docs/hybrid/v1.9/cassandra-production#add-ssd-storage-for-production-deployments) .\n### Configure the cluster\nBy convention, configuration overrides are written in a file named `overrides.yaml` in your `$HYBRID_FILES/overrides` directory.\n- Create a new file named **overrides.yaml** in your`$HYBRID_FILES/overrides`directory. For example:```\nvi $HYBRID_FILES/overrides/overrides.yaml\n```The `overrides.yaml` provides the configuration for  your unique Apigee hybrid installation. The overrides file in this step  provides a basic configuration for a small-footprint hybrid  runtime installation, suitable for your first installation.\n- In`overrides.yaml`, add the required property  values, shown below. A detailed description of each property is also provided below.If you are installing Apigee hybrid on GKE and you enabled Workload identity on your node  pools in [Step 1: Create a cluster](/apigee/docs/hybrid/v1.9/install-create-cluster) , select the **GKE -  Workload Identity** tab to configure your `overrides.yaml` file to use Workload  identity.For all other installations, select the tab for either non-production, **Non-prod** or  production, **Prod** environments, depending on your choice in [Step 4: Create service accounts and credentials](/apigee/docs/hybrid/v1.9/install-service-accounts) .For installations in production environments, look at the storage requirements for the  Cassandra database in [Configure Cassandra for  production](/apigee/docs/hybrid/v1.9/cassandra-production) .\nMake sure the `overrides.yaml` file has the   following structure and syntax. Values in are property values that you must provide. They are described in the [table below](#tablebelow) .\nIf you are installing Apigee hybrid on **GKE** , you have an alternative to authenticate   and make requests to Google APIs, **Workload Identity** . For overviews of Workload   Identity, see:- [   Introducing Workload Identity: Better authentication for your GKE applications](https://cloud.google.com/blog/products/containers-kubernetes/introducing-workload-identity-better-authentication-for-your-gke-applications) \n- [Using Workload Identity](/kubernetes-engine/docs/how-to/workload-identity) \nTo use Workload Identity with Apigee hybrid on GKE, use this template and then follow   the steps in [Step 8: Install hybrid runtime](/apigee/docs/hybrid/v1.9/install-hybrid-runtime) to create   the Kubernetes service accounts and associate them with the Google service accounts you   created in [Step 4: Create service accounts and   credentials](/apigee/docs/hybrid/v1.9/install-service-accounts) .\n```\ngcp:\n region: ANALYTICS_REGION\n projectID: GCP_PROJECT_ID\n workloadIdentityEnabled: true\nk8sCluster:\n name: CLUSTER_NAME\n region: CLUSTER_LOCATION # Must be the closest Google Cloud region to your cluster.\norg: ORG_NAME\ninstanceID: \"UNIQUE_INSTANCE_IDENTIFIER\"\ncassandra:\n hostNetwork: false\n # false for all GKE installations.\n # See Multi-region deployment: Prerequisites\n replicaCount: 3\n # Use 1 for demo installations and multiples of 3 for production.\n # See Configure Cassandra for production for guidelines.\n backup:\n enabled: true\n # Set to true for initial installation.\n # This triggers apigeectl to create the apigee-cassandra-backup Kubernetes service account.\n # See Cassandra backup overview for instructions on using cassandra.backup.\nvirtualhosts:\n- name: ENVIRONMENT_GROUP_NAME\n selector:\n app: apigee-ingressgateway\n ingress_name: INGRESS_NAME\n sslCertPath: ./certs/CERT_NAME.pem\n sslKeyPath: ./certs/KEY_NAME.key\ningressGateways:\n- name: INGRESS_NAME # maximum 17 characters.\n replicaCountMin: 2\n replicaCountMax: 10\n svcAnnotations: # optional. If you are on AKS, see Known issue #260772383\n SVC_ANNOTATIONS_KEY: SVC_ANNOTATIONS_VALUE\n svcLoadBalancerIP: SVC_LOAD_BALANCER_IP # optional\nenvs:\n- name: ENVIRONMENT_NAME\nlogger:\n enabled: false # Set to false for all GKE installations.\n```Make sure the `overrides.yaml` file has the   following structure and syntax. Values in are property values that you must provide. They are described in the [table below](#tablebelow) .\nThere are differences between the different platforms for the   Google Cloud project region and Kubernetes cluster region. Choose the   platform where you are installing Apigee hybrid.\n```\ngcp:\n region: ANALYTICS_REGION\n projectID: GCP_PROJECT_ID\nk8sCluster:\n name: CLUSTER_NAME\n region: CLUSTER_LOCATION # Must be the closest Google Cloud region to your cluster.\norg: ORG_NAME\ninstanceID: \"UNIQUE_INSTANCE_IDENTIFIER\"\ncassandra:\n replicaCount: 1\n # Use 1 for non-prod or \"demo\" installations and multiples of 3 for production.\n # See Configure Cassandra for production for guidelines.\n hostNetwork: false\n # Set to false for single region installations and multi-region installations\n # with connectivity between pods in different clusters, for example GKE installations.\n # Set to true for multi-region installations with no communication between\n # pods in different clusters, for example GKE On-prem, GKE on AWS, Anthos on bare metal,\n # AKS, EKS, and OpenShift installations.\n # See Multi-region deployment: Prerequisites\nvirtualhosts:\n- name: ENVIRONMENT_GROUP_NAME\n selector:\n app: apigee-ingressgateway\n ingress_name: INGRESS_NAME\n sslCertPath: ./certs/CERT_NAME.pem\n sslKeyPath: ./certs/KEY_NAME.key\ningressGateways:\n- name: INGRESS_NAME # maximum 17 characters.\n replicaCountMin: 2\n replicaCountMax: 10\n svcAnnotations: # optional. If you are on AKS, see Known issue #260772383\n SVC_ANNOTATIONS_KEY: SVC_ANNOTATIONS_VALUE\n svcLoadBalancerIP: SVC_LOAD_BALANCER_IP # optional\nenvs:\n- name: ENVIRONMENT_NAME\n serviceAccountPaths:\n synchronizer: NON_PROD_SERVICE_ACCOUNT_FILEPATH\n  # For example: \"./service-accounts/GCP_PROJECT_ID-apigee-non-prod.json\"\n udca: NON_PROD_SERVICE_ACCOUNT_FILEPATH\n runtime: NON_PROD_SERVICE_ACCOUNT_FILEPATH\nmart:\n serviceAccountPath: NON_PROD_SERVICE_ACCOUNT_FILEPATH\nconnectAgent:\n serviceAccountPath: NON_PROD_SERVICE_ACCOUNT_FILEPATH\nmetrics:\n serviceAccountPath: NON_PROD_SERVICE_ACCOUNT_FILEPATH\nudca:\n serviceAccountPath: NON_PROD_SERVICE_ACCOUNT_FILEPATH\nwatcher:\n serviceAccountPath: NON_PROD_SERVICE_ACCOUNT_FILEPATH\nlogger:\n enabled: false\n  # Set to false to disable logger for GKE installations.\n  # Set to true for all platforms other than GKE.\n  # See apigee-logger in Service accounts and roles used by hybrid components.\n serviceAccountPath: NON_PROD_SERVICE_ACCOUNT_FILEPATH\n```Make sure the `` `.yaml` file has the   following structure and syntax. Values in are property values that you must provide. They are described in the [table below](#tablebelow) .\nThere are differences between the different platforms for the   Google Cloud project region and Kubernetes cluster region. Choose the   platform where you are installing Apigee hybrid.\n```\ngcp:\n region: ANALYTICS_REGION\n projectID: GCP_PROJECT_ID\nk8sCluster:\n name: CLUSTER_NAME\n region: CLUSTER_LOCATION # Must be the closest Google Cloud region to your cluster.\norg: ORG_NAME\ninstanceID: \"UNIQUE_INSTANCE_IDENTIFIER\"\ncassandra:\n hostNetwork: false\n # Set to false for single region installations and multi-region installations\n # with connectivity between pods in different clusters, for example GKE installations.\n # Set to true for multi-region installations with no communication between\n # pods in different clusters, for example GKE On-prem, GKE on AWS, Anthos on bare metal,\n # AKS, EKS, and OpenShift installations.\n # See Multi-region deployment: Prerequisites\n replicaCount: 3\n # Use multiples of 3 for production.\n # See Configure Cassandra for production for guidelines.\n storage:\n capacity: 500Gi\n resources:\n requests:\n  cpu: 7\n  memory: 15Gi\n maxHeapSize: 8192M\n heapNewSize: 1200M\n # Minimum storage requirements for a production environment.\n # See Configure Cassandra for production.\nvirtualhosts:\n- name: ENVIRONMENT_GROUP_NAME\n selector:\n app: apigee-ingressgateway\n ingress_name: INGRESS_NAME\n sslCertPath: ./certs/CERT_NAME.pem\n sslKeyPath: ./certs/KEY_NAME.key\ningressGateways:\n- name: INGRESS_NAME # maximum 17 characters. See Known issue 243167389.\n replicaCountMin: 2\n replicaCountMax: 10\n svcAnnotations: # optional. If you are on AKS, see Known issue #260772383\n SVC_ANNOTATIONS_KEY: SVC_ANNOTATIONS_VALUE\nenvs:\n- name: ENVIRONMENT_NAME\n serviceAccountPaths:\n synchronizer: SYNCHRONIZER_SERVICE_ACCOUNT_FILEPATH\n  # For example: \"./service-accounts/GCP_PROJECT_ID-apigee-synchronizer.json\"\n udca: UDCA_SERVICE_ACCOUNT_FILEPATH\n  # For example: \"./service-accounts/GCP_PROJECT_ID-apigee-udca.json\"\n runtime: RUNTIME_SERVICE_ACCOUNT_FILEPATH\n  # For example: \"./service-accounts/GCP_PROJECT_ID-apigee-runtime.json\"\nmart:\n serviceAccountPath: MART_SERVICE_ACCOUNT_FILEPATH\n  # For example: \"./service-accounts/GCP_PROJECT_ID-apigee-mart.json\"\nconnectAgent:\n serviceAccountPath: MART_SERVICE_ACCOUNT_FILEPATH\n  # Use the same service account for mart and connectAgent\nmetrics:\n serviceAccountPath: METRICS_SERVICE_ACCOUNT_FILEPATH\n  # For example: \"./service-accounts/GCP_PROJECT_ID-apigee-metrics.json\"\nudca:\n serviceAccountPath: UDCA_SERVICE_ACCOUNT_FILEPATH\n  # For example: \"./service-accounts/GCP_PROJECT_ID-apigee-udca.json\"\nwatcher:\n serviceAccountPath: WATCHER_SERVICE_ACCOUNT_FILEPATH\n  # For example: \"./service-accounts/GCP_PROJECT_ID-apigee-watcher.json\"\nlogger:\n enabled: false\n  # Set to false to disable logger for GKE installations.\n  # Set to true for all platforms other than GKE.\n  # See apigee-logger in Service accounts and roles used by hybrid components.\n serviceAccountPath: LOGGER_SERVICE_ACCOUNT_FILEPATH\n  # For example: \"./service-accounts/GCP_PROJECT_ID-apigee-logger.json\"\n```The following example shows a completed overrides file with example   property values added:\n```\ngcp:\n region: us-central1\n projectID: hybrid-example\nk8sCluster:\n name: apigee-hybrid\n region: us-central1\norg: hybrid-example\ninstanceID: \"my_hybrid_example\"\ncassandra:\n hostNetwork: false\n replicaCount: 3\nvirtualhosts:\n- name: example-env-group\n selector:\n app: apigee-ingressgateway\n ingress_name: my-ingress-1\n sslCertPath: ./certs/keystore.pem\n sslKeyPath: ./certs/keystore.key\ningressGateways:\n- name: my-ingress-1\n replicaCountMin: 2\n replicaCountMax: 10\nenvs:\n- name: test\n serviceAccountPaths:\n synchronizer: ./service-accounts/my-hybrid-project-apigee-non-prod.json\n  # for production environments, my-hybrid-project-apigee-synchronizer.json\n udca: ./service-accounts/my-hybrid-project-apigee-non-prod.json\n  # for production environments, my-hybrid-project-apigee-udca.json\n runtime: ./service-accounts/my-hybrid-project-apigee-non-prod.json\n  # for production environments, my-hybrid-project-apigee-runtime.json\nmart:\n serviceAccountPath: ./service-accounts/my-hybrid-project-apigee-non-prod.json\n # for production environments, my-hybrid-project-apigee-mart.json\nconnectAgent:\n serviceAccountPath: ./service-accounts/my-hybrid-project-apigee-non-prod.json\n # for production environments, example-hybrid-apigee-mart.json\nmetrics:\n serviceAccountPath: ./service-accounts/my-hybrid-project-apigee-non-prod.json\n # for production environments, my-hybrid-project-apigee-metrics.json\nudca:\n serviceAccountPath: ./service-accounts/my-hybrid-project-apigee-non-prod.json\n # for production environments, my-hybrid-project-apigee-udca.json\nwatcher:\n serviceAccountPath: ./service-accounts/my-hybrid-project-apigee-non-prod.json\n # for production environments, my-hybrid-project-apigee-watcher.json\nlogger:\n enabled: false # Set to \"false\" for GKE. Set to \"true\" for all other Kubernetes platforms.\n serviceAccountPath: ./service-accounts/my-hybrid-project-apigee-non-prod.json\n # for production environments, LOGGER_SERVICE_ACCOUNT_NAME.json\n```\n- When you are finished, save the file.\nThe following table describes each of the property values that you must provide in the overrides file. For more information, see [Configuration property reference](/apigee/docs/hybrid/v1.9/config-prop-ref) .\n| Variable         | Description                                                                                                                                                                                                                                                                                                                                      |\n|:-------------------------------------------||\n| ANALYTICS_REGION       | In GKE, You must set this value to the same region where the cluster is running. In all other platforms, select the closest analytics region to your cluster that has Analytics support (see the table in Part 1, Step 2: Create an organization. This is the value you assigned to the environment variable ANALYTICS_REGION previously.                                                                                                                                                                                                                                                     |\n| GCP_PROJECT_ID        | Identifies the Google Cloud project where the apigee-logger and the apigee-metrics push their data. This is the value assigned to the environment variable PROJECT_ID.                                                                                                                                                                                                                                                                                               |\n| CLUSTER_NAME        | Your Kubernetes cluster name. This is the value assigned to the environment variable CLUSTER_NAME.                                                                                                                                                                                                                                                                                                                |\n| CLUSTER_LOCATION       | The region where the cluster is running. This is the region where you created the cluster in Step 1: Create a cluster. This is the value you assigned to the environment variable CLUSTER_LOCATION previously. If you are working with zonal clusters, you must specify the region in which your cluster was created. For example, if you created your cluster in the us-central1-a zone, specify us-central1 for the CLUSTER_LOCATION.                                                                                                                                                                                                                             |\n| ORG_NAME         | The ID of your Apigee hybrid organization. This is the value assigned to the environment variable ORG_NAME.                                                                                                                                                                                                                                                                                                              |\n| UNIQUE_INSTANCE_IDENTIFIER     | A unique string to identify this instance. This can be any combination of letters and numbers up to 63 characters in length. Note: You can create multiple organizations in the same cluster, but the instanceID must be the same for all orgs in the same Kubernetes cluster. For multi-region installations, each region requires its own cluster (individual clusters do not span regions). You can create multiple organizations in the same cluster, but the instanceID must be the same for all orgs in the same Kubernetes cluster.                                                                                                                                                                                                     |\n| ENVIRONMENT_GROUP_NAME      | The name of the environment group your environments are assigned to. This is the group you created in Project and org setup - Step 3: Create an environment group. This is the value assigned to the environment variable ENV_GROUP. Note: If you wish to place cluster instances in multiple regions, you must be careful about how you define your environments and virtual hosts. If you have one or more environments attached to an environment group, you must include that same environment group configuration in each cluster instance's overrides file.                                                                                                                                                                                               |\n| CERT_NAME KEY_NAME       | Enter the name of the self-signed TLS key and certificate files that you generated previously in Step 5: Create TLS certificates. These files must be located in the base_directory/hybrid-files/certs directory. For example: sslCertPath: ./certs/keystore.pem sslKeyPath: ./certs/keystore.key                                                                                                                                                                                                                                                                |\n| INGRESS_NAME        | The name of the Apigee ingress gateway for your deployment. This can be any name that meets the following requirements: Have a maximum length of 17 characters Contain only lowercase alphanumeric characters, '-' or '.' Start with an alphanumeric character End with an alphanumeric character See ingressGateways[].name in the Configuration property reference                                                                                                                                                                                                                                               |\n| SVC_ANNOTATIONS_KEY: SVC_ANNOTATIONS_VALUE | (Optional). This is a key-value pair that provides annotations for your default ingress service. Annotations are used by your cloud platform to help configure your hybrid installation, for example setting the loadbalancer type to either internal or external. Annotations vary from platform to platform. Refer to your platform documentation for required and suggested annotations. Note: You do not need to set svcAnnotations if you are creating your own Kubernetes service for ingress deployment as documented in Expose Apigee ingress gateway. Comment out or delete this section if you are not using it.                                                                                                                                                                                |\n| SVC_LOAD_BALANCER_IP      | (Optional). An IP address you have reserved for your load balancer. On platforms that support specifying the load balancer IP address, the load balancer will be created with this IP address. On platforms that do not allow you to specify the load balancer IP, this property is ignored. Note: You do not need to set LoadBalancerIP if you are creating your own Kubernetes service for ingress deployment as documented in Expose Apigee ingress gateway. In production installations, it is recommended to create your own Kubernetes service. Comment out or delete this section if you are not using it.                                                                                                                                                                                  |\n| ENVIRONMENT_NAME       | Use the same name that you used when you created an environment in the UI, as explained in Project and org setup - Step 3: Create an environment group.                                                                                                                                                                                                                                                                                                   |\n| *_SERVICE_ACCOUNT_FILEPATH     | The path and filename account of the service account JSON files in your service-accounts/ directory. The names must include the path to the service account file. This can be a full path, or the path relative to your hybrid-files/ directory. If you include a relative path, you must call apigeectl, the command to apply this configuration, from your hybrid-files/ directory. For non-production environments, the name of the single service account is GCP_PROJECT_ID-non-prod.json by default. For production environments, the name of the service account key file that you generated with the create-service-account tool in Hybrid runtime setup - Step 4: Create service accounts and credentials. You can see the list of service account files in your service-accounts/ directory. The default names of the production environment service accounts are: Cassandra: GCP_PROJECT_ID-apigee-cassandra.json Logger: GCP_PROJECT_ID-apigee-logger.json MART: GCP_PROJECT_ID-apigee-mart.json Connect agent: GCP_PROJECT_ID-apigee-mart.json Metrics: GCP_PROJECT_ID-apigee-metrics.json Apigee runtime: GCP_PROJECT_ID- Synchronizer: GCP_PROJECT_ID-apigee-synchronizer.json UDCA: GCP_PROJECT_ID-apigee-udca.json Watcher: GCP_PROJECT_ID-apigee-watcher.json Note: Both mart and connectAgent use the apigee-mart service account. |\n**Note:** If you want to create a security perimeter around your cluster and related Cloud services, you can configure one using Google Cloud [ Virtual Private Cloud (VPC) Service Controls](https://cloud.google.com/vpc-service-controls) with Apigee hybrid.  See [ Using VPC Service Controls with Apigee and Apigee hybrid](/apigee/docs/api-platform/security/vpc-sc) for  instructions.\n## \n Summary\nThe configuration file tells Kubernetes how to deploy the hybrid components to a cluster. Next, you will enable synchronizer access so the Apigee runtime and management planes will be able to communicate.\n## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled [1](/apigee/docs/hybrid/v1.9/install-create-cluster) If the button's step matches the current step in the process, make the button disabled [2](/apigee/docs/hybrid/v1.9/install-cert-manager) If the button's step matches the current step in the process, make the button disabled [3](/apigee/docs/hybrid/v1.9/install-apigeectl) If the button's step matches the current step in the process, make the button disabled [4](/apigee/docs/hybrid/v1.9/install-service-accounts) If the button's step matches the current step in the process, make the button disabled [5](/apigee/docs/hybrid/v1.9/install-create-tls-certificates) If the button's step matches the current step in the process, make the button disabled If the button's step matches the next step [6](/apigee/docs/hybrid/v1.9/install-configure-cluster) If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 7: Enable Synchronizer access](/apigee/docs/hybrid/v1.9/install-enable-synchronizer-access) If the button's step matches the current step in the process, make the button disabled [8](/apigee/docs/hybrid/v1.9/install-hybrid-runtime) If the button's step matches the current step in the process, make the button disabled [9](/apigee/docs/hybrid/v1.9/install-expose-apigee-ingress) If the button's step matches the current step in the process, make the button disabled [10](/apigee/docs/hybrid/v1.9/install-deploy-proxy)", "guide": "Apigee"}