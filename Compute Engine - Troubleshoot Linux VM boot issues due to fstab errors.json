{"title": "Compute Engine - Troubleshoot Linux VM boot issues due to fstab errors", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Troubleshoot Linux VM boot issues due to fstab errors\nFstab (file system table) is a configuration file that is used to define how disk partition, file system, and file share mounts in your Linux VM persist across system reboots.\nThis document outlines multiple conditions where an incorrect fstab configuration may result in a boot problem and offers troubleshooting advice to fix the issue.\nA few of the common issues with fstab misconfiguration are listed below:\n- Syntax error in`fstab`configuration file\n- An incorrect UUID\n- An entry exists for an unattached/unavailable device\n- Deprecated mount options like`nobarrier`for the xfs file system type in [SUSE](https://www.suse.com/c/xfs-nobarrier-option-is-now-more-than-deprecated) or [RHEL](https://access.redhat.com/solutions/5315771) images.", "content": "## Before you begin\n- If you want to log serial port output in Cloud Logging, familiarize yourself with [Cloud Logging](/logging) .\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\nTo use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```## Identify fstab issues\nFor boot issues, Google highly recommendeds that you check the boot logs in the Serial Console of the Linux VM. The VM goes into emergency mode with an error message hinting that the issue is with fstab.\n```\n [K[[1;31m TIME [0m] Timed out waiting for device dev-incorrect.device.\n [[1;33mDEPEND[0m] Dependency failed for /distribution.\n [[1;33mDEPEND[0m] Dependency failed for Local File Systems.\n ...\n Welcome to emergency mode! After logging in, type \"journalctl -xb\" to viewsystem logs, \"systemctl reboot\" to reboot, \"systemctl default\" to try again to boot into default mode.\n Give root password for maintenance\n (or type Control-D to continue)\n \n```\nAs per the error message, there is dependency failure for the `/distribution` file system. The dependency failure for a file system mount point will differ based on the file system names used.\n### Resolution\nUse the following options to solve the `fstab` error in Linux VMs hosted in Google Cloud. You can resolve the issue faster using the serial console than using the manual method.\n**Note:** To fix the issue from emergency mode, you must have the root password. By default, a root password is not set on Google provided Linux images. If you didn't set a root password, use [Option 2](#option2) instead.\nTo use the following methods to resolve the fstab issue, you must [enable serial port access for your VM](/compute/docs/troubleshooting/troubleshooting-using-serial-console#enable_instance_access) .- Log into the serial console of the VM from Google Cloud console. \n- In the current emergency mode, enter the root password to access your VM.\n- Use your favorite text editor to open the `fstab` file. Make the necessary changes and save the changes to the `fstab` file. In the following example, the `vi` editor is used.```\nvi /etc/fstab\n```In the previous example, the device for `/distribution` is detached from the VM. Comment the line that references the file system or remove the fstab entry for `/distribution` mount point.Use `man fstab` for more details about the fstab configuration and syntax.\n- Save the file and exit the editor. If you are using the `vi` editor, use `ESC` + `:wq!` to save and exit the editor.\n- Resume the boot process by entering **reboot** at the prompt.\n- After successfully fixing the issue, the VM boot process should complete and the login prompt appears in the serial console.\n- Verify you can log in to the VM again using SSH.This option can be used if the root password is not set.\nPrerequisite: The `GRUB_TIMEOUT` parameter in the grub configuration file must be set to a non-zero value. Usually this file is at `/etc/default/grub` , but on some earlier distributions, it might be located in a non-standard directory.\n- Go to the VM instances page in the Google Cloud console. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- Log into the serial console of the Virtual Machine from the Google Cloud console. \n- Click **RESET** for virtual machine from Google Cloud Console.\n- In the serial console window, interrupt the boot process by clicking the arrow key to pause in the grub screen or menu.\n- In the list of kernels in the grub boot loader screen, choose the kernel and press `e` on the keyboard.\n- Add the `rd.break` parameter at the end of the kernel line and press `ctrl` + `x` . This helps in booting the VM into single user mode. **Note:** The `rd.break` parameter works for RHEL, CENTOS, Oracle Linux, SUSE Operating Systems. This parameter isn't a persistent entry so no changes are required after boot. For Ubuntu 18.04, 20.04 and 22.04 LTS, you can add `systemd.unit=rescue.target` to boot into rescue mode which is similar to single user mode.\n- Mount the root file system in read write mode.\n- Analyze, make necessary change and save `fstab` file. Use `man fstab` for more details about configuration and syntax. Use your favorite text editor to open the `fstab` file. In the below example, the vi editor is used.```\nvi /etc/fstab\n```In this example, the device for `/distribution` is detached from the VM, so comment the line or remove the fstab entry for the `/distribution` mount point.\n- Save the file and exit from the editor. If you are using the vi editor, then use `ESC` + `:wq!` to save and exit from fstab.\n- Resume the boot process by entering `reboot` at the prompt.\n- After successfully fixing the issue, the VM boot process should complete and you should see the login prompt in the serial console.\n- Verify you can log in to the VM using SSH.", "guide": "Compute Engine"}