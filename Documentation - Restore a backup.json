{"title": "Documentation - Restore a backup", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Restore a backup\nAfter a backup is created, you can create a restore for that backup, which initiates the restoration of some portion of the contents of that backup into a target cluster. This target cluster might be different from the cluster where the backup was originally created.\nWhen a backup is restored, the Kubernetes resources are recreated in the target cluster. After the resources are created, actual restoration of workload functionality is subject to the regular cluster reconciliation process. For example, pods are scheduled to nodes and then started on those nodes.\n", "content": "## Create a restore\nTo get the permissions that you need to create a `Restore` , ask your Project IAM Admin to grant you the Backup Creator ( `backup-creator` ) role. Manually restore a backup using the GDCH console or the API.\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Select a project.\n- Click the **Backups** tab.\n- In the list of backups, find the backup to restore and click **Restore** .\n- Choose a restore plan from the list of plans that apply to this backup.\n- Enter a name and an optional description for the restore.\n- Click **Restore** .\nCreate a `ManualRestoreRequest` custom resource to perform restores from existing `RestorePlans` . Specify the `Backup` that you want to restore, the name of the `Restore` that you want to create, and the `RestorePlan` that matches the `BackupPlan` of the `Backup` . Here's an example of a `ManualRestoreRequest` :\n```\napiVersion: backup.gdc.goog/v1kind: ManualRestoreRequestmetadata:\u00a0 name: manualrestorerequest-sample\u00a0 namespace: defaultspec:\u00a0 restoreName: \"test-manual-restore\"\u00a0 restorePlanName: \"restoreplan-sample\"\u00a0 backupName: \"temp-backup\"\u00a0 description: \"restores test clusters\"\n```\nThis example includes the following values:\n| Value   | Description                           |\n|:----------------|:-----------------------------------------------------------------------------------------------------------------------|\n| backupName  | The name of the Backup to restore.                      |\n| description  | User-provided description of why the Restore is being created. This description is inherited by the created Restore. |\n| restoreName  | The name of the Restore to create.                      |\n| restorePlanName | The name of the RestorePlan that this restore uses.                 |\nAfter initiating a `ManualRestoreRequest` , a `Restore` custom resource is generated.\n## Restore from an imported backup\nYou can restore a backup from another backup that was completed in a different cluster. For example, if the original cluster is inactive or you want to clone an existing cluster.\nFirst, create a backup repository in the target cluster that points to the storage location used by the source cluster. If the repository is actively being used by the source cluster in `ReadWrite` mode, you must specify the `ImportPolicy` as `ReadOnly` . For more information, see [Backup repository import policies](/distributed-cloud/hosted/docs/latest/gdch/platform-application/pa-ao-operations/add-backup-repository#backup-repo-import-policies) .\nAfter the backup repository is created and the backups are successfully imported, the repository backup resources are present in the target cluster. You can then schedule a restore in the target cluster by referencing an imported backup.\n## View a restore\nView a list of restores using the GDCH console or `kubectl` .\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click **Select project** to select an organization or project depending on your role:\n- Backup Admin: Select an organization to see all of the restores in an organization or select a project to see all of the restores in a project.\n- Backup Creator: Select a project to see all of the restores in a project.\n- Click the **Restores** tab.\n- Click a restore in the list to view its details.\nView the status of a `Restore` in the default namespace:\n```\nkubectl get restores\n```\nHere's an example of the output:\n```\nNAME     STATE\nrestore-sample   Succeeded\n```\nView `Restores` in all namespaces:\n```\nkubectl get restores -A\n```\nView `Restores` in a specific namespace:\n```\nkubectl get restores -n NAMESPACE\n```\nReplace `` with the namespace containing the restores.\n## Delete a restore\nUnlike backups, deleting a restore does not require issuing a request. Restores are deleted by deleting the resource directly from the Kubernetes API server. This action also cleans up any associated restore artifacts from object storage.\nDelete a restore:\n```\nkubectl delete restores RESTORE_NAME\n```\nReplace `` with the name of the restore.", "guide": "Documentation"}