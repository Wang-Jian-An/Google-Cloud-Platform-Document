{"title": "Documentation - Add a persistent disk to your VM", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Add a persistent disk to your VM\nCreate and attach a non-boot disk to your virtual machine (VM) using the instructions on this page.\n", "content": "## Before you begin\nTo use `gdcloud` command-line interface (CLI) commands, ensure that you have downloaded, installed, and configured the [gdcloud CLI](/distributed-cloud/hosted/docs/latest/gdch/resources/gdcloud-overview) . All commands for Distributed Cloud Hosted use the `gdcloud` or `kubectl` CLI, and require an operating system (OS) environment.\n### Get the kubeconfig file path\nTo run commands against the org admin cluster, ensure you have the following resources:\n- Locate the org admin cluster name, or ask your Platform Administrator (PA) what the cluster name is.\n- [Sign in and generate](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/iam/sign-in#cli) the kubeconfig file for the org admin cluster if you don't have one.\n- Use the path to the kubeconfig file of the org admin cluster to replace `` in these instructions.## Attach a disk to a VM\nCreate and attach non-boot disks to your VM. Each additional disk can specify a custom image or a blank disk. You can add several disks at once to a VM.\n- In the navigation menu, click **Virtual Machines > Instances** .\n- In the list of VMs, click a VM name to view its details.\n- Click **Add new disk** .\n- In the confirmation dialog, click **Stop** to stop the VM.\n- Wait a few minutes for the VM to stop.\n- Click **Refresh** .\n- When the VM is in a stopped state, click **Add new disk** again.\n- In the Add disk dialog, choose a new disk or an existing disk.- To provision a new disk, click the **New disk** tab.- In the **Disk name** field, enter a new disk name that is unique to the project.\n- In the **Size** field, enter a disk size between 10 and 65536\u00a0GiB. For example, **10\u00a0GiB** .\n- In the **Deletion rule** section, click **Keep disk** or **Delete disk** .\n- To choose an existing disk, click the **Existing disk** tab.- In the **Disk** list, select a disk.\n- In the Deletion rule section, click **Keep disk** or **Delete disk** .\n- Click **Save** . The disk appears in the list of disks for the VM.\n- [Restart the VM](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/manage-vms/operations-and-lifecycle/start-and-stop-vm#restart-a-vm) .\n- Create a `VirtualMachineDisk` :```\nkubectl --kubeconfig ORG_ADMIN_KUBECONFIG apply -n PROJECT -f - <<EOFapiVersion: virtualmachine.gdc.goog/v1kind: VirtualMachineDiskmetadata:\u00a0 name: NON_BOOT_BLANK_DISKspec:\u00a0 size: NON_BOOT_BLANK_DISK_SIZEEOF\n```\n- [Stop the VM](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/manage-vms/operations-and-lifecycle/start-and-stop-vm#stop-a-vm) .\n- Add the `VirtualMachineDisk` to the existing `VirtualMachine` `spec.disks` :```\nkubectl --kubeconfig ORG_ADMIN_KUBECONFIG edit virtualmachines.virtualmachine.gdc.goog -n PROJECT VM_NAME\n```Edit the following in your text editor:```\n\u2026disks:- virtualMachineDiskRef:\u00a0 \u00a0 name: VM_BOOT_DISK_NAME\u00a0 \u00a0 boot: true- virtualMachineDiskRef:\u00a0 \u00a0 name: NON_BOOT_BLANK_DISK\u00a0 \u00a0 autoDelete: false\u2026\n```Replace the variables, using the following definitions.| Variable     | Definition                  |\n|:-------------------------|:-------------------------------------------------------------------------------|\n| ORG_ADMIN_KUBECONFIG  | The org admin cluster kubeconfig file path.         |\n| PROJECT     | The Google Distributed Cloud Hosted (GDCH) project in which to create the VM. |\n| VM_NAME     | The name of the new VM.              |\n| VM_BOOT_DISK_NAME  | The name of the new VM boot disk.            |\n| NON_BOOT_BLANK_DISK  | The name of your additional disk.            |\n| NON_BOOT_BLANK_DISK_SIZE | The size of your additional disks, such as 20G.        |\n- [Start the VM](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/manage-vms/operations-and-lifecycle/start-and-stop-vm#start-a-vm) .## Format and mount a non-boot disk\nAfter you attach a disk to the VM, perform the following necessary steps to make it accessible within the VM.\n### Connect to the VM\n[SSH into the VM](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/connect-to-vm/connect-to-a-vm#ssh-into-a-vm) .\n### Format the disk\n- List the disks that are attached to your instance by serial number and locate the disk that you want to format and mount.```\nls -l /dev/disk/by-id/\n```This example output shows the disk names as serial numbers:```\n\u00a0 \u00a0total 0\u00a0 \u00a0lrwxrwxrwx 1 root root \u00a09 Sep 13 23:51 ata-QEMU_HARDDISK_agentSADisk -> ../../sdc\u00a0 \u00a0lrwxrwxrwx 1 root root \u00a09 Sep 13 23:51 scsi-0ATA_QEMU_HARDDISK_agentSADisk -> ../../sdc\u00a0 \u00a0lrwxrwxrwx 1 root root \u00a09 Sep 13 23:51 scsi-0QEMU_QEMU_HARDDISK_vm-disk-boot -> ../../sda\u00a0 \u00a0lrwxrwxrwx 1 root root 10 Sep 13 23:51 scsi-0QEMU_QEMU_HARDDISK_vm-disk-boot-part1 -> ../../sda1\u00a0 \u00a0lrwxrwxrwx 1 root root 11 Sep 13 23:51 scsi-0QEMU_QEMU_HARDDISK_vm-disk-boot-part14 -> ../../sda14\u00a0 \u00a0lrwxrwxrwx 1 root root 11 Sep 13 23:51 scsi-0QEMU_QEMU_HARDDISK_vm-disk-boot-part15 -> ../../sda15\u00a0 \u00a0lrwxrwxrwx 1 root root \u00a09 Sep 13 23:51 scsi-0QEMU_QEMU_HARDDISK_vm-disk-data -> ../../sdb\u00a0 \u00a0lrwxrwxrwx 1 root root \u00a09 Sep 13 23:51 scsi-1ATA_QEMU_HARDDISK_agentSADisk -> ../../sdc\u00a0 \u00a0lrwxrwxrwx 1 root root \u00a09 Sep 13 23:51 scsi-SATA_QEMU_HARDDISK_agentSADisk -> ../../sdc\u00a0 \u00a0lrwxrwxrwx 1 root root \u00a09 Sep 13 23:51 scsi-SQEMU_QEMU_HARDDISK_vm-disk-boot -> ../../sda\u00a0 \u00a0lrwxrwxrwx 1 root root 10 Sep 13 23:51 scsi-SQEMU_QEMU_HARDDISK_vm-disk-boot-part1 -> ../../sda1\u00a0 \u00a0lrwxrwxrwx 1 root root 11 Sep 13 23:51 scsi-SQEMU_QEMU_HARDDISK_vm-disk-boot-part14 -> ../../sda14\u00a0 \u00a0lrwxrwxrwx 1 root root 11 Sep 13 23:51 scsi-SQEMU_QEMU_HARDDISK_vm-disk-boot-part15 -> ../../sda15\u00a0 \u00a0lrwxrwxrwx 1 root root \u00a09 Sep 13 23:51 scsi-SQEMU_QEMU_HARDDISK_vm-disk-data -> ../../sdb\n```The information that follows the arrow, `->` , on each line indicates the disk device name. For example, in `scsi-SQEMU_QEMU_HARDDISK_vm-disk-data -> ../../sdb` , the serial number is `scsi-SQEMU_QEMU_HARDDISK_vm-disk-data` and the [device name is sdb](None) .\n- Identify your disk serial number from this list.Important situational feature behavior that can affect the serial number list:- If the`virtualMachineDiskRef.name`value is longer than 20 characters, only the first 20 characters are used as the serial number.\n- If there are two disks with the same first 20 characters, only the first disk has a serial number.\n- Format the disk:\n**Important:** This command . Therefore, verify that you have specified the correct disk device. Although you can use any file format that you need, for best results use a single ext4 file system without a partition table.\n```\n\u00a0 \u00a0sudo mkfs.ext4 -m 0 -E lazy_itable_init=0,lazy_journal_init=0,discard /dev/disk/by-id/DISK_ID\n```\n- Replace``with the serial number of the disk that you are formatting.\n- For this example, specify`scsi-SQEMU_QEMU_HARDDISK_vm-disk-data`to format the entire disk without a partition table.\nTo maximize disk performance, use the recommended formatting options in the `-E` flag. Because you don't need to reserve space for the root volume on your secondary disk, specify `-m 0` to use all of the available disk space.\n## Mount the disk\n- Create a directory that serves as the mount point for the new disk. You can use any directory. The following example creates a directory in `/mnt/disks/` :```\nsudo mkdir -p /mnt/disks/MOUNT_DIR\n```Replace `` with the directory where you want to mount the disk.\n- Mount the disk to the instance, and enable the discard option:```\nsudo mount -o discard,defaults /dev/disk/by-id/DISK_ID /mnt/disks/MOUNT_DIR\n```Replace the following:- ``with serial number of the disk to mount.\n- ``with the directory where you want to mount the disk.\n- Optional: Configure read and write permissions on the disk. The following command grants write, `a+w` , access to the disk for all users.```\nsudo chmod a+w /mnt/disks/MOUNT_DIR\n```\n- Optional: Configure automatic mount on VM restart - Using the [universal unique identifier (UUID)](#configure-auto-mount-on-vm-restart) or [startup script](#configure-auto-mount-startup-script) .## Configure automatic mount on VM restart - disk UUID\nAdd the disk to your `/etc/fstab` file, so that the disk automatically mounts again when the VM restarts. On an operating system (OS), the device name changes with each reboot, but the device UUID always points to the same volume, even when you move disks between systems. Therefore, always use the device UUID to configure automatic mounting on VM restart.\n- Create a backup of your current `/etc/fstab` file:```\n\u00a0 sudo cp /etc/fstab /etc/fstab.backup\n```\n- [List the UUID](None) for the disk:```\n\u00a0 sudo blkid /dev/DEVICE_NAME\n```The example output shows the UUID of `accc19c5-d0d6-4157-9672-37d4e1d48eb5` for the disk```\n\u00a0 /dev/sdb: UUID=\"accc19c5-d0d6-4157-9672-37d4e1d48eb5\" TYPE=\"ext4\"\n````` is the [device name of the disk](#devicename) that you want to automatically mount. If you created a partition table on the disk, specify the partition that you want to mount as a suffix to the device name. For example, if `sdb` is the disk device name, and you want to mount partition 1, `` becomes `sdb1` .\n- Open the `/etc/fstab` file in a text editor and create an entry that includes the UUID:```\n\u00a0 UUID=UUID_VALUE /mnt/disks/MOUNT_DIR ext4 discard,defaults,MOUNT_OPTION 0 2\n```Replace the following:- ``with the disk`UUID`, listed as the output of the [List the UUID](#previous-step) command.\n- ``with the directory where you mounted your disk.\n- ``with the`MOUNT_OPTION`value for your OS, which specifies what the OS does if it cannot mount the disk at boot time.\n- Verify that your `/etc/fstab` entries are correct:```\n\u00a0 cat /etc/fstab\n```The following shows an example output:```\n LABEL=cloudimg-rootfs / ext4 defaults 0 1\n LABEL=UEFI /boot/efi vfat umask=0077 0 1\n UUID=UUID_VALUE /mnt/disks/MOUNT_DIR ext4 discard,defaults,MOUNT_OPTION 0 2\n```\nIf you detach this disk or create a snapshot from the boot disk for this VM, edit the `/etc/fstab` file and remove the entry for this disk. Even if you have `` set to `nofail` or `nobootwait` , keep the `/etc/fstab` file in sync with the devices that attach to your VM. Remove these entries before you create your boot disk snapshot or detach the disk.\n## Configure automatic mount on VM restart - VM startup script\nYou can also use a startup script to mount the disk on every reboot by adding the commands from [Mount the Disk](#mount-the-disk) to a [startup script](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/manage-the-os/startup-script-vm-instance) . Before you add the script to mount the disk, format the disk using the commands from [Format the disk](#format-the-disk) .\n- Create the startup script secret.```\ncat <<EOF >>mount-disk-script#!/bin/bashmkdir -p /mnt/disks/MOUNT_DIRmount -o discard,defaults /dev/disk/by-id/DISK_ID /mnt/disks/MOUNT_DIREOF\n``````\nkubectl create secret -n PROJECT generic VM_NAME-mount-script --from-file=script=mount-disk-script\n``````\nrm mount-disk-script\n```\n- Add the startup script to the VM.```\nkubectl --kubeconfig ORG_ADMIN_KUBECONFIG edit virtualmachines.virtualmachine.gdc.goog -n PROJECT VM_NAME\n```Edit the `spec.startupScripts` to include the secret name.```\napiVersion: virtualmachine.gdc.goog/v1kind: VirtualMachinemetadata:name: VM_NAMEnamespace: PROJECTspec:\u2026startupScripts:- name: mount-script\u00a0 scriptSecretRef:\u00a0 \u00a0 name: VM_NAME-mount-script\n```\nFor more information on configuring startup scripts [see](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/manage-the-os/startup-script-vm-instance) .", "guide": "Documentation"}