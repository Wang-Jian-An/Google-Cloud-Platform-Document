{"title": "Apigee - Service account validation", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Service account validation\nYou are currently viewing version 1.1 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nApigee hybrid provides validation that ensures the location of your service accounts' keys are correct and that the accounts have the proper permissions in your GCP project. This validation is enabled by default.\nThis section describes how to enable or disable service account validation. In addition, this step ensures that you have the proper APIs enabled for your GCP project so that validation works.\n", "content": "## Enable service account permission validation\n**To enable permission validation:**\n- Be sure the [ Cloud Resource Manager API](https://cloud.google.com/resource-manager/reference/rest/) is enabled for your GCP project:- Open the [Google Cloud console](https://console.cloud.google.com) and log in with the account you created in [Step 1: Create a Google Cloud account](/apigee/docs/hybrid/v1.1/precog-gcpaccount) .\n- Select the project that you created in [Step 2: Create a Google Cloud project](/apigee/docs/hybrid/v1.1/precog-gcpproject) .\n- Select **APIs & Services > Library** .\n- Search for \"Cloud Resource Manager\".\n- Locate the **Cloud Resource Manager API** service and click on it.\n- If it is not enabled, click **Enable** .\nYou can also enable the API using gcloud:```\ngcloud services enable cloudresourcemanager.googleapis.com --project GCP_project_ID\n```\n- In your overrides file, add the`validateServiceAccounts`property and set it to`true`. For example:```\n...# Enables strict validation of service account permissions.validateServiceAccounts: true...\n```\nWhen validation is enabled, any time [apigeectl](/apigee/docs/hybrid/v1.1/cli-reference) applies the Apigee hybrid runtime components to your cluster, it validates the [service account](/apigee/docs/hybrid/v1.1/precog-serviceaccounts) keys that are included in your overrides file.\n**NOTE:** Service account JSON key format validation is always performed. You do not have to take any steps to enable this validation and you cannot disable it.\n## \n Troubleshooting validation errors\n**Deleting and recreating service accounts: ** Note that  reusing the name of a deleted service account may result in unexpected behavior. If  you create a service account and delete it, always recreate it with a different name than  the original SA. For  details, see [ Deleting and recreating service accounts](https://cloud.google.com/iam/docs/service-account-overview#deleting-recreating) .\nIf validation fails, the runtime deployment stops and `apigeectl` exits. To troubleshoot service account failure, it's helpful to know that validation checks permissions in this order:\n- Permission on the project ID.\n- (For UDCA and Synchronizer only) If the permission check on the project fails, validation  proceeds to check permission against the Apigee environment's [IAM policy](/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments/setIamPolicy) . These SAs are  environment scoped and environments support finer-grained permissions.To update the IAM policy for a specific environment, go to the hybrid UI. Go to **Admin > Environments > Access** \nFor example, the following is an error message for a failed permission check:\n```\nInvalid Metrics Service Account. Service Account\n\"apigee-metrics@hybrid-project.iam.gserviceaccount.com\" is missing 1 or more required\npermissions [monitoring.metricDescriptors.create monitoring.metricDescriptors.get monitoring.metricDescriptors.list\nmonitoring.monitoredResourceDescriptors.get monitoring.monitoredResourceDescriptors.list monitoring.timeSeries.create].\nVisit Service accounts and roles used by\nhybrid components for more details on setting up Apigee hybrid service account permissions.\n```\nTo address this error, add the required roles to the service account. For information on creating and modifying service accounts, see [ Create the service accounts](/apigee/docs/hybrid/v1.1/sa-about#create-the-service-accounts) . To check the required permissions for each Apigee hybrid component, see [Service accounts and roles used by hybrid components](/apigee/docs/hybrid/v1.1/sa-about#recommended-sas) .\n## Disable permission validation\nTo disable service account permission validation, set the `validationServiceAccounts` property in your overrides file to `false` , as the following example shows:\n```\n...# Enables strict validation of service account permissions.validateServiceAccounts: false...\n```", "guide": "Apigee"}