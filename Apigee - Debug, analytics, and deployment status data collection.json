{"title": "Apigee - Debug, analytics, and deployment status data collection", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Debug, analytics, and deployment status data collection\nYou are currently viewing version 1.1 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nApigee hybrid makes trace, analytics, and deployment status data available to you. This data is collected by a data collection pod which sends it to the management plane so that you can view and analyze it and set up monitoring and alerts.\n", "content": "## About the data\nAll Message Processor (MP) services in hybrid stream trace (when initiated), analytics, and deployment status data via TCP to a data collection pod in the cluster. The data collection pod stores the streamed data on the pod's file system via a fluentd service.\nThe UDCA (Universal Data Collection Agent) periodically extracts the stored data and sends it to the UAP (Unified Analytics Platform) service in the management plane. The UAP processes the incoming analytics and deployment status data and makes it available to you via the hybrid UI or the [Apigee APIs](/apigee/docs/reference/apis/apigee/rest) .\nApigee hybrid implements the data collection pod as a [ReplicaSet](https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/) with a minimum of two replicas.\nThe following image shows the trace, analytics, and deployment status data collection process:\nNote that the trace, analytics, and deployment status data is not stored in the same location or accessed in the same way as the logging and metrics data:\n- are stored on your GCP Project and  accessed via a tool such as Stackdriver or whatever you choose to  use.\n- , on the other hand, is  stored in the hybrid management plane and you access it via  Apigee services such as the hybrid UI or [Apigee APIs](/apigee/docs/reference/apis/apigee/rest) .\nThe following table summarizes the data collected by the data collection pod:\n| Type of Data  | Dataset\u00a0Name | Description                                                                                            | Update Frequency  | APIs          |\n|:------------------|:---------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------|:-----------------------------------------|\n| Analytics   | api   | API usage data including transactions per second, cache usage, errors, latencies, request/response sizes, and traffic counts. For more information, see Apigee Analytics overview.                                                 | Up to 30 second delay | Analytics admin API      |\n| Deployment\u00a0Status | event   | The current deployment status of the API proxy. For more information about how you can see this information, see View deployment status.                                                            | Immediately   | Deployments API       |\n| Debug    | trace   | Debug session data for API proxies. This data includes the request/response parameters along with transformations applied to them at policy execution time. Because of its size, trace data\u2014unlike analytics and deployment status data\u2014is not collected all the time. Instead, trace data is collected when you initiate a debug session. For more information, see Debug overview. | Immediately   | Debug session API Debug session data API |\n**TIP:** Theis the name by which this type of data is referred to in the UDCA configuration properties. For example, analytics data is configured with the dataset name`api`. As a result, the configuration property that sets the location of the analytics data files is called` **api** ` `DataSubDir`.You can access this data through the Apigee hybrid UI or [Apigee APIs](/apigee/docs/reference/apis/apigee/rest) on the management plane.\n## View the data in the hybrid UI\nThis section describes how to view the trace, analytics, and deployment status data in the Apigee hybrid UI.\n### Debug\nDebug data for hybrid services is accessible in the same way as Edge trace data, with some differences such as increased filter support. For more information, see [Debug overview](/apigee/docs/hybrid/v1.1/trace) .\n### Analytics\nAnalytics data for hybrid services is accessible in the same way as Edge analytics data. For more information, see [Using the analytics dashboards](/apigee/docs/api-platform/analytics/using-analytics-dashboards) in the Edge documentation.\n### Proxy deployment status\nFor information on viewing deployment status, see [View deployment status](/apigee/docs/hybrid/v1.1/ui-deploy-overview#view-deployment-status) .\n## Configure the data collection\nTo set how and where trace, analytics, and deployment status data is collected on the data collection pod, you configure the UDCA service via its configuration properties. The UDCA properties include properties that are general to the UDCA as well as properties that are specific to each dataset.\n**To configure the UDCA:**\n- Open the`overrides.yaml`file for editing on your Kubernetes administration machine, as described in [Manage runtime plane components](/apigee/docs/hybrid/v1.3/customize-services) .\n- Set the values of the UDCA configuration settings. For the UDCA, you can set custom values for  properties such as:- Polling interval\n- Number of replicas (min and max)\n- Target CPU percentage (that triggers additional replicas)\nFor a complete list of UDCA properties that you can customize,  see [udca](/apigee/docs/hybrid/v1.1/config-prop-ref#udca) .\n- Save your changes to the overrides.yaml file.\n- Apply your changes to your cluster by executing the`apigeectl apply`command, as  the following example shows:```\napigeectl apply -f my-overrides.yaml -c udca\n``` **TIP** : To see the default configuration properties, the  UDCA service (under`udca:`) in the [Configuration property reference](/apigee/docs/hybrid/v1.3/config-prop-ref) .For more information about the `apply` command, see [Apply hybrid to your cluster](/apigee/docs/hybrid/v1.1/cli-reference#apply) .", "guide": "Apigee"}