{"title": "Apigee - Migrating to Apigee Ingress gateway", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Migrating to Apigee Ingress gateway\nYou are currently viewing version 1.8 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nUse this procedure to migrate existing Apigee hybrid v1.8 installations from using Anthos Service Mesh for ingress to using Apigee ingress gateway.\n", "content": "## \n Apigee ingress gateway in Apigee hybrid version 1.8\nStarting in version 1.8, Apigee hybrid offers a new feature to manage the ingress gateway for your hybrid installation, . Anthos Service Mesh is no longer a prerequisite for hybrid installation and Apigee will stop supplying routing configuration to Anthos Service Mesh. After the upgrade, you have to migrate the traffic to the new Apigee ingress gateway gateway.\nTwo scenarios for migrating are:\n- **Multi-cluster or multi-region migration** (recommended):Before switching to a new Ingress for Apigee, drain all the traffic to another cluster or  region from the cluster you are migrating. This will give you time to test if the new  Apigee ingress gateway gateway is working as expected. Then shift the traffic back to the upgraded  cluster.\n- **In-place upgrade** (not recommended in production environments):During the upgrade Apigee will bring up the new ingress gateway with a new IP address.  You can then test if the new Apigee ingress gateway gateway is working as expected, and then shift  traffic to the new ingress. There might be downtime during this upgrade.## \n Install Apigee ingress gateway\n- To install Apigee ingress gateway, you need to add the [ingressGateways](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways) property to your overrides file.\n```\ningressGateways:\n- name: INGRESS_NAME\n replicaCountMin: REPLICAS_MIN\n replicaCountMax: REPLICAS_MAX\n resources:\n requests:\n  cpu: CPU_COUNT_REQ\n  memory: MEMORY_REQ\n limits:\n  cpu: CPU_COUNT_LIMIT\n  memory: MEMORY_LIMIT\n svcAnnotations: # optional. See Known issue 243599452.\n SVC_ANNOTATIONS_KEY: SVC_ANNOTATIONS_VALUE\n svcLoadBalancerIP: SVC_LOAD_BALANCER_IP # optional\n``````\ningressGateways:\n- name: prod1\n replicaCountMin: 2\n replicaCountMax: 100\n resources:\n requests:\n  cpu: 1\n  memory: 1Gi\n limits:\n  cpu: 2\n  memory: 2Gi\n svcAnnotations: # optional. See Known issue 243599452.\n networking.gke.io/load-balancer-type: \"Internal\"\n svcLoadBalancerIP: 198.252.0.123 \n```\n- is the name of the ingress deployment. This can be any name  that meets the following requirements:- Have a maximum length of 17 characters\n- Contain only lowercase alphanumeric characters, '-' or '.'\n- Start with an alphanumeric character\n- End with an alphanumeric character\nSee [ingressGateways[].name](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-name) in the  Configuration property reference.\n- andare the minimum and maximum replica counts for  Apigee ingress gateway in your installation. For more information and default settings, see [ingressGateways[].replicaCountMin](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-replicacountmin) and [ingressGateways[].replicaCountMax](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-replicacountmax) in the Configuration property reference.\n- andare the CPU and memory request for each  replica of Apigee ingress gateway in your installation.Set these properties if you have previously set them for your  Anthos Service Mesh ingress gateway, for example in your`overlay.yaml`file.For more information and default settings, see [ingressGateways[].resources.requests.cpu](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-resources-requests-cpu) and [ingressGateways[].resources.requests.memory](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-resources-requests-memory) in the Configuration property reference.\n- andAre the maximum CPU and memory limits for  each replica of Apigee ingress gateway in your installation.Set these properties if you have previously set them for your  Anthos Service Mesh ingress gateway, for example in your`overlay.yaml`file.For more information and default settings, see [ingressGateways[].resources.limits.cpu](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-resources-limits-cpu) and [ingressGateways[].resources.limits.memory](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-resources-limits-memory) in the Configuration property reference.\n- (optional): **Note:** The`ingressGateways[].svcAnnotations`field in`overrides.yaml`is not working as expected. See [Known issue 243599452](/apigee/docs/release/known-issues#243599452) This is a key-value pair that provides  annotations for your default ingress service. Annotations are used by your cloud platform to  help configure your hybrid installation, for example setting the loadbalancer type to  either internal or external. For example:```\ningressGateways:\n svcAnnotations:\n networking.gke.io/load-balancer-type: \"Internal\"\n```Annotations vary from platform to platform. Refer to your platform  documentation for required and suggested annotations. **Note:** You do not need to set`Annotations`if you are creating your own   Kubernetes service for ingress deployment as documented in [Expose Apigee ingress gateway](/apigee/docs/hybrid/v1.8/install-expose-apigee-ingress) .See [ingressGateways[].svcAnnotations](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-svcannotations) in the Configuration property reference.\n- (optional) Allows you to assign a static IP address for your  load balancer. On platforms that support specifying the load balancer IP address, the load  balancer will be created with this IP address. On platforms that do not allow you to specify the  load balancer IP address, this property is ignored.If you do not have a static IP address allocated for your load balancer, leave this property  out of your overrides file. **Caution:** Make sure not to specify the same IP address as the current  istio-ingressgateway. This could cause problems while that service is still on the cluster. **Note:** You do not need to set`LoadBalancerIP`if you are creating your own  Kubernetes service for ingress deployment as documented in [Expose Apigee ingress gateway](/apigee/docs/hybrid/v1.8/install-expose-apigee-ingress) .See [ingressGateways[].svcLoadBalancerIP](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-svcloadbalancerip) in the Configuration property reference.\n- Apply the changes to install Apigee ingress gateway with the following commands:```\n$APIGEECTL_HOME/apigeectl apply -f overrides/overrides.yaml\n```## \n Switch traffic to Apigee ingress gateway\nTo migrate traffic from Anthos Service Mesh to Apigee ingress gateway follow the steps in [Switch traffic from Anthos Service Mesh to Apigee ingress gateway](/apigee/docs/hybrid/v1.8/upgrade#switch-to-ingress) in the Upgrading to Apigee Hybrid v1.8 topic.", "guide": "Apigee"}