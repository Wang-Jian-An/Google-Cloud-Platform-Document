{"title": "Documentation - KRM API object.gdc.goog/v1", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - KRM API object.gdc.goog/v1\n", "content": "## object.gdc.goog/v1\nContains API schema definitions for the Object Storage `v1` API group.\n### Bucket\nDefines the schema for the Buckets API.\n- [BucketList](#bucketlist)\n| Field    | Description             |\n|:--------------------|:--------------------------------------------------------------|\n| apiVersion string | object.gdc.goog/v1           |\n| kind string   | Bucket              |\n| metadata ObjectMeta | Refer to Kubernetes API documentation for fields of metadata. |\n| spec BucketSpec  | nan               |\n| status BucketStatus | nan               |\n### BucketList\nContains a list of Buckets.\n| Field    | Description             |\n|:-------------------|:--------------------------------------------------------------|\n| apiVersion string | object.gdc.goog/v1           |\n| kind string  | BucketList             |\n| metadata ListMeta | Refer to Kubernetes API documentation for fields of metadata. |\n| items Bucket array | nan               |\n### BucketPolicy\nDefines policies of the Bucket.\n- [BucketSpec](#bucketspec)\n| Field       | Description                                                                                       |\n|:--------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| lockingPolicy LockingPolicy  | Policy for object locking. When set, object versioning is enabled and all objects stored in the bucket will be subject to this policy. A locked object cannot be deleted until the lock expires. Can only be enabled when creating the bucket and cannot be disabled afterwards. When not enabled, object locking and versioning are disabled and cannot be enabled. |\n| corsPolicy CorsPolicy   | Policy for custom CORS policy user set on the bucket. CorsPolicy has to be enabled when additional CORS policy is needed on the buckets. Otherwise, the bucket will only have the default UI console CORS policy. CorsPolicy can always be added or modified later after the bucket is created.                  |\n| lifecyclePolicy LifecyclePolicy | Policy for custom lifecycle policy user set on the bucket. LifecyclePolicy can always be added, modified, removed later after the bucket is created.                                                     |\n### BucketSpec\nDefines the desired state of the Bucket Resource.\n- [Bucket](#bucket)\n| Field       | Description                                                                |\n|:--------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| description string    | Description of bucket contents.                                                           |\n| storageClass ObjectStorageClass | Defines how frequently data needs to be accessed. The available option is Standard. Standard is appropriate for hot data that is accessed frequently, such as websites, streaming videos, and mobile apps. It is used for data that can be stored for at least 30 days. |\n| bucketPolicy BucketPolicy  | Defines policies of the bucket resource. If unspecified, default policies are applied.                                             |\n| encryption EncryptionConfig  | Defines the encryption configuration of the bucket resource.                                                   |\n### BucketStatus\nDefines the observed state of the Bucket.\n- [Bucket](#bucket)\n| Field      | Description                                        |\n|:----------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| fullyQualifiedName string | The name of the provisioned bucket. This name is used to refer to the bucket when using external tools and libraries.             |\n| conditions Condition array | Specifies the status of the bucket. Supported conditions include BucketReady. If BucketReady is True, it indicates the bucket has been provisioned and is ready for use. |\n| endpoint string    | The DNS endpoint at which the bucket is reachable.                              |\n| region string    | The region where the bucket is stored.                                 |\n| encryption EncryptionStatus | The status of the encryption on the bucket.                                |\n### CorsPolicy\nDefines the strategy for setting up custom CORS policy on the bucket.\n- [BucketPolicy](#bucketpolicy)\n| Field      | Description                                                    |\n|:--------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| enableCorsPolicy boolean | Defines whether the user wants the custom policy to take effect on the bucket. If yes, the custom policy defined in CorsDetail will be read. Otherwise, CorsDetail would not be used even if it has custom policy set up. |\n| corsDetail CorsRule array | Detail of the custom CORS policy being set.                                            |\n### CorsRule\nDefines the information related with CORS rule.\n- [CorsPolicy](#corspolicy)\n| Field      | Description                  |\n|:----------------------------|:---------------------------------------------------------------------------------|\n| allowedHeaders string array | Headers that are specified in the Access-Control-Request-Headers header.   |\n| allowedMethods string array | HTTP methods that are permitted to be executed by an allowed origin.    |\n| allowedOrigins string array | Origins that can access the bucket.            |\n| exposeHeaders string array | Headers in the response that can be accessed.         |\n| id string     | Unique identifier for the rule. The value can not be longer than 255 characters. |\n### EncryptionConfig\nEncryptionConfig defines the configuration for encryption on the bucket.\n- [BucketSpec](#bucketspec)\n| Field    | Description                                                                                                             |\n|:--------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| type EncryptionType | Defines the type of encryption to be used for the bucket. Available options are: - CMEK - Customer Managed Encryption Key which creates a KMS backed key rooted in the HSM which the customer is billed for. The customer can access these keys and manage them through KMS. - GMEK - GDCH Managed Encryption Key which creates a key with internal KMS. The customer does not have visibility into this key and they do not have the ability to rotate it. |\n### EncryptionStatus\nEncryptionStatus defines the status of the encryption on the bucket.\n- [BucketStatus](#bucketstatus)\n| Field     | Description                                                                                                             |\n|:-----------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| type EncryptionType | Defines the type of encryption to be used for the bucket. Available options are: - CMEK - Customer Managed Encryption Key which creates a KMS backed key rooted in the HSM which the customer is billed for. The customer can access these keys and manage them through KMS. - GMEK - GDCH Managed Encryption Key which creates a key with internal KMS. The customer does not have visibility into this key and they do not have the ability to rotate it. |\n| keyRef ObjectReference | KeyRef references the key which is used as the default key to encrypt objects in the bucket. This is left empty in the case of GMEK since customer does not have insight on the location of the key.                                                              |\n### LifecycleExpiration\n- [LifecycleRule](#lifecyclerule)\n| Field  | Description          |\n|:-------------|:---------------------------------------------------|\n| date Time | Specific date when the objects should be deleted. |\n| days integer | Number of days this object is subject to the rule. |\n### LifecycleNoncurrentExpiration\n- [LifecycleRule](#lifecyclerule)\n| Field     | Description                  |\n|:-----------------------|:--------------------------------------------------------------------------------|\n| noncurrentDays integer | Number of days an object is noncurrent before lifecycle rules takes the action. |\n### LifecyclePolicy\n- [BucketPolicy](#bucketpolicy)\n| Field        | Description                          |\n|:-----------------------------------|:----------------------------------------------------------------------------------------------------------------|\n| enable boolean      | Defines whether the user wants to enable custom lifecycle policy on the bucket.         |\n| lifecycleRules LifecycleRule array | Consists of one or more lifecycle configuration rules that can take expiration action on objects in the bucket. |\n### LifecycleRule\n- [LifecyclePolicy](#lifecyclepolicy)\n| Field            | Description                                         |\n|:---------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| id string           | Unique identifier for the rule. The value cannot be longer than 255 characters.                        |\n| status LifecycleRuleStatus       | Status of the lifecycle rule. Indicate whether this rule takes action. The status can always be changed, and only Enabled rule would take effect.        |\n| expiration LifecycleExpiration      | Expiration behavior for objects in current version. Either Expiration or NoncurrentExpiration, or both should be provided. Rule without expiration behavior would be ignored. |\n| noncurrentExpiration LifecycleNoncurrentExpiration | Expiration behavior for objects noncurrent.                                 |\n| filter LifecycleRuleFilter       | Filter for the rule. Empty filer means the rule apply to all objects in the bucket.                       |\n### LifecycleRuleFilter\nDefines the filter that can be set on lifecycle rule.\n- [LifecycleRule](#lifecyclerule)\n| Field    | Description                       |\n|:---------------------|:-----------------------------------------------------------------------------------------------------|\n| prefixFilter string | Match objects with provided prefix. Empty string of prefix means apply to all objects in the bucket. |\n| tagFilters Tag array | Match objects with provided tags. The tag on object must match both the key and value exactly.  |\n### LockingPolicy\nDefines the strategy for locking the objects of the Bucket.\n- [BucketPolicy](#bucketpolicy)\n| Field        | Description                                                                                                           |\n|:-----------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| defaultObjectRetentionDays integer | Specifies the minimum number of days that each version of every object will be retained. An object cannot be deleted during the retention period. If a bucket contains any object, it cannot be deleted either. When unspecified, no default object retention period is set. Can be modified after creation, however the change will only take effect for new objects and versions. Existing objects and versions will still use the previous value. |\n### Tag\nDefines the tags on object that can be used by lifecycle filter.\n- [LifecycleRuleFilter](#lifecyclerulefilter)\n| Field  | Description |\n|:-------------|--------------:|\n| key string |   nan |\n| value string |   nan |", "guide": "Documentation"}