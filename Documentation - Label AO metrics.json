{"title": "Documentation - Label AO metrics", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Label AO metrics\nLabels let you differentiate the characteristics of a metric. Apart from [collecting metrics](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/collect-metrics) , the `MonitoringTarget` custom resource lets you label metrics for optional observability features such as the following:\n- [Send metrics to another project](#send-metrics-to-another-project) \n- [Add new labels to metrics](#add-new-labels-to-metrics) \n- [Rename a metric](#rename-a-metric) \n**Important:** Every unique combination of key-value label pairs represents a new time series, which can very much increase the amount of data stored. Don't use labels to store dimensions with high cardinality (many different label values), such as user IDs, email addresses, or other unbounded sets of values.\nFor more information on metrics relabeling, see [https://grafana.com/blog/2022/03/21/how-relabeling-in-prometheus-works/](https://grafana.com/blog/2022/03/21/how-relabeling-in-prometheus-works/)\n", "content": "## Send metrics to another project\nContainer authors can write in their code that the system must send specific metrics to another project for system monitoring, even if the project corresponds to a different GDCH persona. To send metrics to a specific project, add the `_gdch_project` label to a metric in your code. Set its value to the name of the project you want to own that particular observability metric. For example, `\"_gdch_project\": \"another-project-name\"` .\nAlternatively, use the `MonitoringTarget` custom resource to send all the metric data it collects to another project for data observability. To do so, set the `_gdch_project` label as a target label in the `metricsRelabelings` field and establish a replacement value.\nThe following code sample shows how to replace the `_gdch_project` label value with `another-project-name` in the `MonitoringTarget` custom resource:\n```\napiVersion: monitoring.gdc.goog/v1kind: MonitoringTargetmetadata:\u00a0 # Choose the same namespace as the workload pods\u00a0 namespace: PROJECT_NAMESPACE\u00a0 name: stringspec:\u00a0 ...\u00a0 podMetricsEndpoints:\u00a0 \u00a0 ...\u00a0 \u00a0 metricsRelabelings:\u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0 - action: replace\u00a0 \u00a0 \u00a0 \u00a0 targetLabel: _gdch_project\u00a0 \u00a0 \u00a0 \u00a0 replacement: another-project-name\n```\nReplace with the namespace of your project.\n## Add new labels to metrics\nLabels are useful for data observability and system monitoring because they let you identify different characteristics of a metric. You can add new labels to metrics that the scrapped containers don't initially expose. In the `MonitoringTarget` custom resource, set the new label as a target and establish a replacement to serve as the value of the label. The system adds the new key-value pair to all metrics the custom resource collects for your data observability purposes.\nThe following code sample shows how to add the `my_new_label` label and set its value to `my_label_value` in the `MonitoringTarget` custom resource:\n```\napiVersion: monitoring.gdc.goog/v1kind: MonitoringTargetmetadata:\u00a0 # Choose the same namespace as the workload pods\u00a0 namespace: PROJECT_NAMESPACE\u00a0 name: stringspec:\u00a0 ...\u00a0 podMetricsEndpoints:\u00a0 \u00a0 ...\u00a0 \u00a0 metricsRelabelings:\u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0 - action: replace\u00a0 \u00a0 \u00a0 \u00a0 targetLabel: my_new_label\u00a0 \u00a0 \u00a0 \u00a0 replacement: my_label_value\n```\nReplace with the namespace of your project.\n## Rename a metric\nYou can entirely rename a metric a container produces from the `MonitoringTarget` custom resource. Set the original name of the metric and its replacement in the `metricsRelabelings` field. The custom resource takes the original metric name as a regular expression and replaces it with the new name you added.\nThe following code sample shows how to replace the `cpu_usage` metric name with `cpu_usage_new_name` in the `MonitoringTarget` custom resource:\n```\napiVersion: monitoring.gdc.goog/v1kind: MonitoringTargetmetadata:\u00a0 # Choose the same namespace as the workload pods\u00a0 namespace: PROJECT_NAMESPACE\u00a0 name: stringspec:\u00a0 ...\u00a0 podMetricsEndpoints:\u00a0 \u00a0 ...\u00a0 \u00a0 metricsRelabelings:\u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0 - action: replace\u00a0 \u00a0 \u00a0 \u00a0 regex: cpu_usage\u00a0 \u00a0 \u00a0 \u00a0 replacement: cpu_usage_new_name\u00a0 \u00a0 \u00a0 \u00a0 sourceLabels: [__name__]\u00a0 \u00a0 \u00a0 \u00a0 targetLabel: __name__\n```\nReplace with the namespace of your project.", "guide": "Documentation"}