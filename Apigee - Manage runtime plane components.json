{"title": "Apigee - Manage runtime plane components", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Manage runtime plane components\nYou are currently viewing version 1.1 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis topic explains how to configure and manage the Apigee hybrid [runtime plane components](/apigee/docs/hybrid/v1.1/what-is-hybrid#about-the-runtime-plane) . For a list of the runtime plane components that you can configure, see [Runtime service configuration overview](/apigee/docs/hybrid/v1.1/service-config) .\n", "content": "## \n About the overrides file\nThe first time you install the hybrid runtime into a cluster, you must create a configuration . This file lets you override default configuration values as needed, configure environments, reference TLS certificates and service account keys, assign Kubernetes node pools to specific hybrid components, and so on.\nThe hybrid [installation steps](/apigee/docs/hybrid/v1.1/install-before-begin) walk through the process of creating an overrides file and applying your configuration to a cluster. If you want to change the configuration later, modify the overrides file you created and re-apply it.\n## Making a configuration change\nTo make a configuration change to a hybrid runtime plane component, edit your overrides file and apply the changes with [apigeectl](/apigee/docs/hybrid/v1.3/cli-reference) .\nFor example, to change the replica count on the [Message processor](/apigee/docs/hybrid/v1.1/service-config) , follow these steps:\n- Open your  overrides YAML file. Be sure to use the same overrides file that was used to install the hybrid runtime into the cluster.\n- Locate the`runtime`element in the file. For example:```\n...runtime:\u00a0 nodeSelector:\u00a0 \u00a0 key: cloud.google.com/gke-nodepool\u00a0 \u00a0 value: apigee-runtime\u00a0 replicaCountMin: 1\u00a0 replicaCountMax: 2...\n```\n- Change the replica count properties as needed. For example:```\n...runtime:\u00a0 nodeSelector:\u00a0 \u00a0 key: cloud.google.com/gke-nodepool\u00a0 \u00a0 value: apigee-runtime\u00a0 replicaCountMin: 2\u00a0 replicaCountMax: 4...\n```\n- Use [apigeectl](/apigee/docs/hybrid/v1.3/cli-reference) to apply the change to the cluster:```\napigeectl apply -f ./my_overrides.yaml -c runtime\n```Use the`-c`option when you want to restrict the cluster  update to one component.  If you omit the`-c`flag,`apigeectl`applies all of the changes  changes it finds in the overrides file. If that's what you want, then omit the`-c`flag when applying. If not, use`-c`to specify a component  to update.  See also [ Apply the configuration for a single component](/apigee/docs/hybrid/v1.1/cli-reference#apply-the-configuration-for-a-single-component) .## \n Which configuration properties can you modify?\nYou can find the complete list of configurable properties in the [Configuration property reference](/apigee/docs/hybrid/v1.1/config-prop-ref) . The reference only lists the properties you can modify; if you try to modify a property that's not in the reference, the change is ignored.\n## \n How to use the configuration reference\nThe [Configuration property reference](/apigee/docs/hybrid/v1.1/config-prop-ref) uses dot notation to describe configuration elements, where the first item is the top-level element name followed by properties and child properties. For example:\n```\nauthz.image.pullPolicy\n```\nIn the overrides file, the property are formatted in proper YAML. For the above example, the top-level `authz` element is left-indented and sub-element properties are indented under it. Also, YAML requires a colon at the end of each element and sub-element.\nFor example, to set the `authz.image.pullPolicy` property to `Always` , locate this YAML stanza in the overrides file and set it:\n```\nauthz:\n image:\n pullPolicy: Always\n```\nFor another example, the property `cassandra.auth.admin.password` (as it  is listed in the Configuration property reference) is used to set the Cassandra  admin password. To change it, locate the following YAML in the overrides file and set  it:\n```\ncassandra:\n auth:\n admin:\n  password: abc123\n```\nRemember, the [Configuration property reference](/apigee/docs/hybrid/v1.1/config-prop-ref) describes all of the properties that you can set on hybrid runtime plane components. Follow the pattern explained above to modify these elements in your overrides file before applying the changes to your cluster.\n## \n Using pre-defined example overrides files\nWhen you first install hybrid runtime, Apigee recommends that you use one of the [pre-configured example overrides files](#) . These examples provide a complete set of configuration properties for specific installation scenarios, such as for setting up a production or test installation. All you need to do is provide appropriate values for the properties and [apply the overrides file](/apigee/docs/hybrid/v1.1/install-hybrid) to your cluster. See [Create an overrides file](/apigee/docs/hybrid/v1.1/install-overrides) for more information.\nRemember that when getting started, it's a good idea to use one of the [overrides file examples](#using-pre-defined-example-override-files) . The examples provide all of the configuration settings you need to set up a working cluster, including comments that explain which values you need to provide. After things are working, you can always go back later and [make config changes](#making-a-configuration-change) as needed.\n## \n About configuration defaults\nApigee maintains its default component configuration in the file `` `/config/values.yaml` . Your overrides file(s) follows the same YAML structure as `values.yaml` .\nAn overrides file typically includes only a subset of the configuration properties found in `values.yaml` . Remember, [not all properties are editable](#which-configuration-properties-can-you-modify) . When you apply a configuration to a cluster, your overrides are merged with the defaults to create the complete Kubernetes cluster configuration. See also [Output the merged configuration](#output-the-merged-configuration) .\nThe following code shows the default configuration for the `mart` component as found in `values.yaml` . Note that some values have defaults, while others such as `sslCertPath` and `sslKeyPath` do not. You must provide these missing values in your overrides file, as explained in the [installation steps](/apigee/docs/hybrid/v1.1/install-before-begin) . If you want to change any of the default values, make sure they are editable by checking in the [Configuration property reference](/apigee/docs/hybrid/v1.1/config-prop-ref) .\n```\n...mart:\u00a0 replicaCountMin: 2\u00a0 replicaCountMax: 4\u00a0 targetCPUUtilizationPercentage: 75\u00a0 terminationGracePeriodSeconds: 30\u00a0 sslCertPath:\u00a0 sslKeyPath:\u00a0 hostAlias:\u00a0 nodeSelector:\u00a0 \u00a0 key:\u00a0 \u00a0 value:\u00a0 revision: blue\u00a0 image:\u00a0 \u00a0 url: \"google/apigee-mart-server\"\u00a0 \u00a0 tag: \"1.0.0\"\u00a0 \u00a0 pullPolicy: IfNotPresent\u00a0 resources:\u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 cpu: 500m\u00a0 \u00a0 \u00a0 memory: 512Mi\u00a0 initCheckCF:\u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 cpu: 10m\u00a0 livenessProbe:\u00a0 \u00a0 timeoutSeconds: 1\u00a0 \u00a0 failureThreshold: 12\u00a0 \u00a0 periodSeconds: 5\u00a0 \u00a0 initialDelaySeconds: 15\u00a0 readinessProbe:\u00a0 \u00a0 timeoutSeconds: 1\u00a0 \u00a0 successThreshold: 1\u00a0 \u00a0 failureThreshold: 2\u00a0 \u00a0 periodSeconds: 5\u00a0 \u00a0 initialDelaySeconds: 15\u00a0 metricsURL: \"/v1/server/metrics\"\u00a0 cwcAppend: |...\n```\nIf you want to modify a component's defaults and the component is  not already in your overrides file, you can copy its YAML from `values.yaml` into your  overrides file and modify it there.\nNever edit`values.yaml`directly; always use an overrides file to specify your configuration properties.\n## Sample overrides files\nApigee provides a set of sample overrides files to help guide you in setting up your hybrid deployment. It's a good practice to copy and modify the overrides file that most closely matches your installation requirements.\nThe following samples are included in the directory `` `/examples` :\n| Sample overrides files | Description                                                                                       |\n|:-------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| overrides-small.yaml  | This sample is ideal for a getting started quickly. It uses the minimum recommended footprint to start the hybrid runtime components. This sample configuration relies as much as possible on default settings and values. All the minimum replicas are set 1.                          |\n| overrides-medium.yaml | This sample is a good starting point for testing and QA environments. Individual components have been granted a higher level of resources to deal with additional traffic. Cassandra uses SSD disks for performance. In this environment, it is recommended that users install stateful and stateless components on separate nodes. See Configure dedicated nodes. |\n| overrides-large.yaml  | This sample is a good starting point for high performance environments such as pre-production and production. The sample includes properties for setting encryption keys, passwords, and others. Individual components have a minimum of two replicas.                            |\n## \n Output the merged configuration\n`--dry-run`\n`apigeectl`\nFor example:\n```\napigeectl apply -f ./my_overrides.yaml --dry-run --print-yaml > apigee-hybrid.yaml\n```\n**CAUTION:** Be aware that the configuration output contains password and secret information.\nFor more information, see [apigeectl](/apigee/docs/hybrid/v1.3/cli-reference) .\n## \n Create multiple overrides files as needed\nYou can create as many overrides files as you want, where each one serves a specific requirement. For example, you might have an overrides file that tunes your cluster for production, and another for creating a testing cluster. You can then maintain these files in your source control system.\nUse the `-f` option with `apigeectl` to specify the location and name of an overrides file. For example:\n```\napigeectl apply -f ./test_env_override.yaml\n```\nFor more information, see [apigeectl](/apigee/docs/hybrid/v1.3/cli-reference) .\n## Delete hybrid-specific runtime plane components\nTo delete the hybrid-specific runtime plane components from your cluster, use the `apigeectl delete` command. These components include synchronizer, mart, runtime, cassandra, and udca. Be sure to specify the same overrides file that you used to install the runtime components:\nFor example:\n```\napigeectl delete -f ./my_overrides.yaml\n```\nYou can use the `apigeectl apply` command to recreate a specific component or components:\n```\napigeectl apply -c synchronizer -f ./my_overrides.yaml\n```\nFor more information, see [apigeectl](/apigee/docs/hybrid/v1.3/cli-reference) .\n## Delete a specific component\nIf you only want to delete a specific component, use the `-c` option with `apigeectl delete` Be sure to specify the same overrides file you used to install the runtime components.\nFor example, to delete the Synchronizer component, use this command:\n```\napigeectl delete -c synchronizer -f ./my_overrides.yaml\n```\nYou can then use the `apigeectl apply` command to recreate the component:\n```\napigeectl apply -c synchronizer -f ./my_overrides.yaml\n```\nFor more information, see [apigeectl](/apigee/docs/hybrid/v1.3/cli-reference) .\n## Delete all components\nTo delete all of your cluster components hybrid, including those created by the `apigeectl init` command, use the `apigeectl delete` command with the `--all` flag. Be sure to specify the same overrides file that you used to install the runtime components:\nFor example:\n```\napigeectl delete -f ./my_overrides.yaml --all\n```\nFor more information, see [apigeectl](/apigee/docs/hybrid/v1.3/cli-reference) .", "guide": "Apigee"}