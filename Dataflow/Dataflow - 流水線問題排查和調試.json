{"title": "Dataflow - \u6d41\u6c34\u7dda\u554f\u984c\u6392\u67e5\u548c\u8abf\u8a66", "url": "https://cloud.google.com/dataflow/docs/guides/troubleshooting-your-pipeline?hl=zh-cn", "abstract": "# Dataflow - \u6d41\u6c34\u7dda\u554f\u984c\u6392\u67e5\u548c\u8abf\u8a66\n\u672c\u9801\u9762\u4ecb\u7d39\u4e86\u554f\u984c\u6392\u67e5\u6280\u5de7\u548c\u8abf\u8a66\u7b56\u7565\uff0c\u5982\u679c\u60a8\u5728\u69cb\u5efa\u6216\u904b\u884c Dataflow \u6d41\u6c34\u7dda\u6642\u9047\u5230\u554f\u984c\uff0c\u9019\u4e9b\u6280\u5de7\u548c\u7b56\u7565\u53ef\u80fd\u6703\u6d3e\u4e0a\u7528\u5834\u3002\u672c\u6587\u7684\u5167\u5bb9\u53ef\u4ee5\u5e6b\u52a9\u60a8\u6aa2\u6e2c\u6d41\u6c34\u7dda\u6545\u969c\uff0c\u78ba\u5b9a\u6d41\u6c34\u7dda\u904b\u884c\u5931\u6557\u7684\u539f\u56e0\uff0c\u4e26\u63a8\u85a6\u4e86\u4e00\u4e9b\u53ef\u7528\u4f86\u7cfe\u6b63\u554f\u984c\u7684\u64cd\u4f5c\u6d41\u7a0b\u3002\n\u4e0b\u5716\u5c55\u793a\u4e86\u672c\u9801\u9762\u4ecb\u7d39\u7684 Dataflow \u554f\u984c\u6392\u67e5\u5de5\u4f5c\u6d41\u3002\nDataflow \u6703\u63d0\u4f9b\u8207\u60a8\u7684\u4f5c\u696d\u6709\u95dc\u7684\u5be6\u6642\u53cd\u994b\u548c\u4e00\u7d44\u57fa\u672c\u6b65\u9a5f\uff0c\u53ef\u4f9b\u60a8\u7528\u4f86\u6aa2\u67e5\u932f\u8aa4\u6d88\u606f\u3001\u65e5\u8a8c\u548c\u4f5c\u696d\u9032\u5ea6\u505c\u6eef\u7b49\u60c5\u6cc1\u3002\n\u5982\u9700\u7372\u53d6\u6709\u95dc\u904b\u884c Dataflow \u4f5c\u696d\u6642\u53ef\u80fd\u9047\u5230\u7684\u5e38\u898b\u932f\u8aa4\u7684\u6307\u5357\uff0c\u8acb\u53c3\u95b1 [\u6392\u67e5 Dataflow \u932f\u8aa4](https://cloud.google.com/dataflow/docs/guides/common-errors?hl=zh-cn) \u3002\u5982\u9700\u76e3\u63a7\u6d41\u6c34\u7dda\u6027\u80fd\u4e26\u6392\u67e5\u554f\u984c\uff0c\u8acb\u53c3\u95b1 [\u76e3\u63a7\u6d41\u6c34\u7dda\u6027\u80fd](https://cloud.google.com/dataflow/docs/guides/profiling-a-pipeline?hl=zh-cn) \u3002\n", "content": "## \u6d41\u6c34\u7dda\u7684\u6700\u4f73\u5be6\u8e10\n\u4ee5\u4e0b\u662f Java\u3001Python \u548c Go \u6d41\u6c34\u7dda\u7684\u6700\u4f73\u5be6\u8e10\u3002\n- \u5c0d\u65bc\u6279\u91cf\u4f5c\u696d\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u7232\u81e8\u6642\u4f4d\u7f6e\u8a2d\u7f6e [\u5b58\u7559\u6642\u9593 (TTL)](https://cloud.google.com/storage/docs/lifecycle?hl=zh-cn) \u3002\n- \u5728\u8a2d\u7f6e TTL \u4e4b\u524d\uff0c\u6700\u597d\u78ba\u4fdd\u5c07\u66ab\u5b58\u4f4d\u7f6e\u548c\u81e8\u6642\u4f4d\u7f6e\u8a2d\u7f6e\u7232\u4e0d\u540c\u7684 [\u4f4d\u7f6e](https://cloud.google.com/dataflow/docs/guides/setting-pipeline-options?hl=zh-cn#setting_required_options) \u3002\n- \u4e0d\u8981\u522a\u9664\u66ab\u5b58\u4f4d\u7f6e\u4e2d\u7684\u5c0d\u8c61\uff0c\u56e0\u7232\u9019\u4e9b\u5c0d\u8c61\u5c07\u88ab\u91cd\u8907\u4f7f\u7528\u3002\n- \u5982\u679c\u4f5c\u696d\u5b8c\u6210\u6216\u505c\u6b62\u4e26\u4e14\u81e8\u6642\u5c0d\u8c61\u6c92\u6709\u88ab\u6e05\u7406\uff0c\u8acb\u5f9e\u7528\u4f5c\u81e8\u6642\u4f4d\u7f6e\u7684 Cloud Storage \u5b58\u5132\u6876\u4e2d\u624b\u52d5\u79fb\u9664\u9019\u4e9b\u6587\u4ef6\u3002\n\u81e8\u6642\u4f4d\u7f6e\u548c\u66ab\u5b58\u4f4d\u7f6e\u7684\u524d\u7db4\u7232 `<job_name>.<time>` \u3002- \u78ba\u4fdd\u60a8\u5c07\u66ab\u5b58\u4f4d\u7f6e\u548c\u81e8\u6642\u4f4d\u7f6e\u8a2d\u7f6e\u7232\u4e0d\u540c\u7684 [\u4f4d\u7f6e](https://cloud.google.com/dataflow/docs/guides/setting-pipeline-options?hl=zh-cn#setting_required_options) \u3002\n- \u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u5728\u4f5c\u696d\u5b8c\u6210\u6216\u505c\u6b62\u5f8c\u522a\u9664\u66ab\u5b58\u4f4d\u7f6e\u4e2d\u7684\u5c0d\u8c61\u3002\u6b64\u5916\uff0c\u66ab\u5b58\u5c0d\u8c61\u4e0d\u6703\u5728 Python \u6d41\u6c34\u7dda\u4e2d\u91cd\u8907\u4f7f\u7528\u3002\n- \u5982\u679c\u4f5c\u696d\u7d50\u675f\u4e26\u4e14\u81e8\u6642\u5c0d\u8c61\u6c92\u6709\u88ab\u6e05\u7406\uff0c\u8acb\u5f9e\u7528\u4f5c\u81e8\u6642\u4f4d\u7f6e\u7684 Cloud Storage \u5b58\u5132\u6876\u4e2d\u624b\u52d5\u79fb\u9664\u9019\u4e9b\u6587\u4ef6\u3002\n- \u5c0d\u65bc\u6279\u8655\u7406\u4f5c\u696d\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u7232\u81e8\u6642\u548c\u66ab\u5b58\u4f4d\u7f6e\u8a2d\u7f6e [\u5b58\u7559\u6642\u9593 (TTL)](https://cloud.google.com/storage/docs/lifecycle?hl=zh-cn) \u3002\n- \u81e8\u6642\u4f4d\u7f6e\u548c\u66ab\u5b58\u4f4d\u7f6e\u7684\u524d\u7db4\u7232 `<job_name>.<time>` \u3002\n- \u78ba\u4fdd\u60a8\u5c07\u66ab\u5b58\u4f4d\u7f6e\u548c\u81e8\u6642\u4f4d\u7f6e\u8a2d\u7f6e\u7232\u4e0d\u540c\u7684 [\u4f4d\u7f6e](https://cloud.google.com/dataflow/docs/guides/setting-pipeline-options?hl=zh-cn#setting_required_options) \u3002\n- \u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u5728\u4f5c\u696d\u5b8c\u6210\u6216\u505c\u6b62\u5f8c\u522a\u9664\u66ab\u5b58\u4f4d\u7f6e\u4e2d\u7684\u5c0d\u8c61\u3002\u6b64\u5916\uff0c\u66ab\u5b58\u5c0d\u8c61\u4e0d\u6703\u5728 Go \u6d41\u6c34\u7dda\u4e2d\u91cd\u8907\u4f7f\u7528\u3002\n- \u5982\u679c\u4f5c\u696d\u7d50\u675f\u4e26\u4e14\u81e8\u6642\u5c0d\u8c61\u6c92\u6709\u88ab\u6e05\u7406\uff0c\u8acb\u5f9e\u7528\u4f5c\u81e8\u6642\u4f4d\u7f6e\u7684 Cloud Storage \u5b58\u5132\u6876\u4e2d\u624b\u52d5\u79fb\u9664\u9019\u4e9b\u6587\u4ef6\u3002\n- \u5c0d\u65bc\u6279\u8655\u7406\u4f5c\u696d\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u7232\u81e8\u6642\u548c\u66ab\u5b58\u4f4d\u7f6e\u8a2d\u7f6e [\u5b58\u7559\u6642\u9593 (TTL)](https://cloud.google.com/storage/docs/lifecycle?hl=zh-cn) \u3002## \u6aa2\u67e5\u6d41\u6c34\u7dda\u72c0\u614b\n\u60a8\u53ef\u4ee5\u4f7f\u7528 [Dataflow \u76e3\u63a7\u754c\u9762](https://cloud.google.com/dataflow/pipelines/dataflow-monitoring-intf?hl=zh-cn) \u6aa2\u6e2c\u6d41\u6c34\u7dda\u904b\u884c\u4e2d\u7684\u4efb\u4f55\u932f\u8aa4\u3002\n- \u524d\u5f80 [Google Cloud Console](https://console.cloud.google.com/?hl=zh-cn) \u3002\n- \u5f9e\u9805\u76ee\u5217\u8868\u4e2d\u9078\u64c7\u60a8\u7684 Google Cloud \u9805\u76ee\u3002\n- \u5728\u5c0e\u822a\u83dc\u55ae\u7684 **\u5927\u6578\u64da** \u4e0b\uff0c\u9ede\u64ca **Dataflow** \u3002 \u53f3\u5074\u7a97\u683c\u4e2d\u5c07\u986f\u793a\u6b63\u5728\u904b\u884c\u7684\u4f5c\u696d\u7684\u5217\u8868\u3002\n- \u9078\u64c7\u8981\u67e5\u770b\u7684\u6d41\u6c34\u7dda\u4f5c\u696d\u3002\u60a8\u53ef\u4ee5\u5728 **\u72c0\u614b** \u5b57\u6bb5\u4e2d\u5feb\u901f\u67e5\u770b\u4f5c\u696d\u72c0\u614b\uff1a\u201c\u6b63\u5728\u904b\u884c\u201d\u3001\u201c\u6210\u529f\u201d\u6216\u201c\u5931\u6557\u201d\u3002\n## \u67e5\u627e\u6709\u95dc\u6d41\u6c34\u7dda\u6545\u969c\u7684\u4fe1\u606f\n\u5982\u679c\u5176\u4e2d\u4e00\u500b\u6d41\u6c34\u7dda\u4f5c\u696d\u5931\u6557\uff0c\u60a8\u53ef\u4ee5\u9078\u64c7\u4f5c\u696d\u4ee5\u67e5\u770b\u6709\u95dc\u932f\u8aa4\u548c\u904b\u884c\u7d50\u679c\u7684\u8a73\u7d30\u4fe1\u606f\u3002\u9078\u64c7\u4f5c\u696d\u5f8c\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u6d41\u6c34\u7dda\u7684\u95dc\u9375\u5716\u8868\u3001\u57f7\u884c\u5716\u3001 **\u4f5c\u696d\u4fe1\u606f** \u9762\u677f\u4ee5\u53ca\u5177\u6709 **\u4f5c\u696d\u65e5\u8a8c** \u3001 **\u5de5\u4f5c\u5668\u65e5\u8a8c** \u3001 **\u8a3a\u65b7** \u548c **\u5efa\u8b70** \u6a19\u7c64\u9801\u7684 **\u65e5\u8a8c** \u9762\u677f\u3002\n### \u67e5\u770b\u4f5c\u696d\u932f\u8aa4\u6d88\u606f\n\u8981\u67e5\u770b\u7531\u6d41\u6c34\u7dda\u4ee3\u78bc\u548c Dataflow \u670d\u52d9\u751f\u6210\u7684 **\u4f5c\u696d\u65e5\u8a8c** \uff0c\u8acb\u5728 **\u65e5\u8a8c** \u9762\u677f\u4e2d\u9ede\u64ca **\u986f\u793a** \u3002\n\u60a8\u53ef\u4ee5\u901a\u904e\u9ede\u64ca **\u4fe1\u606f** \u548c **\u904e\u6ffe** \u4f86\u904e\u6ffe **\u4f5c\u696d\u65e5\u8a8c** \u4e2d\u986f\u793a\u7684\u6d88\u606f\u3002\u5982\u9700\u50c5\u986f\u793a\u932f\u8aa4\u6d88\u606f\uff0c\u8acb\u9ede\u64ca **\u4fe1\u606f** \uff0c\u7136\u5f8c\u9078\u64c7 **\u932f\u8aa4** \u3002\n\u5982\u9700\u5c55\u958b\u932f\u8aa4\u6d88\u606f\uff0c\u8acb\u9ede\u64ca\u53ef\u5c55\u958b\u90e8\u5206 \u3002\n\u6216\u8005\uff0c\u60a8\u4e5f\u53ef\u4ee5\u9ede\u64ca [\u8a3a\u65b7](https://cloud.google.com/dataflow/docs/guides/monitoring-overview?hl=zh-cn#diagnostics) \u6a19\u7c64\u9801\u3002\u6b64\u6a19\u7c64\u9801\u6703\u986f\u793a\u6cbf\u6240\u9078\u6642\u9593\u8ef8\u767c\u751f\u7684\u932f\u8aa4\u3001\u6240\u6709\u5df2\u8a18\u9304\u932f\u8aa4\u7684\u6578\u91cf\u4ee5\u53ca\u95dc\u65bc\u6d41\u6c34\u7dda\u7684\u53ef\u80fd\u5efa\u8b70\u3002### \u67e5\u770b\u4f5c\u696d\u7684\u6b65\u9a5f\u65e5\u8a8c\n\u5728\u6d41\u6c34\u7dda\u5716\u4e2d\u9078\u64c7\u6b65\u9a5f\u6642\uff0c\u65e5\u8a8c\u9762\u677f\u5c07\u4e0d\u518d\u986f\u793a Dataflow \u670d\u52d9\u751f\u6210\u7684 **\u4f5c\u696d\u65e5\u8a8c** \uff0c\u800c\u662f\u6539\u7232\u986f\u793a\u904b\u884c\u6d41\u6c34\u7dda\u6b65\u9a5f\u7684 Compute Engine \u5be6\u4f8b\u4e2d\u7684\u65e5\u8a8c\u3002\n[Cloud Logging](https://cloud.google.com/logging?hl=zh-cn) \u6703\u5c07\u5f9e\u9805\u76ee\u7684 Compute Engine \u5be6\u4f8b\u4e2d\u6536\u96c6\u7684\u6240\u6709\u65e5\u8a8c\u5408\u4f75\u5230\u4e00\u500b\u4f4d\u7f6e\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u4f7f\u7528 Dataflow \u7684\u5404\u7a2e\u65e5\u8a8c\u8a18\u9304\u529f\u80fd\uff0c\u8acb\u53c3\u95b1 [\u65e5\u8a8c\u8a18\u9304\u6d41\u6c34\u7dda\u6d88\u606f](https://cloud.google.com/dataflow/pipelines/logging?hl=zh-cn) \u3002\n## \u8655\u7406\u81ea\u52d5\u62d2\u7d55\u6d41\u6c34\u7dda\u64cd\u4f5c\n\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0cDataflow \u670d\u52d9\u6703\u8b58\u5225\u51fa\u60a8\u7684\u6d41\u6c34\u7dda\u53ef\u80fd\u89f8\u767c\u5df2\u77e5\u7684 SDK [\u554f\u984c](https://cloud.google.com/dataflow/docs/resources/release-notes-service?hl=zh-cn) \u3002\u7232\u4e86\u963b\u6b62\u63d0\u4ea4\u53ef\u80fd\u9047\u5230\u554f\u984c\u7684\u6d41\u6c34\u7dda\uff0cDataflow \u6703\u81ea\u52d5\u62d2\u7d55\u60a8\u7684\u6d41\u6c34\u7dda\u4e26\u986f\u793a\u4ee5\u4e0b\u6d88\u606f\uff1a\n```\nThe workflow was automatically rejected by the service because it might trigger an\nidentified bug in the SDK (details below). If you think this identification is\nin error, and would like to override this automated rejection, please re-submit\nthis workflow with the following override flag: [OVERRIDE FLAG].\nBug details: [BUG DETAILS].\nContact Google Cloud Support for further help.\nPlease use this identifier in your communication: [BUG ID].\n```\n\u5728\u95b1\u8b80\u93c8\u63a5\u7684\u932f\u8aa4\u8a73\u60c5\u4e2d\u7684\u8b66\u544a\u5f8c\uff0c\u5982\u679c\u60a8\u4ecd\u7136\u60f3\u5617\u8a66\u904b\u884c\u6d41\u6c34\u7dda\uff0c\u5247\u53ef\u4ee5\u66ff\u63db\u81ea\u52d5\u62d2\u7d55\u64cd\u4f5c\u3002\u6dfb\u52a0 `--experiments=<override-flag>` \u6a19\u8a8c\uff0c\u7136\u5f8c\u91cd\u65b0\u63d0\u4ea4\u60a8\u7684\u6d41\u6c34\u7dda\u3002\n## \u78ba\u5b9a\u6d41\u6c34\u7dda\u5931\u6557\u7684\u539f\u56e0\n\u901a\u5e38\uff0c\u5931\u6557\u7684 Apache Beam \u6d41\u6c34\u7dda\u904b\u884c\u53ef\u6b78\u56e0\u65bc\u4ee5\u4e0b\u539f\u56e0\u4e4b\u4e00\uff1a\n- **\u5716\u8868\u6216\u6d41\u6c34\u7dda\u69cb\u9020\u932f\u8aa4** \u3002\u5982\u679c Dataflow \u6309\u7167 Apache Beam \u6d41\u6c34\u7dda\u7684\u63cf\u8ff0\uff0c\u5728\u69cb\u5efa\u7528\u65bc\u7d44\u6210\u6d41\u6c34\u7dda\u7684\u6b65\u9a5f\u5716\u6642\u9047\u5230\u554f\u984c\uff0c\u5c31\u6703\u767c\u751f\u9019\u4e9b\u932f\u8aa4\u3002\n- **\u4f5c\u696d\u9a57\u8b49\u932f\u8aa4** \u3002Dataflow \u670d\u52d9\u6703\u9a57\u8b49\u60a8\u5553\u52d5\u7684\u4efb\u4f55\u6d41\u6c34\u7dda\u4f5c\u696d\u3002\u9a57\u8b49\u904e\u7a0b\u4e2d\u767c\u73fe\u7684\u932f\u8aa4\u53ef\u80fd\u6703\u963b\u6b62\u60a8\u6210\u529f\u5275\u5efa\u6216\u57f7\u884c\u4f5c\u696d\u3002\u9a57\u8b49\u932f\u8aa4\u53ef\u80fd\u5305\u62ec Google Cloud \u9805\u76ee\u7684 Cloud Storage \u5b58\u5132\u5206\u5340\u554f\u984c\uff0c\u4e5f\u53ef\u80fd\u5305\u62ec\u9805\u76ee\u7684\u6b0a\u9650\u554f\u984c\u3002\n- **\u5de5\u4f5c\u5668\u4ee3\u78bc\u7570\u5e38** \u3002\u5982\u679c\u7528\u6236\u63d0\u4f9b\u7684\u4ee3\u78bc\u4e2d\u5b58\u5728\u932f\u8aa4\uff0c\u4e14 Dataflow \u5c07\u8a72\u4ee3\u78bc\u5206\u767c\u7d66\u4e26\u884c\u5de5\u4f5c\u5668\uff08\u4f8b\u5982`ParDo`\u8f49\u63db\u7684`DoFn`\u5be6\u4f8b\uff09\uff0c\u5c31\u6703\u767c\u751f\u9019\u4e9b\u932f\u8aa4\u3002\n- **\u5176\u4ed6 Google Cloud \u670d\u52d9\u4e2d\u7684\u66ab\u6642\u6027\u6545\u969c\u5c0e\u81f4\u7684\u932f\u8aa4** \u3002\u5982\u679c Dataflow \u6240\u4f9d\u8cf4\u7684 Google Cloud \u670d\u52d9\uff08\u4f8b\u5982 Compute Engine \u6216 Cloud Storage\uff09\u51fa\u73fe\u81e8\u6642\u4e2d\u65b7\u6216\u5176\u4ed6\u554f\u984c\uff0c\u60a8\u7684\u6d41\u6c34\u7dda\u53ef\u80fd\u6703\u56e0\u6b64\u800c\u5931\u6557\u3002\n### \u6aa2\u6e2c\u5716\u8868\u6216\u6d41\u6c34\u7dda\u69cb\u9020\u932f\u8aa4\n\u7576 Dataflow \u5f9e\u60a8\u7684 Dataflow \u7a0b\u5e8f\u4e2d\u7684\u4ee3\u78bc\u69cb\u5efa\u6d41\u6c34\u7dda\u7684\u57f7\u884c\u5716\u8868\u6642\uff0c\u53ef\u80fd\u6703\u767c\u751f\u5716\u8868\u69cb\u9020\u932f\u8aa4\u3002\u5728\u69cb\u5efa\u5716\u8868\u671f\u9593\uff0cDataflow \u6703\u6aa2\u67e5\u975e\u6cd5\u64cd\u4f5c\u3002\n\u8acb\u6ce8\u610f\uff0c\u5982\u679c Dataflow \u5728\u5716\u8868\u69cb\u9020\u671f\u9593\u6aa2\u6e2c\u5230\u932f\u8aa4\uff0c\u7cfb\u7d71 **\u5c07\u4e0d\u6703\u5728 Dataflow \u670d\u52d9\u4e0a\u5275\u5efa\u4efb\u4f55\u4f5c\u696d** \u3002\u56e0\u6b64\uff0c\u60a8\u4e0d\u6703\u5728 Dataflow \u76e3\u63a7\u754c\u9762\u4e2d\u770b\u5230\u4efb\u4f55\u53cd\u994b\u3002 \u904b\u884c Apache Beam \u6d41\u6c34\u7dda\u7684\u63a7\u5236\u6aaf\u6216\u7d42\u7aef\u7a97\u53e3\u4e2d\u6703\u986f\u793a\u5982\u4e0b\u932f\u8aa4\u6d88\u606f\uff1a\n\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u6d41\u6c34\u7dda\u5617\u8a66\u5c0d\u4e00\u500b\u5168\u5c40\u7a97\u53e3\u5316\u3001\u975e\u89f8\u767c\u3001\u7121\u754c\u9650\u7684 `PCollection` \u57f7\u884c `GroupByKey` \u7b49\u805a\u5408\u64cd\u4f5c\uff0c\u5247\u7cfb\u7d71\u6703\u986f\u793a\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\u7684\u932f\u8aa4\u6d88\u606f\uff1a\n```\n...\n... Exception in thread \"main\" java.lang.IllegalStateException:\n... GroupByKey cannot be applied to non-bounded PCollection in the GlobalWindow without a trigger.\n... Use a Window.into or Window.triggering transform prior to GroupByKey\n...\n```\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u6d41\u6c34\u7dda\u4f7f\u7528 [\u985e\u578b\u63d0\u793a](https://beam.apache.org/documentation/sdks/python-type-safety/) \u4e26\u4e14\u5176\u4e2d\u4e00\u9805\u8f49\u63db\u4e2d\u7684\u53c3\u6578\u985e\u578b\u4e0d\u7b26\u5408\u9810\u671f\uff0c\u5247\u7cfb\u7d71\u6703\u986f\u793a\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\u7684\u932f\u8aa4\u6d88\u606f\uff1a\n```\n... in <module> run()\n... in run | beam.Map('count', lambda (word, ones): (word, sum(ones))))\n... in __or__ return self.pipeline.apply(ptransform, self)\n... in apply transform.type_check_inputs(pvalueish)\n... in type_check_inputs self.type_check_inputs_or_outputs(pvalueish, 'input')\n... in type_check_inputs_or_outputs pvalue_.element_type))\ngoogle.cloud.dataflow.typehints.decorators.TypeCheckError: Input type hint violation at group: expected Tuple[TypeVariable[K], TypeVariable[V]], got <type 'str'>\n```\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u6d41\u6c34\u7dda\u4f7f\u7528\u4e0d\u63a5\u53d7\u4efb\u4f55\u8f38\u5165\u7684\u201cDoFn\u201d\uff0c\u5247\u6703\u51fa\u73fe\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\u7684\u932f\u8aa4\u6d88\u606f\uff1a\n```\n... panic: Method ProcessElement in DoFn main.extractFn is missing all inputs. A main input is required.\n... Full error:\n...  inserting ParDo in scope root/CountWords\n...  graph.AsDoFn: for Fn named main.extractFn\n... ProcessElement method has no main inputs\n... goroutine 1 [running]:\n... github.com/apache/beam/sdks/v2/go/pkg/beam.MustN(...)\n... (more stacktrace)\n```\n\u5982\u679c\u60a8\u9047\u5230\u6b64\u985e\u932f\u8aa4\uff0c\u8acb\u6aa2\u67e5\u6d41\u6c34\u7dda\u4ee3\u78bc\uff0c\u4ee5\u78ba\u4fdd\u60a8\u7684\u6d41\u6c34\u7dda\u64cd\u4f5c\u662f\u6b63\u78ba\u7684\u3002\n### \u6aa2\u6e2c Dataflow \u4f5c\u696d\u9a57\u8b49\u4e2d\u7684\u932f\u8aa4\n\u4e00\u65e6 Dataflow \u670d\u52d9\u6536\u5230\u60a8\u7684\u6d41\u6c34\u7dda\u5716\u8868\uff0c\u5c31\u6703\u5617\u8a66\u9a57\u8b49\u60a8\u7684\u4f5c\u696d\u3002\u6b64\u9a57\u8b49\u5305\u62ec\u4ee5\u4e0b\u5167\u5bb9\uff1a\n- \u78ba\u4fdd\u8a72\u670d\u52d9\u53ef\u4ee5\u8a2a\u554f\u4f5c\u696d\u7684\u76f8\u95dc Cloud Storage \u5b58\u5132\u5206\u5340\uff0c\u4ee5\u57f7\u884c\u6587\u4ef6\u66ab\u5b58\u548c\u81e8\u6642\u8f38\u51fa\u3002\n- \u5728 Google Cloud \u9805\u76ee\u4e2d\u6aa2\u67e5\u6240\u9700\u7684\u6b0a\u9650\u3002\n- \u78ba\u4fdd\u8a72\u670d\u52d9\u53ef\u4ee5\u8a2a\u554f\u8f38\u5165\u548c\u8f38\u51fa\u4f86\u6e90\uff08\u5982\u6587\u4ef6\uff09\u3002\n\u5982\u679c\u60a8\u7684\u4f5c\u696d\u672a\u901a\u904e\u9a57\u8b49\uff0cDataflow \u76e3\u63a7\u754c\u9762\u4ee5\u53ca\u60a8\u7684\u63a7\u5236\u6aaf\u6216\u7d42\u7aef\u7a97\u53e3\u4e2d\u5c07\u986f\u793a\u932f\u8aa4\u6d88\u606f\uff08\u524d\u63d0\u662f\u60a8\u4f7f\u7528\u4e86\u201c\u963b\u6b62\u57f7\u884c\u201d\u529f\u80fd\uff09\u3002\u932f\u8aa4\u6d88\u606f\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5f62\u5f0f\uff1a\n```\nINFO: To access the Dataflow monitoring console, please navigate to\n https://console.developers.google.com/project/google.com%3Aclouddfe/dataflow/job/2016-03-08_18_59_25-16868399470801620798\nSubmitted job: 2016-03-08_18_59_25-16868399470801620798\n...\n... Starting 3 workers...\n... Executing operation BigQuery-Read+AnonymousParDo+BigQuery-Write\n... Executing BigQuery import job \"dataflow_job_16868399470801619475\".\n... Stopping worker pool...\n... Workflow failed. Causes: ...BigQuery-Read+AnonymousParDo+BigQuery-Write failed.\nCauses: ... BigQuery getting table \"non_existent_table\" from dataset \"cws_demo\" in project \"my_project\" failed.\nMessage: Not found: Table x:cws_demo.non_existent_table HTTP Code: 404\n... Worker pool stopped.\n... com.google.cloud.dataflow.sdk.runners.BlockingDataflowPipelineRunner run\nINFO: Job finished with status FAILED\nException in thread \"main\" com.google.cloud.dataflow.sdk.runners.DataflowJobExecutionException:\n Job 2016-03-08_18_59_25-16868399470801620798 failed with status FAILED\n at com.google.cloud.dataflow.sdk.runners.DataflowRunner.run(DataflowRunner.java:155)\n at com.google.cloud.dataflow.sdk.runners.DataflowRunner.run(DataflowRunner.java:56)\n at com.google.cloud.dataflow.sdk.Pipeline.run(Pipeline.java:180)\n at com.google.cloud.dataflow.integration.BigQueryCopyTableExample.main(BigQueryCopyTableExample.java:74)\n``````\nINFO:root:Created job with id: [2016-03-08_14_12_01-2117248033993412477]\n... Checking required Cloud APIs are enabled.\n... Job 2016-03-08_14_12_01-2117248033993412477 is in state JOB_STATE_RUNNING.\n... Combiner lifting skipped for step group: GroupByKey not followed by a combiner.\n... Expanding GroupByKey operations into optimizable parts.\n... Lifting ValueCombiningMappingFns into MergeBucketsMappingFns\n... Annotating graph with Autotuner information.\n... Fusing adjacent ParDo, Read, Write, and Flatten operations\n... Fusing consumer split into read\n...\n... Starting 1 workers...\n...\n... Executing operation read+split+pair_with_one+group/Reify+group/Write\n... Executing failure step failure14\n... Workflow failed.\nCauses: ... read+split+pair_with_one+group/Reify+group/Write failed.\nCauses: ... Unable to view metadata for files: gs://dataflow-samples/shakespeare/missing.txt.\n... Cleaning up.\n... Tearing down pending resources...\nINFO:root:Job 2016-03-08_14_12_01-2117248033993412477 is in state JOB_STATE_FAILED.\n```Go \u76ee\u524d\u4e0d\u652f\u6301\u672c\u90e8\u5206\u4e2d\u4ecb\u7d39\u7684\u4f5c\u696d\u9a57\u8b49\u3002\u56e0\u9019\u4e9b\u554f\u984c\u800c\u5f15\u767c\u7684\u932f\u8aa4\u6703\u986f\u793a\u7232\u5de5\u4f5c\u5668\u7570\u5e38\u3002\n### \u6aa2\u6e2c\u5de5\u4f5c\u5668\u4ee3\u78bc\u7570\u5e38\n\u7576\u60a8\u7684\u4f5c\u696d\u904b\u884c\u6642\uff0c\u60a8\u53ef\u80fd\u6703\u9047\u5230\u5de5\u4f5c\u5668\u4ee3\u78bc\u932f\u8aa4\u6216\u7570\u5e38\u3002\u9019\u4e9b\u932f\u8aa4\u901a\u5e38\u8868\u793a\u6d41\u6c34\u7dda\u4ee3\u78bc\u4e2d\u7684 `DoFn` \u7522\u751f\u4e86\u672a\u8655\u7406\u7684\u7570\u5e38\uff0c\u9019\u7a2e\u7570\u5e38\u6703\u5c0e\u81f4 Dataflow \u4f5c\u696d\u4e2d\u7684\u4efb\u52d9\u5931\u6557\u3002\n[Dataflow \u76e3\u63a7\u754c\u9762](https://cloud.google.com/dataflow/pipelines/dataflow-monitoring-intf?hl=zh-cn) \u6703\u5831\u544a\u7528\u6236\u4ee3\u78bc\uff08\u4f8b\u5982 `DoFn` \u5be6\u4f8b\uff09\u4e2d\u7684\u7570\u5e38\u3002\u5982\u679c\u60a8\u4f7f\u7528\u201c\u963b\u6b62\u57f7\u884c\u201d\u529f\u80fd\u904b\u884c\u6d41\u6c34\u7dda\uff0c\u5247\u7cfb\u7d71\u6703\u5728\u63a7\u5236\u6aaf\u6216\u7d42\u7aef\u7a97\u53e3\u4e2d\u8f38\u51fa\u932f\u8aa4\u6d88\u606f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n```\nINFO: To access the Dataflow monitoring console, please navigate to https://console.developers.google.com/project/example_project/dataflow/job/2017-05-23_14_02_46-1117850763061203461\nSubmitted job: 2017-05-23_14_02_46-1117850763061203461\n...\n... To cancel the job using the 'gcloud' tool, run: gcloud beta dataflow jobs --project=example_project cancel 2017-05-23_14_02_46-1117850763061203461\n... Autoscaling is enabled for job 2017-05-23_14_02_46-1117850763061203461.\n... The number of workers will be between 1 and 15.\n... Autoscaling was automatically enabled for job 2017-05-23_14_02_46-1117850763061203461.\n...\n... Executing operation BigQueryIO.Write/BatchLoads/Create/Read(CreateSource)+BigQueryIO.Write/BatchLoads/GetTempFilePrefix+BigQueryIO.Write/BatchLoads/TempFilePrefixView/BatchViewOverrides.GroupByWindowHashAsKeyAndWindowAsSortKey/ParDo(UseWindowHashAsKeyAndWindowAsSortKey)+BigQueryIO.Write/BatchLoads/TempFilePrefixView/Combine.GloballyAsSingletonView/Combine.globally(Singleton)/WithKeys/AddKeys/Map/ParMultiDo(Anonymous)+BigQueryIO.Write/BatchLoads/TempFilePrefixView/Combine.GloballyAsSingletonView/Combine.globally(Singleton)/Combine.perKey(Singleton)/GroupByKey/Reify+BigQueryIO.Write/BatchLoads/TempFilePrefixView/Combine.GloballyAsSingletonView/Combine.globally(Singleton)/Combine.perKey(Singleton)/GroupByKey/Write+BigQueryIO.Write/BatchLoads/TempFilePrefixView/BatchViewOverrides.GroupByWindowHashAsKeyAndWindowAsSortKey/BatchViewOverrides.GroupByKeyAndSortValuesOnly/Write\n... Workers have started successfully.\n...\n... org.apache.beam.runners.dataflow.util.MonitoringUtil$LoggingHandler process SEVERE: 2017-05-23T21:06:33.711Z: (c14bab21d699a182): java.lang.RuntimeException: org.apache.beam.sdk.util.UserCodeException: java.lang.ArithmeticException: / by zero\n  at com.google.cloud.dataflow.worker.runners.worker.GroupAlsoByWindowsParDoFn$1.output(GroupAlsoByWindowsParDoFn.java:146)\n  at com.google.cloud.dataflow.worker.runners.worker.GroupAlsoByWindowFnRunner$1.outputWindowedValue(GroupAlsoByWindowFnRunner.java:104)\n  at com.google.cloud.dataflow.worker.util.BatchGroupAlsoByWindowAndCombineFn.closeWindow(BatchGroupAlsoByWindowAndCombineFn.java:191)\n...\n... Cleaning up.\n... Stopping worker pool...\n... Worker pool stopped.\n```\n **\u6ce8\u610f** \uff1aDataflow \u670d\u52d9\u5728\u6279\u8655\u7406\u6a21\u5f0f\u4e0b\u91cd\u8a66\u5931\u6557\u4efb\u52d9\u7684\u6b21\u6578\u6700\u591a\u7232 4 \u6b21\uff0c\u5728\u6d41\u8655\u7406\u6a21\u5f0f\u4e0b\u91cd\u8a66\u6b21\u6578\u5247\u4e0d\u53d7\u9650\u5236\u3002\u5728\u6279\u8655\u7406\u6a21\u5f0f\u4e0b\uff0c\u4f5c\u696d\u6703\u5931\u6557\uff1b\u5728\u6d41\u8655\u7406\u6a21\u5f0f\u4e0b\uff0c\u4f5c\u696d\u53ef\u80fd\u6703\u7121\u9650\u671f\u5730\u505c\u6eef\u3002\n```\nINFO:root:Job 2016-03-08_14_21_32-8974754969325215880 is in state JOB_STATE_RUNNING.\n...\nINFO:root:... Expanding GroupByKey operations into optimizable parts.\nINFO:root:... Lifting ValueCombiningMappingFns into MergeBucketsMappingFns\nINFO:root:... Annotating graph with Autotuner information.\nINFO:root:... Fusing adjacent ParDo, Read, Write, and Flatten operations\n...\nINFO:root:...: Starting 1 workers...\nINFO:root:...: Executing operation group/Create\nINFO:root:...: Value \"group/Session\" materialized.\nINFO:root:...: Executing operation read+split+pair_with_one+group/Reify+group/Write\nINFO:root:Job 2016-03-08_14_21_32-8974754969325215880 is in state JOB_STATE_RUNNING.\nINFO:root:...: ...: Workers have started successfully.\nINFO:root:Job 2016-03-08_14_21_32-8974754969325215880 is in state JOB_STATE_RUNNING.\nINFO:root:...: Traceback (most recent call last):\n File \".../dataflow_worker/batchworker.py\", line 384, in do_work self.current_executor.execute(work_item.map_task)\n ...\n File \".../apache_beam/examples/wordcount.runfiles/py/apache_beam/examples/wordcount.py\", line 73, in <lambda>\nValueError: invalid literal for int() with base 10: 'www'\n```\n **\u6ce8\u610f** \uff1aDataflow \u670d\u52d9\u5728\u6279\u8655\u7406\u6a21\u5f0f\u4e0b\u91cd\u8a66\u5931\u6557\u4efb\u52d9\u7684\u6b21\u6578\u6700\u591a\u7232 4 \u6b21\uff0c\u5728\u6d41\u8655\u7406\u6a21\u5f0f\u4e0b\u91cd\u8a66\u6b21\u6578\u5247\u4e0d\u53d7\u9650\u5236\u3002\u5728\u6279\u8655\u7406\u6a21\u5f0f\u4e0b\uff0c\u4f5c\u696d\u6703\u5931\u6557\uff1b\u5728\u6d41\u8655\u7406\u6a21\u5f0f\u4e0b\uff0c\u4f5c\u696d\u53ef\u80fd\u6703\u7121\u9650\u671f\u5730\u505c\u6eef\u3002\n```\n... 2022-05-26T18:32:52.752315397Zprocess bundle failed for instruction\n...  process_bundle-4031463614776698457-2 using plan s02-6 : while executing\n...  Process for Plan[s02-6] failed: Oh no! This is an error message!\n```\n **\u6ce8\u610f** \uff1aDataflow \u670d\u52d9\u5728\u6279\u8655\u7406\u6a21\u5f0f\u4e0b\u91cd\u8a66\u5931\u6557\u4efb\u52d9\u7684\u6b21\u6578\u6700\u591a\u7232 4 \u6b21\uff0c\u5728\u6d41\u8655\u7406\u6a21\u5f0f\u4e0b\u91cd\u8a66\u6b21\u6578\u5247\u4e0d\u53d7\u9650\u5236\u3002\u5728\u6279\u8655\u7406\u6a21\u5f0f\u4e0b\uff0c\u4f5c\u696d\u6703\u5931\u6557\uff1b\u5728\u6d41\u8655\u7406\u6a21\u5f0f\u4e0b\uff0c\u4f5c\u696d\u53ef\u80fd\u6703\u7121\u9650\u671f\u5730\u505c\u6eef\u3002\n\u8003\u616e\u901a\u904e\u6dfb\u52a0\u7570\u5e38\u8655\u7406\u7a0b\u5e8f\u4f86\u9632\u6b62\u4ee3\u78bc\u4e2d\u7684\u932f\u8aa4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u56e0\u7232\u67d0\u4e9b\u5143\u7d20\u672a\u80fd\u901a\u904e\u5728 `ParDo` \u4e2d\u57f7\u884c\u7684\u4e00\u4e9b\u81ea\u5b9a\u7fa9\u8f38\u5165\u9a57\u8b49\u800c\u8981\u6368\u68c4\u5b83\u5011\uff0c\u8acb\u8655\u7406 `DoFn` \u4e2d\u7684\u7570\u5e38\u4e26\u522a\u9664\u9019\u4e9b\u5143\u7d20\u3002\n\u60a8\u9084\u53ef\u4ee5\u901a\u904e\u5e7e\u7a2e\u4e0d\u540c\u7684\u65b9\u5f0f\u8ddf\u8e64\u5931\u6557\u7684\u5143\u7d20\uff1a\n- \u60a8\u53ef\u4ee5\u4f7f\u7528 Cloud Logging [\u8a18\u9304](https://cloud.google.com/dataflow/pipelines/logging?hl=zh-cn) \u5931\u6557\u7684\u5143\u7d20\u4e26\u6aa2\u67e5\u8f38\u51fa\u3002\n- \u60a8\u53ef\u4ee5\u6309\u7167 [\u67e5\u770b\u65e5\u8a8c](https://cloud.google.com/dataflow/docs/guides/logging?hl=zh-cn#viewing_logs) \u4e2d\u7684\u8aaa\u660e\u6aa2\u67e5 Dataflow \u5de5\u4f5c\u5668\u548c\u5de5\u4f5c\u5668\u5553\u52d5\u65e5\u8a8c\u4e2d\u7684\u8b66\u544a\u6216\u932f\u8aa4\u3002\n- \u60a8\u53ef\u4ee5\u8b93`ParDo`\u5c07\u5931\u6557\u7684\u5143\u7d20\u5beb\u5165 [\u5176\u4ed6\u8f38\u51fa](https://beam.apache.org/documentation/programming-guide/#additional-outputs) \u4e2d\uff0c\u4ee5\u4f9b\u5f8c\u7e8c\u6aa2\u67e5\u4f7f\u7528\u3002\n\u5982\u9700\u8ddf\u8e64\u6b63\u5728\u57f7\u884c\u7684\u6d41\u6c34\u7dda\u7684\u5c6c\u6027\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 `Metrics` \u985e\uff0c\u5982\u4ee5\u4e0b\u793a\u4f8b\u6240\u793a\uff1a\n```\nfinal Counter counter = Metrics.counter(\"stats\", \"even-items\");PCollection<Integer> input = pipeline.apply(...);...input.apply(ParDo.of(new DoFn<Integer, Integer>() {\u00a0 @ProcessElement\u00a0 public void processElement(ProcessContext c) {\u00a0 \u00a0 if (c.element() % 2 == 0) {\u00a0 \u00a0 \u00a0 counter.inc();\u00a0 \u00a0 }});\n``````\nclass FilterTextFn(beam.DoFn):\u00a0 \u00a0 \u00a0 \"\"\"A DoFn that filters for a specific key based on a regex.\"\"\"\u00a0 \u00a0 \u00a0 def __init__(self, pattern):\u00a0 \u00a0 \u00a0 \u00a0 self.pattern = pattern\u00a0 \u00a0 \u00a0 \u00a0 # A custom metric can track values in your pipeline as it runs. Create\u00a0 \u00a0 \u00a0 \u00a0 # custom metrics to count unmatched words, and know the distribution of\u00a0 \u00a0 \u00a0 \u00a0 # word lengths in the input PCollection.\u00a0 \u00a0 \u00a0 \u00a0 self.word_len_dist = Metrics.distribution(self.__class__,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'word_len_dist')\u00a0 \u00a0 \u00a0 \u00a0 self.unmatched_words = Metrics.counter(self.__class__,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0'unmatched_words')\u00a0 \u00a0 \u00a0 def process(self, element):\u00a0 \u00a0 \u00a0 \u00a0 word = element\u00a0 \u00a0 \u00a0 \u00a0 self.word_len_dist.update(len(word))\u00a0 \u00a0 \u00a0 \u00a0 if re.match(self.pattern, word):\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 yield element\u00a0 \u00a0 \u00a0 \u00a0 else:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 self.unmatched_words.inc()\u00a0 \u00a0 filtered_words = (\u00a0 \u00a0 \u00a0 \u00a0 words | 'FilterText' >> beam.ParDo(FilterTextFn('s.*')))\n``````\nfunc addMetricDoFnToPipeline(s beam.Scope, input beam.PCollection) beam.PCollection {\u00a0 \u00a0 return beam.ParDo(s, &MyMetricsDoFn{}, input)}func executePipelineAndGetMetrics(ctx context.Context, p *beam.Pipeline) (metrics.QueryResults, error) {\u00a0 \u00a0 pr, err := beam.Run(ctx, runner, p)\u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 return metrics.QueryResults{}, err\u00a0 \u00a0 }\u00a0 \u00a0 // Request the metric called \"counter1\" in namespace called \"namespace\"\u00a0 \u00a0 ms := pr.Metrics().Query(func(r beam.MetricResult) bool {\u00a0 \u00a0 \u00a0 \u00a0 return r.Namespace() == \"namespace\" && r.Name() == \"counter1\"\u00a0 \u00a0 })\u00a0 \u00a0 // Print the metric value - there should be only one line because there is\u00a0 \u00a0 // only one metric called \"counter1\" in the namespace called \"namespace\"\u00a0 \u00a0 for _, c := range ms.Counters() {\u00a0 \u00a0 \u00a0 \u00a0 fmt.Println(c.Namespace(), \"-\", c.Name(), \":\", c.Committed)\u00a0 \u00a0 }\u00a0 \u00a0 return ms, nil}type MyMetricsDoFn struct {\u00a0 \u00a0 counter beam.Counter}func init() {\u00a0 \u00a0 beam.RegisterType(reflect.TypeOf((*MyMetricsDoFn)(nil)))}func (fn *MyMetricsDoFn) Setup() {\u00a0 \u00a0 // While metrics can be defined in package scope or dynamically\u00a0 \u00a0 // it's most efficient to include them in the DoFn.\u00a0 \u00a0 fn.counter = beam.NewCounter(\"namespace\", \"counter1\")}func (fn *MyMetricsDoFn) ProcessElement(ctx context.Context, v beam.V, emit func(beam.V)) {\u00a0 \u00a0 // count the elements\u00a0 \u00a0 fn.counter.Inc(ctx, 1)\u00a0 \u00a0 emit(v)}\n```\n## \u5c0d\u6d41\u6c34\u7dda\u904b\u884c\u7de9\u6162\u6216\u7f3a\u5c11\u8f38\u51fa\u7b49\u9032\u884c\u554f\u984c\u6392\u67e5\n\u8acb\u53c3\u95b1 [\u6392\u67e5\u904b\u884c\u7de9\u6162\u548c\u5361\u4f4f\u7684\u4f5c\u696d\u554f\u984c](https://cloud.google.com/dataflow/docs/guides/troubleshoot-slow-jobs?hl=zh-cn) \u3002\n## \u5e38\u898b\u932f\u8aa4\u548c\u64cd\u4f5c\u6d41\u7a0b\n\u5982\u679c\u60a8\u77e5\u9053\u5c0e\u81f4\u6d41\u6c34\u7dda\u5931\u6557\u7684\u932f\u8aa4\uff0c\u8acb\u53c3\u95b1 [\u6392\u67e5 Dataflow \u932f\u8aa4](https://cloud.google.com/dataflow/docs/guides/common-errors?hl=zh-cn) \u9801\u9762\uff0c\u4ee5\u77ad\u89e3\u932f\u8aa4\u6392\u67e5\u6307\u5357\u3002", "guide": "Dataflow"}