{"title": "Dataflow - \u958b\u767c\u548c\u6e2c\u8a66 Dataflow \u6d41\u6c34\u7dda", "url": "https://cloud.google.com/dataflow/docs/guides/develop-and-test-pipelines?hl=zh-cn", "abstract": "# Dataflow - \u958b\u767c\u548c\u6e2c\u8a66 Dataflow \u6d41\u6c34\u7dda\n\u672c\u9801\u9762\u4ecb\u7d39\u4e86\u958b\u767c\u548c\u6e2c\u8a66 Dataflow \u6d41\u6c34\u7dda\u7684\u6700\u4f73\u5be6\u8e10\u3002\n**\u6ce8\u610f** \uff1a\u672c\u9801\u9762\u4e2d\u7684 Apache Beam \u793a\u4f8b\u4f7f\u7528 Java\u3002\n", "content": "## \u6982\u89bd\n\u6d41\u6c34\u7dda\u4ee3\u78bc\u7684\u5be6\u73fe\u65b9\u5f0f\u6703\u5c0d\u6d41\u6c34\u7dda\u5728\u751f\u7522\u74b0\u5883\u4e2d\u7684\u8868\u73fe\u7522\u751f\u91cd\u5927\u5f71\u97ff\u3002\u7232\u4e86\u5e6b\u52a9\u60a8\u5275\u5efa\u6b63\u5e38\u904b\u884c\u4e14\u9ad8\u6548\u5de5\u4f5c\u7684\u6d41\u6c34\u7dda\u4ee3\u78bc\uff0c\u672c\u6587\u6a94\u4ecb\u7d39\u4e86\u4ee5\u4e0b\u5167\u5bb9\uff1a\n- \u6d41\u6c34\u7dda\u904b\u884c\u7a0b\u5e8f\u5728\u958b\u767c\u548c\u90e8\u7f72\u7684\u4e0d\u540c\u968e\u6bb5\u652f\u6301\u4ee3\u78bc\u57f7\u884c\u3002\n- \u90e8\u7f72\u74b0\u5883\u53ef\u8b93\u60a8\u5728\u958b\u767c\u3001\u6e2c\u8a66\u3001\u9810\u751f\u7522\u548c\u751f\u7522\u904e\u7a0b\u4e2d\u904b\u884c\u6d41\u6c34\u7dda\u3002\n- \u60a8\u53ef\u4ee5\u6309\u539f\u6a23\u4f7f\u7528\u958b\u653e\u6e90\u4ee3\u78bc\u6d41\u6c34\u7dda\u4ee3\u78bc\u548c\u6a21\u677f\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f5c\u65b0\u6d41\u6c34\u7dda\u7684\u57fa\u790e\u4ee3\u78bc\uff0c\u5f9e\u800c\u52a0\u5feb\u4ee3\u78bc\u958b\u767c\u901f\u5ea6\u3002\n- \u958b\u767c\u6d41\u6c34\u7dda\u7684\u7de8\u78bc\u6700\u4f73\u505a\u6cd5\u662f\u63d0\u9ad8\u6d41\u6c34\u7dda\u53ef\u89c0\u6e2c\u6027\u548c\u6027\u80fd\u3002\u5176\u4e2d\u8a31\u591a\u505a\u6cd5\u90fd\u9069\u7528\u65bc\u4f7f\u7528 Apache Beam SDK \u9032\u884c\u7de8\u7a0b\uff08\u9019\u4e9b\u793a\u4f8b\u4f7f\u7528 Java\uff09\uff0c\u4e26\u975e\u7279\u5b9a\u65bc Dataflow\u3002\u4f46\u5728\u5f88\u591a\u60c5\u6cc1\u4e0b\uff0cDataflow \u63d0\u4f9b\u7684\u529f\u80fd\u53ef\u7c21\u5316\u9019\u4e9b\u7de8\u78bc\u505a\u6cd5\uff0c\u4ee5\u63d0\u9ad8\u751f\u7522\u5c31\u7dd2\u6027\u3002\n- \u6e2c\u8a66\u6d41\u6c34\u7dda\u4ee3\u78bc\u7684\u6700\u4f73\u505a\u6cd5\u3002\u9996\u5148\uff0c\u672c\u6587\u6a94\u7c21\u8981\u4ecb\u7d39\u4e86\u5404\u7a2e\u6e2c\u8a66\u985e\u578b\uff08\u4f8b\u5982\u55ae\u5143\u6e2c\u8a66\u3001\u96c6\u6210\u6e2c\u8a66\u548c\u7aef\u5230\u7aef\u6e2c\u8a66\uff09\u7684\u7bc4\u570d\u548c\u95dc\u4fc2\u3002\u5176\u6b21\uff0c\u8a73\u7d30\u77ad\u89e3\u6bcf\u7a2e\u6e2c\u8a66\uff0c\u5305\u62ec\u7528\u65bc\u5275\u5efa\u548c\u96c6\u6210\u6e2c\u8a66\u6578\u64da\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca\u6bcf\u500b\u6e2c\u8a66\u8981\u4f7f\u7528\u7684\u6d41\u6c34\u7dda\u904b\u884c\u7a0b\u5e8f\u3002## \u6d41\u6c34\u7dda\u904b\u884c\u7a0b\u5e8f\n\u5728\u958b\u767c\u548c\u6e2c\u8a66\u671f\u9593\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684 Apache Beam \u904b\u884c\u7a0b\u5e8f\u4f86\u904b\u884c\u6d41\u6c34\u7dda\u4ee3\u78bc\u3002Apache Beam SDK \u63d0\u4f9b\u7528\u65bc\u672c\u5730\u958b\u767c\u548c\u6e2c\u8a66\u7684 [\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f](https://beam.apache.org/documentation/runners/direct/) \u3002\u60a8\u7684\u7248\u672c\u81ea\u52d5\u5316\u5de5\u5177\u4e5f\u53ef\u4ee5\u4f7f\u7528 Direct Runner \u9032\u884c\u55ae\u5143\u6e2c\u8a66\u548c\u96c6\u6210\u6e2c\u8a66\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728 [\u6301\u7e8c\u96c6\u6210 (CI)](https://cloud.google.com/dataflow/docs/guides/pipeline-workflows?hl=zh-cn#continuous-integration) \u6d41\u6c34\u7dda\u4e2d\u4f7f\u7528 Direct Runner\u3002\n\u90e8\u7f72\u5230 Dataflow \u7684\u6d41\u6c34\u7dda\u4f7f\u7528 [Dataflow \u904b\u884c\u7a0b\u5e8f](https://beam.apache.org/documentation/runners/dataflow/) \uff0c\u4e26\u5728\u751f\u7522\u74b0\u5883\u4e2d\u904b\u884c\u6d41\u6c34\u7dda\u3002\u6b64\u5916\uff0c\u60a8\u9084\u53ef\u4f7f\u7528 Dataflow Runner \u9032\u884c\u81e8\u6642\u958b\u767c\u6e2c\u8a66\u4ee5\u53ca\u9032\u884c\u7aef\u5230\u7aef\u6d41\u6c34\u7dda\u6e2c\u8a66\u3002\n\u96d6\u7136\u672c\u9801\u9762\u91cd\u9ede\u4ecb\u7d39\u5982\u4f55\u904b\u884c\u4f7f\u7528 Apache Beam Java SDK \u69cb\u5efa\u7684\u6d41\u6c34\u7dda\uff0c\u4f46 Dataflow \u9084\u652f\u6301\u4f7f\u7528 Python \u548c Go \u958b\u767c\u7684 Apache Beam \u6d41\u6c34\u7dda\u3002Apache Beam Java\u3001Python \u548c Go SDK \u5df2\u91dd\u5c0d Dataflow [\u6b63\u5f0f\u767c\u4f48](https://beam.apache.org/documentation/runners/dataflow/) \u3002SQL \u958b\u767c\u8005\u9084\u53ef\u4ee5\u4f7f\u7528 [Apache Beam SQL](https://beam.apache.org/documentation/dsls/sql/overview/) \u4f86\u5275\u5efa\u4f7f\u7528\u719f\u6089\u7684 SQL \u65b9\u8a00\u7684\u6d41\u6c34\u7dda\u3002\n## \u8a2d\u7f6e\u90e8\u7f72\u74b0\u5883\n\u8981\u5728\u4e0d\u540c\u7684\u958b\u767c\u968e\u6bb5\u4e2d\u5206\u9694\u7528\u6236\u3001\u6578\u64da\u3001\u4ee3\u78bc\u548c\u5176\u4ed6\u8cc7\u6e90\uff0c\u8acb\u5275\u5efa\u90e8\u7f72\u74b0\u5883\u3002\u5982\u679c\u53ef\u80fd\uff0c\u8981\u7232\u6d41\u6c34\u7dda\u958b\u767c\u7684\u4e0d\u540c\u968e\u6bb5\u63d0\u4f9b\u9694\u96e2\u74b0\u5883\uff0c\u8acb\u4f7f\u7528\u55ae\u7368\u7684 [Google Cloud \u9805\u76ee](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn) \u3002\n\u4ee5\u4e0b\u90e8\u5206\u4ecb\u7d39\u4e86\u4e00\u7d44\u5178\u578b\u7684\u90e8\u7f72\u74b0\u5883\u3002\n### \u672c\u5730\u74b0\u5883\n\u672c\u5730\u74b0\u5883\u662f\u958b\u767c\u8005\u7684\u5de5\u4f5c\u7ad9\u3002\u5728\u958b\u767c\u548c\u5feb\u901f\u6e2c\u8a66\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Direct Runner \u5728\u672c\u5730\u904b\u884c\u6d41\u6c34\u7dda\u4ee3\u78bc\u3002\n\u4f7f\u7528 Direct Runner \u5728\u672c\u5730\u904b\u884c\u7684\u6d41\u6c34\u7dda\u53ef\u4ee5\u8207\u9060\u7a0b Google Cloud \u8cc7\u6e90\uff08\u5982 Pub/Sub \u4e3b\u984c\u6216 BigQuery \u8868\uff09\u9032\u884c\u4ea4\u4e92\u3002\u7232\u5404\u500b\u958b\u767c\u8005\u63d0\u4f9b\u55ae\u7368\u7684 Google Cloud \u9805\u76ee\uff0c\u4ee5\u4fbf\u5176\u53ef\u4ee5\u4f7f\u7528\u6c99\u76d2\u901a\u904e Google Cloud \u670d\u52d9\u9032\u884c\u81e8\u6642\u6e2c\u8a66\u3002\n\u67d0\u4e9b Google Cloud \u670d\u52d9\uff08\u4f8b\u5982 [Pub/Sub](https://cloud.google.com/pubsub/docs/emulator?hl=zh-cn) \u548c [Bigtable](https://cloud.google.com/bigtable/docs/emulator?hl=zh-cn) \uff09\u63d0\u4f9b\u9069\u7528\u65bc\u672c\u5730\u958b\u767c\u7684\u6a21\u64ec\u5668\u3002\u60a8\u53ef\u4ee5\u5c07\u9019\u4e9b\u6a21\u64ec\u5668\u8207\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f\u914d\u5408\u4f7f\u7528\uff0c\u4ee5\u5be6\u73fe\u7aef\u5230\u7aef\u672c\u5730\u958b\u767c\u548c\u6e2c\u8a66\u3002\n### \u6c99\u76d2\u74b0\u5883\n\u6c99\u76d2\u74b0\u5883\u662f\u4e00\u500b Google Cloud \u9805\u76ee\uff0c\u53ef\u4ee5\u8b93\u958b\u767c\u8005\u5728\u4ee3\u78bc\u958b\u767c\u671f\u9593\u8a2a\u554f Google Cloud \u670d\u52d9\u3002\u6d41\u6c34\u7dda\u958b\u767c\u8005\u53ef\u4ee5\u8207\u5176\u4ed6\u958b\u767c\u8005\u5171\u4eab Google Cloud \u9805\u76ee\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u9805\u76ee\u3002\u4f7f\u7528\u55ae\u500b\u9805\u76ee\u53ef\u4ee5\u964d\u4f4e\u8207\u5171\u4eab\u8cc7\u6e90\u7528\u91cf\u548c\u914d\u984d\u7ba1\u7406\u76f8\u95dc\u7684\u898f\u5283\u8907\u96dc\u6027\u3002\n\u958b\u767c\u8005\u4f7f\u7528\u6c99\u76d2\u74b0\u5883\u901a\u904e [Dataflow \u904b\u884c\u7a0b\u5e8f](https://beam.apache.org/documentation/runners/dataflow/) \u57f7\u884c\u81e8\u6642\u6d41\u6c34\u7dda\u57f7\u884c\u3002\u6c99\u76d2\u74b0\u5883\u53ef\u7528\u65bc\u5728\u4ee3\u78bc\u958b\u767c\u968e\u6bb5\u91dd\u5c0d\u751f\u7522\u904b\u884c\u7a0b\u5e8f\u8abf\u8a66\u548c\u6e2c\u8a66\u4ee3\u78bc\u3002\u4f8b\u5982\uff0c\u81e8\u6642\u6d41\u6c34\u7dda\u57f7\u884c\u53ef\u8b93\u958b\u767c\u8005\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u89c0\u5bdf\u4ee3\u78bc\u66f4\u6539\u5c0d\u64f4\u7e2e\u884c\u7232\u7684\u5f71\u97ff\u3002\n- \u77ad\u89e3\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f\u8207 Dataflow \u904b\u884c\u7a0b\u5e8f\u7684\u884c\u7232\u4e4b\u9593\u7684\u6f5b\u5728\u5dee\u7570\u3002\n- \u77ad\u89e3 Dataflow \u5982\u4f55\u61c9\u7528 [\u5716\u8868\u512a\u5316](https://cloud.google.com/dataflow/docs/guides/deploying-a-pipeline?hl=zh-cn#fusion-and-combine-optimizations) \u3002\n\u5c0d\u65bc\u81e8\u6642\u6e2c\u8a66\uff0c\u958b\u767c\u8005\u53ef\u4ee5\u5f9e\u672c\u5730\u74b0\u5883\u90e8\u7f72\u4ee3\u78bc\uff0c\u4ee5\u5728\u6c99\u76d2\u74b0\u5883\u4e2d\u904b\u884c Dataflow\u3002\n### \u9810\u751f\u7522\u74b0\u5883\n\u9810\u751f\u7522\u74b0\u5883\u9069\u7528\u65bc\u5728\u985e\u4f3c\u751f\u7522\u7684\u74b0\u5883\uff08\u4f8b\u5982\u7aef\u5230\u7aef\u6e2c\u8a66\uff09\u4e2d\u904b\u884c\u7684\u958b\u767c\u968e\u6bb5\u3002\u5c0d\u9810\u751f\u7522\u74b0\u5883\u4f7f\u7528\u55ae\u7368\u7684\u9805\u76ee\uff0c\u4e26\u5118\u53ef\u80fd\u5c07\u5176\u914d\u7f6e\u7232\u985e\u4f3c\u65bc\u751f\u7522\u74b0\u5883\u3002\u540c\u6a23\uff0c\u5982\u9700\u5141\u8a31\u5177\u6709\u985e\u4f3c\u751f\u7522\u898f\u6a21\u7684\u7aef\u5230\u7aef\u6e2c\u8a66\uff0c\u8acb\u5c07 Dataflow \u548c\u5176\u4ed6\u670d\u52d9\u7684 Google Cloud \u9805\u76ee\u914d\u984d\u8a2d\u7f6e\u7232\u8207\u751f\u7522\u74b0\u5883\u5118\u53ef\u80fd\u985e\u4f3c\u3002\n\u6839\u64da\u60a8\u7684\u9700\u6c42\uff0c\u60a8\u53ef\u4ee5\u5c07\u9032\u4e00\u6b65\u5c07\u9810\u751f\u7522\u5206\u9694\u7232\u591a\u500b\u74b0\u5883\u3002\u4f8b\u5982\uff0c\u8cea\u91cf\u63a7\u5236\u74b0\u5883\u53ef\u4ee5\u652f\u6301\u8cea\u91cf\u5206\u6790\u5e2b\u7684\u5de5\u4f5c\uff0c\u4ee5\u6e2c\u8a66\u4e0d\u540c\u5de5\u4f5c\u8ca0\u8f09\u689d\u4ef6\u4e0b\u7684\u670d\u52d9\u7b49\u7d1a\u76ee\u6a19 (SLO)\uff0c\u4f8b\u5982\u6578\u64da\u6b63\u78ba\u6027\u3001\u65b0\u9bae\u5ea6\u548c\u6027\u80fd\u3002\n[\u7aef\u5230\u7aef\u6e2c\u8a66](#end-to-end-tests) \u5305\u62ec\u8207\u6e2c\u8a66\u7bc4\u570d\u5167\u7684\u6578\u64da\u6e90\u548c\u63a5\u6536\u5668\u96c6\u6210\u3002\u8acb\u8003\u616e\u5982\u4f55\u5728\u9810\u751f\u7522\u74b0\u5883\u4e2d\u4f7f\u7528\u3002\u60a8\u53ef\u4ee5\u5c07\u6e2c\u8a66\u6578\u64da\u5b58\u5132\u5728\u9810\u751f\u7522\u74b0\u5883\u4e2d\u3002\u4f8b\u5982\uff0c\u6e2c\u8a66\u6578\u64da\u8207\u8f38\u5165\u6578\u64da\u4e00\u8d77\u5b58\u5132\u5728 Cloud Storage \u5b58\u5132\u6876\u4e2d\u3002\u5728\u5176\u4ed6\u60c5\u6cc1\u4e0b\uff0c\u6e2c\u8a66\u6578\u64da\u53ef\u80fd\u4f86\u81ea\u9810\u751f\u7522\u74b0\u5883\u5916\u90e8\uff0c\u4f8b\u5982\u751f\u7522\u74b0\u5883\u4e2d\u7684 Pub/Sub \u4e3b\u984c\uff08\u901a\u904e\u55ae\u7368\u8a02\u95b1\uff09\u3002\u5c0d\u65bc\u6d41\u8655\u7406\u6d41\u6c34\u7dda\uff0c\u60a8\u9084\u53ef\u4ee5\u4f7f\u7528\u751f\u6210\u7684\u6578\u64da\uff08\u4f8b\u5982\uff0c\u4f7f\u7528 Dataflow [Streaming Data Generator](https://cloud.google.com/blog/products/data-analytics/dataflow-flex-template-streaming-data-generator?hl=zh-cn) \uff09\u904b\u884c\u7aef\u5230\u7aef\u6e2c\u8a66\uff0c\u4ee5\u6a21\u64ec\u985e\u4f3c\u751f\u7522\u7684\u6578\u64da\u7279\u5fb5\u548c\u6578\u91cf\u3002\n\u5c0d\u65bc\u6d41\u8655\u7406\u6d41\u6c34\u7dda\uff0c\u5728\u5c0d\u751f\u7522\u74b0\u5883\u9032\u884c\u4efb\u4f55\u66f4\u6539\u4e4b\u524d\uff0c\u8acb\u4f7f\u7528\u9810\u751f\u7522\u74b0\u5883\u4f86\u6e2c\u8a66 [\u6d41\u6c34\u7dda\u66f4\u65b0](https://cloud.google.com/dataflow/docs/guides/updating-a-pipeline?hl=zh-cn) \u3002\u6e2c\u8a66\u548c\u9a57\u8b49\u6d41\u8655\u7406\u6d41\u6c34\u7dda\u7684\u66f4\u65b0\u904e\u7a0b\u975e\u5e38\u91cd\u8981\uff0c\u7279\u5225\u662f\u5728\u9700\u8981\u5354\u8abf\u591a\u500b\u6b65\u9a5f\uff08\u4f8b\u5982\uff0c\u4f7f\u7528\u904b\u884c\u4e26\u884c\u6d41\u6c34\u7dda\u6642\uff09\u6642\u5fc5\u9808\u5982\u6b64\uff0c\u4ee5\u907f\u514d\u505c\u6a5f\u3002\n### \u751f\u7522\u74b0\u5883\n\u751f\u7522\u74b0\u5883\u662f\u5c08\u7528\u7684 Google Cloud \u9805\u76ee\u3002\u6240\u6709\u7aef\u5230\u7aef\u6e2c\u8a66\u90fd\u901a\u904e\u6642\uff0c [\u6301\u7e8c\u4ea4\u4ed8](https://cloud.google.com/architecture/cicd-pipeline-for-data-processing?hl=zh-cn) \u6703\u5c07\u90e8\u7f72\u5de5\u4ef6\u8907\u88fd\u5230\u751f\u7522\u74b0\u5883\u3002\n## \u958b\u767c\u6700\u4f73\u505a\u6cd5\n\u672c\u90e8\u5206\u8a0e\u8ad6\u7de8\u78bc\u548c\u958b\u767c\u6700\u4f73\u505a\u6cd5\u3002\u5176\u4e2d\u8a31\u591a\u505a\u6cd5\u76f8\u8f14\u76f8\u6210\uff0c\u53ef\u589e\u5f37\u6d41\u6c34\u7dda\u958b\u767c\u548c\u64cd\u4f5c\u5316\u7684\u65b9\u65b9\u9762\u9762\uff0c\u4f8b\u5982\u63d0\u9ad8\u958b\u767c\u8005\u5de5\u4f5c\u6548\u7387\u3001\u63d0\u5347\u6d41\u6c34\u7dda\u7684\u53ef\u6e2c\u8a66\u6027\u3001\u63d0\u9ad8\u6027\u80fd\uff0c\u4ee5\u53ca\u901a\u904e\u76e3\u63a7\u5553\u7528\u66f4\u6df1\u5c64\u6b21\u7684\u6578\u64da\u6d1e\u898b\u3002\n\u5728\u958b\u59cb\u958b\u767c\u4e4b\u524d\uff0c\u8acb\u8a2d\u7f6e\u652f\u6301\u958b\u767c\u3001\u6e2c\u8a66\u548c\u4ea4\u4ed8\u751f\u547d\u9031\u671f\u7684\u90e8\u7f72\u74b0\u5883\u3002\n### \u4f7f\u7528 Google \u63d0\u4f9b\u7684\u6a21\u677f\n\u5982\u9700\u52a0\u5feb\u6d41\u6c34\u7dda\u958b\u767c\u901f\u5ea6\uff0c\u8acb\u6aa2\u67e5 Google \u662f\u5426\u63d0\u4f9b\u4e86\u73fe\u6709\u7684 [Dataflow \u6a21\u677f](https://cloud.google.com/dataflow/docs/guides/templates/provided-templates?hl=zh-cn) \u3002\u67d0\u4e9b\u6a21\u677f\u5141\u8a31\u60a8\u5c07\u81ea\u5b9a\u7fa9\u908f\u8f2f\u6dfb\u52a0\u7232\u6d41\u6c34\u7dda\u6b65\u9a5f\u3002\u4f8b\u5982\uff0c [BigQuery \u6a21\u677f\u7684 Pub/Sub \u8a02\u95b1](https://cloud.google.com/dataflow/docs/guides/templates/provided/pubsub-subscription-to-bigquery?hl=zh-cn) \u63d0\u4f9b\u4e86\u4e00\u500b\u53c3\u6578\uff0c\u7528\u65bc\u904b\u884c\u5b58\u5132\u5728 Cloud Storage \u4e2d\u7684 JavaScript \u7528\u6236\u5b9a\u7fa9\u7684\u51fd\u6578 (UDF)\u3002Google \u63d0\u4f9b\u7684 [\u6a21\u677f\u662f\u958b\u6e90\u7684](https://github.com/GoogleCloudPlatform/DataflowTemplates/tree/main/) \uff0c\u63a1\u7528 Apache License 2.0 \u8a31\u53ef\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5c07\u5176\u7528\u4f5c\u65b0\u6d41\u6c34\u7dda\u7684\u57fa\u790e\u3002\u6a21\u677f\u4e5f\u53ef\u7528\u4f5c\u53c3\u8003\u7684\u4ee3\u78bc\u793a\u4f8b\u3002\n### \u5275\u5efa\u53ef\u91cd\u8907\u4f7f\u7528\u7684\u8f49\u63db\u5eab\nApache Beam \u7de8\u7a0b\u6a21\u578b\u7d71\u4e00\u4e86\u6279\u8655\u7406\u548c\u6d41\u5f0f\u6578\u64da\u8655\u7406\uff0c\u56e0\u6b64\u53ef\u4ee5\u91cd\u8907\u4f7f\u7528\u8f49\u63db\u3002\u5275\u5efa\u901a\u7528\u8f49\u63db\u7684\u5171\u4eab\u5eab\u53ef\u63d0\u9ad8\u4e0d\u540c\u5718\u968a\u7684\u53ef\u91cd\u8907\u4f7f\u7528\u6027\u3001\u53ef\u6e2c\u8a66\u6027\u548c\u4ee3\u78bc\u6240\u6709\u6b0a\u3002\n\u8acb\u8003\u616e\u4ee5\u4e0b\u5169\u500b Java \u4ee3\u78bc\u793a\u4f8b\uff0c\u5169\u8005\u90fd\u8b80\u53d6\u4ed8\u6b3e\u4e8b\u4ef6\u3002\u7b2c\u4e00\u500b\u4f86\u81ea\u7121\u754c\u9650 Pub/Sub \u6e90\uff1a\n```\nPipelineOptions options = PipelineOptionsFactory.create();Pipeline p = Pipeline.create(options)// Initial read transformPCollection<PaymentEvent> payments =\u00a0 \u00a0 p.apply(\"Read from topic\",\u00a0 \u00a0 \u00a0 \u00a0 PubSubIO.readStrings().withTimestampAttribute(...).fromTopic(...))\u00a0 \u00a0 \u00a0 \u00a0 .apply(\"Parse strings into payment events\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ParDo.of(new ParsePaymentEventFn()));\n```\n\u7b2c\u4e8c\u500b\u4f86\u81ea\u6709\u754c\u9650\u95dc\u4fc2\u578b\u6578\u64da\u5eab\u7684\u4f86\u6e90\uff1a\n```\nPipelineOptions options = PipelineOptionsFactory.create();Pipeline p = Pipeline.create(options);PCollection<PaymentEvent> payments =\u00a0 \u00a0 p.apply(\u00a0 \u00a0 \u00a0 \u00a0 \"Read from database table\",\u00a0 \u00a0 \u00a0 \u00a0 JdbcIO.<PaymentEvent>read()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .withDataSourceConfiguration(...)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .withQuery(...)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .withRowMapper(new RowMapper<PaymentEvent>() {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }));\n```\n\u5047\u8a2d\u5169\u500b\u6d41\u6c34\u7dda\u57f7\u884c\u76f8\u540c\u7684\u8655\u7406\uff0c\u5247\u5b83\u5011\u53ef\u4ee5\u901a\u904e\u5171\u4eab\u5eab\u5c07\u76f8\u540c\u7684\u8f49\u63db\u7528\u65bc\u5176\u9918\u8655\u7406\u6b65\u9a5f\u3002\u5982\u4f55\u5be6\u73fe\u4ee3\u78bc\u53ef\u91cd\u7528\u6027\u6700\u4f73\u505a\u6cd5\u56e0\u7de8\u7a0b\u8a9e\u8a00\u548c\u69cb\u5efa\u5de5\u5177\u800c\u7570\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u4f7f\u7528 [Maven](https://maven.apache.org/) \uff0c\u5247\u53ef\u4ee5\u5c07\u8f49\u63db\u4ee3\u78bc\u62c6\u5206\u5230\u5b83\u81ea\u5df1\u7684\u6a21\u584a\u4e2d\u3002\u7136\u5f8c\uff0c\u60a8\u53ef\u4ee5\u5c07\u6b64\u6a21\u584a\u4f5c\u7232\u5b50\u6a21\u584a\u6dfb\u52a0\u5230\u66f4\u5927\u6d41\u6c34\u7dda\u7684 [\u591a\u6a21\u584a\u9805\u76ee](https://maven.apache.org/guides/mini/guide-multiple-modules.html) \u4e2d\uff0c\u5982\u4ee5\u4e0b\u4ee3\u78bc\u793a\u4f8b\u6240\u793a\uff1a\n```\n// Reuse transforms across both pipelinespayments\u00a0 \u00a0 .apply(\"ValidatePayments\", new PaymentTransforms.ValidatePayments(...))\u00a0 \u00a0 .apply(\"ProcessPayments\", new PaymentTransforms.ProcessPayments(...))\u00a0 ...\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 Apache Beam \u6587\u6a94 [\u7de8\u5beb Apache Beam \u8f49\u63db\u7528\u6236\u4ee3\u78bc\u7684\u6700\u4f73\u5be6\u8e10](https://beam.apache.org/documentation/programming-guide/#requirements-for-writing-user-code-for-beam-transforms) \uff0c\u4ee5\u53ca [PTransform \u7684\u63a8\u85a6\u6a23\u5f0f\u6307\u5357](https://beam.apache.org/contribute/ptransform-style-guide/) \u3002\n### \u4f7f\u7528\u6b7b\u4fe1\u968a\u5217\u8655\u7406\u932f\u8aa4\n\u60a8\u7684\u6d41\u6c34\u7dda\u53ef\u80fd\u6703\u9047\u5230\u7121\u6cd5\u8655\u7406\u5143\u7d20\u7684\u60c5\u6cc1\u3002\u767c\u751f\u9019\u7a2e\u60c5\u6cc1\u7684\u539f\u56e0\u6709\u5f88\u591a\uff0c\u4f46\u6700\u5e38\u898b\u7684\u539f\u56e0\u662f\u6578\u64da\u554f\u984c\u3002\u4f8b\u5982\uff0c\u5305\u542b\u683c\u5f0f\u932f\u8aa4\u7684 JSON \u7684\u5143\u7d20\u53ef\u80fd\u6703\u5c0e\u81f4\u89e3\u6790\u5931\u6557\u3002\n\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u4e00\u7a2e\u65b9\u6cd5\u662f\u5728 [DoFn.ProcessElement](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/DoFn.ProcessElement.html) \u65b9\u6cd5\u4e2d\u6355\u7372\u7570\u5e38\u3002\u5728\u7570\u5e38\u584a\u4e2d\uff0c\u60a8\u53ef\u4ee5\u8a18\u9304\u932f\u8aa4\u4e26\u522a\u9664\u5143\u7d20\u3002\u4f46\u662f\uff0c\u9019\u6703\u5c0e\u81f4\u6578\u64da\u4e1f\u5931\uff0c\u4e26\u963b\u6b62\u7cfb\u7d71\u7a0d\u5f8c\u6aa2\u67e5\u6578\u64da\uff0c\u800c\u9700\u9032\u884c\u624b\u52d5\u8655\u7406\u6216\u554f\u984c\u6392\u67e5\u3002\n\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u540d\u7232\u6b7b\u4fe1\u968a\u5217\uff08\u6216\u6b7b\u4fe1\u6587\u4ef6\uff09\u7684\u6a21\u5f0f\u3002 \u60a8\u53ef\u4ee5\u5728 `DoFn.ProcessElement` \u65b9\u6cd5\u4e2d\u6355\u7372\u7570\u5e38\uff0c\u4e26\u50cf\u5f80\u5e38\u4e00\u6a23\u8a18\u9304\u932f\u8aa4\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e1f\u68c4\u8f38\u51fa\u5c07\u5931\u6557\u7684\u5143\u7d20\u5beb\u5165\u55ae\u7368\u7684 `PCollection` \u5c0d\u8c61\u4e2d\uff0c\u800c\u4e0d\u662f\u4e1f\u68c4\u5931\u6557\u7684\u5143\u7d20\u3002\u7136\u5f8c\uff0c\u7cfb\u7d71\u6703\u5c07\u9019\u4e9b\u5143\u7d20\u5beb\u5165\u6578\u64da\u63a5\u6536\u5668\uff0c\u4ee5\u4fbf\u65e5\u5f8c\u4f7f\u7528\u55ae\u7368\u7684\u8f49\u63db\u9032\u884c\u6aa2\u67e5\u548c\u8655\u7406\u3002\n\u4ee5\u4e0b Java \u4ee3\u78bc\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u5be6\u73fe\u6b7b\u4fe1\u968a\u5217\u6a21\u5f0f\uff1a\n```\nTupleTag<Output> successTag = new TupleTag<>() {};TupleTag<Input> deadLetterTag = new TupleTag<>() {};PCollection<Input> input = /* ... */;PCollectionTuple outputTuple =\u00a0 \u00a0 input.apply(ParDo.of(new DoFn<Input, Output>() {\u00a0 \u00a0 \u00a0 @Override\u00a0 \u00a0 \u00a0 void processElement(ProcessContext c) {\u00a0 \u00a0 \u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 c.output(process(c.element()));\u00a0 \u00a0 \u00a0 \u00a0 } catch (Exception e) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LOG.severe(\"Failed to process input {} -- adding to dead-letter file\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 c.element(), e);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 c.sideOutput(deadLetterTag, c.element());\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }).withOutputTags(successTag, TupleTagList.of(deadLetterTag)));// Write the dead-letter inputs to a BigQuery table for later analysisoutputTuple.get(deadLetterTag)\u00a0 \u00a0 .apply(BigQueryIO.write(...));// Retrieve the successful elements...PCollection<Output> success = outputTuple.get(successTag);// and continue processing ...\n```\n\u60a8\u53ef\u4ee5\u4f7f\u7528 [Cloud Monitoring](https://cloud.google.com/dataflow/docs/guides/using-cloud-monitoring?hl=zh-cn) \u7232\u6d41\u6c34\u7dda\u7684\u6b7b\u4fe1\u968a\u5217\u61c9\u7528\u4e0d\u540c\u7684\u76e3\u63a7\u548c\u63d0\u9192\u653f\u7b56\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u76f4\u89c0\u5448\u73fe\u6b7b\u4fe1\u8f49\u63db\u8655\u7406\u7684\u5143\u7d20\u6578\u91cf\u548c\u5927\u5c0f\uff0c\u4e26\u5c07\u63d0\u9192\u914d\u7f6e\u7232\u5728\u6eff\u8db3\u7279\u5b9a\u95be\u503c\u6642\u89f8\u767c\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b7b\u4fe1\u6a21\u5f0f\u8655\u7406\u5177\u6709\u610f\u5916\u4f46\u6709\u6548\u67b6\u69cb\u7684\u6578\u64da\uff0c\u4e26\u50c5\u5c07\u5931\u6557\u7684\u5143\u7d20\u5beb\u5165\u7368\u7acb\u7684 `PCollection` \u5c0d\u8c61\u3002\u4f46\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u81ea\u52d5\u5c07\u53cd\u6620\u66f4\u6539\u67b6\u69cb\u7684\u5143\u7d20\u4f5c\u7232\u6709\u6548\u5143\u7d20\u4f86\u8655\u7406\u3002\u4f8b\u5982\uff0c\u5982\u679c\u67d0\u500b\u5143\u7d20\u7684\u67b6\u69cb\u53cd\u6620\u6dfb\u52a0\u65b0\u5b57\u6bb5\u7b49\u66f4\u6539\uff0c\u60a8\u53ef\u4ee5\u8abf\u6574\u6578\u64da\u63a5\u6536\u5668\u7684\u67b6\u69cb\u4ee5\u9069\u61c9\u8b8a\u66f4\u3002\n\u81ea\u52d5\u67b6\u69cb\u66f4\u6539\u4f9d\u8cf4\u65bc\u6b7b\u4fe1\u6a21\u5f0f\u4f7f\u7528\u7684\u5206\u652f\u8f38\u51fa\u65b9\u6cd5\u3002\u4e0d\u904e\uff0c\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u5b83\u6703\u89f8\u767c\u4e00\u500b\u8f49\u63db\uff0c\u6bcf\u7576\u6dfb\u52a0\u67b6\u69cb\u6642\uff0c\u90fd\u6703\u66f4\u6539\u76ee\u6a19\u67b6\u69cb\u3002\u5982\u9700\u67e5\u770b\u6b64\u65b9\u6cd5\u7684\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 Google Cloud \u535a\u5ba2\u4e2d\u7684 [\u5982\u4f55\u4f7f\u7528 Square Enix \u8655\u7406\u6d41\u5f0f\u50b3\u8f38\u6d41\u6c34\u7dda\u4e2d\u7684\u66f4\u6539 JSON \u67b6\u69cb](https://cloud.google.com/blog/products/gcp/how-to-handle-mutating-json-schemas-in-a-streaming-pipeline-with-square-enix?hl=zh-cn) \u3002\n### \u5f9e\u8f14\u52a9\u8f38\u5165\u6216\u7528\u65bc\u806f\u63a5\u7684 CoGroupByKey \u4e2d\u6b63\u78ba\u9078\u64c7\n\u806f\u63a5\u6578\u64da\u96c6\u662f\u6578\u64da\u6d41\u6c34\u7dda\u7684\u4e00\u500b\u5e38\u898b\u7528\u4f8b\u3002 [\u8f14\u52a9\u8f38\u5165](https://beam.apache.org/documentation/programming-guide/#side-inputs) \u63d0\u4f9b\u4e86\u4e00\u7a2e\u9748\u6d3b\u7684\u65b9\u5f0f\u4f86\u89e3\u6c7a\u5e38\u898b\u7684\u6578\u64da\u8655\u7406\u554f\u984c\uff0c\u4f8b\u5982\u6578\u64da\u8c50\u5bcc\u548c\u5bc6\u9470\u67e5\u8a62\u3002\u8207 `PCollection` \u5c0d\u8c61\u4e0d\u540c\uff0c\u8f14\u52a9\u8f38\u5165\u4e5f\u662f\u53ef\u8b8a\u7684\uff0c\u4e26\u4e14\u53ef\u4ee5\u5728\u904b\u884c\u6642\u78ba\u5b9a\u3002\u4f8b\u5982\uff0c\u8f14\u52a9\u8f38\u5165\u4e2d\u7684\u503c\u53ef\u80fd\u7531\u6d41\u6c34\u7dda\u4e2d\u7684\u53e6\u4e00\u500b\u5206\u652f\u8a08\u7b97\uff0c\u6216\u901a\u904e\u8abf\u7528\u9060\u7a0b\u670d\u52d9\u78ba\u5b9a\u3002\nDataflow \u901a\u904e\u5c07\u6578\u64da\u6301\u4e45\u5316\u5230\u6301\u4e45\u6027\u5b58\u5132\u7a7a\u9593\uff08\u985e\u4f3c\u65bc\u5171\u4eab\u78c1\u76e4\uff09\u4e2d\u652f\u6301\u8f14\u52a9\u8f38\u5165\uff0c\u5f9e\u800c\u4f7f\u6240\u6709\u5de5\u4f5c\u5668\u90fd\u80fd\u5920\u4f7f\u7528\u5b8c\u6574\u7684\u8f14\u52a9\u8f38\u5165\u3002\u8f14\u52a9\u8f38\u5165\u7684\u91cf\u53ef\u80fd\u975e\u5e38\u5927\uff0c\u53ef\u80fd\u7121\u6cd5\u653e\u5165\u5de5\u4f5c\u5668\u5167\u5b58\u4e2d\u3002\u5982\u679c\u5de5\u4f5c\u5668\u9700\u8981\u4e0d\u65b7\u5f9e\u6c38\u4e45\u6027\u5b58\u5132\u7a7a\u9593\u8b80\u53d6\uff0c\u5f9e\u5927\u578b\u8f14\u52a9\u8f38\u5165\u8b80\u53d6\u53ef\u80fd\u6703\u5c0e\u81f4\u6027\u80fd\u554f\u984c\u3002\n[CoGroupByKey](https://beam.apache.org/documentation/programming-guide/#cogroupbykey) \u8f49\u63db\u662f\u4e00\u7a2e [\u6838\u5fc3 Apache Beam \u8f49\u63db](https://beam.apache.org/documentation/programming-guide/#core-beam-transforms) \uff0c\u53ef\u5408\u4f75\uff08\u5c55\u5e73\uff09\u591a\u500b `PCollection` \u5c0d\u8c61\u548c\u7d44\u5143\u7d20\u3002\u8207\u53ef\u8b93\u6bcf\u500b\u5de5\u4f5c\u5668\u4f7f\u7528\u6574\u500b\u8f14\u52a9\u8f38\u5165\u6578\u64da\u7684\u8f14\u52a9\u8f38\u5165\u4e0d\u540c\uff0c `CoGroupByKey` \u6703\u57f7\u884c\u91cd\u6392\uff08\u5206\u7d44\uff09\u64cd\u4f5c\uff0c\u4ee5\u5728\u591a\u500b\u5de5\u4f5c\u5668\u4e4b\u9593\u5206\u914d\u6578\u64da\u3002\u56e0\u6b64\uff0c\u7576\u8981\u806f\u63a5\u7684 `PCollection` \u5c0d\u8c61\u975e\u5e38\u5927\u4e14\u4e0d\u9069\u5408\u5de5\u4f5c\u5668\u5167\u5b58\u6642\uff0c `CoGroupByKey` \u662f\u7406\u60f3\u4e4b\u9078\u3002\n\u8acb\u9075\u5faa\u4ee5\u4e0b\u6e96\u5247\uff0c\u4ee5\u78ba\u5b9a\u662f\u4f7f\u7528\u8f14\u52a9\u8f38\u5165\u9084\u662f\u4f7f\u7528 `CoGroupByKey` \uff1a\n- \u5982\u679c\u60a8\u8981\u806f\u63a5\u7684`PCollection`\u5c0d\u8c61\u4e0d\u6210\u6bd4\u4f8b\u4e14\u6bd4\u5176\u4ed6\u7684\u8981\u5c0f\uff0c\u800c\u8f03\u5c0f\u7684`PCollection`\u5c0d\u8c61\u9069\u5408\u5de5\u4f5c\u5668\u5167\u5b58\uff0c\u5247\u4f7f\u7528\u8f14\u52a9\u8f38\u5165\u3002\u5c07\u8f14\u52a9\u8f38\u5165\u5b8c\u5168\u7de9\u5b58\u5230\u5167\u5b58\u4e2d\u5f8c\uff0c\u63d0\u53d6\u5143\u7d20\u7684\u901f\u5ea6\u548c\u6548\u7387\u6703\u66f4\u9ad8\u3002\n- \u5982\u679c\u60a8\u9700\u8981\u63d0\u53d6\u5927\u91cf\u8d85\u51fa\u5de5\u4f5c\u5668\u5167\u5b58\u7684`PCollection`\u5c0d\u8c61\uff0c\u8acb\u4f7f\u7528`CoGroupByKey`\u3002\n- \u5982\u679c\u60a8\u7684`PCollection`\u5c0d\u8c61\u61c9\u5728\u6d41\u6c34\u7dda\u4e2d\u591a\u6b21\u806f\u63a5\uff0c\u8acb\u4f7f\u7528\u8f14\u52a9\u8f38\u5165\u3002\u60a8\u53ef\u4ee5\u5275\u5efa\u4e00\u500b\u53ef\u4f9b\u591a\u500b`ParDo`\u8f49\u63db\u91cd\u8907\u4f7f\u7528\u7684\u8f14\u52a9\u8f38\u5165\uff0c\u800c\u7121\u9700\u4f7f\u7528\u591a\u500b`CoGroupByKey`\u8f49\u63db\u3002\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6392\u67e5 Dataflow \u5167\u5b58\u4e0d\u8db3\u932f\u8aa4](https://cloud.google.com/dataflow/docs/guides/troubleshoot-oom?hl=zh-cn) \u3002\n### \u6bcf\u500b\u5143\u7d20\u64cd\u4f5c\u7684\u6700\u5927\u958b\u92b7\n\u4e00\u500b `DoFn` \u5be6\u4f8b\u8655\u7406\u591a\u6279\u540d\u7232 [\u8edf\u4ef6\u5305](https://beam.apache.org/documentation/runtime/model/#bundling-and-persistence) \u7684\u5143\u7d20\uff0c\u5373\u7531\u96f6\u500b\u6216\u4ee5\u4e0a\u5143\u7d20\u7d44\u6210\u7684\u5de5\u4f5c\u7684\u539f\u5b50\u55ae\u5143\u3002\u5404\u500b\u5143\u7d20\u96a8\u5f8c\u7531 [DoFn.ProcessElement](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/DoFn.ProcessElement.html) \u65b9\u6cd5\u8655\u7406\uff0c\u4e26\u91dd\u5c0d\u6bcf\u500b\u5143\u7d20\u904b\u884c\u3002\u7531\u65bc `DoFn.ProcessElement` \u65b9\u6cd5\u662f\u91dd\u5c0d\u6bcf\u500b\u5143\u7d20\u8abf\u7528\u7684\uff0c\u56e0\u6b64\u7531\u8a72\u65b9\u6cd5\u8abf\u7528\u7684\u4efb\u4f55\u8017\u6642\u6216\u8a08\u7b97\u958b\u92b7\u5927\u7684\u64cd\u4f5c\u90fd\u6703\u5c0e\u81f4\u8a72\u65b9\u6cd5\u8655\u7406\u7684\u6bcf\u500b\u5143\u7d20\u57f7\u884c\u9019\u4e9b\u64cd\u4f5c\u3002\n\u5982\u679c\u60a8\u9700\u8981\u5c0d\u4e00\u6279\u5143\u7d20\u50c5\u57f7\u884c\u4e00\u6b21\u8cbb\u7528\u9ad8\u6602\u7684\u64cd\u4f5c\uff0c\u8acb\u9078\u64c7 [DoFn.Setup](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/DoFn.Setup.html) \u548c [DoFn.StartBundle](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/DoFn.StartBundle.html) \u65b9\u6cd5\u4e2d\u7684\u64cd\u4f5c\uff0c\u800c\u4e0d\u9078\u64c7 `DoFn.ProcessElement` \u3002\u793a\u4f8b\u5982\u4e0b\uff1a\n- \u89e3\u6790\u7528\u65bc\u63a7\u5236 `DoFn` \u5be6\u4f8b\u884c\u7232\u7684\u67d0\u4e9b\u65b9\u9762\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u4f7f\u7528 [DoFn.Setup](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/DoFn.Setup.html) \u65b9\u6cd5\u521d\u59cb\u5316 `DoFn` \u5be6\u4f8b\u6642\uff0c\u50c5\u8abf\u7528\u4e00\u6b21\u6b64\u64cd\u4f5c\u3002\n- \u5be6\u4f8b\u5316\u5728\u8edf\u4ef6\u5305\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4e2d\u91cd\u8907\u4f7f\u7528\u7684\u77ed\u671f\u5ba2\u6236\u7aef\uff0c\u4f8b\u5982\u7576\u8edf\u4ef6\u5305\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u901a\u904e\u55ae\u500b\u7db2\u7d61\u9023\u63a5\u767c\u9001\u6642\u3002\u4f7f\u7528 `DoFn.StartBundle` \u65b9\u6cd5\u7232\u6bcf\u500b\u8edf\u4ef6\u5305\u8abf\u7528\u4e00\u6b21\u6b64\u64cd\u4f5c\u3002\n### \u9650\u5236\u6279\u6b21\u5927\u5c0f\u548c\u540c\u6642\u8abf\u7528\u5916\u90e8\u670d\u52d9\n\u8abf\u7528\u5916\u90e8\u670d\u52d9\u6642\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 [GroupIntoBatches](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/GroupIntoBatches.html) \u8f49\u63db\u4f86\u5275\u5efa\u6307\u5b9a\u5927\u5c0f\u7684\u6279\u6b21\u5143\u7d20\uff0c\u5f9e\u800c\u6e1b\u5c11\u6bcf\u6b21\u8abf\u7528\u7684\u958b\u92b7\u3002\u6279\u8655\u7406\u6703\u5c07\u5143\u7d20\u4f5c\u7232\u4e00\u500b\u8ca0\u8f09\u767c\u9001\u5230\u5916\u90e8\u670d\u52d9\uff0c\u800c\u4e0d\u662f\u55ae\u7368\u9010\u500b\u767c\u9001\u3002\n\u7d50\u5408\u6279\u8655\u7406\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u9078\u64c7\u9069\u7576\u7684\u5bc6\u9470\u4f86\u5c0d\u50b3\u5165\u6578\u64da\u9032\u884c\u5206\u5340\uff0c\u5f9e\u800c\u9650\u5236\u5c0d\u5916\u90e8\u670d\u52d9\u7684\u4e26\u884c\uff08\u4f75\u767c\uff09\u8abf\u7528\u6578\u91cf\u4e0a\u9650\u3002\u5206\u5340\u6578\u91cf\u6c7a\u5b9a\u4e86\u6700\u5927\u4e26\u884c\u6578\u91cf\u3002\u4f8b\u5982\uff0c\u5982\u679c\u7232\u6bcf\u500b\u5143\u7d20\u6307\u5b9a\u76f8\u540c\u7684\u5bc6\u9470\uff0c\u7528\u65bc\u8abf\u7528\u5916\u90e8\u670d\u52d9\u7684\u4e0b\u6e38\u8f49\u63db\u4e0d\u6703\u4e26\u884c\u904b\u884c\u3002\n\u8acb\u8003\u616e\u4f7f\u7528\u4ee5\u4e0b\u67d0\u7a2e\u65b9\u6cd5\u7232\u5143\u7d20\u751f\u6210\u5bc6\u9470\uff1a\n- \u9078\u64c7\u6578\u64da\u96c6\u5c6c\u6027\u4f5c\u7232\u6578\u64da\u5bc6\u9470\uff08\u4f8b\u5982\u7528\u6236 ID\uff09\u3002\n- \u751f\u6210\u6578\u64da\u9375\uff0c\u4ee5\u4fbf\u6309\u56fa\u5b9a\u6578\u91cf\u7684\u5206\u5340\u96a8\u6a5f\u62c6\u5206\u5143\u7d20\uff0c\u5176\u4e2d\u53ef\u80fd\u7684\u9375\u503c\u5c0d\u6578\u91cf\u6c7a\u5b9a\u4e86\u5206\u5340\u7684\u6578\u91cf\u3002\u60a8\u9700\u8981\u5275\u5efa\u8db3\u5920\u7684\u5206\u5340\u4f86\u63d0\u9ad8\u4e26\u884c\u6027\uff0c\u4e26\u4e14\u6bcf\u500b\u5206\u5340\u9700\u8981\u6709\u8db3\u5920\u7684\u5143\u7d20\u4f86\u652f\u6301`GroupIntoBatches`\u3002\n\u4ee5\u4e0b Java \u4ee3\u78bc\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u96a8\u6a5f\u62c6\u5206 10 \u500b\u5206\u5340\u4e2d\u7684\u5143\u7d20\uff1a\n```\n// PII or classified data which needs redaction.PCollection<String> sensitiveData = ...;int numPartitions = 10; // Number of parallel batches to create.PCollection<KV<Long, Iterable<String>>> batchedData =\u00a0 \u00a0 sensitiveData\u00a0 \u00a0 \u00a0 \u00a0 .apply(\"Assign data into partitions\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ParDo.of(new DoFn<String, KV<Long, String>>() {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Random random = new Random();\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 @ProcessElement\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 public void assignRandomPartition(ProcessContext context) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 context.output(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 KV.of(randomPartitionNumber(), context.element()));\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 private static int randomPartitionNumber() {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return random.nextInt(numPartitions);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }))\u00a0 \u00a0 \u00a0 \u00a0 .apply(\"Create batches of sensitive data\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GroupIntoBatches.<Long, String>ofSize(100L));// Use batched sensitive data to fully utilize Redaction API// (which has a rate limit but allows large payloads)batchedData\u00a0 \u00a0 .apply(\"Call Redaction API in batches\", callRedactionApiOnBatch());\n```\n### \u627e\u51fa\u7531\u4e0d\u9069\u7576\u878d\u5408\u6b65\u9a5f\u5c0e\u81f4\u7684\u6027\u80fd\u554f\u984c\nDataflow \u6703\u6839\u64da\u60a8\u7528\u65bc\u69cb\u9020\u6d41\u6c34\u7dda\u7684\u8f49\u63db\u548c\u6578\u64da\uff0c\u69cb\u5efa\u4e00\u500b\u6b65\u9a5f\u5716\u4f86\u8868\u793a\u60a8\u7684\u6d41\u6c34\u7dda\u3002\u6b64\u5716\u7a31\u7232 [\u6d41\u6c34\u7dda\u57f7\u884c\u5716](https://cloud.google.com/dataflow/docs/guides/job-graph?hl=zh-cn) \u3002\n\u90e8\u7f72\u6d41\u6c34\u7dda\u6642\uff0cDataflow \u53ef\u80fd\u6703\u4fee\u6539\u6d41\u6c34\u7dda\u7684\u57f7\u884c\u5716\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002\u4f8b\u5982\uff0cDataflow \u53ef\u80fd\u6703\u878d\u5408\u4e00\u4e9b\u64cd\u4f5c\uff08\u8a72\u6d41\u7a0b\u4e5f\u7a31\u7232 [\u878d\u5408\u512a\u5316](https://cloud.google.com/dataflow/docs/guides/deploying-a-pipeline?hl=zh-cn#fusion-and-combine-optimizations) \uff09\uff0c\u4ee5\u907f\u514d\u5728\u6d41\u6c34\u7dda\u4e2d\u5beb\u5165\u6bcf\u500b\u4e2d\u7d1a `PCollection` \u5c0d\u8c61\u6642\u7522\u751f\u6027\u80fd\u548c\u8cbb\u7528\u5f71\u97ff\u3002\n\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0cDataflow \u53ef\u80fd\u6703\u932f\u8aa4\u5730\u78ba\u5b9a\u878d\u5408\u6d41\u6c34\u7dda\u4e2d\u5404\u64cd\u4f5c\u7684\u6700\u4f73\u65b9\u5f0f\uff0c\u800c\u4f7f\u5f97 Dataflow \u670d\u52d9\u7121\u6cd5\u5145\u5206\u5229\u7528\u6240\u6709\u53ef\u7528\u7684\u5de5\u4f5c\u5668\u3002\u5728\u9019\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u9632\u6b62\u67d0\u4e9b\u64cd\u4f5c\u878d\u5408\u3002\n\u8acb\u53c3\u8003\u4ee5\u4e0b Apache Beam \u4ee3\u78bc\u793a\u4f8b\u3002 [GenerateSequence](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/io/GenerateSequence.html) \u8f49\u63db\u6703\u5275\u5efa\u4e00\u500b\u5c0f\u578b\u6709\u754c\u9650\u7684 `PCollection` \u5c0d\u8c61\uff0c\u7136\u5f8c\u7531\u5169\u500b\u4e0b\u6e38 `ParDo` \u8f49\u63db\u9032\u4e00\u6b65\u8655\u7406\u8a72\u5c0d\u8c61\u3002\n```\nimport com.google.common.math.LongMath;...public class FusedStepsPipeline {\u00a0 final class FindLowerPrimesFn extends DoFn<Long, String> {\u00a0 \u00a0 @ProcessElement\u00a0 \u00a0 public void processElement(ProcessContext c) {\u00a0 \u00a0 \u00a0 Long n = c.element();\u00a0 \u00a0 \u00a0 if (n > 1) {\u00a0 \u00a0 \u00a0 \u00a0 for (long i = 2; i < n; i++) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (LongMath.isPrime(i)) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 c.output(Long.toString(i));\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }\u00a0 public static void main(String[] args) {\u00a0 \u00a0 Pipeline p = Pipeline.create(options);\u00a0 \u00a0 PCollection<Long> sequence = p.apply(\"Generate Sequence\",\u00a0 \u00a0 \u00a0 \u00a0 GenerateSequence\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .from(0)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .to(1000000));\u00a0 \u00a0 // Pipeline branch 1\u00a0 \u00a0 sequence.apply(\"Find Primes Less-than-N\",\u00a0 \u00a0 \u00a0 \u00a0 ParDo.of(new FindLowerPrimesFn()));\u00a0 \u00a0 // Pipeline branch 2\u00a0 \u00a0 sequence.apply(\"Increment Number\",\u00a0 \u00a0 \u00a0 \u00a0 MapElements.via(new SimpleFunction<Long, Long>() {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 public Long apply(Long n) {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return ++n;\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }));\u00a0 \u00a0 p.run().waitUntilFinish();\u00a0 }}\n```\n`Find Primes Less-than-N` \u8f49\u63db\u7684\u8a08\u7b97\u958b\u92b7\u53ef\u80fd\u5f88\u5927\uff0c\u4e26\u4e14\u5c0d\u65bc\u5927\u91cf\u6578\u5b57\u4f86\u8aaa\uff0c\u904b\u884c\u901f\u5ea6\u53ef\u80fd\u6703\u5f88\u6162\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u60a8\u671f\u671b `Increment Number` \u8f49\u63db\u5feb\u901f\u5b8c\u6210\u3002\n\u4e0b\u5716\u986f\u793a\u4e86 Dataflow \u76e3\u63a7\u754c\u9762\u4e2d\u6d41\u6c34\u7dda\u7684\u5716\u5f62\u8868\u793a\u3002\n\u4f7f\u7528 [Dataflow \u76e3\u63a7\u754c\u9762](https://cloud.google.com/dataflow/docs/guides/monitoring-overview?hl=zh-cn) \u76e3\u63a7\u4f5c\u696d\u5c0d\u5169\u500b\u8f49\u63db\u986f\u793a\u7684\u8655\u7406\u901f\u5ea6\u76f8\u540c\uff0c\u5373\u6bcf\u79d2 13 \u500b\u5143\u7d20\u3002\u60a8\u671f\u671b `Increment Number` \u8f49\u63db\u5feb\u901f\u8655\u7406\u5143\u7d20\uff0c\u4f46\u5b83\u4f3c\u4e4e\u8207 `Find Primes Less-than-N` \u7684\u8655\u7406\u901f\u7387\u76f8\u540c\u3002\n\u539f\u56e0\u5728\u65bc Dataflow \u5c07\u9019\u4e9b\u6b65\u9a5f\u878d\u5408\u7232\u55ae\u500b\u968e\u6bb5\uff0c\u5f9e\u800c\u9632\u6b62\u5b83\u5011\u7368\u7acb\u904b\u884c\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b `gcloud` \u547d\u4ee4\uff1a\n```\ngcloud dataflow jobs describe --full job-id --format json\n```\n\u5728\u751f\u6210\u7684\u8f38\u51fa\u4e2d\uff0c [ComponentTransform](https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs?hl=zh-cn#Job.ComponentTransform) \u6578\u7d44\u7684 [ExecutionStageSummary](https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs?hl=zh-cn#executionstagesummary) \u5c0d\u8c61\u4e2d\u8aaa\u660e\u4e86\u878d\u5408\u6b65\u9a5f\uff1a\n```\n...\u00a0 \u00a0 \"executionPipelineStage\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"componentSource\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"componentTransform\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"s1\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"originalTransform\": \"Generate Sequence/Read(BoundedCountingSource)\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"userName\": \"Generate Sequence/Read(BoundedCountingSource)\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"s2\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"originalTransform\": \"Find Primes Less-than-N\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"userName\": \"Find Primes Less-than-N\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"s3\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"originalTransform\": \"Increment Number/Map\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"userName\": \"Increment Number/Map\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 \u00a0 \"id\": \"S01\",\u00a0 \u00a0 \u00a0 \u00a0 \"kind\": \"PAR_DO_KIND\",\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"F0\"\u00a0 \u00a0 \u00a0 }...\n```\n\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c `Find Primes Less-than-N` \u8f49\u63db\u662f\u7de9\u6162\u7684\u6b65\u9a5f\uff0c\u56e0\u6b64\u5728\u8a72\u6b65\u9a5f\u4e4b\u524d\u5206\u89e3\u878d\u5408\u662f\u9069\u7576\u7684\u7b56\u7565\u3002\u53d6\u6d88\u878d\u5408\u6b65\u9a5f\u7684\u4e00\u7a2e\u65b9\u6cd5\u662f\u63d2\u5165 [GroupByKey](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/GroupByKey.html) \u8f49\u63db\u4e26\u5728\u6b64\u6b65\u9a5f\u4e4b\u524d\u53d6\u6d88\u5206\u7d44\uff0c\u5982\u4e0b\u9762\u7684 Java \u4ee3\u78bc\u793a\u4f8b\u6240\u793a\uff1a\n```\nsequence\u00a0 \u00a0 .apply(\"Map Elements\", MapElements.via(new SimpleFunction<Long, KV<Long, Void>>() {\u00a0 \u00a0 \u00a0 public KV<Long, Void> apply(Long n) {\u00a0 \u00a0 \u00a0 \u00a0 return KV.of(n, null);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }))\u00a0 \u00a0 .apply(\"Group By Key\", GroupByKey.<Long, Void>create())\u00a0 \u00a0 .apply(\"Emit Keys\", Keys.<Long>create())\u00a0 \u00a0 .apply(\"Find Primes Less-than-N\", ParDo.of(new FindLowerPrimesFn()));\n```\n\u60a8\u9084\u53ef\u4ee5\u5c07\u9019\u4e9b\u53d6\u6d88\u878d\u5408\u7684\u6b65\u9a5f\u7d44\u5408\u6210\u53ef\u91cd\u8907\u4f7f\u7528\u7684\u8907\u5408\u8f49\u63db\u3002\n\u53d6\u6d88\u9019\u4e9b\u6b65\u9a5f\u5f8c\uff0c\u7576\u60a8\u904b\u884c\u6d41\u6c34\u7dda\u6642\uff0c\u60a8\u6703\u770b\u5230 `Increment Number` \u53ea\u9700\u5e7e\u79d2\u5373\u53ef\u5b8c\u6210\uff0c\u800c\u904b\u884c\u6642\u9593\u8f03\u9577\u7684 `Find Primes Less-than-N` \u8f49\u63db\u5c07\u5728\u55ae\u7368\u7684\u968e\u6bb5\u57f7\u884c\u3002\n\u6b64\u793a\u4f8b\u61c9\u7528\u5206\u7d44\u548c\u53d6\u6d88\u5206\u7d44\u64cd\u4f5c\u4f86\u53d6\u6d88\u878d\u5408\u6b65\u9a5f\u3002\u60a8\u53ef\u4ee5\u5728\u5176\u4ed6\u60c5\u6cc1\u4e0b\u4f7f\u7528\u5176\u4ed6\u65b9\u6cd5\u3002\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u7d66\u5b9a [GenerateSequence](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/io/GenerateSequence.html) \u8f49\u63db\u7684\u9023\u7e8c\u8f38\u51fa\u6642\uff0c\u8655\u7406\u91cd\u8907\u8f38\u51fa\u5c31\u4e0d\u6703\u6210\u7232\u554f\u984c\u3002\u5177\u6709\u91cd\u8907\u5bc6\u9470\u7684 [KV](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/values/KV.html) \u5c0d\u8c61\u6703\u522a\u9664\u5728\u7d44 ( [GroupByKey](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/GroupByKey.html) ) \u548c\u53d6\u6d88\u5206\u7d44 ( [Keys](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/Keys.html) ) \u8f49\u63db\u4e2d\u7684\u55ae\u500b\u5bc6\u9470\u3002\u5982\u9700\u5728\u5206\u7d44\u548c\u53d6\u6d88\u5206\u7d44\u64cd\u4f5c\u5f8c\u4fdd\u7559\u91cd\u8907\u9805\uff0c\u8acb\u4f7f\u7528\u96a8\u6a5f\u5bc6\u9470\u548c\u539f\u59cb\u8f38\u5165\u4f5c\u7232\u503c\u5275\u5efa `KV` \u914d\u5c0d\uff0c\u4f7f\u7528\u96a8\u6a5f\u5bc6\u9470\u9032\u884c\u5206\u7d44\uff0c\u7136\u5f8c\u7232\u6bcf\u500b\u5bc6\u9470\u767c\u51fa\u503c\u4f5c\u7232\u8f38\u51fa\u3002\n**\u6ce8\u610f** \uff1a\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 [Reshuffle](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/Reshuffle.html) \u8f49\u63db\uff0c\u4ee5\u9632\u6b62\u4f7f\u7528 Dataflow \u904b\u884c\u7a0b\u5e8f\u904b\u884c\u7684\u6d41\u6c34\u7dda\u7684\u5468\u570d\u8f49\u63db\u878d\u5408\u3002\u4f46\u662f\uff0c `Reshuffle` \u8f49\u63db\u7684\u526f\u4f5c\u7528\u662f\u7121\u6cd5\u5728\u4e0d\u540c\u7684 [Apache Beam \u904b\u884c\u7a0b\u5e8f](https://beam.apache.org/documentation/runners/capability-matrix/) \u4e4b\u9593\u79fb\u690d\u3002\n### \u4f7f\u7528 Apache Beam \u6307\u6a19\u6536\u96c6\u6d41\u6c34\u7dda\u6578\u64da\u5206\u6790\nApache Beam \u6307\u6a19\u662f\u4e00\u500b\u5be6\u7528\u7a0b\u5e8f\u985e\uff0c\u7528\u65bc\u751f\u6210\u5404\u7a2e\u6307\u6a19\uff0c\u4ee5\u5831\u544a\u904b\u884c\u6d41\u6c34\u7dda\u7684\u5c6c\u6027\u3002\u4f7f\u7528 Cloud Monitoring \u6642\uff0c [Apache Beam \u6307\u6a19\u53ef\u7528\u4f5c Cloud Monitoring \u81ea\u5b9a\u7fa9\u6307\u6a19](https://cloud.google.com/dataflow/docs/guides/using-stackdriver-monitoring?hl=zh-cn#custom_metrics) \u3002\n\u4ee5\u4e0b Java \u4ee3\u78bc\u6bb5\u662f\u5728 `DoFn` \u5b50\u985e\u4e2d\u4f7f\u7528\u7684 [Counter](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/metrics/Counter.html) \u6307\u6a19\u793a\u4f8b\u3002\n```\nfinal TupleTag<String> errorTag = new TupleTag<String>(){};final TupleTag<MockObject> successTag = new TupleTag<MockObject>(){};final class ParseEventFn extends DoFn<String, MyObject> {\u00a0 private final Counter malformedCounter = Metrics.counter(ParseEventFn.class, \"malformedJson\");\u00a0 private final Counter emptyCounter = Metrics.counter(ParseEventFn.class, \"emptyPayload\");\u00a0 private Gson gsonParser;\u00a0 @Setup\u00a0 public setup() {\u00a0 \u00a0 gsonParser = new Gson();\u00a0 }\u00a0 @ProcessElement\u00a0 public void processElement(ProcessContext c) {\u00a0 \u00a0 try {\u00a0 \u00a0 \u00a0 MyObject myObj = gsonParser.fromJson(c.element(), MyObject.class);\u00a0 \u00a0 \u00a0 if (myObj.getPayload() != null) {\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0Output the element if non-empty payload\u00a0 \u00a0 \u00a0 \u00a0 c.output(successTag, myObj);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 else {\u00a0 \u00a0 \u00a0 \u00a0 // Increment empty payload counter\u00a0 \u00a0 \u00a0 \u00a0 emptyCounter.inc();\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 \u00a0 catch (JsonParseException e) {\u00a0 \u00a0 \u00a0 // Increment malformed JSON counter\u00a0 \u00a0 \u00a0 malformedCounter.inc();\u00a0 \u00a0 \u00a0 // Output the element to dead-letter queue\u00a0 \u00a0 \u00a0 c.output(errorTag, c.element());\u00a0 \u00a0 }\u00a0 }}\n```\n\u793a\u4f8b\u4ee3\u78bc\u4f7f\u7528\u5169\u500b\u8a08\u6578\u5668\u3002\u4e00\u500b\u8a08\u6578\u5668\u8ddf\u8e64 JSON \u89e3\u6790\u5931\u6557 ( `malformedCounter` )\uff0c\u53e6\u4e00\u500b\u8a08\u6578\u5668\u8ddf\u8e64 JSON \u6d88\u606f\u662f\u5426\u6709\u6548\uff0c\u4f46\u5305\u542b\u7a7a\u7684\u8f09\u8377 ( `emptyCounter` )\u3002\u5728 Cloud Monitoring \u4e2d\uff0c\u81ea\u5b9a\u7fa9\u6307\u6a19\u540d\u7a31\u7232 `custom.googleapis.com/dataflow/malformedJson` \u548c `custom.googleapis.com/dataflow/emptyPayload` \u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u7fa9\u6307\u6a19\u5728 Cloud Monitoring \u4e2d\u5275\u5efa\u53ef\u8996\u5316\u548c\u63d0\u9192\u653f\u7b56\u3002\n## \u6e2c\u8a66\u6d41\u6c34\u7dda\n\u5728\u8edf\u4ef6\u958b\u767c\u4e2d\uff0c\u55ae\u5143\u6e2c\u8a66\u3001\u96c6\u6210\u6e2c\u8a66\u548c\u7aef\u5230\u7aef\u6e2c\u8a66\u662f\u5e38\u898b\u7684\u8edf\u4ef6\u6e2c\u8a66\u985e\u578b\u3002\u9019\u4e9b\u6e2c\u8a66\u985e\u578b\u4e5f\u9069\u7528\u65bc\u6578\u64da\u6d41\u6c34\u7dda\u3002\nApache Beam SDK \u63d0\u4f9b\u4e86\u5553\u7528\u9019\u4e9b\u6e2c\u8a66\u7684\u529f\u80fd\u3002\u7406\u60f3\u60c5\u6cc1\u4e0b\uff0c\u6bcf\u7a2e\u6e2c\u8a66\u985e\u578b\u90fd\u91dd\u5c0d\u4e0d\u540c\u7684\u90e8\u7f72\u74b0\u5883\u3002\u4e0b\u5716\u5c55\u793a\u4e86\u55ae\u5143\u6e2c\u8a66\u3001\u96c6\u6210\u6e2c\u8a66\u548c\u7aef\u5230\u7aef\u6e2c\u8a66\u5982\u4f55\u61c9\u7528\u65bc\u6d41\u6c34\u7dda\u548c\u6578\u64da\u7684\u4e0d\u540c\u90e8\u5206\u3002\n\u8a72\u5716\u986f\u793a\u4e86\u4e0d\u540c\u6e2c\u8a66\u7684\u7bc4\u570d\u53ca\u5176\u8207\u8f49\u63db\uff08 `DoFn` \u548c `PTransform` \u5b50\u985e\uff09\u3001\u6d41\u6c34\u7dda\u3001\u6578\u64da\u6e90\u548c\u6578\u64da\u63a5\u6536\u5668\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\n\u4ee5\u4e0b\u90e8\u5206\u4ecb\u7d39\u4e86\u5404\u7a2e\u6b63\u5f0f\u8edf\u4ef6\u6e2c\u8a66\u5982\u4f55\u61c9\u7528\u65bc\u4f7f\u7528 Dataflow \u7684\u6578\u64da\u6d41\u6c34\u7dda\u3002\u5728\u60a8\u901a\u8b80\u672c\u90e8\u5206\u6642\uff0c\u8acb\u8fd4\u56de\u6b64\u5716\u8868\uff0c\u77ad\u89e3\u4e0d\u540c\u985e\u578b\u7684\u6e2c\u8a66\u4e4b\u9593\u7684\u76f8\u95dc\u6027\u3002\n### \u6578\u64da\u62bd\u6a23\n\u5982\u9700\u5728 Dataflow \u6d41\u6c34\u7dda\u7684\u6bcf\u500b\u6b65\u9a5f\u4e2d\u89c0\u5bdf\u6578\u64da\uff0c\u8acb\u5728\u6e2c\u8a66\u671f\u9593\u5553\u7528 [\u6578\u64da\u62bd\u6a23](https://cloud.google.com/dataflow/docs/guides/data-sampling?hl=zh-cn) \u3002\u9019\u6a23\uff0c\u60a8\u5c31\u53ef\u4ee5\u67e5\u770b\u8f49\u63db\u7684\u8f38\u51fa\uff0c\u4ee5\u78ba\u4fdd\u8f38\u51fa\u6b63\u78ba\u3002\n### \u55ae\u5143\u6e2c\u8a66\n\u901a\u904e\u5c07\u9019\u4e9b\u8f49\u63db\u7684\u8f38\u51fa\u8207\u7d93\u904e\u9a57\u8b49\u7684\u6578\u64da\u8f38\u5165\u548c\u8f38\u51fa\u96c6\u9032\u884c\u6bd4\u8f03\uff0c\u55ae\u5143\u6e2c\u8a66\u53ef\u8a55\u4f30 `DoFn` \u5b50\u985e\u548c [\u8907\u5408\u8f49\u63db](https://beam.apache.org/documentation/programming-guide/#composite-transforms) \uff08 `PTransform` \u5b50\u985e\uff09\u7684\u6b63\u78ba\u904b\u884c\u3002\u901a\u5e38\uff0c\u958b\u767c\u8005\u53ef\u4ee5\u5728\u672c\u5730\u74b0\u5883\u4e2d\u904b\u884c\u9019\u4e9b\u6e2c\u8a66\u3002\u9019\u4e9b\u6e2c\u8a66\u9084\u53ef\u4ee5\u4f7f\u7528\u69cb\u5efa\u74b0\u5883\u4e2d\u7684\u6301\u7e8c\u96c6\u6210 (CI) \u901a\u904e\u55ae\u5143\u6e2c\u8a66\u81ea\u52d5\u529f\u80fd\uff0c\u81ea\u52d5\u904b\u884c\u3002\n\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f\u7528\u65bc\u4f7f\u7528\u8f03\u5c0f\u7684\u53c3\u8003\u6e2c\u8a66\u5b50\u96c6\u4f86\u904b\u884c\u55ae\u5143\u6e2c\u8a66\uff0c\u91cd\u9ede\u662f\u6e2c\u8a66\u8f49\u63db\u7684\u696d\u52d9\u908f\u8f2f\u3002\u6e2c\u8a66\u6578\u64da\u5fc5\u9808\u8db3\u5920\u5c0f\uff0c\u4ee5\u9069\u5408\u904b\u884c\u6e2c\u8a66\u7684\u8a08\u7b97\u6a5f\u4e0a\u7684\u672c\u5730\u5167\u5b58\u3002\nApache Beam SDK \u63d0\u4f9b\u4e86\u4e00\u500b\u540d\u7232 [TestPipeline](https://beam.apache.org/releases/javadoc/2.5.0/org/apache/beam/sdk/testing/TestPipeline.html) \u7684 JUnit \u898f\u5247\uff0c\u7528\u65bc\u55ae\u5143\u6e2c\u8a66\u5404\u500b\u8f49\u63db\uff08 `DoFn` \u5b50\u985e\uff09\u3001\u8907\u5408\u8f49\u63db\uff08 `PTransform` \u5b50\u985e\uff09\u4ee5\u53ca\u6574\u500b\u6d41\u6c34\u7dda\u3002\u60a8\u53ef\u4ee5\u5728 Apache Beam \u6d41\u6c34\u7dda\u904b\u884c\u7a0b\u5e8f\uff08\u4f8b\u5982\uff0c\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f\u6216 Dataflow \u904b\u884c\u7a0b\u5e8f\uff09\u4e0a\u4f7f\u7528 `TestPipeline` \uff0c\u4ee5\u4fbf\u901a\u904e [PAssert](https://beam.apache.org/releases/javadoc/2.5.0/org/apache/beam/sdk/testing/PAssert.html) \u7232 `PCollection` \u5c0d\u8c61\u5167\u5bb9\u61c9\u7528\u65b7\u8a00\uff0c\u5982\u4ee5\u4e0b [JUnit \u6e2c\u8a66\u985e](https://junit.org/junit5/docs/current/user-guide/#writing-tests-classes-and-methods) \u4ee3\u78bc\u6bb5\u6240\u793a\uff1a\n```\n@Rulepublic final transient TestPipeline p = TestPipeline.create();@Test@Category(NeedsRunner.class)public void myPipelineTest() throws Exception {\u00a0 final PCollection<String> pcol = p.apply(...)\u00a0 PAssert.that(pcol).containsInAnyOrder(...);\u00a0 p.run();}\n```\n\u901a\u904e\u5c07\u4ee3\u78bc\u5206\u89e3\u7232\u53ef\u91cd\u8907\u4f7f\u7528\u7684\u8f49\u63db\uff08\u4f8b\u5982\uff0c\u4f5c\u7232\u9802\u7d1a\u6216\u975c\u614b\u5d4c\u5957\u985e\uff09\uff0c\u60a8\u53ef\u4ee5\u7232\u6d41\u6c34\u7dda\u7684\u4e0d\u540c\u90e8\u5206\u5275\u5efa\u76ee\u6a19\u6e2c\u8a66\u3002\u9664\u4e86\u6e2c\u8a66\u7684\u512a\u52e2\u4e4b\u5916\uff0c\u53ef\u91cd\u8907\u4f7f\u7528\u7684\u8f49\u63db\u901a\u904e\u5c07\u6d41\u6c34\u7dda\u7684\u696d\u52d9\u908f\u8f2f\u5c01\u88dd\u6210\u7d44\u4ef6\u90e8\u5206\u4f86\u4fc3\u9032\u4ee3\u78bc\u7684\u53ef\u7dad\u8b77\u6027\u548c\u53ef\u91cd\u7528\u6027\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5982\u679c\u6d41\u6c34\u7dda\u4f7f\u7528\u533f\u540d\u5167\u90e8\u985e\u4f86\u5be6\u73fe\u8f49\u63db\uff0c\u5247\u6e2c\u8a66\u5404\u90e8\u5206\u6e2c\u8a66\u53ef\u80fd\u6bd4\u8f03\u56f0\u96e3\u3002\n\u4ee5\u4e0b Java \u4ee3\u78bc\u6bb5\u5c55\u793a\u4e86\u8f49\u63db\uff08\u4f5c\u7232\u533f\u540d\u5167\u90e8\u985e\uff09\u7684\u5be6\u73fe\uff0c\u4f46\u4e0d\u8f15\u6613\u5141\u8a31\u6e2c\u8a66\u3002\n```\nPipelineOptions options = PipelineOptionsFactory.create();Pipeline p = Pipeline.create(options)PCollection<Integer> output =\u00a0 \u00a0 p.apply(\"Read from text\", TextIO.Read.from(...))\u00a0 \u00a0 \u00a0 \u00a0 .apply(\"Split words\", ParDo.of(new DoFn() {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Untestable anonymous transform 1\u00a0 \u00a0 \u00a0 \u00a0 }))\u00a0 \u00a0 \u00a0 \u00a0 .apply(\"Generate anagrams\", ParDo.of(new DoFn() {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Untestable anonymous transform 2\u00a0 \u00a0 \u00a0 \u00a0 }))\u00a0 \u00a0 \u00a0 \u00a0 .apply(\"Count words\", Count.perElement());\n```\n\u5c07\u4e0a\u4e00\u793a\u4f8b\u8207\u4ee5\u4e0b\u793a\u4f8b\u9032\u884c\u6bd4\u8f03\uff0c\u5176\u4e2d\u533f\u540d\u5167\u90e8\u985e\u5df2\u88ab\u91cd\u69cb\u7232\u5df2\u547d\u540d\u7684\u5177\u9ad4 `DoFn` \u5b50\u985e\u3002\u60a8\u53ef\u4ee5\u7232\u69cb\u6210\u7aef\u5230\u7aef\u6d41\u6c34\u7dda\u7684\u6bcf\u500b\u5177\u9ad4 `DoFn` \u5b50\u985e\u5275\u5efa\u55ae\u7368\u7684\u55ae\u5143\u6e2c\u8a66\u3002\n```\nPipelineOptions options = PipelineOptionsFactory.create();Pipeline p = Pipeline.create(options)PCollection<Integer> output =\u00a0 \u00a0 p.apply(\"Read from text\", TextIO.Read.from(...))\u00a0 \u00a0 \u00a0 \u00a0 .apply(\"Split words\", ParDo.of(new SplitIntoWordsFn()))\u00a0 \u00a0 \u00a0 \u00a0 .apply(\"Generate anagrams\", ParDo.of(new GenerateAnagramsFn()))\u00a0 \u00a0 \u00a0 \u00a0 .apply(\"Count words\", Count.perElement());\n```\n\u6e2c\u8a66\u6bcf\u500b `DoFn` \u5b50\u985e\u985e\u4f3c\u65bc\u5c0d\u5305\u542b\u55ae\u500b\u8f49\u63db\u7684\u6279\u8655\u7406\u6d41\u6c34\u7dda\u9032\u884c\u55ae\u5143\u6e2c\u8a66\u3002\u4f7f\u7528 `Create` \u8f49\u63db\u5275\u5efa\u6e2c\u8a66\u6578\u64da\u7684 `PCollection` \u5c0d\u8c61\uff0c\u7136\u5f8c\u5c07\u5176\u50b3\u905e\u7d66 `DoFn` \u5c0d\u8c61\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 `PAssert` \u65b7\u8a00 `PCollection` \u5c0d\u8c61\u7684\u5167\u5bb9\u662f\u5426\u6b63\u78ba\u3002\u4ee5\u4e0b Java \u4ee3\u78bc\u793a\u4f8b\u4f7f\u7528 `PAssert` \u985e\u6aa2\u67e5\u662f\u5426\u5b58\u5728\u6b63\u78ba\u7684\u8f38\u51fa\u8868\u55ae\u3002\n```\n@Rulepublic final transient TestPipeline p = TestPipeline.create();@Test@Category(NeedsRunner.class)public void testGenerateAnagramsFn() {\u00a0 \u00a0 // Create the test input\u00a0 \u00a0 PCollection<String> words = p.apply(Create.of(\"friend\"));\u00a0 \u00a0 // Test a single DoFn using the test input\u00a0 \u00a0 PCollection<String> anagrams =\u00a0 \u00a0 \u00a0 \u00a0 words.apply(\"Generate anagrams\", ParDo.of(new GenerateAnagramsFn()));\u00a0 \u00a0 // Assert correct output from\u00a0 \u00a0 PAssert.that(anagrams).containsInAnyOrder(\u00a0 \u00a0 \u00a0 \u00a0 \"finder\", \"friend\", \"redfin\", \"refind\");\u00a0 \u00a0 p.run();}\n```\n### \u96c6\u6210\u6e2c\u8a66\n\u96c6\u6210\u6e2c\u8a66\u53ef\u9a57\u8b49\u6574\u500b\u6d41\u6c34\u7dda\u7684\u6b63\u5e38\u904b\u884c\u3002 \u8acb\u8003\u616e\u4ee5\u4e0b\u985e\u578b\u7684\u96c6\u6210\u6e2c\u8a66\uff1a\n- \u8f49\u63db\u96c6\u6210\u6e2c\u8a66\u53ef\u8a55\u4f30\u69cb\u6210\u6578\u64da\u6d41\u6c34\u7dda\u7684\u6240\u6709\u55ae\u500b\u8f49\u63db\u7684\u96c6\u6210\u529f\u80fd\u3002\u60a8\u53ef\u4ee5\u5c07\u8f49\u63db\u96c6\u6210\u6e2c\u8a66\u8996\u7232\u6574\u500b\u6d41\u6c34\u7dda\u7684\u55ae\u5143\u6e2c\u8a66\uff0c\u4e0d\u5305\u62ec\u8207\u5916\u90e8\u6578\u64da\u6e90\u548c\u63a5\u6536\u5668\u7684\u96c6\u6210\u3002Apache Beam SDK \u63d0\u4f9b\u4e86\u7232\u6578\u64da\u6d41\u6c34\u7dda\u63d0\u4f9b\u6e2c\u8a66\u6578\u64da\u4e26\u9a57\u8b49\u8655\u7406\u7d50\u679c\u7684\u65b9\u6cd5\u3002\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f\u7528\u65bc\u904b\u884c\u8f49\u63db\u96c6\u6210\u6e2c\u8a66\u3002\n- \u6b64\u4fc2\u7d71\u96c6\u6210\u6e2c\u8a66\u53ef\u8a55\u4f30\u6578\u64da\u6d41\u6c34\u7dda\u8207\u5be6\u6642\u6578\u64da\u6e90\u548c\u63a5\u6536\u5668\u7684\u96c6\u6210\u3002\u8981\u4f7f\u6d41\u6c34\u7dda\u80fd\u5920\u8207\u5916\u90e8\u7cfb\u7d71\u901a\u4fe1\uff0c\u60a8\u9700\u8981\u914d\u7f6e\u6e2c\u8a66\u4ee5\u4f7f\u7528\u9019\u4e9b\u6191\u64da\u4f86\u8a2a\u554f\u5916\u90e8\u670d\u52d9\u3002\u6d41\u8655\u7406\u6d41\u6c34\u7dda\u662f\u7121\u9650\u671f\u904b\u884c\u7684\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u78ba\u5b9a\u4f55\u6642\u4ee5\u53ca\u5982\u4f55\u505c\u6b62\u6b63\u5728\u904b\u884c\u7684\u6d41\u6c34\u7dda\u3002\u901a\u904e\u4f7f\u7528\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f\u904b\u884c\u7cfb\u7d71\u96c6\u6210\u6e2c\u8a66\uff0c\u60a8\u53ef\u4ee5\u5feb\u901f\u9a57\u8b49\u6d41\u6c34\u7dda\u8207\u5176\u4ed6\u7cfb\u7d71\u4e4b\u9593\u7684\u96c6\u6210\uff0c\u800c\u7121\u9700\u63d0\u4ea4 Dataflow \u4f5c\u696d\u4e26\u7b49\u5f85\u5b83\u5b8c\u6210\u3002 **\u6ce8\u610f** \uff1a\u5c0f\u578b [\u7aef\u5230\u7aef\u6e2c\u8a66](#end-to-end-tests) \u901a\u5e38\u7528\u65bc\u4ee3\u66ff\u7cfb\u7d71\u96c6\u6210\u6e2c\u8a66\u3002\u7aef\u5230\u7aef\u6e2c\u8a66\u4f7f\u7528 Dataflow \u904b\u884c\u7a0b\u5e8f\u548c\u5c0f\u578b\u6e2c\u8a66\u6578\u64da\u96c6\u4f86\u9a57\u8b49\u6574\u500b\u6d41\u6c34\u7dda\u662f\u5426\u6b63\u5e38\u904b\u884c\uff0c\u5305\u62ec\u5176\u8207\u6578\u64da\u6e90\u3001\u6578\u64da\u63a5\u6536\u5668\u548c\u5176\u4ed6\u5916\u90e8\u7cfb\u7d71\u7684\u96c6\u6210\u3002\n\u60a8\u53ef\u4ee5\u8a2d\u8a08\u8f49\u63db\u548c\u7cfb\u7d71\u96c6\u6210\u6e2c\u8a66\uff0c\u4ee5\u4fbf\u5feb\u901f\u9032\u884c\u7f3a\u9677\u6aa2\u6e2c\u548c\u53cd\u994b\uff0c\u800c\u7121\u9700\u62d6\u6162\u958b\u767c\u8005\u5de5\u4f5c\u6548\u7387\u3002\u5c0d\u65bc\u904b\u884c\u6642\u9593\u8f03\u9577\u7684\u6e2c\u8a66\uff08\u4f8b\u5982\u4f5c\u7232 Dataflow \u4f5c\u696d\u904b\u884c\u7684\u6e2c\u8a66\uff09\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u904b\u884c\u983b\u7387\u8f03\u4f4e\u7684\u7aef\u5230\u7aef\u6e2c\u8a66\u3002\n\u53ef\u4ee5\u5c07\u6578\u64da\u6d41\u6c34\u7dda\u8996\u7232\u4e00\u500b\u6216\u591a\u500b\u76f8\u95dc\u8f49\u63db\u3002\u60a8\u53ef\u4ee5\u7232\u6d41\u6c34\u7dda\u5275\u5efa\u5c01\u88dd\u8907\u5408\u8f49\u63db\uff0c\u4e26\u4f7f\u7528 [TestPipeline](https://beam.apache.org/releases/javadoc/2.5.0/org/apache/beam/sdk/testing/TestPipeline.html) \u5c0d\u6574\u500b\u6d41\u6c34\u7dda\u57f7\u884c\u96c6\u6210\u6e2c\u8a66\u3002\u6839\u64da\u60a8\u662f\u8981\u5728\u6279\u91cf\u6a21\u5f0f\u9084\u662f\u6d41\u5f0f\u6a21\u5f0f\u4e0b\u6e2c\u8a66\u6d41\u6c34\u7dda\uff0c\u8acb\u4f7f\u7528 [Create](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/transforms/Create.html) \u6216 [TestStream](https://beam.apache.org/releases/javadoc/current/org/apache/beam/sdk/testing/TestStream.html) \u8f49\u63db\u3002\n\u5728\u751f\u7522\u74b0\u5883\u4e2d\uff0c\u60a8\u7684\u6d41\u6c34\u7dda\u53ef\u80fd\u8207\u4e0d\u540c\u7684\u6578\u64da\u6e90\u548c\u63a5\u6536\u5668\u96c6\u6210\u3002\u4f46\u662f\uff0c\u5c0d\u65bc\u55ae\u5143\u6e2c\u8a66\u548c\u8f49\u63db\u96c6\u6210\u6e2c\u8a66\uff0c\u8acb\u901a\u904e\u63d0\u4f9b\u6e2c\u8a66\u8f38\u5165\u4e26\u76f4\u63a5\u9a57\u8b49\u8f38\u51fa\uff0c\u5c08\u6ce8\u65bc\u9a57\u8b49\u6d41\u6c34\u7dda\u4ee3\u78bc\u7684\u696d\u52d9\u908f\u8f2f\u3002\u9664\u4e86\u7c21\u5316\u6e2c\u8a66\u4e4b\u5916\uff0c\u6b64\u65b9\u6cd5\u9084\u53ef\u8b93\u60a8\u5c07\u6d41\u6c34\u7dda\u7279\u6709\u554f\u984c\u8207\u53ef\u80fd\u88ab\u6578\u64da\u6e90\u548c\u63a5\u6536\u5668\u5f15\u767c\u7684\u554f\u984c\u9694\u96e2\u958b\u4f86\u3002\n\u5c0d\u65bc\u6279\u8655\u7406\u6d41\u6c34\u7dda\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 `Create` \u8f49\u63db\u5f9e\u6a19\u6e96\u5167\u5b58\u96c6\u5408\uff08\u4f8b\u5982 Java `List` \u5c0d\u8c61\uff09\u5275\u5efa\u8f38\u5165\u6e2c\u8a66\u6578\u64da\u7684 `PCollection` \u5c0d\u8c61\u3002\u5982\u679c\u6e2c\u8a66\u6578\u64da\u8db3\u5920\u5c0f\u53ef\u5305\u542b\u5728\u4ee3\u78bc\u4e2d\uff0c\u5247\u4f7f\u7528 `Create` \u8f49\u63db\u662f\u5408\u9069\u7684\u3002\u7136\u5f8c\uff0c\u60a8\u53ef\u4ee5\u5c0d\u8f38\u51fa `PCollection` \u5c0d\u8c61\u4f7f\u7528 `PAssert` \u4f86\u78ba\u5b9a\u6d41\u6c34\u7dda\u4ee3\u78bc\u7684\u6b63\u78ba\u6027\u3002\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f\u548c Dataflow Runner \u652f\u6301\u6b64\u65b9\u6cd5\u3002\n\u4ee5\u4e0b Java \u4ee3\u78bc\u6bb5\u986f\u793a\u4e86\u8907\u5408\u8f49\u63db\u4e2d `PCollection` \u5c0d\u8c61\uff08\u5305\u542b\u69cb\u6210\u6d41\u6c34\u7dda\u7684\u90e8\u5206\u6216\u6240\u6709\u8f49\u63db\uff09\u7684\u65b7\u8a00 ( `WeatherStatsPipeline` )\u3002\u8a72\u65b9\u6cd5\u985e\u4f3c\u65bc\u6d41\u6c34\u7dda\u4e2d\u55ae\u500b\u8f49\u63db\u7684\u7d44\u5408\u3002\n```\nprivate class WeatherStatsPipeline extends\u00a0 \u00a0 PTransform<PCollection<Integer>, PCollection<WeatherSummary>> {\u00a0 @Override\u00a0 public PCollection<WeatherSummary> expand(PCollection<Integer> input) {\u00a0 \u00a0 // Pipeline transforms \u2026\u00a0 }}@Rulepublic final transient TestPipeline p = TestPipeline.create();@Test@Category(NeedsRunner.class)public void testWeatherPipeline() {\u00a0 // Create test input consisting of temperature readings\u00a0 PCollection<Integer> tempCelsius =\u00a0 \u00a0 \u00a0 p.apply(Create.of(24, 22, 20, 22, 21, 21, 20));\u00a0 // CalculateWeatherStats calculates the min, max, and average temperature\u00a0 PCollection<WeatherSummary> result =\u00a0 \u00a0 \u00a0 tempCelsius.apply(\"Calculate weather statistics\", new WeatherStatsPipeline());\u00a0 \u00a0// Assert correct output from CalculateWeatherStats\u00a0 \u00a0PAssert.thatSingleton(result).isEqualTo(new WeatherSummary.Builder()\u00a0 \u00a0 \u00a0 \u00a0.withAverageTemp(21)\u00a0 \u00a0 \u00a0 \u00a0.withMaxTemp(24)\u00a0 \u00a0 \u00a0 \u00a0.withMinTemp(20)\u00a0 \u00a0 \u00a0 \u00a0.build());\u00a0 \u00a0p.run();}\n```\n\u8981\u6e2c\u8a66\u6578\u64da\u9078\u53d6\u884c\u7232\uff0c\u60a8\u9084\u53ef\u4ee5\u4f7f\u7528 `Create` \u8f49\u63db\u4f86\u5275\u5efa\u5e36\u6709\u6642\u9593\u6233\u7684\u5143\u7d20\uff0c\u5982\u4ee5\u4e0b\u4ee3\u78bc\u6bb5\u6240\u793a\uff1a\n```\nprivate static final Duration WINDOW_DURATION = Duration.standardMinutes(3);@Rulepublic final transient TestPipeline p = TestPipeline.create();@Test@Category(NeedsRunner.class)public void testWindowedData() {\u00a0 \u00a0 PCollection<String> input =\u00a0 \u00a0 \u00a0 \u00a0 p.apply(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Create.timestamped(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TimestampedValue.of(\"a\", new Instant(0L)),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TimestampedValue.of(\"a\", new Instant(0L)),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TimestampedValue.of(\"b\", new Instant(0L)),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TimestampedValue.of(\"c\", new Instant(0L)),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TimestampedValue.of(\"c\", new Instant(0L).plus(WINDOW_DURATION)))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .withCoder(StringUtf8Coder.of()));\u00a0 \u00a0PCollection<KV<String, Long>> windowedCount =\u00a0 \u00a0 \u00a0 \u00a0input\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0.apply(Window.into(FixedWindows.of(WINDOW_DURATION)))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0.apply(Count.perElement());\u00a0 \u00a0 PAssert.that(windowedCount)\u00a0 \u00a0 \u00a0 \u00a0 .containsInAnyOrder(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Output from first window\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 KV.of(\"a\", 2L),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 KV.of(\"b\", 1L),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 KV.of(\"c\", 1L),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Output from second window\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 KV.of(\"c\", 1L));\u00a0 \u00a0p.run();}\n```\n\u6d41\u5f0f\u50b3\u8f38\u6d41\u6c34\u7dda\u5305\u542b\u5047\u8a2d\u6578\u64da\uff0c\u5b9a\u7fa9\u5982\u4f55\u8655\u7406\u7121\u754c\u9650\u6578\u64da\u3002\u9019\u4e9b\u5047\u8a2d\u901a\u5e38\u8207\u771f\u5be6\u60c5\u6cc1\u4e2d\u6578\u64da\u7684\u6642\u9593\u7dda\u6709\u95dc\uff0c\u56e0\u6b64\u5047\u8a2d\u8b49\u660e\u7684\u662f\u6b63\u78ba\u9084\u662f\u932f\u8aa4\u6703\u5f71\u97ff\u6b63\u78ba\u6027\u3002\u7406\u60f3\u60c5\u6cc1\u4e0b\uff0c\u6d41\u5f0f\u50b3\u8f38\u6d41\u6c34\u7dda\u7684\u96c6\u6210\u6e2c\u8a66\u5305\u62ec\u6a21\u64ec\u6d41\u5f0f\u6578\u64da\u5230\u9054\u7684\u4e0d\u78ba\u5b9a\u6027\u6e2c\u8a66\u3002\n\u7232\u4e86 [\u5553\u7528\u6b64\u985e\u6e2c\u8a66](https://beam.apache.org/blog/2016/10/20/test-stream.html) \uff0cApache Beam SDK \u63d0\u4f9b\u4e86 [TestStream](https://github.com/apache/beam/blob/master/sdks/java/core/src/main/java/org/apache/beam/sdk/testing/TestStream.java) \u985e\u4f86\u6a21\u64ec\u5143\u7d20\u8a08\u6642\u5c0d\u65bc\u6578\u64da\u6d41\u6c34\u73fe\u7d50\u679c\u7684\u6548\u679c\uff08\u63d0\u524d\u3001\u53ca\u6642\u6216\u5ef6\u9072\u6578\u64da\uff09\u3002\u60a8\u53ef\u4ee5\u5c07\u9019\u4e9b\u6e2c\u8a66\u8207 [PAssert](https://beam.apache.org/releases/javadoc/2.15.0/org/apache/beam/sdk/testing/PAssert.html) \u985e\u7d50\u5408\u4f7f\u7528\uff0c\u4ee5\u9a57\u8b49\u9810\u671f\u7684\u7d50\u679c\u3002\nDirect Runner \u548c Dataflow Runner \u652f\u6301 `TestStream` \u3002\u4ee5\u4e0b\u4ee3\u78bc\u793a\u4f8b\u5275\u5efa `TestStream` \u8f49\u63db\uff1a\n```\nfinal Duration WINDOW_DURATION = Duration.standardMinutes(3);@Rulepublic final transient TestPipeline p = TestPipeline.create();@Test@Category(NeedsRunner.class)public void testDroppedLateData() {\u00a0 \u00a0TestStream<String> input = TestStream.create(StringUtf8Coder.of())\u00a0 \u00a0 \u00a0 // Add elements arriving before the watermark\u00a0 \u00a0 \u00a0 .addElements(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0TimestampedValue.of(\"a\", new Instant(0L)),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0TimestampedValue.of(\"a\", new Instant(0L)),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0TimestampedValue.of(\"b\", new Instant(0L)),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0TimestampedValue.of(\"c\", new Instant(0L).plus(Duration.standardMinutes(3))))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0// Advance the watermark past the end of the window\u00a0 \u00a0 \u00a0 .advanceWatermarkTo(new Instant(0L).plus(WINDOW_DURATION).plus(Duration.standardMinutes(1)))\u00a0 \u00a0 \u00a0 // Add elements which will be dropped due to lateness\u00a0 \u00a0 \u00a0 .addElements(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0TimestampedValue.of(\"c\", new Instant(0L)))\u00a0 \u00a0 \u00a0 // Advance the watermark to infinity which will close all windows\u00a0 \u00a0 \u00a0 .advanceWatermarkToInfinity();\u00a0 \u00a0 \u00a0 PCollection<KV<String, Long>> windowedCount =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p.apply(input)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0.apply(Window.into(FixedWindows.of(WINDOW_DURATION)))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0.apply(Count.perElement());\u00a0 \u00a0PAssert.that(windowedCount)\u00a0 \u00a0 \u00a0 .containsInAnyOrder(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Output from first window\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 KV.of(\"a\", 2L),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 KV.of(\"b\", 1L),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 KV.of(\"c\", 1L));\u00a0 \u00a0p.run();}\n```\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3 `TestStream` \uff0c\u8acb\u53c3\u95b1 [\u5728 Apache Beam \u4e2d\u6e2c\u8a66\u7121\u754c\u9650\u6d41\u6c34\u7dda](https://beam.apache.org/blog/2016/10/20/test-stream.html) \u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u4f7f\u7528 Apache Beam SDK \u9032\u884c\u55ae\u5143\u6e2c\u8a66\uff0c\u8acb\u53c3\u95b1 [Apache Beam \u6587\u6a94](https://beam.apache.org/documentation/pipelines/test-your-pipeline/) \u3002\n[Direct Runner](https://beam.apache.org/documentation/runners/direct/) \u53ef\u4ee5\u8207 Google Cloud \u670d\u52d9\u96c6\u6210\uff0c\u56e0\u6b64\u672c\u5730\u74b0\u5883\u4e2d\u7684\u81e8\u6642\u6e2c\u8a66\u548c\u7cfb\u7d71\u96c6\u6210\u6e2c\u8a66\u53ef\u4ee5\u4f7f\u7528 Pub/Sub\u3001BigQuery \u548c\u9700\u8981\u7684\u5176\u4ed6\u670d\u52d9\u3002\u4f7f\u7528\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f\u6642\uff0c\u60a8\u7684\u6d41\u6c34\u7dda\u5c07\u4f5c\u7232\u60a8\u4f7f\u7528 [gcloud](https://cloud.google.com/sdk/gcloud/reference/config/set?hl=zh-cn) \u547d\u4ee4\u884c\u5de5\u5177\u914d\u7f6e\u7684\u7528\u6236\u8cec\u865f\uff0c\u6216\u4ee5\u60a8\u4f7f\u7528 [GOOGLE_APPLICATION_CREDENTIALS](https://cloud.google.com/docs/authentication/getting-started?hl=zh-cn#setting_the_environment_variable) \u74b0\u5883\u8b8a\u91cf\u6307\u5b9a\u7684\u7528\u6236\u8cec\u865f\u3002\u56e0\u6b64\uff0c\u5728\u904b\u884c\u6d41\u6c34\u7dda\u4e4b\u524d\uff0c\u60a8\u5fc5\u9808\u7232\u6b64\u8cec\u865f\u6388\u4e88\u91dd\u5c0d\u4efb\u4f55\u5fc5\u9700\u8cc7\u6e90\u6240\u9700\u7684\u8db3\u5920\u6b0a\u9650\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Dataflow \u5b89\u5168\u6027\u548c\u6b0a\u9650](https://cloud.google.com/dataflow/docs/concepts/security-and-permissions?hl=zh-cn) \u3002\n\u5c0d\u65bc\u5b8c\u5168\u672c\u5730\u96c6\u6210\u6e2c\u8a66\uff0c\u60a8\u53ef\u4ee5\u91dd\u5c0d\u67d0\u4e9b Google Cloud \u670d\u52d9\u4f7f\u7528\u672c\u5730\u6a21\u64ec\u5668\u3002\u672c\u5730\u6a21\u64ec\u5668\u9069\u7528\u65bc [Pub/Sub](https://cloud.google.com/pubsub/docs/emulator?hl=zh-cn) \u548c [Bigtable](https://cloud.google.com/bigtable/docs/emulator?hl=zh-cn) \u3002\n\u5c0d\u65bc\u6d41\u5f0f\u50b3\u8f38\u6d41\u6c34\u7dda\u7684\u7cfb\u7d71\u96c6\u6210\u6e2c\u8a66\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 [setBlockOnRun](https://beam.apache.org/releases/javadoc/2.11.0/org/apache/beam/runners/direct/DirectOptions.html#setBlockOnRun--) \u65b9\u6cd5\uff08\u5728 `DirectOptions` \u754c\u9762\u4e2d\u5b9a\u7fa9\uff09\uff0c\u8b93\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f\u7570\u6b65\u904b\u884c\u6d41\u6c34\u7dda\u3002\u5426\u5247\uff0c\u6d41\u6c34\u7dda\u57f7\u884c\u5c07\u963b\u6b62\u8abf\u7528\u7236\u7d1a\u9032\u7a0b\uff08\u4f8b\u5982\uff0c\u69cb\u5efa\u6d41\u6c34\u7dda\u4e2d\u7684\u8173\u672c\uff09\uff0c\u76f4\u5230\u624b\u52d5\u505c\u6b62\u6d41\u6c34\u7dda\u7232\u6b62\u3002\u5982\u679c\u60a8\u7570\u6b65\u904b\u884c\u6d41\u6c34\u7dda\uff0c\u5247\u53ef\u4ee5\u4f7f\u7528\u8fd4\u56de\u7684 [PipelineResult](https://beam.apache.org/releases/javadoc/2.11.0/org/apache/beam/sdk/PipelineResult.html) \u5be6\u4f8b\u53d6\u6d88\u6d41\u6c34\u7dda\u7684\u57f7\u884c\uff0c\u5982\u4ee5\u4e0b\u4ee3\u78bc\u793a\u4f8b\u6240\u793a\uff1a\n```\npublic interface StreamingIntegrationTestOptions extends\u00a0 \u00a0DirectOptions, StreamingOptions, MyOtherPipelineOptions {\u00a0 \u00a0...}@Rulepublic final transient TestPipeline p = TestPipeline.create();@Test@Category(NeedsRunner.class)public void testNonBlockingPipeline() {\u00a0 \u00a0 StreamingIntegrationTestOptions options =\u00a0 \u00a0 \u00a0 \u00a0 p.getOptions().as(StreamingIntegrationOptions.class);\u00a0 \u00a0 options.setBlockOnRun(false); // Set non-blocking pipeline execution\u00a0 \u00a0 options.setStreaming(true); // Set streaming mode\u00a0 \u00a0 p.apply(...); // Apply pipeline transformations\u00a0 \u00a0 PipelineResult result = p.run(); // Run the pipeline\u00a0 \u00a0 // Generate input, verify output, etc\u00a0 \u00a0 ...\u00a0 \u00a0 // Later on, cancel the pipeline using the previously returned\u00a0 \u00a0 result.cancel();}\n```\n### \u7aef\u5230\u7aef\u6e2c\u8a66\n\u7aef\u5230\u7aef\u6e2c\u8a66\u5728\u8207\u751f\u7522\u74b0\u5883\u975e\u5e38\u76f8\u4f3c\u7684\u689d\u4ef6\u4e0b\uff0c\u901a\u904e\u5728 Dataflow Runner \u4e0a\u904b\u884c\u60a8\u7684\u7aef\u5230\u7aef\u6d41\u6c34\u7dda\u4f86\u9a57\u8b49\u5176\u6b63\u78ba\u64cd\u4f5c\u3002\u9019\u4e9b\u6e2c\u8a66\u6703\u9a57\u8b49\u6d41\u6c34\u7dda\u908f\u8f2f\u662f\u5426\u4f7f\u7528 Dataflow \u904b\u884c\u7a0b\u5e8f\u6b63\u5e38\u904b\u884c\uff0c\u4ee5\u53ca\u6e2c\u8a66\u6d41\u6c34\u7dda\u5728\u751f\u7522\u7d1a\u8ca0\u8f09\u4e0b\u662f\u5426\u6309\u9810\u671f\u904b\u884c\u3002\u60a8\u901a\u5e38\u5728\u5df2\u6307\u5b9a\u7232\u9810\u751f\u7522\u74b0\u5883\u7684\u5c08\u7528 Google Cloud \u9805\u76ee\u4e2d\u904b\u884c\u7aef\u5230\u7aef\u6e2c\u8a66\u3002\n\u5982\u9700\u4ee5\u4e0d\u540c\u898f\u6a21\u6e2c\u8a66\u6d41\u6c34\u7dda\uff0c\u8acb\u4f7f\u7528\u4e0d\u540c\u985e\u578b\u7684\u7aef\u5230\u7aef\u6e2c\u8a66\uff0c\u4f8b\u5982\uff1a\n- \u4f7f\u7528\u6e2c\u8a66\u6578\u64da\u96c6\u7684\u4e00\u5c0f\u90e8\u5206\uff08\u4f8b\u5982 1%\uff09\u904b\u884c\u5c0f\u898f\u6a21\u7684\u7aef\u5230\u7aef\u6e2c\u8a66\uff0c\u4ee5\u5728\u9810\u751f\u7522\u74b0\u5883\u4e2d\u5feb\u901f\u9a57\u8b49\u6d41\u6c34\u7dda\u529f\u80fd\u3002\n- \u4f7f\u7528\u5b8c\u6574\u6e2c\u8a66\u6578\u64da\u96c6\u904b\u884c\u5927\u898f\u6a21\u7684\u7aef\u5230\u7aef\u6e2c\u8a66\uff0c\u4ee5\u9a57\u8b49\u985e\u4f3c\u751f\u7522\u6578\u64da\u5377\u548c\u689d\u4ef6\u4e0b\u7684\u6d41\u6c34\u7dda\u529f\u80fd\u3002\n\u5c0d\u65bc\u6d41\u5f0f\u8655\u7406\u6d41\u6c34\u7dda\uff0c\u5982\u679c\u751f\u7522\u6d41\u6c34\u7dda\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u6578\u64da\uff0c\u6211\u5011\u5efa\u8b70\u8207\u751f\u7522\u6d41\u6c34\u7dda\u4e26\u884c\u904b\u884c\u3002\u6b64\u904e\u7a0b\u53ef\u8b93\u60a8\u6bd4\u8f03\u7d50\u679c\u548c\u64cd\u4f5c\u884c\u7232\uff0c\u4f8b\u5982\u81ea\u52d5\u64f4\u7e2e\u548c\u6027\u80fd\u3002\n\u7aef\u5230\u7aef\u6e2c\u8a66\u53ef\u5e6b\u52a9\u9810\u6e2c\u6d41\u6c34\u7dda\u6eff\u8db3\u751f\u7522 SLO \u7684\u80fd\u529b\u3002\u9810\u751f\u7522\u74b0\u5883\u6703\u5728\u985e\u4f3c\u751f\u7522\u74b0\u5883\u7684\u689d\u4ef6\u4e0b\u6e2c\u8a66\u6d41\u6c34\u7dda\u3002\u5728\u7aef\u5230\u7aef\u6e2c\u8a66\u4e2d\uff0c\u6d41\u6c34\u7dda\u4f7f\u7528 Dataflow Runner \u904b\u884c\uff0c\u4ee5\u8655\u7406\u8207\u751f\u7522\u6578\u64da\u96c6\u5339\u914d\u6216\u975e\u5e38\u76f8\u4f3c\u7684\u5b8c\u6574\u53c3\u8003\u6578\u64da\u96c6\u3002\n\u53ef\u80fd\u7121\u6cd5\u751f\u6210\u5408\u6210\u6578\u64da\u4ee5\u7528\u65bc\u6e2c\u8a66\u6e96\u78ba\u6a21\u64ec\u771f\u5be6\u6578\u64da\u3002\u8981\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u4e00\u7a2e\u65b9\u6cd5\u662f\u4f7f\u7528\u751f\u7522\u6578\u64da\u6e90\u4e2d\u7684\u6e05\u7406\u63d0\u53d6\u4f86\u5275\u5efa\u53c3\u8003\u6578\u64da\u96c6\uff0c\u5176\u4e2d\u4efb\u4f55\u654f\u611f\u6578\u64da\u5747\u901a\u904e\u9069\u7576\u8f49\u63db\u9032\u884c\u53bb\u6a19\u8b58\u5316\u3002\u7232\u6b64\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u4f7f\u7528 [\u654f\u611f\u6578\u64da\u4fdd\u8b77](https://cloud.google.com/dlp/docs?hl=zh-cn) \u3002\u654f\u611f\u6578\u64da\u4fdd\u8b77\u53ef\u4ee5\u6aa2\u6e2c\u4e00\u7cfb\u5217\u5167\u5bb9\u985e\u578b\u548c\u6578\u64da\u6e90\u4e2d\u7684\u654f\u611f\u6578\u64da\uff0c\u4e26\u61c9\u7528\u4e00\u7cfb\u5217\u53bb\u6a19\u8b58\u5316\u65b9\u6cd5\uff0c\u5305\u62ec\u96b1\u53bb\u3001\u906e\u84cb\u3001\u4fdd\u7559\u52a0\u5bc6\u683c\u5f0f\u548c\u65e5\u671f\u504f\u79fb\u3002\n\u5728\u5c0d\u5927\u578b\u6e2c\u8a66\u6578\u64da\u96c6\u904b\u884c\u5b8c\u6574\u7684\u7aef\u5230\u7aef\u6e2c\u8a66\u4e4b\u524d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4e00\u5c0f\u90e8\u5206\u6e2c\u8a66\u6578\u64da\uff08\u4f8b\u5982 1%\uff09\u904b\u884c\u6e2c\u8a66\uff0c\u4e26\u9a57\u8b49\u53ef\u5728\u77ed\u6642\u9593\u5167\u6536\u5230\u9810\u671f\u884c\u7232\u3002\u8207\u4f7f\u7528\u76f4\u63a5\u904b\u884c\u7a0b\u5e8f\u9032\u884c\u96c6\u6210\u6e2c\u8a66\u4e00\u6a23\uff0c\u5728\u4f7f\u7528 Dataflow Runner \u904b\u884c\u6d41\u6c34\u7dda\u6642\uff0c\u60a8\u53ef\u4ee5\u5728 `PCollection` \u5c0d\u8c61\u4e0a\u4f7f\u7528 `PAssert` \u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3 `PAssert` \uff0c\u8acb\u53c3\u95b1\u672c\u9801\u9762\u4e0a\u7684 [\u55ae\u5143\u6e2c\u8a66](#unit-tests) \u90e8\u5206\u3002\n\u6839\u64da\u60a8\u7684\u7528\u4f8b\uff0c\u5f9e\u7aef\u5230\u7aef\u6e2c\u8a66\u9a57\u8b49\u975e\u5e38\u5927\u7684\u8f38\u51fa\u53ef\u80fd\u4e0d\u73fe\u5be6\u4e14\u6210\u672c\u9ad8\u6602\uff0c\u6216\u8005\u5b58\u5728\u5176\u4ed6\u96e3\u984c\u3002\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u60a8\u53ef\u4ee5\u6539\u7232\u5f9e\u8f38\u51fa\u7d50\u679c\u96c6\u4e2d\u9a57\u8b49\u4ee3\u8868\u6027\u6a23\u672c\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 BigQuery \u5c0d\u8f38\u51fa\u884c\u9032\u884c\u63a1\u6a23\uff0c\u4e26\u5c07\u8f38\u51fa\u884c\u8207\u9810\u671f\u7d50\u679c\u7684\u53c3\u8003\u6578\u64da\u96c6\u9032\u884c\u6bd4\u8f03\u3002\n\u5c0d\u65bc\u6d41\u5f0f\u8655\u7406\u6d41\u6c34\u7dda\uff0c\u4f7f\u7528\u5408\u6210\u6578\u64da\u6a21\u64ec\u5be6\u969b\u6d41\u5f0f\u50b3\u8f38\u689d\u4ef6\u53ef\u80fd\u4e26\u975e\u6613\u4e8b\u3002\u7232\u7aef\u5230\u7aef\u6e2c\u8a66\u63d0\u4f9b\u6d41\u5f0f\u6578\u64da\u7684\u5e38\u898b\u65b9\u6cd5\u662f\u5c07\u6e2c\u8a66\u8207\u751f\u7522\u6578\u64da\u6e90\u96c6\u6210\u3002\u5982\u679c\u60a8\u4f7f\u7528 Pub/Sub \u4f5c\u7232\u6578\u64da\u6e90\uff0c\u5247\u53ef\u4ee5\u901a\u904e\u5c0d\u73fe\u6709\u4e3b\u984c\u9032\u884c\u984d\u5916\u8a02\u95b1\uff0c\u91dd\u5c0d\u7aef\u5230\u7aef\u6e2c\u8a66\u5553\u7528\u55ae\u7368\u7684\u6578\u64da\u6d41\u3002\u7136\u5f8c\uff0c\u60a8\u53ef\u4ee5\u6bd4\u8f03\u4f7f\u7528\u76f8\u540c\u6578\u64da\u7684\u4e0d\u540c\u6d41\u6c34\u7dda\u7684\u7d50\u679c\uff0c\u9019\u5c0d\u65bc\u9a57\u8b49\u5176\u4ed6\u751f\u7522\u6d41\u6c34\u7dda\u548c\u751f\u7522\u6d41\u6c34\u7dda\u975e\u5e38\u6709\u7528\u3002\n\u4e0b\u5716\u5c55\u793a\u4e86\u751f\u7522\u6d41\u6c34\u7dda\u548c\u6e2c\u8a66\u6d41\u6c34\u7dda\u5982\u4f55\u5728\u4e0d\u540c\u7684 [\u90e8\u7f72\u74b0\u5883](#deployment-environment) \u4e2d\u4e26\u884c\u904b\u884c\u3002\n\u5728\u8a72\u5716\u4e2d\uff0c\u5169\u500b\u6d41\u6c34\u7dda\u5f9e\u540c\u4e00 Pub/Sub \u4e3b\u984c\u8b80\u53d6\u6578\u64da\uff0c\u4f46\u5b83\u5011\u4f7f\u7528\u55ae\u7368\u7684\u8a02\u95b1\u3002\u6b64\u8a2d\u7f6e\u53ef\u8b93\u9019\u5169\u500b\u6d41\u6c34\u7dda\u55ae\u7368\u8655\u7406\u76f8\u540c\u7684\u6578\u64da\uff0c\u9084\u53ef\u4ee5\u6bd4\u8f03\u7d50\u679c\u3002\u6e2c\u8a66\u6d41\u6c34\u7dda\u5728\u751f\u7522\u9805\u76ee\u4e2d\u4f7f\u7528\u55ae\u7368\u7684\u670d\u52d9\u8cec\u865f\uff0c\u56e0\u6b64\u7121\u9700\u5c0d\u751f\u7522\u9805\u76ee\u4f7f\u7528 Pub/Sub \u8a02\u95b1\u8005\u914d\u984d\u3002\n\u8207\u6279\u8655\u7406\u6d41\u6c34\u7dda\u4e0d\u540c\uff0c\u6d41\u5f0f\u8655\u7406\u6d41\u6c34\u7dda\u5728\u660e\u78ba\u53d6\u6d88\u4e4b\u524d\u6703\u7e7c\u7e8c\u904b\u884c\u3002\u5728\u7aef\u5230\u7aef\u6e2c\u8a66\u4e2d\uff0c\u60a8\u9700\u8981\u6c7a\u5b9a\u662f\u8b93\u6d41\u6c34\u7dda\u904b\u884c\uff08\u53ef\u80fd\u5728\u4e0b\u4e00\u500b\u7aef\u5230\u7aef\u6e2c\u8a66\u904b\u884c\u4e4b\u524d\uff09\uff0c\u9084\u662f\u5728\u4ee3\u8868\u6e2c\u8a66\u5b8c\u6210\u7684\u9ede\u53d6\u6d88\u6d41\u6c34\u7dda\uff0c\u4ee5\u4fbf\u6aa2\u67e5\u7d50\u679c\u3002\n\u60a8\u4f7f\u7528\u7684\u6e2c\u8a66\u6578\u64da\u985e\u578b\u6703\u5f71\u97ff\u6b64\u6c7a\u5b9a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u63d0\u4f9b\u7d66\u6d41\u5f0f\u50b3\u8f38\u6d41\u6c34\u7dda\u7684\u6709\u754c\u9650\u6e2c\u8a66\u6578\u64da\uff0c\u5247\u7576\u6240\u6709\u5143\u7d20\u90fd\u8655\u7406\u5b8c\u7562\u5f8c\uff0c\u60a8\u53ef\u80fd\u6703\u53d6\u6d88\u6d41\u6c34\u7dda\u3002\u6216\u8005\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u5be6\u969b\u6578\u64da\u6e90\uff08\u4f8b\u5982\u751f\u7522\u74b0\u5883\u4e2d\u4f7f\u7528\u7684\u73fe\u6709 Pub/Sub \u4e3b\u984c\uff09\uff0c\u6216\u8005\u5982\u679c\u60a8\u9023\u7e8c\u751f\u6210\u6e2c\u8a66\u6578\u64da\uff0c\u5247\u53ef\u80fd\u9700\u8981\u4f7f\u6e2c\u8a66\u6d41\u6c34\u7dda\u7e7c\u7e8c\u904b\u884c\u3002\u5f8c\u8005\u53ef\u8b93\u60a8\u6bd4\u8f03\u751f\u7522\u74b0\u5883\u4e2d\u7684\u884c\u7232\uff0c\u751a\u81f3\u6bd4\u8f03\u5176\u4ed6\u6e2c\u8a66\u6d41\u6c34\u7dda\u3002", "guide": "Dataflow"}