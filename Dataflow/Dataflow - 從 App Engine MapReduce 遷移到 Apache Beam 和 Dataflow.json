{"title": "Dataflow - \u5f9e App Engine MapReduce \u9077\u79fb\u5230 Apache Beam \u548c Dataflow", "url": "https://cloud.google.com/dataflow/docs/guides/gae-mapreduce-migration?hl=zh-cn", "abstract": "# Dataflow - \u5f9e App Engine MapReduce \u9077\u79fb\u5230 Apache Beam \u548c Dataflow\n\u672c\u6559\u7a0b\u9762\u5411 App Engine MapReduce \u7528\u6236\uff0c\u4ecb\u7d39\u77ad\u5982\u4f55\u5f9e App Engine MapReduce \u9077\u79fb\u5230 Apache Beam \u548c Dataflow\u3002\n", "content": "## \u7232\u4ec0\u9ebc\u9077\u79fb\uff1f\nApp Engine MapReduce \u662f\u4e00\u7a2e\u4ee5\u4e26\u884c\u5206\u4f48\u5f0f\u65b9\u5f0f\u8655\u7406\u5927\u91cf\u6578\u64da\u7684\u7de8\u7a0b\u6a21\u578b\u3002\u8a72\u6a21\u578b\u9069\u7528\u65bc\u9577\u6642\u9593\u904b\u884c\u4e14\u7121\u6cd5\u5728\u55ae\u500b\u8acb\u6c42\u7bc4\u570d\u5167\u8655\u7406\u7684\u5927\u578b\u4efb\u52d9\uff0c\u4f8b\u5982\uff1a\n- \u5206\u6790\u61c9\u7528\u65e5\u8a8c\n- \u5f59\u7e3d\u4f86\u81ea\u5916\u90e8\u4f86\u6e90\u7684\u76f8\u95dc\u6578\u64da\n- \u5c07\u6578\u64da\u5f9e\u4e00\u7a2e\u683c\u5f0f\u8f49\u63db\u7232\u53e6\u4e00\u7a2e\u683c\u5f0f\n- \u5c0e\u51fa\u6578\u64da\u4ee5\u4f9b\u5916\u90e8\u5206\u6790\n\u4e0d\u904e\uff0cApp Engine MapReduce \u662f\u7531\u793e\u5340\u7dad\u8b77\u7684 [\u958b\u6e90\u5eab](https://github.com/GoogleCloudPlatform/appengine-mapreduce/wiki/1-MapReduce) \uff0c\u5b83\u57fa\u65bc App Engine \u670d\u52d9\u800c\u69cb\u5efa\uff0c\u4e26\u4e14\u4e0d\u518d\u53d7 Google \u7684\u652f\u6301\u3002\n\u53e6\u4e00\u65b9\u9762\uff0cDataflow \u53d7\u5230 Google \u7684\u5168\u9762\u652f\u6301\uff0c\u4e26\u4e14\u53ef\u4ee5\u63d0\u4f9b\u6bd4 App Engine MapReduce \u66f4\u591a\u7684\u529f\u80fd\u3002\n### \u9077\u79fb\u5834\u666f\n\u5f9e App Engine MapReduce \u9077\u79fb\u5230 Apache Beam \u548c Dataflow \u6709\u8a31\u591a\u597d\u8655\uff0c\u4e0b\u9762\u5217\u8209\u4e86\u4e00\u4e9b\u5834\u666f\u793a\u4f8b\uff1a\n- \u5c07 Datastore \u6578\u64da\u5eab\u61c9\u7528\u6578\u64da\u5b58\u5132\u5728 BigQuery \u6578\u64da\u5009\u5eab\u4e2d\uff0c\u4ee5\u4fbf\u4f7f\u7528 SQL \u9032\u884c\u5206\u6790\u8655\u7406\u3002\n- \u5c07 Dataflow \u7528\u4f5c App Engine MapReduce \u7684\u66ff\u4ee3\u7522\u54c1\uff0c\u4ee5\u4fbf\u7dad\u8b77\u548c/\u6216\u66f4\u65b0\u60a8\u7684 Datastore \u6578\u64da\u96c6\u3002\n- \u5c07 Datastore \u6578\u64da\u5eab\u7684\u67d0\u4e9b\u90e8\u5206\u5099\u4efd\u5230 Cloud Storage\u3002## \u4ec0\u9ebc\u662f Dataflow \u548c Apache Beam\uff1f\nDataflow \u662f\u4e00\u7a2e\u7528\u65bc\u57f7\u884c\u5404\u7a2e\u6578\u64da\u8655\u7406\u6a21\u5f0f\u7684\u8a17\u7ba1\u5f0f\u670d\u52d9\u3002Apache Beam \u662f\u4e00\u7a2e\u7d71\u4e00\u7684\u7de8\u7a0b\u6a21\u578b\uff0c\u63d0\u4f9b\u7528\u65bc\u5b9a\u7fa9\u6578\u64da\u8655\u7406\u5de5\u4f5c\u6d41\u7684 SDK\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 Apache Beam \u7232\u6279\u8655\u7406\u548c\u6d41\u8655\u7406\u5275\u5efa\u8907\u96dc\u7684\u6d41\u6c34\u7dda\uff0c\u4e26\u5728 Dataflow \u4e0a\u904b\u884c\u3002\n## Dataflow \u548c Apache Beam \u4f7f\u7528\u5165\u9580\n\u8981\u958b\u59cb\u4f7f\u7528\uff0c\u8acb\u9078\u64c7\u76f8\u61c9\u7684\u5feb\u901f\u5165\u9580\uff0c\u4e26\u64da\u6b64\u9032\u884c\u64cd\u4f5c\uff1a\n- [\u4f7f\u7528 Java \u548c Apache Maven](https://cloud.google.com/dataflow/docs/quickstarts/create-pipeline-java?hl=zh-cn) \n- [\u4f7f\u7528 Python](https://cloud.google.com/dataflow/docs/quickstarts/create-pipeline-python?hl=zh-cn) \n- [\u4f7f\u7528 Go](https://cloud.google.com/dataflow/docs/quickstarts/create-pipeline-go?hl=zh-cn) \n### \u5275\u5efa\u548c\u904b\u884c\u6d41\u6c34\u7dda\n\u5728\u4f7f\u7528 App Engine MapReduce \u6642\uff0c\u60a8\u9700\u8981\u5275\u5efa\u6578\u64da\u8655\u7406\u985e\u4e26\u6dfb\u52a0 MapReduce \u5eab\uff1b\u6b64\u5916\uff0c\u5728\u5b9a\u7fa9\u4f5c\u696d\u7684\u898f\u7bc4\u548c\u8a2d\u7f6e\u5f8c\uff0c\u60a8\u9700\u8981\u91dd\u5c0d\u76f8\u61c9\u7684\u4f5c\u696d\u985e\u4f7f\u7528\u975c\u614b `start()` \u65b9\u6cd5\u4e00\u6b65\u5275\u5efa\u548c\u5553\u52d5\u4f5c\u696d\u3002\n\u5c0d\u65bc\u6620\u5c04\u4f5c\u696d\uff0c\u60a8\u9700\u8981\u5275\u5efa `Input` \u548c `Output` \u985e\u4ee5\u53ca\u57f7\u884c\u6620\u5c04\u7684 `Map` \u985e\u3002\u5c0d\u65bc App Engine MapReduce \u4f5c\u696d\uff0c\u60a8\u9700\u8981\u5275\u5efa `Input` \u548c `Output` \u985e\uff0c\u4e26\u5b9a\u7fa9\u7528\u65bc\u6578\u64da\u8f49\u63db\u7684 `Mapper` \u548c `Reducer` \u985e\u3002\n\u4f7f\u7528 Apache Beam \u6642\uff0c\u9700\u8981\u57f7\u884c\u7684\u64cd\u4f5c\u7565\u6709\u4e0d\u540c\uff1a\u60a8\u9700\u8981\u5275\u5efa\u6d41\u6c34\u7dda\u3002\u4f7f\u7528\u8f38\u5165\u548c\u8f38\u51fa\u9023\u63a5\u5668\u5f9e\u6578\u64da\u6e90\u4e2d\u8b80\u53d6\u6578\u64da\u4e26\u5411\u63a5\u6536\u5668\u4e2d\u5beb\u5165\u6578\u64da\uff1b\u4f7f\u7528\u9810\u5b9a\u7fa9\u7684\u6578\u64da\u8f49\u63db\uff08\u6216\u81ea\u884c\u7de8\u5beb\u8f49\u63db\uff09\u4f86\u5be6\u73fe\u6578\u64da\u8f49\u63db\uff1b\u6700\u5f8c\uff0c\u5728\u4ee3\u78bc\u6e96\u5099\u5c31\u7dd2\u5f8c\uff0c\u60a8\u4fbf\u53ef\u4ee5\u5c07\u6d41\u6c34\u7dda\u90e8\u7f72\u5230 Dataflow \u670d\u52d9\u3002\n### \u5c07 App Engine MapReduce \u4f5c\u696d\u8f49\u63db\u7232 Apache Beam \u6d41\u6c34\u7dda\n\u4e0b\u8868\u986f\u793a\u4e86\u8207 App Engine MapReduce \u6a21\u578b\u7684 **map** \u3001 **shuffle** \u548c **reduce** \u6b65\u9a5f\u7b49\u6548\u7684 Apache Beam \u65b9\u6cd5\u3002\n| App Engine MapReduce | Apache Beam \u7b49\u6548\u65b9\u6cd5     |\n|:-----------------------|:----------------------------------------|\n| Map     | MapElements<InputT,OutputT>    |\n| Shuffle    | GroupByKey<K,V>       |\n| Reduce     | Combine.GroupedValues<K,InputT,OutputT> |\n\u5e38\u898b\u505a\u6cd5\u662f\u4f7f\u7528 `Combine.PerKey<K,InputT,OutputT>` \uff0c\u800c\u4e0d\u662f `GroupByKey` \u548c `CombineValues` \u3002| App Engine MapReduce | Apache Beam \u7b49\u6548\u65b9\u6cd5 |\n|:-----------------------|:-----------------------|\n| Map     | beam.Map    |\n| Shuffle    | beam.GroupByKey  |\n| Reduce     | beam.CombineValues  |\n\u5e38\u898b\u505a\u6cd5\u662f\u4f7f\u7528 `beam.CombinePerKey` \uff0c\u800c\u4e0d\u662f `beam.GroupByKey` \u548c `beam.CombineValues` \u3002| App Engine MapReduce | Apache Beam \u7b49\u6548\u65b9\u6cd5 |\n|:-----------------------|:-----------------------|\n| Map     | beam.ParDo    |\n| Shuffle    | beam.GroupByKey  |\n| Reduce     | beam.Combine   |\n\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u78bc\u6f14\u793a\u77ad\u5982\u4f55\u5728 Apache Beam \u4e2d\u5be6\u73fe App Engine MapReduce \u6a21\u578b\uff1a\n\u4ee5\u4e0b\u4ee3\u78bc\u53d6\u81ea\n [MinimalWordCount.java](https://github.com/apache/beam/blob/master/examples/java/src/main/java/org/apache/beam/examples/MinimalWordCount.java) \n\uff1a\n```\np.apply(TextIO.read().from(\"gs://apache-beam-samples/shakespeare/*\"))\u00a0// Apply a ParDo that returns a PCollection\n```\n\u4ee5\u4e0b\u4ee3\u78bc\u53d6\u81ea\n [wordcount_minimal.py](https://github.com/apache/beam/blob/master/sdks/python/apache_beam/examples/wordcount_minimal.py) \n\uff1a\n```\n# Read the text file[pattern] into a PCollection.lines = p | ReadFromText(known_args.input)# Count the occurrences of each word.counts = (\u00a0 \u00a0 lines\u00a0 \u00a0 | 'Split' >> (beam.FlatMap(lambda x: re.findall(r'[A-Za-z\\']+', x))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .with_output_types(unicode))\u00a0 \u00a0 | 'PairWithOne' >> beam.Map(lambda x: (x, 1))\u00a0 \u00a0 | 'GroupAndSum' >> beam.CombinePerKey(sum))# Format the counts into a PCollection of strings.output = counts | 'Format' >> beam.Map(lambda (w, c): '%s: %s' % (w, c))# Write the output using a \"Write\" transform that has side effects.# pylint: disable=expression-not-assignedoutput | WriteToText(known_args.output)\n```\n\u4ee5\u4e0b\u4ee3\u78bc\u53d6\u81ea\n [minimal_wordcount.go](https://github.com/apache/beam/blob/master/sdks/go/examples/minimal_wordcount/minimal_wordcount.go) \n\uff1a\n```\n// beam.Init() is an initialization hook that must be called on startup.beam.Init()// Create the Pipeline object and root scope.p := beam.NewPipeline()s := p.Root()lines := textio.Read(s, \"gs://apache-beam-samples/shakespeare/kinglear.txt\")// Invoke a ParDo transform on our PCollection of text lines.// This ParDo invokes a DoFn (defined in-line) on each element that// tokenizes the text line into individual words. The ParDo returns a// PCollection of type string, where each element is an individual word in// Shakespeare's collected texts.words := beam.ParDo(s, func(line string, emit func(string)) {\u00a0 \u00a0 for _, word := range wordRE.FindAllString(line, -1) {\u00a0 \u00a0 \u00a0 \u00a0 emit(word)\u00a0 \u00a0 }}, lines)// Invoke the stats.Count transform on our PCollection of// individual words. The Count transform returns a new PCollection of// key/value pairs, where each key represents a unique word in the text.// The associated value is the occurrence count for that word.counted := stats.Count(s, words)// Use a ParDo to format our PCollection of word counts into a printable// string, suitable for writing to an output file. When each element// produces exactly one element, the DoFn can simply return it.formatted := beam.ParDo(s, func(w string, c int) string {\u00a0 \u00a0 return fmt.Sprintf(\"%s: %v\", w, c)}, counted)// Invoke textio.Write at the end of the pipeline to write// the contents of a PCollection (in this case, our PCollection of// formatted strings) to a text file.textio.Write(s, \"wordcounts.txt\", formatted)\n```\n## \u5176\u4ed6 Apache Beam \u548c Dataflow \u512a\u52e2\n\u5982\u679c\u60a8\u9078\u64c7\u5c07 App Engine MapReduce \u4f5c\u696d\u9077\u79fb\u5230 Apache Beam \u6d41\u6c34\u7dda\uff0c\u5c31\u53ef\u4ee5\u5f9e Apache Beam \u548c Dataflow \u63d0\u4f9b\u7684\u591a\u9805\u529f\u80fd\u4e2d\u53d7\u76ca\u3002\n### \u5b89\u6392 Cloud Dataflow \u4f5c\u696d\n\u5982\u679c\u60a8\u719f\u6089 App Engine [\u4efb\u52d9\u968a\u5217](https://cloud.google.com/appengine/docs/standard/python/taskqueue?hl=zh-cn) \uff0c\u5247\u53ef\u4ee5 [\u4f7f\u7528 Cron \u5b89\u6392\u9031\u671f\u6027\u4f5c\u696d](https://cloud.google.com/appengine/docs/standard/python/config/cron?hl=zh-cn) \u3002\u6b64 [\u793a\u4f8b](https://cloud.google.com/blog/products/bigquery/designing-etl-architecture-for-a-cloud-native-data-warehouse-on-google-cloud-platform?hl=zh-cn) \u6f14\u793a\u77ad\u5982\u4f55\u4f7f\u7528 App Engine Cron \u5b89\u6392 Apache Beam \u6d41\u6c34\u7dda\u3002\n\u5b89\u6392\u6d41\u6c34\u7dda\u7684\u57f7\u884c\u9084\u6709\u5176\u4ed6\u5e7e\u7a2e\u65b9\u5f0f\u3002\u60a8\u53ef\u4ee5\uff1a\n- \u4f7f\u7528 Dataflow [\u6a21\u677f](https://cloud.google.com/dataflow/docs/templates/overview?hl=zh-cn) \u5c07\u6d41\u6c34\u7dda\u66ab\u5b58\u5728 Cloud Storage \u4e0a\uff0c\u7136\u5f8c\u5f9e\u5404\u7a2e\u74b0\u5883\u4e2d\u57f7\u884c\u9019\u4e9b\u6d41\u6c34\u7dda\u3002\n- \u4f7f\u7528 [App Engine Cron \u670d\u52d9\u6216 Cloud Functions](https://cloud.google.com/blog/products/data-analytics/scheduling-dataflow-pipelines-using-app-engine-cron-service-or-cloud-functions?hl=zh-cn) \u3002\n- \u4f7f\u7528 [Apache Airflow](https://airflow.incubator.apache.org/) \u3002\n### \u76e3\u63a7 Cloud Dataflow \u4f5c\u696d\n\u5982\u9700 [\u76e3\u63a7 App Engine MapReduce \u4f5c\u696d](https://github.com/GoogleCloudPlatform/appengine-mapreduce/wiki/2.2-Monitoring-a-Job) \uff0c\u60a8\u9700\u8981\u4f9d\u8cf4\u65bc `appspot.com` \u8a17\u7ba1\u7684\u7db2\u5740\u3002\n\u4f7f\u7528 Dataflow \u8a17\u7ba1\u5f0f\u670d\u52d9\u57f7\u884c\u6d41\u6c34\u7dda\u6642\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4fbf\u6377\u7684 Dataflow \u7db2\u9801 [\u76e3\u63a7\u754c\u9762](https://cloud.google.com/dataflow/pipelines/dataflow-monitoring-intf?hl=zh-cn) \u4f86\u76e3\u63a7\u6d41\u6c34\u7dda\u3002\u60a8\u9084\u53ef\u4ee5\u4f7f\u7528 [Cloud Monitoring](https://cloud.google.com/dataflow/docs/guides/using-cloud-monitoring?hl=zh-cn) \u4f86\u7372\u53d6\u6709\u95dc\u6d41\u6c34\u7dda\u7684\u66f4\u591a\u4fe1\u606f\u3002\n### \u8b80\u53d6\u548c\u5beb\u5165\nApp Engine MapReduce \u7684 [Reader \u548c Writer](https://github.com/GoogleCloudPlatform/appengine-mapreduce/wiki/3.4-Readers-and-Writers) \u5728 Apache Beam \u4e2d\u7a31\u7232\u6578\u64da\u6e90\u548c\u63a5\u6536\u5668\uff0c\u6216\u8005 [I/O \u9023\u63a5\u5668](https://beam.apache.org/documentation/io/built-in/) \u3002\nApache Beam \u5177\u6709\u591a\u500b I/O \u9023\u63a5\u5668\uff0c\u9069\u7528\u65bc\u591a\u7a2e Google Cloud \u670d\u52d9\uff0c\u4f8b\u5982 Bigtable\u3001BigQuery\u3001Datastore \u548c Cloud SQL \u7b49\u3002Apache Beam \u8ca2\u737b\u8005\u9084\u5275\u5efa\u4e86\u9069\u7528\u65bc\u975e Google \u670d\u52d9\uff08\u5982 Apache Cassandra \u548c MongoDB\uff09\u7684 I/O \u9023\u63a5\u5668\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- [\u77ad\u89e3 Apache Beam \u7de8\u7a0b\u6a21\u578b](https://cloud.google.com/dataflow/model/programming-model-beam?hl=zh-cn) \n- [\u77ad\u89e3\u5982\u4f55\u8a2d\u8a08\u3001\u5275\u5efa\u548c\u6e2c\u8a66\u6d41\u6c34\u7dda](https://cloud.google.com/dataflow/pipelines/creating-a-pipeline-beam?hl=zh-cn) \n- [\u700f\u89bd\u793a\u4f8b\u6f14\u793a](https://cloud.google.com/dataflow/examples/examples-beam?hl=zh-cn)", "guide": "Dataflow"}