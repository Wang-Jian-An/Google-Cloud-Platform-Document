{"title": "Dataflow - Python ML tutorials", "url": "https://cloud.google.com/dataflow/docs/tutorials/python-ml-examples", "abstract": "# Dataflow - Python ML tutorials\nLearn how to train machine learning models for classification and prediction by following the steps in interactive notebooks. These tutorials integrate Dataflow into end-to-end machine learning workflows. You can also view the tutorials in [GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/tree/main/people-and-planet-ai) .\n", "content": "## Land cover image segmentation\nThis land classification model uses a [TensorFlow](https://www.tensorflow.org/) framework and satellite data from [Google Earth Engine](https://earthengine.google.com/) to demonstrate semantic segmentation. The tutorial uses [TensorFlow in Vertex AI](/vertex-ai/docs/start/tensorflow) to train the model, TensorFlow in [Cloud Run](/run/docs) to make real-time predictions, and Dataflow to make batch predictions. [View the code on GitHub.](https://github.com/GoogleCloudPlatform/python-docs-samples/tree/main/people-and-planet-ai/land-cover-classification)\n[](https://colab.sandbox.google.com/github/GoogleCloudPlatform/python-docs-samples/blob/main/people-and-planet-ai/land-cover-classification/README.ipynb)\n## Weather forecasting time series regression\nThis weather forecasting model uses a [PyTorch](/vertex-ai/docs/start/pytorch) framework and satellite data from [Google Earth Engine](https://earthengine.google.com/) to forecast precipitation for the next two and six hours. The tutorial uses PyTorch to create a fully convolutional network, [Vertex AI](/vertex-ai/docs/start/introduction-unified-platform) to train the model, Dataflow to create the dataset, and PyTorch to make local predictions. [View the code on GitHub.](https://github.com/GoogleCloudPlatform/python-docs-samples/tree/main/people-and-planet-ai/weather-forecasting)\n[](https://colab.sandbox.google.com/github/GoogleCloudPlatform/python-docs-samples/blob/main/people-and-planet-ai/weather-forecasting/notebooks/1-overview.ipynb)\n## Global fishing watch time series classification\nThis classification model uses a [TensorFlow](https://www.tensorflow.org/) framework and Maritime Mobile Service Identity (MMSI) location data to classify whether a ship is fishing every hour. The tutorial uses [Keras](https://keras.io/) and TensorFlow to train the model, Dataflow to create the dataset, and Keras in [Cloud Run](/run/docs) to make local predictions. [View the code on GitHub.](https://github.com/GoogleCloudPlatform/python-docs-samples/tree/main/people-and-planet-ai/timeseries-classification)\n[](https://colab.sandbox.google.com/github/GoogleCloudPlatform/python-docs-samples/blob/main/people-and-planet-ai/timeseries-classification/README.ipynb)\n## Wildlife image classification\nThis classification model uses an [AutoML](/automl/docs) framework to create a model trained to recognize animal species from camera trap pictures. The tutorial uses [AutoML in Vertex AI](/vertex-ai/docs/beginner/beginners-guide) to train the model, Dataflow to create the dataset, and [Vertex AI](/vertex-ai/docs/start/introduction-unified-platform) to make predictions. [View the code on GitHub.](https://github.com/GoogleCloudPlatform/python-docs-samples/tree/main/people-and-planet-ai/image-classification)\n[](https://colab.sandbox.google.com/github/GoogleCloudPlatform/python-docs-samples/blob/main/people-and-planet-ai/image-classification/README.ipynb)", "guide": "Dataflow"}