{"title": "Dataflow - \u4f7f\u7528 Apache Beam \u7b46\u8a18\u672c\u9ad8\u7d1a\u529f\u80fd", "url": "https://cloud.google.com/dataflow/docs/guides/notebook-advanced?hl=zh-cn", "abstract": "# Dataflow - \u4f7f\u7528 Apache Beam \u7b46\u8a18\u672c\u9ad8\u7d1a\u529f\u80fd\n\u85c9\u52a9 Apache Beam \u4ea4\u4e92\u5f0f\u904b\u884c\u7a0b\u5e8f\u548c JruyterLab \u7b46\u8a18\u672c\uff0c\u60a8\u53ef\u4ee5\u8fed\u4ee3\u5730\u958b\u767c\u6d41\u6c34\u7dda\u3001\u6aa2\u67e5\u6d41\u6c34\u7dda\u5716\uff0c\u4e26\u5728\u201c\u8b80\u53d6-\u6c42\u503c-\u8f38\u51fa\u201d\u5faa\u74b0 (REPL) \u5de5\u4f5c\u6d41\u4e2d\u89e3\u6790\u7368\u7acb\u7684 PCollection\u3002\u5982\u9700\u67e5\u770b\u6f14\u793a\u5982\u4f55\u5c07 Apache Beam \u4ea4\u4e92\u5f0f\u904b\u884c\u7a0b\u5e8f\u8207 JupyterLab \u7b46\u8a18\u672c\u642d\u914d\u4f7f\u7528\u7684\u6559\u7a0b\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528 Apache Beam \u7b46\u8a18\u672c\u9032\u884c\u958b\u767c](https://cloud.google.com/dataflow/docs/guides/interactive-pipeline-development?hl=zh-cn) \u3002\n\u672c\u9801\u9762\u8a73\u7d30\u4ecb\u7d39\u4e86\u53ef\u8207 Apache Beam \u7b46\u8a18\u672c\u642d\u914d\u4f7f\u7528\u7684\u9ad8\u7d1a\u529f\u80fd\u3002\n", "content": "## \u7b46\u8a18\u672c\u7ba1\u7406\u7684\u96c6\u7fa3\u4e0a\u7684\u4ea4\u4e92\u5f0f FlinkRunner\n\u5982\u9700\u5f9e\u7b46\u8a18\u672c\u4ee5\u4ea4\u4e92\u65b9\u5f0f\u8655\u7406\u751f\u7522\u898f\u6a21\u7684\u6578\u64da\uff0c\u60a8\u53ef\u4ee5\u5c07 `FlinkRunner` \u8207\u4e00\u4e9b\u901a\u7528\u6d41\u6c34\u7dda\u9078\u9805\u642d\u914d\u4f7f\u7528\uff0c\u4ee5\u6307\u793a\u7b46\u8a18\u672c\u6703\u8a71\u7ba1\u7406\u9577\u671f\u6709\u6548\u7684 Dataproc \u96c6\u7fa3\u4e26\u4ee5\u5206\u4f48\u5f0f\u65b9\u5f0f\u904b\u884c Apache Beam \u6d41\u6c34\u7dda\u3002\n### \u524d\u63d0\u689d\u4ef6\n\u8981\u4f7f\u7528\u6b64\u529f\u80fd\uff0c\u9700\u8981\u6eff\u8db3\u4ee5\u4e0b\u524d\u63d0\u689d\u4ef6\uff1a\n- \u5553\u7528 Dataproc API\u3002\n- \u5c07\u7ba1\u7406\u54e1\u6216\u7de8\u8f2f\u8005\u89d2\u8272\u6388\u4e88\u904b\u884c Dataproc \u7b46\u8a18\u672c\u5be6\u4f8b\u7684\u670d\u52d9\u8cec\u865f\u3002\n- \u4f7f\u7528\u5177\u6709 Apache Beam SDK 2.40.0 \u7248\u6216\u66f4\u9ad8\u7248\u672c\u7684\u7b46\u8a18\u672c\u5167\u6838\u3002\n### \u914d\u7f6e\n\u60a8\u81f3\u5c11\u9700\u8981\u4ee5\u4e0b\u8a2d\u7f6e\uff1a\n```\n# Set a Cloud Storage bucket to cache source recording and PCollections.# By default, the cache is on the notebook instance itself, but that does not# apply to the distributed execution scenario.ib.options.cache_root = 'gs://<BUCKET_NAME>/flink'# Define an InteractiveRunner that uses the FlinkRunner under the hood.interactive_flink_runner = InteractiveRunner(underlying_runner=FlinkRunner())options = PipelineOptions()# Instruct the notebook that Google Cloud is used to run the FlinkRunner.cloud_options = options.view_as(GoogleCloudOptions)cloud_options.project = 'PROJECT_ID'\n```\n### \u986f\u5f0f\u9810\u914d\uff08\u53ef\u9078\uff09\n\u60a8\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u9078\u9805\u3002\n```\n# Change this if the pipeline needs to run in a different region# than the default, 'us-central1'. For example, to set it to 'us-west1':cloud_options.region = 'us-west1'# Explicitly provision the notebook-managed cluster.worker_options = options.view_as(WorkerOptions)# Provision 40 workers to run the pipeline.worker_options.num_workers=40# Use the default subnetwork.worker_options.subnetwork='default'# Choose the machine type for the workers.worker_options.machine_type='n1-highmem-8'# When working with non-official Apache Beam releases, such as Apache Beam built from source# code, configure the environment to use a compatible released SDK container.# If needed, build a custom container and use it. For more information, see:# https://beam.apache.org/documentation/runtime/environments/options.view_as(PortableOptions).environment_config = 'apache/beam_python3.7_sdk:2.41.0 or LOCATION.pkg.dev/PROJECT_ID/REPOSITORY/your_custom_container'\n```\n### \u7528\u91cf\n```\n# The parallelism is applied to each step, so if your pipeline has 10 steps, you# end up having 10 * 10 = 100 tasks scheduled, which can be run in parallel.options.view_as(FlinkRunnerOptions).parallelism = 10p_word_count = beam.Pipeline(interactive_flink_runner, options=options)word_counts = (\u00a0 \u00a0 p_word_count\u00a0 \u00a0 | 'read' >> ReadWordsFromText('gs://apache-beam-samples/shakespeare/kinglear.txt')\u00a0 \u00a0 | 'count' >> beam.combiners.Count.PerElement())# The notebook session automatically starts and manages a cluster to run# your pipelines with the FlinkRunner.ib.show(word_counts)# Interactively adjust the parallelism.options.view_as(FlinkRunnerOptions).parallelism = 150# The BigQuery read needs a Cloud Storage bucket as a temporary location.options.view_as(GoogleCloudOptions).temp_location = ib.options.cache_rootp_bq = beam.Pipeline(runner=interactive_flink_runner, options=options)delays_by_airline = (\u00a0 \u00a0 p_bq\u00a0 \u00a0 | 'Read Dataset from BigQuery' >> beam.io.ReadFromBigQuery(\u00a0 \u00a0 \u00a0 \u00a0 project=project, use_standard_sql=True,\u00a0 \u00a0 \u00a0 \u00a0 query=('SELECT airline, arrival_delay '\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0'FROM `bigquery-samples.airline_ontime_data.flights` '\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0'WHERE date >= \"2010-01-01\"'))\u00a0 \u00a0 | 'Rebalance Data to TM Slots' >> beam.Reshuffle(num_buckets=1000)\u00a0 \u00a0 | 'Extract Delay Info' >> beam.Map(\u00a0 \u00a0 \u00a0 \u00a0 lambda e: (e['airline'], e['arrival_delay'] > 0))\u00a0 \u00a0 | 'Filter Delayed' >> beam.Filter(lambda e: e[1])\u00a0 \u00a0 | 'Count Delayed Flights Per Airline' >> beam.combiners.Count.PerKey())# This step reuses the existing cluster.ib.collect(delays_by_airline)# Describe the cluster running the pipelines.# You can access the Flink dashboard from the printed link.ib.clusters.describe()# Cleans up all long-lasting clusters managed by the notebook session.ib.clusters.cleanup(force=True)\n```\n### \u7b46\u8a18\u672c\u7ba1\u7406\u7684\u96c6\u7fa3\n- \u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u5982\u679c\u60a8\u4e0d\u63d0\u4f9b\u4efb\u4f55\u6d41\u6c34\u7dda\u9078\u9805\uff0c\u5247\u4ea4\u4e92\u5f0f Apache Beam \u5c07 **\u59cb\u7d42\u91cd\u8907\u4f7f\u7528** \u6700\u8fd1\u4f7f\u7528\u7684\u96c6\u7fa3\u4f86\u901a\u904e`FlinkRunner`\u904b\u884c\u6d41\u6c34\u7dda\u3002- \u7232\u907f\u514d\u6b64\u884c\u7232\uff08\u4f8b\u5982\uff0c\u4f7f\u7528\u672a\u7531\u7b46\u8a18\u672c\u8a17\u7ba1\u7684 FlinkRunner \u5728\u540c\u4e00\u7b46\u8a18\u672c\u6703\u8a71\u4e2d\u904b\u884c\u5176\u4ed6\u6d41\u6c34\u7dda\uff09\uff0c\u8acb\u904b\u884c`ib.clusters.set_default_cluster(None)`\u3002\n- \u5be6\u4f8b\u5316\u4f7f\u7528\u6620\u5c04\u5230\u73fe\u6709 Dataproc \u96c6\u7fa3\u7684\u9805\u76ee\u3001\u5340\u57df\u548c\u9810\u914d\u914d\u7f6e\u7684\u65b0\u6d41\u6c34\u7dda\u6642\uff0cDataflow \u4e5f\u6703\u91cd\u8907\u4f7f\u7528\u8a72\u96c6\u7fa3\uff0c\u4f46\u53ef\u80fd\u4e0d\u6703\u4f7f\u7528\u6700\u8fd1\u7528\u904e\u7684\u96c6\u7fa3\u3002\n- \u4f46\u662f\uff0c\u6bcf\u7576\u9032\u884c\u9810\u914d\u66f4\u6539\u6642\uff08\u4f8b\u5982\u8abf\u6574\u96c6\u7fa3\u5927\u5c0f\u6642\uff09\uff0c\u7cfb\u7d71\u90fd\u6703\u5275\u5efa\u4e00\u500b\u65b0\u96c6\u7fa3\u4f86\u4f7f\u6240\u9700\u7684\u66f4\u6539\u751f\u6548\u3002\u5982\u679c\u60a8\u6253\u7b97\u8abf\u6574\u96c6\u7fa3\u5927\u5c0f\uff0c\u7232\u907f\u514d\u8017\u76e1\u96f2\u8cc7\u6e90\uff0c\u8acb\u4f7f\u7528`ib.clusters.cleanup(pipeline)`\u6e05\u7406\u4e0d\u5fc5\u8981\u7684\u96c6\u7fa3\u3002\n- \u6307\u5b9a Flink`master_url`\u6642\uff0c\u5982\u679c\u5b83\u5c6c\u65bc\u7531\u7b46\u8a18\u672c\u6703\u8a71\u7ba1\u7406\u7684\u96c6\u7fa3\uff0c\u5247 Dataflow \u6703\u91cd\u8907\u4f7f\u7528\u8a72\u96c6\u7fa3\u3002- \u5982\u679c`master_url`\u5c0d\u65bc\u7b46\u8a18\u672c\u6703\u8a71\u662f\u672a\u77e5\u7684\uff0c\u5247\u8868\u793a\u9700\u8981\u7528\u6236\u81ea\u8a17\u7ba1\u7684`FlinkRunner`\u3002\u7b46\u8a18\u672c\u4e0d\u6703\u96b1\u5f0f\u57f7\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\n### \u554f\u984c\u6392\u67e5\n\u672c\u90e8\u5206\u63d0\u4f9b\u7684\u4fe1\u606f\u53ef\u5e6b\u52a9\u60a8\u6392\u67e5\u548c\u8abf\u8a66\u7b46\u8a18\u672c\u7ba1\u7406\u7684\u96c6\u7fa3\u4e0a\u7684\u4ea4\u4e92\u5f0f FlinkRunner \u554f\u984c\u3002\n\u7232\u7c21\u55ae\u8d77\u898b\uff0cFlink \u7db2\u7d61\u7de9\u885d\u5340\u914d\u7f6e\u672a\u516c\u958b\u3002\n\u5982\u679c\u60a8\u7684\u4f5c\u696d\u5716\u904e\u65bc\u8907\u96dc\u6216\u60a8\u7684\u4e26\u884c\u6027\u8a2d\u7f6e\u5f97\u904e\u9ad8\uff0c\u5247\u6b65\u9a5f\u7684\u57fa\u6578\u4e58\u4ee5\u4e26\u884c\u6578\u53ef\u80fd\u6703\u592a\u5927\uff0c\u5f9e\u800c\u5c0e\u81f4\u4e26\u884c\u5b89\u6392\u592a\u591a\u4efb\u52d9\u4ee5\u53ca\u7121\u6cd5\u57f7\u884c\u3002\n\u6309\u7167\u4ee5\u4e0b\u63d0\u793a\u52a0\u5feb\u4ea4\u4e92\u5f0f\u904b\u884c\u7684\u901f\u5ea6\uff1a\n- \u50c5\u5c07\u60a8\u8981\u6aa2\u67e5\u7684`PCollection`\u5206\u914d\u7d66\u8b8a\u91cf\u3002\n- \u9010\u500b\u6aa2\u67e5`PCollections`\u3002\n- \u5728\u9ad8\u6247\u51fa\u8f49\u63db\u5f8c\u4f7f\u7528\u91cd\u6392\u3002\n- \u6839\u64da\u6578\u64da\u5927\u5c0f\u8abf\u6574\u4e26\u884c\u6027\u3002\u6709\u6642\uff0c\u6578\u64da\u8d8a\u5c0f\uff0c\u901f\u5ea6\u8d8a\u5feb\u3002\u6aa2\u67e5 Flink \u4fe1\u606f\u4e2d\u5fc3\u662f\u5426\u6709\u6b63\u5728\u904b\u884c\u7684\u4f5c\u696d\u3002\u60a8\u53ef\u80fd\u6703\u770b\u5230\u4e00\u500b\u6b65\u9a5f\uff0c\u5176\u4e2d\u6578\u767e\u500b\u4efb\u52d9\u5df2\u5b8c\u6210\uff0c\u4e26\u4e14\u53ea\u6709\u4e00\u500b\u4efb\u52d9\u4ecd\u5728\u904b\u884c\uff0c\u56e0\u7232\u904b\u884c\u4e2d\u6578\u64da\u4f4d\u65bc\u55ae\u81fa\u6a5f\u5668\u4e0a\uff0c\u4e26\u4e14\u4e0d\u6703\u91cd\u6392\u3002\n\u59cb\u7d42\u5728\u9ad8\u6247\u51fa\u8f49\u63db\u5f8c\u4f7f\u7528\u91cd\u6392\uff0c\u4f8b\u5982\uff1a\n- \u5f9e\u6587\u4ef6\u4e2d\u8b80\u53d6\u884c\n- \u5f9e BigQuery \u8868\u4e2d\u8b80\u53d6\u884c\n\u5982\u679c\u4e0d\u9032\u884c\u91cd\u6392\uff0c\u6247\u51fa\u6578\u64da\u59cb\u7d42\u5728\u540c\u4e00\u5de5\u4f5c\u5668\u4e0a\u904b\u884c\uff0c\u60a8\u7121\u6cd5\u5229\u7528\u4e26\u884c\u6027\u3002\n\u4e00\u822c\u4f86\u8b1b\uff0cFlink \u96c6\u7fa3\u7684 vCPU \u6578\u91cf\u4e58\u4ee5\u5de5\u4f5c\u5668\u69fd\u6578\u6240\u5f97\u7684\u503c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6709 40 \u500b n1-highmem-8 \u5de5\u4f5c\u5668\uff0c\u5247 Flink \u96c6\u7fa3\u6700\u591a\u6709 320\uff088 \u4e58\u4ee5 40\uff09\u500b\u69fd\u3002\n\u7406\u60f3\u60c5\u6cc1\u4e0b\uff0c\u5de5\u4f5c\u5668\u53ef\u4ee5\u7ba1\u7406\u4e00\u500b\u4f5c\u696d\u4f86\u5c0d\u5176\u9032\u884c\u8b80\u53d6\u3001\u6620\u5c04\u548c\u7d44\u5408\uff08\u4ee5\u6578\u767e\u9805\u4e26\u884c\u8a2d\u7f6e\uff09\uff0c\u5f9e\u800c\u4e26\u884c\u5b89\u6392\u6578\u5343\u9805\u4efb\u52d9\u3002\n\u6d41\u8655\u7406\u6d41\u6c34\u7dda\u76ee\u524d\u8207\u7b46\u8a18\u672c\u7ba1\u7406\u7684\u96c6\u7fa3\u4ea4\u4e92\u5f0f Flink \u529f\u80fd\u4e0d\u517c\u5bb9\u3002\n## Beam SQL \u548c beam_sql \u9b54\u6cd5\u547d\u4ee4\n[Beam SQL](https://beam.apache.org/documentation/dsls/sql/overview/) \u5141\u8a31\u60a8\u4f7f\u7528 SQL \u8a9e\u53e5\u67e5\u8a62\u6709\u754c\u9650\u548c\u7121\u754c\u9650 `PCollections` \u3002\u5982\u679c\u60a8\u5728\u4f7f\u7528 Apache Beam \u7b46\u8a18\u672c\uff0c\u5247\u53ef\u4ee5\u4f7f\u7528 IPython [\u81ea\u5b9a\u7fa9\u9b54\u6cd5\u547d\u4ee4](https://ipython.readthedocs.io/en/stable/config/custommagics.html) `beam_sql` \u4f86\u52a0\u901f\u6d41\u6c34\u7dda\u958b\u767c\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528 `-h` \u6216 `--help` \u9078\u9805\u6aa2\u67e5 `beam_sql` \u9b54\u6cd5\u547d\u4ee4\u7528\u6cd5\uff1a\n\u60a8\u53ef\u4ee5\u6839\u64da\u5e38\u91cf\u503c\u5275\u5efa `PCollection` \uff1a\n\u60a8\u53ef\u4ee5\u806f\u63a5\u591a\u500b `PCollections` \uff1a\n\u60a8\u53ef\u4ee5\u4f7f\u7528 `-r DataflowRunner` \u6216 `--runner DataflowRunner` \u9078\u9805\u5553\u52d5 Dataflow \u4f5c\u696d\uff1a\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7b46\u8a18\u672c\u4e2d\u7684\u793a\u4f8b\u7b46\u8a18\u672c Apache Beam SQL](https://cloud.google.com/dataflow/docs/guides/interactive-pipeline-development?hl=zh-cn#get_started_with_notebooks) \u3002\n## \u4f7f\u7528 JIT \u7de8\u8b6f\u5668\u548c GPU \u52a0\u5feb\u901f\u5ea6\n\u60a8\u53ef\u4ee5\u4f7f\u7528 [numba](https://numba.pydata.org/) \u548c [GPU](https://cloud.google.com/dataflow/docs/gpu/use-gpus?hl=zh-cn) \u7b49\u5eab\u4f86\u52a0\u901f Python \u4ee3\u78bc\u548c Apache Beam \u6d41\u6c34\u7dda\u3002\u5728\u4f7f\u7528 `nvidia-tesla-t4` GPU \u5275\u5efa\u7684 Apache Beam \u7b46\u8a18\u672c\u5be6\u4f8b\u4e2d\uff0c\u5982\u9700\u5728 GPU \u4e0a\u904b\u884c\uff0c\u8acb\u4f7f\u7528 `numba.cuda.jit` \u7de8\u8b6f Python \u4ee3\u78bc\u3002\uff08\u53ef\u9078\uff09\u5982\u9700\u5728 CPU \u4e0a\u52a0\u5feb\u57f7\u884c\u901f\u5ea6\uff0c\u8acb\u4f7f\u7528 `numba.jit` \u6216 `numba.njit` \u5c07 Python \u4ee3\u78bc\u7de8\u8b6f\u7232\u6a5f\u5668\u4ee3\u78bc\u3002\n\u4ee5\u4e0b\u793a\u4f8b\u6703\u5275\u5efa\u4e00\u500b\u5728 GPU \u4e0a\u8655\u7406\u7684 `DoFn` \uff1a\n```\nclass Sampler(beam.DoFn):\u00a0 \u00a0 def __init__(self, blocks=80, threads_per_block=64):\u00a0 \u00a0 \u00a0 \u00a0 # Uses only 1 cuda grid with below config.\u00a0 \u00a0 \u00a0 \u00a0 self.blocks = blocks\u00a0 \u00a0 \u00a0 \u00a0 self.threads_per_block = threads_per_block\u00a0 \u00a0 def setup(self):\u00a0 \u00a0 \u00a0 \u00a0 import numpy as np\u00a0 \u00a0 \u00a0 \u00a0 # An array on host as the prototype of arrays on GPU to\u00a0 \u00a0 \u00a0 \u00a0 # hold accumulated sub count of points in the circle.\u00a0 \u00a0 \u00a0 \u00a0 self.h_acc = np.zeros(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 self.threads_per_block * self.blocks, dtype=np.float32)\u00a0 \u00a0 def process(self, element: Tuple[int, int]):\u00a0 \u00a0 \u00a0 \u00a0 from numba import cuda\u00a0 \u00a0 \u00a0 \u00a0 from numba.cuda.random import create_xoroshiro128p_states\u00a0 \u00a0 \u00a0 \u00a0 from numba.cuda.random import xoroshiro128p_uniform_float32\u00a0 \u00a0 \u00a0 \u00a0 @cuda.jit\u00a0 \u00a0 \u00a0 \u00a0 def gpu_monte_carlo_pi_sampler(rng_states, sub_sample_size, acc):\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"\"\"Uses GPU to sample random values and accumulates the sub count\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 of values within a circle of radius 1.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"\"\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pos = cuda.grid(1)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if pos < acc.shape[0]:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sub_acc = 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for i in range(sub_sample_size):\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 x = xoroshiro128p_uniform_float32(rng_states, pos)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 y = xoroshiro128p_uniform_float32(rng_states, pos)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (x * x + y * y) <= 1.0:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sub_acc += 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 acc[pos] = sub_acc\u00a0 \u00a0 \u00a0 \u00a0 rng_seed, sample_size = element\u00a0 \u00a0 \u00a0 \u00a0 d_acc = cuda.to_device(self.h_acc)\u00a0 \u00a0 \u00a0 \u00a0 sample_size_per_thread = sample_size // self.h_acc.shape[0]\u00a0 \u00a0 \u00a0 \u00a0 rng_states = create_xoroshiro128p_states(self.h_acc.shape[0], seed=rng_seed)\u00a0 \u00a0 \u00a0 \u00a0 gpu_monte_carlo_pi_sampler[self.blocks, self.threads_per_block](\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 rng_states, sample_size_per_thread, d_acc)\u00a0 \u00a0 \u00a0 \u00a0 yield d_acc.copy_to_host()\n```\n\u4e0b\u5716\u5c55\u793a\u4e86\u5728 GPU \u4e0a\u904b\u884c\u7684\u7b46\u8a18\u672c\uff1a\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u5c07 GPU \u8207 Apache Beam \u642d\u914d\u4f7f\u7528](https://cloud.google.com/dataflow/docs/guides/interactive-pipeline-development?hl=zh-cn#get_started_with_notebooks) \u793a\u4f8b\u7b46\u8a18\u672c\u3002\n## \u69cb\u5efa\u81ea\u5b9a\u7fa9\u5bb9\u5668\n\u5728\u5927\u591a\u6578\u60c5\u6cc1\u4e0b\uff0c\u5982\u679c\u60a8\u7684\u6d41\u6c34\u7dda\u4e0d\u9700\u8981\u5176\u4ed6 Python \u4f9d\u8cf4\u9805\u6216\u53ef\u57f7\u884c\u6587\u4ef6\uff0c\u5247 Apache Beam \u53ef\u4ee5\u81ea\u52d5\u4f7f\u7528\u5176\u5b98\u65b9\u5bb9\u5668\u6620\u50cf\u4f86\u904b\u884c\u7528\u6236\u5b9a\u7fa9\u7684\u4ee3\u78bc\u3002\u9019\u4e9b\u6620\u50cf\u9644\u5e36\u4e86\u8a31\u591a\u5e38\u898b\u7684 Python \u6a21\u584a\uff0c\u56e0\u6b64\u60a8\u4e0d\u5fc5\u69cb\u5efa\u6216\u660e\u78ba\u6307\u5b9a\u5b83\u5011\u3002\n\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u53ef\u80fd\u5b58\u5728\u984d\u5916\u7684 Python \u4f9d\u8cf4\u9805\uff0c\u751a\u81f3\u975e Python \u4f9d\u8cf4\u9805\u3002\u5728\u9019\u4e9b\u5834\u666f\u4e2d\uff0c\u60a8\u53ef\u4ee5\u69cb\u5efa\u81ea\u5b9a\u7fa9\u5bb9\u5668\u4e26\u5c07\u5176\u63d0\u4f9b\u7d66 Flink \u96c6\u7fa3\u904b\u884c\u3002\u4ee5\u4e0b\u5217\u8868\u63d0\u4f9b\u4e86\u4f7f\u7528\u81ea\u5b9a\u7fa9\u5bb9\u5668\u7684\u512a\u52e2\uff1a\n- \u52a0\u5feb\u6301\u7e8c\u57f7\u884c\u548c\u4ea4\u4e92\u5f0f\u57f7\u884c\u7684\u8a2d\u7f6e\u901f\u5ea6\n- \u7a69\u5b9a\u7684\u914d\u7f6e\u548c\u4f9d\u8cf4\u9805\n- \u9748\u6d3b\u6027\u66f4\u9ad8\uff1a\u60a8\u53ef\u4ee5\u8a2d\u7f6e\u591a\u500b Python \u4f9d\u8cf4\u9805\n\u5bb9\u5668\u69cb\u5efa\u904e\u7a0b\u53ef\u80fd\u5f88\u7e41\u7463\uff0c\u4f46\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4f7f\u7528\u6a21\u5f0f\u5728\u7b46\u8a18\u672c\u4e2d\u57f7\u884c\u6240\u6709\u64cd\u4f5c\u3002\n### \u5275\u5efa\u672c\u5730\u5de5\u4f5c\u5340\n\u9996\u5148\uff0c\u5728 Jupyter \u4e3b\u76ee\u9304\u4e0b\u5275\u5efa\u4e00\u500b\u672c\u5730\u5de5\u4f5c\u76ee\u9304\u3002\n```\n!mkdir -p /home/jupyter/.flink\n```\n### \u6e96\u5099 Python \u4f9d\u8cf4\u9805\n\u63a5\u4e0b\u4f86\uff0c\u5b89\u88dd\u60a8\u53ef\u80fd\u4f7f\u7528\u7684\u6240\u6709\u984d\u5916\u7684 Python \u4f9d\u8cf4\u9805\uff0c\u4e26\u5c07\u5b83\u5011\u5c0e\u51fa\u5230\u9700\u6c42\u6587\u4ef6\u3002\n```\n%pip install dep_a%pip install dep_b...\n```\n\u60a8\u53ef\u4ee5\u4f7f\u7528 `%%writefile` \u7b46\u8a18\u672c\u9b54\u6cd5\u547d\u4ee4\u4f86\u660e\u78ba\u5275\u5efa\u9700\u6c42\u6587\u4ef6\u3002\n```\n%%writefile /home/jupyter/.flink/requirements.txtdep_adep_b...\n```\n\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u5c07\u6240\u6709\u672c\u5730\u4f9d\u8cf4\u9805\u51cd\u7d50\u5230\u9700\u6c42\u6587\u4ef6\u4e2d\u3002\u6b64\u9078\u9805\u53ef\u80fd\u6703\u5f15\u5165\u610f\u5916\u7684\u4f9d\u8cf4\u9805\u3002\n```\n%pip freeze > /home/jupyter/.flink/requirements.txt\n```\n### \u6e96\u5099\u975e Python \u4f9d\u8cf4\u9805\n\u5c07\u6240\u6709\u975e Python \u4f9d\u8cf4\u9805\u8907\u88fd\u5230\u5de5\u4f5c\u5340\u4e2d\u3002\u5982\u679c\u60a8\u6c92\u6709\u4efb\u4f55\u975e Python \u4f9d\u8cf4\u9805\uff0c\u8acb\u8df3\u904e\u6b64\u6b65\u9a5f\u3002\n```\n!cp /path/to/your-dep /home/jupyter/.flink/your-dep...\n```\n### \u5275\u5efa Dockerfile\n\u4f7f\u7528 `%%writefile` \u7b46\u8a18\u672c\u9b54\u6cd5\u547d\u4ee4\u5275\u5efa\u4e00\u500b Dockerfile\u3002\u4f8b\u5982\uff1a\n```\n%%writefile /home/jupyter/.flink/DockerfileFROM apache/beam_python3.7_sdk:2.40.0COPY \u00a0requirements.txt /tmp/requirements.txtCOPY \u00a0your_dep /tmp/your_dep...RUN python -m pip install -r /tmp/requirements.txt\n```\n\u793a\u4f8b\u5bb9\u5668\u4f7f\u7528 Apache Beam SDK 2.40.0 \u7248\u6620\u50cf\uff08\u4ee5 Python 3.7 \u7232\u57fa\u790e\uff09\uff0c\u6dfb\u52a0 `your_dep` \u6587\u4ef6\uff0c\u4e26\u5b89\u88dd\u984d\u5916\u7684 Python \u4f9d\u8cf4\u9805\u3002\u5c07\u6b64 Dockerfile \u7528\u4f5c\u6a21\u677f\uff0c\u4e26\u6839\u64da\u60a8\u7684\u7528\u4f8b\u5c0d\u5176\u9032\u884c\u4fee\u6539\u3002\n\u5728\u60a8\u7684 Apache Beam \u6d41\u6c34\u7dda\u4e2d\uff0c\u5728\u5f15\u7528\u975e Python \u4f9d\u8cf4\u9805\u6642\uff0c\u8acb\u4f7f\u7528\u5176 `COPY` \u76ee\u7684\u5730\u3002\u4f8b\u5982\uff0c `/tmp/your_dep` \u662f `your_dep` \u6587\u4ef6\u7684\u8def\u5f91\u3002\n### \u4f7f\u7528 Cloud Build \u5728 Artifact Registry \u4e2d\u69cb\u5efa\u5bb9\u5668\u6620\u50cf\n- \u5553\u7528 Cloud Build \u548c Artifact Registry \u670d\u52d9\uff08\u5982\u679c\u5c1a\u672a\u5553\u7528\uff09\u3002```\n!gcloud services enable cloudbuild.googleapis.com!gcloud services enable artifactregistry.googleapis.com\n```\n- \u5275\u5efa\u4e00\u500b Artifact Registry \u4ee3\u78bc\u5eab\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4e0a\u50b3\u5de5\u4ef6\u3002\u6bcf\u500b\u4ee3\u78bc\u5eab\u53ef\u4ee5\u5305\u542b\u4e00\u7a2e\u53d7\u652f\u6301\u683c\u5f0f\u7684\u5de5\u4ef6\u3002\u6240\u6709\u4ee3\u78bc\u5eab\u5167\u5bb9\u90fd\u5df2\u4f7f\u7528 Google \u7ba1\u7406\u7684\u52a0\u5bc6\u5bc6\u9470\u6216\u5ba2\u6236\u7ba1\u7406\u7684\u52a0\u5bc6\u5bc6\u9470\u9032\u884c\u52a0\u5bc6\u3002Artifact Registry \u9ed8\u8a8d\u4f7f\u7528 Google \u7ba1\u7406\u7684\u52a0\u5bc6\u5bc6\u9470\uff0c\u6b64\u9078\u9805\u7121\u9700\u9032\u884c\u4efb\u4f55\u914d\u7f6e\u3002\u60a8\u5fc5\u9808\u81f3\u5c11\u5177\u6709\u4ee3\u78bc\u5eab\u7684 [Artifact Registry Writer \u6b0a\u9650](https://cloud.google.com/artifact-registry/docs/access-control?hl=zh-cn#permissions) \u3002\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u5275\u5efa\u65b0\u4ee3\u78bc\u5eab\u3002\u8a72\u547d\u4ee4\u4f7f\u7528 `--async` \u6a19\u8a8c\u4e26\u7acb\u5373\u8fd4\u56de\uff0c\u7121\u9700\u7b49\u5f85\u6b63\u5728\u9032\u884c\u7684\u64cd\u4f5c\u5b8c\u6210\u3002```\ngcloud artifacts repositories create REPOSITORY \\--repository-format=docker \\--location=LOCATION \\--async\n```\u66ff\u63db\u4ee5\u4e0b\u503c\uff1a- \uff1a\u4ee3\u78bc\u5eab\u7684\u540d\u7a31\u3002\u5c0d\u65bc\u9805\u76ee\u4e2d\u7684\u6bcf\u500b\u4ee3\u78bc\u5eab\u4f4d\u7f6e\uff0c\u4ee3\u78bc\u5eab\u540d\u7a31\u4e0d\u5f97\u91cd\u8907\u3002\n- \uff1a\u4ee3\u78bc\u5eab\u7684 [\u4f4d\u7f6e](https://cloud.google.com/artifact-registry/docs/repositories/repo-locations?hl=zh-cn) \u3002\n- \u8acb\u5148\u914d\u7f6e Docker \u4ee5\u5c0d Artifact Registry \u7684\u8acb\u6c42\u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u7136\u5f8c\u518d\u63a8\u9001\u6216\u62c9\u53d6\u6620\u50cf\u3002\u5982\u9700\u7232 Docker \u4ee3\u78bc\u5eab\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngcloud auth configure-docker LOCATION-docker.pkg.dev\n```\u8a72\u547d\u4ee4\u5c07\u66f4\u65b0\u60a8\u7684 Docker \u914d\u7f6e\u3002\u73fe\u5728\uff0c\u60a8\u53ef\u4ee5\u5728 Google Cloud \u9805\u76ee\u4e2d\u8207 Artifact Registry \u9023\u63a5\u4ee5\u63a8\u9001\u6620\u50cf\u3002\n- \u4f7f\u7528 Cloud Build \u69cb\u5efa\u5bb9\u5668\u6620\u50cf\uff0c\u4e26\u5c07\u5176\u4fdd\u5b58\u5230 Artifact Registry\u3002```\n!cd /home/jupyter/.flink \\&& gcloud builds submit \\\u00a0--tag LOCATION.pkg.dev/PROJECT_ID/REPOSITORY/flink:latest \\\u00a0--timeout=20m\n```\u5c07 `` \u66ff\u63db\u7232\u9805\u76ee\u7684\u9805\u76ee ID\u3002\n**\u8b66\u544a** \uff1a\u8acb\u52ff\u5728\u7b46\u8a18\u672c\u5be6\u4f8b\u672c\u8eab\u4e0a\u69cb\u5efa\u5bb9\u5668\u6620\u50cf\uff0c\u56e0\u7232\u5b83\u4e0d\u662f\u4e00\u81f4\u7684\u69cb\u5efa\u74b0\u5883\u3002\n### \u4f7f\u7528\u81ea\u5b9a\u7fa9\u5bb9\u5668\n\u6839\u64da\u904b\u884c\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u5c07\u81ea\u5b9a\u7fa9\u5bb9\u5668\u7528\u65bc\u4e0d\u540c\u76ee\u7684\u3002\n\u5982\u9700\u77ad\u89e3 Apache Beam \u5bb9\u5668\u7684\u4e00\u822c\u7528\u6cd5\uff0c\u8acb\u53c3\u95b1\uff1a\n- [\u5bb9\u5668\u74b0\u5883](https://beam.apache.org/documentation/runtime/environments/) \n- [\u7ba1\u7406 Python \u6d41\u6c34\u7dda\u4f9d\u8cf4\u9805](https://beam.apache.org/documentation/sdks/python-pipeline-dependencies/#custom-containers) \n\u5982\u9700\u77ad\u89e3 Dataflow \u5bb9\u5668\u4f7f\u7528\u60c5\u6cc1\uff0c\u8acb\u53c3\u95b1\uff1a\n- [\u5728 Dataflow \u4e2d\u4f7f\u7528\u81ea\u5b9a\u7fa9\u5bb9\u5668](https://cloud.google.com/dataflow/docs/guides/using-custom-containers?hl=zh-cn) ## \u505c\u7528\u5916\u90e8 IP \u5730\u5740\n\u5275\u5efa Apache Beam \u7b46\u8a18\u672c\u5be6\u4f8b\u6642\uff0c\u5982\u9700\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u8acb\u505c\u7528\u5916\u90e8 IP \u5730\u5740\u3002\u7531\u65bc\u7b46\u8a18\u672c\u5be6\u4f8b\u9700\u8981\u4e0b\u8f09\u4e00\u4e9b\u516c\u5171\u4e92\u806f\u7db2\u8cc7\u6e90\uff08\u4f8b\u5982 [Artifact Registry](https://cloud.google.com/artifact-registry/docs/overview?hl=zh-cn) \uff09\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u5148 [\u5275\u5efa\u4e00\u500b\u6c92\u6709\u5916\u90e8 IP \u5730\u5740\u7684\u65b0 VPC \u7db2\u7d61](https://cloud.google.com/nat/docs/gce-example?hl=zh-cn#create-vpc-network) \u3002\u7136\u5f8c\uff0c [\u7232\u6b64 VPC \u7db2\u7d61\u5275\u5efa Cloud NAT \u7db2\u95dc](https://cloud.google.com/nat/docs/gce-example?hl=zh-cn#create-nat) \u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3 Cloud NAT\uff0c\u8acb\u53c3\u95b1 [Cloud NAT \u6587\u6a94](https://cloud.google.com/nat/docs/overview?hl=zh-cn) \u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528 VPC \u7db2\u7d61\u548c Cloud NAT \u7db2\u95dc\u8a2a\u554f\u5fc5\u8981\u7684\u516c\u5171\u4e92\u806f\u7db2\u8cc7\u6e90\uff0c\u800c\u7121\u9700\u5553\u7528\u5916\u90e8 IP \u5730\u5740\u3002", "guide": "Dataflow"}