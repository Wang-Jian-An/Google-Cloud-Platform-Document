{"title": "Apigee - Backup and recovery with custom storage", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Backup and recovery with custom storage\nYou are currently viewing version 1.4 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis section discusses how to configure backup and recovery of your Cassandra database using `ssh` and your file system instead of using Google Cloud. See also:\n- [Cassandra backup and recovery](/apigee/docs/hybrid/v1.4/backup-recovery) \n- [Cassandra datastore](/apigee/docs/hybrid/v1.4/what-is-hybrid#cassandra-datastore) ", "content": "## \n What is Cassandra backup and recovery with custom storage?\nBackup with custom storage stores backups of your Cassandra database to compressed files in the file system of a server you specify. Backups occur on a schedule you specify in your overrides file. The connection to the server is by secure SSH.\n**Note:** You must ensure there is enough space on the file system for the backups, and adjust the frequency of the backups to avoid unnecessarily filling the alloted storage space. Apigee does not dictate a retention policy for the backup files. You may want to create a retention policy for files appropriate to your installation.\n## \n Setting up backups without Cloud Services\nThe following steps include common examples for completing specific tasks, like creating an SSH  key pair. Use the methods that are appropriate to your installation.\nThe procedure has the following parts:\n- [Set up the server and SSH](#server-ssh) \n- [Set the schedule and destination for backup](#overrides-backup) \n- [Set up for recovery](#overrides-restore) \n### \n Set up the server and SSH\n- Designate a Linux or Unix server for your backups. This server must be reachable using SSH from  your Apigee hybrid runtime plane. It must have enough storage for your backups.\n- Set up an SSH server on the server, or ensure that it has a secure SSH server configured. **Caution:** For security purposes, make sure your SSH server is up to date.\n- Create an SSH key pair and store the private key file in a path that is accessible from your hybrid  runtime plane. **You must use a blank password for your key pair or the backup will fail** . For example:```\nssh-keygen -t rsa -b 4096 -C exampleuser@example.com\n Enter file in which to save the key (/Users/exampleuser/.ssh/id_rsa): $APIGEE_HOME/hybrid-files/certs/ssh_key\n Enter passphrase (empty for no passphrase):\n Enter same passphrase again:\n Your identification has been saved in ssh_key\n Your public key has been saved in ssh_key.pub\n The key fingerprint is:\n SHA256:DWKo334XMZcZYLOLrd/8HNpjTERPJJ0mc11UYmrPvSA exampleuser@example.com\n The key's randomart image is:\n +---[RSA 4096]----+\n |   +. ++X|\n |  . . o.=.*+|\n | . o . . o==o |\n | . . . =oo+o...|\n | .  S +E oo .|\n | . . .. . o .|\n | . . . . o.. |\n |  . ...o ++. |\n |  .. .. +o+. |\n +----[SHA256]-----+\n```\n- Create a user account on the backup server with the name`apigee`. Make sure  the new`apigee`user has a home directory under`/home`.\n- On the backup server, create an`ssh`directory in the new`/home/apigee`directory.\n- Copy the public key (`ssh_key.pub`in the previous example) into a file named`authorized_keys`in the new`/home/apigee/ssh`directory. For example:```\ncd /home/apigee\nmkdir .ssh\ncd .ssh\nvi authorized_keys\n```\n- On your backup server, create a backup directory within the`/home/apigee/`directory. The backup directory can be any directory as long as the`apigee`user has access  to it. For example:```\ncd /home/apigee\nmkdir cassandra-backup\n```\n- Test the connection. You need to make sure that your Cassandra pods can connect to your  backup server using SSH:- Log into the shell of your Cassandra pod. For example:```\nkubectl exec -it -n apigee APIGEE_CASSANDRA_DEFAULT_0 -- /bin/bash\n```Where is the name of a Cassandra pod. Change this to   the name of the pod you want to connect from.\n- Connect by SSH to your backup server, using the server IP address:```\nssh apigee@BACKUP_SERVER_IP\n``` **Note:** You may see a warning at this point saying your server's   fingerprint is unrecognized and asks if you would like to continue. For purposes of this   test, this means you can successfully reach your backup server from your Cassandra pod. You   do not need to continue.\n### \n Set the schedule and destination for backup\nYou set the schedule and destination for backups in your `overrides.yaml` file.\n- Add the following parameters to your`overrides.yaml`file:\n```\ncassandra:\u00a0 backup:\u00a0 \u00a0 enabled: true\u00a0 \u00a0 keyFile: \"PATH_TO_PRIVATE_KEY_FILE\"\u00a0 \u00a0 server: \"BACKUP_SERVER_IP\"\u00a0 \u00a0 storageDirectory: \"/home/apigee/BACKUP_DIRECTORY\"\u00a0 \u00a0 cloudProvider: \"HYBRID\" # required verbatim \"HYBRID\" (all caps)\u00a0 \u00a0 schedule: \"SCHEDULE\"\n``````\ncassandra:\u00a0 backup:\u00a0 \u00a0 enabled: true\u00a0 \u00a0 keyFile: \"/Users/exampleuser/apigee-hybrid/hybrid-files/service-accounts/private.key\"\u00a0 \u00a0 server: \"34.56.78.90\"\u00a0 \u00a0 storageDirectory: \"/home/apigee/cassbackup\"\u00a0 \u00a0 cloudProvider: \"HYBRID\"\u00a0 \u00a0 schedule: \"0 2 * * *\"\n```\nWhere:| Property    | Description                                                                                                 |\n|:------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| backup:enabled   | Backup is disabled by default. You must set this property to true.                                                                                   |\n| backup:keyFile   | PATH_TO_PRIVATE_KEY_FILE The path on your local file system to the SSH private key file (named ssh_key in the step where you created the SSH key pair).                                                             |\n| backup:server   | BACKUP_SERVER_IP The IP address of your backup server.                                                                                      |\n| backup:storageDirectory | BACKUP_DIRECTORY The name of the backup directory on your backup server. This must be a directory within home/apigee (the backup directory is named cassandra_backup in the step where you created the backup directory).                                             |\n| backup:cloudProvider | HYBRID The cloudProvider: \"HYBRID\" property is required.                                                                                     |\n| backup:schedule   | SCHEDULE The time when the backup starts, specified in standard crontab syntax. Default: 0 2 * * * Note: Avoid scheduling a backup that starts a short time after you apply the backup configuration to your cluster. When you apply the backup configuration, Kubernetes recreates the Cassandra nodes. If the backup starts before the nodes restart (possibly several minutes) the backup will fail. |\n- Use`apigeectl`to apply the backup configuration to the storage scope of your  cluster:```\n$APIGEECTL_HOME/apigeectl --datastore -f YOUR_OVERRIDES_FILE\n```Where is the path to the overrides file you just edited.\n### \n Configure restore\nRestoration takes your data from the backup location and restores the data into a new  Cassandra cluster with the same number of nodes. No data is taken from the old Cassandra  cluster.\nThe restoration instructions below are for single region deployments that do not  use Google Cloud Storage for backups. For other deployments, see the following:\n- For single region deployments that do use Google Cloud Storage for backups, see [  Cassandra backup and recovery](/apigee/docs/hybrid/v1.4/backup-recovery) .\n- For multi-region deployments, see [  Multi-region deployment on GKE and GKE on-prem](/apigee/docs/hybrid/v1.4/multi-region) .\nTo restore Cassandra backups:\n- Create a new namespace within the existing Kubernetes cluster that will be used to restore  the hybrid huntime deployment. Do not use the original namespace name for the new namespace.  Do not use the old namespace for restoration.\n- In the root hybrid installation directory, create a new`overrides-restore.yaml`file.\n- Copy the complete Cassandra configuration from your original`overrides.yaml`file into the new`overrides-restore.yaml`file. For example:```\ncp ./overrides.yaml ./overrides-restore.yaml\n```\n- Add a namespace element to the new`overrides-restore.yaml`file.\n```\nnamespace: YOUR_RESTORE_NAMESPACEcassandra:\u00a0 ...\u00a0 restore:\u00a0 \u00a0 enabled: true\u00a0 \u00a0 keyFile: \"PATH_TO_PRIVATE_KEY_FILE\"\u00a0 \u00a0 server: \"BACKUP_SERVER_IP\"\u00a0 \u00a0 storageDirectory: \"/home/apigee/BACKUP_DIRECTORY\"\u00a0 \u00a0 cloudProvider: \"HYBRID\" \u00a0# required verbatim \"HYBRID\" (all caps)\u00a0 \u00a0 snapshotTimestamp: \"BACKUP_TO_RESTORE\"\u00a0 ...\n``````\nnamespace: cassandra-restorecassandra:\u00a0 restore:\u00a0 \u00a0 enabled: true\u00a0 \u00a0 keyFile: \"/Users/exampleuser/apigee-hybrid/hybrid-files/service-accounts/private.key\"\u00a0 \u00a0 server: \"34.56.78.90\"\u00a0 \u00a0 storageDirectory: \"/home/apigee/cassbackup\"\u00a0 \u00a0 cloudProvider: \"HYBRID\"\u00a0 \u00a0 snapshotTimestamp: \"20201001183903\"\n```\n- Where:\n- | Property     | Description                                                     |\n|:--------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| namespace     | YOUR_RESTORE_NAMESPACE The name of the new namespace you created in step 1 for the new Cassandra cluster. Do not use the same namespace you used for your original cluster.            |\n| restore:enabled   | Restore is disabled by default. You must set this property to true.                                       |\n| restore:keyFile   | PATH_TO_PRIVATE_KEY_FILE The path on your local file system to the SSH private key file (named ssh_key in the step where you created the SSH key pair).                 |\n| restore:server   | BACKUP_SERVER_IP The IP address of your backup server.                                          |\n| restore:storageDirectory | BACKUP_DIRECTORY The name of the backup directory on your backup server. This must be a directory within home/apigee (the backup directory is named cassandra_backup in the step where you created the backup directory). |\n| restore:cloudProvider  | HYBRID The cloudProvider: \"HYBRID\" property is required.                                          |\n| restore:snapshotTimestamp | BACKUP_TO_RESTORE The specific backup you want to restore, specified in standard crontab syntax (no wildcards allowed).                          |\n- Change the`app`label on any Cassandra nodes in the old namespace by executing the  following command:```\nkubectl label pods --overwrite --namespace=OLD_NAMESPACE -l app=apigee-cassandra app=apigee-cassandra-old\n```\n- Create a new hybrid runtime deployment. This will create a new Cassandra cluster and begin  restoring the backup data into the cluster:```\n./apigeectl init -f ../overrides-restore.yaml\n``````\n./apigeectl apply -f ../overrides-restore.yaml\n```\n- Once the restoration is complete, the traffic must be switched to use the Cassandra  cluster in the new namespace. Run the following commands to switch the traffic:```\nkubectl get rs -n OLD_NAMESPACE # look for the 'apigee-connect' replicaset\n``````\nkubectl patch rs -n OLD_NAMESPACE APIGEE_CONNECT_RS_NAME -p '{\"spec\":{\"replicas\" : 0}}'\n```\n- Once the traffic switch is complete, you can reconfigure backups on the restored cluster by  removing the`restore`configuration and adding the`backup`configuration to the`overrides-restore.yaml`file. Replacewith the  new namespace name created in [step 1](#create-namespace) .```\nnamespace: YOUR_RESTORE_NAMESPACEcassandra:\u00a0 ...\u00a0 backup:\u00a0 \u00a0 enabled: true\u00a0 \u00a0 serviceAccountPath: SA_JSON_FILE_PATH\u00a0 \u00a0 dbStorageBucket: CLOUD_STORAGE_BUCKET_PATH\u00a0 \u00a0 schedule: BACKUP_SCHEDULE_CODE\u00a0 ...\n```Then apply the `backup` configuration with the following command:```\n./apigeectl apply -f ../overrides-restore.yaml\n```", "guide": "Apigee"}