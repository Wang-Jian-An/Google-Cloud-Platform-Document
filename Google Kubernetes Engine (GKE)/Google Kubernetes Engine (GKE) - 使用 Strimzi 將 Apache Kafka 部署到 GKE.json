{"title": "Google Kubernetes Engine (GKE) - \u4f7f\u7528 Strimzi \u5c07 Apache Kafka \u90e8\u7f72\u5230 GKE", "url": "https://cloud.google.com/kubernetes-engine/docs/tutorials/apache-kafka-strimzi?hl=zh-cn", "abstract": "# Google Kubernetes Engine (GKE) - \u4f7f\u7528 Strimzi \u5c07 Apache Kafka \u90e8\u7f72\u5230 GKE\n\u672c\u6307\u5357\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 [Strimzi](http://www.strimzi.io) \u64cd\u4f5c\u5668\u90e8\u7f72 Apache [Kafka](https://kafka.apache.org/) \u96c6\u7fa3\u3002\nKafka \u662f\u4e00\u500b\u958b\u6e90\u5206\u4f48\u5f0f\u6d88\u606f\u50b3\u905e\u7cfb\u7d71\uff0c\u65e8\u5728\u8655\u7406\u5927\u91cf\u3001\u9ad8\u541e\u5410\u91cf\u548c\u5be6\u6642\u7684\u6d41\u5f0f\u6578\u64da\u3002\u60a8\u53ef\u4ee5\u85c9\u52a9\u5b83\u69cb\u5efa\u6d41\u5f0f\u50b3\u8f38\u6578\u64da\u6d41\u6c34\u7dda\uff0c\u4ee5\u4fbf\u5728\u4e0d\u540c\u7684\u7cfb\u7d71\u548c\u61c9\u7528\u4e4b\u9593\u53ef\u9760\u5730\u50b3\u8f38\u6578\u64da\uff0c\u5f9e\u800c\u7232\u8655\u7406\u548c\u5206\u6790\u4efb\u52d9\u63d0\u4f9b\u652f\u6301\u3002\n\u64cd\u4f5c\u5668\u662f\u4f7f\u7528\u81ea\u5b9a\u7fa9\u8cc7\u6e90\u4f86\u7ba1\u7406\u61c9\u7528\u53ca\u5176\u7d44\u4ef6\u7684\u8edf\u4ef6\u64f4\u5c55\u7a0b\u5e8f\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u4f7f\u7528\u64cd\u4f5c\u5668\u7684\u52d5\u6a5f\uff0c\u8acb\u53c3\u95b1\u958b\u6e90 Kubernetes \u6587\u6a94\u4e2d\u7684 [\u64cd\u4f5c\u5668\u6a21\u5f0f](https://kubernetes.io/docs/concepts/extend-kubernetes/operator/) \u3002Strimzi \u64cd\u4f5c\u5668\u63d0\u4f9b\u9748\u6d3b\u7684\u90e8\u7f72\u9078\u9805\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Kubernetes \u6c61\u9ede\u548c\u5bb9\u5fcd\u5c6c\u6027\u5728\u5c08\u7528\u7bc0\u9ede\u4e0a\u904b\u884c Kafka\u3002\n\u672c\u6307\u5357\u9069\u7528\u65bc\u6709\u610f\u5728 GKE \u4e0a\u90e8\u7f72 Kafka \u96c6\u7fa3\u7684\u5e73\u81fa\u7ba1\u7406\u54e1\u3001\u96f2\u67b6\u69cb\u5e2b\u548c\u904b\u71df\u5c08\u5bb6\u3002\n\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u7b2c\u4e09\u65b9\u64cd\u4f5c\u5668\u90e8\u7f72 Kafka \u96c6\u7fa3\u4f86\u81ea\u52d5\u57f7\u884c\u7ba1\u7406\u4e26\u6e1b\u5c11\u932f\u8aa4\uff0c\u6b64\u89e3\u6c7a\u65b9\u6848\u662f\u4e00\u500b\u5f88\u597d\u7684\u8d77\u9ede\u3002\u5982\u679c\u60a8\u60f3\u8981\u66f4\u7cbe\u7d30\u7684\u904b\u71df\u63a7\u5236\uff0c\u8acb\u53c3\u95b1 [\u5728 GKE \u4e0a\u90e8\u7f72\u9ad8\u53ef\u7528\u6027 Kafka \u96c6\u7fa3](https://cloud.google.com/kubernetes-engine/docs/tutorials/stateful-workloads/kafka?hl=zh-cn) \u3002", "content": "## \u76ee\u6a19\n- \u7232 Apache Kafka \u898f\u5283\u548c\u90e8\u7f72 GKE \u57fa\u790e\u67b6\u69cb\n- \u90e8\u7f72\u548c\u914d\u7f6e Strimzi \u64cd\u4f5c\u5668\n- \u4f7f\u7528 Strimzi \u64cd\u4f5c\u5668\u914d\u7f6e Apache Kafka\n### \u512a\u52e2Strimzi \u5177\u6709\u4ee5\u4e0b\u512a\u52e2\uff1a- Strimzi \u64cd\u4f5c\u5668\u63d0\u4f9b\u7c21\u5316\u7684 Kubernetes \u539f\u751f\u65b9\u6cd5\u4f86\u7ba1\u7406 Kafka \u96c6\u7fa3\u3002Strimzi \u5229\u7528\u4ee3\u8868 Kafka \u4e3b\u984c\u548c\u7528\u6236\u7684\u81ea\u5b9a\u7fa9\u8cc7\u6e90\uff0c\u4f7f\u96c6\u7fa3\u7ba1\u7406\u66f4\u52a0\u7c21\u55ae\u4e26\u8207 Kubernetes \u6700\u4f73\u5be6\u8e10\u4fdd\u6301\u4e00\u81f4\u3002\n- \u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0cStrimzi \u7232\u76e3\u807d\u5668\u751f\u6210\u8b49\u66f8\u4e26\u652f\u6301 TLS\u3001SCRAM-SHA \u548c OAuth \u7b49\u5b89\u5168\u7684\u8eab\u4efd\u9a57\u8b49\u65b9\u6cd5\uff0c\u5f9e\u800c\u512a\u5148\u78ba\u4fdd\u5b89\u5168\u3002Strimzi \u9084\u6703\u8655\u7406\u6240\u6709 Kafka \u76e3\u807d\u5668\u7684 NetworkPolicy\u3002\n- Strimzi \u4e0d\u4f9d\u8cf4\u65bc\u5916\u90e8\u4f9d\u8cf4\u9805\u3002\u5b83\u5305\u62ec\u5177\u6709\u5167\u7f6e\u6307\u6a19\u5c0e\u51fa\u5668\u7684 Kafka \u548c [ZooKeeper](https://zookeeper.apache.org/) \u96c6\u7fa3\uff0c\u4f7f\u60a8\u7121\u9700\u8655\u7406\u5176\u4ed6\u5de5\u5177\u3002\u60a8\u9084\u53ef\u4ee5\u5fae\u8abf\u4ee3\u7406\u914d\u7f6e\uff0c\u4ee5\u6eff\u8db3\u7279\u5b9a\u8981\u6c42\u3002\n## \u90e8\u7f72\u67b6\u69cbKafka \u96c6\u7fa3\u7531\u4e00\u500b\u6216\u591a\u500b\u670d\u52d9\u5668\uff08\u7a31\u7232\u4ee3\u7406\uff09 \u7d44\u6210\uff0c\u9019\u4e9b\u670d\u52d9\u5668\u5354\u540c\u7ba1\u7406\u50b3\u5165\u7684\u6578\u64da\u6d41\uff0c\u4e26\u4fc3\u9032 Kafka \u5ba2\u6236\u7aef\uff08\u7a31\u7232\u4f7f\u7528\u65b9 \uff09\u7684\u767c\u4f48-\u8a02\u95b1\u6d88\u606f\u50b3\u905e\u3002\nKafka \u96c6\u7fa3\u4e2d\u7684\u6bcf\u500b\u6578\u64da\u5206\u5340\u90fd\u5206\u914d\u6709\u4e00\u500b\u4e3b\u8981\u4ee3\u7406 \uff0c\u5b83\u8ca0\u8cac\u7ba1\u7406\u5c0d\u8a72\u5206\u5340\u7684\u6240\u6709\u8b80\u5beb\u64cd\u4f5c\u3002\u8a72\u5206\u5340\u9084\u53ef\u4ee5\u5177\u6709\u4e00\u500b\u6216\u591a\u500b\u8ddf\u96a8\u4ee3\u7406 \uff0c\u9019\u4e9b\u4ee3\u7406\u6703\u88ab\u52d5\u5730\u8907\u88fd\u4e3b\u8981\u4ee3\u7406\u7684\u64cd\u4f5c\u3002\n\u5728\u5178\u578b\u8a2d\u7f6e\u4e2d\uff0cZooKeeper \u901a\u904e\u5e6b\u52a9\u9078\u64c7\u4ee3\u7406\u4e2d\u7684\u4e3b\u8981\u4ee3\u7406\u4e26\u5728\u51fa\u73fe\u4efb\u4f55\u554f\u984c\u6642\u78ba\u4fdd\u9806\u5229\u9032\u884c\u6545\u969c\u5207\u63db\uff0c\u5f9e\u800c\u5354\u8abf Kafka \u96c6\u7fa3\u3002\n\u60a8\u9084\u53ef\u4ee5\u901a\u904e\u6fc0\u6d3b KRaft \u6a21\u5f0f\u5728\u4e0d\u4f7f\u7528 Zookeeper \u7684\u60c5\u6cc1\u4e0b\u90e8\u7f72 Kafka \u914d\u7f6e\uff0c\u4f46 Strimzi \u793e\u5340\u8a8d\u7232\u9019\u7a2e\u65b9\u6cd5\u4e0d\u9069\u5408\u751f\u7522\u74b0\u5883\uff0c\u56e0\u7232\u5b83\u4e0d\u652f\u6301 KafkaTopic \u8cc7\u6e90\u3001\u6191\u64da\u8eab\u4efd\u9a57\u8b49\u7b49\u3002\n### \u53ef\u7528\u6027\u548c\u707d\u96e3\u6062\u5fa9\u672c\u6559\u7a0b\u7232 Kafka \u548c ZooKeeper \u96c6\u7fa3\u4f7f\u7528\u55ae\u7368\u7684 [\u7bc0\u9ede\u6c60](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pools?hl=zh-cn) \u548c [\u53ef\u7528\u5340](https://cloud.google.com/compute/docs/regions-zones?hl=zh-cn) \uff0c\u4ee5\u78ba\u4fdd\u9ad8\u53ef\u7528\u6027\u4f75\u7232\u707d\u96e3\u6062\u5fa9\u505a\u597d\u6e96\u5099\u3002\n\u4f7f\u7528\u591a\u500b\u7bc0\u9ede\u548c\u53ef\u7528\u5340\u5c0d\u65bc\u5728 Google Cloud \u4e2d\u5be6\u73fe\u9ad8\u53ef\u7528\u6027 Kubernetes \u96c6\u7fa3\u81f3\u95dc\u91cd\u8981\uff0c\u539f\u56e0\u5982\u4e0b\uff1a- \u5bb9\u932f\u6027\uff1a\u591a\u500b\u7bc0\u9ede\u5728\u6574\u500b\u96c6\u7fa3\u4e2d\u5206\u914d\u5de5\u4f5c\u8ca0\u8f09\uff0c\u78ba\u4fdd\u67d0\u500b\u7bc0\u9ede\u767c\u751f\u6545\u969c\u6642\uff0c\u5176\u4ed6\u7bc0\u9ede\u53ef\u4ee5\u63a5\u7ba1\u4efb\u52d9\uff0c\u5f9e\u800c\u9632\u6b62\u7522\u751f\u505c\u6a5f\u6642\u9593\u548c\u767c\u751f\u670d\u52d9\u4e2d\u65b7\u3002\n- \u53ef\u4f38\u7e2e\u6027\uff1a\u4f7f\u7528\u591a\u500b\u7bc0\u9ede\u53ef\u78ba\u4fdd\u6a6b\u5411\u64f4\u7e2e\u53ef\u4ee5\u6839\u64da\u9700\u8981\u6dfb\u52a0\u6216\u79fb\u9664\u7bc0\u9ede\uff0c\u5f9e\u800c\u78ba\u4fdd\u6700\u4f73\u8cc7\u6e90\u5206\u914d\u4e26\u9069\u61c9\u589e\u52a0\u7684\u6d41\u91cf\u6216\u5de5\u4f5c\u8ca0\u8f09\u9700\u6c42\u3002\n- \u9ad8\u53ef\u7528\u6027\uff1a\u5728\u5340\u57df\u5167\u4f7f\u7528\u591a\u500b\u53ef\u7528\u5340\u53ef\u78ba\u4fdd\u5197\u9918\uff0c\u4e26\u6700\u5927\u9650\u5ea6\u5730\u964d\u4f4e\u55ae\u9ede\u6545\u969c\u98a8\u96aa\u3002\u5982\u679c\u6574\u500b\u53ef\u7528\u5340\u767c\u751f\u670d\u52d9\u4e2d\u65b7\uff0c\u5247\u96c6\u7fa3\u53ef\u4ee5\u7e7c\u7e8c\u5728\u5176\u4ed6\u53ef\u7528\u5340\u4e2d\u904b\u884c\uff0c\u5f9e\u800c\u4fdd\u6301\u670d\u52d9\u53ef\u7528\u6027\u3002\n- \u5730\u7406\u4f4d\u7f6e\u5197\u9918\uff1a\u901a\u904e\u8b93\u7bc0\u9ede\u8de8\u8d8a\u5404\u500b\u5340\u57df\uff0c\u96c6\u7fa3\u7684\u6578\u64da\u548c\u670d\u52d9\u53ef\u5206\u4f48\u5728\u4e0d\u540c\u5730\u7406\u4f4d\u7f6e\uff0c\u5f9e\u800c\u9632\u7bc4\u81ea\u7136\u707d\u5bb3\u3001\u96fb\u529b\u4e2d\u65b7\u6216\u53ef\u80fd\u5f71\u97ff\u55ae\u500b\u53ef\u7528\u5340\u7684\u5176\u4ed6\u672c\u5730\u4e2d\u65b7\u3002\n- \u6efe\u52d5\u66f4\u65b0\u548c\u7dad\u8b77\uff1a\u4f7f\u7528\u591a\u500b\u53ef\u7528\u5340\u53ef\u78ba\u4fdd\u80fd\u5920\u5728\u55ae\u500b\u7bc0\u9ede\u4e0a\u57f7\u884c\u6efe\u52d5\u66f4\u65b0\u548c\u7dad\u8b77\uff0c\u800c\u4e0d\u6703\u5f71\u97ff\u96c6\u7fa3\u7684\u6574\u9ad4\u53ef\u7528\u6027\u3002\u9019\u6a23\u53ef\u78ba\u4fdd\u670d\u52d9\u4e0d\u4e2d\u65b7\uff0c\u540c\u6642\u7121\u7e2b\u61c9\u7528\u5fc5\u8981\u7684\u66f4\u65b0\u548c\u88dc\u4e01\u3002\n- \u670d\u52d9\u7b49\u7d1a\u5354\u8b70 (SLA)\uff1aGoogle Cloud \u7232\u591a\u53ef\u7528\u5340\u90e8\u7f72\u63d0\u4f9b\u670d\u52d9\u7b49\u7d1a\u5354\u8b70\uff0c\u4fdd\u8b49\u6700\u4f4e\u7d1a\u5225\u7684\u6b63\u5e38\u904b\u884c\u6642\u9593\u548c\u53ef\u7528\u6027\u3002\n### \u90e8\u7f72\u5716\u793a\u4e0b\u5716\u986f\u793a\u4e86\u5728 GKE \u96c6\u7fa3\u4e2d\u7684\u591a\u500b\u7bc0\u9ede\u548c\u53ef\u7528\u5340\u4e0a\u904b\u884c\u7684 Kafka \u96c6\u7fa3\uff1a\u5728\u8a72\u5716\u4e2d\uff0cKafka `StrimziPodSet` \u90e8\u7f72\u5728\u4e09\u500b\u4e0d\u540c\u53ef\u7528\u5340\u7684\u4e09\u500b\u7bc0\u9ede\u4e0a\u3002\u60a8\u53ef\u4ee5\u901a\u904e\u5728 `StrimziPodSet` \u81ea\u5b9a\u7fa9\u8cc7\u6e90\u898f\u7bc4\u4e0a\u8a2d\u7f6e\u5fc5\u9700\u7684 Pod [\u89aa\u548c\u6027](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/) \u548c [\u62d3\u64b2\u64f4\u5c55](https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/) \u898f\u5247\u4f86\u63a7\u5236\u6b64\u914d\u7f6e\u3002\n\u5982\u679c\u4e00\u500b\u53ef\u7528\u5340\u767c\u751f\u6545\u969c\uff0cGKE \u5c07\u4f7f\u7528\u63a8\u85a6\u7684\u914d\u7f6e\u5728\u65b0\u7bc0\u9ede\u4e0a\u91cd\u65b0\u8abf\u5ea6 Pod\uff0c\u4e26\u5f9e\u5269\u9918\u526f\u672c\u4e2d\u8907\u88fd Kafka \u548c Zookeeper \u7684\u6578\u64da\u3002\n\u4e0b\u5716\u986f\u793a\u4e86\u4f4d\u65bc\u4e09\u500b\u4e0d\u540c\u53ef\u7528\u5340\u7684\u4e09\u500b\u7bc0\u9ede\u4e0a\u7684 ZooKeeper `StrimziPodSet` \uff1a\n### StrimziPodSet \u81ea\u5b9a\u7fa9\u8cc7\u6e90\u672c\u6559\u7a0b\u4f7f\u7528 Strimzi 0.29 \u7248\u4e2d\u5f15\u5165\u7684 [StrimziPodSet](https://strimzi.io/docs/operators/in-development/configuring.html#type-StrimziPodSet-reference) \u81ea\u5b9a\u7fa9\u8cc7\u6e90\uff0c\u800c\u4e0d\u662f `StatefulSets` \u3002\n`StrimziPodSet` \u8cc7\u6e90\u7232\u96c6\u7fa3\u63d0\u4f9b\u4e86\u589e\u5f37\u7684\u53ef\u4f38\u7e2e\u6027\uff0c\u8b93\u60a8\u53ef\u4ee5\u50b3\u905e\u914d\u7f6e\u9078\u9805\uff0c\u5f9e\u800c\u5c0d Pod \u9032\u884c\u66f4\u7cbe\u7d30\u7684\u66f4\u6539\u3002 `StrimziPodSet` \u8cc7\u6e90\u5728 Strimzi 0.35 \u53ca\u66f4\u9ad8\u7248\u672c\u4e2d\u9ed8\u8a8d\u8655\u65bc\u5553\u7528\u72c0\u614b\u3002## \u8cbb\u7528  Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them \n\u5728\u672c\u6587\u6a94\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 Google Cloud \u7684\u4ee5\u4e0b\u6536\u8cbb\u7d44\u4ef6\uff1a\n- [Compute Engine](https://cloud.google.com/compute/disks-image-pricing?hl=zh-cn) \n- [GKE](https://cloud.google.com/kubernetes-engine/pricing?hl=zh-cn) \n- [Managed Service for Prometheus](https://cloud.google.com/stackdriver/pricing?hl=zh-cn#mgd-prometheus-pricing-summary) \n- [Backup for GKE](https://cloud.google.com/kubernetes-engine/pricing?hl=zh-cn#backup-for-gke) \n\u60a8\u53ef\u4f7f\u7528 [\u50f9\u683c\u8a08\u7b97\u5668](https://cloud.google.com/products/calculator?hl=zh-cn) \u6839\u64da\u60a8\u7684\u9810\u8a08\u4f7f\u7528\u60c5\u6cc1\u4f86\u4f30\u7b97\u8cbb\u7528\u3002 \nTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5b8c\u6210\u672c\u6587\u6a94\u4e2d\u63cf\u8ff0\u7684\u4efb\u52d9\u5f8c\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u522a\u9664\u6240\u5275\u5efa\u7684\u8cc7\u6e90\u4f86\u907f\u514d\u7e7c\u7e8c\u8a08\u8cbb\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e05\u7406](#clean-up) \u3002## \u6e96\u5099\u5de5\u4f5c- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u5411\u60a8\u7684 Google \u8cec\u865f\u6388\u4e88\u89d2\u8272\u3002\u5c0d\u4ee5\u4e0b\u6bcf\u500b IAM \u89d2\u8272\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e00\u6b21\uff1a `roles/storage.objectViewer, roles/logging.logWriter, roles/container.clusterAdmin, roles/container.serviceAgent, roles/iam.serviceAccountAdmin, roles/serviceusage.serviceUsageAdmin, roles/iam.serviceAccountAdmin````\ngcloud projects add-iam-policy-binding PROJECT_ID --member=\"user:EMAIL_ADDRESS\" --role=ROLE\n```- \u5c07``\u66ff\u63db\u7232\u60a8\u7684\u9805\u76ee ID\u3002\n- \u5c07``\u66ff\u63db\u7232\u60a8\u7684\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u3002\n- \u5c07``\u66ff\u63db\u7232\u6bcf\u500b\u89d2\u8272\u3002## \u6e96\u5099\u74b0\u5883\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 [Cloud Shell](https://cloud.google.com/shell?hl=zh-cn) \u4f86\u7ba1\u7406 Google Cloud \u4e0a\u8a17\u7ba1\u7684\u8cc7\u6e90\u3002Cloud Shell \u9810\u5b89\u88dd\u4e86\u672c\u6559\u7a0b\u6240\u9700\u7684\u8edf\u4ef6\uff0c\u5305\u62ec [kubectl](https://kubernetes.io/docs/reference/kubectl/) \u3001 [gcloud CLI](https://cloud.google.com/sdk/gcloud?hl=zh-cn) \u3001 [Helm](https://helm.sh/) \u548c [Terraform](https://cloud.google.com/docs/terraform?hl=zh-cn) \u3002\n\u5982\u9700\u4f7f\u7528 Cloud Shell \u8a2d\u7f6e\u60a8\u7684\u74b0\u5883\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u9ede\u64ca [Google Cloud \u63a7\u5236\u6aaf](https://console.cloud.google.com/?hl=zh-cn) \u4e2d\u7684 **\u6fc0\u6d3b Cloud Shell** \uff0c\u5f9e Google Cloud \u63a7\u5236\u6aaf\u5553\u52d5 Cloud Shell \u6703\u8a71\u3002\u6b64\u64cd\u4f5c\u6703\u5728 Google Cloud \u63a7\u5236\u6aaf\u7684\u5e95\u90e8\u7a97\u683c\u4e2d\u5553\u52d5\u6703\u8a71\u3002\n- \u8a2d\u7f6e\u74b0\u5883\u8b8a\u91cf\uff1a```\nexport PROJECT_ID=PROJECT_ID\nexport KUBERNETES_CLUSTER_PREFIX=kafka\nexport REGION=us-central1\n```\u66ff\u63db `` \uff1a\u60a8\u7684 Google Cloud [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifying_projects) \u3002\n- \u514b\u9686 GitHub \u4ee3\u78bc\u5eab\uff1a```\ngit clone https://github.com/GoogleCloudPlatform/kubernetes-engine-samples\n```\n- \u5207\u63db\u5230\u5de5\u4f5c\u76ee\u9304\uff1a```\ncd kubernetes-engine-samples/streaming/\n```\n## \u5275\u5efa\u96c6\u7fa3\u57fa\u790e\u67b6\u69cb\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u904b\u884c Terraform \u8173\u672c\u4ee5\u5275\u5efa\u53ef\u7528\u6027\u9ad8\u7684\u5c08\u7528\u5340\u57df\u7d1a GKE \u96c6\u7fa3\u3002\u901a\u904e\u57f7\u884c\u4ee5\u4e0b\u6b65\u9a5f\uff0c\u53ef\u4ee5\u516c\u958b\u8a2a\u554f\u63a7\u5236\u5e73\u9762\u3002\u5982\u9700\u9650\u5236\u8a2a\u554f\u6b0a\u9650\uff0c\u8acb\u5275\u5efa [\u5c08\u7528\u96c6\u7fa3](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept?hl=zh-cn) \u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528 [Standard \u6216 Autopilot](https://cloud.google.com/kubernetes-engine/docs/concepts/choose-cluster-mode?hl=zh-cn) \u96c6\u7fa3\u5b89\u88dd\u64cd\u4f5c\u5668\u3002\n\u4e0b\u5716\u986f\u793a\u4e86\u90e8\u7f72\u5728\u4e09\u500b\u4e0d\u540c\u53ef\u7528\u5340\u4e2d\u7684\u5c08\u7528\u5340\u57df\u7d1a Standard GKE \u96c6\u7fa3\uff1a\u82e5\u8981\u90e8\u7f72\u6b64\u57fa\u790e\u67b6\u69cb\uff0c\u8acb\u5f9e Cloud Shell \u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\nexport GOOGLE_OAUTH_ACCESS_TOKEN=$(gcloud auth print-access-token)terraform -chdir=kafka/terraform/gke-standard initterraform -chdir=kafka/terraform/gke-standard apply -var project_id=${PROJECT_ID} \\\u00a0 -var region=${REGION} \\\u00a0 -var cluster_prefix=${KUBERNETES_CLUSTER_PREFIX}\n```\n\u51fa\u73fe\u63d0\u793a\u6642\uff0c\u8acb\u8f38\u5165 `yes` \u3002\u5b8c\u6210\u6b64\u547d\u4ee4\u4e26\u4f7f\u96c6\u7fa3\u986f\u793a\u5c31\u7dd2\u72c0\u614b\u53ef\u80fd\u9700\u8981\u5e7e\u5206\u9418\u6642\u9593\u3002\nTerraform \u6703\u5275\u5efa\u4ee5\u4e0b\u8cc7\u6e90\uff1a- Kubernetes \u7bc0\u9ede\u7684 VPC \u7db2\u7d61\u548c\u5c08\u7528\u5b50\u7db2\u3002\n- \u7528\u65bc\u901a\u904e NAT \u8a2a\u554f\u4e92\u806f\u7db2\u7684\u8def\u7531\u5668\u3002\n- \u5c08\u7528 GKE \u96c6\u7fa3\uff08\u5728`us-central1`\u5340\u57df\u4e2d\uff09\u3002\n- 2 \u500b\u5553\u7528\u4e86\u81ea\u52d5\u64f4\u7e2e\u529f\u80fd\u7684\u7bc0\u9ede\u6c60\uff08\u6bcf\u500b\u53ef\u7528\u5340 1-2 \u500b\u7bc0\u9ede\uff0c\u6bcf\u500b\u53ef\u7528\u5340\u81f3\u5c11 1 \u500b\u7bc0\u9ede\uff09\n- \u5177\u6709\u65e5\u8a8c\u8a18\u9304\u548c\u76e3\u63a7\u6b0a\u9650\u7684`ServiceAccount`\u3002\n- \u7528\u65bc\u707d\u96e3\u6062\u5fa9\u7684 Backup for GKE\n- Google Cloud Managed Service for Prometheus\uff0c\u7528\u65bc\u76e3\u63a7\u96c6\u7fa3\u3002\n\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\n...\nApply complete! Resources: 14 added, 0 changed, 0 destroyed.\nOutputs:\nkubectl_connection_command = \"gcloud container clusters get-credentials strimzi-cluster --region us-central1\"\n```\n\u4e0b\u5716\u986f\u793a\u4e86\u5c08\u7528\u5340\u57df\u7d1a Autopilot GKE \u96c6\u7fa3\uff1a\u82e5\u8981\u90e8\u7f72\u6b64\u57fa\u790e\u67b6\u69cb\uff0c\u8acb\u5f9e Cloud Shell \u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\nexport GOOGLE_OAUTH_ACCESS_TOKEN=$(gcloud auth print-access-token)terraform -chdir=kafka/terraform/gke-autopilot initterraform -chdir=kafka/terraform/gke-autopilot apply -var project_id=${PROJECT_ID} \\\u00a0 -var region=${REGION} \\\u00a0 -var cluster_prefix=${KUBERNETES_CLUSTER_PREFIX}\n```\n\u51fa\u73fe\u63d0\u793a\u6642\uff0c\u8acb\u8f38\u5165 `yes` \u3002\u5b8c\u6210\u6b64\u547d\u4ee4\u4e26\u4f7f\u96c6\u7fa3\u986f\u793a\u5c31\u7dd2\u72c0\u614b\u53ef\u80fd\u9700\u8981\u5e7e\u5206\u9418\u6642\u9593\u3002\nTerraform \u6703\u5275\u5efa\u4ee5\u4e0b\u8cc7\u6e90\uff1a- Kubernetes \u7bc0\u9ede\u7684 VPC \u7db2\u7d61\u548c\u5c08\u7528\u5b50\u7db2\u3002\n- \u7528\u65bc\u901a\u904e NAT \u8a2a\u554f\u4e92\u806f\u7db2\u7684\u8def\u7531\u5668\u3002\n- \u5c08\u7528 GKE \u96c6\u7fa3\uff08\u5728`us-central1`\u5340\u57df\u4e2d\uff09\u3002\n- \u5177\u6709\u65e5\u8a8c\u8a18\u9304\u548c\u76e3\u63a7\u6b0a\u9650\u7684`ServiceAccount`\n- Google Cloud Managed Service for Prometheus\uff0c\u7528\u65bc\u76e3\u63a7\u96c6\u7fa3\u3002\n\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\n...\nApply complete! Resources: 12 added, 0 changed, 0 destroyed.\nOutputs:\nkubectl_connection_command = \"gcloud container clusters get-credentials strimzi-cluster --region us-central1\"\n```\n### \u9023\u63a5\u5230\u96c6\u7fa3\u914d\u7f6e `kubectl` \u4ee5\u8207\u96c6\u7fa3\u901a\u4fe1\uff1a\n```\ngcloud container clusters get-credentials ${KUBERNETES_CLUSTER_PREFIX}-cluster --region ${REGION}\n```## \u5c07 Strimzi \u64cd\u4f5c\u5668\u90e8\u7f72\u5230\u60a8\u7684\u96c6\u7fa3\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 Helm \u5716\u8868\u90e8\u7f72 Strimzi \u64cd\u4f5c\u5668\u3002\u60a8\u9084\u53ef\u4ee5\u901a\u904e [\u5e7e\u7a2e\u5176\u4ed6\u65b9\u5f0f](https://strimzi.io/docs/operators/in-development/full/deploying.html#con-strimzi-installation-methods_str) \u90e8\u7f72 Strimzi\u3002- \u6dfb\u52a0 Strimzi Helm \u5716\u8868\u4ee3\u78bc\u5eab\uff1a```\nhelm repo add strimzi https://strimzi.io/charts/\n```\n- \u7232 Strimzi \u64cd\u4f5c\u5668\u548c Kafka \u96c6\u7fa3\u6dfb\u52a0\u547d\u540d\u7a7a\u9593\uff1a```\nkubectl create ns kafka\n```\n- \u4f7f\u7528 Helm \u90e8\u7f72 Strimzi Cluster Operator\uff1a```\nhelm install strimzi-operator strimzi/strimzi-kafka-operator -n kafka\n```\u5982\u9700\u5c07 Strimzi Cluster Operator \u548c Kafka \u96c6\u7fa3\u90e8\u7f72\u5230\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u9593\uff0c\u8acb\u5c07\u53c3\u6578 `--set watchNamespaces=\"{kafka-namespace,kafka-namespace-2,...}\"` \u6dfb\u52a0\u5230 helm \u547d\u4ee4\u3002\n- \u4f7f\u7528 Helm \u9a57\u8b49 Strimzi Cluster Operator \u662f\u5426\u5df2\u6210\u529f\u90e8\u7f72\uff1a```\nhelm ls -n kafka\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nNAME   NAMESPACE REVISION UPDATED        STATUS CHART      APP VERSION\nstrimzi-operator kafka  1  2023-06-27 11:22:15.850545 +0200 CEST deployed strimzi-kafka-operator-0.35.0 0.35.0\n```\n## \u90e8\u7f72 Kafka\u5c07\u64cd\u4f5c\u5668\u90e8\u7f72\u5230\u96c6\u7fa3\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u90e8\u7f72 Kafka \u96c6\u7fa3\u5be6\u4f8b\u4e86\u3002\n\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u5728\u57fa\u672c\u914d\u7f6e\u4e2d\u90e8\u7f72 Kafka\uff0c\u7136\u5f8c\u5617\u8a66\u5404\u7a2e\u9ad8\u7d1a\u914d\u7f6e\u5834\u666f\u4ee5\u6eff\u8db3\u53ef\u7528\u6027\u3001\u5b89\u5168\u6027\u548c\u53ef\u89c0\u6e2c\u6027\u8981\u6c42\u3002\n### \u57fa\u672c\u914d\u7f6eKafka \u5be6\u4f8b\u7684\u57fa\u672c\u914d\u7f6e\u5305\u62ec\u4ee5\u4e0b\u7d44\u6210\u90e8\u5206\uff1a- Kafka \u4ee3\u7406\u7684\u4e09\u500b\u526f\u672c\uff0c\u81f3\u5c11\u9700\u8981\u5169\u500b\u53ef\u7528\u526f\u672c\u4f86\u5be6\u73fe\u96c6\u7fa3\u4e00\u81f4\u6027\u3002\n- ZooKeeper \u7bc0\u9ede\u7684\u4e09\u500b\u526f\u672c\uff0c\u5f62\u6210\u4e00\u500b\u96c6\u7fa3\u3002\n- \u5169\u500b Kafka \u76e3\u807d\u5668\uff1a\u4e00\u500b\u4e0d\u4f7f\u7528\u8eab\u4efd\u9a57\u8b49\uff0c\u53e6\u4e00\u500b\u5229\u7528 TLS \u8eab\u4efd\u9a57\u8b49\uff08\u4f7f\u7528 Strimzi \u751f\u6210\u7684\u8b49\u66f8\uff09\u3002\n- Java MaxHeapSize \u548c MinHeapSize \u8a2d\u7f6e\u7232 4 GB\uff08\u5c0d\u65bc Kafka\uff09\u548c 2 GB\uff08\u5c0d\u65bc ZooKeeper\uff09\u3002\n- CPU \u8cc7\u6e90\u5206\u914d\uff1a1 \u500b CPU \u8acb\u6c42\u548c 2 \u500b CPU \u9650\u5236\uff08\u5c0d\u65bc Kafka \u548c ZooKeeper\uff09\uff0c\u540c\u6642 Kafka \u7684\u5167\u5b58\u8acb\u6c42\u548c\u9650\u5236\u7232 5 GB\uff08\u4e3b\u670d\u52d9\u7232 4 GB\uff0c\u6307\u6a19\u5c0e\u51fa\u5668\u7232 0.5 GB\uff09\uff0cZooKeeper \u7232 2.5 GB\uff08\u4e3b\u670d\u52d9\u7232 2 GB\uff0c\u6307\u6a19\u5c0e\u51fa\u7232 0.5 GB\uff09\u3002\n- \u5be6\u9ad4\u64cd\u4f5c\u5668\uff0c\u5176\u8acb\u6c42\u548c\u9650\u5236\u5982\u4e0b\uff1a- `tlsSidecar`\uff1a100 m/500 m CPU \u548c 128 Mi \u5167\u5b58\u3002\n- `topicOperator`\uff1a100 m/500 m CPU \u548c 512 Mi \u5167\u5b58\u3002\n- `userOperator`\uff1a500 m CPU \u548c 2 Gi \u5167\u5b58\u3002\n- 100 GB \u5b58\u5132\u7a7a\u9593\uff08\u4f7f\u7528`premium-rwo``storageClass`\u5206\u914d\u7d66\u6bcf\u500b Pod\uff09\u3002\n- \u7232\u6bcf\u500b\u5de5\u4f5c\u8ca0\u8f09\u914d\u7f6e\u5bb9\u5fcd\u3001nodeAffinity \u548c podAntiAffinity\uff0c\u5229\u7528\u5176\u5404\u81ea\u7684\u7bc0\u9ede\u6c60\u548c\u4e0d\u540c\u7684\u53ef\u7528\u5340\uff0c\u78ba\u4fdd\u8de8\u7bc0\u9ede\u9069\u7576\u5206\u4f48\u3002\n- \u96c6\u7fa3\u5167\u901a\u4fe1\uff08\u7531\u81ea\u7c3d\u540d\u8b49\u66f8\u4fdd\u8b77\uff09\uff1a\u96c6\u7fa3\u548c\u5ba2\u6236\u7aef (mTLS) \u55ae\u7368\u7684\u8b49\u66f8\u6388\u6b0a\u6a5f\u69cb (CA)\u3002\u4e5f\u53ef\u4ee5\u914d\u7f6e\u7232\u4f7f\u7528\u5176\u4ed6\u8b49\u66f8\u6388\u6b0a\u6a5f\u69cb\u3002\n\u6b64\u914d\u7f6e\u8868\u793a\u5275\u5efa\u53ef\u76f4\u63a5\u7528\u65bc\u751f\u7522\u74b0\u5883\u7684 Kafka \u96c6\u7fa3\u6240\u9700\u7684\u6700\u5c11\u8a2d\u7f6e\u3002\u4ee5\u4e0b\u90e8\u5206\u6f14\u793a\u7684\u81ea\u5b9a\u7fa9\u914d\u7f6e\u53ef\u89e3\u6c7a\u96c6\u7fa3\u5b89\u5168\u3001\u8a2a\u554f\u63a7\u5236\u5217\u8868 (ACL)\u3001\u4e3b\u984c\u7ba1\u7406\u3001\u8b49\u66f8\u7ba1\u7406\u7b49\u65b9\u9762\u7684\u9700\u8981\u3002\n### \u5275\u5efa\u57fa\u672c Kafka \u96c6\u7fa3\n- \u4f7f\u7528\u57fa\u672c\u914d\u7f6e\u5275\u5efa\u65b0\u7684 Kafka \u96c6\u7fa3\uff1a```\nkubectl apply -n kafka -f kafka-strimzi/manifests/01-basic-cluster/my-cluster.yaml\n```\u6b64\u547d\u4ee4\u6703\u5275\u5efa Strimzi \u64cd\u4f5c\u5668\u7684 Kafka \u81ea\u5b9a\u7fa9\u8cc7\u6e90\uff0c\u8a72\u8cc7\u6e90\u5305\u542b CPU \u53ca\u5167\u5b58\u8acb\u6c42\u548c\u9650\u5236\u3001\u584a\u5b58\u5132\u8acb\u6c42\u4ee5\u53ca\u6c61\u9ede\u548c\u89aa\u548c\u6027\u7d44\u5408\uff0c\u7528\u65bc\u5728\u5404 Kubernetes \u7bc0\u9ede\u4e4b\u9593\u5206\u767c\u9810\u914d\u7684 Pod\u3002\n- \u8acb\u7b49\u5f85\u5e7e\u5206\u9418\uff0c\u8b93 Kubernetes \u5553\u52d5\u6240\u9700\u7684\u5de5\u4f5c\u8ca0\u8f09\uff1a```\nkubectl wait kafka/my-cluster --for=condition=Ready --timeout=600s -n kafka\n```\n- \u9a57\u8b49\u662f\u5426\u5df2\u5275\u5efa Kafka \u5de5\u4f5c\u8ca0\u8f09\uff1a```\nkubectl get pod,service,deploy,pdb -l=strimzi.io/cluster=my-cluster -n kafka\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nNAME           READY STATUS RESTARTS AGE\npod/my-cluster-entity-operator-848698874f-j5m7f 3/3 Running 0  44m\npod/my-cluster-kafka-0       1/1 Running 0  5m\npod/my-cluster-kafka-1       1/1 Running 0  5m\npod/my-cluster-kafka-2       1/1 Running 0  5m\npod/my-cluster-zookeeper-0      1/1 Running 0  6m\npod/my-cluster-zookeeper-1      1/1 Running 0  6m\npod/my-cluster-zookeeper-2      1/1 Running 0  6m\nNAME        TYPE  CLUSTER-IP EXTERNAL-IP PORT(S)        AGE\nservice/my-cluster-kafka-bootstrap ClusterIP 10.52.8.80 <none>  9091/TCP,9092/TCP,9093/TCP   5m\nservice/my-cluster-kafka-brokers ClusterIP None   <none>  9090/TCP,9091/TCP,9092/TCP,9093/TCP 5m\nservice/my-cluster-zookeeper-client ClusterIP 10.52.11.144 <none>  2181/TCP       6m\nservice/my-cluster-zookeeper-nodes ClusterIP None   <none>  2181/TCP,2888/TCP,3888/TCP   6m\nNAME          READY UP-TO-DATE AVAILABLE AGE\ndeployment.apps/my-cluster-entity-operator 1/1 1   1   44m\nNAME           MIN AVAILABLE MAX UNAVAILABLE ALLOWED DISRUPTIONS AGE\npoddisruptionbudget.policy/my-cluster-kafka  2    N/A    1     5m\npoddisruptionbudget.policy/my-cluster-zookeeper 2    N/A    1     6m\n```\n\u64cd\u4f5c\u5668\u5275\u5efa\u4ee5\u4e0b\u8cc7\u6e90\uff1a- \u5169\u500b`StrimziPodSets`\uff0c\u7528\u65bc Kafka \u548c ZooKeeper\u3002\n- \u7528\u65bc Kafka \u4ee3\u7406\u526f\u672c\u7684\u4e09\u500b Pod\u3002\n- \u7528\u65bc ZooKeeper \u526f\u672c\u7684\u4e09\u500b Pod\u3002\n- \u5169\u500b`PodDisruptionBudgets`\uff0c\u7232\u5be6\u73fe\u96c6\u7fa3\u4e00\u81f4\u6027\uff0c\u78ba\u4fdd\u6700\u5c11\u5169\u500b\u526f\u672c\u53ef\u7528\u3002\n- \u540d\u7232`my-cluster-kafka-bootstrap`\u7684 Service\uff0c\u7528\u4f5c\u5f9e Kubernetes \u96c6\u7fa3\u5167\u9023\u63a5\u7684 Kafka \u5ba2\u6236\u7aef\u7684\u5f15\u5c0e\u670d\u52d9\u5668\u3002\u6240\u6709\u5167\u90e8 Kafka \u76e3\u807d\u5668\u5728\u6b64 Service \u4e2d\u90fd\u53ef\u7528\u3002\n- \u540d\u7232`my-cluster-kafka-brokers`\u7684\u7121\u982d Service\uff0c\u7528\u65bc\u76f4\u63a5\u5c0d Kafka \u4ee3\u7406 Pod IP \u5730\u5740\u9032\u884c DNS \u89e3\u6790\u3002\u6b64 Service \u7528\u65bc\u4ee3\u7406\u9593\u901a\u4fe1\u3002\n- \u540d\u7232`my-cluster-zookeeper-client`\u7684 Service\uff0c\u5141\u8a31 Kafka \u4ee3\u7406\u4f5c\u7232\u5ba2\u6236\u7aef\u9023\u63a5\u5230 ZooKeeper \u7bc0\u9ede\u3002\n- \u540d\u7232`my-cluster-zookeeper-nodes`\u7684\u7121\u982d Service\uff0c\u652f\u6301\u76f4\u63a5\u5c0d ZooKeeper Pod IP \u5730\u5740\u9032\u884cDNS \u89e3\u6790\u3002\u6b64\u670d\u52d9\u7528\u65bc\u5728 ZooKeeper \u526f\u672c\u4e4b\u9593\u5efa\u7acb\u9023\u63a5\u3002\n- \u540d\u7232`my-cluster-entity-operator`\u7684 Deployment\uff0c\u5176\u4e2d\u5305\u542b [topic-operator \u548c user-operator](https://strimzi.io/docs/operators/latest/configuring.html#assembly-kafka-entity-operator-str) \uff0c\u4e26\u4e14\u6709\u52a9\u65bc\u7ba1\u7406\u81ea\u5b9a\u7fa9\u8cc7\u6e90`KafkaTopics`\u548c`KafkaUsers`\u3002\n\u60a8\u9084\u53ef\u4ee5\u914d\u7f6e\u5169\u500b `NetworkPolicies` \uff0c\u4ee5\u4fbf\u5f9e\u4efb\u4f55 Pod \u548c\u547d\u540d\u7a7a\u9593\u9023\u63a5\u5230 Kafka \u76e3\u807d\u5668\u3002\u9019\u4e9b\u653f\u7b56\u9084\u6703\u9650\u5236 ZooKeeper \u5230\u4ee3\u7406\u7684\u9023\u63a5\uff0c\u4e26\u652f\u6301\u96c6\u7fa3 Pod \u8207\u96c6\u7fa3\u901a\u4fe1\u5c08\u7528\u7684\u5167\u90e8 Service \u7aef\u53e3\u4e4b\u9593\u7684\u901a\u4fe1\u3002## \u8eab\u4efd\u9a57\u8b49\u548c\u7528\u6236\u7ba1\u7406\u672c\u90e8\u5206\u4ecb\u7d39\u5982\u4f55\u5553\u7528\u8eab\u4efd\u9a57\u8b49\u548c\u6388\u6b0a\uff0c\u4ee5\u4fdd\u8b77 Kafka \u76e3\u807d\u5668\u4e26\u8207\u5ba2\u6236\u7aef\u5171\u4eab\u6191\u64da\u3002\nStrimzi \u63d0\u4f9b\u4e00\u7a2e\u4f7f\u7528\u55ae\u7368\u7684 [User Operator](https://strimzi.io/docs/operators/latest/configuring.html#user-operator-str) \u53ca\u5176\u76f8\u95dc\u7684 Kubernetes \u81ea\u5b9a\u7fa9\u8cc7\u6e90 [KafkaUser](https://strimzi.io/docs/operators/latest/configuring.html#type-KafkaUser-reference) \uff08\u7528\u65bc\u5b9a\u7fa9\u7528\u6236\u914d\u7f6e\uff09\u4f86\u9032\u884c\u7528\u6236\u7ba1\u7406\u7684 Kubernetes \u539f\u751f\u65b9\u6cd5\u3002\u7528\u6236\u914d\u7f6e\u5305\u62ec\u8eab\u4efd\u9a57\u8b49\u548c\u6388\u6b0a\u8a2d\u7f6e\uff0c\u9084\u5305\u62ec\u5728 Kafka \u4e2d\u9810\u914d\u76f8\u61c9\u7684\u7528\u6236\u3002\nStrimzi \u53ef\u4ee5\u5275\u5efa\u652f\u6301\u57fa\u65bc\u7528\u6236\u540d\u548c\u5bc6\u78bc\u7684\u8eab\u4efd\u9a57\u8b49 (SCRAM-SHA-512) \u6216 TLS \u7b49\u591a\u7a2e [\u8eab\u4efd\u9a57\u8b49\u6a5f\u5236](https://strimzi.io/docs/operators/latest/configuring.html#type-KafkaUserSpec-reference) \u7684 Kafka \u76e3\u807d\u5668\u548c\u7528\u6236\u3002\u60a8\u9084\u53ef\u4ee5\u4f7f\u7528 OAuth 2.0 \u8eab\u4efd\u9a57\u8b49\uff0c\u7531\u65bc\u5176\u5b89\u5168\u6027\u548c\u5916\u90e8\u6191\u64da\u7ba1\u7406\uff0c\u901a\u5e38\u8a8d\u7232\u9019\u7a2e\u65b9\u6cd5\u6bd4\u4f7f\u7528\u5bc6\u78bc\u6216\u8b49\u66f8\u9032\u884c\u8eab\u4efd\u9a57\u8b49\u66f4\u597d\u3002\n### \u90e8\u7f72 Kafka \u96c6\u7fa3\u672c\u90e8\u5206\u4ecb\u7d39\u5982\u4f55\u90e8\u7f72\u53ef\u6f14\u793a\u7528\u6236\u7ba1\u7406\u529f\u80fd\u7684 Strimzi \u64cd\u4f5c\u5668\uff0c\u5305\u62ec\uff1a- \u4e00\u500b Kafka \u96c6\u7fa3\uff0c\u5b83\u5728\u67d0\u500b\u76e3\u807d\u5668\u4e0a\u5553\u7528\u4e86\u57fa\u65bc\u5bc6\u78bc\u7684\u8eab\u4efd\u9a57\u8b49 (SCRAM-SHA-512)\u3002\n- \u5305\u542b 3 \u500b\u526f\u672c\u7684`KafkaTopic`\u3002\n- \u4e00\u500b`KafkaUser`\uff0c\u5176 ACL \u6307\u5b9a\u8a72\u7528\u6236\u5177\u6709\u4e3b\u984c\u7684\u8b80\u5beb\u6b0a\u9650\u3002\n- \u5c07\u60a8\u7684 Kafka \u96c6\u7fa3\u914d\u7f6e\u7232\u4f7f\u7528\u5728\u7aef\u53e3 9094 \u4e0a\u63a1\u7528\u57fa\u65bc\u5bc6\u78bc\u7684 SCRAM-SHA-512 \u8eab\u4efd\u9a57\u8b49\u7684\u76e3\u807d\u5668\uff1a```\nkubectl apply -n kafka -f kafka-strimzi/manifests/03-auth/my-cluster.yaml\n```\n- \u5275\u5efa `Topic` \u3001 `User` \u548c\u5ba2\u6236\u7aef Pod\uff0c\u4ee5\u5c0d Kafka \u96c6\u7fa3\u57f7\u884c\u547d\u4ee4\uff1a```\nkubectl apply -n kafka -f kafka-strimzi/manifests/03-auth/topic.yamlkubectl apply -n kafka -f kafka-strimzi/manifests/03-auth/my-user.yaml\n```\u5305\u542b\u7528\u6236\u6191\u64da\u7684 `Secret` `my-user` \u4f5c\u7232 [\u5377](https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-files-from-a-pod) \u88dd\u8f09\u5230\u5ba2\u6236\u7aef Pod \u4e0a\u3002\u9019\u4e9b\u6191\u64da\u6703\u78ba\u8a8d\u7528\u6236\u662f\u5426\u6709\u6b0a\u4f7f\u7528\u5553\u7528\u4e86\u57fa\u65bc\u5bc6\u78bc\u7684\u8eab\u4efd\u9a57\u8b49 (SCRAM-SHA-512) \u7684\u76e3\u807d\u5668\u5411\u4e3b\u984c\u767c\u4f48\u6d88\u606f\u3002\n- \u5275\u5efa\u5ba2\u6236\u7aef pod\uff1a```\nkubectl apply -n kafka -f kafka-strimzi/manifests/03-auth/kafkacat.yaml\n```\n- \u7b49\u5f85\u5e7e\u5206\u9418\uff0c\u8b93\u5ba2\u6236\u7aef Pod \u8b8a\u7232 `Ready` \u72c0\u614b\uff0c\u7136\u5f8c\u9023\u63a5\u5230\u8a72 Pod\uff1a```\nkubectl wait --for=condition=Ready pod --all -n kafka --timeout=600skubectl exec -it kafkacat -n kafka -- /bin/sh\n```\n- \u751f\u6210\u5177\u6709 `my-user` \u6191\u64da\u7684\u65b0\u6d88\u606f\uff0c\u4e26\u5617\u8a66\u4f7f\u7528\u5b83\uff1a```\necho \"Message from my-user\" |kcat \\\u00a0 -b my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9094 \\\u00a0 -X security.protocol=SASL_SSL \\\u00a0 -X sasl.mechanisms=SCRAM-SHA-512 \\\u00a0 -X sasl.username=my-user \\\u00a0 -X sasl.password=$(cat /my-user/password) \\\u00a0 -t my-topic -Pkcat -b my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9094 \\\u00a0 -X security.protocol=SASL_SSL \\\u00a0 -X sasl.mechanisms=SCRAM-SHA-512 \\\u00a0 -X sasl.username=my-user \\\u00a0 -X sasl.password=$(cat /my-user/password) \\\u00a0 -t my-topic -C\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nMessage from my-user\n% Reached end of topic my-topic [0] at offset 0\n% Reached end of topic my-topic [2] at offset 1\n% Reached end of topic my-topic [1] at offset 0\n```\u6309 `CTRL+C` \u4ee5\u505c\u6b62\u4f7f\u7528\u65b9\u9032\u7a0b\u3002\n- \u9000\u51fa Pod shell```\nexit\n```\n## \u5099\u4efd\u548c\u707d\u96e3\u6062\u5fa9\u96d6\u7136 Strimzi \u64cd\u4f5c\u5668\u4e0d\u63d0\u4f9b\u5167\u7f6e\u5099\u4efd\u529f\u80fd\uff0c\u4f46\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6a21\u5f0f\u5be6\u73fe\u9ad8\u6548\u7684\u5099\u4efd\u7b56\u7565\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528 [Backup for GKE](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/concepts/backup-for-gke?hl=zh-cn) \u5099\u4efd\uff1a- Kubernetes \u8cc7\u6e90\u6e05\u55ae\u3002\n- \u5f9e\u6b63\u5728\u5099\u4efd\u7684\u96c6\u7fa3\u7684 Kubernetes API \u670d\u52d9\u5668\u4e2d\u63d0\u53d6\u7684 Strimzi API \u81ea\u5b9a\u7fa9\u8cc7\u6e90\u53ca\u5176\u5b9a\u7fa9\u3002\n- \u8207\u6e05\u55ae\u4e2d\u627e\u5230\u7684 PersistentVolumeClaim \u8cc7\u6e90\u76f8\u5c0d\u61c9\u7684\u5377\u3002\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u5982\u4f55\u4f7f\u7528 Backup for GKE \u5099\u4efd\u548c\u6062\u5fa9 Kafka \u96c6\u7fa3\uff0c\u8acb\u53c3\u95b1 [\u7232\u707d\u96e3\u6062\u5fa9\u505a\u597d\u6e96\u5099](https://cloud.google.com/kubernetes-engine/docs/tutorials/stateful-workloads/kafka?hl=zh-cn#disaster-recovery) \u3002\n\u60a8\u9084\u53ef\u4ee5\u5c0d\u5df2\u4f7f\u7528 Strimzi \u64cd\u4f5c\u5668\u90e8\u7f72\u7684 Kafka \u96c6\u7fa3\u57f7\u884c\u5099\u4efd\u3002\u60a8\u61c9\u8a72\u5099\u4efd\uff1a- Kafka \u914d\u7f6e\uff0c\u5176\u4e2d\u5305\u542b Stimzi API \u7684\u6240\u6709\u81ea\u5b9a\u7fa9\u8cc7\u6e90\uff0c\u4f8b\u5982`KafkaTopics`\u548c`KafkaUsers`\u3002\n- \u6578\u64da\uff0c\u5b58\u5132\u5728 Kafka \u4ee3\u7406\u7684 PersistentVolume \u4e2d\u3002\n\u901a\u904e\u5c07 Kubernetes \u8cc7\u6e90\u6e05\u55ae\uff08\u5305\u62ec Strimzi \u914d\u7f6e\uff09\u5b58\u5132\u5728 Git \u4ee3\u78bc\u5eab\u4e2d\uff0c\u7121\u9700\u55ae\u7368\u5099\u4efd\u5c0d Kafka \u914d\u7f6e\uff0c\u56e0\u7232\u53ef\u4ee5\u6839\u64da\u9700\u8981\u5c07\u8cc7\u6e90\u91cd\u65b0\u61c9\u7528\u65bc\u65b0\u7684 Kubernetes \u96c6\u7fa3\u3002\n\u7232\u4e86\u5728 Kafka \u670d\u52d9\u5668\u5be6\u4f8b\u6216\u90e8\u7f72\u4e86 Kafka \u7684 Kubernetes \u96c6\u7fa3\u4e1f\u5931\u7684\u60c5\u6cc1\u4e0b\u4fdd\u8b77 Kafka \u6578\u64da\u6062\u5fa9\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u914d\u7f6e\u7528\u65bc\u7232 Kafka \u4ee3\u7406\u9810\u914d\u5377\u7684 Kubernetes \u5b58\u5132\u985e\u5225\uff0c\u4e26\u5c07 `reclaimPolicy` \u9078\u9805\u8a2d\u7f6e\u7232 `Retain` \u3002\u6211\u5011\u9084\u5efa\u8b70\u60a8\u622a\u53d6 Kafka \u4ee3\u7406\u5377\u7684 [\u5feb\u7167](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/volume-snapshots?hl=zh-cn) \u3002\n\u4ee5\u4e0b\u6e05\u55ae\u63cf\u8ff0\u4e86\u4f7f\u7528 `reclaimPolicy` \u9078\u9805 `Retain` \u7684 StorageClass\uff1a\n```\napiVersion: storage.k8s.io/v1kind: StorageClassmetadata:\u00a0 name: premium-rwo-retain...reclaimPolicy: RetainvolumeBindingMode: WaitForFirstConsumer\n```\n\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86 StorageClass \u88ab\u6dfb\u52a0\u5230\u4e86 Kafka \u96c6\u7fa3\u81ea\u5b9a\u7fa9\u8cc7\u6e90\u7684 `spec` \u4e2d\uff1a\n```\n# ...spec:\u00a0 kafka:\u00a0 \u00a0 # ...\u00a0 \u00a0 storage:\u00a0 \u00a0 \u00a0 type: persistent-claim\u00a0 \u00a0 \u00a0 size: 100Gi\u00a0 \u00a0 \u00a0 class: premium-rwo-retain\n```\n\u4f7f\u7528\u6b64\u914d\u7f6e\u6642\uff0c\u5373\u4f7f\u522a\u9664\u4e86\u76f8\u61c9\u7684 PersistentVolumeClaim\uff0c\u4f7f\u7528\u8a72\u5b58\u5132\u985e\u5225\u9810\u914d\u7684 PersistentVolume \u4e5f\u4e0d\u6703\u88ab\u522a\u9664\u3002\n\u5982\u9700\u4f7f\u7528\u73fe\u6709\u914d\u7f6e\u548c\u4ee3\u7406\u5be6\u4f8b\u6578\u64da\u5728\u65b0\u7684 Kubernetes \u96c6\u7fa3\u4e0a\u6062\u5fa9 Kafka \u5be6\u4f8b\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u5c07\u73fe\u6709 Strimzi Kafka \u81ea\u5b9a\u7fa9\u8cc7\u6e90\uff08`Kakfa`\u3001`KafkaTopic`\u3001`KafkaUser`\u7b49\uff09\u61c9\u7528\u65bc\u65b0\u7684 Kubernetes \u96c6\u7fa3\n- \u4f7f\u7528 PersistentVolumeClaim \u4e0a\u7684`spec.volumeName`\u5c6c\u6027\uff0c\u5c07\u63a1\u7528\u65b0 Kafka \u4ee3\u7406\u5be6\u4f8b\u540d\u7a31\u7684 PersistentVolumeClaim \u66f4\u65b0\u7232\u820a\u7684 PersistentVolume\u3002\n## \u6e05\u7406\u7232\u907f\u514d\u56e0\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u8cc7\u6e90\u5c0e\u81f4\u60a8\u7684 Google Cloud \u8cec\u865f\u7522\u751f\u8cbb\u7528\uff0c\u8acb\u522a\u9664\u5305\u542b\u9019\u4e9b\u8cc7\u6e90\u7684\u9805\u76ee\uff0c\u6216\u8005\u4fdd\u7559\u9805\u76ee\u4f46\u522a\u9664\u5404\u500b\u8cc7\u6e90\u3002\n### \u522a\u9664\u9805\u76ee- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- **\u8b66\u544a** \uff1a\u522a\u9664\u9805\u76ee\u6703\u7522\u751f\u4ee5\u4e0b\u5f71\u97ff- **\u9805\u76ee\u4e2d\u7684\u6240\u6709\u5167\u5bb9\u90fd\u6703\u88ab\u522a\u9664\u3002** \u5982\u679c\u60a8\u5c07\u73fe\u6709\u9805\u76ee\u7528\u65bc\u672c\u6587\u6a94\u4e2d\u7684\u4efb\u52d9\uff0c\u5247\u522a\u9664\u8a72\u9805\u76ee\u5f8c\uff0c\u9084\u5c07\u522a\u9664\u60a8\u5df2\u5728\u8a72\u9805\u76ee\u4e2d\u5b8c\u6210\u7684\u4efb\u4f55\u5176\u4ed6\u5de5\u4f5c\u3002\n- **\u81ea\u5b9a\u7fa9\u9805\u76ee ID \u4e1f\u5931\u3002** \u5275\u5efa\u6b64\u9805\u76ee\u6642\uff0c\u60a8\u53ef\u80fd\u5275\u5efa\u4e86\u8981\u5728\u5c07\u4f86\u4f7f\u7528\u7684\u81ea\u5b9a\u7fa9\u9805\u76ee ID\u3002\u8981\u4fdd\u7559\u4f7f\u7528\u8a72\u9805\u76ee ID \u7684\u7db2\u5740\uff08\u4f8b\u5982`appspot.com`\u7db2\u5740\uff09\uff0c\u8acb\u522a\u9664\u9805\u76ee\u5167\u7684\u6240\u9078\u8cc7\u6e90\uff0c\u800c\u4e0d\u662f\u522a\u9664\u6574\u500b\u9805\u76ee\u3002\n\u5982\u679c\u60a8\u6253\u7b97\u63a2\u7d22\u591a\u500b\u67b6\u69cb\u3001\u6559\u7a0b\u6216\u5feb\u901f\u5165\u9580\uff0c\u5247\u91cd\u8907\u4f7f\u7528\u9805\u76ee\u53ef\u4ee5\u5e6b\u52a9\u60a8\u907f\u514d\u8d85\u51fa\u9805\u76ee\u914d\u984d\u9650\u5236\u3002\n- \u522a\u9664 Google Cloud \u9805\u76ee\uff1a\n- ```\ngcloud projects delete PROJECT_ID\n```\n### \u9010\u500b\u522a\u9664\u8cc7\u6e90\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u73fe\u6709\u9805\u76ee\uff0c\u4e26\u4e14\u4e0d\u60f3\u5c07\u5176\u522a\u9664\uff0c\u8acb\u9010\u500b\u522a\u9664\u8cc7\u6e90\u3002- \u8a2d\u7f6e\u74b0\u5883\u8b8a\u91cf\u3002```\nexport PROJECT_ID=${PROJECT_ID}export KUBERNETES_CLUSTER_PREFIX=kafkaexport REGION=us-central1\n```\n- \u904b\u884c `terraform destroy` \u547d\u4ee4\uff1a```\nexport GOOGLE_OAUTH_ACCESS_TOKEN=$(gcloud auth print-access-token)terraform -chdir=kafka/terraform/FOLDER destroy -var project_id=${PROJECT_ID} \u00a0 \\\u00a0 -var region=${REGION} \u00a0\\\u00a0 -var cluster_prefix=${KUBERNETES_CLUSTER_PREFIX}\n```\u5c07 `` \u66ff\u63db\u7232 `gke-autopilot` \u6216 `gke-standard` \u3002\u51fa\u73fe\u63d0\u793a\u6642\uff0c\u8acb\u8f38\u5165 `yes` \u3002\n- \u67e5\u627e\u6240\u6709\u672a\u639b\u63a5\u7684\u78c1\u76e4\uff1a```\nexport disk_list=$(gcloud compute disks list --filter=\"-users:* AND labels.name=${KUBERNETES_CLUSTER_PREFIX}-cluster\" --format \"value[separator=|](name,zone)\")\n```\u9700\u8981\u57f7\u884c\u6b64\u6b65\u9a5f\u662f\u56e0\u7232\u9ed8\u8a8d\u60c5\u6cc1\u4e0b Striiz \u4f7f\u7528 `deleteClaim: false` \u53c3\u6578\u9032\u884c\u5b58\u5132\u3002\u5982\u679c\u522a\u9664\u96c6\u7fa3\uff0c\u6240\u6709\u78c1\u76e4\u5c07\u4ecd\u7136\u53ef\u7528\u3002\n- \u522a\u9664\u78c1\u76e4\uff1a```\nfor i in $disk_list; do\u00a0 disk_name=$(echo $i| cut -d'|' -f1)\u00a0 disk_zone=$(echo $i| cut -d'|' -f2|sed 's|.*/||')\u00a0 echo \"Deleting $disk_name\"\u00a0 gcloud compute disks delete $disk_name --zone $disk_zone --quietdone\n```\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u63a2\u7d22\u6709\u95dc Google Cloud \u7684\u53c3\u8003\u67b6\u69cb\u3001\u5716\u8868\u548c\u6700\u4f73\u505a\u6cd5\u3002\u67e5\u770b\u6211\u5011\u7684 [Cloud Architecture Center](https://cloud.google.com/architecture?hl=zh-cn) \u3002", "guide": "Google Kubernetes Engine (GKE)"}