{"title": "Google Kubernetes Engine (GKE) - Creating a routes-based cluster", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/routes-based-cluster", "abstract": "# Google Kubernetes Engine (GKE) - Creating a routes-based cluster\nThis page shows how to create a routes-based cluster in Google Kubernetes Engine (GKE).\n", "content": "## Overview\nIn GKE, clusters can be distinguished according to the way they route traffic from one Pod to another Pod. A cluster that uses [Google Cloud Routes](/vpc/docs/routes) is called a . A cluster that uses Alias IPs is called a .\n[VPC-native](/kubernetes-engine/docs/how-to/alias-ips) is the recommended type and is the default for new clusters in GKE versions 1.21.0-gke.1500 and later. To create a routes-based cluster, you must [explicitly turn off the VPC-native option](#creating_a_routes_based_cluster) .\n## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.## Create a routes-based cluster\nYou can create a routes-based cluster by using the gcloud CLI or the Google Cloud console.\nTo create a routes-based cluster, include the `--no-enable-ip-alias` flag in the cluster creation command:\n```\ngcloud container clusters create CLUSTER_NAME --no-enable-ip-alias\n```\nReplace `` with a name that you choose for your cluster.- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click **Create** .\n- Enter a name for your cluster.\n- From the navigation pane, under **Cluster** , click **Networking** .\n- Under **Advanced networking options** , clear the **Enable VPC-nativetraffic routing (uses alias IP)** checkbox.\n- Click **Create** .\n### Create a routes-based cluster and select the control plane IP range\nBy default, clusters with [Private Service Connect](/kubernetes-engine/docs/concepts/network-overview#public-cluster-psc) use the primary subnet range to provision the internal IP address assigned to the control plane endpoint. You can override this default setting by selecting a different subnet range during the cluster creation time only. The following sections show you how to create a cluster with Private Service Connect and override the subnet range.\nCreate a cluster with Private Service Connect:\n```\ngcloud container clusters create CLUSTER_NAME --no-enable-ip-alias \\\u00a0 \u00a0 --private-endpoint-subnetwork=SUBNET_NAME \\\u00a0 \u00a0 --region=COMPUTE_REGION\n```\nReplace the following:- ``: the name of the GKE cluster.\n- ``: the name of an existing subnet.\n- ``: the [compute region](/compute/docs/regions-zones#available) for the cluster. To create a zonal cluster, replace this flag with`--zone=` ``, where``is a [compute zone](/compute/docs/regions-zones#available) .\nTo assign a subnet to the control plane of a new cluster, you must [add a subnet](/vpc/docs/using-vpc#add-subnets) first.\n- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click **Create** .\n- Enter a name for your cluster.\n- From the navigation pane, under **Cluster** , click **Networking** .\n- In the **IPv4 network access** section, do the following:- To create a GKE cluster as public, select the **Public cluster** radio button.\n- To create a GKE cluster as private, select the **Private cluster** radio button.\nIn both cases, you can later [change the cluster isolation mode](/kubernetes-engine/docs/how-to/change-cluster-isolation#why_change_cluster_isolation) when editing the cluster configuration.\n- In the **Advanced networking options** section, select the **Override control plane's default private endpoint subnet** checkbox.\n- In the **Private endpoint subnet** list, select your created subnet.\n- Clear the **Enable VPC-native traffic routing (uses alias IP)** checkbox.\n- Click **Create** .## Verify that your cluster uses routes\nList your cluster nodes:\n```\nkubectl get nodes\n```\nThe output shows the names of your nodes:\n```\nNAME         STATUS ...  AGE VERSION\ngke-xxx-default-pool-83e239a7-kcg8 Ready ...  42m v1.9.7-gke.6\ngke-xxx-default-pool-83e239a7-qm6b Ready ...  42m v1.9.7-gke.6\ngke-xxx-default-pool-83e239a7-wnrq Ready ...  42m 1.9.7-gke.6\n```\nList your routes:\n```\ngcloud compute routes list\n```\nIn this output, in the **NEXT_HOP** column, look for the name of one of your cluster nodes:\n```\nNAME     NETWORK  DEST_RANGE   NEXT_HOP\n...\n[ROUTE_NAME]   default  10.24.0.0/24  [YOUR_NODE_NAME]\n...\n```\nIn this output, the route provides a next hop for any packet that is destined for a particular Pod address range.- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- In the cluster list, click the name of the cluster you want to inspect.\n- On the **Cluster details** page, click the **Nodes** tab.\n- In the **Nodes** section, note the names of any of the nodes.\n- Go to the **Routes** page in the Google Cloud console. [Go to Routes](https://console.cloud.google.com/networking/routes/list) \n- In the list of routes, in the **Next hop** column, look for the name of one of your cluster nodes. Click the route name for that row.\n- On the **Route details** page, check the **Next hop** section to verify that the route provides a next hop for any packet destined for a particular Pod address range.## Pods per node\nIn a routes-based cluster, each node is allocated a /24 range of IP addresses for Pods. With a /24 range, there are 256 addresses, but the maximum number of Pods per node is 110. By having approximately twice as many available IP addresses as possible Pods, Kubernetes is able to mitigate IP address reuse as Pods are added to and removed from a node.\n## Pod address range\nA routes-based cluster has a range of IP addresses that are used for Pods and Services. Even though the range is used for both Pods and Services, it is called the . The last /20 of the Pod address range is used for Services. A /20 range has 2 = 4096 addresses. So 4096 addresses are used for Services, and the rest of the range is used for Pods.\nIn command output, the Pod address range is called `clusterIpv4Cidr` , and the range of addresses used for Services is called `servicesIpv4Cidr` . For example, the output of `gcloud container clusters describe` includes output similar to the following:\n```\nclusterIpv4Cidr: 10.96.0.0/16\n...\nservicesIpv4Cidr: 10.96.240.0/20\n```\nThe Pod address range can be from any RFC 1918 block: `10.0.0.0/8` , `172.16.0.0/12` or `192.168.0.0/16` .\nYou can customize Pod address range by specifying a CIDR range. For example, you could specify the range `10.96.0.0/16` .\n```\ngcloud container clusters create CLUSTER_NAME \\\u00a0 \u00a0 --no-enable-ip-alias \\\u00a0 \u00a0 --cluster-ipv4-cidr 10.96.0.0/16\n```\nReplace `` with a name that you choose for your cluster.- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click **Create** .\n- Enter a name for your cluster.\n- From the navigation pane, under **Cluster** , click **Networking** .\n- Under **Advanced networking options** , clear the **Enable VPC-nativetraffic routing (uses alias IP)** checkbox.\n- In the **Pod address range** field, enter `10.96.0.0/16` .\n- Click **Create** .\n### Considerations for cluster sizing\nThe maximum number of nodes, Pods, and Services for a given GKE cluster is determined by the size of the cluster subnet and the size of the Pod address range. You cannot change the Pod address range size after you create a cluster. When you create a cluster, ensure that you choose a Pod address range large enough to accommodate the cluster's anticipated growth.\nThe following table explains how to choose address ranges that are sufficient for a cluster that has 900 nodes:\n| Range    | Guidance                                                                                                                                                   |\n|:------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Nodes    | Node IP addresses are taken from the primary range of the cluster subnet. Your cluster subnet must be large enough to hold the total number of nodes in your cluster. For example, if you plan to create a 900-node cluster, the cluster subnet must be at least a /22 in size. A /22 range has 210 = 1024 addresses. Subtract the 4 unusable IP addresses, and you get 1020, which is sufficient for the 900 nodes.                                               |\n| Pod address range | Each node has a /24 range of IP addresses for Pods. A /24 range has 28 = 256 addresses. Recall that 4096 addresses in the Pod address range are used for Services. The remaining portion of the Pod address range is used for Pods, and must be big enough to hold the number of nodes x 256 addresses. Suppose you plan to create a 900-node cluster. Then you need 900 x 256 = 230,400 addresses for Pods. Now suppose you have a /14 Pod address range. A /14 range has 218 = 262,144 addresses. Subtract the 4096 addresses used for Services, and you get 258,048, which is sufficient for 900 nodes. |\n## Defaults and limits for range sizes\nThe following table gives the minimum, maximum, and default sizes for the cluster subnet and the Pod address range.\n| Range    | Default size                        | Minimum size                      | Maximum size                  |\n|:------------------|:------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------|\n| Nodes    | /20, which has 212 = 4,096 addresses. Subtract 4 reserved addresses, and you get 4092 addresses for nodes. | /29, which has 23 = 8 addresses. Subtract 4 reserved addresses, and you get 4 addresses for nodes. | /7, which has 225 addresses. This is approximately 33 million addresses for nodes. |\n| Pod address range | /14, which has 218 = 262,144 addresses.                  | /19, which has 213 = 8192 addresses.                | /9, which has 223 = 8,388,608 addresses.           |\n## Restrictions\n- You cannot migrate a VPC-native cluster to a routes-based cluster.\n- You cannot migrate a routes-based cluster to a VPC-native cluster.\n- Routes-based clusters can only use addresses in the [RFC1918](https://tools.ietf.org/html/rfc1918) range for private IP addresses. VPC-native clusters have a [largerrange](/vpc/docs/subnets#valid-ranges) of usable addresses.\n- Routes-based clusters don't support dual-stack networking.## What's next\n- [Creating a VPC-native cluster](/kubernetes-engine/docs/how-to/alias-ips) \n- [Creating a zonal cluster](/kubernetes-engine/docs/how-to/creating-a-zonal-cluster) \n- [Alias IP ranges overview](/vpc/docs/alias-ip)", "guide": "Google Kubernetes Engine (GKE)"}