{"title": "Google Kubernetes Engine (GKE) - \u4f7f\u7528 CloudNativePG \u5c07 PostgreSQL \u90e8\u7f72\u5230 GKE", "url": "https://cloud.google.com/kubernetes-engine/docs/tutorials/stateful-workloads/cloudnativepg?hl=zh-cn", "abstract": "# Google Kubernetes Engine (GKE) - \u4f7f\u7528 CloudNativePG \u5c07 PostgreSQL \u90e8\u7f72\u5230 GKE\n\u672c\u6307\u5357\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 CloudNativePG \u904b\u7b97\u7b26\u548c Stateful High Availability (HA) Operator \u5728 Google Kubernetes Engine (GKE) \u4e0a\u90e8\u7f72 PostgreSQL \u96c6\u7fa3\u3002\n [CloudNativePG](https://cloudnative-pg.io/) \u662f\u7531 EBD \u6839\u64da Apache 2 \u8a31\u53ef\u958b\u767c\u7684\u958b\u6e90\u904b\u7b97\u7b26\u3002\n [PostgreSQL](https://www.postgresql.org/) \u662f\u4e00\u7a2e\u529f\u80fd\u5f37\u5927\u7684\u958b\u6e90\u5c0d\u8c61\u95dc\u4fc2\u578b\u6578\u64da\u5eab\u7cfb\u7d71\uff0c\u5df2\u6301\u7e8c\u6578\u5341\u5e74\u7a4d\u6975\u958b\u767c\uff0c\u4f7f\u5176\u5728\u53ef\u9760\u6027\u3001\u529f\u80fd\u7a69\u5065\u6027\u548c\u6027\u80fd\u65b9\u9762\u4eab\u6709\u76db\u8b7d\u3002\n [Stateful High Availability (HA) Operator](https://cloud.google.com/kubernetes-engine/docs/how-to/stateful-ha?hl=zh-cn) \u662f\u4e00\u7a2e GKE \u904b\u7b97\u7b26\uff0c\u53ef\u8b93\u60a8\u81ea\u52d5\u57f7\u884c StatefulSet Pod \u6545\u969c\u5207\u63db\u4e26\u63a7\u5236\u5176\u901f\u5ea6\u3002\n\u672c\u6307\u5357\u9069\u7528\u65bc\u6709\u610f\u5728 GKE \u4e0a\u90e8\u7f72 Postgres \u96c6\u7fa3\u7684\u5e73\u81fa\u7ba1\u7406\u54e1\u3001\u96f2\u67b6\u69cb\u5e2b\u548c\u904b\u71df\u5c08\u5bb6\u3002\u5728 GKE \u4e2d\u904b\u884c Postgres\uff08\u800c\u4e0d\u662f\u4f7f\u7528 [Cloud SQL](https://cloud.google.com/sql/docs/postgres/quickstarts?hl=zh-cn) \uff09\u53ef\u4ee5\u7232\u7d93\u9a57\u8c50\u5bcc\u7684\u6578\u64da\u5eab\u7ba1\u7406\u54e1\u63d0\u4f9b\u66f4\u591a\u9748\u6d3b\u6027\u548c\u914d\u7f6e\u63a7\u5236\u3002\n#", "content": "## \u512a\u52e2CloudNativePG \u5177\u6709\u4ee5\u4e0b\u512a\u52e2\uff1a- \u7528\u65bc\u7ba1\u7406\u548c\u914d\u7f6e PostgreSQL \u96c6\u7fa3\u7684\u8072\u660e\u5f0f Kubernetes \u539f\u751f\u65b9\u6cd5\n- \u4f7f\u7528 [\u5377\u5feb\u7167](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/volume-snapshots?hl=zh-cn) \u6216 [Cloud Storage](https://cloudnative-pg.io/documentation/1.21/appendixes/object_stores/#google-cloud-storage) \u9032\u884c\u5099\u4efd\u7ba1\u7406\n- \u5728\u50b3\u8f38\u904e\u7a0b\u4e2d\u52a0\u5bc6\u7684 [TLS](https://cloudnative-pg.io/documentation/1.21/certificates/) \u9023\u63a5\uff0c\u80fd\u5920\u4f7f\u7528\u81ea\u5df1\u7684\u8b49\u66f8\u6388\u6b0a\u6a5f\u69cb\u4ee5\u53ca\u8207 Certificate Manager \u7684\u96c6\u6210\u4f86\u81ea\u52d5\u9812\u767c\u548c\u8f2a\u66ff TLS \u8b49\u66f8\n- \u6b21\u8981 PostgreSQL \u7248\u672c\u7684\u6efe\u52d5\u66f4\u65b0\n- \u4f7f\u7528 Kubernetes API \u670d\u52d9\u5668\u7dad\u8b77 PostgreSQL \u96c6\u7fa3\u72c0\u614b\u548c\u6545\u969c\u5207\u63db\u4ee5\u5be6\u73fe\u9ad8\u53ef\u7528\u6027\uff0c\u7121\u9700\u5176\u4ed6\u5de5\u5177\n- \u901a\u904e\u4ee5 SQL \u7de8\u5beb\u7684\u7528\u6236\u5b9a\u7fa9\u7684\u6307\u6a19\u5be6\u73fe\u5167\u7f6e Prometheus \u5c0e\u51fa\u5668\u914d\u7f6e\n## \u76ee\u6a19\n- \u7232 Postgres \u898f\u5283\u548c\u90e8\u7f72 GKE \u57fa\u790e\u67b6\u69cb\n- \u4f7f\u7528 Helm \u90e8\u7f72\u548c\u914d\u7f6e CloudNativePG Postgres \u904b\u7b97\u7b26\n- \u90e8\u7f72 Stateful HA Operator\n- \u4f7f\u7528\u904b\u7b97\u7b26\u914d\u7f6e Postgres\uff0c\u4ee5\u78ba\u4fdd\u53ef\u7528\u6027\u3001\u5b89\u5168\u6027\u3001\u53ef\u89c0\u6e2c\u6027\u548c\u6027\u80fd\n### \u90e8\u7f72\u67b6\u69cb\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 CloudNativePG Postgres \u904b\u7b97\u7b26\u5c07\u4e00\u500b\u9ad8\u53ef\u7528\u6027 Postgres \u96c6\u7fa3\u90e8\u7f72\u548c\u914d\u7f6e\u5230 GKE\uff0c\u8a72\u96c6\u7fa3\u5177\u6709\u4e00\u500b\u4e3b PostgreSQL \u7bc0\u9ede\u548c\u5169\u500b\u526f\u672c\u3002CloudNativePG \u904b\u7b97\u7b26\u8cc7\u6e90\u4f7f\u7528 GKE \u96c6\u7fa3\u7684\u55ae\u7368\u547d\u540d\u7a7a\u9593\u4ee5\u5be6\u73fe\u66f4\u597d\u7684\u8cc7\u6e90\u9694\u96e2\uff0c\u4e26\u9075\u5faa\u6bcf\u500b PostgreSQL \u96c6\u7fa3\u4e00\u500b\u6578\u64da\u5eab\u9019\u4e00\u5efa\u8b70\u5fae\u670d\u52d9\u65b9\u6cd5\u3002\u6578\u64da\u5eab\u53ca\u5176\u5c0d\u61c9\u7684\u7528\u6236\u6216\u61c9\u7528\u6578\u64da\u5728\u8868\u793a\u96c6\u7fa3\u7684 Kubernetes \u81ea\u5b9a\u7fa9\u8cc7\u6e90\u4e2d\u5b9a\u7fa9\u3002\n\u60a8\u9084\u5c07\u90e8\u7f72 Postgres \u7684\u9ad8\u53ef\u7528\u6027\u5340\u57df\u7d1a GKE \u96c6\u7fa3\uff0c\u5176\u4e2d\u591a\u500b Kubernetes \u7bc0\u9ede\u5206\u4f48\u5728\u591a\u500b\u53ef\u7528\u5340\u4e2d\u3002\u6b64\u8a2d\u7f6e\u6709\u52a9\u65bc\u78ba\u4fdd\u5bb9\u932f\u3001\u53ef\u4f38\u7e2e\u6027\u548c\u5730\u7406\u5197\u9918\u3002\u9019\u6a23\u53ef\u652f\u6301\u6efe\u52d5\u66f4\u65b0\u548c\u7dad\u8b77\uff0c\u540c\u6642\u63d0\u4f9b SLA \u4ee5\u4fdd\u8b49\u6b63\u5e38\u904b\u884c\u6642\u9593\u548c\u53ef\u7528\u6027\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u5340\u57df\u7d1a\u96c6\u7fa3](https://cloud.google.com/kubernetes-engine/docs/concepts/regional-clusters?hl=zh-cn) \u3002\n\u4e0b\u5716\u986f\u793a\u4e86\u5728 GKE \u96c6\u7fa3\u4e2d\u7684\u591a\u500b\u7bc0\u9ede\u548c\u53ef\u7528\u5340\u4e0a\u904b\u884c\u7684 Postgres \u96c6\u7fa3\uff1a\u5728\u8a72\u5716\u4e2d\uff0cPostgres `StatefulSet` \u90e8\u7f72\u5728\u4e09\u500b\u4e0d\u540c\u53ef\u7528\u5340\u7684\u4e09\u500b\u7bc0\u9ede\u4e0a\u3002\u60a8\u53ef\u4ee5\u901a\u904e\u4ee5\u4e0b\u65b9\u5f0f\u63a7\u5236 GKE \u5982\u4f55\u90e8\u7f72\u5230\u7bc0\u9ede\uff1a\u5728 [postgresql](https://github.com/zalando/postgres-operator/blob/master/manifests/complete-postgres-manifest.yaml) \u81ea\u5b9a\u7fa9\u8cc7\u6e90\u898f\u7bc4\u4e2d\u8a2d\u7f6e\u6240\u9700\u7684 Pod [\u89aa\u548c\u6027\u548c\u53cd\u89aa\u548c\u6027](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) \u898f\u5247\u3002\u5982\u679c\u4e00\u500b\u53ef\u7528\u5340\u767c\u751f\u6545\u969c\uff0c\u5247\u4f7f\u7528\u63a8\u85a6\u7684\u914d\u7f6e\uff0cGKE \u6703\u5728\u65b0\u7bc0\u9ede\u4e0a\u91cd\u65b0\u8abf\u5ea6 Pod\u3002\u5982\u9700\u6301\u4e45\u4fdd\u5b58\u6578\u64da\uff0c\u53ef\u4f7f\u7528 SSD \u78c1\u76e4\u3002\u5982\u679c\u60a8\u7684\u6578\u64da\u5eab\u8ca0\u8f09\u8f03\u9ad8\u4e26\u4e14\u9700\u8981\u4f4e\u5ef6\u9072\u548c\u9ad8 IOPS\uff0c\u6211\u5011 [\u5efa\u8b70](https://cloud.google.com/compute/docs/disks/performance?hl=zh-cn) \u4f7f\u7528\u5340\u57df\u7d1a Persistent Disk [StorageClass](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/gce-pd-csi-driver?hl=zh-cn#create_a_storageclass) \u3002\nStateful HA Operator \u53ef\u6e1b\u5c11\u91cd\u65b0\u5b89\u6392\u5ef6\u9072\u3001\u8655\u7406\u6545\u969c\u5207\u63db\u8a2d\u7f6e\u4e26\u7e2e\u77ed\u6062\u5fa9\u6642\u9593\u3002## \u8cbb\u7528\nTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5728\u672c\u6587\u6a94\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 Google Cloud \u7684\u4ee5\u4e0b\u6536\u8cbb\u7d44\u4ef6\uff1a- [Compute Engine](https://cloud.google.com/compute/disks-image-pricing?hl=zh-cn) \n- [GKE](https://cloud.google.com/kubernetes-engine/pricing?hl=zh-cn) \n- [Google Cloud Managed Service for Prometheus](https://cloud.google.com/stackdriver/docs/managed-prometheus?hl=zh-cn) \n\u60a8\u53ef\u4f7f\u7528 [\u50f9\u683c\u8a08\u7b97\u5668](https://cloud.google.com/products/calculator?hl=zh-cn) \u6839\u64da\u60a8\u7684\u9810\u8a08\u4f7f\u7528\u60c5\u6cc1\u4f86\u4f30\u7b97\u8cbb\u7528\u3002 \nTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5b8c\u6210\u672c\u6587\u6a94\u4e2d\u63cf\u8ff0\u7684\u4efb\u52d9\u5f8c\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u522a\u9664\u6240\u5275\u5efa\u7684\u8cc7\u6e90\u4f86\u907f\u514d\u7e7c\u7e8c\u8a08\u8cbb\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e05\u7406](#clean-up) \u3002## \u6e96\u5099\u5de5\u4f5c [Cloud Shell](https://cloud.google.com/shell?hl=zh-cn) \u9810\u5b89\u88dd\u4e86\u672c\u6559\u7a0b\u6240\u9700\u7684\u8edf\u4ef6\uff0c\u5305\u62ec [kubectl](https://kubernetes.io/docs/reference/kubectl/) \u3001 [gcloud CLI](https://cloud.google.com/sdk/gcloud?hl=zh-cn) \u3001 [Helm](https://helm.sh/) \u548c [Terraform](https://cloud.google.com/docs/terraform?hl=zh-cn) \u3002\u5982\u679c\u60a8\u4e0d\u4f7f\u7528 Cloud Shell\uff0c\u5247\u5fc5\u9808\u5b89\u88dd gcloud CLI\u3002- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u5411\u60a8\u7684 Google \u8cec\u865f\u6388\u4e88\u89d2\u8272\u3002\u5c0d\u4ee5\u4e0b\u6bcf\u500b IAM \u89d2\u8272\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e00\u6b21\uff1a `roles/compute.securityAdmin, roles/compute.viewer, roles/container.clusterAdmin, roles/container.admin, roles/iam.serviceAccountAdmin, roles/iam.serviceAccountUser````\ngcloud projects add-iam-policy-binding PROJECT_ID --member=\"user:EMAIL_ADDRESS\" --role=ROLE\n```- \u5c07``\u66ff\u63db\u7232\u60a8\u7684\u9805\u76ee ID\u3002\n- \u5c07``\u66ff\u63db\u7232\u60a8\u7684\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u3002\n- \u5c07``\u66ff\u63db\u7232\u6bcf\u500b\u89d2\u8272\u3002\n### \u8a2d\u7f6e\u60a8\u7684\u74b0\u5883\u5982\u9700\u8a2d\u7f6e\u60a8\u7684\u74b0\u5883\uff0c\u8acb\u6309\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u8a2d\u7f6e\u74b0\u5883\u8b8a\u91cf\uff1a```\nexport PROJECT_ID=PROJECT_ID\nexport KUBERNETES_CLUSTER_PREFIX=postgres\nexport REGION=us-central1\n```\u5c07 `` \u66ff\u63db\u7232\u60a8\u7684 Google Cloud [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifying_projects) \u3002\n- \u514b\u9686 GitHub \u4ee3\u78bc\u5eab\uff1a```\ngit clone https://github.com/GoogleCloudPlatform/kubernetes-engine-samples\n```\n- \u5207\u63db\u5230\u5de5\u4f5c\u76ee\u9304\uff1a```\ncd kubernetes-engine-samples/databases/postgresql-cloudnativepg\n```\n## \u5275\u5efa\u96c6\u7fa3\u57fa\u790e\u67b6\u69cb\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u904b\u884c Terraform \u8173\u672c\u4ee5\u5275\u5efa\u9ad8\u53ef\u7528\u6027\u5c08\u7528\u5340\u57df\u7d1a GKE \u96c6\u7fa3\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528 [Standard \u6216 Autopilot](https://cloud.google.com/kubernetes-engine/docs/concepts/choose-cluster-mode?hl=zh-cn) \u96c6\u7fa3\u5b89\u88dd\u64cd\u4f5c\u5668\u3002\n\u4e0b\u5716\u986f\u793a\u4e86\u90e8\u7f72\u5728\u4e09\u500b\u4e0d\u540c\u53ef\u7528\u5340\u4e2d\u7684\u5c08\u7528\u5340\u57df\u7d1a Standard GKE \u96c6\u7fa3\uff1a\u5982\u9700\u90e8\u7f72\u6b64\u57fa\u790e\u67b6\u69cb\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\nexport GOOGLE_OAUTH_ACCESS_TOKEN=$(gcloud auth print-access-token)terraform -chdir=terraform/gke-standard initterraform -chdir=terraform/gke-standard apply \\\u00a0 -var project_id=${PROJECT_ID} \u00a0 \\\u00a0 -var region=${REGION} \u00a0\\\u00a0 -var cluster_prefix=${KUBERNETES_CLUSTER_PREFIX}\n```\n\u51fa\u73fe\u63d0\u793a\u6642\uff0c\u8acb\u8f38\u5165 `yes` \u3002\u5b8c\u6210\u6b64\u547d\u4ee4\u4e26\u4f7f\u96c6\u7fa3\u986f\u793a\u5c31\u7dd2\u72c0\u614b\u53ef\u80fd\u9700\u8981\u5e7e\u5206\u9418\u6642\u9593\u3002\nTerraform \u6703\u5275\u5efa\u4ee5\u4e0b\u8cc7\u6e90\uff1a- Kubernetes \u7bc0\u9ede\u7684 VPC \u7db2\u7d61\u548c\u5c08\u7528\u5b50\u7db2\n- \u7528\u65bc\u901a\u904e NAT \u8a2a\u554f\u4e92\u806f\u7db2\u7684\u8def\u7531\u5668\n- \u5c08\u7528 GKE \u96c6\u7fa3\uff08\u5728`us-central1`\u5340\u57df\u4e2d\uff09\n- \u5553\u7528\u4e86\u81ea\u52d5\u64f4\u7e2e\u7684\u7bc0\u9ede\u6c60\uff08\u6bcf\u500b\u53ef\u7528\u5340\u4e00\u500b\u5230\u5169\u500b\u7bc0\u9ede\uff0c\u6bcf\u500b\u53ef\u7528\u5340\u6700\u5c11\u4e00\u500b\u7bc0\u9ede\uff09\n\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\n...\nApply complete! Resources: 14 added, 0 changed, 0 destroyed.\n...\n```\n\u4e0b\u5716\u986f\u793a\u4e86\u5c08\u7528\u5340\u57df\u7d1a Autopilot GKE \u96c6\u7fa3\uff1a\u5982\u9700\u90e8\u7f72\u6b64\u57fa\u790e\u67b6\u69cb\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\nexport GOOGLE_OAUTH_ACCESS_TOKEN=$(gcloud auth print-access-token)terraform -chdir=terraform/gke-autopilot initterraform -chdir=terraform/gke-autopilot apply \\\u00a0 -var project_id=${PROJECT_ID} \\\u00a0 -var region=${REGION} \\\u00a0 -var cluster_prefix=${KUBERNETES_CLUSTER_PREFIX}\n```\n\u51fa\u73fe\u63d0\u793a\u6642\uff0c\u8acb\u8f38\u5165 `yes` \u3002\u5b8c\u6210\u6b64\u547d\u4ee4\u4e26\u4f7f\u96c6\u7fa3\u986f\u793a\u5c31\u7dd2\u72c0\u614b\u53ef\u80fd\u9700\u8981\u5e7e\u5206\u9418\u6642\u9593\u3002\nTerraform \u6703\u5275\u5efa\u4ee5\u4e0b\u8cc7\u6e90\uff1a- Kubernetes \u7bc0\u9ede\u7684 VPC \u7db2\u7d61\u548c\u5c08\u7528\u5b50\u7db2\n- \u7528\u65bc\u901a\u904e NAT \u8a2a\u554f\u4e92\u806f\u7db2\u7684\u8def\u7531\u5668\n- \u5c08\u7528 GKE \u96c6\u7fa3\uff08\u5728`us-central1`\u5340\u57df\u4e2d\uff09\n- \u5177\u6709\u65e5\u8a8c\u8a18\u9304\u548c\u76e3\u63a7\u6b0a\u9650\u7684`ServiceAccount`\n- Google Cloud Managed Service for Prometheus\uff0c\u7528\u65bc\u76e3\u63a7\u96c6\u7fa3\n\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\n...\nApply complete! Resources: 12 added, 0 changed, 0 destroyed.\n...\n```\n### \u9023\u63a5\u5230\u96c6\u7fa3\u914d\u7f6e `kubectl` \u4ee5\u8207\u96c6\u7fa3\u901a\u4fe1\uff1a\n```\ngcloud container clusters get-credentials ${KUBERNETES_CLUSTER_PREFIX}-cluster --region ${REGION}\n```## \u90e8\u7f72 CloudNativePG \u904b\u7b97\u7b26\u4f7f\u7528 Helm \u5716\u8868\u5c07 CloudNativePG \u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa3\uff1a- \u6dfb\u52a0 CloudNativePG \u904b\u7b97\u7b26 Helm \u5716\u8868\u4ee3\u78bc\u5eab\uff1a```\nhelm repo add cnpg https://cloudnative-pg.github.io/charts\n```\n- \u4f7f\u7528 Helm \u547d\u4ee4\u884c\u5de5\u5177\u90e8\u7f72 CloudNativePG \u904b\u7b97\u7b26\uff1a```\nhelm upgrade --install cnpg \\\u00a0 \u00a0 --namespace cnpg-system \\\u00a0 \u00a0 --create-namespace \\\u00a0 \u00a0 --set image.tag=\"1.22.1-ubi9\" \\\u00a0 \u00a0 cnpg/cloudnative-pg\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nRelease \"cnpg\" does not exist. Installing it now.\nNAME: cnpg\nLAST DEPLOYED: Fri Oct 13 13:52:36 2023\nNAMESPACE: cnpg-system\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\n...\n```\n## \u90e8\u7f72 Stateful HA Operator\u5c07 Stateful HA Operator \u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa3\uff1a\n```\nVERSION=0.1.5REPO=\"gke-release\"mkdir ha-operatorgsutil cp gs://$REPO/ha-controller/$VERSION/ha-controller-helm.tar.gz ./ha-operatortar xvf ./ha-operator/ha-controller-helm.tar.gz --directory=ha-operator/helm upgrade -i ha-operator ./ha-operator/helm-chart \\\u00a0 --namespace ha-operator \\\u00a0 --create-namespace \\\u00a0 --set image.repository=\"$REPO\" \\\u00a0 --set image.tag=\"$VERSION\" \\\u00a0 --set useWorkloadSeparation=false\n```\n\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nRelease \"ha-operator\" does not exist. Installing it now.\nNAME: ha-operator\nLAST DEPLOYED: Thu Nov 30 15:34:18 2023\nNAMESPACE: ha-operator\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\n```## \u6dfb\u52a0\u5340\u57df\u7d1a Persistent Disk \u5b58\u5132\u985e\u5225\u4ee5\u4e0b\u6e05\u55ae\u63cf\u8ff0\u4e86\u4e00\u500b Postgres \u96c6\u7fa3\uff1a\n\u5c07\u6e05\u55ae\u61c9\u7528\u5230\u60a8\u7684\u96c6\u7fa3\uff1a\n```\nkubectl apply -n pg-ns -f manifests/01-basic-cluster/regional-pd.yaml\n```## \u90e8\u7f72 Postgres\u4ee5\u4e0b\u6e05\u55ae\u63cf\u8ff0\u4e86\u4e00\u500b Postgres \u96c6\u7fa3\uff1a\n [  databases/postgresql-cloudnativepg/manifests/01-basic-cluster/postgreSQL_cluster.yaml ](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/postgresql-cloudnativepg/manifests/01-basic-cluster/postgreSQL_cluster.yaml) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/postgresql-cloudnativepg/manifests/01-basic-cluster/postgreSQL_cluster.yaml) \n```\napiVersion: postgresql.cnpg.io/v1kind: Clustermetadata:\u00a0 name: gke-pg-clusterspec:\u00a0 description: \"Standard GKE PostgreSQL cluster\"\u00a0 imageName: ghcr.io/cloudnative-pg/postgresql:16.2\u00a0 enableSuperuserAccess: true\u00a0 instances: 3\u00a0 startDelay: 300\u00a0 primaryUpdateStrategy: unsupervised\u00a0 postgresql:\u00a0 \u00a0 pg_hba:\u00a0 \u00a0 \u00a0 - host all all 10.48.0.0/20 md5\u00a0 bootstrap:\u00a0 \u00a0 initdb:\u00a0 \u00a0 \u00a0 database: app\u00a0 storage:\u00a0 \u00a0 storageClass: ha-regional\u00a0 \u00a0 size: 10Gi\u00a0 resources:\u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 memory: \"1Gi\"\u00a0 \u00a0 \u00a0 cpu: \"1000m\"\u00a0 \u00a0 limits:\u00a0 \u00a0 \u00a0 memory: \"1Gi\"\u00a0 \u00a0 \u00a0 cpu: \"1000m\"\u00a0 affinity:\u00a0 \u00a0 enablePodAntiAffinity: true\u00a0 \u00a0 tolerations:\u00a0 \u00a0 - key: cnpg.io/cluster\u00a0 \u00a0 \u00a0 effect: NoSchedule\u00a0 \u00a0 \u00a0 value: gke-pg-cluster\u00a0 \u00a0 \u00a0 operator: Equal\u00a0 \u00a0 additionalPodAffinity:\u00a0 \u00a0 \u00a0 preferredDuringSchedulingIgnoredDuringExecution:\u00a0 \u00a0 \u00a0 - weight: 1\u00a0 \u00a0 \u00a0 \u00a0 podAffinityTerm:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 labelSelector:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 matchExpressions:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - key: app.component\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 operator: In\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 values:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - \"pg-cluster\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 topologyKey: topology.kubernetes.io/zone\u00a0 monitoring:\u00a0 \u00a0 enablePodMonitor: true\n```\n\u6b64\u6e05\u55ae\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a- `spec.instances`\uff1a\u96c6\u7fa3 Pod \u7684\u6578\u91cf\n- `spec.primaryUpdateStrategy`\uff1a\u6efe\u52d5\u66f4\u65b0\u7b56\u7565\uff1a- `Unsupervised`\uff1a\u5728\u526f\u672c\u7bc0\u9ede\u4e4b\u5f8c\u81ea\u4e3b\u66f4\u65b0\u4e3b\u96c6\u7fa3\u7bc0\u9ede\n- `Supervised`\uff1a\u4e3b\u96c6\u7fa3\u7bc0\u9ede\u9700\u8981\u624b\u52d5\u5207\u63db\n- `spec.postgresql`\uff1a\u6587\u4ef6\u53c3\u6578\u66ff\u63db\u503c\uff0c\u4f8b\u5982 [pg-hba](https://cloudnative-pg.io/documentation/current/postgresql_conf/) \u898f\u5247\u3001LDAP \u4ee5\u53ca\u8981\u6eff\u8db3\u7684\u540c\u6b65\u526f\u672c\u8981\u6c42\u3002\n- `spec.storage`\uff1a\u8207\u5b58\u5132\u76f8\u95dc\u7684\u8a2d\u7f6e\uff0c\u4f8b\u5982\u5b58\u5132\u985e\u5225\u3001\u5377\u5927\u5c0f\u548c [\u9810\u5beb\u5f0f\u65e5\u8a8c](https://cloudnative-pg.io/documentation/current/storage/) \u8a2d\u7f6e\u3002\n- `spec.bootstrap`\uff1a\u5728\u96c6\u7fa3\u4e2d\u5275\u5efa\u7684\u521d\u59cb\u6578\u64da\u5eab\u7684\u53c3\u6578\u3001\u7528\u6236\u6191\u64da\u548c\u6578\u64da\u5eab\u6062\u5fa9\u9078\u9805\n- `spec.resources`\uff1a\u96c6\u7fa3 Pod \u7684\u8acb\u6c42\u548c\u9650\u5236\n- `spec.affinity`\uff1a\u96c6\u7fa3\u5de5\u4f5c\u8ca0\u8f09\u7684\u89aa\u548c\u6027\u548c\u53cd\u89aa\u548c\u6027\u898f\u5247\n### \u5275\u5efa\u57fa\u672c Postgres \u96c6\u7fa3\n- \u5275\u5efa\u547d\u540d\u7a7a\u9593\uff1a```\nkubectl create ns pg-ns\n```\n- \u5275\u5efa\u65b0\u7684 Postgres \u96c6\u7fa3\uff1a```\nkubectl apply -n pg-ns -f manifests/01-basic-cluster/postgreSQL_cluster.yaml\n```\u6b64\u547d\u4ee4\u53ef\u80fd\u9700\u8981\u5e7e\u5206\u9418\u624d\u80fd\u5b8c\u6210\u3002\n- \u6aa2\u67e5\u96c6\u7fa3\u72c0\u614b\uff1a```\nkubectl get cluster -n pg-ns\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nNAME    AGE  INSTANCES READY STATUS      PRIMARY\ngke-pg-cluster 2m53s 3   3  Cluster in healthy state gke-pg-cluster-1\n```\n- \u90e8\u7f72 HighAvailabilityApplication \u4ee5\u4fdd\u8b77\u61c9\u7528\uff1a```\nkubectl apply -n pg-ns -f manifests/01-basic-cluster/ha-app.yaml\n```\n- \u901a\u904e\u63cf\u8ff0 HighAvailabilityApplication \u4f86\u9a57\u8b49\u662f\u5426\u5728\u61c9\u7528\u898f\u5247\uff1a```\nkubectl describe highavailabilityapplication pg-ha-app -n pg-ns\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nStatus:\n Conditions:\n Last Transition Time: 2024-02-29T09:51:12Z\n Message:    Application is protected\n Observed Generation: 1\n Reason:    ApplicationProtected\n Status:    True\n Type:     Protected\nEvents:     <none>\n```\u5728\u6b64\u8f38\u51fa\u4e2d\uff0c `Reason` \u5b57\u6bb5\u6307\u793a\u61c9\u7528\u53d7\u5230\u4fdd\u8b77\u3002\n### \u6aa2\u67e5\u8cc7\u6e90\u78ba\u8a8d GKE \u7232\u96c6\u7fa3\u5275\u5efa\u4e86\u8cc7\u6e90\uff1a\n```\nkubectl get cluster,pod,svc,pvc,pdb,secret,cm -n pg-ns\n```\n\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nNAME          AGE INSTANCES READY STATUS      PRIMARY\ncluster.postgresql.cnpg.io/gke-pg-cluster 32m 3   3  Cluster in healthy state gke-pg-cluster-1\nNAME     READY STATUS RESTARTS AGE\npod/gke-pg-cluster-1 1/1  Running 0   31m\npod/gke-pg-cluster-2 1/1  Running 0   30m\npod/gke-pg-cluster-3 1/1  Running 0   29m\nNAME      TYPE  CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nservice/gke-pg-cluster-r ClusterIP 10.52.11.24 <none>  5432/TCP 32m\nservice/gke-pg-cluster-ro ClusterIP 10.52.9.233 <none>  5432/TCP 32m\nservice/gke-pg-cluster-rw ClusterIP 10.52.1.135 <none>  5432/TCP 32m\nNAME          STATUS VOLUME          CAPACITY ACCESS MODES STORAGECLASS AGE\npersistentvolumeclaim/gke-pg-cluster-1 Bound pvc-bbdd1cdd-bdd9-4e7c-8f8c-1a14a87e5329 2Gi  RWO   standard  32m\npersistentvolumeclaim/gke-pg-cluster-2 Bound pvc-e7a8b4df-6a3e-43ce-beb0-b54ec1d24011 2Gi  RWO   standard  31m\npersistentvolumeclaim/gke-pg-cluster-3 Bound pvc-dac7f931-6ac5-425f-ac61-0cfc55aae72f 2Gi  RWO   standard  30m\nNAME            MIN AVAILABLE MAX UNAVAILABLE ALLOWED DISRUPTIONS AGE\npoddisruptionbudget.policy/gke-pg-cluster   1    N/A    1      32m\npoddisruptionbudget.policy/gke-pg-cluster-primary 1    N/A    0      32m\nNAME        TYPE      DATA AGE\nsecret/gke-pg-cluster-app   kubernetes.io/basic-auth 3  32m\nsecret/gke-pg-cluster-ca   Opaque      2  32m\nsecret/gke-pg-cluster-replication kubernetes.io/tls   2  32m\nsecret/gke-pg-cluster-server  kubernetes.io/tls   2  32m\nsecret/gke-pg-cluster-superuser  kubernetes.io/basic-auth 3  32m\nNAME        DATA AGE\nconfigmap/cnpg-default-monitoring 1  32m\nconfigmap/kube-root-ca.crt   1  135m\n```\n\u64cd\u4f5c\u5668\u5275\u5efa\u4ee5\u4e0b\u8cc7\u6e90\uff1a- \u8868\u793a\u7531\u904b\u7b97\u7b26\u63a7\u5236\u7684 PostgreSQL \u96c6\u7fa3\u7684\u96c6\u7fa3\u81ea\u5b9a\u7fa9\u8cc7\u6e90\n- \u5177\u6709\u76f8\u61c9\u6c38\u4e45\u6027\u5377\u7684 PersistentVolumeClaim \u8cc7\u6e90\n- \u5305\u542b\u7528\u6236\u6191\u64da\u7684 Secret\uff0c\u7528\u65bc\u8a2a\u554f\u6578\u64da\u5eab\u4ee5\u53ca\u5728 Postgres \u7bc0\u9ede\u4e4b\u9593\u9032\u884c\u5fa9\u5236\u3002\n- \u4e09\u500b\u6578\u64da\u5eab\u7aef\u9ede\u670d\u52d9\uff1a`<name>-rw`\u3001`<name>-ro`\u548c`<name>-r`\uff0c\u7528\u65bc\u9023\u63a5\u5230\u96c6\u7fa3\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [PostgreSQL \u67b6\u69cb](https://cloudnative-pg.io/documentation/1.21/architecture/) \u3002\n## \u5411 Postgres \u9032\u884c\u8eab\u4efd\u9a57\u8b49\u60a8\u53ef\u4ee5\u9023\u63a5\u5230 PostgreSQL \u6578\u64da\u5eab\uff0c\u4e26\u901a\u904e\u904b\u7b97\u7b26\u5275\u5efa\u7684\u4e0d\u540c\u670d\u52d9\u7aef\u9ede\u6aa2\u67e5\u8a2a\u554f\u6b0a\u9650\u3002\u7232\u6b64\uff0c\u8acb\u4f7f\u7528\u4e00\u500b\u984d\u5916 Pod\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u500b PostgreSQL \u5ba2\u6236\u7aef\u4e26\u4ee5\u74b0\u5883\u8b8a\u91cf\u7684\u5f62\u5f0f\u88dd\u8f09\u4e86\u540c\u6b65\u61c9\u7528\u7528\u6236\u6191\u64da\u3002- \u904b\u884c\u5ba2\u6236\u7aef Pod \u4ee5\u8207\u60a8\u7684 Postgres \u96c6\u7fa3\u9032\u884c\u4ea4\u4e92\uff1a```\nkubectl apply -n pg-ns -f manifests/02-auth/pg-client.yaml\n```\n- \u5728 `pg-client` Pod \u4e0a\u904b\u884c `exec` \u547d\u4ee4\u4e26\u767b\u9304 `gke-pg-cluster-rw` Service\uff1a```\nkubectl exec -n pg-ns -i -t pg-client -- /bin/sh\n```\n- \u4f7f\u7528 `gke-pg-cluster-rw` Service \u767b\u9304\u6578\u64da\u5eab\u4ee5\u5efa\u7acb\u5177\u6709\u8b80\u5beb\u6b0a\u9650\u7684 \u9023\u63a5\uff1a```\npsql postgresql://$CLIENTUSERNAME:$CLIENTPASSWORD@gke-pg-cluster-rw.pg-ns/app\n```\u7d42\u7aef\u4ee5\u60a8\u7684\u6578\u64da\u5eab\u540d\u7a31\u958b\u982d\uff1a```\napp=>\n```\n- \u5275\u5efa\u8868\uff1a```\nCREATE TABLE travel_agency_clients (client VARCHAR ( 50 ) UNIQUE NOT NULL,address VARCHAR ( 50 ) UNIQUE NOT NULL,phone VARCHAR ( 50 ) UNIQUE NOT NULL);\n```\n- \u5c07\u6578\u64da\u63d2\u5165\u5230\u8868\u4e2d\uff1a```\nINSERT INTO travel_agency_clients(client, address, phone)VALUES ('Tom', 'Warsaw', '+55555')RETURNING *;\n```\n- \u67e5\u770b\u60a8\u5275\u5efa\u7684\u6578\u64da\uff1a```\nSELECT * FROM travel_agency_clients ;\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nclient | address | phone\n--------+---------+--------Tom | Warsaw | +55555\n(1 row)\n```\n- \u9000\u51fa\u7576\u524d\u6578\u64da\u5eab\u6703\u8a71\uff1a```\nexit\n```\n- \u4f7f\u7528 `gke-pg-cluster-ro` Service \u767b\u9304\u6578\u64da\u5eab\u4ee5\u9a57\u8b49\u53ea\u8b80\u6b0a\u9650\u3002\u6b64 Service \u5141\u8a31\u67e5\u8a62\u6578\u64da\uff0c\u4f46\u9650\u5236\u4efb\u4f55\u5beb\u5165\u64cd\u4f5c\uff1a```\npsql postgresql://$CLIENTUSERNAME:$CLIENTPASSWORD@gke-pg-cluster-ro.pg-ns/app\n```\n- \u5617\u8a66\u63d2\u5165\u65b0\u6578\u64da\uff1a```\nINSERT INTO travel_agency_clients(client, address, phone)VALUES ('John', 'Paris', '+55555')RETURNING *;\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nERROR: cannot execute INSERT in a read-only transaction\n```\n- \u5617\u8a66\u8b80\u53d6\u6578\u64da\uff1a```\nSELECT * FROM travel_agency_clients ;\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nclient | address | phone\n--------+---------+--------Tom | Warsaw | +55555\n(1 row)\n```\n- \u9000\u51fa\u7576\u524d\u6578\u64da\u5eab\u6703\u8a71\uff1a```\nexit\n```\n- \u9000\u51fa Pod shell\uff1a```\nexit\n```\n## \u77ad\u89e3 Prometheus \u5982\u4f55\u6536\u96c6 Postgres \u96c6\u7fa3\u7684\u6307\u6a19\u4e0b\u5716\u5c55\u793a\u4e86 Prometheus \u6307\u6a19\u6536\u96c6\u7684\u5de5\u4f5c\u539f\u7406\uff1a\u5728\u8a72\u5716\u4e2d\uff0cGKE \u5c08\u7528\u96c6\u7fa3\u5305\u542b\uff1a- Postgres Pod\uff0c\u7528\u65bc\u901a\u904e\u8def\u5f91`/`\u548c\u7aef\u53e3`9187`\u6536\u96c6\u6307\u6a19\n- \u57fa\u65bc Prometheus \u7684\u6536\u96c6\u5668\uff0c\u7528\u65bc\u8655\u7406 Postgres Pod \u4e2d\u7684\u6307\u6a19\n- \u5c07\u6307\u6a19\u767c\u9001\u5230 Cloud Monitoring \u7684`PodMonitoring`\u8cc7\u6e90\n\u5982\u9700\u5553\u7528\u5f9e Pod \u6536\u96c6\u6307\u6a19\u7684\u529f\u80fd\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u6b65\u9a5f\uff1a- \u5275\u5efa [PodMonitoring](https://cloud.google.com/stackdriver/docs/managed-prometheus/setup-managed?hl=zh-cn#gmp-pod-monitoring) \u8cc7\u6e90\uff1a```\nkubectl apply -f manifests/03-observability/pod-monitoring.yaml -n pg-ns\n```\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u8f49\u5230 **Metrics Explorer** \u9801\u9762\uff1a [\u8f49\u5230 Metrics Explorer](https://console.cloud.google.com/monitoring/metrics-explorer?hl=zh-cn) \u4fe1\u606f\u4e2d\u5fc3\u986f\u793a\u975e\u96f6\u6307\u6a19\u63d0\u53d6\u7387\u3002\n- \u5728 **\u9078\u64c7\u4e00\u500b\u6307\u6a19** \u4e2d\uff0c\u8f38\u5165 **Prometheus Target** \uff08Prometheus \u76ee\u6a19\uff09\u3002\n- \u5728 **\u6d3b\u8e8d\u6307\u6a19\u985e\u5225** \u90e8\u5206\u4e2d\uff0c\u9078\u64c7 **Cnpg** \u3002\n### \u5275\u5efa\u6307\u6a19\u4fe1\u606f\u4e2d\u5fc3\u5982\u9700\u76f4\u89c0\u5448\u73fe\u5c0e\u51fa\u7684\u6307\u6a19\uff0c\u8acb\u5275\u5efa\u6307\u6a19\u4fe1\u606f\u4e2d\u5fc3\u3002- \u90e8\u7f72\u4fe1\u606f\u4e2d\u5fc3\uff1a```\ngcloud --project \"${PROJECT_ID}\" monitoring dashboards create --config-from-file manifests/03-observability/gcp-pg.json\n```\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u8f49\u5230 **\u4fe1\u606f\u4e2d\u5fc3** \u9801\u9762\u3002 [\u8f49\u5230\u201c\u4fe1\u606f\u4e2d\u5fc3\u201d](https://console.cloud.google.com/monitoring/dashboards?hl=zh-cn) \n- \u9078\u64c7 **PostgresQL Prometheus Overview** \uff08PostgresQL Prometheus \u6982\u89bd\uff09\u4fe1\u606f\u4e2d\u5fc3\u3002\u5982\u9700\u67e5\u770b\u4fe1\u606f\u4e2d\u5fc3\u5982\u4f55\u76e3\u63a7\u51fd\u6578\uff0c\u60a8\u53ef\u4ee5\u91cd\u8907\u4f7f\u7528 **\u6578\u64da\u5eab\u8eab\u4efd\u9a57\u8b49** \u90e8\u5206\u4e2d\u7684\u64cd\u4f5c\uff0c\u5c0d\u6578\u64da\u5eab\u61c9\u7528\u8b80\u53d6\u548c\u5beb\u5165\u8acb\u6c42\uff0c\u7136\u5f8c\u5728\u4fe1\u606f\u4e2d\u5fc3\u5167\u67e5\u770b\u6536\u96c6\u7684\u6307\u6a19\u53ef\u8996\u5316\u6548\u679c\u3002\n- \u9023\u63a5\u5230\u5ba2\u6236\u7aef Pod\uff1a```\nkubectl exec -n pg-ns -i -t pg-client -- /bin/sh\n```\n- \u63d2\u5165\u96a8\u6a5f\u6578\u64da\uff1a```\npsql postgresql://$CLIENTUSERNAME:$CLIENTPASSWORD@gke-pg-cluster-rw.pg-ns/app -c \"CREATE TABLE test (id serial PRIMARY KEY, randomdata VARCHAR ( 50 ) NOT NULL);INSERT INTO test (randomdata) VALUES (generate_series(1, 1000));\"\n```\n- \u5237\u65b0\u4fe1\u606f\u4e2d\u5fc3\u3002\u5716\u8868\u5c07\u4f7f\u7528\u5df2\u5be6\u73fe\u7684\u6307\u6a19\u9032\u884c\u66f4\u65b0\u3002\n- \u9000\u51fa Pod shell\uff1a```\nexit\n```\n## \u6e05\u7406\n### \u522a\u9664\u9805\u76ee\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- **\u8b66\u544a** \uff1a\u522a\u9664\u9805\u76ee\u6703\u7522\u751f\u4ee5\u4e0b\u5f71\u97ff- **\u9805\u76ee\u4e2d\u7684\u6240\u6709\u5167\u5bb9\u90fd\u6703\u88ab\u522a\u9664\u3002** \u5982\u679c\u60a8\u5c07\u73fe\u6709\u9805\u76ee\u7528\u65bc\u672c\u6587\u6a94\u4e2d\u7684\u4efb\u52d9\uff0c\u5247\u522a\u9664\u8a72\u9805\u76ee\u5f8c\uff0c\u9084\u5c07\u522a\u9664\u60a8\u5df2\u5728\u8a72\u9805\u76ee\u4e2d\u5b8c\u6210\u7684\u4efb\u4f55\u5176\u4ed6\u5de5\u4f5c\u3002\n- **\u81ea\u5b9a\u7fa9\u9805\u76ee ID \u4e1f\u5931\u3002** \u5275\u5efa\u6b64\u9805\u76ee\u6642\uff0c\u60a8\u53ef\u80fd\u5275\u5efa\u4e86\u8981\u5728\u5c07\u4f86\u4f7f\u7528\u7684\u81ea\u5b9a\u7fa9\u9805\u76ee ID\u3002\u8981\u4fdd\u7559\u4f7f\u7528\u8a72\u9805\u76ee ID \u7684\u7db2\u5740\uff08\u4f8b\u5982`appspot.com`\u7db2\u5740\uff09\uff0c\u8acb\u522a\u9664\u9805\u76ee\u5167\u7684\u6240\u9078\u8cc7\u6e90\uff0c\u800c\u4e0d\u662f\u522a\u9664\u6574\u500b\u9805\u76ee\u3002\n\u5982\u679c\u60a8\u6253\u7b97\u63a2\u7d22\u591a\u500b\u67b6\u69cb\u3001\u6559\u7a0b\u6216\u5feb\u901f\u5165\u9580\uff0c\u5247\u91cd\u8907\u4f7f\u7528\u9805\u76ee\u53ef\u4ee5\u5e6b\u52a9\u60a8\u907f\u514d\u8d85\u51fa\u9805\u76ee\u914d\u984d\u9650\u5236\u3002\n- \u522a\u9664 Google Cloud \u9805\u76ee\uff1a\n- ```\ngcloud projects delete PROJECT_ID\n```\n### \u522a\u9664\u5404\u500b\u8cc7\u6e90\n- \u8a2d\u7f6e\u74b0\u5883\u8b8a\u91cf\u3002```\nexport PROJECT_ID=${PROJECT_ID}export KUBERNETES_CLUSTER_PREFIX=postgresexport REGION=us-central1\n```\n- \u904b\u884c `terraform destroy` \u547d\u4ee4\uff1a```\nexport GOOGLE_OAUTH_ACCESS_TOKEN=$(gcloud auth print-access-token)terraform \u00a0-chdir=terraform/FOLDER destroy \\\u00a0 -var project_id=${PROJECT_ID} \\\u00a0 -var region=${REGION} \\\u00a0 -var cluster_prefix=${KUBERNETES_CLUSTER_PREFIX}\n```\u5c07 `` \u66ff\u63db\u7232 `gke-autopilot` \u6216 `gke-standard` \u3002\u51fa\u73fe\u63d0\u793a\u6642\uff0c\u8acb\u8f38\u5165 `yes` \u3002\n- \u67e5\u627e\u6240\u6709\u672a\u639b\u63a5\u7684\u78c1\u76e4\uff1a```\nexport disk_list=$(gcloud compute disks list --filter=\"-users:* AND labels.name=${KUBERNETES_CLUSTER_PREFIX}-cluster\" --format \"value[separator=|](name,zone)\")\n```\n- \u522a\u9664\u78c1\u76e4\uff1a```\nfor i in $disk_list; do\u00a0 disk_name=$(echo $i| cut -d'|' -f1)\u00a0 disk_zone=$(echo $i| cut -d'|' -f2|sed 's|.*/||')\u00a0 echo \"Deleting $disk_name\"\u00a0 gcloud compute disks delete $disk_name --zone $disk_zone --quietdone\n```\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u63a2\u7d22\u6709\u95dc Google Cloud \u7684\u53c3\u8003\u67b6\u69cb\u3001\u5716\u8868\u548c\u6700\u4f73\u505a\u6cd5\u3002\u67e5\u770b\u6211\u5011\u7684 [Cloud Architecture Center](https://cloud.google.com/architecture?hl=zh-cn) \u3002", "guide": "Google Kubernetes Engine (GKE)"}