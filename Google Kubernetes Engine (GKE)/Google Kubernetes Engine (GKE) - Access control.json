{"title": "Google Kubernetes Engine (GKE) - Access control", "url": "https://cloud.google.com/kubernetes-engine/docs/concepts/access-control", "abstract": "# Google Kubernetes Engine (GKE) - Access control\nWhen you create a Google Cloud project, you are the only user on the project. By default, no other users have access to your project or its resources, including Google Kubernetes Engine (GKE) resources. GKE supports multiple options for managing access to resources within your project and its clusters using role-based access control (RBAC).\n- [Identity and Access Management (IAM)](/kubernetes-engine/docs/how-to/iam) \n- [Kubernetes role-based access control (RBAC)](/kubernetes-engine/docs/how-to/role-based-access-control) \nThese mechanisms have some functional overlap, but are targeted to different types of resources. Each is explained in a section below, but in brief:\n- [Kubernetes RBAC](#rbac) is built into Kubernetes, and grants granular permissions to objects within Kubernetes clusters. Permissions exist as ClusterRole or Role objects within the cluster. RoleBinding objects grant Roles to Kubernetes users, Google Cloud users, IAM service accounts, or [Google Groups](/kubernetes-engine/docs/how-to/role-based-access-control#google-groups-for-gke) .If you primarily use GKE, and need fine-grained permissions for every object and operation within your cluster, Kubernetes RBAC is the best choice.\n- [IAM](#iam) manages Google Cloud resources, including clusters, and types of objects within clusters. Permissions are assigned to IAM .There is no mechanism for granting permissions for specific Kubernetes objects within IAM. For instance, you can grant a user permission to create CustomResourceDefinitions (CRDs), but you can't grant the user permission to create only one specific CustomResourceDefinition, or limit creation to a specific Namespace or to a specific cluster in the project. An IAM role grants privileges across all clusters in the project, or all clusters in all child projects if the role is applied at the folder level.If you use multiple Google Cloud components and you don't need to manage granular Kubernetes-specific permissions, IAM is a good choice.", "content": "## Kubernetes RBAC\nKubernetes has built-in support for RBAC that allows you to create fine-grained Roles, which exist within the Kubernetes cluster. A Role can be scoped to a specific Kubernetes object or a type of Kubernetes object, and defines which actions (called verbs) the Role grants in relation to that object. A RoleBinding is also a Kubernetes object, and grants Roles to users. A GKE user can be any of:\n- Google Cloud user\n- IAM service account\n- Kubernetes ServiceAccount\n- Google Workspace user\n- Google Workspace Google Group\n- Users authenticated using [X509 client certificates](https://kubernetes.io/docs/reference/access-authn-authz/authentication/#x509-client-certs) \nTo learn more, refer to [Role-Based Access Control](/kubernetes-engine/docs/how-to/role-based-access-control) .\n## IAM\nIAM allows you to define [roles](/iam/docs/understanding-roles) and assign them to [principals](/iam/docs/overview#concepts_related_identity) . A role is a collection of permissions, and when assigned to a principal, controls access to one or more Google Cloud [resources](/iam/docs/overview#resource) . Roles fall into three broad categories:\n- [Basic roles](/iam/docs/understanding-roles#basic) provide coarse permissions limited to Owner, Editor, and Viewer.\n- [Pre-defined roles](/iam/docs/understanding-roles#predefined_roles) , such as the [pre-defined roles for GKE](/kubernetes-engine/docs/how-to/iam#predefined) , provide finer-grained access than basic roles and address many common use cases.\n- [Custom roles](/iam/docs/understanding-custom-roles) allow you to create unique combinations of permissions.\nA principal can be any of:\n- User account\n- Service account\n- Google Workspace Google Group\n- Google Workspace domain\n- Cloud Identity domain\nAn [IAM policy](/iam/docs/overview#iam_policy) assigns a set of permissions to one or more Google Cloud principals.\nYou can also use IAM to create and configure [service accounts](/iam/docs/service-accounts) , which are Google Cloud accounts associated with your project that can perform tasks on your behalf. Service accounts are assigned roles and permissions in the same way as human users.\nService accounts provide other functionality as well. To learn more, refer to [Creating IAM Policies](/kubernetes-engine/docs/how-to/iam) .\n### IAM recommendations\nConsider using the following IAM predefined roles to facilitate common scenarios:\n- [Kubernetes Engine Cluster Viewer](/iam/docs/understanding-roles#container.clusterViewer) (`roles/container.clusterViewer`): DevOps, engineers, and application developers who only need to connect to the cluster.\n- [Kubernetes Engine Cluster Admin](/iam/docs/understanding-roles#container.clusterAdmin) (`roles/container.clusterAdmin`): Platform administrators and cluster operators who need to manage one or more clusters in a Google Cloud project.\nFor a list of the available predefined IAM roles, refer to [Predefined GKE roles](/kubernetes-engine/docs/how-to/iam#predefined) .\nAdditionally, consider creating a custom IAM service account for your nodes to use instead of the Compute Engine default service account. Grant the custom service account the minimum permissions needed for GKE to function. For instructions, see [Use least-privilege IAM service accounts](/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa) .\n## IAM interaction with Kubernetes RBAC\nIAM and Kubernetes RBAC work together to help manage access to your cluster. RBAC controls access on a cluster and namespace level, while IAM works on the project level. An entity must have sufficient permissions at either level to work with resources in your cluster.\n## What's next\n- [Read the GKE security overview](/kubernetes-engine/docs/concepts/security-overview) .\n- [Learn how to use Kubernetes RBAC](/kubernetes-engine/docs/how-to/role-based-access-control) .\n- [Learn how to create IAM policies for GKE](/kubernetes-engine/docs/how-to/iam) .\n- [Learn how to use IAM Conditions for load balancers](/load-balancing/docs/access-control/iam-conditions) .", "guide": "Google Kubernetes Engine (GKE)"}