{"title": "Google Kubernetes Engine (GKE) - \u5728 Kubernetes \u6e05\u55ae\u4e2d\u4f7f\u7528\u5bb9\u5668\u6620\u50cf\u6458\u8981", "url": "https://cloud.google.com/kubernetes-engine/docs/tutorials/using-container-image-digests-in-kubernetes-manifests?hl=zh-cn", "abstract": "# Google Kubernetes Engine (GKE) - \u5728 Kubernetes \u6e05\u55ae\u4e2d\u4f7f\u7528\u5bb9\u5668\u6620\u50cf\u6458\u8981\nLast reviewed 2023-07-21 UTC\n\u672c\u6559\u7a0b\u5411\u5c07\u5bb9\u5668\u90e8\u7f72\u5230 Kubernetes \u7684\u958b\u767c\u8005\u548c\u904b\u7dad\u4eba\u54e1\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528\u5bb9\u5668\u6620\u50cf\u6458\u8981\u4f86\u8b58\u5225\u5bb9\u5668\u6620\u50cf\u3002\u5bb9\u5668\u6620\u50cf\u6458\u8981\u662f\u552f\u4e00\u4e14\u4e0d\u53ef\u6539\u8b8a\u5730\u6a19\u8b58\u5bb9\u5668\u6620\u50cf\u3002\n\u8207\u4f7f\u7528\u6620\u50cf\u6a19\u8a18\u76f8\u6bd4\uff0c\u4f7f\u7528\u6620\u50cf\u6458\u8981\u90e8\u7f72\u5bb9\u5668\u6620\u50cf\u6709\u8af8\u591a\u597d\u8655\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u6620\u50cf\u6458\u8981\uff0c\u8acb\u53c3\u95b1 [\u4f7f\u7528\u5bb9\u5668\u6620\u50cf\u6458\u8981](https://cloud.google.com/architecture/using-container-images?hl=zh-cn) \u7684\u96a8\u9644\u6587\u6a94\uff0c\u7136\u5f8c\u518d\u7e7c\u7e8c\u672c\u6559\u7a0b\u3002\nKubernetes pod \u898f\u7bc4\u4e2d\u7684\u5bb9\u5668\u7684 `image` \u53c3\u6578\u63a5\u53d7\u5305\u542b\u6458\u8981\u7684\u6620\u50cf\u3002\u6b64\u53c3\u6578\u9069\u7528\u65bc\u6240\u6709\u4f7f\u7528 Pod \u898f\u7bc4\u7684\u4f4d\u7f6e\uff0c\u4f8b\u5982 Deployment\u3001StatefulSet\u3001DaemonSet\u3001ReplicaSet\u3001CronJob \u548c Job \u8cc7\u6e90\u7684 `template` \u90e8\u5206\u3002\n\u5982\u9700\u4f7f\u7528\u6458\u8981\u90e8\u7f72\u6620\u50cf\uff0c\u8acb\u4f7f\u7528\u6620\u50cf\u540d\u7a31\uff0c\u5f8c\u8ddf `@sha256:` \u548c\u6458\u8981\u503c\u3002\u4ee5\u4e0b\u662f\u4f7f\u7528\u5305\u542b\u6458\u8981\u7684\u6620\u50cf\u7684 Deployment \u8cc7\u6e90\u793a\u4f8b\uff1a\n```\napiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: echo-deploymentspec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app: echo\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 app: echo\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: echoserver\u00a0 \u00a0 \u00a0 \u00a0 image: gcr.io/google-containers/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 8080\n```\n\u4f7f\u7528\u6620\u50cf\u6458\u8981\u7684\u4e00\u500b\u7f3a\u9ede\u662f\uff0c\u5728\u5c07\u6620\u50cf\u767c\u4f48\u5230\u8a3b\u518a\u8868\u4e4b\u524d\uff0c\u60a8\u4e0d\u77e5\u9053\u6458\u8981\u503c\u3002\u69cb\u5efa\u65b0\u6620\u50cf\u6642\uff0c\u6458\u8981\u503c\u6703\u767c\u751f\u8b8a\u5316\uff0c\u60a8\u9700\u8981\u5728\u6bcf\u6b21\u90e8\u7f72\u6642\u66f4\u65b0 Kubernetes \u6e05\u55ae\u3002\n\u672c\u6559\u7a0b\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528 [Skaffold](https://skaffold.dev/) \u3001 [kpt](https://kpt.dev/) \u3001 [digester](https://github.com/google/k8s-digester) \u3001 [kustomize](https://kustomize.io/) \u3001 [gke-deploy](https://cloud.google.com/build/docs/deploying-builds/deploy-gke?hl=zh-cn) \u548c [ko](https://ko.build/) \u7b49\u5de5\u5177\u5728\u6e05\u55ae\u4e2d\u4f7f\u7528\u6620\u50cf\u6458\u8981\u3002", "content": "## \u5efa\u8b70\u672c\u6587\u6a94\u4ecb\u7d39\u4e86\u5e7e\u7a2e\u5728 Kubernetes \u90e8\u7f72\u4e2d\u4f7f\u7528\u6620\u50cf\u6458\u8981\u7684\u65b9\u6cd5\u3002\u672c\u6587\u6a94\u4e2d\u4ecb\u7d39\u7684\u5de5\u5177\u4e92\u7232\u88dc\u5145\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u7d50\u5408\u4f7f\u7528 kpt \u51fd\u6578\u7684\u8f38\u51fa\u548c kustomize \u4f86\u7232\u4e0d\u540c\u74b0\u5883\u5275\u5efa\u8b8a\u9ad4\u3002Skaffold \u53ef\u4ee5 [\u4f7f\u7528 ko \u69cb\u5efa\u6620\u50cf](https://skaffold.dev/docs/builders/builder-types/ko/) \uff0c\u4e26\u4f7f\u7528 `kubectl` \u6216 kpt \u5c07\u6620\u50cf\u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa3\u3002\n\u9019\u4e9b\u5de5\u5177\u4e92\u7232\u88dc\u5145\u7684\u539f\u56e0\u662f\u5b83\u5011\u6839\u64da [Kubernetes \u8cc7\u6e90\u6a21\u578b (KRM)](https://kubernetes.io/docs/reference/using-api/api-concepts/) \u57f7\u884c [\u7d50\u69cb\u5316\u4fee\u6539](https://github.com/kubernetes/design-proposals-archive/blob/main/architecture/declarative-application-management.md) \u3002\u6b64\u6a21\u578b\u4f7f\u5de5\u5177\u6210\u7232\u53ef\u63d2\u5165\u5de5\u5177\uff0c\u60a8\u53ef\u4ee5\u6539\u9032\u9019\u4e9b\u5de5\u5177\u7684\u7528\u9014\uff0c\u5275\u5efa\u53ef\u5e6b\u52a9\u60a8\u90e8\u7f72\u61c9\u7528\u548c\u670d\u52d9\u7684\u6d41\u7a0b\u548c\u6d41\u6c34\u7dda\u3002\n\u9996\u5148\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u4f7f\u7528\u6700\u9069\u5408\u60a8\u7684\u73fe\u6709\u5de5\u5177\u548c\u6d41\u7a0b\u7684\u65b9\u6cd5\uff1a- Skaffold \u53ef\u4ee5\u5411\u6620\u50cf\u5f15\u7528\u6dfb\u52a0\u6458\u8981\u3002\u60a8\u53ea\u9700\u9032\u884c\u7d30\u5fae\u7684\u914d\u7f6e\u66f4\u6539\u5373\u53ef\u5553\u7528\u6b64\u529f\u80fd\u3002\u63a1\u7528 Skaffold \u5177\u6709\u984d\u5916\u512a\u52e2\uff0c\u4f8b\u5982\u7e3d\u7d50\u4e0d\u540c\u7684\u5de5\u5177\u69cb\u5efa\u548c\u90e8\u7f72\u5bb9\u5668\u6620\u50cf\u7684\u65b9\u5f0f\u3002\n- \u901a\u904e\u4f7f\u7528 digester \u5de5\u5177\u4f5c\u7232 Kubernetes \u96c6\u7fa3\u4e2d\u7684\u53ef\u8b8a\u51c6\u5165\u7db2\u7d61\u9264\u5b50\uff0c\u60a8\u53ef\u4ee5\u5411\u6240\u6709\u90e8\u7f72\u6dfb\u52a0\u6458\u8981\uff0c\u540c\u6642\u5c07\u5c0d\u69cb\u5efa\u548c\u90e8\u7f72\u5bb9\u5668\u6620\u50cf\u7684\u7576\u524d\u6d41\u7a0b\u7684\u5f71\u97ff\u964d\u81f3\u6700\u4f4e\u3002Digester \u7db2\u7d61\u9264\u5b50\u4e5f\u7c21\u5316\u4e86 [Binary Authorization](https://cloud.google.com/binary-authorization/docs?hl=zh-cn) \u7684\u63a1\u7528\uff0c\u56e0\u7232\u5b83\u53ea\u9700\u8981\u5c07\u6a19\u7c64\u6dfb\u52a0\u5230\u547d\u540d\u7a7a\u9593\u3002\n- \u5982\u679c\u60a8\u9700\u8981\u9748\u6d3b\u7684\u5de5\u5177\u4f86\u8655\u7406 Kubernetes \u6e05\u55ae\uff0ckpt \u4e0d\u5931\u7232\u4e00\u7a2e\u5f88\u4e0d\u932f\u7684\u9078\u64c7\u3002Digester \u5de5\u5177\u53ef\u4ee5\u5728 [kpt \u6d41\u6c34\u7dda](https://kpt.dev/book/04-using-functions/01-declarative-function-execution) \u4e2d\u7528\u4f5c\u5ba2\u6236\u7aef [KRM \u51fd\u6578](https://kpt.dev/book/02-concepts/03-functions) \u3002\n- \u5982\u679c\u60a8\u5df2\u4f7f\u7528 kustomize \u8de8\u74b0\u5883\u7ba1\u7406 Kubernetes \u6e05\u55ae\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u5229\u7528\u5176\u6620\u50cf\u8f49\u63db\u5668\u4ee5\u6458\u8981\u7684\u5f62\u5f0f\u90e8\u7f72\u6620\u50cf\u3002\n- `ko` \u662f\u69cb\u5efa\u548c\u767c\u4f48 Go \u61c9\u7528\u6620\u50cf\u7684\u597d\u65b9\u6cd5\uff0c\u5b83\u53ef\u7528\u65bc [Knative](https://knative.dev/) \u3001 [Tekton](https://tekton.dev/) \u548c [sigstore](https://sigstore.dev/) \u7b49\u958b\u6e90\u9805\u76ee\u3002\n\u5982\u679c\u60a8\u6c92\u6709\u4f7f\u7528\u672c\u6587\u6a94\u4e2d\u6240\u8ff0\u7684\u4efb\u4f55\u5de5\u5177\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u5f9e Skaffold \u548c digester \u7db2\u7d61\u9264\u5b50\u958b\u59cb\u3002Skaffold \u662f\u958b\u767c\u8005\u548c\u767c\u4f48\u5718\u968a\u4f7f\u7528\u7684\u5e38\u7528\u5de5\u5177\uff0c\u8207\u672c\u6559\u7a0b\u4e2d\u6240\u8ff0\u7684\u5176\u4ed6\u5de5\u5177\u96c6\u6210\u3002\u96a8\u7740\u9700\u6c42\u7684\u8b8a\u5316\uff0c\u60a8\u53ef\u4ee5\u5229\u7528\u9019\u4e9b\u96c6\u6210\u9078\u9805\u3002Digester Kubernetes webhook \u901a\u904e\u7232\u6574\u500b\u96c6\u7fa3\u5553\u7528\u57fa\u65bc\u6458\u8981\u7684\u90e8\u7f72\u4f86\u88dc\u5145 Skaffold\u3002## \u76ee\u6a19\n- \u4f7f\u7528 Skaffold \u69cb\u5efa\u548c\u63a8\u9001\u6620\u50cf\uff0c\u4e26\u5728 Kubernetes \u6e05\u55ae\u4e2d\u63d2\u5165\u6620\u50cf\u540d\u7a31\u548c\u6458\u8981\u3002\n- \u4f7f\u7528 digester \u5ba2\u6236\u7aef\u51fd\u6578\u548c\u53ef\u8b8a\u51c6\u5165\u7db2\u7d61\u9264\u5b50\uff0c\u5c07\u6458\u8981\u6dfb\u52a0\u5230 Kubernetes Pod \u548c Pod \u6a21\u677f\u4e2d\u7684\u6620\u50cf\u3002\n- \u4f7f\u7528 kpt setter \u5c07 Kubernetes \u6e05\u55ae\u4e2d\u7684\u6620\u50cf\u6a19\u8a18\u66ff\u63db\u7232\u6620\u50cf\u6458\u8981\u3002\n- \u4f7f\u7528 kustomize \u751f\u6210\u5e36\u6709\u6620\u50cf\u6458\u8981\u7684 Kubernetes \u6e05\u55ae\u3002\n- \u4f7f\u7528`gke-deploy`\u5c07\u6620\u50cf\u6a19\u8a18\u89e3\u6790\u7232 Kubernetes \u6e05\u55ae\u4e2d\u7684\u6458\u8981\u3002\n- \u4f7f\u7528`ko`\u69cb\u5efa\u548c\u63a8\u9001\u6620\u50cf\uff0c\u4e26\u5728 Kubernetes \u6e05\u55ae\u4e2d\u63d2\u5165\u6620\u50cf\u540d\u7a31\u548c\u6458\u8981\u3002## \u8cbb\u7528\nTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5728\u672c\u6587\u6a94\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 Google Cloud \u7684\u4ee5\u4e0b\u6536\u8cbb\u7d44\u4ef6\uff1a- [Artifact Registry](https://cloud.google.com/artifact-registry/pricing?hl=zh-cn) \n\u60a8\u53ef\u4f7f\u7528 [\u50f9\u683c\u8a08\u7b97\u5668](https://cloud.google.com/products/calculator?hl=zh-cn) \u6839\u64da\u60a8\u7684\u9810\u8a08\u4f7f\u7528\u60c5\u6cc1\u4f86\u4f30\u7b97\u8cbb\u7528\u3002 \nTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5b8c\u6210\u672c\u6587\u6a94\u4e2d\u63cf\u8ff0\u7684\u4efb\u52d9\u5f8c\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u522a\u9664\u6240\u5275\u5efa\u7684\u8cc7\u6e90\u4f86\u907f\u514d\u7e7c\u7e8c\u8a08\u8cbb\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e05\u7406](#clean-up) \u3002## \u9808\u77e5\u4e8b\u9805\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5728 Google Cloud Console \u4e2d\u7684\u9805\u76ee\u9078\u64c7\u5668\u9801\u9762\u4e0a\uff0c\u9078\u64c7\u6216 [\u5275\u5efa\u4e00\u500b Google Cloud \u9805\u76ee](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn) \u3002 **\u6ce8\u610f** \uff1a\u5982\u679c\u60a8\u4e0d\u6253\u7b97\u4fdd\u7559\u5728\u6b64\u904e\u7a0b\u4e2d\u5275\u5efa\u7684\u8cc7\u6e90\uff0c\u8acb\u5275\u5efa\u65b0\u7684\u9805\u76ee\uff0c\u800c\u4e0d\u8981\u9078\u64c7\u73fe\u6709\u7684\u9805\u76ee\u3002\u5b8c\u6210\u672c\u6559\u7a0b\u4ecb\u7d39\u7684\u6b65\u9a5f\u5f8c\uff0c\u60a8\u53ef\u4ee5\u522a\u9664\u6240\u5275\u5efa\u7684\u9805\u76ee\uff0c\u4e26\u79fb\u9664\u8207\u8a72\u9805\u76ee\u95dc\u806f\u7684\u6240\u6709\u8cc7\u6e90\u3002 [\u8f49\u5230\u201c\u9805\u76ee\u9078\u64c7\u5668\u201d](https://console.cloud.google.com/projectselector2/home/dashboard?hl=zh-cn) \n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them [\u78ba\u4fdd\u60a8\u7684 Google Cloud \u9805\u76ee\u5df2\u5553\u7528\u7d50\u7b97\u529f\u80fd](https://cloud.google.com/billing/docs/how-to/verify-billing-enabled?hl=zh-cn#console) \u3002\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5553\u7528 Artifact Registry API\u3002 [\u5553\u7528 API](https://console.cloud.google.com/flows/enableapi?apiid=artifactregistry.googleapis.com&hl=zh-cn) \n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u6fc0\u6d3b Cloud Shell\u3002 [\u6fc0\u6d3b Cloud Shell](https://console.cloud.google.com/?cloudshell=true&hl=zh-cn) \n- \u5728 Cloud Shell \u4e2d\uff0c\u8a2d\u7f6e Google Cloud CLI \u7684\u9ed8\u8a8d\u9805\u76ee\uff1a```\ngcloud config set project PROJECT_ID\n```\u5c07 `` \u66ff\u63db\u7232\u60a8\u7684[\u9805\u76ee ID]\u3002\n- \u5728 Artifact Registry \u4e2d\u5275\u5efa\u5bb9\u5668\u6620\u50cf\u88fd\u54c1\u5eab\uff1a```\ngcloud artifacts repositories create REPOSITORY \\\u00a0 \u00a0 --location=LOCATION \\\u00a0 \u00a0 --repository-format=docker\n```\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- ``\uff1a\u60a8\u8981\u7528\u65bc\u88fd\u54c1\u5eab\u7684\u540d\u7a31\uff0c\u4f8b\u5982`digest-tutorial`\u3002\n- ``\uff1a [Artifact Registry \u4f4d\u7f6e](https://cloud.google.com/artifact-registry/docs/repositories/repo-locations?hl=zh-cn) \uff0c\u4f8b\u5982`us-central1`\u3002\n- \u7232\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684 CLI \u5de5\u5177\u914d\u7f6e\u5c0d Artifact Registry \u4f4d\u7f6e\u7684\u8eab\u4efd\u9a57\u8b49\uff1a```\ngcloud auth configure-docker LOCATION-docker.pkg.dev\n```## \u4f7f\u7528 Skaffold [Skaffold](https://skaffold.dev/) \u662f\u4e00\u7a2e\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u65bc\u6301\u7e8c\u958b\u767c\u61c9\u7528\u4e26\u5c07\u61c9\u7528\u6301\u7e8c\u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa3\u3002\n\u4f7f\u7528 Skaffold \u69cb\u5efa\u6620\u50cf\uff0c\u5c07\u6620\u50cf\u63a8\u9001\u5230 Container Registry\uff0c\u7136\u5f8c\u5c07 Kubernetes \u6e05\u55ae\u6a21\u677f\u4e2d\u7684 `image` \u4f54\u4f4d\u503c\u66ff\u63db\u7232\u63a8\u9001\u6620\u50cf\u7684\u540d\u7a31\u3001\u6a19\u8a18\u548c\u6458\u8981\uff1a- \u5728 Cloud Shell \u4e2d\uff0c\u5275\u5efa\u4e26\u8f49\u5230\u7528\u65bc\u5b58\u5132\u60a8\u5728\u672c\u90e8\u5206\u5275\u5efa\u7684\u6587\u4ef6\u7684\u76ee\u9304\uff1a```\nmkdir -p ~/container-image-digests-tutorial/skaffoldcd ~/container-image-digests-tutorial/skaffold\n```\n- \u514b\u9686 Skaffold Git \u4ee3\u78bc\u5eab\uff1a```\ngit clone https://github.com/GoogleContainerTools/skaffold.git\n```\n- \u8f49\u5230 `getting-started` \u793a\u4f8b\u7684\u76ee\u9304\uff1a```\ncd skaffold/examples/getting-started\n```\n- \u67e5\u770b\u8207\u60a8\u7684 Skaffold \u7248\u672c\u5339\u914d\u7684 Git \u6a19\u8a18\uff1a```\ngit checkout $(skaffold version)\n```\n- \u67e5\u770b `skaffold.yaml` \u914d\u7f6e\u6587\u4ef6\uff1a```\ncat skaffold.yaml\n```\u8a72\u6587\u4ef6\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\napiVersion: skaffold/v4beta6kind: Configbuild:\u00a0 artifacts:\u00a0 - image: skaffold-examplemanifests:\u00a0 rawYaml:\u00a0 - k8s-pod.yaml\n````build.artifacts` \u90e8\u5206\u5305\u542b\u4f54\u4f4d\u7b26\u6620\u50cf\u540d\u7a31\u3002Skaffold \u6703\u5728\u8f38\u5165\u6e05\u55ae\u6587\u4ef6\u4e2d\u67e5\u627e\u6b64\u4f54\u4f4d\u7b26\u3002`manifests` \u90e8\u5206\u6307\u793a Skaffold \u8b80\u53d6\u7576\u524d\u76ee\u9304\u4e2d\u540d\u7232 `k8s-pod.yaml` \u7684\u8f38\u5165\u6e05\u55ae\u3002\u5982\u9700\u5927\u81f4\u77ad\u89e3\u6240\u6709\u53ef\u7528\u9078\u9805\uff0c\u8acb\u53c3\u95b1 [skaffold.yaml \u53c3\u8003\u6587\u6a94](https://skaffold.dev/docs/references/yaml/) \u3002\n- \u67e5\u770b Kubernetes \u6e05\u55ae\u6a21\u677f\uff1a```\ncat k8s-pod.yaml\n```\u8a72\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a```\napiVersion: v1kind: Podmetadata:\u00a0 name: getting-startedspec:\u00a0 containers:\u00a0 - name: getting-started\u00a0 \u00a0 image: skaffold-example\n````image` \u5b57\u6bb5\u4e2d\u7684 `skaffold-example` \u4f54\u4f4d\u503c\u8207 `skaffold.yaml` \u6587\u4ef6\u4e2d\u7684 `image` \u5b57\u6bb5\u7684\u503c\u5339\u914d\u3002Skaffold \u6703\u5728\u6e32\u67d3\u7684\u8f38\u51fa\u4e2d\u5c07\u6b64\u4f54\u4f4d\u503c\u66ff\u63db\u7232\u5b8c\u6574\u7684\u6620\u50cf\u540d\u7a31\u548c\u6458\u8981\u3002\n- \u69cb\u5efa\u6620\u50cf\u4e26\u5c07\u5176\u63a8\u9001\u5230 Container Registry\uff1a```\nskaffold build \\\u00a0 \u00a0 --default-repo=LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY \\\u00a0 \u00a0 --file-output=artifacts.json \\\u00a0 \u00a0 --interactive=false \\\u00a0 \u00a0 --push=true \\\u00a0 \u00a0 --update-check=false\n```\u6b64\u547d\u4ee4\u4f7f\u7528\u4ee5\u4e0b\u6a19\u8a8c\uff1a- `--file-output`\u6a19\u8a8c\u6307\u5b9a Skaffold \u7528\u65bc\u4fdd\u5b58\u6709\u95dc\u69cb\u5efa\u6620\u50cf\u7684\u4fe1\u606f\uff08\u5305\u62ec\u6458\u8981\u503c\uff09\u7684\u6587\u4ef6\u3002\n- `--push`\u6a19\u8a8c\u6307\u793a Skaffold \u5c07\u69cb\u5efa\u7684\u6620\u50cf\u63a8\u9001\u5230\u7531`--default-repo`\u6a19\u8a8c\u6307\u5b9a\u7684\u5bb9\u5668\u6620\u50cf\u8a3b\u518a\u8868\u3002\n- `--interactive`\u548c`--update-check`\u6a19\u8a8c\u5747\u8a2d\u7f6e\u7232`false`\u3002\u5728\u975e\u4ea4\u4e92\u5f0f\u74b0\u5883\uff08\u5982\u69cb\u5efa\u6d41\u6c34\u7dda\uff09\u4e2d\uff0c\u5c07\u9019\u4e9b\u6a19\u8a8c\u8a2d\u7f6e\u7232`false`\uff1b\u5c0d\u65bc\u672c\u5730\u958b\u767c\uff0c\u8acb\u5c07\u9019\u4e9b\u6a19\u8a8c\u4fdd\u7559\u7232\u9ed8\u8a8d\u503c\uff08\u5169\u500b\u6a19\u8a8c\u5747\u7232`true`\uff09\u3002\n\u5982\u679c\u60a8\u4f7f\u7528 Cloud Deploy \u90e8\u7f72\u5230 GKE\uff0c\u8acb\u5728 [\u5275\u5efa\u7248\u672c](https://cloud.google.com/deploy/docs/integrating-ci?hl=zh-cn#build_artifacts_versus_images) \u6642\u4f7f\u7528 `--file-output` \u6a19\u8a8c\u4e2d\u7684\u6587\u4ef6\u4f5c\u7232 `--build-artifacts` \u6a19\u8a8c\u7684\u503c\u3002\n- \u4f7f\u7528\u4e0a\u4e00\u6b65\u4e2d\u7684\u5bb9\u5668\u6620\u50cf\u7684\u540d\u7a31\u3001\u6a19\u8a18\u548c\u6458\u8981\u6e32\u67d3\u5c55\u958b\u7684 Kubernetes \u6e05\u55ae\uff1a```\nskaffold render \\\u00a0 \u00a0 --build-artifacts=artifacts.json \\\u00a0 \u00a0 --digest-source=none \\\u00a0 \u00a0 --interactive=false \\\u00a0 \u00a0 --offline=true \\\u00a0 \u00a0 --output=rendered.yaml \\\u00a0 \u00a0 --update-check=false\n```\u6b64\u547d\u4ee4\u4f7f\u7528\u4ee5\u4e0b\u6a19\u8a8c\uff1a- `--build-artifacts`\u6a19\u8a8c\u5f15\u7528\u4e0a\u4e00\u6b65\u4e2d`skaffold build`\u547d\u4ee4\u7684\u8f38\u51fa\u6587\u4ef6\u3002\n- `--digest-source=none`\u6a19\u8a8c\u8868\u793a Skaffold \u4f7f\u7528`--build-artifacts`\u6a19\u8a8c\u63d0\u4f9b\u7684\u6587\u4ef6\u4e2d\u7684\u6458\u8981\u503c\uff0c\u800c\u4e0d\u662f\u89e3\u6790\u5bb9\u5668\u6620\u50cf\u8a3b\u518a\u8868\u4e2d\u7684\u6458\u8981\u3002\n- `--offline=true`\u6a19\u8a8c\u8868\u793a\u60a8\u53ef\u4ee5\u5728\u7121\u9700\u8a2a\u554f Kubernetes \u96c6\u7fa3\u7684\u60c5\u6cc1\u4e0b\u904b\u884c\u8a72\u547d\u4ee4\u3002\n- `--output`\u6a19\u8a8c\u6307\u5b9a\u6e32\u67d3\u7684\u6e05\u55ae\u7684\u8f38\u51fa\u6587\u4ef6\u3002\n- \u67e5\u770b\u5448\u73fe\u7684\u6e05\u55ae\uff1a```\ncat rendered.yaml\n```\u8f38\u51fa\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\uff1a```\napiVersion: v1kind: Podmetadata:\u00a0 name: getting-startedspec:\u00a0 containers:\u00a0 - image: LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/skaffold-example:TAG@sha256:DIGEST\u00a0 \u00a0 name: getting-started\n```\u5728\u6b64\u8f38\u51fa\u4e2d\uff0c\u60a8\u6703\u770b\u5230\u4ee5\u4e0b\u503c\uff1a- ``\uff1aSkaffold \u5206\u914d\u7d66\u6620\u50cf\u7684\u6a19\u8a18\u3002\n- ``\uff1a\u6620\u50cf\u6458\u8981\u503c## \u4f7f\u7528 digester [Digester](https://github.com/google/k8s-digester) \u5411 Kubernetes Pod \u548c Pod \u6a21\u677f\u898f\u7bc4\u4e2d\u7684\u5bb9\u5668\u548c init \u5bb9\u5668\u6620\u50cf\u6dfb\u52a0\u6458\u8981\u3002Digester \u6703\u66ff\u63db\u4f7f\u7528\u6a19\u8a18\u7684\u5bb9\u5668\u6620\u50cf\u5f15\u7528\uff1a\n```\nspec:\u00a0 containers:\u00a0 - image: gcr.io/google-containers/echoserver:1.10\n```\n\u5c0d\u65bc\u4f7f\u7528\u6620\u50cf\u6458\u8981\u7684\u5f15\u7528\uff0c\u8acb\u6ce8\u610f\u4ee5\u4e0b\u4e8b\u9805\uff1a\n```\nspec:\u00a0 containers:\u00a0 - image: gcr.io/google-containers/echoserver:1.10@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229\n```\nDigester \u53ef\u5728 Kubernetes \u96c6\u7fa3\u4e2d\u4f5c\u7232 [\u8b8a\u66f4\u51c6\u5165 webhook](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/) \u904b\u884c\uff0c\u4e5f\u53ef\u4f7f\u7528 kpt \u6216 kustomize \u547d\u4ee4\u884c\u5de5\u5177\u4f5c\u7232\u5ba2\u6236\u7aef [KRM \u51fd\u6578](https://kpt.dev/book/02-concepts/03-functions) \u904b\u884c\u3002\n### \u4f7f\u7528 digester KRM \u51fd\u6578\n- \u5728 Cloud Shell \u4e2d\uff0c\u5275\u5efa\u4e26\u8f49\u5230\u7528\u65bc\u5b58\u5132\u60a8\u5728\u672c\u90e8\u5206\u5275\u5efa\u7684\u6587\u4ef6\u7684\u76ee\u9304\uff1a```\nmkdir -p ~/container-image-digests-tutorial/digester-fncd ~/container-image-digests-tutorial/digester-fn\n```\n- \u4e0b\u8f09 digester \u4e8c\u9032\u5236\u6587\u4ef6\uff1a```\nmkdir -p ${HOME}/binexport PATH=${HOME}/bin:${PATH}DIGESTER_VERSION=$(curl -sL https://api.github.com/repos/google/k8s-digester/releases/latest | jq -r .tag_name)curl -L \"https://github.com/google/k8s-digester/releases/download/${DIGESTER_VERSION}/digester_$(uname -s)_$(uname -m)\" --output ${HOME}/bin/digesterchmod +x ${HOME}/bin/digester\n```\n- \u4f7f\u7528\u6a19\u8a18 `1.10` \u5275\u5efa\u5f15\u7528\u6620\u50cf `gcr.io/google-containers/echoserver` \u7684 Kubernetes Pod \u6e05\u55ae\uff1a```\ncat << EOF > pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n name: echo\nspec:\n containers:\n - name: echoserver\n image: gcr.io/google-containers/echoserver:1.10\n ports:\n - containerPort: 8080\nEOF\n```\n- \u4f7f\u7528 kpt \u548c\u7576\u524d\u76ee\u9304 ( `.` ) \u4e2d\u7684\u6e05\u55ae\u904b\u884c\u6458\u8981 KRM \u51fd\u6578\uff1a```\nkpt fn eval . --exec digester\n```\u904b\u884c\u6b64\u547d\u4ee4\u6642\uff0ckpt \u6703\u5c0d\u7576\u524d\u76ee\u9304\u4e2d\u7684\u6e05\u55ae\u57f7\u884c\u5c31\u5730\u66f4\u65b0\u3002\u5982\u679c\u60a8\u5e0c\u671b kpt \u5728\u63a7\u5236\u6aaf\u4e2d\u986f\u793a\u66f4\u65b0\u5f8c\u7684\u6e05\u55ae\uff0c\u4e26\u4fdd\u6301\u6e05\u55ae\u6587\u4ef6\u4e0d\u8b8a\uff0c\u8acb\u6dfb\u52a0 `--output unwrap` \u6a19\u8a8c\u3002\n- \u67e5\u770b\u66f4\u65b0\u5f8c\u7684\u6e05\u55ae\uff1a```\ncat pod.yaml\n```\u8a72\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a```\napiVersion: v1kind: Podmetadata:\u00a0 name: echospec:\u00a0 containers:\u00a0 \u00a0 - name: echoserver\u00a0 \u00a0 \u00a0 image: gcr.io/google-containers/echoserver:1.10@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229\u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 8080\n```\n### \u4f7f\u7528 digester \u51c6\u5165\u7db2\u7d61\u9264\u5b50\n- \u5728 Cloud Shell \u4e2d\uff0c\u5275\u5efa\u4e26\u8f49\u5230\u7528\u65bc\u5b58\u5132\u60a8\u5728\u672c\u90e8\u5206\u5275\u5efa\u7684\u6587\u4ef6\u7684\u76ee\u9304\uff1a```\nmkdir -p ~/container-image-digests-tutorial/digester-webhookcd ~/container-image-digests-tutorial/digester-webhook\n```\n- \u4f7f\u7528 [kind](https://kind.sigs.k8s.io/) \u5275\u5efa\u672c\u5730 Kubernetes \u96c6\u7fa3\uff1a```\nkind create cluster\n```kind \u662f\u4e00\u7a2e\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u65bc\u4f7f\u7528 Docker \u904b\u884c\u672c\u5730 Kubernetes \u96c6\u7fa3\u3002\n- \u90e8\u7f72 digester \u7db2\u7d61\u9264\u5b50\uff1a```\nDIGESTER_VERSION=$(curl -sL https://api.github.com/repos/google/k8s-digester/releases/latest | jq -r .tag_name)kustomize build \"https://github.com/google/k8s-digester.git/manifests?ref=${DIGESTER_VERSION}\" | kubectl apply -f ```\n- \u5728\u7a2e\u985e\u96c6\u7fa3\u4e2d\u5275\u5efa\u4e00\u500b\u540d\u7232 `digester-demo` \u7684 Kubernetes \u547d\u540d\u7a7a\u9593\uff1a```\nkubectl create namespace digester-demo\n```\n- \u5c07 `digest-resolution: enabled` \u6a19\u7c64\u6dfb\u52a0\u5230 `digester-demo` \u547d\u540d\u7a7a\u9593\uff1a```\nkubectl label namespace digester-demo digest-resolution=enabled\n```Digester \u7db2\u7d61\u9264\u5b50\u6703\u5c07\u6458\u8981\u6dfb\u52a0\u5230\u5e36\u6709\u6b64\u6a19\u7c64\u7684\u547d\u540d\u7a7a\u9593\u4e2d\u7684 pod\u3002\n- \u4f7f\u7528\u6a19\u8a18 `1.10` \u5275\u5efa\u5f15\u7528\u6620\u50cf `gcr.io/google-containers/echoserver` \u7684 Kubernetes Deployment \u6e05\u55ae\uff1a```\ncat << EOF > deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n name: echo-deployment\nspec:\n selector:\n matchLabels:\n  app: echo\n template:\n metadata:\n  labels:\n  app: echo\n spec:\n  containers:\n  - name: echoserver\n  image: gcr.io/google-containers/echoserver:1.10\n  ports:\n  - containerPort: 8080\nEOF\n```\n- \u5728 `digester-demo` \u547d\u540d\u7a7a\u9593\u4e2d\u61c9\u7528\u6e05\u55ae\uff1a```\nkubectl apply --filename deployment.yaml --namespace digester-demo \\\u00a0 \u00a0 --output jsonpath='{.spec.template.spec.containers[].image}{\"\\n\"}'\n````--output` \u6a19\u8a8c\u6307\u793a `kubectl` \u5c07\u6620\u50cf\u540d\u7a31\u8f38\u51fa\u5230\u63a7\u5236\u6aaf\uff0c\u5f8c\u8ddf\u63db\u884c\u7b26\u3002\u8f38\u51fa\u5982\u4e0b\u6240\u793a\uff1a```\ngcr.io/google-containers/echoserver:1.10@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229\n```\u6b64\u8f38\u51fa\u8868\u660e digester \u7db2\u7d61\u9264\u5b50\u5c07\u6620\u50cf\u6458\u8981\u6dfb\u52a0\u5230\u4e86 Deployment \u8cc7\u6e90\u4e2d\u7684 Pod \u6a21\u677f\u898f\u7bc4\u3002\n- \u522a\u9664\u7a2e\u985e\u96c6\u7fa3\u4ee5\u91cb\u653e Cloud Shell \u6703\u8a71\u4e2d\u7684\u8cc7\u6e90\uff1a```\nkind delete cluster\n```\n## \u4f7f\u7528 kpt setter [kpt](https://kpt.dev/) \u662f\u4e00\u500b\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u65bc\u7ba1\u7406\u3001\u64cd\u4f5c\u3001\u81ea\u5b9a\u7fa9\u548c\u61c9\u7528 Kubernetes \u8cc7\u6e90\u6e05\u55ae\u3002\n\u60a8\u53ef\u4ee5\u5728\u69cb\u5efa\u65b0\u6620\u50cf\u6642\u4f7f\u7528 [kpt Functions \u76ee\u9304](https://catalog.kpt.dev/) \u4e2d\u7684 `create-setters` \u548c `apply-setters` KRM \u51fd\u6578\u66f4\u65b0 Kubernetes \u6e05\u55ae\u4e2d\u7684\u6620\u50cf\u6458\u8981\u3002- \u5728 Cloud Shell \u4e2d\uff0c\u5275\u5efa\u4e26\u8f49\u5230\u7528\u65bc\u5b58\u5132\u60a8\u5728\u672c\u90e8\u5206\u5275\u5efa\u7684\u6587\u4ef6\u7684\u76ee\u9304\uff1a```\nmkdir -p ~/container-image-digests-tutorial/kptcd ~/container-image-digests-tutorial/kpt\n```\n- \u5728\u7576\u524d\u76ee\u9304\u4e2d\u5275\u5efa kpt \u8edf\u4ef6\u5305\uff1a```\nkpt pkg init --description \"Container image digest tutorial\"\n```\n- \u4f7f\u7528\u6a19\u8a18 `1.10` \u5275\u5efa\u5f15\u7528\u6620\u50cf `gcr.io/google-containers/echoserver` \u7684 Kubernetes Pod \u6e05\u55ae\uff1a```\ncat << EOF > pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n name: echo\nspec:\n containers:\n - name: echoserver\n image: gcr.io/google-containers/echoserver:1.10\n ports:\n - containerPort: 8080\nEOF\n```\n- \u4f7f\u7528 kpt \u7232\u6e05\u55ae\u5b57\u6bb5\u5275\u5efa\u4e00\u500b\u540d\u7232 `echoimage` \u7684 setter\uff0c\u73fe\u6709\u503c\u7232 `gcr.io/google-containers/echoserver:1.10` \uff1a```\nkpt fn eval . \\\u00a0 \u00a0 --image gcr.io/kpt-fn/create-setters@sha256:0220cc87f29ff9abfa3a3b5643aa50f18d355d5e9dc9e1f518119633ddc4895c \\\u00a0 \u00a0 -- \"echoimage=gcr.io/google-containers/echoserver:1.10\"\n```\n- \u67e5\u770b\u6e05\u55ae\uff1a```\ncat pod.yaml\n```\u8a72\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a```\napiVersion: v1kind: Podmetadata:\u00a0 name: echospec:\u00a0 containers:\u00a0 - name: echoserver\u00a0 \u00a0 image: gcr.io/google-containers/echoserver:1.10 # kpt-set: ${echoimage}\u00a0 \u00a0 ports:\u00a0 \u00a0 - containerPort: 8080\n```\n- \u7372\u53d6\u5bb9\u5668\u6620\u50cf\u7684\u6458\u8981\u503c\uff1a```\nDIGEST=$(gcloud container images describe \\\u00a0 \u00a0 gcr.io/google-containers/echoserver:1.10 \\\u00a0 \u00a0 --format='value(image_summary.digest)')\n```\n- \u8a2d\u7f6e\u65b0\u5b57\u6bb5\u503c\uff1a```\nkpt fn eval . \\\u00a0 \u00a0 --image gcr.io/kpt-fn/apply-setters@sha256:4d4295727183396f0c3c6a75d2560254c2f9041a39e95dc1e5beffeb49cc1a12 \\\u00a0 \u00a0 -- \"echoimage=gcr.io/google-containers/echoserver:1.10@$DIGEST\"\n```\u904b\u884c\u6b64\u547d\u4ee4\u6642\uff0ckpt \u5c07\u5c31\u5730\u66ff\u63db\u6e05\u55ae\u4e2d\u7684 `image` \u5b57\u6bb5\u503c\u3002\n- \u67e5\u770b\u66f4\u65b0\u5f8c\u7684\u6e05\u55ae\uff1a```\ncat pod.yaml\n```\u8a72\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a```\napiVersion: v1kind: Podmetadata:\u00a0 name: echospec:\u00a0 containers:\u00a0 - name: echoserver\u00a0 \u00a0 image: gcr.io/google-containers/echoserver:1.10@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 # kpt-set: ${echoimage}\u00a0 \u00a0 ports:\u00a0 \u00a0 - containerPort: 8080\n```\n## \u4f7f\u7528 kustomize \u6620\u50cf\u8f49\u63db\u5668 [kustomize](https://kustomize.io/) \u662f\u4e00\u500b\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u8b93\u60a8\u4f7f\u7528\u758a\u52a0\u5c64\u3001\u88dc\u4e01\u7a0b\u5e8f\u548c\u8f49\u63db\u5668\u81ea\u5b9a\u7fa9 Kubernetes \u6e05\u55ae\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528 kustomize [\u6620\u50cf\u8f49\u63db\u5668](https://github.com/kubernetes-sigs/kustomize/blob/master/examples/transformerconfigs/README.md#images-transformer) \u4f86\u66f4\u65b0\u73fe\u6709\u6e05\u55ae\u4e2d\u7684\u6620\u50cf\u540d\u7a31\u3001\u6a19\u8a18\u548c\u6458\u8981\u3002\n\u4ee5\u4e0b `kustomization.yaml` \u4ee3\u78bc\u6bb5\u4ecb\u7d39\u5982\u4f55\u5c07\u6620\u50cf\u8f49\u63db\u5668\u914d\u7f6e\u7232\u5c07\u8f49\u63db\u5668 `digest` \u503c\u7528\u65bc\u6620\u50cf\uff0c\u9019\u4e9b\u6620\u50cf\u4e2d\u7684 Pod \u898f\u7bc4 `image` \u503c\u8207\u8f49\u63db\u5668 `name` \u503c\u5339\u914d\uff1a\n```\nimages:- name: gcr.io/google-containers/echoserver\u00a0 digest: sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229\n```\n\u5982\u9700\u4f7f\u7528\u542b\u6709\u6620\u50cf\u6458\u8981\u7684\u6620\u50cf\u8f49\u63db\u5668\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u5728 Cloud Shell \u4e2d\uff0c\u5275\u5efa\u4e26\u8f49\u5230\u7528\u65bc\u5b58\u5132\u60a8\u5728\u672c\u90e8\u5206\u5275\u5efa\u7684\u6587\u4ef6\u7684\u76ee\u9304\uff1a```\nmkdir -p ~/container-image-digests-tutorial/kustomizecd ~/container-image-digests-tutorial/kustomize\n```\n- \u5275\u5efa `kustomization.yaml` \u6587\u4ef6\uff1a```\nkustomize init\n```\n- \u901a\u904e\u4f7f\u7528\u6a19\u8a18 `1.10` \u5f15\u7528\u6620\u50cf `gcr.io/google-containers/echoserver` \u7684 Pod \u898f\u7bc4\u5275\u5efa\u4e00\u500b Kubernetes \u6e05\u55ae\uff1a```\ncat << EOF > pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n name: echo\nspec:\n containers:\n - name: echoserver\n image: gcr.io/google-containers/echoserver:1.10\n ports:\n - containerPort: 8080\nEOF\n```\n- \u5c07\u6e05\u55ae\u4f5c\u7232\u8cc7\u6e90\u6dfb\u52a0\u5230 `kustomization.yaml` \u6587\u4ef6\u4e2d\uff1a```\nkustomize edit add resource pod.yaml\n```\n- \u4f7f\u7528\u6620\u50cf\u8f49\u63db\u5668\u66f4\u65b0\u6620\u50cf\u7684\u6458\u8981\uff1a```\nkustomize edit set image \\\u00a0 \u00a0 gcr.io/google-containers/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229\n```\n- \u5728 `kustomization.yaml` \u6587\u4ef6\u4e2d\u67e5\u770b\u6620\u50cf\u8f49\u63db\u5668\uff1a```\ncat kustomization.yaml\n```\u8a72\u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a```\napiVersion: kustomize.config.k8s.io/v1beta1kind: Kustomizationresources:- pod.yamlimages:- digest: sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229\u00a0 name: gcr.io/google-containers/echoserver\n```\n- \u67e5\u770b\u751f\u6210\u7684\u6e05\u55ae\uff1a```\nkustomize build .\n```\u8f38\u51fa\u5982\u4e0b\u6240\u793a\uff1a```\napiVersion: v1kind: Podmetadata:\u00a0 name: echospec:\u00a0 containers:\u00a0 - image: gcr.io/google-containers/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229\u00a0 \u00a0 name: echoserver\u00a0 \u00a0 ports:\u00a0 \u00a0 - containerPort: 8080\n```\n- \u5982\u9700\u901a\u904e\u4e00\u500b\u6b65\u9a5f\u904b\u884c kustomize \u8f49\u63db\u5668\u4e26\u5c07\u751f\u6210\u7684\u6e05\u55ae\u61c9\u7528\u65bc Kubernetes \u96c6\u7fa3\uff0c\u60a8\u53ef\u4ee5\u5c07 `kubectl apply` \u547d\u4ee4\u8207 `--kustomize` \u6a19\u8a8c\u7d50\u5408\u4f7f\u7528\uff1a```\nkubectl apply --kustomize .\n```\u5982\u679c\u60a8\u4e4b\u5f8c\u8981\u61c9\u7528\u8f38\u51fa\uff0c\u53ef\u4ee5\u5c07 `kustomize build` \u547d\u4ee4\u7684\u8f38\u51fa\u91cd\u5b9a\u5411\u5230\u4e00\u500b\u6587\u4ef6\u3002\n## \u4f7f\u7528 gke-deploy [gke-deploy](https://github.com/GoogleCloudPlatform/cloud-builders/blob/master/gke-deploy/README.md) \u662f\u4e00\u500b\u8207 [Google Kubernetes Engine (GKE)](https://cloud.google.com/kubernetes-engine?hl=zh-cn) \u642d\u914d\u4f7f\u7528\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002 `gke-deploy` \u5c01\u88dd\u4e86 `kubectl` \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4e26\u4e14\u53ef\u4ee5\u4fee\u6539\u60a8\u6309\u7167 Google \u63a8\u85a6\u7684\u505a\u6cd5\u5275\u5efa\u7684\u8cc7\u6e90\u3002\n\u5982\u679c\u60a8\u4f7f\u7528 `gke-deploy` \u5b50\u547d\u4ee4 `prepare` \u6216 `run` \uff0c `gke-deploy` \u6703\u9ed8\u8a8d\u5c07\u60a8\u7684\u6620\u50cf\u6a19\u8a18\u89e3\u6790\u7232\u6458\u8981\u4e26\u4f7f\u7528\u6620\u50cf\u6458\u8981\u5c07\u5c55\u958b\u5f8c\u7684\u6e05\u55ae\u4fdd\u5b58\u5230\u6587\u4ef6 `output/expanded/aggregated-resources.yaml` \u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528 `gke-deploy run` \u5c07\u6620\u50cf\u6a19\u8a18\u66ff\u63db\u7232\u6458\u8981\uff0c\u4e26\u5c07\u5c55\u958b\u7684\u6e05\u55ae\u61c9\u7528\u65bc GKE \u96c6\u7fa3\u3002\u96d6\u7136\u6b64\u547d\u4ee4\u4f7f\u7528\u65b9\u4fbf\uff0c\u4f46\u5b58\u5728\u4e00\u500b\u7f3a\u9ede\uff1a\u6620\u50cf\u6a19\u8a18\u6703\u5728\u90e8\u7f72\u6642\u88ab\u66ff\u63db\u3002\u8207\u6a19\u8a18\u95dc\u806f\u7684\u6620\u50cf\u53ef\u80fd\u6703\u5728\u60a8\u6c7a\u5b9a\u90e8\u7f72\u8207\u90e8\u7f72\u4e4b\u9593\u767c\u751f\u66f4\u6539\uff0c\u5c0e\u81f4\u90e8\u7f72\u7570\u5e38\u6620\u50cf\u3002\u5c0d\u65bc\u751f\u7522\u90e8\u7f72\uff0c\u6211\u5011\u5efa\u8b70\u5c07\u751f\u6210\u548c\u61c9\u7528\u6e05\u55ae\u6b65\u9a5f\u5206\u958b\u57f7\u884c\u3002\n\u5982\u9700\u4f7f\u7528\u6620\u50cf\u6458\u8981\u66ff\u63db Kubernetes \u90e8\u7f72\u6e05\u55ae\u4e2d\u7684\u6620\u50cf\u6a19\u8a18\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u5728 Cloud Shell \u4e2d\uff0c\u5275\u5efa\u4e26\u8f49\u5230\u7528\u65bc\u5b58\u5132\u60a8\u5728\u672c\u90e8\u5206\u5275\u5efa\u7684\u6587\u4ef6\u7684\u76ee\u9304\uff1a```\nmkdir -p ~/container-image-digests-tutorial/gke-deploycd ~/container-image-digests-tutorial/gke-deploy\n```\n- \u5b89\u88dd `gke-deploy` \uff1a```\ngo install github.com/GoogleCloudPlatform/cloud-builders/gke-deploy@latest\n```\n- \u4f7f\u7528\u6a19\u8a18 `1.10` \u5275\u5efa\u5f15\u7528\u6620\u50cf `gcr.io/google-containers/echoserver` \u7684 Kubernetes Deployment \u6e05\u55ae\uff1a```\ncat << EOF > deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n name: echo-deployment\nspec:\n selector:\n matchLabels:\n  app: echo\n template:\n metadata:\n  labels:\n  app: echo\n spec:\n  containers:\n  - name: echoserver\n  image: gcr.io/google-containers/echoserver:1.10\n  ports:\n  - containerPort: 8080\nEOF\n```\n- \u6839\u64da `deployment.yaml` \u6e05\u55ae\u751f\u6210\u5c55\u958b\u7684\u6e05\u55ae\uff1a```\ngke-deploy prepare \\\u00a0 \u00a0 --filename deployment.yaml \\\u00a0 \u00a0 --image gcr.io/google-containers/echoserver:1.10 \\\u00a0 \u00a0 --version 1.10\n```\n- \u67e5\u770b\u5c55\u958b\u7684\u6e05\u55ae\uff1a```\ncat output/expanded/aggregated-resources.yaml\n```\u8f38\u51fa\u5982\u4e0b\u6240\u793a\uff1a```\napiVersion: apps/v1kind: Deploymentmetadata:\u00a0 labels:\u00a0 \u00a0 app.kubernetes.io/managed-by: gcp-cloud-build-deploy\u00a0 \u00a0 app.kubernetes.io/version: \"1.10\"\u00a0 name: echo-deployment\u00a0 namespace: defaultspec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app: echo\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 app: echo\u00a0 \u00a0 \u00a0 \u00a0 app.kubernetes.io/managed-by: gcp-cloud-build-deploy\u00a0 \u00a0 \u00a0 \u00a0 app.kubernetes.io/version: \"1.10\"\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - image: gcr.io/google-containers/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229\u00a0 \u00a0 \u00a0 \u00a0 name: echoserver\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 8080\n```\u5728\u5c55\u958b\u7684\u6e05\u55ae\u4e2d\uff0c\u6620\u50cf\u6a19\u8a18\u6703\u88ab\u66ff\u63db\u7232\u6458\u8981\u3002\u8207 `gke-deploy` \u547d\u4ee4\u7d50\u5408\u4f7f\u7528\u7684 `--version` \u53c3\u6578\u6703\u8a2d\u7f6e\u90e8\u7f72\u4e2d [app.kubernetes.io/version \u6a19\u7c64](https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels/) \u7684\u503c\u4ee5\u53ca\u64f4\u5c55\u6e05\u55ae\u7684 Pod \u6a21\u677f\u5143\u6578\u64da\u3002\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5c07 `gke-deploy` \u8207 Cloud Build \u7d50\u5408\u4f7f\u7528\uff0c\u8acb\u53c3\u95b1 [gke-deploy \u7684 Cloud Build \u6587\u6a94](https://cloud.google.com/build/docs/deploying-builds/deploy-gke?hl=zh-cn) \u3002\n## \u4f7f\u7528 ko [ko](https://ko.build/) \u662f\u4e00\u7a2e\u547d\u4ee4\u884c\u5de5\u5177\u548c\u5eab\uff0c\u7528\u65bc\u69cb\u5efa [Go](https://golang.org/) \u5bb9\u5668\u6620\u50cf\u4e26\u5c07\u5176\u90e8\u7f72\u5230 Kubernetes \u96c6\u7fa3\u3002 `ko` \u53ef\u4ee5\u5728\u4e0d\u4f7f\u7528 Docker \u5b88\u8b77\u7a0b\u5e8f\u7684\u60c5\u6cc1\u4e0b\u69cb\u5efa\u6620\u50cf\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u5728\u7121\u6cd5\u5b89\u88dd Docker \u7684\u74b0\u5883\u4e2d\u4f7f\u7528\u6620\u50cf\u3002\n`ko` \u5b50\u547d\u4ee4 [build](https://ko.build/reference/ko_build/) \u6703\u69cb\u5efa\u6620\u50cf\u4e26\u5c07\u5176\u767c\u4f48\u5230\u5bb9\u5668\u6620\u50cf\u8a3b\u518a\u8868\u6216\u5c07\u5176\u52a0\u8f09\u5230\u672c\u5730 Docker \u5b88\u8b77\u7a0b\u5e8f\u3002\n`ko` \u5b50\u547d\u4ee4 [resolve](https://ko.build/reference/ko_resolve/) \u6703\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u901a\u904e\u5728 Kubernetes \u6e05\u55ae\u7684`image`\u5b57\u6bb5\u4e2d\u67e5\u627e\u60a8\u4f7f\u7528`--filename`\u53c3\u6578\u63d0\u4f9b\u7684\u4f54\u4f4d\u7b26\u4f86\u627e\u5230\u8981\u69cb\u5efa\u7684\u6620\u50cf\u3002\n- \u69cb\u5efa\u548c\u767c\u4f48\u6620\u50cf\u3002\n- \u5c07`image`\u503c\u4f54\u4f4d\u7b26\u66ff\u63db\u7232\u6240\u69cb\u5efa\u6620\u50cf\u7684\u540d\u7a31\u548c\u6458\u8981\u3002\n- \u8f38\u51fa\u5c55\u958b\u7684\u6e05\u55ae\u3002\n`ko` \u5b50\u547d\u4ee4 [apply](https://ko.build/reference/ko_apply/) \u3001 [create](https://ko.build/reference/ko_create/) \u548c [run](https://ko.build/reference/ko_run/) \u6703\u57f7\u884c\u8207 `resolve` \u76f8\u540c\u7684\u6b65\u9a5f\uff0c\u7136\u5f8c\u4f7f\u7528\u5c55\u958b\u7684\u6e05\u55ae\u57f7\u884c `kubectl apply` \u3001 `create` \u6216 `run` \u3002\n\u5982\u9700\u901a\u904e Go \u6e90\u4ee3\u78bc\u69cb\u5efa\u6620\u50cf\uff0c\u4e26\u5c07\u6620\u50cf\u6458\u8981\u6dfb\u52a0\u5230 Kubernetes \u90e8\u7f72\u6e05\u55ae\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u5728 Cloud Shell \u4e2d\uff0c\u5275\u5efa\u4e26\u8f49\u5230\u7528\u65bc\u5b58\u5132\u60a8\u5728\u672c\u90e8\u5206\u5275\u5efa\u7684\u6587\u4ef6\u7684\u76ee\u9304\uff1a```\nmkdir -p ~/container-image-digests-tutorial/kocd ~/container-image-digests-tutorial/ko\n```\n- \u4e0b\u8f09 `ko` \u4e26\u5c07\u5176\u6dfb\u52a0\u5230\u60a8\u7684 `PATH` \uff1a```\nmkdir -p ${HOME}/binexport PATH=${HOME}/bin:${PATH}KO_VERSION=$(curl -sL https://api.github.com/repos/ko-build/ko/releases/latest | jq -r .tag_name | cut -c2-)curl -L \"https://github.com/ko-build/ko/releases/download/v${KO_VERSION}/ko_${KO_VERSION}_$(uname -s)_$(uname -m).tar.gz\" | tar -zxC ${HOME}/bin ko\n```\n- \u5728\u540d\u7232 `app` \u7684\u65b0\u76ee\u9304\u4e2d\u5275\u5efa\u6a21\u584a\u540d\u7a31\u7232 `example.com/hello-world` \u7684 Go \u61c9\u7528\uff1a```\nmkdir -p app/cmd/ko-examplecd appgo mod init example.com/hello-worldcat << EOF > cmd/ko-example/main.gopackage mainimport \"fmt\"func main() {\u00a0 \u00a0 fmt.Println(\"hello world\")}EOF\n```\n- \u5b9a\u7fa9 `ko` \u7528\u65bc\u767c\u4f48\u6620\u50cf\u7684\u6620\u50cf\u4ee3\u78bc\u5eab\uff1a```\nexport KO_DOCKER_REPO=LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY\n```\u6b64\u793a\u4f8b\u4f7f\u7528 Artifact Registry\uff0c\u4f46\u60a8\u53ef\u4ee5\u5c07 `ko` \u8207\u5176\u4ed6\u5bb9\u5668\u6620\u50cf\u8a3b\u518a\u8868\u7d50\u5408\u4f7f\u7528\u3002\n- \u5982\u9700\u7232\u60a8\u7684\u61c9\u7528\u69cb\u5efa\u548c\u767c\u4f48\u6620\u50cf\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u6b65\u9a5f\u4e4b\u4e00\uff1a- \u901a\u904e\u63d0\u4f9b Go [\u4e3b\u8edf\u4ef6\u5305](https://golang.org/ref/spec#Program_execution) \u7684\u8def\u5f91\uff0c\u7232\u61c9\u7528\u69cb\u5efa\u4f75\u767c\u5e03\u6620\u50cf\uff1a```\nko build --base-import-paths ./cmd/ko-example\n```\u53ef\u9078\u53c3\u6578 `--base-import-paths` \u8868\u793a `ko` \u4f7f\u7528\u4e3b\u8edf\u4ef6\u5305\u76ee\u9304\u7684\u77ed\u540d\u7a31\u4f5c\u7232\u6620\u50cf\u540d\u7a31\u3002`ko` \u63a1\u7528\u4ee5\u4e0b\u683c\u5f0f\u5c07\u6620\u50cf\u540d\u7a31\u548c\u6458\u8981\u8f38\u51fa\u5230 `stdout` \uff1a```\nLOCATION-docker.pkg.dev/PROJECT_ID/ko-example@sha256:DIGEST\n```\u5728\u6b64\u8f38\u51fa\u4e2d\uff0c `` \u662f\u6620\u50cf\u6458\u8981\u503c\u3002 **\u6ce8\u610f** \uff1a\u6240\u6709\u5176\u4ed6`ko`\u8f38\u51fa\u6703\u8f49\u5230`stderr`\u3002\u5982\u679c\u60a8\u8981\u6355\u7372\u6620\u50cf\u540d\u7a31\u548c\u6458\u8981\uff0c\u5247\u53ef\u4ee5\u5728\u74b0\u5883\u8b8a\u91cf\u4e2d\u6355\u7372`stdout`\uff1a```\nIMAGE_AND_DIGEST=$(ko build --base-import-paths ./cmd/ko-example)\n```\n- \u4f7f\u7528 `ko` \u5c07\u6e05\u55ae\u4f54\u4f4d\u7b26\u66ff\u63db\u7232\u5176\u69cb\u5efa\u4f75\u767c\u5e03\u7684\u6620\u50cf\u7684\u540d\u7a31\u548c\u6458\u8981\uff1a- \u5275\u5efa Kubernetes pod \u6e05\u55ae\u3002\u6e05\u55ae\u4f7f\u7528\u4f54\u4f4d\u7b26 `ko://` `` \u4f5c\u7232 `image` \u5b57\u6bb5\u7684\u503c\uff1a```\ncat << EOF > ko-pod.yamlapiVersion: v1kind: Podmetadata:\u00a0 name: ko-examplespec:\u00a0 containers:\u00a0 - name: hello-world\u00a0 \u00a0 image: ko://example.com/hello-world/cmd/ko-exampleEOF\n```\n- \u7232\u61c9\u7528\u69cb\u5efa\u548c\u767c\u4f48\u6620\u50cf\uff0c\u4e26\u5c07\u6e05\u55ae\u4f54\u4f4d\u7b26\u66ff\u63db\u7232\u6620\u50cf\u540d\u7a31\u548c\u6458\u8981\uff1a```\nko resolve --base-import-paths --filename ko-pod.yaml\n````ko` \u6703\u5c07\u5305\u542b\u6620\u50cf\u540d\u7a31\u548c\u6e05\u55ae\u7684\u6458\u8981\u8f38\u51fa\u5230 `stdout` \uff1a```\napiVersion: v1kind: Podmetadata:\u00a0 name: ko-examplespec:\u00a0 containers:\u00a0 - name: hello-world\u00a0 \u00a0 image: LOCATION-docker.pkg.dev/PROJECT_ID/ko-example@sha256:DIGEST\n```\u5728\u6b64\u8f38\u51fa\u4e2d\uff0c `` \u662f\u6620\u50cf\u6458\u8981\u503c\u3002\n## \u6e05\u7406\u907f\u514d\u7522\u751f\u8cbb\u7528\u7684\u6700\u7c21\u55ae\u65b9\u6cd5\u662f\u522a\u9664\u60a8\u7232\u672c\u6559\u7a0b\u5275\u5efa\u7684 Google Cloud \u9805\u76ee\u3002\u6216\u8005\uff0c\u60a8\u4e5f\u53ef\u4ee5\u522a\u9664\u5404\u500b\u8cc7\u6e90\u3002\n### \u522a\u9664\u9805\u76ee- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- **\u8b66\u544a** \uff1a\u522a\u9664\u9805\u76ee\u6703\u7522\u751f\u4ee5\u4e0b\u5f71\u97ff- **\u9805\u76ee\u4e2d\u7684\u6240\u6709\u5167\u5bb9\u90fd\u6703\u88ab\u522a\u9664\u3002** \u5982\u679c\u60a8\u5c07\u73fe\u6709\u9805\u76ee\u7528\u65bc\u672c\u6587\u6a94\u4e2d\u7684\u4efb\u52d9\uff0c\u5247\u522a\u9664\u8a72\u9805\u76ee\u5f8c\uff0c\u9084\u5c07\u522a\u9664\u60a8\u5df2\u5728\u8a72\u9805\u76ee\u4e2d\u5b8c\u6210\u7684\u4efb\u4f55\u5176\u4ed6\u5de5\u4f5c\u3002\n- **\u81ea\u5b9a\u7fa9\u9805\u76ee ID \u4e1f\u5931\u3002** \u5275\u5efa\u6b64\u9805\u76ee\u6642\uff0c\u60a8\u53ef\u80fd\u5275\u5efa\u4e86\u8981\u5728\u5c07\u4f86\u4f7f\u7528\u7684\u81ea\u5b9a\u7fa9\u9805\u76ee ID\u3002\u8981\u4fdd\u7559\u4f7f\u7528\u8a72\u9805\u76ee ID \u7684\u7db2\u5740\uff08\u4f8b\u5982`appspot.com`\u7db2\u5740\uff09\uff0c\u8acb\u522a\u9664\u9805\u76ee\u5167\u7684\u6240\u9078\u8cc7\u6e90\uff0c\u800c\u4e0d\u662f\u522a\u9664\u6574\u500b\u9805\u76ee\u3002\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u9032\u5165 **\u7ba1\u7406\u8cc7\u6e90** \u9801\u9762\u3002 [\u8f49\u5230\u201c\u7ba1\u7406\u8cc7\u6e90\u201d](https://console.cloud.google.com/iam-admin/projects?hl=zh-cn) \n- \u5728\u9805\u76ee\u5217\u8868\u4e2d\uff0c\u9078\u64c7\u8981\u522a\u9664\u7684\u9805\u76ee\uff0c\u7136\u5f8c\u9ede\u64ca **\u522a\u9664** \u3002\n- \u5728\u5c0d\u8a71\u6846\u4e2d\u8f38\u5165\u9805\u76ee ID\uff0c\u7136\u5f8c\u9ede\u64ca **\u95dc\u9589** \u4ee5\u522a\u9664\u9805\u76ee\u3002\n### \u522a\u9664\u8cc7\u6e90\u5982\u679c\u60a8\u5e0c\u671b\u4fdd\u7559\u5728\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684 Google Cloud \u9805\u76ee\uff0c\u8acb\u522a\u9664\u55ae\u500b\u8cc7\u6e90\uff1a- \u5728 Cloud Shell \u4e2d\uff0c\u522a\u9664\u60a8\u5728\u672c\u6559\u7a0b\u4e2d\u5275\u5efa\u7684\u6587\u4ef6\uff1a```\ncdrm -rf ~/container-image-digests-tutorial\n```\n- \u522a\u9664 Artifact Registry \u4e2d\u7684\u5bb9\u5668\u6620\u50cf\u88fd\u54c1\u5eab\uff1a```\ngcloud artifacts repositories delete REPOSITORY \\\u00a0 \u00a0 --location=LOCATION --async --quiet\n```\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u8a73\u7d30\u77ad\u89e3 [\u5bb9\u5668\u6620\u50cf\u6458\u8981](https://cloud.google.com/architecture/using-container-images?hl=zh-cn) \u3002\n- \u8a73\u7d30\u77ad\u89e3 [digester \u5ba2\u6236\u7aef KRM \u51fd\u6578\u548c Kubernetes \u53ef\u8b8a\u7db2\u7d61\u9264\u5b50](https://github.com/google/k8s-digester) \u3002\n- \u63a2\u7d22 [\u4f7f\u7528 Cloud Build \u5be6\u73fe GitOps \u5f62\u5f0f\u7684\u6301\u7e8c\u4ea4\u4ed8](https://cloud.google.com/kubernetes-engine/docs/tutorials/gitops-cloud-build?hl=zh-cn) \u3002\n- \u77ad\u89e3 [\u69cb\u5efa\u5bb9\u5668](https://cloud.google.com/architecture/best-practices-for-building-containers?hl=zh-cn) \u7684\u6700\u4f73\u505a\u6cd5\u3002\n- \u77ad\u89e3 [\u64cd\u4f5c\u5bb9\u5668](https://cloud.google.com/architecture/best-practices-for-operating-containers?hl=zh-cn) \u7684\u6700\u4f73\u505a\u6cd5\u3002", "guide": "Google Kubernetes Engine (GKE)"}