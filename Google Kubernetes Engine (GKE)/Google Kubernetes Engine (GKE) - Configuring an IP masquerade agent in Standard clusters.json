{"title": "Google Kubernetes Engine (GKE) - Configuring an IP masquerade agent in Standard clusters", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent", "abstract": "# Google Kubernetes Engine (GKE) - Configuring an IP masquerade agent in Standard clusters\nThis page explains how to configure clusters created in Google Kubernetes Engine (GKE) Standard mode to perform [IP masquerade](/kubernetes-engine/docs/concepts/ip-masquerade-agent) with the `ip-masq-agent` . For more information about IP masquerading in GKE [Autopilot mode](/kubernetes-engine/docs/concepts/autopilot-overview) , see [Use Egress NAT Policy to configure IP masquerade in Autopilot clusters](/kubernetes-engine/docs/how-to/egress-nat-policy-ip-masq-autopilot) .\n", "content": "## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.## Checking ip-masq-agent status\nThis section shows you how to:\n- Determine whether your cluster has an`ip-masq-agent`DaemonSet.\n- Check the`ip-masq-agent` [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) resource.\n### Checking the ip-masq-agent DaemonSet\nTo check if your cluster is running the `ip-masq-agent` DaemonSet, use the Google Cloud CLI or the Google Cloud console.\n- Get the credentials for your cluster:```\ngcloud container clusters get-credentials CLUSTER_NAME\n```Replace `` with the name of your cluster.\n- Search for the `ip-masq-agent` in the `kube-system` namespace:```\nkubectl get daemonsets/ip-masq-agent -n kube-system\n```If the `ip-masq-agent` DaemonSet exists, then the output is similar to the following:```\nNAME   DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE\nip-masq-agent 3   3   3  3   3   <none>   13d\n```If the `ip-masq-agent` DaemonSet does not exist, then the output is similar to the following:```\nError from server (NotFound): daemonsets.apps \"ip-masq-agent\" not found\n```\n- Go to the **Workloads** page in the Google Cloud console. [Go to Workloads](https://console.cloud.google.com/kubernetes/workload) \n- For filter_list , do the following:- Clickcancelto clear the **Is system object: False** filter.\n- Filter the following properties:- **Name** :`ip-masq-agent`.\n- **Cluster** : the name of your cluster.If `ip-masq-agent` DaemonSet exists, then you can see the DaemonSet record in the table. If `ip-masq-agent` DaemonSet does not exist, then no rows are displayed.\nTo create the `ip-masq-agent` ConfigMap and deploy the `ip-masq-agent` DaemonSet, refer to [Configuring and deploying the ip-masq-agent](#config-ip-masq-agent) .\n### Checking the ip-masq-agent ConfigMap\nTo check if your cluster is running the `ip-masq-agent` ConfigMap, use the Google Cloud CLI or the Google Cloud console.\n- Get the credentials for your cluster:```\ngcloud container clusters get-credentials CLUSTER_NAME\n```Replace `` with the name of your cluster.\n- Describe the `ip-masq-agent` ConfigMap in the `kube-system` namespace:```\nkubectl describe configmaps/ip-masq-agent -n kube-system\n```If the `ip-masq-agent` ConfigMap exists, then the output is similar to the following:```\nName:   ip-masq-agent\nNamespace: kube-system\nLabels:  <none>\nAnnotations: <none>\nData\n====\nconfig:\n---nonMasqueradeCIDRs:\n - 198.15.5.92/24\n - 10.0.0.0/8\nmasqLinkLocal: false\nresyncInterval: 60s\nBinaryData\n====\nEvents: <none>\n```If the `ip-masq-agent` ConfigMap does not exist, then the output is similar to the following:```\nError from server (NotFound): configmaps \"ip-masq-agent\" not found\n```\n- Go to the **Configuration** page in the Google Cloud console. [Go to Configuration](https://console.cloud.google.com/kubernetes/config) \n- For filter_list , do the following:- Clickcancelto clear the **Is system object: False** filter.\n- Filter the following properties:- **Name** :`ip-masq-agent`.\n- **Cluster** : the name of your cluster.If `ip-masq-agent` ConfigMap exists, then you can see the ConfigMap record in the table. If `ip-masq-agent` ConfigMap does not exist, then no rows are displayed.\nIf the cluster already has the `ip-masq-agent` ConfigMap, you can configure and deploy it.\n## Configuring and deploying the ip-masq-agent\nThis section shows you how to create or edit the `ip-masq-agent` ConfigMap and how to deploy or delete the `ip-masq-agent` DaemonSet. To determine which tasks you need to perform, you must first [determine whether yourcluster already has the ip-masq-agent ConfigMap and ip-masq-agentDaemonSet](#check-ip-masq-agent) .\n### Creating the ip-masq-agent ConfigMap\nThe following steps show how to create the `ip-masq-agent` ConfigMap. If your cluster already has the `ip-masq-agent` ConfigMap, [edit an existingip-masq-agent ConfigMap instead](#edit-ip-masq-agent-configmap) .\n- Create a configuration file using the following template and save it locally. You can use any name for the local copy of this configuration file.```\nnonMasqueradeCIDRs:\u00a0 - CIDR_1\u00a0 - CIDR_2masqLinkLocal: falseresyncInterval: SYNC_INTERVALUNIT_OF_TIME\n```Replace the following:- `` and `` : the IP address ranges in [CIDRformat](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) . When packets are sent to these destinations, your cluster does not masquerade IP address sources and preserves source Pod IP addresses. If you need more than two CIDRs, add more entries to the `nonMasqueradeCIDRs` list following the same format. At minimum, the `nonMasqueradeCIDRs` property should include the node and Pod IP address ranges of your cluster.\n- `` : the amount of time after which each `ip-masq-agent` Pod checks the contents of the `ip-masq-agent` ConfigMap and writes any changes to its local `/etc/config/ip-masq-agent` file. Defaults to `60` .\n- `` : the unit of time for the resyncInterval. Valid values include `s` (for seconds) or `ms` (for milliseconds). Defaults to `s` .\nSet `masqLinkLocal` to false (the default) unless you need to enable masquerading for packets sent to link local IPv4 addresses. For more information, see [Masquerading to link-local destinations](/kubernetes-engine/docs/concepts/ip-masquerade-agent#masqLinkLocal) . **Caution:** A custom `nonMasqueradeCIDRs` must at least include the cluster's node and Pod IP address range(s). This is especially important if you enable [intranode visibility](/kubernetes-engine/docs/how-to/intranode-visibility) . If the Pod IP address range(s) are not present in `nonMasqueradeCIDRs` and you have intranode visibility turned on, Pods won't be able to properly communicate with each other.\n- Create the ConfigMap resource:```\nkubectl create configmap ip-masq-agent \\\u00a0 \u00a0--namespace=kube-system \\\u00a0 \u00a0--from-file=config=LOCAL_CONFIG_FILE_PATH\n```Replace `` with the path to the config file you created in the previous step. **Note:** The ConfigMap content must be associated with a named key that the `ip-masq-agent` DaemonSet expects when reading the `ip-masq-agent` ConfigMap to parse it as a volume. In the following example, and for standard `ip-masq-agent` DaemonSets, the key is `config` . Specifying `--from-file=config=` `` ensures that the IP masquerade configuration information is associated with the `config` key.\n- Describe the `ip-masq-agent` ConfigMap in the `kube-system` namespace:```\nkubectl describe configmaps/ip-masq-agent -n kube-system\n```The output is similar to the following:```\nName:   ip-masq-agent\nNamespace: kube-system\nLabels:  <none>\nAnnotations: <none>\nData\n====\nconfig:\n---nonMasqueradeCIDRs:\n - 198.15.5.92/24\n - 10.0.0.0/8\nmasqLinkLocal: false\nresyncInterval: 60s\nBinaryData\n====\nEvents: <none>\n```This output includes the `config` parameter with your configuration changes. You can now [deploy the ip-masq-agent DeamonSet](#deploy-ip-masq-agent-deamonset) .\n### Editing an existing ip-masq-agent ConfigMap\nYou can modify the contents of an existing `ip-masq-agent` ConfigMap by completing the following steps:\n- Open the ConfigMap in a text editor:```\nkubectl edit configmap ip-masq-agent --namespace=kube-system\n```\n- Edit the content of the ConfigMap file:```\napiVersion: v1data:\u00a0 config: |\u00a0 \u00a0 nonMasqueradeCIDRs:\u00a0 \u00a0 \u00a0 - CIDR_1\u00a0 \u00a0 \u00a0 - CIDR_2\u00a0 \u00a0 masqLinkLocal: false\u00a0 \u00a0 resyncInterval: SYNC_INTERVALUNIT_OF_TIMEkind: ConfigMapmetadata:\u00a0 name: ip-masq-agent\u00a0 namespace: kube-system\n```Replace the following:- `` and `` : the IP address ranges in [CIDRformat](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) . When packets are sent to these destinations, your cluster does not masquerade IP address sources and preserves source Pod IP addresses. If you need more than two CIDRs, add more entries to the `nonMasqueradeCIDRs` list following the same format. At minimum, the `nonMasqueradeCIDRs` property should include the node and Pod IP address ranges of your cluster.\n- `` : the amount of time after which each `ip-masq-agent` Pod checks the contents of the `ip-masq-agent` ConfigMap and writes any changes to its local `/etc/config/ip-masq-agent` file. Defaults to `60` .\n- `` : the unit of time for the resyncInterval. Valid values include `s` (for seconds) or `ms` (for milliseconds). Defaults to `s` .\nSet `masqLinkLocal` to false (the default) unless you need to enable masquerading for packets sent to link local IPv4 addresses. For more information, see [Masquerading to link-local destinations](/kubernetes-engine/docs/concepts/ip-masquerade-agent#masqLinkLocal) . **Caution:** A custom `nonMasqueradeCIDRs` must at least include the cluster's node and Pod IP address range(s). This is especially important if you enable [intranode visibility](/kubernetes-engine/docs/how-to/intranode-visibility) . If the Pod IP address range(s) are not present in `nonMasqueradeCIDRs` and you have intranode visibility turned on, Pods won't be able to properly communicate with each other.\n- Describe the `ip-masq-agent` ConfigMap in the `kube-system` namespace:```\nkubectl describe configmaps/ip-masq-agent -n kube-system\n```The output is similar to the following:```\nName:   ip-masq-agent\nNamespace: kube-system\nLabels:  <none>\nAnnotations: <none>\nData\n====\nconfig:\n---nonMasqueradeCIDRs:\n - 198.15.5.92/24\n - 10.0.0.0/8\nmasqLinkLocal: false\nresyncInterval: 60s\nBinaryData\n====\nEvents: <none>\n```This output includes the `config` parameter which matches the configuration value from the file you created.\n### Deploying the ip-masq-agent DaemonSet\nAfter you create or edit your `ip-masq-agent` ConfigMap, deploy the `ip-masq-agent` DaemonSet.\n- Save the following manifest as a YAML file:```\napiVersion: apps/v1kind: DaemonSetmetadata:\u00a0 name: ip-masq-agent\u00a0 namespace: kube-systemspec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 k8s-app: ip-masq-agent\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 k8s-app: ip-masq-agent\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 hostNetwork: true\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: ip-masq-agent\u00a0 \u00a0 \u00a0 \u00a0 image: gke.gcr.io/ip-masq-agent:v2.9.3-gke.5@sha256:c75a164d6011c7da7084da0fddfc7419914025e092741c3c230cec1589a1a06b\u00a0 \u00a0 \u00a0 \u00a0 args:\u00a0 \u00a0 \u00a0 \u00a0 # The masq-chain must be IP-MASQ\u00a0 \u00a0 \u00a0 \u00a0 - --masq-chain=IP-MASQ\u00a0 \u00a0 \u00a0 \u00a0 # To non-masquerade reserved IP ranges by default,\u00a0 \u00a0 \u00a0 \u00a0 # uncomment the following line.\u00a0 \u00a0 \u00a0 \u00a0 # - --nomasq-all-reserved-ranges\u00a0 \u00a0 \u00a0 \u00a0 securityContext:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 privileged: true\u00a0 \u00a0 \u00a0 \u00a0 volumeMounts:\u00a0 \u00a0 \u00a0 \u00a0 - name: config-volume\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mountPath: /etc/config\u00a0 \u00a0 \u00a0 volumes:\u00a0 \u00a0 \u00a0 - name: config-volume\u00a0 \u00a0 \u00a0 \u00a0 configMap:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: ip-masq-agent\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 optional: true\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 items:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - key: config\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: ip-masq-agent\u00a0 \u00a0 \u00a0 tolerations:\u00a0 \u00a0 \u00a0 - effect: NoSchedule\u00a0 \u00a0 \u00a0 \u00a0 operator: Exists\u00a0 \u00a0 \u00a0 - effect: NoExecute\u00a0 \u00a0 \u00a0 \u00a0 operator: Exists\u00a0 \u00a0 \u00a0 - key: \"CriticalAddonsOnly\"\u00a0 \u00a0 \u00a0 \u00a0 operator: \"Exists\"\n```This manifest creates a volume named `config-volume` which is mounted as specified by the container's volumeMount.If you need to edit this manifest, consider the following conditions:- The volume name can be anything but must match the container's `volumeMount` name.\n- The ConfigMap name must match the name of the `configMap` referenced in the `config-volume` Volume in the Pod.\n- The name of the chain ( `--masq-chain` ) must be `IP-MASQ` . Otherwise, GKE does not override the default masquerading rules.\n- DaemonSet Pods read from the `ip-masq-agent` file. The `ip-masq-agent` file content is the value of the `config` key in the ConfigMap.\n- If you use non-masquerade reserved IP ranges by default, uncomment the `- --nomasq-all-reserved-ranges` line in the `arg` section.\n- Deploy the DaemonSet:```\nkubectl apply -f LOCAL_FILE_PATH\n```Replace `` with the path to the file you created in the previous step.\nYou can manually update the `ip-masq-agent` DaemonSet you created. To learn more, see [Updating a DaemonSet](https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/#updating-a-daemonset) .\n## Deleting the ip-masq-agent\nThis section shows you how to delete the `ip-masq-agent` DaemonSet and the `ip-masq-agent` ConfigMap.\n### Deleting the ip-masq-agent DaemonSet\nIf you manually created the `ip-masq-agent` DaemonSet, you can delete it by running the following command:\n```\nkubectl delete daemonsets ip-masq-agent -n kube-system\n```\n**Note:** If the `ip-masq-agent` DaemonSet was deployed automatically, GKE will automatically recreate it.\n### Deleting the ip-masq-agent ConfigMap\nTo completely delete the `ip-masq-agent` ConfigMap, run the following command:\n```\nkubectl delete configmap ip-masq-agent -n kube-system\n```\n## Troubleshooting\nThe following steps provide troubleshooting information:\n- [Confirm the status of the ip-masq-agent](#check-ip-masq-agent) . If the ConfigMap is not defined, traffic to all default destinations is [not masqueraded](/kubernetes-engine/docs/concepts/ip-masquerade-agent#how_ipmasq_works) and preserves the Pod IP address. Traffic to other destinations preserves the node IP address.\n- Check whether the IP-MASQ chain is correctly populated in the NAT IP tables by running the`sudo iptables -t nat -L IP-MASQ`command in the impacted node. If the`nonMasqueradeCIDRs`defined in the ConfigMap is not showing up on the NAT IP Tables, verify that there are no typos in the config file that was used to create the ConfigMap.\n- Confirm that the destination the Pod is trying to reach is included in the`nonMasqueradeCIDRs`in the ConfigMap. If the destination is not in the`nonMasqueradeCIDRs`, traffic preserves the node IP address.\n- Confirm that the destination allows both the node and Pod IP address ranges.\n- If traffic is not accessible from the node or Pod, [run a connectivity test](/network-intelligence-center/docs/connectivity-tests/how-to/running-connectivity-tests) .## What's next\n- [Learn about Alias IPs](/kubernetes-engine/docs/how-to/alias-ips) .\n- [Read the GKE network overview](/kubernetes-engine/docs/concepts/network-overview) .\n- [Learn about configuring authorized networks](/kubernetes-engine/docs/how-to/authorized-networks) .", "guide": "Google Kubernetes Engine (GKE)"}