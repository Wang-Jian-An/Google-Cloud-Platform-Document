{"title": "Google Kubernetes Engine (GKE) - Using volume expansion", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/volume-expansion", "abstract": "# Google Kubernetes Engine (GKE) - Using volume expansion\nIn Google Kubernetes Engine (GKE) version 1.24 or later, you can use the Kubernetes volume expansion feature to change a persistent volume's capacity after its creation.\nFor more information on volume expansion, see the open source [Kubernetes documentation](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#expanding-persistent-volumes-claims) .\n", "content": "## Prerequisites\nVolume expansion has the following prerequisites:\n- If the volume you want to resize is managed by a CSI Driver:- Ensure the GKE cluster version is 1.16 or later. If the cluster has Windows node pools, ensure the GKE cluster version is 1.18 or later. If you are using the managed [GKE Filestore CSI driver](/kubernetes-engine/docs/how-to/persistent-volumes/filestore-csi-driver) , the cluster version must be 1.21 or later.\n- Check your storage vendor's documentation to verify your CSI driver supports volume expansion. The Compute Engine Persistent Disk CSI driver and the Filestore CSI driver support volume expansion.\n- If the volume you want to resize is managed by an in-tree volume plugin:- Ensure the GKE cluster version is 1.11 or greater. While GKE cluster versions 1.11-1.14 support expansion of volumes managed by in-tree plugins, they require all Pods using the volume to be terminated and recreated to complete volume expansion.\n- Check your storage vendor's documentation to verify your in-tree volume plugin supports volume expansion (the Compute Engine Persistent Disk in-tree plugin does).\n## Using volume expansion\nTo use volume expansion, perform the following tasks:\n- Add `allowVolumeExpansion: true` to your StorageClass, if your StorageClass doesn't already have the field. For example:```\napiVersion: storage.k8s.io/v1kind: StorageClassmetadata:\u00a0 name: standardprovisioner: my.driver...allowVolumeExpansion: true\n```\n- Request a change in volume capacity by editing your PersistentVolumeClaim's `spec.resources.requests.storage` field.```\n\u00a0kubectl edit pvc pvc-name\n```For example, you could change the following PVC from having a 30 gibibyte (GiB) disk to having a 40 GiB disk.Before editing:```\n\u00a0# pvc-demo.yaml\u00a0apiVersion: v1\u00a0kind: PersistentVolumeClaim\u00a0metadata:\u00a0 \u00a0name: pvc-demo\u00a0spec:\u00a0 \u00a0accessModes:\u00a0 \u00a0 \u00a0- ReadWriteOnce\u00a0 \u00a0resources:\u00a0 \u00a0 \u00a0requests:\u00a0 \u00a0 \u00a0 \u00a0storage: 30Gi\n```After editing:```\n\u00a0# pvc-demo.yaml\u00a0apiVersion: v1\u00a0kind: PersistentVolumeClaim\u00a0metadata:\u00a0 \u00a0name: pvc-demo\u00a0spec:\u00a0 \u00a0accessModes:\u00a0 \u00a0 \u00a0- ReadWriteOnce\u00a0 \u00a0resources:\u00a0 \u00a0 \u00a0requests:\u00a0 \u00a0 \u00a0 \u00a0storage: 40Gi\n```\n- Verify the change by viewing PVC. To view your PVC, run the following command:```\nkubectl get pvc pvc-name -o yaml\n```Eventually, you should see the new volume in the `status.capacity` field. For example:```\n...spec:\u00a0 accessModes:\u00a0 - ReadWriteOnce\u00a0 resources:\u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 storage: 40Gi\u00a0 storageClassName: standard\u00a0 volumeMode: Filesystem\u00a0 volumeName: pvc-078b7484-cc8d-4077-9bcb-2c17d8d4550cstatus:\u00a0 accessModes:\u00a0 - ReadWriteOnce\u00a0 capacity:\u00a0 \u00a0 storage: 40Gi...\n```\n**Note:** Don't edit the capacity of the PersistentVolume object directly. If you edit the capacity of a PersistentVolume, and then change the size of the corresponding PersistentVolumeClaim to the same value, volume expansion won't happen. Kubernetes will assume that the backing volume was manually resized, and that no expansion is required.\nIf the capacity of a PersistentVolume is modified directly, this could lead the container file system to be incorrect. To fix these issues, see [troubleshoot volume expansion changes](/kubernetes-engine/docs/troubleshooting/troubleshooting-gke-storage#volume_expansion_changes_not_reflecting_in_the_container_filesystem) .\n## What's next\n- Learn more about [volumes](https://kubernetes.io/docs/concepts/storage/volumes/) .\n- Learn more about [Resizing Persistent Volumes using Kubernetes](https://kubernetes.io/blog/2018/07/12/resizing-persistent-volumes-using-kubernetes/) .", "guide": "Google Kubernetes Engine (GKE)"}