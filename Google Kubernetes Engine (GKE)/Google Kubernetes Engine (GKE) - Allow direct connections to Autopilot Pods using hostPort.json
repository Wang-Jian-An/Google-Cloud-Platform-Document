{"title": "Google Kubernetes Engine (GKE) - Allow direct connections to Autopilot Pods using hostPort", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/autopilot-hostport", "abstract": "# Google Kubernetes Engine (GKE) - Allow direct connections to Autopilot Pods using hostPort\nThis page shows you how to expose a random port in a Pod running in a Google Kubernetes Engine (GKE) Autopilot cluster.\nExposing a port in a Pod lets the Pod accept incoming connections directly, without a load balancer. GKE chooses a random port to open from a range that you specify in the Pod specification. This type of random port exposure is useful when your workload requires direct incoming connections but doesn't rely on a persistent port number. An example of this type of workload is an [Agones GameServer resource](https://agones.dev/site/docs/reference/gameserver/) with the default `Dynamic` port policy.\nWhen you request a random port, GKE overrides the value in the `hostPort` field in the container specification to the port that GKE selected for you.\n", "content": "## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.\n- Ensure that you have a [GKE Autopilot cluster](/kubernetes-engine/docs/how-to/creating-an-autopilot-cluster) running version 1.24.7-gke.1200 and later or 1.25.3-gke.1100 and later.\n### Limitations\nYou can only assign random hostPorts for static Pods or for Pods that are managed by a custom controller, such as Agones. This functionality isn't supported on [Kubernetes managed controllers](https://kubernetes.io/docs/concepts/workloads/controllers/) such as Deployments.\n## Request a random port\n- Save the following manifest as `host-port-pod.yaml` :```\napiVersion: v1kind: Podmetadata:\u00a0 name: game-pod\u00a0 annotations:\u00a0 \u00a0 autopilot.gke.io/host-port-assignment: '{\"min\":MIN_PORT,\"max\":MAX_PORT}'spec:\u00a0 containers:\u00a0 - name: local-chat\u00a0 \u00a0 image: ubuntu\u00a0 \u00a0 ports:\u00a0 \u00a0 - containerPort: 80\u00a0 \u00a0 \u00a0 hostPort: HOST_PORT1\u00a0 \u00a0 \u00a0 protocol: tcp\u00a0 - name: game-server\u00a0 \u00a0 image: ubuntu\u00a0 \u00a0 ports:\u00a0 \u00a0 - containerPort: 80\u00a0 \u00a0 \u00a0 hostPort: HOST_PORT2\u00a0 \u00a0 \u00a0 protocol: udp\n```Replace the following:- ``: the minimum port number for the range from which GKE chooses a random port.\n- ``: the maximum port number for the range from which GKE chooses a random port.\n- `` `,` ``: any valid port number. When the Pod is scheduled, GKE updates this field with the randomly assigned port. If you have multiple containers, use different port numbers for each container.\nThe port range (the difference between `` and `` ) must be at least 1000 ports.\n- Apply the manifest:```\nkubectl apply -f host-port-pod.yaml\n```\nWhen you apply the manifest, GKE selects a random port from your range and assigns the port to your container. If GKE assigns the same port value to two Pods, GKE automatically places the Pods on separate nodes to avoid port conflict.\n## Check the assigned port\nTo find the port number that GKE assigned to your containers, inspect the Pod:\n```\nkubectl get pod game-pod --output=yaml\n```\nThe output is similar to the following:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n annotations:\n autopilot.gke.io/host-port-assignment: '{\"min\":MIN_PORT,\"max\":MAX_PORT,\"portsAssigned\":{\"HOST_PORT1\":7300,\"HOST_PORT2\":7450}}'\n name: game-pod\n namespace: default\nspec:\n containers:\n - name: local-chat\n image: ubuntu\n imagePullPolicy: IfNotPresent\n ports:\n - containerPort: 80\n  hostPort: 7300\n  protocol: TCP\n - name: game-server\n image: ubuntu\n imagePullPolicy: IfNotPresent\n ports:\n - containerPort: 80\n  hostPort: 7450\n  protocol: UDP\n```\nIn this output:\n- `metadata.annotations.autopilot.gke.io/host-port-assignment`: the port assignments, showing the original value for`hostPort`that you set for each container and the updated value for`hostPort`that GKE assigned. This field is useful if you requested multiple ports in your Pod specification.\n- `spec.containers.ports.hostPort`: the opened port that GKE assigned to each container.## What's next\n[Track Agones support on Autopilot on GitHub](https://github.com/googleforgames/agones/issues/2777) .", "guide": "Google Kubernetes Engine (GKE)"}