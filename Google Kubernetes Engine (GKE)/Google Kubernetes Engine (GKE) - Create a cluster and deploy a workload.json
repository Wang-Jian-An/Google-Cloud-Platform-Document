{"title": "Google Kubernetes Engine (GKE) - Create a cluster and deploy a workload", "url": "https://cloud.google.com/kubernetes-engine/docs/quickstarts/create-cluster", "abstract": "# Google Kubernetes Engine (GKE) - Create a cluster and deploy a workload\n# Create a cluster and deploy a workloadLearn how to get started with Google Kubernetes Engine by creating a Kubernetes cluster and deploying a workload to the cluster.\nA Kubernetes provides compute, storage, networking, and other services for applications, similar to a virtual data center. Apps and their associated services that are running in Kubernetes are called .To follow step-by-step guidance for this task directly in the Google Cloud console, click **Guide me** :\n [Guide me](https://console.cloud.google.com/kubernetes/list/overview?walkthrough_id=kubernetes--create-cluster) ", "content": "## Before you begin\nTake the following steps to enable the Kubernetes Engine API:\n- Visit the [ Kubernetes Engine page](https://console.cloud.google.com/projectselector/kubernetes) in the Google Cloud console.\n- Create or select a project.\n- Wait for the API and related services to be enabled.  This can take several minutes.\n- [Make sure that billing is enabled for your Google Cloud project](/billing/docs/how-to/verify-billing-enabled#console) .\n## Create a cluster in GKE Autopilot modeIn Autopilot mode, Google manages your cluster configuration, including scaling, security, and other preconfigured settings. Clusters in Autopilot mode are optimized to run most production workloads and provision compute resources based on your Kubernetes manifests.- In the Google Cloud console, go to the GKE **Clusters** page. [Go to Clusters](https://console.cloud.google.com/kubernetes/list/overview) \n- Click **Create** .\n- Under **Cluster basics** , do the following:- In the **Name** field, enter the following name:```\nhello-world-cluster\n```\n- Keep the default values for the rest of the settings and click to start creating the cluster.\n- When you're redirected back to the **Kubernetes clusters** page, click **hello-world-cluster** in the **Name** column.You can watch the progress of your cluster as it is being configured, deployed, and verified.\n- Wait until you see a check mark next to the **hello-world-cluster** page title.\n## Deploy a sample app to your clusterDeploy a sample \"hello world\" web app provided by Google and stored as a container in Artifact Registry.- In the Google Cloud console, go to the GKE **Workloads** page. [Go to Workloads](https://console.cloud.google.com/kubernetes/workload/overview) \n- Click .\n- Leave **Existing container image** selected, and in **Image path** enter the following path:```\nus-docker.pkg.dev/google-samples/containers/gke/hello-app:1.0\n```This simple \"hello world\" app is packaged into a single container, but larger apps typically consist of several related containers that can be deployed together and run as a single workload.\n- Click **Continue** to move to the **Configuration** section.\n- In **Deployment name** , enter the following name:```\nhello-world-app\n```\n- In , select **hello-world-cluster** .\n- Click **Continue** .\n- In the **Expose** section, create a load balancing Kubernetes Service to direct external requests to your app:- Select **Expose deployment as a new service** .\n- Leave **Port 1** set to **80** .\n- In **Target port 1** , enter **8080** .\n- Click **Deploy** .\nGKE automatically assigns an available external IP address to the Service.This Service is considered to be part of the hello-world-app workload.\n- For Autopilot clusters, you might see an error message, such as `Does not have minimum availability` . This occurs because Autopilot deletes and then re-creates the nodes. Wait a few minutes, then click refresh to update the page.\n- Wait until the deployment completes and you see the **Deployment details** page.\n## View a live demo in your browser\n- In the Google Cloud console, go to the **Deployment details** page for **hello-world-app** :- In the Google Cloud console, go to the GKE **Workloads** page. [Go to Workloads](https://console.cloud.google.com/kubernetes/workload/overview) \n- In the **Name** column, click the name of the workload you deployed, **hello-world-app** .\n- In the column, click the IP address, which is publicly available.GKE opens a new browser tab and sends a request to your app. Dismiss any secure-site warnings, and you should see **Hello, world!** in the new browser tab.If **Endpoints** is empty, your organization might have a policy that prevents external access.\nYou have successfully created a GKE cluster in Autopilot mode and deployed a sample workload.## What's next\n- [Explore your cluster and workload](/kubernetes-engine/docs/quickstarts/tour-cluster) to learn about the some of the key workload settings and resources that you deployed.\n- [Clean up to avoid billing charges](/kubernetes-engine/docs/quickstarts/learning-path-cleanup) . If you plan to take additional tutorials, wait until you finish those tutorials before you clean up. You can use the sample Kubernetes cluster in most GKE tutorials.", "guide": "Google Kubernetes Engine (GKE)"}