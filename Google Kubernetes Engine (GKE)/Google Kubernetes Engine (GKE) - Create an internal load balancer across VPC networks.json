{"title": "Google Kubernetes Engine (GKE) - Create an internal load balancer across VPC networks", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/internal-load-balancing-across-vpc-net", "abstract": "# Google Kubernetes Engine (GKE) - Create an internal load balancer across VPC networks\nThis page explains how to create an [internal passthrough Network Load Balancer](/compute/docs/load-balancing/internal) on Google Kubernetes Engine (GKE) across VPC networks. Before reading this page, you should be familiar with the following concepts:\n- [LoadBalancer Service](/kubernetes-engine/docs/concepts/service-load-balancer) .\n- [LoadBalancer Service parameters](/kubernetes-engine/docs/concepts/service-load-balancer-parameters) .\n- [Private Service Connect](/vpc/docs/private-service-connect) .", "content": "## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.## Create an internal load balancer with Private Service Connect\nAs a service producer, you can use service attachments to make your services available to service consumers in other VPC networks using [Private Service Connect](/vpc/docs/private-service-connect) . You can create, manage, and delete service attachments using a `ServiceAttachment` custom resource.\n### Requirements and limitations\n- Limitations for [Private Service Connect](/vpc/docs/about-vpc-hosted-services#limitations) apply.\n- You can create a service attachment in GKE versions 1.21.4-gke.300 and later.\n- You cannot use the same subnet in multiple service attachment configurations.\n- You must create a GKE service that uses an internal passthrough Network Load Balancer.\n- You cannot specify a subnet in a different project (Shared VPC) for GKE versions earlier than 1.22.4-gke.100. For Shared VPC, ensure all [requirements for Shared VPC](/kubernetes-engine/docs/how-to/cluster-shared-vpc#before_you_begin) are met.\n### Create a ServiceAttachment\n- Create a subnet.You must create a [new subnet](/vpc/docs/configure-private-service-connect-producer#add-subnet-psc) for each `ServiceAttachment` .```\ngcloud beta compute networks subnets create SUBNET_NAME \\\u00a0 \u00a0 --project PROJECT_ID \\\u00a0 \u00a0 --network NETWORK_NAME \\\u00a0 \u00a0 --region REGION \\\u00a0 \u00a0 --range SUBNET_RANGE \\\u00a0 \u00a0 --purpose PRIVATE_SERVICE_CONNECT\n```Replace the following:- ``: the name of the new subnet. In GKE versions 1.22.4-gke.100 and later, you can specify a subnet in a different project by using the fully qualified resource URL for this field. You can get the fully qualified resource URL using the command [gcloud compute networks subnets describe](/sdk/gcloud/reference/compute/networks/subnets/describe) .\n- ``: the ID of your Google Cloud project.\n- ``: the name of the VPC network for the subnet.\n- ``: the region for the new subnet. You must use the same region as the service that you create.\n- ``: the IP address range to use for the subnet.\n- Deploy a workload.The following manifest describes a Deployment that runs a sample web application container image. Save the manifest as `my-deployment.yaml` :```\napiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: psc-ilbspec:\u00a0 replicas: 3\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app: psc-ilb\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 app: psc-ilb\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: whereami\u00a0 \u00a0 \u00a0 \u00a0 image: us-docker.pkg.dev/google-samples/containers/gke/whereami:v1.2.19\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - name: http\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 containerPort: 8080\u00a0 \u00a0 \u00a0 \u00a0 readinessProbe:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 httpGet:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: /healthz\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port: 8080\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 scheme: HTTP\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 initialDelaySeconds: 5\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 timeoutSeconds: 1\n```\n- Apply the manifest to your cluster:```\nkubectl apply -f my-deployment.yaml\n```\n- Create a service. The following manifest describes a service that creates an internal passthrough Network Load Balancer on TCP port 8080. Save the manifest as `my-service.yaml` :```\n\u00a0apiVersion: v1\u00a0kind: Service\u00a0metadata:\u00a0 \u00a0name: SERVICE_NAME\u00a0 \u00a0annotations:\u00a0 \u00a0 \u00a0networking.gke.io/load-balancer-type: \"Internal\"\u00a0spec:\u00a0 \u00a0type: LoadBalancer\u00a0 \u00a0selector:\u00a0 \u00a0 \u00a0app: psc-ilb\u00a0 \u00a0ports:\u00a0 \u00a0- port: 80\u00a0 \u00a0 \u00a0targetPort: 8080\u00a0 \u00a0 \u00a0protocol: TCP\n```Replace the following:- ``: the name of the new service.\n- Apply the manifest to your cluster:```\nkubectl apply -f my-service.yaml\n```\n- Create `ServiceAttachment` .The following manifest describes a `ServiceAttachment` that exposes the service that you created to service consumers. Save the manifest as `my-psc.yaml` :```\napiVersion: networking.gke.io/v1kind: ServiceAttachmentmetadata:\u00a0name: SERVICE_ATTACHMENT_NAME\u00a0namespace: defaultspec:\u00a0connectionPreference: ACCEPT_AUTOMATIC\u00a0natSubnets:\u00a0- SUBNET_NAME\u00a0proxyProtocol: false\u00a0resourceRef:\u00a0 \u00a0kind: Service\u00a0 \u00a0name: SERVICE_NAME\n``` **Note:** For GKE versions earlier than 1.23.3-gke.900, use `networking.gke.io/v1beta1` instead of `networking.gke.io/v1` .Replace the following:- ``: the name of the new service attachment.\n- ``: the name of the new subnet. In GKE versions 1.22.4-gke.100 and later, you can specify a subnet in a different project by using the fully qualified resource URL for this field. You can get the fully qualified resource URL using the command [gcloud compute networks subnets describe](/sdk/gcloud/reference/compute/networks/subnets/describe) . For a Shared VPC configuration, use the following format:`projects/` `` `/regions/` `` `/subnetworks/` ``.\n **Note:** The `ServiceAttachment` resource will have error events until the GKE controller creates the internal passthrough Network Load Balancer that is defined by the service. After the internal passthrough Network Load Balancer is provisioned, the errors are no longer published.For more information about the manifest fields, see the [service attachment fields](#fields) .\n- Apply the manifest to your cluster:```\nkubectl apply -f my-psc.yaml\n```\n- Verify that the Private Service Connect controller created the service attachment:```\ngcloud beta compute service-attachments list\n```The output shows a service attachment with an automatically generated name:```\nNAME  REGION  PRODUCER_FORWARDING_RULE   CONNECTION_PREFERENCE\nk8s1-sa-... REGION_NAME a3fea439c870148bdba5e59c9ea9451a ACCEPT_AUTOMATIC\n```\n### View a ServiceAttachment\nYou can view the details of a `ServiceAttachment` using the following command:\n```\nkubectl describe serviceattachment SERVICE_ATTACHMENT_NAME\n```\nThe output is similar to the following:\n```\n kubectl describe serviceattachment foo-sa\nName:  <sa-name>\nNamespace: default\nLabels:  <none>\nAnnotations: <none>\nAPI Version: networking.gke.io/v1beta1\nKind:   ServiceAttachment\nMetadata:\n ...\nStatus:\n Forwarding Rule URL:  https://www.googleapis.com/compute/beta/projects/<project>/regions/<region>/forwardingRules/<fr-name>\n Last Modified Timestamp: 2021-07-08T01:32:39Z\n Service Attachment URL: https://www.googleapis.com/compute/beta/projects/<projects>/regions/<region>/serviceAttachments/<gce-service-attachment-name>\nEvents:      <none>\n```\n### Consume a ServiceAttachment\nTo consume your service from another project, perform the following steps:\n- Get the URL of the `ServiceAttachment` :```\nkubectl get serviceattachment SERVICE_ATTACHMENT_NAME -o=jsonpath=\"{.status.serviceAttachmentURL}\"\n```The output is similar to the following:```\n serviceAttachmentURL: https://www.googleapis.com/compute/alpha/projects/<project>/region/<region>/serviceAttachments/k8s1-...my-sa\n```\n- [Create a Private Service Connect endpoint](/vpc/docs/configure-private-service-connect-services#create-endpoint) using the URL of the `ServiceAttachment` .\n- Verify that you can connect to the Service that you deployed in the producer project by using a `curl` command from a VM in the consumer project:```\ncurl PSC_IP_ADDRESS\n```Replace `` with the IP address of the forwarding rule in the consumer project.The output is similar to the following:```\n{\n \"cluster_name\":\"cluster\",\n \"host_header\":\"10.128.15.200\",\n \"node_name\":\"gke-psc-default-pool-be9b6e0e-dvxg.c.gke_project.internal\",\n \"pod_name\":\"foo-7bf648dcfd-l5jf8\",\n \"pod_name_emoji\":\"\ud83d\udc5a\",\n \"project_id\":\"gke_project\",\n \"timestamp\":\"2021-06-29T21:32:03\",\n \"zone\":\"ZONE_NAME\"\n}\n```\n### Update a ServiceAttachment\nYou can update a `ServiceAttachment` using the following steps:\n**Note:** You cannot update the `resourceRef` field and you can only add subnets to the `natSubnets` field. You cannot remove subnets. If you need to update the `resourceRef` field or remove subnets from the `natSubnets` field, you must delete and then recreate the `ServiceAttachment` .\n- Edit the `ServiceAttachment` manifest in `my-psc.yaml` :```\napiVersion: networking.gke.io/v1kind: ServiceAttachmentmetadata:\u00a0 name: my-sa\u00a0 namespace: defaultspec:\u00a0 connectionPreference: ACCEPT_AUTOMATIC\u00a0 natSubnets:\u00a0 - my-nat-subnet\u00a0 proxyProtocol: false\u00a0 resourceRef:\u00a0 \u00a0 kind: Service\u00a0 \u00a0 name: ilb-service\n``` **Note:** For GKE versions earlier than 1.23.3-gke.900, use `networking.gke.io/v1beta1` instead of `networking.gke.io/v1` .\n- Apply the manifest to your cluster:```\nkubectl apply -f my-psc.yaml\n```\n### Delete a ServiceAttachment\nYou cannot delete an internal passthrough Network Load Balancer that is connected to a service attachment. You must delete the service attachment and GKE Service separately.\n- Delete the service attachment:```\nkubectl delete serviceattachment SERVICE_ATTACHMENT_NAME --wait=false\n```This command marks the service attachment for deletion, but the resource continues to exist. You can also wait for the deletion to finish by omitting the `--wait` flag.\n- Delete the Service:```\nkubectl delete svc SERVICE_NAME\n```\n- Delete the subnet:```\ngcloud compute networks subnets delete SUBNET_NAME\n```## ServiceAttachment fields\nThe `ServiceAttachment` has the following fields:\n- `connectionPreference`: the connection preference that determines how customers connect to the service. You can either use automatic project approval using`ACCEPT_AUTOMATIC`or explicit project approval using`ACCEPT_MANUAL`. For more information, see [Publishing services using Private Service Connect](/vpc/docs/configure-private-service-connect-producer) .\n- `natSubnets`: a list of subnetwork resource names to use for the service attachment.\n- `proxyProtocol`: when set to true, the consumer source IP and Private Service Connect connection ID are available in the requests. This field is optional and defaults to false if not provided.\n- `consumerAllowList`: the list of consumer projects that are allowed to connect to the`ServiceAttachment`. This field can only be used when`connectionPreference`is`ACCEPT_MANUAL`. For more information about this field, see [Publishing services using Private Service Connect](/vpc/docs/configure-private-service-connect-producer) .- `project`: the project ID or number for the consumer project.\n- `connectionLimit`: the connection limit for the consumer project. This field is optional.\n- `forceSendFields`: the field names to send to include in API requests. This field is optional.\n- `nullFields`: the field names to include in API requests with a null value. This field is optional.\n- `consumerRejectList`: the list of consumer project IDs or numbers that are not allowed to connect to the`ServiceAttachment`. This field can only be used when`connectionPreference`is`ACCEPT_MANUAL`. For more information about this field, see [Publishing services using Private Service Connect](/vpc/docs/configure-private-service-connect-producer) .\n- `resourceRef` : a reference to the Kubernetes resource.- `kind`: the type of Kubernetes resource. You must use`Service`.\n- `name`: the name of the Kubernetes resource that must be in the same namespace as the internal passthrough Network Load Balancer.\n **Note:** After a service attachment is connected to an internal passthrough Network Load Balancer, you cannot delete or update the internal passthrough Network Load Balancer. If you attempt to delete or update the internal passthrough Network Load Balancer, an error message appears. For more information, see [Troubleshooting](#psc-troubleshooting) .## Troubleshooting\nYou can view error messages using the following command:\n```\nkubectl get events -n NAMESPACE\n```\nReplace `` with the namespace of the internal passthrough Network Load Balancer.\nAn error message similar to the following occurs if you try to delete an internal passthrough Network Load Balancer that is being used by a service attachment. You must delete the `ServiceAttachment` before you can delete the internal passthrough Network Load Balancer.\n```\nError syncing load balancer: failed to ensure load balancer: googleapi:\nError 400: The forwarding_rule resource '<fwd-rule-URL>' is already being used\nby '<svc-attachment-URL>', resourceInUseByAnotherResource.\n```\n## What's next\n- [Read the GKE network overview](/kubernetes-engine/docs/concepts/network-overview) .\n- [Learn more about Compute Engine load balancers](/compute/docs/load-balancing) .\n- [Learn how to create a VPC-native cluster](/kubernetes-engine/docs/how-to/alias-ips) .\n- [Learn about configuring authorized networks](/kubernetes-engine/docs/how-to/authorized-networks) .", "guide": "Google Kubernetes Engine (GKE)"}