{"title": "Google Kubernetes Engine (GKE) - Add authorized networks for control plane access", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/authorized-networks", "abstract": "# Google Kubernetes Engine (GKE) - Add authorized networks for control plane access\nThis page shows you how to use authorized networks to restrict the origins from where you can access the [control planes](/kubernetes-engine/docs/concepts/cluster-architecture#control_plane) of your Google Kubernetes Engine (GKE) clusters.\n", "content": "## How authorized networks work\nprovide an IP-based firewall that controls access to the GKE control plane. The access to the control plane depends on the type of GKE cluster and the source IP addresses. With authorized networks, you configure the IP addresses you want to allow access to the GKE cluster's control plane endpoint as a CIDR block list.\n### Terminology related to clusters and IP addresses\nThe following terms are used to differentiate which IP-based firewall rules are in place, depending on your type of cluster:\nIP addresses distinctions:\n- **Public IP addresses of all Compute Engine VMs in Google Cloud** : Public IP addresses assigned to any VM used by any customer hosted on Google Cloud. Google Cloud owns these IP addresses. To learn more, see [Where can I find Compute Engine IP ranges?](/compute/docs/faq#find_ip_range) \n- **Google Cloud platform IP addresses** : IP addresses used by Google Cloud products such as Cloud Run or Cloud Functions. Any client hosted on Google Cloud can instantiate these IP addresses. Google Cloud owns these IP addresses.\n- **Google-reserved IP addresses** : Public IP addresses for GKE cluster management purposes. These IP addresses include GKE managed processes and other production Google services. Google owns these IP addresses.\n- **Internet public IP addresses** : Non-RFC 1918 and non-Google public IP addresses. Neither Google nor Google Cloud products own these public IP addresses.\n- **GKE cluster IP address ranges** : IP addresses assigned to the cluster that GKE uses for the cluster's nodes, Pods, and Services.\n- **Privately used IP addresses** : IP addresses from your cluster's VPC network. These IP addresses can include your cluster IP address, on-premises networks, the [RFC 1918 ranges](https://datatracker.ietf.org/doc/html/rfc1918) , or the privately used public IP (PUPI) addresses that include non-RFC 1918 ranges.\nCluster types:\n- **Legacy public clusters** : Public clusters running on [legacynetworks](/vpc/docs/legacy) or [VPC networks](/vpc/docs/vpc) with public IP addresses assigned to nodes, and that have not been migrated to Private Service Connect architecture.\n- **Legacy private clusters** : Clusters based on [VPC Network Peering](/vpc/docs/vpc-peering) for control plane connectivity from nodes with private IP addresses only.\n- **PSC-based cluster created as public or private** : Clusters that use [Private Service Connect](/vpc/docs/private-service-connect) architecture for the communication between the GKE cluster control plane and nodes. To determine if your cluster uses Private Service Connect, see the [GKE control plane](/kubernetes-engine/docs/concepts/network-overview#public-cluster-psc) .## Access to control plane endpoints\nThe following table shows the default authorized network status at cluster creation. Based on the type of GKE cluster and control plane endpoint, you can determine the following:\n- The preset IP addresses that can always access the GKE control plane.\n- The IP addresses that you can configure to access the cluster's control plane with authorized networks enabled.\nThe configurable IP addresses can access the cluster's control plane when you allowlist them and enable authorized networks.\n| Type of GKE cluster and control plane endpoint       | Default control plane authorized network status       | Preset IP addresses that can always access the GKE control plane1                                                                                                                                                                        | Configurable IP address that can access the GKE control plane with authorized networks enabled2                                    |\n|:------------------------------------------------------------------------|:------------------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Legacy public clusters or private clusters based on VPC Network Peering | Legacy public clusters or private clusters based on VPC Network Peering | Legacy public clusters or private clusters based on VPC Network Peering                                                                                                                                                                      | Legacy public clusters or private clusters based on VPC Network Peering                                          |\n| Legacy public clusters with a public endpoint       | Disabled                | Public IP addresses of all Compute Engine VMs in Google Cloud Google Cloud platform IP addresses Google-reserved IP addresses GKE cluster IP address ranges                                                                                                                                                 | Allowlisted internet public IP addresses to access the cluster's public IP endpoint.                                       |\n| Legacy private clusters with public and private endpoints    | Enabled                 | Google-reserved IP addresses GKE cluster IP address ranges (nodes, Pods, and services have private IP addresses only).                                                                                                                                                          | Allowlisted privately used IP addresses from the cluster network to access the cluster's private endpoint. Allowlisted internet public IP addresses to access the cluster's public endpoint if the --enable-private-endpoint flag is disabled. |\n| Clusters that use Private Service Connect        | Clusters that use Private Service Connect        | Clusters that use Private Service Connect                                                                                                                                                                              | Clusters that use Private Service Connect                                                  |\n| Clusters created as public            | Disabled                | All private IP addresses from the cluster's network (excluding learned VPC Network Peering routes). When the \u2013enable-google-cloud flag is set (default), the following IP addresses can access the GKE control plane: Public IP addresses of all Compute Engine VMs in Google Cloud Google Cloud platform IP addresses Google-reserved IP addresses Public IP addresses of your GKE cluster nodes. When the \u2013no-enable-google-cloud flag is set, the following IP addresses can access the GKE control plane: Google-reserved IP addresses GKE cluster IP address ranges (nodes, Pods, and services have private IP addresses only). To learn more, see changing cluster isolation.                   | Allowlisted internet public IP addresses to access the cluster's public endpoint                                        |\n| Clusters created as private            | Enabled                 | GKE cluster IP address ranges such as nodes, Pods, and Services have private IP addresses only. By default, when the cluster is created, the \u2013enable-google-cloud is disabled. However, when the \u2013enable-google-cloud flag is set, the following IP addresses can access the GKE control plane: Public IP addresses of all Compute Engine VMs in Google Cloud Google Cloud platform IP addresses Google-reserved IP addresses Public IP addresses of your GKE cluster nodes. When the \u2013no-enable-google-cloud flag is set, the following IP addresses can access the GKE control plane: Google-reserved IP addresses GKE cluster IP address ranges (nodes, Pods, and services have private IP addresses only). To learn more, see changing cluster isolation. | Allowlisted internet public IP addresses to access the cluster's public endpoint if the --enable-private-endpoint flag is disabled. Allowlisted privately used IP addresses from the cluster network to access the cluster's private endpoint |\n- The IP addresses that can always access the GKE control plane, regardless of authorized networks being enabled or disabled [\u21a9](#fnref1) \n- You must allowlist these configurable IP addresses to access your cluster control plane. [\u21a9](#fnref2) \n### Limitations\n- If you [expand a subnet](/vpc/docs/create-modify-vpc-networks#expand-subnet) that is used by a cluster with authorized networks, you must update the authorized network configuration to include the expanded IP address range.\n- The number of authorized IP address ranges you can specify for public and private IP addresses depends on the type of cluster:- Public cluster: 50 IP address ranges\n- Private cluster: 100 IP address ranges\n- PSC-based clusters: 100 IP address ranges\n## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.## Create a cluster with authorized networks\nYou can create a cluster with one or more authorized networks by using the Google Cloud CLI, the Google Cloud console, or the GKE API.\nRun the following command:\n```\ngcloud container clusters create-auto CLUSTER_NAME \\\u00a0 \u00a0 --enable-master-authorized-networks \\\u00a0 \u00a0 --master-authorized-networks CIDR1,CIDR2,...\n```\nReplace the following:- ``: the name of your cluster.\n- ``: A comma-delimited list of the CIDR values for the authorized networks. For example,`8.8.8.8/32,8.8.8.0/24`.\n- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click **Create** .\n- In the **Autopilot** or the **Standard** section, click **Configure** .\n- Configure your cluster as needed.\n- In the navigation menu, click **Networking** .\n- Under **Advanced networking options** , select the **Enable control planeauthorized networks** checkbox.\n- Click **Add authorized network** .\n- Enter a **Name** for the network.\n- For **Network** , enter a CIDR range that you want to grant access to your cluster control plane.\n- Click **Done** . Add additional authorized networks as needed.\n- Click **Create** .\nSpecify the `masterAuthorizedNetworksConfig` object in your cluster [create request](/kubernetes-engine/docs/reference/rest/v1/projects.zones.clusters/create) :\n```\n\"masterAuthorizedNetworksConfig\": {\u00a0 \"enabled\": true,\u00a0 \"cidrBlocks\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"displayName\": string,\u00a0 \u00a0 \u00a0 \"cidrBlock\": string\u00a0 \u00a0 }\u00a0 ]}\n```\nFor more information, refer to [MasterAuthorizedNetworksConfig](/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.MasterAuthorizedNetworksConfig) .\nYou can configure a private cluster with one or more authorized networks. For more information, see [Private clusters](/kubernetes-engine/docs/how-to/private-clusters) .\n## Create a cluster with limited control plane access\nGKE assigns a public IP address (external endpoint) to the control plane in public clusters. You can set further cluster isolation on public clusters that use Private Service Connect to privately connect nodes and control plane. To check if your cluster uses Private Service Connect, see [Public clusters with Private Service Connect](/kubernetes-engine/docs/concepts/network-overview#public-cluster-psc) .\nYou can create a cluster and instruct GKE to block access from the following origins to the control plane:\n- From [IP addresses owned by Google Cloud](/compute/docs/faq#find_ip_range) .\n- From external IP addresses, except from Google Services that run cluster management processes.\nYou can create a cluster and define control plane access by using the Google Cloud CLI or the Google Cloud console.\nRun the following command:\n```\ngcloud container clusters create-auto CLUSTER_NAME\u00a0 \u00a0 --no-enable-google-cloud-access\n```\nReplace `` with the name of the GKE cluster.\nWith this command, the `no-enable-google-cloud-access` flag prevents the control plane from being accessible from IP addresses [owned by Google Cloud](/compute/docs/faq#find_ip_range) .- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click **Create** .\n- In the **Autopilot** or the **Standard** section, click **Configure** .\n- Configure your cluster as needed.\n- In the navigation menu, click **Networking** .\n- Under **Advanced networking options** , select the **Enable control planeauthorized networks** checkbox.\n- Clear the **Allow access through Google Cloud public IP addresses** check box to prevent the control plane from being accessible from IP addresses owned by Google Cloud.\n- Click **Add authorized network** .\n- Enter a **Name** for the network.\n- For **Network** , enter a CIDR range that you want to grant access to your cluster control plane.\n- Click **Done** . Add additional authorized networks as needed.\n- Click **Create** .## Add an authorized network to an existing cluster\nYou can add an authorized network to an existing cluster using the gcloud CLI or the Google Cloud console.\nRun the following command:\n```\ngcloud container clusters update CLUSTER_NAME \\\u00a0 \u00a0 --enable-master-authorized-networks \\\u00a0 \u00a0 --master-authorized-networks CIDR1,CIDR2,...\n```\nReplace the following:- ``: the name of your existing cluster.\n- ``: A comma-delimited list of the CIDR values for the authorized networks. For example,`8.8.8.8/32,8.8.8.0/24`.\n- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click the name of the cluster you want to modify.\n- Under **Networking** , in the **Control plane authorized networks** field, click **Edit control planeauthorized networks** .\n- Select the **Enable control plane authorized networks** checkbox.\n- Click **Add authorized network** .\n- Enter a **Name** for the network.\n- For **Network** , enter a CIDR range that you want to grant access to your cluster control plane.\n- Click **Done** . Add additional authorized networks as needed.\n- Click **Save Changes** .\nSpecify the `desiredMasterAuthorizedNetworksConfig` field in your cluster [update request](/kubernetes-engine/docs/reference/rest/v1/projects.zones.clusters/update) . In the field, specify a [MasterAuthorizedNetworksConfig](/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.MasterAuthorizedNetworksConfig) object:\n```\n\"desiredMasterAuthorizedNetworksConfig\": {\u00a0 \u00a0 object(MasterAuthorizedNetworksConfig)\u00a0 }\n```\n## Verify an authorized network\nYou can verify an authorized network in an existing cluster using the gcloud CLI or the Google Cloud console.\nRun the following command:\n```\ngcloud container clusters describe CLUSTER_NAME\n```\nThe output is similar to the following:\n```\n...\nmasterAuthorizedNetworksConfig:\n cidrBlocks:\n - cidrBlock: 8.8.8.8/32\n - cidrBlock: 8.8.4.4/32\n enabled: true\n...\n```- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click the name of the cluster you want to modify.\n- Under **Networking** , the **Control plane authorized networks** field displays the allowed CIDRs.\nSend a [get request](/kubernetes-engine/docs/reference/rest/v1/projects.zones.clusters/get) . Look for the CIDR blocks under the `masterAuthorizedNetworksConfig` field. For example:\n```\n\"masterAuthorizedNetworksConfig\": {\"enabled\": true,\u00a0\"cidrBlocks\": [\u00a0 {\u00a0 \u00a0 \"displayName\": \"Office\",\u00a0 \u00a0 \"cidrBlock\": \"192.0.2.0/24\"\u00a0 }]}\n```\n## Disable authorized networks\n**Caution:** This allows the public internet ( `0.0.0.0/0` ) to reach your control plane endpoint through HTTPS.\nYou can disable authorized networks for an existing cluster using the gcloud CLI or the Google Cloud console.\nRun the following command:\n```\ngcloud container clusters update CLUSTER_NAME \\\u00a0 --no-enable-master-authorized-networks\n```- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click the name of the cluster you want to modify.\n- Under **Networking** , in the **Control plane authorized networks** field, click **Edit control planeauthorized networks** .\n- Clear the **Enable control plane authorized networks** checkbox.\n- Click **Save Changes** .## Remove authorized networks\nRun the following command:\n```\ngcloud container clusters update CLUSTER_NAME \\\u00a0 \u00a0 --enable-master-authorized-networks\n```- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click the name of the cluster you want to modify.\n- Under **Networking** , in the **Control plane authorized networks** field, click **Edit control planeauthorized networks** .\n- Click delete **Delete** .\n- Click **Save Changes** .## Troubleshooting\nThe following sections explain how to resolve common issues with authorized networks.\n### Too many CIDR blocks\n`gcloud` returns the following error when attempting to create or update a cluster with more than 50 CIDR blocks:\n```\nERROR: (gcloud.container.clusters.update) argument --master-authorized-networks: too many args\n```\nTo resolve this issue, if your cluster is public, ensure that you specify no more than 50 CIDR blocks. If your cluster is private, specify no more than 100 CIDR blocks.\n### Unable to connect to the server\n`kubectl` commands time out due to incorrectly configured CIDR blocks:\n```\nUnable to connect to the server: dial tcp MASTER_IP: getsockopt: connection timed out\n```\nWhen you create or update a cluster, [ensure that you specify the correct CIDRblocks](#verify) .\n## What's next\n- [Read the GKE network overview](/kubernetes-engine/docs/concepts/network-overview) .\n- [Learn about VPC-native clusters](/kubernetes-engine/docs/how-to/alias-ips) .\n- [Learn about firewall rules](/vpc/docs/firewalls) .\n- [Learn how to create private clusters](/kubernetes-engine/docs/how-to/private-clusters) .", "guide": "Google Kubernetes Engine (GKE)"}