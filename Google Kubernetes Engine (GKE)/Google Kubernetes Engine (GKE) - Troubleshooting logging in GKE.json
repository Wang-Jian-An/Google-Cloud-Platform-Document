{"title": "Google Kubernetes Engine (GKE) - Troubleshooting logging in GKE", "url": "https://cloud.google.com/kubernetes-engine/docs/troubleshooting/logging", "abstract": "# Google Kubernetes Engine (GKE) - Troubleshooting logging in GKE\nThis page shows you how to investigate and resolve GKE logging related issues.\n[Cloud Customer Care](/kubernetes-engine/docs/getting-support)\n", "content": "## Missing cluster logs in Cloud Logging\n### Verify logging is enabled in the project\n- List enabled services:```\ngcloud services list --enabled --filter=\"NAME=logging.googleapis.com\"\n```The following output indicates that logging is enabled for the project:```\nNAME     TITLE\nlogging.googleapis.com Cloud Logging API\n```Optional: Check the logs in Logs Viewer to determine who disabled the API and when they disabled the API:```\nprotoPayload.methodName=\"google.api.serviceusage.v1.ServiceUsage.DisableService\"protoPayload.response.services=\"logging.googleapis.com\"\n```\n- If logging is disabled, enable logging:```\ngcloud services enable logging.googleapis.com\n```\n### Verify logging is enabled on the cluster\n- List the clusters:```\ngcloud container clusters list \\\u00a0 \u00a0 --project=PROJECT_ID \\\u00a0 \u00a0 '--format=value(name,loggingConfig.componentConfig.enableComponents)' \\\u00a0 \u00a0 --sort-by=name | column -t\n```Replace the following:- ``: your Google Cloud project ID.\nThe output is similar to the following:```\ncluster-1    SYSTEM_COMPONENTS\ncluster-2    SYSTEM_COMPONENTS;WORKLOADS\ncluster-3\n```If the value for your cluster is empty, logging is disabled. For example, `cluster-3` in this output has logging disabled.\n- Enable cluster logging if set to `NONE` :```\ngcloud container clusters update CLUSTER_NAME \u00a0\\\u00a0 \u00a0 --logging=SYSTEM,WORKLOAD \\\u00a0 \u00a0 --location=COMPUTE_LOCATION\n```Replace the following:- ``: the name of your cluster.\n- ``: the [Compute Engine location](/compute/docs/regions-zones/viewing-regions-zones) for your cluster.\n### Verify nodes in the node pools have Cloud Logging access scope\nOne of the following scopes is required for nodes to write logs to Cloud Logging:\n- `https://www.googleapis.com/auth/logging.write`\n- `https://www.googleapis.com/auth/cloud-platform`\n- `https://www.googleapis.com/auth/logging.admin`\n- Check the scopes configured on each node pool in the cluster:```\ngcloud container node-pools list --cluster=CLUSTER_NAME \\\u00a0 \u00a0 --format=\"table(name,config.oauthScopes)\" \\\u00a0 \u00a0 --location COMPUTE_LOCATION\n```Replace the following:- ``: the name of your cluster.\n- ``: the [Compute Engine location](/compute/docs/regions-zones/viewing-regions-zones) for your cluster.\n [Migrate your workloads](/kubernetes-engine/docs/troubleshooting/node-pools#migrate-node-pools) from the old node pool to the newly created node pool and monitor the progress.\n- Create new node pools with the correct logging scope:```\ngcloud container node-pools create NODE_POOL_NAME \\\u00a0 \u00a0 --cluster=CLUSTER_NAME \\\u00a0 \u00a0 --location=COMPUTE_LOCATION \\\u00a0 \u00a0 --scopes=\"gke-default\"\n```Replace the following:- ``: the name of your cluster.\n- ``: the [Compute Engine location](/compute/docs/regions-zones/viewing-regions-zones) for your cluster.\n### Verify the node pool's service account has a role with the correct IAM permissions\nThe service account must have a role which contains the permission `logging.logEntries.create` to create logs.\n- Find the service account for each node pool:```\ngcloud container node-pools list \\\u00a0 \u00a0 --cluster=CLUSTER_NAME \\\u00a0 \u00a0 --format=\"table(name,config.serviceAccount)\" \\\u00a0 \u00a0 --location=COMPUTE_LOCATION\n```Replace the following:- ``: the name of your cluster.\n- ``: the [Compute Engine location](/compute/docs/regions-zones/viewing-regions-zones) for your cluster.\nThe output is similar to the following:```\nNAME   SERVICE_ACCOUNT\ndefault-pool gke-cluster-sa@developer.gserviceaccount.com\n```If the node pool is using the default Compute Engine service account, you can describe it using the following command. As a best practice, use a minimally-privileged custom service account for your node pools. The default Compute Engine service account contains more than the minimum permissions needed to run your clusters.```\ngcloud compute project-info describe --format=\"table(defaultServiceAccount)\"\n```\n- Verify IAM roles have sufficient permissions.View the permissions contained in roles that are granted to a specific service account:```\ngcloud projects get-iam-policy PROJECT_ID \\\u00a0 \u00a0 --flatten=\"bindings[]\" \\\u00a0 \u00a0 --filter=\"bindings.members=serviceAccount:SERVICE_ACCOUNT\" \\\u00a0 \u00a0 --format=\"table[box](bindings.role)\"\n```\n- Grant a role that contains the `logging.logEntries.create` permission to the service account. You can use a [predefined role](/iam/docs/choose-predefined-roles) or create a [custom role](/iam/docs/creating-custom-roles) .\n### Verify that Cloud Logging write API quotas have not been reached\nConfirm that you have not reached API write quotas for Cloud Logging.\n- Go to the **Quotas** page in the Google Cloud console. [Go to Quotas](https://console.cloud.google.com/iam-admin/quotas) \n- Filter the table by \"Cloud Logging API\".\n- Confirm that you have not reached any of the quotas.## What's next\n[Cloud Customer Care](/kubernetes-engine/docs/getting-support)", "guide": "Google Kubernetes Engine (GKE)"}