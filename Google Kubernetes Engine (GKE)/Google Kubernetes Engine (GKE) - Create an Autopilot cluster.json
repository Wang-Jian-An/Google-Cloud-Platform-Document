{"title": "Google Kubernetes Engine (GKE) - Create an Autopilot cluster", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-an-autopilot-cluster", "abstract": "# Google Kubernetes Engine (GKE) - Create an Autopilot cluster\n[Autopilot mode](/kubernetes-engine/docs/concepts/types-of-clusters#modes)\n", "content": "## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.\n- Ensure you have the correct permissions to create clusters. At minimum, you should be a [Kubernetes Engine Cluster Admin](/iam/docs/understanding-roles#kubernetes-engine-roles) .\n- If you want to register your new cluster to a [fleet](/anthos/fleet-management/docs) , ensure that you have the required [APIs and permissions](/anthos/fleet-management/docs/before-you-begin) .\n**Caution:** If you have the organization policy constraint [constraints/compute.vmExternalIpAccess](/resource-manager/docs/organization-policy/org-policy-constraints) configured to `Deny All` or to restrict external IPs to specific VM instances at the organization, folder, or project level where you are trying to create a public GKE Autopilot cluster, then your cluster creation operations will fail. See the [troubleshooting information](/kubernetes-engine/docs/troubleshooting#external-ip) for details.\n## Create an Autopilot cluster\nYou can create an Autopilot cluster by using the Google Cloud CLI, the Google Cloud console, or by using Terraform:\nRun the following command:\n```\ngcloud container clusters create-auto CLUSTER_NAME \\\u00a0 \u00a0 --location=LOCATION \\\u00a0 \u00a0 --project=PROJECT_ID\n```\nReplace the following:- ``: the name of your new Autopilot cluster.\n- ``: the [region](/compute/docs/regions-zones#available) for your cluster, such as`us-central1`.\n- ``: your project ID.\nYou can optionally use the `--service-account=` `` `@` `` `.iam.gserviceaccount.com` flag to specify a different IAM service account that nodes use instead of the Compute Engine default service account. We strongly recommend that you [create and use a service account with minimal privileges](/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa) so that your nodes don't have more privileges than they require.\n **Caution:** You cannot modify the IAM service account on an existing Autopilot cluster.\nFor a list of other options that you can specify, see the [gcloud container clusters create-auto](/sdk/gcloud/reference/container/clusters/create-auto) reference documentation.\nPerform the following tasks:- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click **Create** .\n- In the **Cluster basics** section, complete the following:- Enter the **Name** for your cluster.\n- Select a [region](/compute/docs/regions-zones#available) for your cluster.\n- Optional (available with [GKE Enterprise](/anthos/docs/concepts/gke-editions) ): If you want to register your new cluster to a [fleet](/anthos/fleet-management/docs) , go to the **Fleet registration** section, and follow the Google Cloud console instructions for [Create and register a new cluster](/anthos/fleet-management/docs/register/gke#console) to complete your cluster registration.\n- In the **Networking** section, choose one of the following:- To create a cluster with a publicly accessible endpoint, choose **Public cluster** .\n- If your organization has specific network isolation requirements, choose **Private cluster** . For configuration instructions, refer to [Create a private cluster](/kubernetes-engine/docs/how-to/private-clusters#private_cp) .\n- Optionally, configure other settings such as maintenance windows and advanced security features.\n- Click **Create** .\nTo create an Autopilot cluster using Terraform, refer to the following example:\n [  gke/autopilot/basic/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/gke/autopilot/basic/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/gke/autopilot/basic/main.tf) \n```\nresource \"google_container_cluster\" \"default\" {\n name  = \"gke-autopilot-basic\"\n location = \"us-central1\"\n enable_autopilot = true\n # Set `deletion_protection` to `true` will ensure that one cannot\n # accidentally delete this instance by use of Terraform.\n deletion_protection = false\n}\n```\nTo learn more about using Terraform, see [Terraform support for GKE](/kubernetes-engine/docs/resources/use-terraform-gke) .\n### Set the version and release channel of a new Autopilot cluster\nBy default, GKE enrolls new Autopilot clusters in the Regular [release channel](/kubernetes-engine/docs/concepts/release-channels#channels) , with the default GKE version in the channel. You can change the release channel when you create an Autopilot cluster using the gcloud CLI, the Google Cloud console, or by using Terraform. You can also set a specific GKE version when you create a cluster using the gcloud CLI.\nTo set the release channel and the cluster version when you create an Autopilot cluster, run the following command. Setting the cluster version is only useful if you have a specific version requirement. In most situations, we recommend that you only set the release channel.\n```\ngcloud container clusters create-auto CLUSTER_NAME \\\u00a0 \u00a0 --location=LOCATION \\\u00a0 \u00a0 --release-channel=RELEASE_CHANNEL \\\u00a0 \u00a0 --cluster-version=VERSION\n```\nReplace the following:- ``: the name of the [release channel](/kubernetes-engine/docs/concepts/release-channels#channels) for the cluster. The default is`Regular`.\n- ``: the GKE version for the cluster, such as`1.22.11-gke.400`. If omitted, the default value is the [release channel's default version](/kubernetes-engine/docs/release-notes#current_versions) . To check the available versions, refer to [What versions are available in a channel?](/kubernetes-engine/docs/concepts/release-channels#what_versions_are_available_in_a_channel) . You can run any minor version in your selected channel or choose [a subset of patch versions from other channels](/kubernetes-engine/docs/concepts/release-channels#newer-patch-versions) .\nThese flags are optional. If you set a specific GKE version, that version applies until a new version becomes the default version in your cluster's release channel. GKE then [automatically upgrades](/kubernetes-engine/docs/concepts/cluster-upgrades-autopilot#cluster_upgrades) your cluster to the new default version.\nTo set the release channel when you create an Autopilot cluster, do the following:- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click **Create** .\n- For **Autopilot** , click **Configure** .\n- In the **Cluster basics** section, complete the following:- Specify a **Name** .\n- Select a **Region** .\n- In the **Advanced settings** section, choose a **release channel** .\n- Click **Create** .\nTo set the release channel and the cluster version when you create an Autopilot cluster using Terraform, refer to the following example:\n [  gke/autopilot/release_channel/main.tf ](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/gke/autopilot/release_channel/main.tf) [View on GitHub](https://github.com/terraform-google-modules/terraform-docs-samples/blob/main/gke/autopilot/release_channel/main.tf) \n```\nresource \"google_container_cluster\" \"default\" {\n name  = \"gke-autopilot-release-channel\"\n location = \"us-central1\"\n enable_autopilot = true\n release_channel {\n channel = \"REGULAR\"\n }\n # Set `deletion_protection` to `true` will ensure that one cannot\n # accidentally delete this instance by use of Terraform.\n deletion_protection = false\n}\n```\nTo learn more about using Terraform, see [Terraform support for GKE](/kubernetes-engine/docs/resources/use-terraform-gke) .\nYou can also change the release channel and GKE version for existing clusters. For instructions, refer to [Manually upgrading a control plane](/kubernetes-engine/docs/how-to/upgrading-a-cluster#upgrade_cp) and to [Selecting a new release channel](/kubernetes-engine/docs/concepts/release-channels#selecting_a_new_release_channel) .\n## Connect to the cluster\n```\ngcloud container clusters get-credentials CLUSTER_NAME \\\u00a0 \u00a0 --location=LOCATION \\\u00a0 \u00a0 --project=PROJECT_ID\n```\nThis command configures `kubectl` to use the cluster you created.- In the cluster list, beside the cluster that you want to connect to, click **Actions** , and then click **Connect** .\n- Click **Run in Cloud Shell** when prompted. The generated command is copied into your Cloud Shell, for example:```\ngcloud container clusters get-credentials autopilot-cluster --location=us-central1 --project=autopilot-test\n```\n- Press **Enter** to run the command.## Verify the cluster mode\nYou can verify that your cluster is an Autopilot cluster by using the gcloud CLI or the Google Cloud console.\nTo verify that your cluster is created in Autopilot mode, run the following command:\n```\ngcloud container clusters describe CLUSTER_NAME \\\u00a0 \u00a0 --location=LOCATION\n```\nThe output contains the following:\n```\nautopilot:\n enabled: true\n```\nTo verify that your cluster is created in Autopilot mode, do the following:- In the cluster list, click the name of the cluster.\n- In the **Automation** section, check whether the **Node auto-provisioning (Autopilot mode)** field is set to **Enabled** .## What's next\n- [Deploying a workload](/kubernetes-engine/docs/how-to/stateless-apps) .\n- [Scaling an application](/kubernetes-engine/docs/how-to/scaling-apps) .", "guide": "Google Kubernetes Engine (GKE)"}