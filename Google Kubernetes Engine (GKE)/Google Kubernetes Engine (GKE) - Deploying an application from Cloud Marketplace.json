{"title": "Google Kubernetes Engine (GKE) - Deploying an application from Cloud Marketplace", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/deploying-marketplace-app", "abstract": "# Google Kubernetes Engine (GKE) - Deploying an application from Cloud Marketplace\nYou can select and deploy container-based applications from Google Cloud Marketplace to your Google Kubernetes Engine cluster.\nTo see the applications that you can install, in the Google Cloud console, open the GKE Applications page, and click **Deploy from Cloud Marketplace** .\n[Go to the Applications page](https://console.cloud.google.com/kubernetes/application)\nTo deploy an application to your cluster, follow these steps:\n**Note:** If you are deploying an application to a non-GKE cluster configuration, such as a [GKE on VMware](https://cloud.google.com/gke-on-prem/) cluster, or a cluster running [Istio](https://istio.io) , you must first complete the [prerequisites for running Kubernetes applications with GKE on VMware or Istio](/marketplace/docs/kubernetes-apps/deploying-non-gke-clusters) .\nYou must have the `Kubernetes Engine Admin` and `Project Viewer` , or `Project Owner` role to deploy an app to a GKE cluster.\nTo deploy a Kubernetes app from GKE, your project must have a network called `default` . [Learn about creating networks with Virtual Private Cloud](/vpc/docs/create-modify-vpc-networks#creating_networks) .\n- To see information about an app, including its pricing, select the app.\n- Click **Configure** .\n- Select the Kubernetes cluster that you want to deploy the app to. If you want to create a new cluster, click **Create cluster** . **Note:** If a cluster is marked ineligible, verify that you have permissions to deploy workloads to that cluster. For example, if a GKE on VMware cluster is marked ineligible, verify that you've [set up access to your GKE on VMware cluster](/marketplace/docs/kubernetes-apps/deploying-non-gke-clusters#deploy-onprem) .\n- Select or create a Namespace to use for the application. [Namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/) are a way to divide cluster resources among multiple users or teams. **Note:** Namespaces with the `-system` suffix are reserved for GKE components. You cannot deploy applications to these namespaces.\n- In the **App instance name** box, enter a name for the app, such as `sandbox-dev-app` . The name must be unique within the namespace.\n- If you need to change the service account associated with the application's billing plan, expand **Advanced plan settings** , and verify the service account that is associated with the application.For information on billing plans for Kubernetes apps, see [Understanding Billing](/marketplace/docs/understanding-billing) .\n- Enter a name for your app instance, and then click **Deploy** .\n- To manage, edit, or delete your deployment, open the GKE Applications page. [Go to the Applications Page](https://console.cloud.google.com/kubernetes/application) For information on what you can customize in the app, see the documentation provided by the software vendor.\n- If the application needs to be accessible to external traffic, follow [these steps to expose the application as a Service](/kubernetes-engine/docs/how-to/exposing-apps) .\nYou can deploy a Kubernetes app to a Google Kubernetes Engine cluster, or to your own infrastructure, such as a local installation of [Minikube](https://kubernetes.io/docs/setup/minikube/) .\nTo deploy the app from the command line, you download a license file from Google Cloud. When you deploy the app using the steps below, you must apply the license file to your `kubectl` config or Helm chart.\nDepending on the app provider, the specific steps to deploy the app might be different. At a high level, you do the following:- Connect to your Kubernetes cluster.\n- Add the license file to your`kubectl`configuration or Helm chart, as applicable.\n- Clone the Git repository for the app. The repository typically contains:- A `kubectl` configuration or Helm chart, which describes the Kubernetes resources for the app.If you want to customize the app, such as increasing the number of replicas, or changing the update strategy for application pods, edit the `kubectl` configuration or Helm chart.\n- An [Application resource](https://github.com/kubernetes-sigs/application) , which defines the application's properties, such as the type of application, the version, maintainers, and so on.\n- Specific steps to deploy the application to your Kubernetes cluster.\n- Additional scripts or tools added by the provider.\n- Verify the app's configuration and deploy the app", "content": ".", "guide": "Google Kubernetes Engine (GKE)"}