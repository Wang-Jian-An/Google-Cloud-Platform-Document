{"title": "Google Kubernetes Engine (GKE) - GKE audit logging information", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/audit-logging", "abstract": "# Google Kubernetes Engine (GKE) - GKE audit logging information\nThis document describes the audit logs created by Google Kubernetes Engine as part of [Cloud Audit Logs](/logging/docs/audit) .\n", "content": "## Overview\nGoogle Cloud services write audit logs to help you answer the questions, \"Who did what, where, and when?\" within your Google Cloud resources.\nYour Google Cloud projects contain only the audit logs for resources that are directly within the Google Cloud project. Other Google Cloud resources, such as folders, organizations, and billing accounts, contain the audit logs for the entity itself.\nFor a general overview of Cloud Audit Logs, see [Cloud Audit Logs overview](/logging/docs/audit) . For a deeper understanding of the audit log format, see [Understand audit logs](/logging/docs/audit/understanding-audit-logs) .\n## Available audit logs\nThe following types of audit logs are available for GKE:\n- Admin Activity audit logsIncludes \"admin write\" operations that write metadata or configuration   information.You can't disable Admin Activity audit logs.\n- Data Access audit logsIncludes \"admin read\" operations that read metadata or configuration   information.     Also includes \"data read\" and \"data write\" operations that   read or write user-provided data.To receive Data Access audit logs, you must [   explicitly enable](/logging/docs/audit/configure-data-access#config-console-enable) them.\nFor fuller descriptions of the audit log types, see [Types of audit logs](/logging/docs/audit#types) .\n## Audited operations\nThe following table summarizes which API operations correspond to each audit log type in GKE:\n| Audit logs category  | GKE operations                                                            |\n|:--------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Admin Activity audit logs | io.k8s.authorization.rbac.v1 io.k8s.authorization.rbac.v1.roles google.container.v1.ProjectClusterService.ListUsableSubnetworks Any GKE API method that starts with Create, Update, Set, or Delete, such as google.container.v1.ClusterManager.CreateCluster. |\n| Data Access    | google.cloud.containersecurity.v1beta.ContainerSecurity.SearchClusterFindingSummaries google.cloud.containersecurity.v1beta.ContainerSecurity.ListFindings                         |\n**Note:** This table provides the most commonly audited operations; it isn't a complete list.\n## Audit log format\nAudit log entries include the following objects:\n- The log entry itself, which is an object of type [LogEntry](/logging/docs/reference/v2/rest/v2/LogEntry) . Useful fields include the following:- The`logName`contains the resource ID and audit log type.\n- The`resource`contains the target of the audited operation.\n- The`timeStamp`contains the time of the audited operation.\n- The`protoPayload`contains the audited information.\n- The audit logging data, which is an [AuditLog](/logging/docs/reference/audit/auditlog/rest/Shared.Types/AuditLog) object held in the `protoPayload` field of the log entry.\n- Optional service-specific audit information, which is a service-specific object. For earlier integrations, this object is held in the `serviceData` field of the `AuditLog` object; later integrations use the `metadata` field.\nFor other fields in these objects, and how to interpret them, review [Understand audit logs](/logging/docs/audit/understanding-audit-logs) .\n### Log name\nCloud Audit Logs log names include resource identifiers indicating the Google Cloud project or other Google Cloud entity that owns the audit logs, and whether the log contains Admin Activity, Data Access, Policy Denied, or System Event audit logging data.\nThe following are the audit log names, including variables for the resource identifiers:\n```\n projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\n projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Fdata_access\n projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Fsystem_event\n projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Fpolicy\n folders/FOLDER_ID/logs/cloudaudit.googleapis.com%2Factivity\n folders/FOLDER_ID/logs/cloudaudit.googleapis.com%2Fdata_access\n folders/FOLDER_ID/logs/cloudaudit.googleapis.com%2Fsystem_event\n folders/FOLDER_ID/logs/cloudaudit.googleapis.com%2Fpolicy\n billingAccounts/BILLING_ACCOUNT_ID/logs/cloudaudit.googleapis.com%2Factivity\n billingAccounts/BILLING_ACCOUNT_ID/logs/cloudaudit.googleapis.com%2Fdata_access\n billingAccounts/BILLING_ACCOUNT_ID/logs/cloudaudit.googleapis.com%2Fsystem_event\n billingAccounts/BILLING_ACCOUNT_ID/logs/cloudaudit.googleapis.com%2Fpolicy\n organizations/ORGANIZATION_ID/logs/cloudaudit.googleapis.com%2Factivity\n organizations/ORGANIZATION_ID/logs/cloudaudit.googleapis.com%2Fdata_access\n organizations/ORGANIZATION_ID/logs/cloudaudit.googleapis.com%2Fsystem_event\n organizations/ORGANIZATION_ID/logs/cloudaudit.googleapis.com%2Fpolicy\n```\n**Note:** The part of the log name following `/logs/` must be URL-encoded. The forward-slash character, `/` , must be written as `%2F` .\n### Service name\nGKE audit logs use one of the following service names:\n| Service name      | Display name         | Description                                                                                                                          |\n|:---------------------------------|:----------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| k8s.io       | Kubernetes         | The k8s.io service is used for Kubernetes audit logs. These logs are generated by the Kubernetes API Server component and they contain information about actions performed using the Kubernetes API. For example, any changes you make on a Kubernetes resource by using the kubectl command are recorded by the k8s.io service. Kubernetes audit log entries are useful for investigating suspicious API requests, for collecting statistics, or for creating monitoring alerts for unwanted API calls. |\n| container.googleapis.com   | Kubernetes Engine        | The container.googleapis.com service is used for GKE control plane audit logs. These logs are generated by GKE and contain information about actions performed using the GKE API. For example, any changes you perform on a GKE cluster configuration using a gcloud CLI are recorded by the container.googleapis.com service.                                            |\n| containersecurity.googleapis.com | Container Security API (GKE security posture) | The containersecurity.googleapis.com service is used for GKE security posture audit logs. These logs are generated by GKE security posture dashboard activity and contain information about data retrieved using the dashboard.                                                                    |\nFor a list of all the Cloud Logging API service names and their corresponding monitored resource type, see [Map services to resources](/logging/docs/api/v2/resource-list#service-names) .\n### Resource types\nGKE audit logs use the following resource types:\n| Resource type | Display name   | Description                                                    |\n|:-----------------|:-----------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| k8s_cluster  | Kubernetes Cluster  | Log entries written by the Kubernetes API server apply to the k8s_cluster resource type. These log entries describe operations on Kubernetes resources in your cluster, for example, Pods, Deployments, and Secrets. |\n| gke_cluster  | GKE Cluster Operations | Log entries written by the Kubernetes Engine API server apply to the gke_cluster resource. These log entries describe operations like cluster creation and deletion.             |\n| audited_resource | GKE Security Posture | Log entries written by the Kubernetes Engine API Security Posture API apply to the Finding resources for a given project & location. These log entries describe list and search operations on Security Posture findings. |\nFor a list of all the Cloud Logging monitored resource types and descriptive information, see [Monitored resource types](/logging/docs/api/v2/resource-list#resource-types) .\n### Caller identities\nThe IP address of the caller is held in the `RequestMetadata.caller_ip` field of the [AuditLog](/logging/docs/reference/audit/auditlog/rest/Shared.Types/AuditLog) object. Logging might redact certain caller identities and IP addresses.\nFor information about what information is redacted in audit logs, see [Caller identities in audit logs](/logging/docs/audit#user-id) .\n## Enable audit logging\nAdmin Activity audit logs are always enabled; you can't disable them.\nData Access audit logs are disabled by default and aren't written unless explicitly enabled (the exception is Data Access audit logs for BigQuery, which can't be disabled).\nFor information about enabling some or all of your Data Access audit logs, see [Enable Data Access audit logs](/logging/docs/audit/configure-data-access) .\n## Permissions and roles\n[IAM](/iam/docs) permissions and roles determine your ability to access audit logs data in Google Cloud resources.\nWhen deciding which [Logging-specific permissions and roles](/logging/docs/access-control#permissions_and_roles) apply to your use case, consider the following:\n- The Logs Viewer role ( `roles/logging.viewer` ) gives you read-only access to Admin Activity, Policy Denied, and System Event audit logs. If you have just this role, you cannot view Data Access audit logs that are in the `_Default` bucket.\n- The Private Logs Viewer role `(roles/logging.privateLogViewer` ) includes the permissions contained in `roles/logging.viewer` , plus the ability to read Data Access audit logs in the `_Default` bucket.Note that if these private logs are stored in user-defined buckets, then any user who has permissions to read logs in those buckets can read the private logs. For more information about log buckets, see [Routing and storage overview](/logging/docs/routing/overview) .\nFor more information about the IAM permissions and roles that apply to audit logs data, see [Access control with IAM](/logging/docs/access-control) .\n## View logs\nYou can query for all audit logs or you can query for logs by their [audit log name](#log_name) . The audit log name includes the [resource identifier](/resource-manager/docs/creating-managing-projects#identifying_projects) of the Google Cloud project, folder, billing account, or organization for which you want to view audit logging information. Your queries can specify indexed [LogEntry](/logging/docs/reference/v2/rest/v2/LogEntry) fields, and if you use the **Log Analytics** page, which supports SQL queries, then you can [view your query results as a chart](/logging/docs/analyze/charts) .\nFor more information about querying your logs, see the following pages:\n- [Build queries in the Logs Explorer](/logging/docs/view/building-queries) .\n- [Query and view logs in Log Analytics](/logging/docs/analyze/query-and-view) .\n- [Sample queries for security insights](/logging/docs/analyze/analyze-audit-logs) .\nIn the Google Cloud console, you can use the Logs Explorer to retrieve your audit log entries for your Google Cloud project, folder, or organization:\n **Note:** You can't view audit logs for Cloud Billing accounts in the Google Cloud console. You must use the API or the gcloud CLI.- In the navigation panel of the Google Cloud console, select **Logging** , and then select **Logs Explorer** : [Go to Logs Explorer](https://console.cloud.google.com/logs/query) \n- Select an existing Google Cloud project, folder, or organization.\n- To display all audit logs, enter either of the following queries into the query-editor field, and then click **Run query** :```\nlogName:\"cloudaudit.googleapis.com\"\n``````\nprotoPayload.\"@type\"=\"type.googleapis.com/google.cloud.audit.AuditLog\"\n```\n- To display the audit logs for a specific resource and audit log type, in the **Query builder** pane, do the following:- In **Resource type** , select the Google Cloud resource whose audit logs you want to see.\n- In **Log name** , select the audit log type that you want to see:- For Admin Activity audit logs, select **activity** .\n- For Data Access audit logs, select **data_access** .\n- For System Event audit logs, select **system_event** .\n- For Policy Denied audit logs, select **policy** .\n- Click **Run query** .\nIf you don't see these options, then there aren't any audit logs of that type available in the Google Cloud project, folder, or organization.If you're experiencing issues when trying to view logs in the Logs Explorer, see the [troubleshooting](/logging/docs/view/logs-explorer-interface#troubleshooting) information.For more information about querying by using the Logs Explorer, see [Build queries in the Logs Explorer](/logging/docs/view/building-queries) . For information about summarizing log entries in the Logs Explorer by using Duet AI, see [Summarize log entries with Duet AI assistance](/logging/docs/view/summarize-log-entries-duet-ai) .\nThe Google Cloud CLI provides a command-line interface to the Logging API. Supply a valid resource identifier in each of the log names. For example, if your query includes a , then the project identifier you supply must refer to the currently selected Google Cloud project.\nTo read your Google Cloud project-level audit log entries, run the following command:\n```\ngcloud logging read \"logName : projects/PROJECT_ID/logs/cloudaudit.googleapis.com\" \\\n --project=PROJECT_ID\n```\nTo read your folder-level audit log entries, run the following command:\n```\ngcloud logging read \"logName : folders/FOLDER_ID/logs/cloudaudit.googleapis.com\" \\\n --folder=FOLDER_ID\n```\nTo read your organization-level audit log entries, run the following command:\n```\ngcloud logging read \"logName : organizations/ORGANIZATION_ID/logs/cloudaudit.googleapis.com\" \\\n --organization=ORGANIZATION_ID\n```\nTo read your Cloud Billing account-level audit log entries, run the following command:\n```\ngcloud logging read \"logName : billingAccounts/BILLING_ACCOUNT_ID/logs/cloudaudit.googleapis.com\" \\\n --billing-account=BILLING_ACCOUNT_ID\n```\nAdd the [--freshness flag](/sdk/gcloud/reference/logging/read#--freshness) to your command to read logs that are more than 1 day old.\nFor more information about using the gcloud CLI, see [gcloud logging read](/sdk/gcloud/reference/logging/read) .\nWhen building your queries, supply a valid resource identifier in each of the log names. For example, if your query includes a , then the project identifier you supply must refer to the currently selected Google Cloud project.\nFor example, to use the Logging API to view your project-level audit log entries, do the following:- Go to the **Try this API** section in the documentation for the [entries.list](/logging/docs/reference/v2/rest/v2/entries/list) method.\n- Put the following into the **Request body** part of the **Try thisAPI** form. Clicking this [prepopulated form](/logging/docs/reference/v2/rest/v2/entries/list?apix_params=%7B%22resource%22%3A%7B%22resourceNames%22%3A%5B%22projects%2F%5BPROJECT_ID%5D%22%5D%2C%22pageSize%22%3A5%2C%22filter%22%3A%22logName%3D(projects%2F%5BPROJECT_ID%5D%2Flogs%2Fcloudaudit.googleapis.com%252Factivity%20OR%20projects%2F%5BPROJECT_ID%5D%2Flogs%2Fcloudaudit.googleapis.com%252Fsystem_events%20OR%20projects%2F%5BPROJECT_ID%5D%2Flogs%2Fcloudaudit.googleapis.com%252Fdata_access)%22%7D%7D) automatically fills the request body, but you need to supply a valid in each of the log names.```\n{\n \"resourceNames\": [ \"projects/PROJECT_ID\"\n ],\n \"pageSize\": 5,\n \"filter\": \"logName : projects/PROJECT_ID/logs/cloudaudit.googleapis.com\"\n}\n```\n- Click **Execute** .## Sample queries\nTo find audit logs for GKE, use the following queries in the Logs Explorer:\n| Query/filter name                                              | Expression                                                                        |\n|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Cluster created                                              | resource.type=\"gke_cluster\" (log_id(\"cloudaudit.googleapis.com/data_access\") OR log_id(\"cloudaudit.googleapis.com/activity\")) protoPayload.methodName:\"CreateCluster\" resource.labels.cluster_name=\"CLUSTER_NAME\"                       |\n| Cluster deleted                                              | resource.type=\"gke_cluster\" log_id(\"cloudaudit.googleapis.com/activity\") protoPayload.methodName:\"DeleteCluster\" severity=(NOTICE OR ERROR OR WARNING) resource.labels.cluster_name=\"CLUSTER_NAME\"                          |\n| Node pool created                                              | resource.type=\"gke_nodepool\" (log_id(\"cloudaudit.googleapis.com/data_access\") OR log_id(\"cloudaudit.googleapis.com/activity\")) protoPayload.methodName:\"ClusterManager.CreateNodePool\" resource.labels.cluster_name=\"CLUSTER_NAME\" resource.labels.nodepool_name=\"NODE_POOL_NAME\"      |\n| Node pool deleted                                              | resource.type=\"gke_nodepool\" log_id(\"cloudaudit.googleapis.com/activity\") protoPayload.methodName:\"ClusterManager.DeleteNodePool\" resource.labels.cluster_name=\"CLUSTER_NAME\" resource.labels.nodepool_name=\"NODE_POOL_NAME\"                    |\n| Node pool manually resized                                            | resource.type=\"gke_nodepool\" log_id(\"cloudaudit.googleapis.com/activity\") protoPayload.methodName:\"ClusterManager.SetNodePoolSize\" resource.labels.cluster_name=\"CLUSTER_NAME\" resource.labels.nodepool_name=\"NODE_POOL_NAME\"                    |\n| Cluster config updated                                             | resource.type=\"gke_cluster\" log_id(\"cloudaudit.googleapis.com/activity\") protoPayload.methodName:\"UpdateCluster\" protoPayload.request.update:* resource.labels.cluster_name=\"CLUSTER_NAME\"                            |\n| Node pool config updated                                            | resource.type=\"gke_nodepool\" log_id(\"cloudaudit.googleapis.com/activity\") protoPayload.methodName:\"UpdateNodePool\" protoPayload.request.upgradeSettings:* resource.labels.cluster_name=\"CLUSTER_NAME\" resource.labels.nodepool_name=\"NODE_POOL_NAME\"              |\n| Control plane upgraded                                             | resource.type=\"gke_cluster\" log_id(\"cloudaudit.googleapis.com/activity\") protoPayload.methodName:(\"UpdateCluster\" OR \"UpdateClusterInternal\") (protoPayload.metadata.operationType=\"UPGRADE_MASTER\" OR protoPayload.response.operationType=\"UPGRADE_MASTER\") resource.labels.cluster_name=\"CLUSTER_NAME\" |\n| Node pool upgraded                                              | resource.type=\"gke_nodepool\" log_id(\"cloudaudit.googleapis.com/activity\") protoPayload.methodName:(\"UpdateNodePool\" OR \"UpdateClusterInternal\") protoPayload.metadata.operationType=\"UPGRADE_NODES\" resource.labels.cluster_name=\"CLUSTER_NAME\" resource.labels.nodepool_name=\"NODE_POOL_NAME\"   |\n| Workload audit logs                                             | log_id(\"cloudaudit.googleapis.com/activity\") resource.type=\"k8s_cluster\" resource.labels.cluster_name=\"CLUSTER_NAME\" protoPayload.request.metadata.name=\"WORKLOAD_NAME\"                                 |\n| Node metadata update for node object                                         | resource.type=\"k8s_cluster\" log_id(\"cloudaudit.googleapis.com/activity\") protoPayload.methodName=\"io.k8s.core.v1.nodes.update\" resource.labels.cluster_name=\"CLUSTER_NAME\" resource.labels.location=\"LOCATION_NAME\"                      |\n| Changes to Role-Based Access Control, excluding automated system changes                                | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.methodName:\"io.k8s.authorization.rbac.v1\" NOT protoPayload.authenticationInfo.principalEmail:\"system\"                     |\n| Changes to Role-Based Access Control roles, excluding automated system changes                              | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.methodName:\"io.k8s.authorization.rbac.v1.roles\" NOT protoPayload.authenticationInfo.principalEmail:\"system\"                    |\n| Changes to Role-Based Access Control role bindings, excluding automated system changes                            | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.methodName:\"io.k8s.authorization.rbac.v1.rolebindings\" NOT protoPayload.authenticationInfo.principalEmail:\"system\"                  |\n| Certificate signing requests                                           | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.resourceName:\"certificates.k8s.io/v1beta1/certificatesigningrequests\"                             |\n| Unauthenticated web requests                                           | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.authenticationInfo.principalEmail:\"system:anonymous\"                                  |\n| kubelet bootstrap identity calls                                          | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.authenticationInfo.principalEmail:\"kubelet\"                                    |\n| Node authenticated requests                                           | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.authenticationInfo.principalEmail:\"system:node\"                                   |\n| Calls outside an IP address range                                          | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.requestMetadata.callerIp!=\"127.0.0.1\" protoPayload.requestMetadata.callerIp!=\"::1\" NOT protoPayload.requestMetadata.callerIp:\"IP_ADDRESS_PREFIX\"           |\n| Admin Activity audit log entries that apply to the k8s_cluster resource type and describe creating a Deployment                      | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.methodName:\"deployments.create\"                                       |\n| Admin Activity audit log entries that apply to the k8s_cluster resource type and have a principalEmail value of system:anonymous. These entries probably represent failed attempts to authenticate. | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.authenticationInfo.principalEmail=\"system:anonymous\"                                  |\n| Admin Activity audit log entries that apply to the gke_cluster resource type and describe cluster creation.                       | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"gke_cluster\" protoPayload.methodName=\"google.container.v1.ClusterManager.CreateCluster\" OR protoPayload.methodName=\"google.container.v1beta1.ClusterManager.CreateCluster\"           |\n| Admin Activity audit log entries that apply to the gke_cluster resource type and have a severity value of ERROR.                      | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"gke_cluster\" severity=\"ERROR\"                                              |\n| Admin Activity audit log entries that apply to the k8s_cluster resource type and describe a write request to a Secret.                    | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.methodName:\"io.k8s.core.v1.secrets\" NOT protoPayload.methodName:\"get\" NOT protoPayload.methodName:\"list\" NOT protoPayload.methodName:\"watch\"            |\n| Admin Activity audit log entries that apply to the k8s_cluster resource type and describe a Pod request from a particular user.                  | logName=\"projects/PROJECT_ID/logs/cloudaudit.googleapis.com%2Factivity\" resource.type=\"k8s_cluster\" protoPayload.methodName:\"io.k8s.core.v1.pods\" protoPayload.authenticationInfo.principalEmail=\"dev@example.com\"                      |\nTo use the sample queries, do the following:\n- Replace the variables with your own project information, then copy the expression using the clipboard icon .\n- In the navigation panel of the Google Cloud console, select **Logging** , and then select **Logs Explorer** : [Go to Logs Explorer](https://console.cloud.google.com/logs/query) \n- Enable **Show query** to open the query-editor field, then paste the expression into the query-editor field: \n- Click **Run query** . Logs that match your query are listed in the **Queryresults** pane.## Route audit logs\nYou can [route audit logs](/logging/docs/routing/overview) to supported destinations in the same way that you can route other kinds of logs. Here are some reasons you might want to route your audit logs:\n- To keep audit logs for a longer period of time or to use more powerful search capabilities, you can route copies of your audit logs to Cloud Storage, BigQuery, or Pub/Sub. Using Pub/Sub, you can route to other applications, other repositories, and to third parties.\n- To manage your audit logs across an entire organization, you can create [aggregated sinks](/logging/docs/export/aggregated_sinks) that can route logs from any or all Google Cloud projects in the organization.\n- If your enabled Data Access audit logs are pushing your Google Cloud projects over your log allotments, you can create sinks that exclude the Data Access audit logs from Logging.\nFor instructions about routing logs, see [Route logs to supported destinations](/logging/docs/export/configure_export_v2) .\n## Pricing\nFor more information about pricing, see [Cloud Logging pricing summary](/stackdriver/pricing#logs-costs) .\n## Setting up metrics and alerts\nTo set up [metrics](/logging/docs/logs-based-metrics) based on your log entries, you can use Cloud Monitoring. To set up [charts and alerts](/logging/docs/logs-based-metrics/charts-and-alerts) , you can use log-based metrics.\n## Audit policy\nThe Kubernetes audit policy determines which log entries are exported by the Kubernetes API server. The Kubernetes Engine audit policy determines which entries go to your Admin Activity audit log and which entries go to your Data Access audit log.\nFor more information about audit policies in Kubernetes Engine, see [Kubernetes Engine Audit Policy](/kubernetes-engine/docs/concepts/audit-policy) .", "guide": "Google Kubernetes Engine (GKE)"}