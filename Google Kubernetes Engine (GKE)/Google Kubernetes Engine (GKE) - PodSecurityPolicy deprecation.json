{"title": "Google Kubernetes Engine (GKE) - PodSecurityPolicy deprecation", "url": "https://cloud.google.com/kubernetes-engine/docs/deprecations/podsecuritypolicy", "abstract": "# Google Kubernetes Engine (GKE) - PodSecurityPolicy deprecation\nPodSecurityPolicy (beta) is deprecated in Kubernetes version 1.21 and removed in version 1.25. To learn more, refer to the [PodSecurityPolicy deprecation blogpost](https://kubernetes.io/blog/2021/04/06/podsecuritypolicy-deprecation-past-present-and-future/) . For Google Kubernetes Engine (GKE) clusters running version 1.25 or later, you can no longer use PodSecurityPolicy, and you must disable the feature before upgrading to versions 1.25 or later. For instructions, refer to [Migrate fromPodSecurityPolicy](/kubernetes-engine/docs/how-to/migrate-podsecuritypolicy#disable-psp) .\n**Important:** After January 8, 2024\u2014when [1.24 reaches end oflife](/kubernetes-engine/docs/release-schedule#schedule-for-release-channels) \u2014 GKE begins to automatically upgrade clusters still using version 1.24 and deprecated APIs (removed in version 1.25) to version 1.25. We extended this date from October 31, 2023 to minimize disruptions around the end-of-year holiday period, and will provide patches only for critical vulnerabilities during this extended period. To learn more about the GKE minor version lifecycle, see [GKE versioning andsupport](/kubernetes-engine/versioning) . GKE continues to [pauseautomaticupgrades](/kubernetes-engine/docs/deprecations#how_kubernetes_deprecations_work_with) until January 8, 2024 for clusters still using deprecated APIs removed in version 1.25, including [betaAPIs](/kubernetes-engine/docs/deprecations/apis-1-25) and [PodSecurityPolicy](/kubernetes-engine/docs/deprecations/podsecuritypolicy) . We recommend that you upgrade your clusters to version 1.25 as soon as possible as GKE minor versions that have reached end of life will no longer receive security patches and bug fixes.\n", "content": "## Alternatives to PodSecurityPolicy\nIf you want to continue using Pod-level security controls in GKE, we recommend one of the following solutions:\n- **Use the PodSecurity admission controller** : You can use the [PodSecurity admission controller](/kubernetes-engine/docs/how-to/podsecurityadmission) to apply Pod Security Standards to Pods running on your GKE Standard and Autopilot clusters. Pod Security Standards are predefined security policies that meet the high-level needs of Pod security in Kubernetes. These policies are cumulative, and range from being highly permissive to being highly restrictive.To migrate your existing PodSecurityPolicy configuration to `PodSecurity` , refer to [Migrate from PodSecurityPolicy](/kubernetes-engine/docs/how-to/migrate-podsecuritypolicy) .\n- **Use Policy Controller with the Pod Security Policy bundle** : Policy Controller lets you apply and enforce security policies in your GKE clusters. Policy Controller [bundles](/anthos-config-management/docs/concepts/policy-controller-bundles) , like the Pod Security Policy bundle, let you enforce the same validations as PodSecurityPolicy with capabilities such as dry-run and fine-grained control over resource coverage.For more information, refer to [Use Policy Controller's Pod Security Policy bundle](/anthos-config-management/docs/how-to/using-constraints-to-enforce-pod-security) .\n- **Use Gatekeeper** : GKE Standard clusters allow you to apply security policies using Gatekeeper. You can use Gatekeeper to enforce the same capabilities as PodSecurityPolicy, as well as take advantage of other functionality such as dry-run, gradual rollouts, and auditing.For more information, refer to [Apply custom Pod-level security policies using Gatekeeper](/kubernetes-engine/docs/how-to/pod-security-policies-with-gatekeeper) .\n- **Use GKE Autopilot clusters** : GKE Autopilot clusters implement many of the recommended security policies by default.For more information, refer to the [Autopilot overview](/kubernetes-engine/docs/concepts/autopilot-overview) .## View deprecation insights and recommendations\nYou can check which clusters use this deprecated feature by using [deprecation insights](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations#view-deprecation-insights-recs) . Deprecation insights for this feature are supported for clusters running any GKE version.", "guide": "Google Kubernetes Engine (GKE)"}