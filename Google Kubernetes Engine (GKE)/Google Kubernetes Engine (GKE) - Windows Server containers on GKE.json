{"title": "Google Kubernetes Engine (GKE) - Windows Server containers on GKE", "url": "https://cloud.google.com/kubernetes-engine/docs/concepts/windows-server-gke", "abstract": "# Google Kubernetes Engine (GKE) - Windows Server containers on GKE\n**Warning:** Windows Server Semi-Annual Channel (SAC) images aren't supported after August 9, 2022 because Microsoft is removing support for the SAC. For potential impact and migration instructions, refer to [Windows Server Semi-Annual Channel end of servicing](/kubernetes-engine/docs/deprecations/windows-server-sac) .\nThis page provides an overview of Windows Server containers in Google Kubernetes Engine (GKE). To learn how to create a cluster, see [Creating a cluster using Windows Server node pools](/kubernetes-engine/docs/how-to/creating-a-cluster-windows) .\n", "content": "## Overview\nUsing Windows Server containers on GKE enables you to take advantage of the benefits of Kubernetes: agility, speed of deployment and simplified management of your Windows Server applications. You can run your Windows Server and Linux containers side by side in the same cluster, which allows for a central management plane for both container platforms. Microsoft Hyper-V containers are not currently supported.\n## Node images\nYou can build your Windows Server container [node images](/kubernetes-engine/docs/concepts/node-images) using Windows Server Semi-Annual Channel (SAC) or Windows Server Long-Term Servicing Channel (LTSC). A single cluster can have multiple Windows Server node pools using different Windows Server versions, but each individual node pool can only use one Windows Server version. To learn more about the differences between these versions, see [Choosing your Windows Server node images](/kubernetes-engine/docs/how-to/creating-a-cluster-windows#choose_your_windows_server_node_image) .\n## Storage\nYour Windows Server containers can take advantage of many of the storage options that GKE provides. For an example of using GKE storage options with Windows, see [Local SSDs](/kubernetes-engine/docs/how-to/persistent-volumes/local-ssd) .\nWhen working with Windows Server containers, you must create a `StorageClass` object, and specify the name of that object in the `storageClassName` field of the `PersistentVolumeClaim` object because the `ext4` file storage type is not supported with Windows. If you are using a Compute Engine persistent disk, you must use NTFS as the file storage type.\nThe Compute Engine persistent disk CSI Driver is also available for Windows Server containers. For more details, see [Using the Compute Engine persistent disk CSI Driver](/kubernetes-engine/docs/how-to/persistent-volumes/gce-pd-csi-driver) .\n## Security\nLike Linux containers, Windows containers provide a process and resource isolation boundary. Windows Server containers can be used for [enterprise multi-tenancy](/kubernetes-engine/docs/concepts/multitenancy-overview#enterprise_multi-tenancy) . However, because Microsoft does not [intend to service](https://www.microsoft.com/en-us/msrc/windows-security-servicing-criteria) Windows container escape vulnerabilities, the use of Windows nodes is not recommended in hostile [multi-tenancy](/kubernetes-engine/docs/concepts/multitenancy-overview) scenarios or those where differing risk levels are needed. Instead, give each application or development team a separate cluster and Google Cloud project to achieve isolation.\n## Feature limitations\nThere are some Kubernetes features that are not yet supported for Windows Server containers. In addition, some features are Linux-specific and do not work for Windows. For the complete list of supported and unsupported Kubernetes features, see the [Kubernetes documentation](https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#supported-functionality-and-limitations) .\nIn addition to the unsupported Kubernetes features, there are some GKE features that are not supported.\nFor GKE clusters, the following features are not supported with Windows Server node pools:\n- [Cloud TPUs](/tpu/docs/tpus) (`--enable-tpu`)\n- [Image streaming](/kubernetes-engine/docs/how-to/image-streaming) \n- [Ingress with Network Endpoint Groups](/kubernetes-engine/docs/concepts/ingress#container-native_load_balancing) \n- [Gateway](/kubernetes-engine/docs/concepts/gateway-api) \n- [Intranode visibility](/kubernetes-engine/docs/how-to/intranode-visibility) (`--enable-intra-node-visibility`)\n- [IP masquerade agent](/kubernetes-engine/docs/how-to/ip-masquerade-agent) \n- [Kubernetes alpha cluster](/kubernetes-engine/docs/concepts/alpha-clusters) (`--enable-kubernetes-alpha`)\n- [Node Local DNS cache](/kubernetes-engine/docs/how-to/nodelocal-dns-cache) \n- [Private use of Class E IP addresses](/kubernetes-engine/docs/how-to/alias-ips#enable_reserved_ip_ranges) \n- [Private use of public IP addresses](/kubernetes-engine/docs/how-to/alias-ips#enable_pupis) \n- [Network policy logging](/kubernetes-engine/docs/how-to/network-policy-logging) \n- [Kubernetes service.spec.sessionAffinity](https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies) \n- [GPUs](/compute/docs/gpus) (`--accelerator`)\n- [Setting the maximum Pods per node greater than the default limit of 110](/kubernetes-engine/docs/how-to/flexible-pod-cidr) \n- [Filestore CSI driver](/kubernetes-engine/docs/how-to/persistent-volumes/filestore-csi-driver) \n- Docker-based [CloudSQL Auth proxy](/sql/docs/mysql/sql-proxy) \n[Local External Traffic Policy](/kubernetes-engine/docs/how-to/service-parameters#externalTrafficPolicy) on Windows node pool is only supported with GKE version v1.23.4-gke.400 or later.\nOther Google Cloud products that you want to use with GKE clusters might not support Windows Server node pools. For specific limitations, refer to the documentation of that product.\n## Resources\nThe following sections provide links to relevant resources for Windows Server containers on GKE.\n### Discover\nReview these resources to discover information about Windows on GKE:\n- Read the [Run Windows Server containers on GKE](/blog/products/containers-kubernetes/run-windows-server-containers-on-gke) blog.\n- Read the [Windows Server containers on GKE now GA](/blog/products/containers-kubernetes/windows-server-containers-on-gke-now-ga) blog.\n- Read the [Windows Server support comes to Google Distributed Cloud Virtual](/blog/topics/anthos/windows-server-support-comes-to-anthos-on-prem) blog.\n- Read the [Migrating Legacy OSes to Google Cloud](/resources/forrester-cost-savings-of-migrating-os-to-cloud-tei-study) case study.\n### Get started\nConsider these resources for getting started:\n- Watch the [How to modernize and run Windows apps in GKE Enterprise GKE](https://www.youtube.com/watch?v=w6tzIjZhTIk) video.\n- Watch the [Migrate, Manage & Modernize: Windows Workloads Powered by GKE and GKE Enterprise](https://cloudonair.withgoogle.com/events/gke-anthos) webinar.\n- Try out the [Running Windows containers on Google Cloud](https://codelabs.developers.google.com/codelabs/cloud-windows-containers-kubernetesengine#0) codelab.\n- Try out the [Windows on Google Cloud](https://www.qwiklabs.com/quests/27) lab.\n- Try out the [New Microsoft and Windows on Google Cloud Demo Center](/blog/topics/windows/new-microsoft-and-windows-on-google-cloud-demo-center) demos.\n- Learn how to [Create a cluster using Windows Server node pools](/kubernetes-engine/docs/how-to/creating-a-cluster-windows) .\n### Create & deploy\nFor guidance on creating and deploying your applications, see these pages:\n- [Deploying a Windows Server application](/kubernetes-engine/docs/how-to/deploying-windows-app) \n- [Deploying a stateful application](/kubernetes-engine/docs/how-to/stateful-apps) \n- [Building Windows Server multi-arch images](/kubernetes-engine/docs/tutorials/building-windows-multi-arch-images) \n- [Using the Compute Engine persistent disk CSI Driver](/kubernetes-engine/docs/how-to/persistent-volumes/gce-pd-csi-driver#using_the_for_windows_clusters) \n### Integrate with Active Directory\nFor guidance on Active Directory integration, see these pages:\n- [Best practices for running Active Directory on Google Cloud](/compute/docs/instances/windows/best-practices) \n- [Configure Windows Server nodes to automatically join an Active Directory domain](/kubernetes-engine/docs/how-to/auto-join-windows-nodepools) \n- [Deploy ASP.NET apps with Windows Authentication in GKE Windows containers](/kubernetes-engine/docs/how-to/deploying-aspnet-with-windows-authentication-in-gke-windows-containers) \n### Troubleshoot\nFor help with troubleshooting, see [Collecting diagnostic information](/compute/docs/instances/collecting-diagnostic-information) .\n### Explore\nTo explore and learn about using GKE Enterprise for Windows, see these resources:\n- Learn about [Migrate to Containers](/migrate/anthos/docs) for migrating Windows workloads.\n- Learn about using Windows node pools in [GKE on VMware](/anthos/clusters/docs/on-prem/1.8/how-to/user-guide-for-windows-server-os-node-pools) .\n### Partner solutions\nWhen you modernize your applications, you also want to incorporate them into an end-to-end DevOps management experience that works with your existing tooling and workflows. To that end, Google has worked with several partners to make sure that your build, test, deploy, config and monitoring applications work well with Windows containers. Here are some use cases and partner solutions that we've tested to support Windows containers in GKE:\n| Use case      | Description                                                    | Partner         |\n|:-----------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------|\n| CI/CD      | Partner's CI/CD solution can build, test and deploy applications running on Windows containers.                              | CircleCI CloudBees Codefresh Gitlab JFrog |\n| Observability    | Partner's ITOps and application performance management (APM) solution can collect telemetry and provide visibility (dashboards, reports, insights) for infrastructure and applications managed on Windows containers. | Datadog New Relic       |\n| Config management and policy | Patner's solution provides secrets management or provisioning capabilities for Windows applications on Google Cloud.                         | Chef          |\n| Security      | Patner's solution can secure the development and configuration of an application that runs on Windows containers.                          | Aqua Prisma Cloud       |", "guide": "Google Kubernetes Engine (GKE)"}