{"title": "Google Kubernetes Engine (GKE) - GKE overview", "url": "https://cloud.google.com/kubernetes-engine/docs/concepts/kubernetes-engine-overview", "abstract": "# Google Kubernetes Engine (GKE) - GKE overview\nThis page describes Google Kubernetes Engine (GKE), a managed [Kubernetes](https://kubernetes.io) service that you can use to deploy and operate containerized applications at scale using Google's infrastructure. This page is intended for platform administrators who are looking for a scalable, automated, managed Kubernetes solution. You should already be familiar with [Kubernetes concepts](https://kubernetes.io/docs/concepts/overview/components/) .\nGKE is a Google-managed implementation of the [Kubernetes](https://kubernetes.io) open source container orchestration platform. Kubernetes was developed by Google, drawing on years of experience operating production workloads at scale on [Borg](https://research.google/pubs/pub43438/) , our in-house cluster management system.\n", "content": "## When to use GKE\nGKE is ideal if you need a platform that lets you configure the infrastructure that runs your containerized apps, such as networking, scaling, hardware, and security. GKE provides the operational power of Kubernetes while managing many of the underlying components, such as the control plane and nodes, for you.\n### Benefits of GKE\nThe following table describes some of the benefits of using GKE as your managed Kubernetes platform:\n| GKE benefits     | GKE benefits.1                                                                                                                                                                                                 |\n|:-----------------------------||\n| Platform management   | Fully-managed nodes in GKE Autopilot mode with built-in hardening and best practice configurations automatically applied. Managed upgrade experience with release channels to improve security, reliability, and compliance. Flexible maintenance windows and exclusions that let you configure upgrade type and scope to meet business needs and architecture constraints. In GKE Standard mode, flexible node upgrade strategies to optimize availability and manage disruptions. Automatic scaling of nodes based on the number of Pods in the cluster with Autopilot mode or with node auto-provisioning in Standard mode. Node auto-repair to maintain node health and availability. Built-in logging and monitoring. Google Cloud integrated CI/CD options with Cloud Build and Cloud Deploy. |\n| Improved security posture | Hardened node operating system for apps: Container-Optimized OS. Built-in security measures. Automatic upgrades to new GKE versions. Integrated security posture monitoring tooling with the security posture dashboard. Google Cloud logging and monitoring integrations with Google Cloud Observability.                                                                                                                          |\n| Cost optimization   | In Autopilot mode, pay only for the compute resources your running Pods request. In GKE Standard mode, you pay for all resources on nodes, regardless of Pod requests. Save costs by running fault-tolerant workloads, such as batch jobs, on Spot Pods. Minimized operational overhead in Autopilot mode because Google manages both the nodes and the control plane.                                                                                                          |\n| Reliability and availability | >99% monthly uptime SLO. Pod-level SLA in Autopilot clusters because Google manages the nodes. Highly-available control plane and worker nodes in Autopilot mode and in regional Standard clusters. Proactive monitoring and recommendations to mitigate potential workload disruptions caused by upcoming deprecations. Multi-cluster Service capabilities.                                                                                                            |\n### Use cases for GKE\nGKE and Kubernetes are used in a variety of industries, including robotics, healthcare, retail, education, gaming, and financial services. Examples of workloads you can run include:\n- [AI and ML operations](/kubernetes-engine/docs/integrations/ai-infra) \n- [Data processing at scale](/kubernetes-engine/docs/integrations/data) \n- Scalable [online games platforms](https://agones.dev/site/docs/installation/creating-cluster/gke/) \n- Reliable applications under heavy load\nFor case studies by industry and application, refer to [Google Cloud customers](/customers#more-customer-stories) .\n## How GKE works\nA GKE environment consists of , which are [Compute Enginevirtual machines (VMs)](/compute) , that are grouped together to form a . You package your apps (also called ) into containers. You deploy sets of containers as to your nodes. You use the Kubernetes API to interact with your workloads, including administering, scaling, and monitoring.\n**Note:** If you run your workloads directly in VMs instead of containers, use [Migrate for GKE](/kubernetes-engine/docs/concepts/migrate-workloads) to containerize the workloads without having to rewrite apps or modify source code.\nKubernetes clusters have a set of management nodes called the , which run system components such as the Kubernetes API server. In GKE, Google manages the control plane and system components for you. In Autopilot mode, which is the recommended way to run GKE, Google also manages your worker nodes. Google automatically upgrades component versions for improved stability and security, ensuring high availability, and ensuring integrity of data stored in the cluster's persistent storage.\nFor more information, refer to [GKE cluster architecture](/kubernetes-engine/docs/concepts/cluster-architecture) .\n### Kubernetes versions and features\nGKE automatically upgrades your control plane to new Kubernetes versions that add new features and improvements in the open source project. The Kubernetes version selected for auto-upgrades depends on the stable version in the GKE release channel you select when you create the cluster. You can also [manually upgrade your control plane](/kubernetes-engine/docs/how-to/upgrading-a-cluster#upgrade_cp) to a different Kubernetes version than the version GKE selects for an upgrade. For detailed information on versions and upgrades, refer to the [release notes](/kubernetes-engine/docs/release-notes) and [GKE versioning and upgrades](/kubernetes-engine/versioning-and-upgrades) . If you use GKE Standard mode and don't enroll in a release channel, you won't get automatic upgrades.\nGKE includes most and Kubernetes features. If you want to try less stable Kubernetes features in the stage, use [alpha Standard clusters](/kubernetes-engine/docs/concepts/alpha-clusters) .\n### Modes of operation\nGKE has the Autopilot and Standard , which offer you different levels of flexibility, responsibility, and control. We recommend the fully-managed [Autopilot mode](/kubernetes-engine/docs/concepts/autopilot-overview) , in which Google Cloud manages your nodes for you and provides a workload-focused, cost-optimized, production-ready experience.\nIf you want more information before you choose a mode, refer to [Choose a GKE mode of operation](/kubernetes-engine/docs/concepts/choose-cluster-mode) .\n## Get started with GKE\nTo start using GKE, try the [quickstart](/kubernetes-engine/docs/deploy-app-cluster) to deploy a containerized web application. Then, read the [Autopilot overview](/kubernetes-engine/docs/concepts/autopilot-overview) , which has guidance and resources for planning and operating your platform.\n## What's next\n- [Learn how to deploy a containerized application in GKE](/kubernetes-engine/docs/deploy-app-cluster) .\n- [Learn more about types of clusters](/kubernetes-engine/docs/concepts/types-of-clusters) .\n- [Learn more about Kubernetes](https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/) .", "guide": "Google Kubernetes Engine (GKE)"}