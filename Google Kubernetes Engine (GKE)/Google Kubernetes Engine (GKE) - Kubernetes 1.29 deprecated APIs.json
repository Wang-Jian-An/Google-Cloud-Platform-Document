{"title": "Google Kubernetes Engine (GKE) - Kubernetes 1.29 deprecated APIs", "url": "https://cloud.google.com/kubernetes-engine/docs/deprecations/apis-1-29", "abstract": "# Google Kubernetes Engine (GKE) - Kubernetes 1.29 deprecated APIs\nThis page explains how to prepare clusters for upgrades to GKE version 1.29. You can find API clients making calls to [deprecated APIs removedin1.29](https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.29.md#changelog-since-v1280) and update those clients to use GA APIs. For more detailed information, see the [Kubernetes deprecated API migrationguide](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-29) .\n", "content": "## Removed APIs in version 1.29\nThe deprecated APIs in Kubernetes version 1.29 are either Beta APIs that have graduated to GA (for example `v2` ) or from one Beta version to another (for example, `v1beta1` to `v1beta2` ). The GA APIs provide [longer-term compatibilityguarantees](https://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-parts-of-the-api) and should be used in place of the deprecated Beta APIs.\nAll existing objects for APIs that have graduated to new versions can be interacted with by using the updated APIs.\n**Important:** Before upgrading to 1.29, you should update API clients and manifests to use the updated APIs.\n### Flow control resources\nThe `flowcontrol.apiserver.k8s.io/v1beta2` API version of FlowSchema and PriorityLevelConfiguration is no longer served as of v1.29.\nMigrate manifests and API clients to use the `flowcontrol.apiserver.k8s.io/v1` API version, available since v1.29, or the `flowcontrol.apiserver.k8s.io/v1beta3` API version, available since v1.26.\nAll existing persisted objects are accessible with the new API.\nThe `flowcontrol.apiserver.k8s.io/v1` API version has the following notable changes:\n- The PriorityLevelConfiguration`spec.limited.assuredConcurrencyShares`field is renamed to`spec.limited.nominalConcurrencyShares`and only defaults to 30 when unspecified, and an explicit value of 0 is not changed to 30.\nThe `flowcontrol.apiserver.k8s.io/v1beta3` API version has the following notable changes:\n- The PriorityLevelConfiguration`spec.limited.assuredConcurrencyShares`field is renamed to`spec.limited.nominalConcurrencyShares`.## Preparing to upgrade to version 1.29\nYou don't need to delete and recreate any of your API objects. All existing persisted API objects for APIs that graduated to GA can already be read and updated using the new API versions.\nHowever, we recommend that you migrate your clients and manifests before upgrading to Kubernetes 1.29. To learn more, see [Kubernetes Deprecated APIMigrationGuide](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#what-to-do) .\nYou can [view deprecation insights andrecommendations](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations#view-deprecation-insights-recs) to determine if your cluster is using Kubernetes 1.29 deprecated APIs. GKE generates deprecation insights when user agents call deprecated APIs, not from the configuration of your Kubernetes objects.\n**Warning:** If you don't update a client or manifest before the 1.29 upgrade, it won't be able to read or modify existing objects or create new objects. The client or manifest will only be able to read, modify, or create objects once you update it.\n## Find clusters using deprecated APIs\nYou can find which clusters are using deprecated APIs from [deprecation insights](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations) . Deprecation insights also provide information such as which API clients are calling the deprecated APIs in your cluster.\nYou can also use audit logs to find which clients are making calls to deprecated APIs.\n### Locate API clients making write calls to deprecated APIs\nFor clusters with Google Cloud Observability enabled, you can use the following [Admin Activity audit log](/kubernetes-engine/docs/how-to/audit-logging#viewing_logs) query to show the use of deprecated APIs by user agents that are not Google-managed:\n```\nresource.type=\"k8s_cluster\"\nlabels.\"k8s.io/removed-release\"=\"DEPRECATED_API_MINOR_VERSION\"\nprotoPayload.authenticationInfo.principalEmail:(\"system:serviceaccount\" OR \"@\")\nprotoPayload.authenticationInfo.principalEmail!~(\"system:serviceaccount:kube-system:\")\n```\nReplace `` with the minor version where the deprecated API is removed, for example `1.22` .\nAdmin Activity audit logs are automatically enabled for GKE clusters. With this query, the logs show user agents making write calls to the deprecated APIs.\n### Locate API clients making read calls to deprecated APIs\nBy default, audit logs show only write calls to the deprecated APIs. To also show read calls to deprecated APIs, configure Data Access audit logs.\n**Caution:** If you enable additional audit logs, this might incur additional [logging costs](/stackdriver/pricing#logging-pricing-summary) . The volume of ingested Data Access audit logs counts toward the Cloud Logging [logs ingestion quota](/logging/quotas#api-limits) .\nFollow the instructions to [Configure Data Access audit logs with the Google Cloud console](/logging/docs/audit/configure-data-access#config-console) . In the Google Cloud console, select the Kubernetes Engine API. In the Log Types tab in the information panel, select `Admin Read` and `Data Read` .\nWith these logs enabled, you can now use the original query to see both read calls and write calls to the deprecated APIs.\n### Upgrading third-party components\n[Deprecation insights](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations) might display results for third-party agents that make calls to deprecated APIs in your cluster.\nTo resolve third-party agents calling deprecated APIs, we recommend the following best practices:\n- Check with your third-party software provider for an updated version.\n- Upgrade the third-party software to the latest version. If you cannot upgrade the software, you should test whether upgrading GKE to the version with the removed deprecated APIs would break your service.\nWe recommend that you perform this upgrade and the GKE version upgrade on a staging cluster to monitor for disruptions before you upgrade your production clusters.\n## Update clusters impacted by deprecations\nTo upgrade clusters impacted by deprecations, perform the following steps:\n- Check which user agents use the deprecated APIs in the [logs](#location-api-clients-deprecated-apis-write-calls) .\n- Update the user agents that use the deprecated APIs to use supported API versions.\n- Update any third-party software that calls deprecated APIs to the latest versions.\n- Upgrade a test cluster and test your application in a testing environment before upgrading your production cluster to reduce the risk of disruptions when deprecated APIs are no longer available.\n- If you can't update an affected user agent, upgrade a separate test cluster to check whether the upgrade causes disruptions. If the upgrade doesn't cause disruptions, you can [upgrade your clustermanually](/kubernetes-engine/docs/how-to/upgrading-a-cluster) .\n- After you update all of the user agents, GKE waits until it has no longer observed use of deprecated APIs for 30 days, and then unblocks automatic upgrades. Automatic upgrades proceed according to the [releaseschedule](/kubernetes-engine/docs/release-schedule) .## Resources\nMore information is available in the OSS Kubernetes documentation:\n- [Kubernetes Blog:Kubernetes Removals, Deprecations, and Major Changes inKubernetes1.29](https://kubernetes.io/blog/2023/11/16/kubernetes-1-29-upcoming-changes) \n- [Kubernetes 1.29 releasenotes](https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.29.md#changelog-since-v1280) \n- [Kubernetes Deprecated API MigrationGuide](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-29)", "guide": "Google Kubernetes Engine (GKE)"}