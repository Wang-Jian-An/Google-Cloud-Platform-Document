{"title": "Google Kubernetes Engine (GKE) - Use dedicated Persistent Disks as ephemeral volumes", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/generic-ephemeral-volumes", "abstract": "# Google Kubernetes Engine (GKE) - Use dedicated Persistent Disks as ephemeral volumes\nThis page shows you how to use external storage hardware, such as Compute Engine Persistent Disks, as ephemeral volumes in your Google Kubernetes Engine (GKE) workloads. You should already be familiar with Kubernetes [Volumes](https://kubernetes.io/docs/concepts/storage/volumes/) and [StorageClasses](https://kubernetes.io/docs/concepts/storage/storage-classes/) .\n", "content": "## When to use ephemeral storage in Kubernetes\nEphemeral storage is useful in any situation where your workloads only need the data during the lifecycle of the application, such as for data-processing pipelines, machine learning jobs, batch processing, local caching, or analytics. By default, part of the GKE node boot disk is available to use as ephemeral storage in your Pods. This approach often requires careful space planning.\nKubernetes [generic ephemeral volumes](https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes) let you explicitly request ephemeral storage for your Pods by using PersistentVolumeClaims. GKE dynamically provisions Compute Engine [Persistent Disks](/compute/docs/disks/persistent-disks) and attaches the disks to your nodes. This type of ephemeral storage is useful in situations like the following:\n- Your workloads have high performance requirements, so you need to control the storage hardware.\n- You need short-term, container-specific ephemeral storage.\n- You want to avoid using`emptyDir`to provision ephemeral storage.`emptyDir`volumes are still useful in situations where you want multiple containers to share the data in the ephemeral storage.\n- You want more ephemeral storage capacity than the GKE built-in defaults.\n- You want to avoid having to plan your node boot disk size and type in advance for Standard mode GKE clusters.## Ephemeral storage types in GKE\nIn general, you can use boot disk storage capacity or dedicated Persistent Disks as ephemeral storage in your Pods and containers. The following table describes the differences:\n| Storage type     | How to use                                                                     | Description                                                                                                                                                            |\n|:-----------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------||\n| Boot disk - Persistent Disks | Mount a volume using emptyDir in the Pod specification and request the capacity that you need. For instructions, see Creating volumes.                                     | The requested ephemeral storage is taken from a reserved portion of the node boot disk. This is the default in both Autopilot and Standard clusters. Use when Pods have small ephemeral storage requests or when you want to share the ephemeral data between multiple containers in the Pod. Autopilot The request must be between 10\u00a0MiB and 10\u00a0GiB. The storage hardware type is pre-configured. Standard No size limit, but requires careful planning of node boot disk size and storage hardware type. For details about how GKE calculates the ephemeral storage reservation in the node boot disk, see Local ephemeral storage reservation. |\n| Local SSD disks    | Create a node pool with attached Local SSD disks and a compatible machine series. Mount a volume using emptyDir with the required capacity. Use a nodeSelector to place Pods on nodes with attached Local SSD disks. For instructions, see Provision ephemeral storage with local SSDs. | Local SSD disks use fixed 375\u00a0GB increments that are supported in Standard mode GKE clusters and in Autopilot nodes that run A100 (80\u00a0GB) GPUs. Use when you need ephemeral storage that has high throughput. For details, see About local SSDs for GKE.                                                                                                |\n| Dedicated Persistent Disks | Optionally, create a Kubernetes StorageClass for the hardware. Mount a volume using the ephemeral volume type in the Pod specification. This document provides instructions to request this ephemeral storage type.                  | Google Cloud dynamically provisions the requested external hardware, attached it to your nodes, and mounts the requested volume into your Pod. Use when Pods have large ephemeral storage requests or when you want to control the underlying Persistent Disk type. These volumes have the following properties: Up to 64\u00a0TiB in Autopilot mode and Standard mode Specialized hardware such as SSD-backed volumes supported. Network-attached storage. Uses Kubernetes Volumes to get storage, instead of using emptyDir to share the node boot disk. For details about this ephemeral volume type, see Generic ephemeral volumes.    |\n## Pricing\nStorage that you provision through generic ephemeral volumes as described in this guide is billed based on [Compute Engine disk pricing](/kubernetes-engine/docs/how-to/h/compute/all-pricing#disk) .\n## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.\n- Ensure that you have a GKE Autopilot or Standard cluster running version 1.23 or later.\n- Ensure that you have enough quota in your Google Cloud project for the storage hardware. To manage your quota, see [View the quotas for your project](/docs/quota_detail/view_manage#viewing_all_quota_console) .## Create a StorageClass\nCreating a custom Kubernetes StorageClass lets you specify the type of storage to provision based on your price and performance requirements. This step is optional but recommended. If you want to use the GKE default StorageClass, which has the `pd-balanced` Persistent Disk type, skip this step.\n- Save the following manifest as `ephemeral-pd-class.yaml` :```\napiVersion: storage.k8s.io/v1kind: StorageClassmetadata:\u00a0 name: ephemeral-ssdprovisioner: pd.csi.storage.gke.iovolumeBindingMode: WaitForFirstConsumerallowVolumeExpansion: trueparameters:\u00a0 type: STORAGE_TYPE\n```Replace `` with the name of the Persistent Disk type that you want, like `pd-ssd` . For a list of supported types, see [Persistent Disk types](/compute/docs/disks#disk-types) in the Compute Engine documentation.\n- Create the StorageClass:```\nkubectl create -f ephemeral-pd-class.yaml\n```## Request ephemeral storage capacity in a Pod\nTo provision, attach, and use external hardware as ephemeral storage, add the corresponding volume to your Pod manifest and add a volume mount to the container specification.\n- Save the following manifest as `ephemeral-ssd-deployment.yaml` :```\napiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: ephemeral-deploymentspec:\u00a0 replicas: 1\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 storage: ephemeral\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 storage: ephemeral\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: ephemeral-container\u00a0 \u00a0 \u00a0 \u00a0 image: nginx\u00a0 \u00a0 \u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cpu: 500m\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: 2Gi\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ephemeral-storage: 2Gi\u00a0 \u00a0 \u00a0 \u00a0 volumeMounts:\u00a0 \u00a0 \u00a0 \u00a0 - mountPath: \"/short-term\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: ephemeral-volume\u00a0 \u00a0 \u00a0 volumes:\u00a0 \u00a0 \u00a0 - name: ephemeral-volume\u00a0 \u00a0 \u00a0 \u00a0 ephemeral:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 volumeClaimTemplate:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 type: ephemeral\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 accessModes: [\"ReadWriteOnce\"]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 storageClassName: \"ephemeral-ssd\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 storage: 1Ti\n```This manifest creates a new Kubernetes PersistentVolumeClaim that requests a new PersistentVolume named `ephemeral-volume` with the following properties:- **spec.volumes.ephemeral:** The`ephemeral`volume type.\n- **.spec.accessModes:** The volume access mode, which determines read-write access from Pods and volume sharing between nodes. This examples uses`ReadWriteOnce`, which mounts the PersistentVolume to a single node for access by one or more Pods on the node. For details, see [Access modes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) .\n- **.spec.storageClassName:** Optionally, the name of the StorageClass that you created. If you omit this field, GKE uses the default StorageClass and provisions a`pd-balanced`Persistent Disk.\n- **.spec.resources.requests.storage:** The storage capacity that you want.\n- Create the Deployment:```\nkubectl create -f ephemeral-ssd-deployment.yaml\n```\nGKE provisions a Compute Engine disk that meets the requirements of the PersistentVolumeClaim and attaches the disk to the node. GKE mounts the volume into the Pod and provides the requested capacity to the container.\n## Verify that GKE mounted an ephemeral volume\n- Create a shell session in the Pod:```\nkubectl exec -it deploy/ephemeral-deployment -- bash\n```\n- Check the mounted volumes:```\ndf -h\n```The output is similar to the following:```\nFilesystem    Size  Used Available Use% Mounted on\n...\n/dev/sdb    1006.9G  28.0K 1006.8G 0% /short-term\n/dev/sda1    94.3G  3.6G  90.6G 4% /etc/hosts\n/dev/sda1    94.3G  3.6G  90.6G 4% /dev/termination-log\n/dev/sda1    94.3G  3.6G  90.6G 4% /etc/hostname\n/dev/sda1    94.3G  3.6G  90.6G 4% /etc/resolv.conf\n...\n```\n- Exit the shell session:```\nexit\n```\n**Success:** You dynamically provisioned external storage hardware and mounted it to your Kubernetes workload as ephemeral storage.\n## What's next\n- [Learn about the available storage options in GKE](/kubernetes-engine/docs/concepts/storage-overview)", "guide": "Google Kubernetes Engine (GKE)"}