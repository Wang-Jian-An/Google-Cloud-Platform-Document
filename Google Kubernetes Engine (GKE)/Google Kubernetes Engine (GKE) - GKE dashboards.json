{"title": "Google Kubernetes Engine (GKE) - GKE dashboards", "url": "https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards", "abstract": "# Google Kubernetes Engine (GKE) - GKE dashboards\nThis page provides an overview of the Google Kubernetes Engine (GKE) dashboards available in the Google Cloud console.\n", "content": "## Overview\nThe Google Cloud console offers useful dashboards for your project's GKE clusters and their resources. You can use these dashboards to view, inspect, manage, and delete resources in your clusters. You can also create [Deployments](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/) from the [Workloads](https://console.cloud.google.com/kubernetes/workload) dashboard.\nIn conjunction with the `gcloud` and `kubectl` command-line tools, the GKE dashboards are helpful for DevOps workflows, troubleshooting issues, and when working with multiple GKE clusters or [Google Cloud projects](/resource-manager/docs/creating-managing-projects) . Rather than using the command-line to query clusters for information about their resources, you can use these dashboards to get information about all resources in every cluster quickly and easily.\nThe following dashboards are available for GKE:\n- [GKE Enterprise overview](https://console.cloud.google.com/kubernetes/overview) displays an overview of your fleet.\n- [Kubernetes clusters](https://console.cloud.google.com/kubernetes/list) displays the [clusters](/kubernetes-engine/docs/concepts/cluster-architecture) in your current project. Displays each cluster's name, [compute zone](/compute/docs/regions-zones) , cluster size, total cores, total memory, node version, outstanding notifications, and [labels](/kubernetes-engine/docs/how-to/creating-managing-labels) .\n- [Workloads](https://console.cloud.google.com/kubernetes/workload) displays workloads ( [Deployment](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/) , [StatefulSet](/kubernetes-engine/docs/concepts/statefulset) , [DaemonSet](/kubernetes-engine/docs/concepts/daemonset) , [Job](https://kubernetes.io/docs/concepts/workloads/controllers/job/) , and [Pod](https://kubernetes.io/docs/concepts/workloads/pods/) resources) deployed to clusters in your current project. Includes each workload's name, status, type, number of running and total requested Pods, namespace, and cluster. Features a YAML-based text editor for inspecting and editing deployed resources, and a Deploy mechanism for creating [stateless applications](/kubernetes-engine/docs/how-to/stateless-apps) in your clusters.\n- [Services](https://console.cloud.google.com/kubernetes/discovery) displays your project's [Service](/kubernetes-engine/docs/concepts/service) and [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) resources. Displays each resource's name, status, type, endpoints, number of running and total requested Pods, namespace, and cluster.\n- [Secrets & ConfigMaps](https://console.cloud.google.com/kubernetes/config) displays your project's [Secret](https://kubernetes.io/docs/concepts/configuration/secret/) and [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) resources.\n- [Storage](https://console.cloud.google.com/kubernetes/storage) displays [PersistentVolumeClaim](/kubernetes-engine/docs/concepts/persistent-volumes) and [StorageClass](/kubernetes-engine/docs/concepts/persistent-volumes#storageclasses) resources associated with your clusters.\n- [Object Browser](https://console.cloud.google.com/kubernetes/object/browser) lists all of the objects running in every cluster in a given project.## GKE dashboards\nThe following sections discuss each dashboard and its features.\n### GKE Enterprise overview\nIf you've enabled GKE Enterprise, the overview helps you use your GKE Enterprise features by showing you how many security concerns your fleet has, your fleet-wide Policy Controller coverage, and the synchronization status of your Config Sync packages. In addition, the dashboard provides a fleet-level view of resource utilization of your fleets, clusters, and teams. You can use this information to help optimize spending, application design, and resource allocation, including CPU, memory, and disk utilization. To learn more, see the [Use the GKE Enterprise overview](/anthos/fleet-management/docs/enterprise-overview-dashboard) .\n### Kubernetes clusters\n[Kubernetes clusters](https://console.cloud.google.com/kubernetes/list) shows every Kubernetes cluster you have created in your project. You can use this dashboard to inspect details about clusters, make changes to their settings, connect to them using Cloud Shell, and delete them.\nAdditionally, you can [upgrade your GKE Standard clusterand node versions](/kubernetes-engine/docs/how-to/upgrading-a-cluster) from this dashboard. When a new upgrade is available, the dashboard displays a notification for the relevant cluster.\nFrom this dashboard, you can select a cluster and click **Edit** to make changes to the cluster's settings.\nYou can select a cluster to view a page about that cluster, which includes the following tab views:\n- **Details** displays the current settings for the cluster and its node pool.\n- **Storage** displays the persistent volumes and storage classes provisioned for the cluster's nodes.\n- **Nodes** lists all of the cluster's nodes and their requested CPU, memory, and storage resources.\nYou can also click the **Utilization** , **Observability** , and **Costoptimization** tabs to view the following information:\n- **Utilization** : If you've enabled GKE Enterprise, view a list of all clusters and sort them by CPU, memory, or disk utilization. This lets you quickly see which specific clusters are the biggest users of their resources. You can also view how many container restarts and error logs your cluster has. To learn more, see [Fleet resource utilizationmetrics](/anthos/fleet-management/docs/utilization-metrics) .\n- **Observability** : View infrastructure health metrics for your GKE clusters and workloads. To learn more, see [View observability metrics](/kubernetes-engine/docs/how-to/view-observability-metrics) .\n- **Cost optimization** : View cluster-level metrics that describe how effectively your GKE clusters and workloads are utilizing the Compute Engine resources you pay for. To learn more, see [View cost-related optimization metrics](/kubernetes-engine/docs/how-to/cost-optimization-metrics) .\n### Workloads\nYou can use the [Workloads](https://console.cloud.google.com/kubernetes/workload) dashboard to inspect, manage, edit, and delete workloads deployed to your clusters.\n**Note:** The Workloads dashboard hides managed workloads and will only show the top-level resource in a workload. For example, for a Deployment, you won't see the ReplicaSet or Pod objects listed. With sufficient permissions, you can see these objects by clicking into the Deployment.\nYou can also deploy stateless applications using the menu's Deploy mechanism. For more information, refer to [Deploying a stateless application](/kubernetes-engine/docs/how-to/stateless-apps) .\nYou can select a workload from the list to view a page about that resource, which includes several tab views:\n- **Details** displays the current settings for the workload, including its usage metrics, labels and selectors, update strategy, Pods specification, and active revisions.\n- **Managed pods** lists the Pods that are managed by the workload. You can select a Pod from the list to view that Pod's details, events, logs, and YAML configuration file.\n- **Revision history** lists each revision of the workload, including the active revision.\n- **Events** lists human-readable messages for each event affecting the workload.\n- **YAML** displays the workload's live configuration. You can use the YAML-based text editor provided in this menu to make changes to the workload. You can also copy and download the configuration from this menu.\n**Note:** These menus might appear differently depending on the type of workload you're viewing.\nYou can use the dashboard's filter search to list only specific workloads. By default, Kubernetes system objects are filtered out.\nSome workloads have an **Actions** menu with convenient buttons for performing common operations. For example, you can autoscale, update, and scale a Deployment from its Actions menu.\n### Services\n[Services](https://console.cloud.google.com/kubernetes/discovery) displays the load-balancing Service and traffic-routing Ingress objects associated with your project. It also displays the default Kubernetes system objects associated with networking, such as the Kubernetes API server, HTTP backend, and DNS.\nYou can select a resource from the list to view a page about that resource, which includes several tab views:\n- **Details** displays information about the resource, including its usage metrics, IP, and ports.\n- **Events** lists human-readable messages for each event affecting the resource.\n- **YAML** displays the resource's live configuration. You can use the YAML-based text editor provided in this menu to make changes to the resource. You can also copy and download the configuration from this menu.\n**Note:** If your service exposes ports on Pods, the service page will prepopulate a `kubectl port-forward` command, which can be used together with web preview to debug it.\n### Secrets & ConfigMaps\n[Secrets & ConfigMaps](https://console.cloud.google.com/kubernetes/config) displays configuration files, `Secret` objects, `ConfigMap` objects, environment variables, and other configuration resources associated with your project. It also displays Kubernetes system-level configuration resources, such as tokens used by service accounts.\nYou can select a resource from this dashboard to view a detailed page about that resource. Sensitive data stored in `Secret` objects are not displayed in the console.\n### Storage\n[Storage](https://console.cloud.google.com/kubernetes/storage) lists the storage resources provisioned for your clusters. When you create a `PersistentVolumeClaim` or `StorageClass` resource to be used by a cluster's nodes, those resources appear in this dashboard.\nThis dashboard has the following tab views:\n- **Persistent volume claims** list all`PersistentVolumeClaim`resources in your clusters. You use`PersistentVolumeClaim`resources with StatefulSet workloads to have those workloads claim storage space on a persistent disk in the cluster.\n- **Storage classes** list all`StorageClass`resources associated with your nodes. You use`StorageClass`resources as \"blueprints\" for using space on a disk: you specify the disk's provisioner, parameters (such as disk type and compute zone), and reclaim policy. You also use`StorageClass`resources for dynamic volume provisioning, which allow you to create storage volumes on demand.\nYou can select a resource from these dashboards to view a detailed page for that resource.\n### Object Browser\n[Object Browser](https://console.cloud.google.com/kubernetes/object/browser) lists all of the objects running in all of the clusters in your current project. You can list and filter resources by specific API groups and Resource Kinds. You can also preview YAML file for any resource by navigating to its details page.\n### Kubernetes Dashboard\nThe [Kubernetes Dashboard](https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/) add-on is disabled by default on GKE.\nStarting with GKE v1.15, you will no longer be able to enable the Kubernetes Dashboard by using the add-on API. You will still be able to install Kubernetes Dashboard manually by following the instructions in the project's repository. For clusters in which you have already deployed the add-on, it will continue to function but you will need to manually apply any updates and security patches that are released.\nThe [Google Cloud console](https://console.cloud.google.com/) provides dashboards to manage, troubleshoot, and monitor your GKE clusters, workloads, and applications.\n## What's next\n- [Read the GKE overview](/kubernetes-engine/docs/concepts/kubernetes-engine-overview) .\n- [Read about Kubernetes cluster architecture](/kubernetes-engine/docs/concepts/cluster-architecture) .", "guide": "Google Kubernetes Engine (GKE)"}