{"title": "Google Kubernetes Engine (GKE) - GKE shared responsibility", "url": "https://cloud.google.com/kubernetes-engine/docs/concepts/shared-responsibility", "abstract": "# Google Kubernetes Engine (GKE) - GKE shared responsibility\nRunning a business-critical application on Google Kubernetes Engine (GKE) requires multiple parties to carry different responsibilities. While not an exhaustive list, this topic lists the responsibilities for both Google and the customer.\n", "content": "## GKE\n### Google's responsibilities\n- Protecting the underlying infrastructure, including hardware, firmware, kernel, OS, storage, network, and more. This includes [encrypting data at rest by default](/security/encryption-at-rest/default-encryption) , providing [additional customer-managed disk encryption](/kubernetes-engine/docs/how-to/using-cmek) , [encrypting data in transit](/security/encryption-in-transit) , using [custom-designed hardware](/blog/products/gcp/titan-in-depth-security-in-plaintext) , laying [private network cables](/about/locations#network-tab) , protecting data centers from physical access, protecting the bootloader and kernel against modification using [Shielded Nodes](/kubernetes-engine/docs/how-to/shielded-gke-nodes) , and following secure software development practices.\n- [Hardening](/container-optimized-os/docs/concepts/security) and [patching](/kubernetes-engine/docs/resources/security-patching) the nodes' operating system, such as Container-Optimized OS or Ubuntu. GKE promptly makes any patches to these images available. If you have auto-upgrade enabled, or are using a [release channel](/kubernetes-engine/docs/concepts/release-channels) , these updates are automatically deployed. This is the OS layer underneath your container\u2014it's not the same as the operating system running in your containers.\n- Building and operating threat detection for container-specific threats into the kernel with [Container Threat Detection](/security-command-center/docs/concepts-container-threat-detection-overview) (priced separately with Security Command Center).\n- Hardening and [patching](/kubernetes-engine/docs/resources/security-patching) Kubernetes node components. All GKE managed components are upgraded automatically when you upgrade GKE node versions. This includes:- [vTPM-backed trusted bootstrap mechanism for issuing kubelet TLS certificates](/kubernetes-engine/docs/how-to/shielded-gke-nodes) and auto-rotation of the certificates\n- Hardened kubelet configuration [following CIS benchmarks](/kubernetes-engine/docs/concepts/cis-benchmarks) \n- GKE metadata server for [Workload identity](/kubernetes-engine/docs/how-to/workload-identity) \n- GKE's native [Container Network Interface plugin and Calico for NetworkPolicy](/kubernetes-engine/docs/concepts/network-overview) \n- GKE Kubernetes storage integrations such as the [CSI driver](/kubernetes-engine/docs/how-to/persistent-volumes/gce-pd-csi-driver) \n- GKE [logging and monitoring agents](/stackdriver/docs/solutions/gke) \n- Hardening and [patching](/kubernetes-engine/docs/resources/security-patching) the control plane. The control plane includes the control plane VM, API server, scheduler, controller manager, [cluster CA, TLS certificate issuance and rotation, root-of-trust key material](/kubernetes-engine/docs/concepts/cluster-trust) , [CA rotation](/kubernetes-engine/docs/how-to/credential-rotation) , [secrets encryption](/kubernetes-engine/docs/how-to/encrypting-secrets) , IAM authenticator and authorizer, audit logging configuration, etcd, and various other controllers. All of your control plane components run on Google-operated Compute Engine instances. These instances are single tenant, meaning each instance runs the control plane and its components for only one customer.\n- Provide Google Cloud integrations for Connect, Identity and Access Management, Cloud Audit Logs, Google Cloud Observability, Cloud Key Management Service, Security Command Center, and others.\n- Restrict and log Google administrative access to customer clusters for contractual support purposes with [Access Transparency](/access-transparency) .\n### Customer's responsibilities\n- Maintain your workloads, including your application code, build files, container images, data, Role-based access control (RBAC)/IAM policy, and containers and pods that you are running.\n- Enroll clusters in auto-upgrade (default) or upgrade clusters to supported versions.\n- Monitor the cluster and applications and respond to any alerts and incidents using technologies such as the [security posture dashboard](/kubernetes-engine/docs/concepts/about-security-posture-dashboard) and [Google Cloud Observability](/stackdriver/docs) .\n- Provide Google with environmental details when requested for troubleshooting purposes.## What's next\n- Read the GKE [Security overview](/kubernetes-engine/docs/concepts/security-overview) .", "guide": "Google Kubernetes Engine (GKE)"}