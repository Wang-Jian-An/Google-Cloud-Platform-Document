{"title": "Google Kubernetes Engine (GKE) - Use a custom Ingress controller", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/custom-ingress-controller", "abstract": "# Google Kubernetes Engine (GKE) - Use a custom Ingress controller\nThis page describes how you can use a custom Ingress controller with Google Kubernetes Engine (GKE).\n**Caution:** Google does not provide support for debugging issues with custom Ingress controllers.\n", "content": "## Use a custom Ingress controller with the HttpLoadBalancing add-on enabled\nYou can run a custom Ingress controller, such as `nginx-ingress` , by disabling the `HttpLoadBalancing` add-on. This prevents the GKE Ingress controller from processing Ingress resources.\nIf you want to run a custom Ingress controller with the `HttpLoadBalancing` add-on enabled, for example to use features such as [subsetting](/kubernetes-engine/docs/how-to/internal-load-balancing#subsetting) and [Private Service Connect](/kubernetes-engine/docs/how-to/internal-load-balancing-across-vpc-net) , you can use one of the following approaches:\n- In the Ingress manifest, set the [kubernetes.io/ingress.class](https://kubernetes.io/docs/concepts/services-networking/ingress/#deprecated-annotation) annotation. This configuration is supported for clusters running all GKE versions.\n- [Configure the ingressClassName field](#ingress_class) .\n- [Configure a default Ingress class](#default_class) \nYou must ensure that `spec.ingressClassName` is not accidentally overwritten by any process. An update operation that changes `spec.IngressClassName` from a valid value to an empty string ( `\"\"` ) causes the GKE Ingress controller to process the Ingress.\n## Configure the ingressClassName field\nYou can use a custom Ingress controller by setting the `ingressClassName` field in the Ingress manifest. The following manifest describes an Ingress that specifies the [nginx Ingress controller](https://kubernetes.github.io/ingress-nginx/) :\n```\napiVersion: networking.k8s.io/v1kind: Ingressmetadata:\u00a0name: cafe-ingressspec:\u00a0ingressClassName: nginx\u00a0tls:\u00a0- hosts:\u00a0 \u00a0- cafe.example.com\u00a0 \u00a0secretName: cafe-secret\u00a0rules:\u00a0- host: cafe.example.com\n```\n**Note:** If an Ingress has an empty `spec.ingressClassName` or `spec.ingressClassName` is not present, and the Ingress does not have the annotation `kubernetes.io/ingress.class` , the GKE Ingress controller processes the Ingress.\nThis configuration is supported with the Ingress `v1beta1` API in GKE versions 1.18 to 1.21 and the Ingress `v1` API in GKE versions 1.19 and later.\n## Configure a default Ingress class\nYou can configure a default Ingress class for all Ingress resources in a cluster by creating an [IngressClass](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class) resource with the annotation `ingressclass.kubernetes.io/is-default-class` set to `true` :\n```\napiVersion: networking.k8s.io/v1kind: IngressClassmetadata:\u00a0 name: nginx-public\u00a0 annotations:\u00a0 \u00a0 ingressclass.kubernetes.io/is-default-class: \"true\"spec:\u00a0 controller: k8s.io/ingress-nginx\n```\n**Note:** The [admission controller](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/) populates the `spec.ingressClassName` field for new Ingress resources in the cluster, but does not modify existing Ingress resources.\nThis configuration is available for clusters running GKE versions 1.19 and later.\n## Summary of GKE Ingress controller behavior\nFor clusters running GKE versions 1.18 and later, whether or not the GKE Ingress controller processes an Ingress depends on the value of the `kubernetes.io/ingress.class` annotation and the `ingressClassName` field in the Ingress manifest. For more information, see [GKE Ingress controller behavior](/kubernetes-engine/docs/concepts/ingress#controller_summary) .\n## What's next\n- [Learn more about load balancing in Google Cloud](/load-balancing/docs/https) .\n- [Learn how to configure Ingress for internal Application Load Balancers](/kubernetes-engine/docs/how-to/internal-load-balance-ingress) .\n- [Learn how to configure Ingress for external Application Load Balancers](/kubernetes-engine/docs/how-to/load-balance-ingress) .\n- [Implement GKE Ingress using NGNIX Ingress](https://github.com/GoogleCloudPlatform/gke-networking-recipes/tree/main/ingress/single-cluster/ingress-nginx) .", "guide": "Google Kubernetes Engine (GKE)"}