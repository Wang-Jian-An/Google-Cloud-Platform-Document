{"title": "Google Kubernetes Engine (GKE) - Enable multi-cluster Gateways", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/enabling-multi-cluster-gateways", "abstract": "# Google Kubernetes Engine (GKE) - Enable multi-cluster Gateways\nThis page shows you how to enable the multi-cluster [GKE Gateway controller](/kubernetes-engine/docs/concepts/gateway-api) , a Google-hosted controller that provisions external and internal load balancers, for your GKE clusters. To learn how to use Gateway resources for container load balancing, see [Deploying Gateways](/kubernetes-engine/docs/how-to/deploying-gateways) or [Deploying multi-cluster Gateways](/kubernetes-engine/docs/how-to/deploying-multi-cluster-gateways) .\nThe multi-cluster GKE Gateway Controller installs the following multi-cluster GatewayClasses in your clusters:\n- `gke-l7-global-external-managed-mc`for global external multi-cluster Gateways\n- `gke-l7-regional-external-managed-mc`for regional external multi-cluster Gateways\n- `gke-l7-rilb-mc`for regional internal multi-cluster Gateways\n- `gke-l7-gxlb-mc`for global external Classic multi-cluster Gateways\nLearn more about the capabilities of the various [GatewayClasses in GKE](/kubernetes-engine/docs/how-to/gatewayclass-capabilities) .\n", "content": "## Pricing\nAll Compute Engine resources deployed through the Gateway controllers are charged against the project in which your GKE clusters reside. The single-cluster Gateway controller is offered at no additional charge as a part of GKE Standard and Autopilot pricing. Pricing for multi-cluster Gateways is described in the [Multi Cluster Ingress and Gateway pricing page](/kubernetes-engine/pricing#multi-cluster-ingress) .\n## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.\n### GKE Gateway controller requirements\n- For Standard, GKE version 1.24 or later.\n- For Autopilot, GKE version 1.26 or later.\n- Google Cloud CLI version 407.0.0 or later.\n- The Gateway API is supported on [VPC-native](/kubernetes-engine/docs/concepts/alias-ips) clusters only.\n- If you are using the internal GatewayClasses, you must enable a [proxy-only subnet](/load-balancing/docs/proxy-only-subnets) .\n- Your cluster must have the`HttpLoadBalancing`add-on enabled.\n- If you are using Istio, you must upgrade Istio to one of the following versions:- 1.15.2 or later\n- 1.14.5 or later\n- 1.13.9 or later.\n- If you are using Shared VPC, then in the host project, you need to assign the`Compute Network User`role to the GKE Service account for the service project.\n### Multi-cluster Gateway requirements\nIn addition to the GKE Gateway controller requirements, for multi-cluster Gateway deployments, make sure you have performed the following tasks:\n- [Enable the GatewayAPI](/kubernetes-engine/docs/how-to/deploying-gateways#enable-gateway-existing-cluster) on your config cluster.\n- Enable [workload identity federation for GKE](/kubernetes-engine/docs/how-to/workload-identity#enable-existing-cluster) on your clusters.\n- Complete the [fleet general prerequisites](/anthos/fleet-management/docs/before-you-begin#enable_apis) for registering your clusters.\n- Enable the following multi-cluster Gateways required APIs in your project:- Traffic Director API\n- Multi-cluster Services API\n- Multi Cluster Ingress API\nRun this command to enable the required APIs if they are not already enabled:```\ngcloud services enable \\\u00a0 trafficdirector.googleapis.com \\\u00a0 multiclusterservicediscovery.googleapis.com \\\u00a0 multiclusteringress.googleapis.com \\\u00a0 --project=PROJECT_ID\n```Replace `` with the project ID where your GKE clusters are running.\n**Note:** Traffic Director is used as the backend infrastructure to propagate endpoints for [multi-cluster Services](/kubernetes-engine/docs/how-to/multi-cluster-services) , however the Traffic Director resources created by the MCS controller are not charged against your project because MCS is included in the cost of GKE.\n### Restrictions and Limitations\nThe same [limitations and known issues](/kubernetes-engine/docs/how-to/deploying-gateways#limitations) for single-cluster Gateways also apply to multi-cluster Gateways.\nIn addition to the single-cluster Gateway limitations, the following limitations apply to multi-cluster Gateways:\n- Load balancing to backends in different regions is not supported with the regional internal GatewayClass `gke-l7-rilb-mc` . To learn more about the different features supported with each GatewayClass, see [GatewayClass capabilities](/kubernetes-engine/docs/how-to/gatewayclass-capabilities) .\n- A `Service` is not supported as a `backendRefs` with multi-cluster Gateway. Multi-cluster Gateway only supports `ServiceImport` as a valid `backendRefs` .\n- Cross-project load balancing is not supported. All clusters (config cluster and target clusters) attached to the same multi-cluster Gateway must be deployed in the same Shared VPC host project or service project. For more information on supported Shared VPC topologies with multi-cluster Gateway, see [Use multi-cluster Gateway with Shared VPC](/kubernetes-engine/docs/how-to/deploying-multi-cluster-gateways#use_multi-cluster_gateway_with) .GKE Gateway uses [Cloud Load Balancing quotas](/load-balancing/docs/quotas) to limit the number of resources that the Gateway controller can create to manage ingress traffic routed to GKE clusters.\n## Set up your environment for multi-cluster Gateways\nIt requires multiple GKE clusters to complete the examples in [Deploying multi-cluster Gateways](/kubernetes-engine/docs/how-to/deploying-multi-cluster-gateways) . All of the clusters are registered to the same [fleet](/anthos/fleet-management/docs) so that multi-cluster Gateways and Services can operate across them.\nThe following steps will deploy three GKE clusters across two different regions in your project:\n- `us-west1-a/gke-west-1`\n- `us-west1-a/gke-west-2`\n- `us-east1-b/gke-east-1`\nThis will create the following cluster topology:\nThese GKE clusters are used to demonstrate [multi-region load balancing](/kubernetes-engine/docs/how-to/deploying-multi-cluster-gateways#external-gateway) and [blue-green, multi-cluster traffic splitting](/kubernetes-engine/docs/how-to/deploying-multi-cluster-gateways#blue-green) using external and internal Gateways.\n### Deploy clusters\nIn these steps you will deploy three GKE clusters into regions `us-east1` and `us-west1` .\n- Create a GKE cluster in `us-west1` named `gke-west-1` :```\ngcloud container clusters create gke-west-1 \\\u00a0 \u00a0 --gateway-api=standard \\\u00a0 \u00a0 --zone=us-west1-a \\\u00a0 \u00a0 --workload-pool=PROJECT_ID.svc.id.goog \\\u00a0 \u00a0 --cluster-version=VERSION \\\u00a0 \u00a0 --project=PROJECT_ID\n```Replace the following:- ``: the project ID where your GKE clusters are running.\n- ``: the GKE version, 1.24 or later.\n- Create another GKE cluster in `us-west1` (or the same region as the previous cluster) named `gke-west-2` :```\ngcloud container clusters create gke-west-2 \\\u00a0 \u00a0 --gateway-api=standard \\\u00a0 \u00a0 --zone=us-west1-a \\\u00a0 \u00a0 --workload-pool=PROJECT_ID.svc.id.goog \\\u00a0 \u00a0 --cluster-version=VERSION \\\u00a0 \u00a0 --project=PROJECT_ID\n```\n- Create a GKE cluster in `us-east1` (or a region that is different than the previous one) named `gke-east-1````\ngcloud container clusters create gke-east-1 \\\u00a0 \u00a0 --gateway-api=standard \\\u00a0 \u00a0 --zone=us-east1-b \\\u00a0 \u00a0 --workload-pool=PROJECT_ID.svc.id.goog \\\u00a0 \u00a0 --cluster-version=VERSION \\\u00a0 \u00a0 --project=PROJECT_ID\n```\n**Note:** If you are using an existing cluster, see [Enable the Gateway API on an existing cluster](/kubernetes-engine/docs/how-to/deploying-gateways#enable-gateway-existing-cluster) .\n### Configure cluster credentials\nThis step configures cluster credentials with memorable names. This makes it easier to switch between clusters when deploying resources across several clusters.\n- Fetch the credentials for cluster `gke-west-1` , `gke-west-2` , and `gke-east-1` :```\ngcloud container clusters get-credentials gke-west-1 --zone=us-west1-a --project=PROJECT_IDgcloud container clusters get-credentials gke-west-2 --zone=us-west1-a --project=PROJECT_IDgcloud container clusters get-credentials gke-east-1 --zone=us-east1-b --project=PROJECT_ID\n```This stores the credentials locally so that you can use your kubectl client to access the cluster API servers. By default an auto-generated name is created for the credential.\n- Rename the cluster contexts so they are easier to reference later:```\nkubectl config rename-context gke_PROJECT_ID_us-west1-a_gke-west-1 gke-west-1kubectl config rename-context gke_PROJECT_ID_us-west1-a_gke-west-2 gke-west-2kubectl config rename-context gke_PROJECT_ID_us-east1-b_gke-east-1 gke-east-1\n```Replace `` with the project ID where your clusters are deployed.\n### Register clusters to the fleet\n- After all three clusters have successfully been created, you will need to register these clusters to your project's [fleet](/anthos/fleet-management/docs) . Grouping your GKE clusters together in a fleet allows them to be targeted by a multi-cluster Gateway.```\ngcloud container fleet memberships register gke-west-1 \\\u00a0 \u00a0 \u00a0--gke-cluster us-west1-a/gke-west-1 \\\u00a0 \u00a0 \u00a0--enable-workload-identity \\\u00a0 \u00a0 \u00a0--project=PROJECT_IDgcloud container fleet memberships register gke-west-2 \\\u00a0 \u00a0 \u00a0--gke-cluster us-west1-a/gke-west-2 \\\u00a0 \u00a0 \u00a0--enable-workload-identity \\\u00a0 \u00a0 \u00a0--project=PROJECT_IDgcloud container fleet memberships register gke-east-1 \\\u00a0 \u00a0 \u00a0--gke-cluster us-east1-b/gke-east-1 \\\u00a0 \u00a0 \u00a0--enable-workload-identity \\\u00a0 \u00a0 \u00a0--project=PROJECT_ID\n```\n- Confirm that the clusters have been successfully registered to the fleet:```\ngcloud container fleet memberships list --project=PROJECT_ID\n```The output will be similar to the following:```\nNAME  EXTERNAL_ID       LOCATION\ngke-east-1 45a80b37-4b00-49aa-a68b-b430fce1e3f0 us-east1\ngke-west-2 ac7087a5-f5ee-401e-b430-57f3af141239 us-west1\ngke-west-1 549efe3a-b18e-4eb9-8796-e50b7967cde2 us-west1\n```\n### Enable multi-cluster Services in the fleet\n- Enable multi-cluster Services in your fleet for the registered clusters. This enables the MCS controller for the three clusters that are registered to your fleet so that it can start listening to and exporting Services.```\ngcloud container fleet multi-cluster-services enable \\\u00a0 \u00a0 --project PROJECT_ID\n```\n- Grant Identity and Access Management (IAM) permissions required by the MCS controller:```\ngcloud projects add-iam-policy-binding PROJECT_ID \\\u00a0 \u00a0 --member \"serviceAccount:PROJECT_ID.svc.id.goog[gke-mcs/gke-mcs-importer]\" \\\u00a0 \u00a0 --role \"roles/compute.networkViewer\" \\\u00a0 \u00a0 --project=PROJECT_ID\n```Replace `` with the project ID where your clusters are deployed.\n- Confirm that MCS is enabled for the registered clusters. You will see the memberships for the three registered clusters. It may take several minutes for all of the clusters to show.```\ngcloud container fleet multi-cluster-services describe --project=PROJECT_ID\n```The output is similar to the following:```\ncreateTime: '2023-10-12T06:14:33.466903587Z'\nmembershipStates:\n projects/441323991697/locations/us-east1/memberships/gke-east-1:\n state:\n  code: OK\n  description: Firewall successfully updated\n  updateTime: '2023-10-12T06:15:28.395318091Z'\n projects/441323991697/locations/us-west1/memberships/gke-west-1:\n state:\n  code: OK\n  description: Firewall successfully updated\n  updateTime: '2023-10-12T06:15:30.534594027Z'\n projects/441323991697/locations/us-west1/memberships/gke-west-2:\n state:\n  code: OK\n  description: Firewall successfully updated\n  updateTime: '2023-10-12T06:15:29.110582109Z'\nname: projects/pierre-louis-playground/locations/global/features/multiclusterservicediscovery\nresourceState:\n state: ACTIVE\nspec: {}\nupdateTime: '2023-10-12T06:15:31.027276757Z'\n```\n### Enable multi-cluster Gateway in the fleet\nThe [multi-cluster GKE Gateway controller](/kubernetes-engine/docs/concepts/gateway-api#gateway_controller) governs the deployment of multi-cluster Gateways.\n**Note:** the multi-cluster Gateway controller is also responsible for the instrumentation of `MulticlusterIngress` resources.\nWhen enabling the multi-cluster Gateway controller, you must select your config cluster. The config cluster is the GKE cluster in which your Gateway resources ( [Gateway](/kubernetes-engine/docs/concepts/gateway-api#gateway) , [Routes](/kubernetes-engine/docs/concepts/gateway-api#httproute) , [Policies](/kubernetes-engine/docs/concepts/gateway-api#policy) ) are deployed. It is a central place that controls routing across your clusters. See [Config cluster design](/kubernetes-engine/docs/concepts/multi-cluster-ingress#config_cluster_design) to help you decide which cluster to choose as your config cluster.\n- Enable multi-cluster Gateway and specify your config cluster in your fleet. Note that you can always update the config cluster at a later time. This example specifies `gke-west-1` as the config cluster that will host the resources for multi-cluster Gateways.```\ngcloud container fleet ingress enable \\\u00a0 \u00a0 --config-membership=projects/PROJECT_ID/locations/us-west1-a/memberships/gke-west-1 \\\u00a0 \u00a0 --project=PROJECT_ID\n```\n- Grant Identity and Access Management (IAM) permissions required by the multi-cluster Gateway controller:```\ngcloud projects add-iam-policy-binding PROJECT_ID \\\u00a0 \u00a0 --member \"serviceAccount:service-PROJECT_NUMBER@gcp-sa-multiclusteringress.iam.gserviceaccount.com\" \\\u00a0 \u00a0 --role \"roles/container.admin\" \\\u00a0 \u00a0 --project=PROJECT_ID\n```Replace `` and `` with the project ID and project number where your clusters are deployed.\n- Confirm that the GKE Gateway controller is enabled for your fleet:```\ngcloud container fleet ingress describe --project=PROJECT_ID\n```The output is similar to the following:```\ncreateTime: '2023-10-12T06:23:06.732858524Z'\nmembershipStates:\n projects/441323991697/locations/us-east1/memberships/gke-east-1:\n state:\n  code: OK\n  updateTime: '2023-10-12T06:30:08.815839024Z'\n projects/441323991697/locations/us-west1/memberships/gke-west-1:\n state:\n  code: OK\n  updateTime: '2023-10-12T06:30:08.815837031Z'\n projects/441323991697/locations/us-west1/memberships/gke-west-2:\n state:\n  code: OK\n  updateTime: '2023-10-12T06:30:08.815840985Z'\nname: projects/pierre-louis-playground/locations/global/features/multiclusteringress\nresourceState:\n state: ACTIVE\nspec:\n multiclusteringress:\n configMembership: projects/pierre-louis-playground/locations/us-west1/memberships/gke-west-1\nstate:\n state:\n code: OK\n description: Ready to use\n updateTime: '2023-10-12T06:23:51.317464415Z'\nupdateTime: '2023-10-12T06:30:09.439319551Z'\n```\n- Confirm that the GatewayClasses exist in your config cluster:```\nkubectl get gatewayclasses --context=gke-west-1\n```The output is similar to the following:```\nNAME         CONTROLLER     ACCEPTED AGE\ngke-l7-global-external-managed  networking.gke.io/gateway True  78m\ngke-l7-global-external-managed-mc  networking.gke.io/gateway True  4m22s\ngke-l7-gxlb       networking.gke.io/gateway True  78m\ngke-l7-gxlb-mc      networking.gke.io/gateway True  4m23s\ngke-l7-regional-external-managed  networking.gke.io/gateway True  78m\ngke-l7-regional-external-managed-mc networking.gke.io/gateway True  4m22s\ngke-l7-rilb       networking.gke.io/gateway True  78m\ngke-l7-rilb-mc      networking.gke.io/gateway True  4m22s\n```This output includes the GatewayClass gke-l7-global-external-managed-mc, gke-l7-regional-external-managed-mc, gke-l7-gxlb-mc for external multi-cluster Gateways and the GatewayClass gke-l7-rilb-mc for internal multi-cluster Gateways.\n- Switch your kubectl context to the config cluster:```\nkubectl config use-context gke-west-1\n```\nYou are now ready to begin deploying multi-cluster Gateways in the config cluster.\n## Troubleshooting\nThis section shows you how to resolve issues related to the multi-cluster Gateway controller enablement.\n### GatewayClasses are not available in the config cluster\nThe following error might occur when you run the command `kubectl get gatewayclasses` :\n```\nerror: the server doesn't have a resource type \"gatewayclasses\"\n```\nTo resolve this issue, install the Gateway API on your cluster:\n```\ngcloud container clusters update CLUSTER_NAME \\\u00a0 \u00a0 --gateway-api=standard \\\u00a0 \u00a0 --region=COMPUTE_REGION\n```\nReplace the following:\n- ``: the name of your cluster.\n- ``: the Compute Engine [region](/compute/docs/regions-zones#available) of your cluster. For zonal clusters, use`--zone=` ``.## Known Issues\n- There is a known issue with the multi-cluster Gateway controller where it may fail to start. To avoid this issue, [enable the GatewayAPI](/kubernetes-engine/docs/how-to/deploying-gateways#enable-gateway) on the config cluster and include the CRDs **before** the Fleet ingress feature is enabled.\n- Multi-cluster Gateways can leak load balancer resources under the following scenarios:- The Fleet ingress feature is updated with a new config cluster which does not have all`Gateway`resources which exist on the current config cluster.\n- The Fleet ingress feature is disabled while`Gateway`resources which reference a multi-cluster`GatewayClass`exist on the config cluster.\n- Multi-cluster Gateway runs as a global service. If the multi-cluster Gateway controller encounters a regional Fleet (Hub) control plane failure, it will respond by failing static and making no further load balancer changes until the region has been returned to service.## What's next\n- To deploy multi-cluster load balancing, see [Deploying multi-cluster Gateways](/kubernetes-engine/docs/how-to/deploying-multi-cluster-gateways) .\n- To learn more about the Gateway controller, see [Gateway](/kubernetes-engine/docs/concepts/gateway-api) .", "guide": "Google Kubernetes Engine (GKE)"}