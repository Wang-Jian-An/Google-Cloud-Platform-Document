{"title": "Google Kubernetes Engine (GKE) - Kubernetes 1.22 deprecated APIs", "url": "https://cloud.google.com/kubernetes-engine/docs/deprecations/apis-1-22", "abstract": "# Google Kubernetes Engine (GKE) - Kubernetes 1.22 deprecated APIs\nThis page explains how to prepare clusters for upgrades to GKE version 1.22. You can find API clients making calls to [deprecated APIs removedin1.22](https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.22.md#changelog-since-v1210) and update those clients to use GA APIs. For more detailed information, see the [Kubernetes deprecated API migrationguide](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22) .\n", "content": "## Removed APIs in 1.22\nMost of the deprecated APIs in Kubernetes version 1.22 are former Beta APIs that have since graduated from Beta ( `v1beta1` ) to GA ( `v1` ). The GA APIs provide [longer-termcompatibility guarantees](https://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-parts-of-the-api) and should be used in place of the deprecated Beta APIs.\nAll existing objects can be interacted with by using the GA APIs.\n**Important:** Before upgrading to 1.22, you should update API clients and manifests to use the GA APIs.\n### Webhook resources\nThe Beta API version of `MutatingWebhookConfiguration` and `ValidatingWebhookConfiguration` is no longer served as of version 1.22.\n- Migrate manifests and API clients to use the **admissionregistration.k8s.io/v1** API version.\n- Refer to the following table that describes the notable changes in the GA API version:| Field        | Change                            |\n|:------------------------------------|:---------------------------------------------------------------------------------------------------------------------|\n| webhooks[*].failurePolicy   | Default changed from Ignore to Fail.                     |\n| webhooks[*].matchPolicy    | Default changed from Exact to Equivalent.                   |\n| webhooks[*].timeoutSeconds   | Default changed from 30s to 10s.                      |\n| webhooks[*].sideEffects    | Default value is removed, and the field is now required. Only None and NoneOnDryRun are permitted.     |\n| webhooks[*].admissionReviewVersions | Default value is removed and the field is now required (supported versions for AdmissionReview are v1 and v1beta1). |\n| webhooks[*].name     | Must be unique in the list for objects created via admissionregistration.k8s.io/v1.         |\n### CustomResourceDefinition\nThe Beta API version of `CustomResourceDefinition` is no longer served as of version 1.22.\n- Migrate manifests and API clients to use the **apiextensions.k8s.io/v1** API version.\n- Refer to the following table that describes the notable changes in the GA API version:| Field         | Change                                            |\n|:-----------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| spec.scope        | No longer defaulted to Namespaced. The value must be explicitly specified.                           |\n| spec.version        | Removed. Use spec.versions instead.                                    |\n| spec.validation       | Removed. Use spec.versions[*].schema instead.                                  |\n| spec.subresources      | Removed. Use spec.versions[*].subresources instead.                                |\n| spec.additionalPrinterColumns   | Removed. Use spec.versions[*].additionalPrinterColumns instead.                             |\n| spec.conversion.webhookClientConfig  | Moved to spec.conversion.webhook.clientConfig.                                  |\n| spec.conversion.conversionReviewVersions | Moved to spec.conversion.webhook.conversionReviewVersions.                               |\n| spec.versions[*].schema.openAPIV3Schema | Now required when creating v1 CustomResourceDefinition objects, and must be a structural schema.                     |\n| spec.preserveUnknownFields    | Value true is disallowed when creating v1 CustomResourceDefinition objects. The value must be specified within schema definitions as x-kubernetes-preserve-unknown-fields: true. |\n| additionalPrinterColumns     | In additionalPrinterColumns items, the JSONPath field was renamed to jsonPath.                         |\n### APIService\nThe Beta API version of `APIService` is no longer served as of version 1.22. Migrate manifests and API clients to use the **apiregistration.k8s.io/v1** API version.\n### TokenReview\nThe Beta API version of `TokenReview` is no longer served as of version 1.22. Migrate manifests and API clients to use the **authentication.k8s.io/v1** API version.\n### SubjectAccessReview resources\nThe Beta API version of `LocalSubjectAccessReview` , `SelfSubjectAccessReview` , and `SubjectAccessReview` is no longer served as of version 1.22.\n- Migrate manifests and API clients to use the **authorization.k8s.io/v1** API version.\n- Refer to the following table that describes the notable changes in the GA API version:| Field  | Change     |\n|:-----------|:------------------------|\n| spec.group | Renamed to spec.groups. |\n### CertificateSigningRequest\nThe Beta API version of `CertificateSigningRequest` is no longer served as of version 1.22.\n- Migrate manifests and API clients to use the **certificates.k8s.io/v1** API version.\n- Refer to the following table that describes the notable changes in the GA API version:| Field      | Change                                                   |\n|:----------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| spec.signerName    | For API clients requesting certificates, this field is required (see known Kubernetes signers), and requests for kubernetes.io/legacy-unknown are not allowed to be created via the certificates.k8s.io/v1 API. |\n| spec.usages     | For API clients requesting certificates, this field is required. This field cannot contain duplicate values, and must only contain known usages.                 |\n| status.conditions   | For API clients approving or signing certificates, this field cannot contain duplicate types.                             |\n| status.conditions[*].status | For API clients approving or signing certificates, this field is now required.                                 |\n| status.certificate   | For API clients approving or signing certificates, this field must be PEM-encoded, and contain only CERTIFICATE blocks.                       |\n### Lease\nThe Beta API version of `Lease` is no longer served as of version 1.22. Migrate manifests and API clients to use the **coordination.k8s.io/v1** API version.\n### Ingress (available until 1.23 for clusters created on 1.21 or earlier)\nThe Beta API versions ( `extensions/v1beta1` and `networking.k8s.io/v1beta1` ) of `Ingress` are no longer served for GKE clusters running version 1.22 or later if the cluster was created on version 1.22 or later.\nHowever, for clusters created on GKE version 1.21 or earlier and upgraded to 1.22 on the patch version 1.22.7-gke.300 or later, you can still use the Beta API versions until the cluster is upgraded to version 1.23. This is a one-time exception for older clusters to give you more time to migrate your clusters from using these API versions which are removed from the open-source Kubernetes in version 1.22.\nAny clusters running GKE version 1.23 and later will no longer serve the deprecated `Ingress` beta APIs. Manifests using those API versions can no longer be applied. Previously persisted objects remain functional and can be viewed and updated using the new API versions, before and after upgrading to 1.23.\n- Migrate manifests and API clients to use the **networking.k8s.io/v1** API version.\n- Refer to the following table that describes the notable changes in the GA API version:| Field    | Change                                         |\n|:--------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| spec.backend  | Renamed to spec.defaultBackend.                                   |\n| backend serviceName | Renamed to service.name.                                     |\n| servicePort   | Numeric backend servicePort fields are renamed to service.port.number. String backend servicePort fields are renamed to service.port.name.        |\n| pathType   | Now required for each specified path. The value can be: Prefix, Exact, or ImplementationSpecific. To match the undefined v1beta1 behavior, use ImplementationSpecific. |\nThe following manifests describe the same Ingress in `v1` and `v1beta1` :\n```\napiVersion: networking.k8s.io/v1beta1kind: Ingressmetadata:\u00a0 name: examplespec:\u00a0 backend:\u00a0 \u00a0 serviceName: default-backend\u00a0 \u00a0 servicePort: 80\u00a0 rules:\u00a0 - http:\u00a0 \u00a0 \u00a0 paths:\u00a0 \u00a0 \u00a0 - path: /testpath\u00a0 \u00a0 \u00a0 \u00a0 backend:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 serviceName: test\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 servicePort: 80\n```\n```\napiVersion: networking.k8s.io/v1kind: Ingressmetadata:\u00a0 name: examplespec:\u00a0 defaultBackend:\u00a0 \u00a0 service:\u00a0 \u00a0 \u00a0 name: default-backend\u00a0 \u00a0 \u00a0 port:\u00a0 \u00a0 \u00a0 \u00a0 number: 80\u00a0 rules:\u00a0 - http:\u00a0 \u00a0 \u00a0 paths:\u00a0 \u00a0 \u00a0 - path: /testpath\u00a0 \u00a0 \u00a0 \u00a0 pathType: ImplementationSpecific\u00a0 \u00a0 \u00a0 \u00a0 backend:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 service:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: test\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 number: 80\n```\nYou can use the following query for clusters with Google Cloud Observability enabled to identify clients that access the Ingress `v1beta1` APIs:\n```\nresource.type=\"k8s_cluster\"\nresource.labels.cluster_name=\"$CLUSTER_NAME\"\nprotoPayload.authenticationInfo.principalEmail:(\"system:serviceaccount\" OR \"@\")\nprotoPayload.request.apiVersion=(\"extensions/v1beta1\" OR \"networking.k8s.io/v1beta1\")\nprotoPayload.request.kind=\"Ingress\"\nNOT (\"kube-system\")\n```\n### IngressClass\nThe Beta API version of `IngressClass` is no longer served as of version 1.22. Migrate manifests and API clients to use the **networking.k8s.io/v1** API version.\n### RBAC resources\nThe Beta API version of `ClusterRole` , `ClusterRoleBinding` , `Role` , and `RoleBinding` is no longer served as of version 1.22. Migrate manifests and API clients to use the **rbac.authorization.k8s.io/v1** API version.\n### PriorityClass\nThe Beta API version of `PriorityClass` is no longer served as of version 1.22. Migrate manifests and API clients to use the **scheduling.k8s.io/v1** API version.\n### Storage resources\nThe Beta API version of `CSIDriver` , `CSINode` , `StorageClass` , and `VolumeAttachment` is no longer served as of version 1.22. Migrate manifests and API clients to use the **storage.k8s.io/v1** API version.\n## Find clusters using deprecated APIs\nYou can find which clusters are using deprecated APIs from [deprecation insights](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations) . Deprecation insights also provide information such as which API clients are calling the deprecated APIs in your cluster.\nYou can also use audit logs to find which clients are making calls to deprecated APIs.\n### Locate API clients making write calls to deprecated APIs\nFor clusters with Google Cloud Observability enabled, you can use the following [Admin Activity audit log](/kubernetes-engine/docs/how-to/audit-logging#viewing_logs) query to show the use of deprecated APIs by user agents that are not Google-managed:\n```\nresource.type=\"k8s_cluster\"\nlabels.\"k8s.io/removed-release\"=\"DEPRECATED_API_MINOR_VERSION\"\nprotoPayload.authenticationInfo.principalEmail:(\"system:serviceaccount\" OR \"@\")\nprotoPayload.authenticationInfo.principalEmail!~(\"system:serviceaccount:kube-system:\")\n```\nReplace `` with the minor version where the deprecated API is removed, for example `1.22` .\nAdmin Activity audit logs are automatically enabled for GKE clusters. With this query, the logs show user agents making write calls to the deprecated APIs.\n### Locate API clients making read calls to deprecated APIs\nBy default, audit logs show only write calls to the deprecated APIs. To also show read calls to deprecated APIs, configure Data Access audit logs.\n**Caution:** If you enable additional audit logs, this might incur additional [logging costs](/stackdriver/pricing#logging-pricing-summary) . The volume of ingested Data Access audit logs counts toward the Cloud Logging [logs ingestion quota](/logging/quotas#api-limits) .\nFollow the instructions to [Configure Data Access audit logs with the Google Cloud console](/logging/docs/audit/configure-data-access#config-console) . In the Google Cloud console, select the Kubernetes Engine API. In the Log Types tab in the information panel, select `Admin Read` and `Data Read` .\nWith these logs enabled, you can now use the original query to see both read calls and write calls to the deprecated APIs.\n## Upgrading third-party components\n[Deprecation insights](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations) might display results for third-party agents that make calls to deprecated APIs in your cluster.\nTo resolve these insights, try the following steps:\n- Check with your third-party software provider for an updated version.\n- Upgrade the third-party software to the latest version. If you cannot upgrade the software, you should test whether upgrading GKE to the version with the removed deprecated APIs would break your service.\nWe recommend that you perform this upgrade and the GKE version upgrade on a staging cluster to monitor for disruptions before you upgrade your production clusters.\n## Preparing to upgrade to version 1.22\nYou do not need to delete and recreate any of your API objects. All existing persisted API objects can already be read and updated using the new API versions. However, we recommend that you migrate your clients and manifests before upgrading to Kubernetes 1.22. Learn more in the [\"What to do\" section of the Kubernetes Deprecated API Migration Guide](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#what-to-do) .\nYou can [view deprecation insights and recommendations](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations#view-deprecation-insights-recs) to determine if your cluster is using a Kubernetes feature or API that is deprecated. Deprecation insights are based on observed API calls to deprecated APIs by user agents, not the configuration of your Kubernetes objects.\n**Warning:** If you do not update a client or manifest before the 1.22 upgrade, it will not be able to read/modify existing objects or create new objects. The client or manifest will only be able to read, modify, or create objects once you update it.\n## Update clusters impacted by deprecations\nTo upgrade clusters impacted by deprecations, perform the following steps:\n- Check which user agents use the deprecated APIs in the [deprecation insight](/kubernetes-engine/docs/deprecations/viewing-deprecation-insights-and-recommendations) or [logs](#locating_api_clients_writing_to_deprecated_apis) .\n- Update the user agents that use the deprecated APIs to use supported API versions.\n- Update any third-party software that calls deprecated APIs to the latest versions.\n- Upgrade a test cluster and test your application in a testing environment before upgrading your production cluster to reduce the risk of disruptions when deprecated APIs are no longer available.\n- After you update all of the user agents, GKE waits until it has no longer observed use of deprecated APIs for 30 days, and then unblocks automatic upgrades. Automatic upgrades proceed according to the [release schedule](/kubernetes-engine/docs/release-schedule) .\n- If you can't update an affected user agent, upgrade a separate test cluster to check whether the upgrade causes disruptions. If the upgrade doesn't cause disruptions, you can [upgrade your cluster manually](/kubernetes-engine/docs/how-to/upgrading-a-cluster) .## Resources\nMore information is available in the OSS Kubernetes documentation:\n- [Kubernetes Blog: API removals for Kubernetes version 1.22](https://kubernetes.io/blog/2021/07/14/upcoming-changes-in-kubernetes-1-22/) \n- [Kubernetes 1.22 release notes](https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.22.md#removal-of-several-beta-kubernetes-apis) \n- [Kubernetes Deprecated API Migration Guide](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22)", "guide": "Google Kubernetes Engine (GKE)"}