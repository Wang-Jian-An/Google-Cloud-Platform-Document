{"title": "Google Kubernetes Engine (GKE) - Configure Google Groups for RBAC", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/google-groups-rbac", "abstract": "# Google Kubernetes Engine (GKE) - Configure Google Groups for RBAC\nThis page shows you how to set up Google Groups to work with Kubernetes role-based access control (RBAC) in your Google Kubernetes Engine (GKE) clusters.\n", "content": "## Overview\nGoogle Groups for RBAC lets you assign RBAC permissions to members of Google Groups in Google Workspace. Your Google Workspace administrators maintain the users and groups completely outside of GKE or the Google Cloud console. Your cluster administrators therefore won't need detailed information about users.\nUsing Google Groups for RBAC also lets you integrate with your existing user account management practices, such as revoking access when someone leaves your organization.\nTo use Google Groups for RBAC, complete the following tasks:\n- [Meet the requirements](#requirements) .\n- [Set up your Google Groups](#setup-group) .\n- [Enable Google Groups for RBAC on a cluster](#enable) .\n- [Define and assign RBAC permissions to the Google Groups](#define-and-assign) .## Requirements\nTo use Google Groups for RBAC, you must have access to [Google Workspace](https://workspace.google.com/) or any edition of [Cloud Identity](/identity) .\nWhen creating groups and adding users as members, ensure that you know the [Google Groups limits](https://support.google.com/a/answer/6099642#zippy=%2Cmembership) .\n## Limitation\n- GKE supports users with membership in up to 500 groups under the security group, including nested memberships, with Google Groups for RBAC.## Set up your Google Groups\nThe following steps show you how to set up a group in Google Groups that works with RBAC:\n- Create a group in your domain named `gke-security-groups` . The `gke-security-groups` name is required. Make sure the group has the **ViewMembers** permission selected for **Group Members** . For details, see [Set permissions for managing members and content](https://support.google.com/a/users/answer/9886284) .\n- Create groups, if they do not already exist, that represent sets of users who should have different permissions on your clusters, such as developers and cluster administrators. Each group must have the **View members** permission for **Group members** .\n- Add your groups as nested groups to the `gke-security-groups` group. Don't add individual users as members of `gke-security-groups` .\nFor more information on managing Google Groups, refer to the [Google Groups Help Center](https://support.google.com/a/topic/25838) .\nTo check whether a specific user can perform an action on a cluster resource, GKE checks if the user is a member of a group with access and if that group is [nested](https://support.google.com/a/answer/167100) in the `gke-security-groups` group.\nInformation about Google Groups membership is cached for a short time. It might take a few minutes for changes in group memberships to propagate to all your clusters. In addition to latency from group changes, standard caching of user credentials on the cluster is about one hour.\n## Enable Google Groups for RBAC on clusters\nYou can enable Google Groups for RBAC on new and existing GKE Standard and Autopilot clusters using the Google Cloud CLI or the Google Cloud console.\n**Caution:** After you create or update a cluster to use Google Groups for RBAC, deleting any member groups of `gke-security-groups` will cause any roles and role bindings that reference that group to become invalid, leading to access issues for your cluster. You can fix this by disabling and re-enabling the cluster's security group to use a valid group.\n### Create a new cluster\n**Standard** \nTo create a new Standard cluster and enable Google Groups for RBAC, run the following command:\n```\ngcloud container clusters create CLUSTER_NAME \\\u00a0 \u00a0 --region=COMPUTE_REGION \\\u00a0 \u00a0 --security-group=\"gke-security-groups@DOMAIN\"\n```\nReplace the following:- ``: the name of the new cluster.\n- ``: the [Compute Engine region](/compute/docs/regions-zones#available) for the new cluster. For zonal clusters, use`--zone=` ``.\n- ``: the domain name of the`gke-security-groups`group you created.\n **Autopilot** \nTo create a new Autopilot cluster and enable Google Groups for RBAC, run the following command:\n```\ngcloud container clusters create-auto CLUSTER_NAME \\\u00a0 \u00a0 --region=COMPUTE_REGION \\\u00a0 \u00a0 --security-group=\"gke-security-groups@DOMAIN\"\n```\nTo create a new cluster and enable the Google Groups for RBAC feature, perform the following steps:- Go to the **Google Kubernetes Engine** page in Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click **Create** .\n- Click **Configure** for the cluster mode that you want to use.\n- For Autopilot clusters, expand the **Advanced Options** section to locate the **Security** options.\n- For Standard clusters, in the **Cluster** section, click **Security** .\n- Select the **Enable Google Groups for RBAC** checkbox.\n- Fill in **Security Group** with `gke-security-groups@` `` .\n- Click **Create** .## Update an existing cluster\nTo update an existing cluster to enable Google Groups for RBAC, run the following command:\n```\ngcloud container clusters update CLUSTER_NAME \\\u00a0 \u00a0 --region=COMPUTE_REGION \\\u00a0 \u00a0 --security-group=\"gke-security-groups@DOMAIN\"\n```\nReplace the following:- ``: the name of the cluster.\n- ``: the [Compute Engine region](/compute/docs/regions-zones#available) of cluster. For zonal clusters, use`--zone=` ``.\n- ``: the domain name of the`gke-security-groups`group you created.\nTo update an existing cluster to enable Google Groups for RBAC, perform the following steps:- Go to the **Google Kubernetes Engine** page in Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click the name of the cluster that you want to update.\n- On the **Details** tab, locate the **Security** section.\n- For the **Google Groups for RBAC** field, click **Edit Google Groups for RBAC** .\n- Select the **Enable Google Groups for RBAC** checkbox.\n- Fill in **Security Group** with `gke-security-groups@` `` .\n- Click **Save changes** .## Define and assign permissions\nAfter creating and configuring Google Groups for RBAC, use roles and role bindings to define RBAC permissions and assign those permissions to Google Groups that are members of the `gke-security-groups` group. For instructions, refer to [Define and assign permissions](/kubernetes-engine/docs/how-to/role-based-access-control#define-and-assign) .\n**Note:** The Google Groups references in RBAC are case-sensitive. Use the exact group name in your RoleBinding and ClusterRoleBinding definitions.\n## Verify Google Groups for RBAC configuration\nThe following sections show you how to verify that your Google Groups for RBAC configuration was successful, using either the gcloud CLI or the Google Cloud console.\n### Verify using the gcloud CLI\nRun a kubectl `can-i` command to check whether you can perform a specific action against a specific Kubernetes resource. You can use this method to automate testing RBAC access as part of your CI/CD workflow.For example, the following command tests for `get` access to `pods` resources in the `dev` namespace:\n```\nkubectl auth can-i get pods \\\u00a0 \u00a0 --namespace=dev \\\u00a0 \u00a0 --as=USER \\\u00a0 \u00a0 --as-group=GROUP\n```\nReplace the following:\n- ``: the name of the user to impersonate, such as`gke-user@example.com`. The specified user must be a member of the group for which you're testing access.\n- ``: the name of the group to impersonate, such as`gke-dev-users@example.com`.\nIf `` has access, the output is `yes` . If not, the output is `no` .\n### Verify using the Google Cloud console\nYou can also verify RBAC access by running a kubectl command against your cluster and checking your logs.\nBefore you begin, ensure the following:\n- You have not interacted with the cluster you want to test (for example, you haven't run any`kubectl`commands) for at least one hour. Authentication is cached for one hour. Letting the cached credentials expire lets you make sure that the request gets logged when it happens.\n- You are a member of at least one of the groups that are members of the`gke-security-groups`group, which ensures that some Google Groups information is logged.- Enable data access logging for your Google Cloud project. To enable the logging:- Go to the **Audit Logs** page in Google Cloud console. [Go to Audit Logs](https://console.cloud.google.com/iam-admin/audit) \n- In the table, select **Kubernetes Engine API** .\n- In the **Log Type** menu, select:- **Admin Read** \n- **Data Read** \n- **Data Write** \n- Click **Save** .\nFor more information about enabling Audit Logging, see [Configuring Data Access logs with the Cloud console](/logging/docs/audit/configure-data-access#config-console) . **Important:** Enabling Audit Logging incurs charges. If you only enabled Audit Logging for testing purposes, you should disable it after you've completed testing to avoid charges.\n- Run a command using `kubectl` in the cluster, such as the following:```\nkubectl create ns helloworld\n```\n- Enter a custom query in the **Logs Explorer** page. To run the query:- Go to the **Logs Explorer** page in Google Cloud console. [Go to Logs Explorer](https://console.cloud.google.com/logs/query) \n- Click the arrow in the **Query preview** box at the top of the page.\n- In the dropdown box that appears, specify the following query:```\nresource.type=\"k8s_cluster\"resource.labels.location=\"CLUSTER_LOCATION\"resource.labels.cluster_name=\"CLUSTER_NAME\"protoPayload.resourceName=\"authorization.k8s.io/v1beta1/subjectaccessreviews\"protoPayload.response.spec.user=\"EMAIL_ADDRESS\"\n```Replace the following:- ``: your cluster's region or zone.\n- ``: the name of your cluster.\n- ``: the registered email address of your Google account.\n- Select **Run Query** . At least one result should appear. If there are no results, try increasing the time range.\n- Select the cluster you want to examine.\n- Click **Expand nested fields** .\n- The field `protoPayload.request.spec.group` contains the groups where:- The groups are members of`gke-security-group`.\n- You are a member of the group.\nThis list should match the set of groups you are a member of. If no groups are present, there might be an issue with how the groups are set up.\n- Optionally, restore data access logging to previous settings to avoid further charges.## What's next\n- [Learn more about RBAC and IAM in GKE](/kubernetes-engine/docs/concepts/access-control) .\n- [Learn how to harden your clusters](/kubernetes-engine/docs/how-to/hardening-your-cluster) .", "guide": "Google Kubernetes Engine (GKE)"}