{"title": "Google Kubernetes Engine (GKE) - Troubleshoot DNS in GKE", "url": "https://cloud.google.com/kubernetes-engine/docs/troubleshooting/dns", "abstract": "# Google Kubernetes Engine (GKE) - Troubleshoot DNS in GKE\nThis page shows you how to resolve issues related to DNS providers in Google Kubernetes Engine (GKE) clusters.\n[Cloud Customer Care](/kubernetes-engine/docs/getting-support)\n", "content": "## Cloud DNS for GKE events\nThis section details common Cloud DNS problems in GKE.\n### Cloud DNS disabled\nThe following event occurs when the Cloud DNS API is disabled:\n```\nWarning FailedPrecondition  service/default-http-backend\nFailed to send requests to Cloud DNS: Cloud DNS API Disabled. Please enable the Cloud DNS API in your project PROJECT_NAME: Cloud DNS API has not been used in project PROJECT_NUMBER before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/dns.googleapis.com/overview?project=PROJECT_NUMBER then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.\n```\nThis error occurs because the Cloud DNS API is not enabled by default. You must enable the Cloud DNS API manually.\nTo resolve the issue, [enable the Cloud DNS API](/kubernetes-engine/docs/how-to/cloud-dns#before_you_begin) .\n### Failed to send requests to Cloud DNS: API rate limit exceeded.\nThe following event occurs when a project has exceeded a Cloud DNS quota or limit:\n```\nkube-system 27s   Warning InsufficientQuota\nmanagedzone/gke-cluster-quota-ee1bd2ca-dns  Failed to send requests to Cloud DNS: API rate limit exceeded. Contact Google Cloud support team to request a quota increase for your project PROJECT_NAME: Quota exceeded for quota metric 'Write requests' and limit 'Write limit for a minute for a region' of service 'dns.googleapis.com' for consumer 'project_number:PROJECT_NUMBER.\n```\nTo resolve this issue, review the [Cloud DNS quotas](/dns/quotas) and [Compute Engine quotas and limits](/compute/quotas) . You can increase quota using the Google Cloud console.\n### Failed to send to requests to Cloud DNS due to a previous error\nThe following event occurs when errors cause cascading failures:\n```\nkube-system 27s   Warning InsufficientQuota\nmanagedzone/gke-cluster-quota-ee1bd2ca-dns  Failed to send requests to Cloud DNS: API rate limit exceeded. Contact Google Cloud support team to request a quota increase for your project PROJECT_NAME: Quota exceeded for quota metric 'Write requests' and limit 'Write limit for a minute for a region' of service 'dns.googleapis.com' for consumer 'project_number:PROJECT_NUMBER.\nkube-system 27s   Warning FailedPrecondition    service/default-http-backend       Failed to send requests to Cloud DNS due to a previous error. Please check the cluster events.\n```\nTo resolve this issue, check the cluster events to find the source of the original error, and follow the instructions to resolve that root issue.\nIn the preceding example, the `InsufficientQuota` error for the managed zone triggered cascading failures. The second error for `FailedPrecondition` indicates that a previous error occurred, which was that initial insufficient quota problem. To resolve this example issue, you would follow the guidance for the Cloud DNS quota error.\n### Failed to bind response policy\nThe following event occurs when a response policy is bound to the network of the cluster and Cloud DNS for GKE attempts to bind a response policy to the network:\n```\nkube-system 9s   Warning FailedPrecondition    responsepolicy/gke-2949673445-rp\nFailed to bind response policy gke-2949673445-rp to test. Please verify that another Response Policy is not already associated with the network: Network 'https://www.googleapis.com/compute/v1/projects/PROJECT_NAME/global/networks/NETWORK_NAME' cannot be bound to this response policy because it is already bound to another response policy.\nkube-system 9s   Warning FailedPrecondition    service/kube-dns\nFailed to send requests to Cloud DNS due to a previous error. Please check the cluster events.\n```\nTo resolve the issue, complete the following steps:\n- Get the response policy bound to the network:```\ngcloud dns response-policies list --filter='networks.networkUrl: NETWORK_URL'\n```Replace `` with the network URL from the error, such as `https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/networks/NETWORK_NAME` .If the output is empty, the response policy might not be in the same project. Proceed to the next step to search for the response policy.If the output is similar to the following, skip to step 4 to delete the response policy.```\n[ {\n  \"description\": \"Response Policy for GKE cluster \\\"CLUSTER_NAME\\\" with cluster suffix \\\"cluster.local.\\\" in project \\\"PROJECT_ID\\\" with scope \\\"CLUSTER_SCOPE\\\".\",\n  ...\n  \"kind\": \"dns#responsePolicy\",\n  \"responsePolicyName\": \"gke-CLUSTER_NAME-POLICY_ID-rp\"\n }\n]\n```\n- Get a list of projects with the `dns.networks.bindDNSResponsePolicy` permission using the [IAM Policy Analyzer](/policy-intelligence/docs/analyze-iam-policies#principal-query-all) .\n- Check if each project has the response policy that is bound to the network:```\ngcloud dns response-policies list --filter='networks.networkUrl:NETWORK_URL' \\\u00a0 \u00a0 --project=PROJECT_NAME\n```\n- [Delete the response policy](/dns/docs/zones/manage-response-policies#delete-response-policy) .\n### Invalid configuration specified in kube-dns\nThe following event occurs when you apply a custom [kube-dns ConfigMap](/kubernetes-engine/docs/how-to/kube-dns#adding_custom_resolvers_for_stub_domains) that is not valid for Cloud DNS for GKE:\n```\nkube-system 49s   Warning FailedValidation     configmap/kube-dns\nInvalid configuration specified in kube-dns: error parsing stubDomains for ConfigMap kube-dns: dnsServer [8.8.8.256] validation: IP address \"8.8.8.256\" invalid\n```\nTo resolve this issue, review the details in the error for the invalid part of the ConfigMap. In the preceding example, `8.8.8.256` is not a valid IP address.\n## What's next\n- For general information about diagnosing Kubernetes DNS issues, see [Debugging DNS Resolution](https://kubernetes.io/docs/tasks/administer-cluster/dns-debugging-resolution/) .\n- To help diagnose Cloud DNS issues, you can enable Cloud DNS [Logging](/dns/docs/monitoring) and review the [Cloud DNS troubleshooting doc](/dns/docs/troubleshooting) .\n- If you need additional assistance, reach out to [Cloud Customer Care](/kubernetes-engine/docs/getting-support) .", "guide": "Google Kubernetes Engine (GKE)"}