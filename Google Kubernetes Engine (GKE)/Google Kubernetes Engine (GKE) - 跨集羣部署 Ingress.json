{"title": "Google Kubernetes Engine (GKE) - \u8de8\u96c6\u7fa3\u90e8\u7f72 Ingress", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/multi-cluster-ingress?hl=zh-cn", "abstract": "# Google Kubernetes Engine (GKE) - \u8de8\u96c6\u7fa3\u90e8\u7f72 Ingress\n\u672c\u9801\u9762\u4ecb\u7d39\u5982\u4f55\u90e8\u7f72\u8de8\u591a\u500b GKE \u96c6\u7fa3\u63d0\u4f9b\u61c9\u7528\u7684 Ingress\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u591a\u96c6\u7fa3 Ingress\uff0c\u8acb\u53c3\u95b1 [\u591a\u96c6\u7fa3 Ingress](https://cloud.google.com/kubernetes-engine/docs/concepts/multi-cluster-ingress?hl=zh-cn) \u3002\n\u5982\u9700\u67e5\u770b\u591a\u96c6\u7fa3 Ingress (MCI)\u3001\u591a\u96c6\u7fa3\u7db2\u95dc (MCG) \u8207\u4f7f\u7528\u7368\u7acb\u7db2\u7d61\u7aef\u9ede\u7d44\uff08LB \u548c\u7368\u7acb NEG\uff09\u7684\u8ca0\u8f09\u5747\u8861\u5668\u4e4b\u9593\u7684\u8a73\u7d30\u6bd4\u8f03\uff0c\u8acb\u53c3\u95b1 [\u9078\u64c7\u9069\u7528\u65bc GKE \u7684\u591a\u96c6\u7fa3\u8ca0\u8f09\u5747\u8861 API](https://cloud.google.com/kubernetes-engine/docs/concepts/choose-mc-lb-api?hl=zh-cn) \u3002\n", "content": "## \u90e8\u7f72\u6559\u7a0b\n\u5728\u4ee5\u4e0b\u4efb\u52d9\u4e2d\uff0c\u60a8\u5c07\u5728\u5169\u500b\u96c6\u7fa3\u4e2d\u90e8\u7f72\u4e00\u500b\u540d\u7232 `whereami` \u7684\u865b\u69cb\u61c9\u7528\u548c\u4e00\u500b `MultiClusterIngress` \u3002Ingress \u7232\u61c9\u7528\u90e8\u7f72\u63d0\u4f9b\u5171\u4eab\u865b\u64ec IP (VIP) \u5730\u5740\u3002\n\u672c\u9801\u9762\u57fa\u65bc\u60a8\u5728 [\u8a2d\u7f6e\u591a\u96c6\u7fa3 Ingress](https://cloud.google.com/kubernetes-engine/docs/how-to/multi-cluster-ingress-setup?hl=zh-cn) \u4e2d\u5b8c\u6210\u7684\u5de5\u4f5c\uff08\u4e5f\u5c31\u662f\u5275\u5efa\u4e26\u8a3b\u518a\u4e86\u5169\u500b\u96c6\u7fa3\uff09\u69cb\u5efa\u3002\u78ba\u8a8d\u60a8\u6709\u5169\u500b\u96c6\u7fa3\u4e5f\u5df2\u8a3b\u518a\u5230 [\u968a\u5217](https://cloud.google.com/anthos/fleet-management/docs?hl=zh-cn) \uff1a\n```\ngcloud container clusters list\n```\n\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a\n```\nNAME LOCATION  MASTER_VERSION MASTER_IP  MACHINE_TYPE NODE_VERSION  NUM_NODES STATUS\ngke-eu europe-west1-b 1.16.8-gke.9 ***    e2-medium  1.16.8-gke.9  2   RUNNING\ngke-us us-central1-b 1.16.8-gke.9 ***    e2-medium  1.16.6-gke.13 * 2   RUNNING\n```\n### \u5275\u5efa\u547d\u540d\u7a7a\u9593\n\u7531\u65bc\u968a\u5217\u5177\u6709 [\u547d\u540d\u7a7a\u9593\u76f8\u540c\u6027](https://cloud.google.com/kubernetes-engine/docs/concepts/multi-cluster-ingress?hl=zh-cn#namespace_sameness) \u7684\u5c6c\u6027\uff0c\u6211\u5011\u5efa\u8b70\u60a8\u8de8\u96c6\u7fa3\u5354\u8abf\u547d\u540d\u7a7a\u9593\u7684\u5275\u5efa\u548c\u7ba1\u7406\uff0c\u4ee5\u4fbf\u76f8\u540c\u7684\u547d\u540d\u7a7a\u9593\u7531\u540c\u4e00\u7fa3\u7d44\u64c1\u6709\u548c\u7ba1\u7406\u3002\u60a8\u53ef\u4ee5\u6309\u5718\u968a\u3001\u74b0\u5883\u3001\u61c9\u7528\u6216\u61c9\u7528\u7d44\u4ef6\u5275\u5efa\u547d\u540d\u7a7a\u9593\u3002\u53ea\u8981\u4e00\u500b\u96c6\u7fa3\u4e2d\u7684\u547d\u540d\u7a7a\u9593 `ns1` \u8207\u53e6\u4e00\u500b\u96c6\u7fa3\u4e2d\u7684 `ns1` \u5177\u6709\u76f8\u540c\u7684\u542b\u7fa9\u548c\u4f7f\u7528\u60c5\u6cc1\uff0c\u547d\u540d\u7a7a\u9593\u5c31\u53ef\u4ee5\u6839\u64da\u9700\u8981\u9032\u884c\u7d30\u5316\u3002\n\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u60a8\u5c07\u7232\u6bcf\u500b\u96c6\u7fa3\u4e2d\u7684\u6bcf\u500b\u61c9\u7528\u5275\u5efa\u4e00\u500b `whereami` \u547d\u540d\u7a7a\u9593\u3002\n- \u5275\u5efa\u4e00\u500b\u540d\u7232 `namespace.yaml` \u4e14\u5305\u542b\u4ee5\u4e0b\u5167\u5bb9\u7684\u6587\u4ef6\uff1a```\napiVersion: v1kind: Namespacemetadata:\u00a0 name: whereami\n``` **\u6ce8\u610f** \uff1a\u5728\u90e8\u7f72\u8cc7\u6e90\u6642\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 `kubectl config use-context` \u5728\u96c6\u7fa3\u4e4b\u9593\u5207\u63db\u3002\u4f7f\u7528 `kubectl config get-contexts` \u67e5\u770b\u53ef\u7528\u7684\u4e0a\u4e0b\u6587\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 `kubectl config rename-context` \u5c07\u4e0a\u4e0b\u6587\u91cd\u547d\u540d\u7232\u66f4\u6613\u8a18\u7684\u540d\u7a31\u3002\n- \u5207\u63db\u5230 gke-us \u4e0a\u4e0b\u6587\uff1a```\nkubectl config use-context gke-us\n```\n- \u5275\u5efa\u547d\u540d\u7a7a\u9593\uff1a```\nkubectl apply -f namespace.yaml\n```\n- \u5207\u63db\u5230 gke-eu \u4e0a\u4e0b\u6587\uff1a```\nkubectl config use-context gke-eu\n```\n- \u5275\u5efa\u547d\u540d\u7a7a\u9593\uff1a```\nkubectl apply -f namespace.yaml\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nnamespace/whereami created\n```\n### \u90e8\u7f72\u61c9\u7528\n- \u5275\u5efa\u4e00\u500b\u540d\u7232 `deploy.yaml` \u4e14\u5305\u542b\u4ee5\u4e0b\u5167\u5bb9\u7684\u6587\u4ef6\uff1a```\napiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: whereami-deployment\u00a0 namespace: whereami\u00a0 labels:\u00a0 \u00a0 app: whereamispec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app: whereami\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 app: whereami\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: frontend\u00a0 \u00a0 \u00a0 \u00a0 image: us-docker.pkg.dev/google-samples/containers/gke/whereami:v1.2.20\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 8080\n```\n- \u5207\u63db\u5230 gke-us \u4e0a\u4e0b\u6587\uff1a```\nkubectl config use-context gke-us\n```\n- \u90e8\u7f72 `whereami` \u61c9\u7528\uff1a```\nkubectl apply -f deploy.yaml\n```\n- \u5207\u63db\u5230 gke-eu \u4e0a\u4e0b\u6587\uff1a```\nkubectl config use-context gke-eu\n```\n- \u90e8\u7f72 `whereami` \u61c9\u7528\uff1a```\nkubectl apply -f deploy.yaml\n```\n- \u9a57\u8b49 `whereami` \u61c9\u7528\u662f\u5426\u5df2\u5728\u6bcf\u500b\u96c6\u7fa3\u4e2d\u6210\u529f\u90e8\u7f72\uff1a```\nkubectl get deployment --namespace whereami\n```\u5169\u500b\u96c6\u7fa3\u4e2d\u7684\u8f38\u51fa\u61c9\u5982\u4e0b\u6240\u793a\uff1a```\nNAME   READY UP-TO-DATE AVAILABLE AGE\nwhereami-deployment 1/1  1   1   12m\n```\n### \u901a\u904e\u914d\u7f6e\u96c6\u7fa3\u9032\u884c\u90e8\u7f72\n\u5728\u8de8 `gke-us` \u548c `gke-eu` \u90e8\u7f72\u61c9\u7528\u5f8c\uff0c\u60a8\u5c07\u901a\u904e\u5728\u914d\u7f6e\u96c6\u7fa3\u4e2d\u90e8\u7f72 `MultiClusterIngress` \u548c `MultiClusterService` \u8cc7\u6e90\u4f86\u90e8\u7f72\u8ca0\u8f09\u5747\u8861\u5668\u3002\u5b83\u5011\u662f Ingress \u548c Service \u8cc7\u6e90\u7684\u591a\u96c6\u7fa3\u7b49\u6548\u9805\u3002\n\u5728 [\u8a2d\u7f6e\u6307\u5357](https://cloud.google.com/kubernetes-engine/docs/how-to/multi-cluster-ingress-setup?hl=zh-cn#specifying_a_config_cluster) \u4e2d\uff0c\u60a8\u5df2\u5c07 `gke-us` \u96c6\u7fa3\u914d\u7f6e\u7232\u914d\u7f6e\u96c6\u7fa3\u3002\u914d\u7f6e\u96c6\u7fa3\u7528\u65bc\u8de8\u6240\u6709\u96c6\u7fa3\u90e8\u7f72\u548c\u914d\u7f6e Ingress\u3002\n- \u5c07\u4e0a\u4e0b\u6587\u8a2d\u7f6e\u7232\u914d\u7f6e\u96c6\u7fa3\u3002```\nkubectl config use-context gke-us\n``` **\u6ce8\u610f** \uff1a\u4efb\u4f55\u6642\u5019\u90fd\u53ea\u80fd\u6709\u4e00\u500b\u96c6\u7fa3\u662f\u6d3b\u52d5\u914d\u7f6e\u96c6\u7fa3\u3002\u60a8\u53ef\u4ee5\u5c07 `MultiClusterIngress` \u548c `MultiClusterService` \u8cc7\u6e90\u90e8\u7f72\u5230\u5176\u4ed6\u96c6\u7fa3\uff0c\u4f46\u591a\u96c6\u7fa3 Ingress \u63a7\u5236\u5668\u770b\u4e0d\u5230\u9019\u4e9b\u8cc7\u6e90\uff0c\u4e5f\u4e0d\u6703\u8655\u7406\u9019\u4e9b\u8cc7\u6e90\u3002- \u5275\u5efa\u4e00\u500b\u540d\u7232 `mcs.yaml` \u4e14\u5305\u542b\u4ee5\u4e0b\u5167\u5bb9\u7684\u6587\u4ef6\uff1a```\napiVersion: networking.gke.io/v1kind: MultiClusterServicemetadata:\u00a0 name: whereami-mcs\u00a0 namespace: whereamispec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 selector:\u00a0 \u00a0 \u00a0 \u00a0 app: whereami\u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 - name: web\u00a0 \u00a0 \u00a0 \u00a0 protocol: TCP\u00a0 \u00a0 \u00a0 \u00a0 port: 8080\u00a0 \u00a0 \u00a0 \u00a0 targetPort: 8080\n```\n- \u90e8\u7f72\u8207 `whereami` \u61c9\u7528\u5339\u914d\u7684 `MultiClusterService` \u8cc7\u6e90\uff1a```\nkubectl apply -f mcs.yaml\n```\n- \u9a57\u8b49 `whereami-mcs` \u8cc7\u6e90\u662f\u5426\u5df2\u6210\u529f\u90e8\u7f72\u5230\u914d\u7f6e\u96c6\u7fa3\u4e2d\uff1a```\nkubectl get mcs -n whereami\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nNAME \u00a0 \u00a0 \u00a0 AGEwhereami-mcs \u00a0 9m26s\n```\u6b64 `MultiClusterService` \u6703\u5728\u6bcf\u500b\u96c6\u7fa3\u4e2d\u5275\u5efa\u4e00\u500b\u5c07 Pod \u8207 `app: whereami` \u9032\u884c\u6bd4\u5c0d\u7684\u6d3e\u751f\u7121\u982d\u670d\u52d9\u3002\u60a8\u53ef\u4ee5\u770b\u5230 `gke-us` \u96c6\u7fa3 `kubectl get service -n whereami` \u4e2d\u5b58\u5728\u4e00\u9805\u9019\u6a23\u7684\u670d\u52d9\u3002\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nNAME        TYPE  CLUSTER-IP EXTERNAL-IP PORT(S)   AGE\nmci-whereami-mcs-svc-lgq966x5mxwwvvum ClusterIP None   <none>  8080/TCP   4m59s\n```\n`gke-eu` \u4e2d\u4e5f\u5c07\u5b58\u5728\u4e00\u500b\u985e\u4f3c\u7684\u7121\u982d\u670d\u52d9\u3002\u9019\u4e9b\u672c\u5730\u670d\u52d9\u7528\u65bc\u52d5\u614b\u9078\u64c7 Pod \u7aef\u9ede\uff0c\u4ee5\u901a\u904e\u5f8c\u7aef\u5c0d\u5168\u5c40 Ingress \u8ca0\u8f09\u5747\u8861\u5668\u9032\u884c\u7de8\u7a0b\u3002- \u5275\u5efa\u4e00\u500b\u540d\u7232 `mci.yaml` \u4e14\u5305\u542b\u4ee5\u4e0b\u5167\u5bb9\u7684\u6587\u4ef6\uff1a```\napiVersion: networking.gke.io/v1kind: MultiClusterIngressmetadata:\u00a0 name: whereami-ingress\u00a0 namespace: whereamispec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 backend:\u00a0 \u00a0 \u00a0 \u00a0 serviceName: whereami-mcs\u00a0 \u00a0 \u00a0 \u00a0 servicePort: 8080\n```\u8acb\u6ce8\u610f\uff0c\u6b64\u914d\u7f6e\u6703\u5c07\u6240\u6709\u6d41\u91cf\u90fd\u8def\u7531\u5230 `whereami` \u547d\u540d\u7a7a\u9593\u4e2d\u5b58\u5728\u7684 `MultiClusterService` \uff08\u540d\u7232 `whereami-mcs` \uff09\u3002\n- \u90e8\u7f72\u5c07 `whereami-mcs` \u4f5c\u7232\u5f8c\u7aef\u9032\u884c\u5f15\u7528\u7684 `MultiClusterIngress` \u8cc7\u6e90\uff1a```\nkubectl apply -f mci.yaml\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nmulticlusteringress.networking.gke.io/whereami-ingress created\n```\u8acb\u6ce8\u610f\uff0c `MultiClusterIngress` \u8207 Kubernetes Ingress \u5177\u6709\u76f8\u540c\u7684\u67b6\u69cb\u3002Ingress \u8cc7\u6e90\u8a9e\u7fa9\u4e5f\u76f8\u540c\uff0c\u4f46 `backend.serviceName` \u5b57\u6bb5\u9664\u5916\u3002\n`MultiClusterIngress` \u4e2d\u7684 `backend.serviceName` \u5b57\u6bb5\u5f15\u7528 Fleet API \u4e2d\u7684 `MultiClusterService` \uff0c\u800c\u4e0d\u662f Kubernetes \u96c6\u7fa3\u4e2d\u7684 Service\u3002\u9019\u610f\u5473\u7740 Ingress \u7684\u4efb\u4f55\u8a2d\u7f6e\uff08\u5982 TLS \u7d42\u6b62\uff09\u90fd\u53ef\u4ee5\u63a1\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u9032\u884c\u914d\u7f6e\u3002\n## \u9a57\u8b49\u90e8\u7f72\u72c0\u614b\u662f\u5426\u7232\u6210\u529f\nGoogle Cloud \u8ca0\u8f09\u5747\u8861\u5668\u90e8\u7f72\u53ef\u80fd\u9700\u8981\u5e7e\u5206\u9418\u624d\u80fd\u5b8c\u6210\u65b0\u8ca0\u8f09\u5747\u8861\u5668\u7684\u90e8\u7f72\u3002\u66f4\u65b0\u73fe\u6709\u8ca0\u8f09\u5747\u8861\u5668\u7684\u901f\u5ea6\u66f4\u5feb\uff0c\u56e0\u7232\u4e0d\u9700\u8981\u90e8\u7f72\u65b0\u8cc7\u6e90\u3002 `MultiClusterIngress` \u8cc7\u6e90\u8a73\u7d30\u8aaa\u660e\u4e86\u4ee3\u8868 `MultiClusterIngress` \u5275\u5efa\u7684\u5e95\u5c64 Compute Engine \u8cc7\u6e90\u3002\n- \u9a57\u8b49\u90e8\u7f72\u662f\u5426\u6210\u529f\uff1a```\nkubectl describe mci whereami-ingress -n whereami\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nName:   whereami-ingress\nNamespace: whereami\nLabels:  <none>\nAnnotations: kubectl.kubernetes.io/last-applied-configuration:\n    {\"apiVersion\":\"networking.gke.io/v1\",\"kind\":\"MultiClusterIngress\",\"metadata\":{\"annotations\":{},\"name\":\"whereami-ingress\",\"namespace\":\"whe...\nAPI Version: networking.gke.io/v1\nKind:   MultiClusterIngress\nMetadata:\n Creation Timestamp: 2020-04-10T23:35:10Z\n Finalizers:\n mci.finalizer.networking.gke.io\n Generation:  2\n Resource Version: 26458887\n Self Link:   /apis/networking.gke.io/v1/namespaces/whereami/multiclusteringresses/whereami-ingress\n UID:    62bec0a4-8a08-4cd8-86b2-d60bc2bda63d\nSpec:\n Template:\n Spec:\n  Backend:\n  Service Name: whereami-mcs\n  Service Port: 8080\nStatus:\n Cloud Resources:\n Backend Services:\n  mci-8se3df-8080-whereami-whereami-mcs\n Firewalls:\n  mci-8se3df-default-l7\n Forwarding Rules:\n  mci-8se3df-fw-whereami-whereami-ingress\n Health Checks:\n  mci-8se3df-8080-whereami-whereami-mcs\n Network Endpoint Groups:\n  zones/europe-west1-b/networkEndpointGroups/k8s1-e4adffe6-whereami-mci-whereami-mcs-svc-lgq966x5m-808-88670678\n  zones/us-central1-b/networkEndpointGroups/k8s1-a6b112b6-whereami-mci-whereami-mcs-svc-lgq966x5m-808-609ab6c6\n Target Proxies:\n  mci-8se3df-whereami-whereami-ingress\n URL Map: mci-8se3df-whereami-whereami-ingress\n VIP:  34.98.102.37\nEvents:\n Type Reason Age     From        Message\n ---- ------ ----     ----        ------ Normal ADD  3m35s     multi-cluster-ingress-controller whereami/whereami-ingress\n Normal UPDATE 3m10s (x2 over 3m34s) multi-cluster-ingress-controller whereami/whereami-ingress\n```\u6709\u5e7e\u500b\u5b57\u6bb5\u6307\u793a\u6b64 Ingress \u90e8\u7f72\u7684\u72c0\u614b\uff1a- \u9996\u5148\u6aa2\u67e5 `Events` \u3002\u5982\u679c\u767c\u751f\u932f\u8aa4\uff0c\u5247\u6703\u5728\u9019\u88cf\u5217\u51fa\u3002\n- `Cloud Resource` \u5217\u51fa\u4e86\u591a\u96c6\u7fa3 Ingress \u63a7\u5236\u5668\u5275\u5efa\u7684 Compute Engine \u8cc7\u6e90\uff0c\u4f8b\u5982\u8f49\u767c\u898f\u5247\u3001\u5f8c\u7aef\u670d\u52d9\u548c\u9632\u706b\u7246\u898f\u5247\u3002\u5982\u679c\u672a\u5217\u51fa\uff0c\u5247\u8868\u793a\u5c1a\u672a\u5275\u5efa\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u63a7\u5236\u6aaf\u6216 `gcloud` \u547d\u4ee4\u6aa2\u67e5\u5404\u500b Compute Engine \u8cc7\u6e90\u4ee5\u7372\u53d6\u5176\u72c0\u614b\u3002\n- `VIP` \u6703\u5217\u51fa IP \u5730\u5740\uff08\u5982\u679c\u5df2\u5206\u914d\uff09\u3002\u8acb\u6ce8\u610f\uff0c\u5373\u4f7f\u5b58\u5728 VIP\uff0c\u8ca0\u8f09\u5747\u8861\u5668\u4e5f\u53ef\u80fd\u5c1a\u672a\u8655\u7406\u6d41\u91cf\u3002\u5982\u679c\u60a8\u5728\u5e7e\u5206\u9418\u5f8c\u6c92\u6709\u770b\u5230 VIP\uff0c\u6216\u8005\u8ca0\u8f09\u5747\u8861\u5668\u5728 10 \u5206\u9418\u5167\u672a\u63d0\u4f9b 200 \u97ff\u61c9\uff0c\u8acb\u53c3\u95b1 [\u554f\u984c\u6392\u67e5\u548c\u64cd\u4f5c](https://cloud.google.com/kubernetes-engine/docs/how-to/troubleshooting-and-ops?hl=zh-cn) \u3002\n\u5982\u679c\u8f38\u51fa\u4e8b\u4ef6\u7232 `Normal` \uff0c\u5247 `MultiClusterIngress` \u90e8\u7f72\u53ef\u80fd\u662f\u6210\u529f\u7684\uff0c\u4f46\u78ba\u5b9a\u5b8c\u6574\u6d41\u91cf\u8def\u5f91\u662f\u5426\u6b63\u5e38\u904b\u884c\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u5c0d\u5176\u9032\u884c\u6e2c\u8a66\u3002\n- \u9a57\u8b49\u61c9\u7528\u662f\u5426\u6b63\u5728\u901a\u904e `/ping` \u7aef\u9ede\u5728 VIP \u4e0a\u63d0\u4f9b\u670d\u52d9\uff1a```\ncurl INGRESS_VIP/ping\n```\u5c07 `` \u66ff\u63db\u7232\u865b\u64ec IP (VIP) \u5730\u5740\u3002\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\n{\"cluster_name\": \"gke-us\",\"host_header\": \"34.120.175.141\",\"pod_name\": \"whereami-deployment-954cbf78-mtlpf\",\"pod_name_emoji\": \"\ud83d\ude0e\",\"project_id\": \"my-project\",\"timestamp\": \"2021-11-29T17:01:59\",\"zone\": \"us-central1-b\"}\n```\u8f38\u51fa\u61c9\u6307\u660e\u61c9\u7528\u7684\u5730\u5340\u548c\u5f8c\u7aef\u3002\n- \u60a8\u9084\u53ef\u4ee5\u8f49\u5230\u700f\u89bd\u5668\u4e2d\u7684 `http://` `` \u7db2\u5740\uff0c\u67e5\u770b\u61c9\u7528\u7684\u5716\u5f62\u7248\u672c\uff0c\u5176\u4e2d\u986f\u793a\u4e86\u61c9\u7528\u7684\u4f86\u6e90\u5730\u5340\u3002\u6d41\u91cf\u8981\u8f49\u767c\u5230\u54ea\u500b\u96c6\u7fa3\u53d6\u6c7a\u65bc\u60a8\u7684\u4f4d\u7f6e\u3002GCLB \u65e8\u5728\u5c07\u5ba2\u6236\u7aef\u6d41\u91cf\u8f49\u767c\u5230\u8ddd\u96e2\u6700\u8fd1\u4e26\u4e14\u6709\u53ef\u7528\u5bb9\u91cf\u7684\u5f8c\u7aef\u3002## \u8cc7\u6e90\u898f\u7bc4\n### MultiClusterService \u898f\u7bc4\n`MultiClusterService` \u5b9a\u7fa9\u7531\u5169\u90e8\u5206\u7d44\u6210\uff1a\n- `template` \u90e8\u5206\uff0c\u5b9a\u7fa9\u8981\u5728 Kubernetes \u96c6\u7fa3\u4e2d\u5275\u5efa\u7684 Service\u3002\u8acb\u6ce8\u610f\uff0c\u96d6\u7136 `template` \u90e8\u5206\u5305\u542b\u5178\u578b Service \u4e2d\u652f\u6301\u7684\u5b57\u6bb5\uff0c\u4f46 `MultiClusterService` \u50c5\u652f\u6301\u5169\u500b\u5b57\u6bb5\uff1a `selector` \u548c `ports` \u3002\u5176\u4ed6\u5b57\u6bb5\u6703\u88ab\u5ffd\u7565\u3002\n- \u53ef\u9078\u7684 `clusters` \u90e8\u5206\uff0c\u5b9a\u7fa9\u54ea\u4e9b\u96c6\u7fa3\u63a5\u6536\u6d41\u91cf\u4ee5\u53ca\u6bcf\u500b\u96c6\u7fa3\u7684\u8ca0\u8f09\u5747\u8861\u5c6c\u6027\u3002\u5982\u679c\u672a\u6307\u5b9a `clusters` \u90e8\u5206\uff0c\u6216\u8005\u672a\u5217\u51fa\u4efb\u4f55\u96c6\u7fa3\uff0c\u5247\u9ed8\u8a8d\u4f7f\u7528\u6240\u6709\u96c6\u7fa3\u3002\n\u4ee5\u4e0b\u6e05\u55ae\u63cf\u8ff0\u4e86\u4e00\u500b\u6a19\u6e96 `MultiClusterService` \uff1a\n```\napiVersion: networking.gke.io/v1kind: MultiClusterServicemetadata:\u00a0 name: NAME\u00a0 namespace: NAMESPACEspec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 selector:\u00a0 \u00a0 \u00a0 \u00a0 app: POD_LABEL\u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 - name: web\u00a0 \u00a0 \u00a0 \u00a0 protocol: TCP\u00a0 \u00a0 \u00a0 \u00a0 port: PORT\u00a0 \u00a0 \u00a0 \u00a0 targetPort: TARGET_PORT\n```\n\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a\n- ``\uff1a`MultiClusterService`\u7684\u540d\u7a31\u3002\u6b64\u540d\u7a31\u7531`MultiClusterIngress`\u8cc7\u6e90\u4e2d\u7684`serviceName`\u5b57\u6bb5\u5f15\u7528\u3002\n- ``\uff1a\u5728\u5176\u4e2d\u90e8\u7f72\u4e86`MultiClusterService`\u7684 Kubernetes \u547d\u540d\u7a7a\u9593\u3002\u5b83\u5fc5\u9808\u8207\u8266\u968a\u5167\u6240\u6709\u96c6\u7fa3\u4e2d\u7684`MultiClusterIngress`\u548c Pod \u4f4d\u65bc\u540c\u4e00\u547d\u540d\u7a7a\u9593\u4e2d\u3002\n- ``\uff1a\u4e00\u500b\u6a19\u7c64\uff0c\u7528\u65bc\u78ba\u5b9a\u5728\u8266\u968a\u7684\u6240\u6709\u96c6\u7fa3\u4e2d\u9078\u64c7\u54ea\u4e9b pod \u4f5c\u7232\u6b64`MultiClusterService`\u7684\u5f8c\u7aef\u3002\n- ``\uff1a\u5fc5\u9808\u8207\u5f15\u7528\u6b64`MultiClusterService`\u7684`MultiClusterIngress`\u6240\u5f15\u7528\u7684\u7aef\u53e3\u5339\u914d\u3002\n- ``\uff1a\u7528\u65bc\u5f9e GCLB \u5c07\u6d41\u91cf\u767c\u9001\u5230 Pod \u7684\u7aef\u53e3\u3002\u7cfb\u7d71\u6703\u5728\u6bcf\u500b\u96c6\u7fa3\u4e2d\u5275\u5efa\u4e00\u500b NEG\uff0c\u4e26\u5c07\u6b64\u7aef\u53e3\u7528\u4f5c\u5176\u670d\u52d9\u7aef\u53e3\u3002\n### MultiClusterIngress \u898f\u7bc4\n\u4ee5\u4e0b `mci.yaml` \u63cf\u8ff0\u4e86\u8ca0\u8f09\u5747\u8861\u5668\u524d\u7aef\uff1a\n```\napiVersion: networking.gke.io/v1kind: MultiClusterIngressmetadata:\u00a0 name: NAME\u00a0 namespace: NAMESPACEspec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 backend:\u00a0 \u00a0 \u00a0 \u00a0serviceName: DEFAULT_SERVICE\u00a0 \u00a0 \u00a0 \u00a0servicePort: PORT\u00a0 \u00a0 \u00a0 rules:\u00a0 \u00a0 \u00a0 \u00a0 - host: HOST_HEADER\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 http:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 paths:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - path: PATH\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 backend:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 serviceName: SERVICE\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 servicePort: PORT\n```\n\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a\n- ``\uff1a`MultiClusterIngress`\u8cc7\u6e90\u7684\u540d\u7a31\u3002\n- ``\uff1a\u5728\u5176\u4e2d\u90e8\u7f72\u4e86`MultiClusterIngress`\u7684 Kubernetes \u547d\u540d\u7a7a\u9593\u3002\u5b83\u5fc5\u9808\u8207\u8266\u968a\u4e2d\u6240\u6709\u96c6\u7fa3\u7684`MultiClusterService`\u548c Pod \u4f4d\u65bc\u540c\u4e00\u547d\u540d\u7a7a\u9593\u4e2d\u3002\n- ``\uff1a\u5145\u7576\u8207\u4efb\u4f55\u4e3b\u6a5f\u6216\u8def\u5f91\u898f\u5247\u4e0d\u5339\u914d\u7684\u6240\u6709\u6d41\u91cf\u7684\u9ed8\u8a8d\u5f8c\u7aef\u3002\u9019\u662f\u5fc5\u586b\u5b57\u6bb5\uff0c\u5373\u4f7f\u914d\u7f6e\u4e86\u5176\u4ed6\u4e3b\u6a5f\u6216\u8def\u5f91\u5339\u914d\u9805\uff0c\u4e5f\u5fc5\u9808\u5728`MultiClusterIngress`\u4e2d\u6307\u5b9a\u9ed8\u8a8d\u5f8c\u7aef\u3002\n- ``\uff1a\u4efb\u4f55\u6709\u6548\u7684\u7aef\u53e3\u865f\u3002\u6b64\u5b57\u6bb5\u5fc5\u9808\u8207`MultiClusterService`\u8cc7\u6e90\u7684`port`\u5b57\u6bb5\u5339\u914d\u3002\n- ``\uff1a\u6309 HTTP \u4e3b\u6a5f\u6a19\u982d\u5b57\u6bb5\u5339\u914d\u6d41\u91cf\u3002`host`\u5b57\u6bb5\u7232\u53ef\u9078\u5b57\u6bb5\u3002\n- ``\uff1a\u6309 HTTP \u7db2\u5740\u7684\u8def\u5f91\u5339\u914d\u6d41\u91cf\u3002`path`\u5b57\u6bb5\u7232\u53ef\u9078\u5b57\u6bb5\u3002\n- ``\uff1a\u8207\u6b64`MultiClusterIngress`\u90e8\u7f72\u5728\u540c\u4e00\u547d\u540d\u7a7a\u9593\u548c\u914d\u7f6e\u96c6\u7fa3\u4e2d\u7684`MultiClusterService`\u7684\u540d\u7a31\u3002## \u591a\u96c6\u7fa3 Ingress \u529f\u80fd\n\u672c\u90e8\u5206\u4ecb\u7d39\u5982\u4f55\u914d\u7f6e\u5176\u4ed6\u591a\u96c6\u7fa3 Ingress \u529f\u80fd\u3002\n### \u96c6\u7fa3\u9078\u64c7\n\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u6e90\u81ea\u591a\u96c6\u7fa3 Ingress \u7684 Service \u6703\u5b89\u6392\u5728\u6bcf\u500b\u6210\u54e1\u96c6\u7fa3\u4e0a\u3002\u4e0d\u904e\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u5c07\u5165\u7ad9\u6d41\u91cf\u898f\u5247\u61c9\u7528\u65bc\u7279\u5b9a\u96c6\u7fa3\u3002\u4e00\u4e9b\u4f7f\u7528\u5834\u666f\u5305\u62ec\uff1a\n- \u5c07\u591a\u96c6\u7fa3 Ingress \u61c9\u7528\u65bc\u9664\u914d\u7f6e\u96c6\u7fa3\u4ee5\u5916\u7684\u6240\u6709\u96c6\u7fa3\uff0c\u4ee5\u9694\u96e2\u914d\u7f6e\u96c6\u7fa3\u3002\n- \u4ee5\u85cd\u7da0\u90e8\u7f72\u65b9\u5f0f\u5728\u96c6\u7fa3\u4e4b\u9593\u9077\u79fb\u5de5\u4f5c\u8ca0\u8f09\u3002\n- \u8def\u7531\u5230\u50c5\u5b58\u5728\u65bc\u90e8\u5206\u96c6\u7fa3\u4e2d\u7684\u61c9\u7528\u5f8c\u7aef\u3002\n- \u4f7f\u7528\u55ae\u500b L7 VIP \u5c07\u4e3b\u6a5f\u6216\u8def\u5f91\u8def\u7531\u5230\u4e0d\u540c\u96c6\u7fa3\u4e0a\u7684\u5f8c\u7aef\u3002\n\u901a\u904e\u96c6\u7fa3\u9078\u64c7\uff0c\u60a8\u53ef\u4ee5\u5728 `MultiClusterService` \u5c0d\u8c61\u4e2d\u6309\u5340\u57df\u6216\u540d\u7a31\u9078\u64c7\u96c6\u7fa3\u3002\u9019\u5c07\u63a7\u5236\u60a8\u7684 `MultiClusterIngress` \u6307\u5411\u54ea\u4e9b\u96c6\u7fa3\u4ee5\u53ca\u5c07\u5728\u54ea\u4e9b\u4f4d\u7f6e\u5b89\u6392\u6d3e\u751f\u7684 Service\u3002\u540c\u4e00\u8266\u968a\u548c\u5340\u57df\u4e2d\u7684\u96c6\u7fa3\u4e0d\u5f97\u540c\u540d\uff0c\u9019\u6a23\u5c31\u53ef\u4ee5\u7368\u4e00\u7121\u4e8c\u5730\u5f15\u7528\u96c6\u7fa3\u3002\n- \u6253\u958b\u201c `mcs.yaml` \u201d```\napiVersion: networking.gke.io/v1kind: MultiClusterServicemetadata:\u00a0 name: whereami-mcs\u00a0 namespace: whereamispec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 selector:\u00a0 \u00a0 \u00a0 \u00a0 app: whereami\u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 - name: web\u00a0 \u00a0 \u00a0 \u00a0 protocol: TCP\u00a0 \u00a0 \u00a0 \u00a0 port: 8080\u00a0 \u00a0 \u00a0 \u00a0 targetPort: 8080\n```\u6b64\u898f\u7bc4\u6703\u5728\u6240\u6709\u96c6\u7fa3\u4e2d\u5275\u5efa\u6d3e\u751f Service\uff0c\u9019\u662f\u9ed8\u8a8d\u884c\u7232\u3002\n- \u5728\u201cclusters\u201d\u90e8\u5206\u9644\u52a0\u4ee5\u4e0b\u5e7e\u884c\uff1a```\napiVersion: networking.gke.io/v1kind: MultiClusterServicemetadata:\u00a0 name: whereami-mcs\u00a0 namespace: whereamispec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 selector:\u00a0 \u00a0 \u00a0 \u00a0 app: whereami\u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 - name: web\u00a0 \u00a0 \u00a0 \u00a0 protocol: TCP\u00a0 \u00a0 \u00a0 \u00a0 port: 8080\u00a0 \u00a0 \u00a0 \u00a0 targetPort: 8080\u00a0 clusters:\u00a0 - link: \"us-central1-b/gke-us\"\u00a0 - link: \"europe-west1-b/gke-eu\"\n```\u6b64\u793a\u4f8b\u50c5\u5728 gke-us \u548c gke-eu \u96c6\u7fa3\u4e2d\u5275\u5efa\u6d3e\u751f Service \u8cc7\u6e90\u3002\u60a8\u5fc5\u9808\u9078\u64c7\u96c6\u7fa3\u7e94\u80fd\u6709\u9078\u64c7\u5730\u61c9\u7528\u5165\u7ad9\u6d41\u91cf\u898f\u5247\u3002\u5982\u679c\u672a\u6307\u5b9a `MultiClusterService` \u7684\u201cclusters\u201d\u90e8\u5206\uff0c\u6216\u672a\u5217\u51fa\u4efb\u4f55\u96c6\u7fa3\uff0c\u5247\u6703\u89e3\u91cb\u7232\u9ed8\u8a8d\u7684\u201c\u6240\u6709\u201d\u96c6\u7fa3\u3002\n### HTTPS \u652f\u6301\nKubernetes [Secret](https://kubernetes.io/docs/concepts/configuration/secret/) \u652f\u6301 HTTPS\u3002\u5728\u5553\u7528 HTTPS \u652f\u6301\u4e4b\u524d\uff0c\u60a8\u5fc5\u9808\u5148\u5275\u5efa\u975c\u614b IP \u5730\u5740\u3002\u6b64\u975c\u614b IP \u5141\u8a31 HTTP \u548c HTTPS \u5171\u4eab\u540c\u4e00 IP \u5730\u5740\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u5275\u5efa\u975c\u614b IP \u5730\u5740](#static) \u3002\n\u5275\u5efa\u975c\u614b IP \u5730\u5740\u5f8c\uff0c\u60a8\u5c31\u53ef\u4ee5\u5275\u5efa Secret \u4e86\u3002\n**\u6ce8\u610f** \uff1a\u516c\u9470\u8b49\u66f8\u5fc5\u9808\u63a1\u7528 .PEM \u7de8\u78bc\uff0c\u4e14\u8207\u6307\u5b9a\u7684\u79c1\u9470\u76f8\u5339\u914d\u3002\n- \u5275\u5efa Secret\uff1a```\nkubectl -n whereami create secret tls SECRET_NAME --key PATH_TO_KEYFILE --cert PATH_TO_CERTFILE\n```\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \u5c07``\u66ff\u63db\u7232\u60a8\u7684 Secret \u540d\u7a31\u3002\n- \u5c07``\u66ff\u63db\u7232 TLS \u5bc6\u9470\u6587\u4ef6\u7684\u8def\u5f91\u3002\n- \u5c07``\u66ff\u63db\u7232 TLS \u8b49\u66f8\u6587\u4ef6\u7684\u8def\u5f91\u3002\n- \u4f7f\u7528 Secret \u540d\u7a31\u66f4\u65b0 `mci.yaml` \u6587\u4ef6\uff1a```\napiVersion: networking.gke.io/v1kind: MultiClusterIngressmetadata:\u00a0 name: whereami-ingress\u00a0 namespace: whereami\u00a0 annotations:\u00a0 \u00a0 networking.gke.io/static-ip: STATIC_IP_ADDRESSspec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 backend:\u00a0 \u00a0 \u00a0 \u00a0 serviceName: whereami-mcs\u00a0 \u00a0 \u00a0 \u00a0 servicePort: 8080\u00a0 \u00a0 \u00a0 tls:\u00a0 \u00a0 \u00a0 - secretName: SECRET_NAME\n```\u5c07 `` \u66ff\u63db\u7232\u60a8\u7684 Secret \u7684\u540d\u7a31\u3002 `` \u662f\u60a8\u5728 [\u5275\u5efa\u975c\u614b IP](#static) \u90e8\u5206\u4e2d\u6240\u5206\u914d\u7684\u5730\u5740\u7684 IP \u5730\u5740\u6216\u8005\u5b8c\u6574\u7db2\u5740\u3002\n- \u91cd\u65b0\u90e8\u7f72 `MultiClusterIngress` \u8cc7\u6e90\uff1a```\nkubectl apply -f mci.yaml\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nmulticlusteringress.networking.gke.io/whereami-ingress configured\n```\n### BackendConfig \u652f\u6301\n\u4ee5\u4e0b BackendConfig CRD \u53ef\u8b93\u60a8\u81ea\u5b9a\u7fa9 Compute Engine BackendService \u8cc7\u6e90\u7684\u8a2d\u7f6e\uff1a\n```\napiVersion: cloud.google.com/v1kind: BackendConfigmetadata:\u00a0 name: whereami-health-check-cfg\u00a0 namespace: whereamispec:\u00a0 healthCheck:\u00a0 \u00a0 checkIntervalSec: [int]\u00a0 \u00a0 timeoutSec: [int]\u00a0 \u00a0 healthyThreshold: [int]\u00a0 \u00a0 unhealthyThreshold: [int]\u00a0 \u00a0 type: [HTTP | HTTPS | HTTP2 | TCP]\u00a0 \u00a0 port: [int]\u00a0 \u00a0 requestPath: [string]\u00a0 timeoutSec: [int]\u00a0 connectionDraining:\u00a0 \u00a0 drainingTimeoutSec: [int]\u00a0 sessionAffinity:\u00a0 \u00a0 affinityType: [CLIENT_IP | CLIENT_IP_PORT_PROTO | CLIENT_IP_PROTO | GENERATED_COOKIE | HEADER_FIELD | HTTP_COOKIE | NONE]\u00a0 \u00a0 affinityCookieTtlSec: [int]\u00a0 cdn:\u00a0 \u00a0 enabled: [bool]\u00a0 \u00a0 cachePolicy:\u00a0 \u00a0 \u00a0 includeHost: [bool]\u00a0 \u00a0 \u00a0 includeQueryString: [bool]\u00a0 \u00a0 \u00a0 includeProtocol: [bool]\u00a0 \u00a0 \u00a0 queryStringBlacklist: [string list]\u00a0 \u00a0 \u00a0 queryStringWhitelist: [string list]\u00a0 securityPolicy:\u00a0 \u00a0 name: ca-how-to-security-policy\u00a0 logging:\u00a0 \u00a0 enable: [bool]\u00a0 \u00a0 sampleRate: [float]\u00a0 iap:\u00a0 \u00a0 enabled: [bool]\u00a0 \u00a0 oauthclientCredentials:\u00a0 \u00a0 \u00a0 secretName: [string]\n```\n\u5982\u9700\u4f7f\u7528 BackendConfig\uff0c\u8acb\u4f7f\u7528\u8a3b\u89e3\u5c07\u5176\u9644\u52a0\u5230 `MultiClusterService` \u8cc7\u6e90\uff1a\n```\napiVersion: networking.gke.io/v1kind: MultiClusterServicemetadata:\u00a0 name: whereami-mcs\u00a0 namespace: whereami\u00a0 annotations:\u00a0 \u00a0 cloud.google.com/backend-config: '{\"ports\": {\"8080\":\"whereami-health-check-cfg\"}}'spec:\u00a0template:\u00a0 \u00a0spec:\u00a0 \u00a0 \u00a0selector:\u00a0 \u00a0 \u00a0 \u00a0app: whereami\u00a0 \u00a0 \u00a0ports:\u00a0 \u00a0 \u00a0- name: web\u00a0 \u00a0 \u00a0 \u00a0protocol: TCP\u00a0 \u00a0 \u00a0 \u00a0port: 8080\u00a0 \u00a0 \u00a0 \u00a0targetPort: 8080\n```\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3 BackendConfig \u8a9e\u7fa9\uff0c\u8acb\u53c3\u95b1 [\u5c07 Service \u7aef\u53e3\u8207 BackendConfig \u9032\u884c\u95dc\u806f](https://cloud.google.com/kubernetes-engine/docs/concepts/backendconfig?hl=zh-cn#associating_a_service_port_with_a_backendconfig) \u3002\n### gRPC \u652f\u6301\n\u5728\u591a\u96c6\u7fa3 Ingress \u4e2d\u914d\u7f6e gRPC \u61c9\u7528\u9700\u8981\u975e\u5e38\u5177\u9ad4\u7684\u8a2d\u7f6e\u3002\u4ee5\u4e0b\u63d0\u793a\u53ef\u5e6b\u60a8\u78ba\u4fdd\u6b63\u78ba\u914d\u7f6e\u8ca0\u8f09\u5747\u8861\u5668\uff1a\n- \u78ba\u4fdd\u5f9e\u8ca0\u8f09\u5747\u8861\u5668\u5230\u60a8\u7684\u61c9\u7528\u7684\u6d41\u91cf\u662f HTTP/2\u3002\u8acb\u4f7f\u7528 [\u61c9\u7528\u5354\u8b70](#application_protocols) \u9032\u884c\u914d\u7f6e\u3002\n- \u7531\u65bc\u9019\u662f HTTP/2 \u7684 [\u8981\u6c42](https://cloud.google.com/load-balancing/docs/https?hl=zh-cn#protocol_to_the_backends) \uff0c\u56e0\u6b64\u8acb\u78ba\u4fdd\u60a8\u7684\u61c9\u7528\u5df2\u91dd\u5c0d SSL \u9032\u884c\u4e86\u6b63\u78ba\u7684\u914d\u7f6e\u3002\u8acb\u6ce8\u610f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u81ea\u7c3d\u540d\u8b49\u66f8\u3002\n- \u60a8\u5fc5\u9808\u95dc\u9589\u61c9\u7528\u4e0a\u7684 mTLS\uff0c\u56e0\u7232\u7cfb\u7d71 [\u4e0d\u652f\u6301](https://cloud.google.com/load-balancing/docs/https?hl=zh-cn#client_communications_with_the_load_balancer) mTLS \u7528\u65bc L7 \u5916\u90e8\u8ca0\u8f09\u5747\u8861\u5668\u3002## \u8cc7\u6e90\u751f\u547d\u9031\u671f\n### \u914d\u7f6e\u8b8a\u66f4\n`MultiClusterIngress` \u548c `MultiClusterService` \u8cc7\u6e90\u4f5c\u7232\u6a19\u6e96 Kubernetes \u5c0d\u8c61\u904b\u884c\uff0c\u56e0\u6b64\u5c0d\u8c61\u7684\u8b8a\u66f4\u6703\u7570\u6b65\u53cd\u6620\u5728\u7cfb\u7d71\u4e2d\u3002\u4efb\u4f55\u5c0e\u81f4\u914d\u7f6e\u7121\u6548\u7684\u8b8a\u66f4\u90fd\u6703\u5c0e\u81f4\u95dc\u806f\u7684 Google Cloud \u5c0d\u8c61\u4fdd\u6301\u4e0d\u8b8a\uff0c\u4e26\u5728\u5c0d\u8c61\u4e8b\u4ef6\u6d41\u4e2d\u5f15\u767c\u932f\u8aa4\u3002\u8207\u914d\u7f6e\u76f8\u95dc\u7684\u932f\u8aa4\u5c07\u5831\u544a\u7232\u4e8b\u4ef6\u3002\n### \u7ba1\u7406 Kubernetes \u8cc7\u6e90\n\u522a\u9664 Ingress \u5c0d\u8c61\u6703\u522a\u9664 HTTP(S) \u8ca0\u8f09\u5747\u8861\u5668\uff0c\u4ee5\u4fbf\u4e0d\u518d\u5c07\u6d41\u91cf\u8f49\u767c\u5230\u4efb\u4f55\u5df2\u5b9a\u7fa9\u7684 `MultiClusterService` \u3002\n\u522a\u9664 `MultiClusterService` \u5373\u6703\u79fb\u9664\u6bcf\u500b\u96c6\u7fa3\u4e2d\u95dc\u806f\u7684\u6d3e\u751f Service\u3002\n### \u7ba1\u7406\u96c6\u7fa3\n\u53ef\u901a\u904e\u5728\u8266\u968a\u4e2d\u6dfb\u52a0\u96c6\u7fa3\u6216\u5f9e\u8266\u968a\u4e2d\u79fb\u9664\u96c6\u7fa3\u4f86\u66f4\u6539\u8ca0\u8f09\u5747\u8861\u5668\u6240\u5b9a\u4f4d\u7684\u90a3\u7d44\u96c6\u7fa3\u3002\n\u4f8b\u5982\uff0c\u5982\u9700\u79fb\u9664 `gke-eu` \u96c6\u7fa3\u7684\u8cc7\u683c\uff0c\u4f7f\u5176\u4e0d\u518d\u662f Ingress \u7684\u5f8c\u7aef\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ngcloud container fleet memberships unregister CLUSTER_NAME \\\u00a0 --gke-uri=URI\n```\n\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a\n- ``\uff1a\u60a8\u7684\u96c6\u7fa3\u7684\u540d\u7a31\u3002\n- ``\uff1aGKE \u96c6\u7fa3\u7684 URI\u3002\n\u5982\u9700\u5728\u6b50\u6d32\u6dfb\u52a0\u96c6\u7fa3\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ngcloud container fleet memberships register europe-cluster \\\u00a0 --context=europe-cluster --enable-workload-identity\n```\n\u60a8\u53ef\u4ee5\u5728 [\u8a3b\u518a GKE \u96c6\u7fa3](https://cloud.google.com/anthos/fleet-management/docs/register/gke?hl=zh-cn) \u4e2d\u627e\u5230\u6709\u95dc\u96c6\u7fa3\u8a3b\u518a\u9078\u9805\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u8acb\u6ce8\u610f\uff0c\u8a3b\u518a\u6216\u53d6\u6d88\u8a3b\u518a\u96c6\u7fa3\u540e\uff0c\u5b83\u7684\u72c0\u614b\u5c07\u767c\u751f\u8b8a\u5316\uff0c\u5b83\u5c07\u4e0d\u518d\u662f\u6240\u6709 Ingress \u7684\u5f8c\u7aef\u3002\u53d6\u6d88\u8a3b\u518a `gke-eu` \u96c6\u7fa3\u6703\u79fb\u9664\u5176\u8cc7\u683c\uff0c\u4f7f\u5176\u4e0d\u518d\u662f\u60a8\u5275\u5efa\u7684\u6240\u6709 Ingress \u7684\u53ef\u7528\u5f8c\u7aef\u3002\u8a3b\u518a\u65b0\u96c6\u7fa3\u7684\u6548\u679c\u6b63\u597d\u76f8\u53cd\u3002\n**\u6ce8\u610f** \uff1a\u5982\u679c\u60a8\u8981\u522a\u9664\u8266\u968a\u6210\u54e1\u96c6\u7fa3\uff0c\u8acb\u78ba\u4fdd\u5728\u522a\u9664\u4e4b\u524d\u53d6\u6d88\u8a3b\u518a\u96c6\u7fa3\u3002\u5426\u5247\uff0c\u53ef\u80fd\u6703\u5c0e\u81f4\u610f\u5916\u884c\u7232\u3002\n### \u505c\u7528\u591a\u96c6\u7fa3 Ingress\n\u5728\u505c\u7528\u591a\u96c6\u7fa3 Ingress \u4e4b\u524d\uff0c\u60a8\u5fc5\u9808\u5148\u522a\u9664 `MultiClusterIngress` \u548c `MultiClusterService` \u8cc7\u6e90\uff0c\u4e26\u9a57\u8b49\u6240\u6709\u95dc\u806f\u7684\u7db2\u7d61\u8cc7\u6e90\u90fd\u5df2\u522a\u9664\u3002\n\u7136\u5f8c\uff0c\u5982\u9700\u505c\u7528\u591a\u96c6\u7fa3 Ingress\uff0c\u8acb\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ngcloud container fleet ingress disable\n```\n\u5982\u679c\u60a8\u6c92\u6709\u5728\u505c\u7528\u591a\u96c6\u7fa3 Ingress \u4e4b\u524d\u522a\u9664 `MultiClusterIngress` \u548c `MultiClusterService` \u8cc7\u6e90\uff0c\u5247\u53ef\u80fd\u6703\u9047\u5230\u5982\u4e0b\u6240\u793a\u7684\u932f\u8aa4\uff1a\n```\nFeature has associated resources that should be cleaned up before deletion.\n```\n\u5982\u679c\u8981\u5f37\u5236\u505c\u7528\u591a\u96c6\u7fa3 Ingress\uff0c\u8acb\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ngcloud container fleet ingress disable --force\n```\n**\u6ce8\u610f** \uff1a\u5f37\u5236\u505c\u7528\u53ef\u80fd\u6703\u5c0e\u81f4\u610f\u5916\u884c\u7232\u3002\u4e0d\u5efa\u8b70\u5728\u751f\u7522\u74b0\u5883\u4e2d\u5f37\u5236\u505c\u7528\u3002\n## \u8a3b\u89e3\n`MultiClusterIngress` \u548c `MultiClusterService` \u8cc7\u6e90\u652f\u6301\u4ee5\u4e0b\u8a3b\u89e3\u3002\n| \u8a3b\u89e3        | \u8aaa\u660e                 |\n|:-----------------------------------|:------------------------------------------------------------------------|\n| networking.gke.io/frontend-config | \u5f15\u7528\u8207 MultiClusterIngress \u8cc7\u6e90\u76f8\u540c\u7684\u547d\u540d\u7a7a\u9593\u4e2d\u7684 FrontendConfig \u8cc7\u6e90\u3002 |\n| networking.gke.io/static-ip  | \u5f15\u7528\u5168\u5c40\u975c\u614b IP \u5730\u5740\u7684\u6587\u672c IP \u5730\u5740\u3002         |\n| networking.gke.io/pre-shared-certs | \u5f15\u7528\u5168\u5c40 SSLCertificate \u8cc7\u6e90\u3002           |\n| \u8a3b\u89e3       | \u8aaa\u660e                                       |\n|:--------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| networking.gke.io/app-protocols | \u4f7f\u7528\u6b64\u8a3b\u89e3\u53ef\u8a2d\u7f6e\u8ca0\u8f09\u5747\u8861\u5668\u8207\u61c9\u7528\u4e4b\u9593\u7684\u901a\u4fe1\u5354\u8b70\u3002\u53ef\u80fd\u7684\u5354\u8b70\u6709 HTTP\u3001HTTPS \u548c HTTP/2\u3002 \u8acb\u53c3\u95b1\u8ca0\u8f09\u5747\u8861\u5668\u8207\u61c9\u7528\u4e4b\u9593\u7684 HTTPS \u548c\u4f7f\u7528 Ingress \u9032\u884c\u8ca0\u8f09\u5747\u8861\u7684 HTTP/2\u3002 |\n| cloud.google.com/backend-config | \u4f7f\u7528\u6b64\u8a3b\u89e3\u914d\u7f6e\u8207 servicePort \u95dc\u806f\u7684\u5f8c\u7aef\u670d\u52d9\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 Ingress \u914d\u7f6e\u3002                    |\n### SSL \u653f\u7b56\u548c HTTPS \u91cd\u5b9a\u5411\n\u60a8\u53ef\u4ee5\u4f7f\u7528 FrontendConfig \u8cc7\u6e90\u914d\u7f6e SSL \u653f\u7b56\u548c HTTPS \u91cd\u5b9a\u5411\u3002\u901a\u904e SSL \u653f\u7b56\uff0c\u60a8\u53ef\u4ee5\u6307\u5b9a\u8ca0\u8f09\u5747\u8861\u5668\u63a5\u53d7\u7684\u52a0\u5bc6\u5957\u4ef6\u548c TLS \u7248\u672c\u3002\u901a\u904e HTTPS \u91cd\u5b9a\u5411\uff0c\u60a8\u53ef\u4ee5\u5f37\u5236\u57f7\u884c\u5f9e HTTP \u6216\u7aef\u53e3 80 \u5230 HTTPS \u6216\u7aef\u53e3 443 \u7684\u91cd\u5b9a\u5411\u3002\u4ee5\u4e0b\u6b65\u9a5f\u5c07\u914d\u7f6e SSL \u653f\u7b56\u548c HTTPS \u91cd\u5b9a\u5411\u3002\u8acb\u6ce8\u610f\uff0c\u53ef\u55ae\u7368\u914d\u7f6e\u5b83\u5011\u3002\n- \u5275\u5efa [SSL \u653f\u7b56](https://cloud.google.com/load-balancing/docs/use-ssl-policies?hl=zh-cn#creating_an_ssl_policy_with_a_google-managed_profile) \uff0c\u4ee5\u62d2\u7d55\u4f7f\u7528\u4f4e\u65bc TLS v1.2 \u7684\u7248\u672c\u7684\u8acb\u6c42\u3002```\ngcloud compute ssl-policies create tls-12-policy \\\u00a0--profile MODERN \\\u00a0--min-tls-version 1.2 \\\u00a0--project=PROJECT_ID\n```\u5c07 `` \u66ff\u63db\u7232\u5728\u5176\u4e2d\u904b\u884c GKE \u96c6\u7fa3\u7684\u9805\u76ee\u7684 ID\u3002\n- \u67e5\u770b\u60a8\u7684\u653f\u7b56\u4ee5\u78ba\u4fdd\u5b83\u5df2\u5275\u5efa\u3002```\ngcloud compute ssl-policies list --project=PROJECT_ID\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nNAME   PROFILE MIN_TLS_VERSION\ntls-12-policy MODERN TLS_1_2\n```\n- \u7232 `foo.example.com` \u5275\u5efa\u8b49\u66f8\uff0c\u5982 [\u793a\u4f8b](https://cloud.google.com/kubernetes-engine/docs/how-to/deploying-gateways?hl=zh-cn#creating_and_storing_a_tls_certificate) \u6240\u793a\u3002\u7372\u53d6 `key.pem` \u548c `cert.pem` \u5f8c\uff0c\u8acb\u5c07\u9019\u4e9b\u6191\u64da\u5b58\u5132\u7232\u5c07\u7531 MultiClusterIngress \u8cc7\u6e90\u5f15\u7528\u7684 Secret\u3002```\nkubectl -n whereami create secret tls SECRET_NAME --key key.pem --cert cert.pem\n```\n- \u5c07\u4ee5\u4e0b FrontendConfig \u8cc7\u6e90\u4fdd\u5b58\u7232 `frontendconfig.yaml` \u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3 FrontendConfig \u4e2d\u652f\u6301\u7684\u5b57\u6bb5\uff0c\u8acb\u53c3\u95b1 [\u914d\u7f6e FrontendConfig \u8cc7\u6e90](https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-configuration?hl=zh-cn#configuring_ingress_features_through_frontendconfig_parameters) \u3002```\napiVersion: networking.gke.io/v1beta1kind: FrontendConfigmetadata:\u00a0 name: frontend-redirect-tls-policy\u00a0 namespace: whereamispec:\u00a0 sslPolicy: tls-12-policy\u00a0 redirectToHttps:\u00a0 \u00a0 enabled: true\n```\u6b64 FrontendConfig \u5c07\u5553\u7528 HTTPS \u91cd\u5b9a\u5411\uff0c\u4ee5\u53ca\u5f37\u5236\u57f7\u884c\u6700\u4f4e TLS \u7248\u672c 1.2 \u7684 SSL \u653f\u7b56\u3002\n- \u5c07 `frontendconfig.yaml` \u90e8\u7f72\u5230\u914d\u7f6e\u96c6\u7fa3\u4e2d\u3002```\nkubectl apply -f frontendconfig.yaml --context MCI_CONFIG_CLUSTER\n```\u5c07 `` \u66ff\u63db\u7232\u60a8\u7684 [\u914d\u7f6e\u96c6\u7fa3](https://cloud.google.com/kubernetes-engine/docs/how-to/multi-cluster-ingress-setup?hl=zh-cn#specifying_a_config_cluster) \u7684\u540d\u7a31\u3002\n- \u5c07\u4ee5\u4e0b MultiClusterIngress \u4fdd\u5b58\u7232 `mci-frontendconfig.yaml` \u3002```\napiVersion: networking.gke.io/v1kind: MultiClusterIngressmetadata:\u00a0 name: foo-ingress\u00a0 namespace: whereami\u00a0 annotations:\u00a0 \u00a0 networking.gke.io/frontend-config: frontend-redirect-tls-policy\u00a0 \u00a0 networking.gke.io/static-ip: STATIC_IP_ADDRESSspec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 backend:\u00a0 \u00a0 \u00a0 \u00a0 serviceName: default-backend\u00a0 \u00a0 \u00a0 \u00a0 servicePort: 8080\u00a0 \u00a0 \u00a0 rules:\u00a0 \u00a0 \u00a0 - host: foo.example.com\u00a0 \u00a0 \u00a0 \u00a0 http:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 paths:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - backend:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 serviceName: whereami-mcs\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 servicePort: 8080\u00a0 \u00a0 \u00a0 tls:\u00a0 \u00a0 \u00a0 - secretName: SECRET_NAME\n```- \u5c07``\u66ff\u63db\u7232\u5df2\u9810\u914d\u7684\u975c\u614b\u5168\u7403 IP \u5730\u5740\u3002\n- \u5c07``\u66ff\u63db\u7232\u5b58\u5132`foo.example.com`\u8b49\u66f8\u7684 Secret\u3002\n\u5553\u7528 HTTPS \u91cd\u5b9a\u5411\u6642\u6709\u5169\u500b\u8981\u6c42\uff1a- \u5fc5\u9808\u901a\u904e`spec.tls`\u5b57\u6bb5\u6216\u9810\u5171\u4eab\u8b49\u66f8\u8a3b\u89e3`networking.gke.io/pre-shared-certs`\u5553\u7528 TLS\u3002\u5982\u679c\u5553\u7528\u4e86 HTTPS \u91cd\u5b9a\u5411\uff0c\u4f46\u672a\u5553\u7528 HTTPS\uff0c\u5247\u4e0d\u6703\u90e8\u7f72 MultiClusterIngress\u3002\n- \u5fc5\u9808\u901a\u904e`networking.gke.io/static-ip`\u8a3b\u89e3\u5f15\u7528\u975c\u614b IP \u5730\u5740\u3002\u5728 MultiClusterIngress \u4e0a\u5553\u7528 HTTPS \u6642\u9700\u8981\u975c\u614b IP \u5730\u5740\u3002\n **\u6ce8\u610f** \uff1a\u672c\u793a\u4f8b\u4e2d\u672a\u986f\u793a\u61c9\u7528\u6216 MultiClusterService \u7684\u90e8\u7f72\uff0c\u4f46\u5fc5\u9808\u5275\u5efa\u9019\u4e9b\u90e8\u7f72\u624d\u80fd\u5b8c\u5168\u6b63\u5e38\u904b\u884c\u3002\n- \u5c07 MultiClusterIngress \u90e8\u7f72\u5230\u914d\u7f6e\u96c6\u7fa3\u3002```\nkubectl apply -f mci-frontendconfig.yaml --context MCI_CONFIG_CLUSTER\n```\n- \u7b49\u5f85\u4e00\u5169\u5206\u9418\uff0c\u7136\u5f8c\u6aa2\u67e5 `foo-ingress` \u3002```\nkubectl describe mci foo-ingress --context MCI_CONFIG_CLUSTER\n```\u6210\u529f\u7684\u8f38\u51fa\u5982\u4e0b\u6240\u793a\uff1a- `Cloud Resources`\u72c0\u614b\u586b\u5145\u4e86\u8cc7\u6e90\u540d\u7a31\n- `VIP`\u5b57\u6bb5\u4f7f\u7528\u8ca0\u8f09\u5747\u8861\u5668 IP \u5730\u5740\u586b\u5145\n```\nName:   foobar-ingress\nNamespace: whereami\n...\nStatus:\n Cloud Resources:\n Backend Services:\n  mci-otn9zt-8080-whereami-bar\n  mci-otn9zt-8080-whereami-default-backend\n  mci-otn9zt-8080-whereami-foo\n Firewalls:\n  mci-otn9zt-default-l7\n Forwarding Rules:\n  mci-otn9zt-fw-whereami-foobar-ingress\n  mci-otn9zt-fws-whereami-foobar-ingress\n Health Checks:\n  mci-otn9zt-8080-whereami-bar\n  mci-otn9zt-8080-whereami-default-backend\n  mci-otn9zt-8080-whereami-foo\n Network Endpoint Groups:\n  zones/europe-west1-b/networkEndpointGroups/k8s1-1869d397-multi-cluste-mci-default-backend-svc--80-9e362e3d\n  zones/europe-west1-b/networkEndpointGroups/k8s1-1869d397-multi-cluster--mci-bar-svc-067a3lzs8-808-89846515\n  zones/europe-west1-b/networkEndpointGroups/k8s1-1869d397-multi-cluster--mci-foo-svc-820zw3izx-808-8bbcb1de\n  zones/us-central1-b/networkEndpointGroups/k8s1-a63e24a6-multi-cluste-mci-default-backend-svc--80-a528cc75\n  zones/us-central1-b/networkEndpointGroups/k8s1-a63e24a6-multi-cluster--mci-bar-svc-067a3lzs8-808-36281739\n  zones/us-central1-b/networkEndpointGroups/k8s1-a63e24a6-multi-cluster--mci-foo-svc-820zw3izx-808-ac733579\n Target Proxies:\n  mci-otn9zt-whereami-foobar-ingress\n  mci-otn9zt-whereami-foobar-ingress\n URL Map: mci-otn9zt-rm-whereami-foobar-ingress\n VIP:  34.149.29.76\nEvents:\n Type  Reason Age    From        Message\n ----  ------ ----    ----        ------ Normal UPDATE 38m (x5 over 62m) multi-cluster-ingress-controller whereami/foobar-ingress\n```\n- \u901a\u904e `curl` \u767c\u9001 HTTP \u8acb\u6c42\u4f86\u9a57\u8b49 HTTPS \u91cd\u5b9a\u5411\u662f\u5426\u6b63\u5e38\u904b\u884c\u3002```\ncurl VIP\n```\u5c07 `` \u66ff\u63db\u7232 MultiClusterIngress IP \u5730\u5740\u3002\u8f38\u51fa\u61c9\u986f\u793a\u8acb\u6c42\u5df2\u91cd\u5b9a\u5411\u5230 HTTPS \u7aef\u53e3\uff0c\u9019\u8868\u793a\u91cd\u5b9a\u5411\u6b63\u5e38\u904b\u884c\u3002\n- \u4f7f\u7528 TLS 1.1 \u7248\u767c\u9001 HTTPS \u8acb\u6c42\u4f86\u9a57\u8b49 TLS \u653f\u7b56\u662f\u5426\u6b63\u5e38\u904b\u884c\u3002\u7531\u65bc\u6c92\u6709\u7232\u6b64\u7db2\u57df\u914d\u7f6e DNS\uff0c\u56e0\u6b64\u8acb\u4f7f\u7528 `--resolve` \u9078\u9805\u6307\u793a `curl` \u76f4\u63a5\u89e3\u6790 IP \u5730\u5740\u3002```\ncurl https://foo.example.com --resolve foo.example.com:443:VIP --cacert CERT_FILE -v\n```\u6b64\u6b65\u9a5f\u9700\u8981\u4f7f\u7528\u7528\u65bc\u4fdd\u8b77 MultiClusterIngress \u7684\u8b49\u66f8 PEM \u6587\u4ef6\u3002\u6210\u529f\u7684\u8f38\u51fa\u5c07\u5982\u4e0b\u6240\u793a\uff1a```\n...\n* SSL connection using TLSv1.2 / ECDHE-RSA-CHACHA20-POLY1305\n* ALPN, server accepted to use h2\n* Server certificate:\n* subject: O=example; CN=foo.example.com\n* start date: Sep 1 10:32:03 2021 GMT\n* expire date: Aug 27 10:32:03 2022 GMT\n* common name: foo.example.com (matched)\n* issuer: O=example; CN=foo.example.com\n* SSL certificate verify ok.\n* Using HTTP2, server supports multi-use\n* Connection state changed (HTTP/2 confirmed)\n* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n* Using Stream ID: 1 (easy handle 0x7fa10f00e400)\n> GET / HTTP/2\n> Host: foo.example.com\n> User-Agent: curl/7.64.1\n> Accept: */*\n>\n* Connection state changed (MAX_CONCURRENT_STREAMS == 100)!\n< HTTP/2 200\n< content-type: application/json\n< content-length: 308\n< access-control-allow-origin: *\n< server: Werkzeug/1.0.1 Python/3.8.6\n< date: Wed, 01 Sep 2021 11:39:06 GMT\n< via: 1.1 google\n< alt-svc: clear\n<\n{\"cluster_name\":\"gke-us\",\"host_header\":\"foo.example.com\",\"metadata\":\"foo\",\"node_name\":\"gke-gke-us-default-pool-22cb07b1-r5r0.c.mark-church-project.internal\",\"pod_name\":\"foo-75ccd9c96d-dkg8t\",\"pod_name_emoji\":\"\ud83d\udc5e\",\"project_id\":\"mark-church-project\",\"timestamp\":\"2021-09-01T11:39:06\",\"zone\":\"us-central1-b\"}\n* Connection #0 to host foo.example.com left intact\n* Closing connection 0\n```\u97ff\u61c9\u4ee3\u78bc\u7232 200\uff0c\u4e26\u4e14\u4f7f\u7528\u4e86 TLSv1.2\uff0c\u9019\u8868\u793a\u4e00\u5207\u6b63\u5e38\u3002\u63a5\u4e0b\u4f86\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u5617\u8a66\u8207 TLS 1.1 \u9023\u63a5\u4f86\u9a57\u8b49 SSL \u653f\u7b56\u662f\u5426\u5f37\u5236\u57f7\u884c\u6b63\u78ba\u7684 TLS \u7248\u672c\u3002\u60a8\u7684 SSL \u653f\u7b56\u5fc5\u9808\u81f3\u5c11\u914d\u7f6e\u7232 1.2 \u7248\uff0c\u624d\u80fd\u57f7\u884c\u6b64\u6b65\u9a5f\u3002\n- \u767c\u9001\u4e0a\u4e00\u6b65\u4e2d\u7684\u76f8\u540c\u8acb\u6c42\uff0c\u4f46\u5f37\u5236\u57f7\u884c TLS \u7248\u672c 1.1\u3002```\ncurl https://foo.example.com --resolve foo.example.com:443:VIP -v \\\u00a0 --cacert CERT_FILE \\\u00a0 --tls-max 1.1\n```\u6210\u529f\u7684\u8f38\u51fa\u5c07\u5982\u4e0b\u6240\u793a\uff1a```\n* Added foo.example.com:443:34.149.29.76 to DNS cache\n* Hostname foo.example.com was found in DNS cache\n* Trying 34.149.29.76...\n* TCP_NODELAY set\n* Connected to foo.example.com (34.149.29.76) port 443 (#0)\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* successfully set certificate verify locations:\n* CAfile: cert.pem\n CApath: none\n* TLSv1.1 (OUT), TLS handshake, Client hello (1):\n* TLSv1.1 (IN), TLS alert, protocol version (582):\n* error:1400442E:SSL routines:CONNECT_CR_SRVR_HELLO:tlsv1 alert protocol version\n* Closing connection 0\ncurl: (35) error:1400442E:SSL routines:CONNECT_CR_SRVR_HELLO:tlsv1 alert protocol version\n```\u5982\u679c\u672a\u80fd\u5b8c\u6210 TLS \u63e1\u624b\uff0c\u5247\u8868\u793a SSL \u653f\u7b56\u5df2\u6210\u529f\u963b\u6b62 TLS 1.1\u3002\n### \u5275\u5efa\u975c\u614b IP \u5730\u5740\n- \u5206\u914d\u975c\u614b IP \u5730\u5740\uff1a```\ngcloud compute addresses create ADDRESS_NAME --global\n```\u5c07 `` \u66ff\u63db\u7232\u8981\u5206\u914d\u7684\u975c\u614b IP \u5730\u5740\u7684\u540d\u7a31\u3002\u8f38\u51fa\u5305\u542b\u60a8\u5275\u5efa\u7684\u5730\u5740\u7684\u5b8c\u6574\u7db2\u5740\uff0c\u5982\u4e0b\u6240\u793a\uff1a```\nCreated [https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/addresses/ADDRESS_NAME].\n```\n- \u67e5\u770b\u60a8\u525b\u5275\u5efa\u7684 IP \u5730\u5740\uff1a```\ngcloud compute addresses list\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nNAME   ADDRESS/RANGE TYPE  STATUS\nADDRESS_NAME STATIC_IP_ADDRESS EXTERNAL RESERVED\n```\u6b64\u8f38\u51fa\u5305\u62ec\uff1a- \u60a8\u5b9a\u7fa9\u7684``\u3002\n- \u5df2\u5206\u914d``\u3002\n- \u4f7f\u7528\u975c\u614b IP \u5730\u5740\u66f4\u65b0 `mci.yaml` \u6587\u4ef6\uff1a```\napiVersion: networking.gke.io/v1kind: MultiClusterIngressmetadata:\u00a0 name: whereami-ingress\u00a0 namespace: whereami\u00a0 annotations:\u00a0 \u00a0 networking.gke.io/static-ip: STATIC_IP_ADDRESSspec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 backend:\u00a0 \u00a0 \u00a0 \u00a0 serviceName: whereami-mcs\u00a0 \u00a0 \u00a0 \u00a0 servicePort: 8080\n```\u5c07 `` \u66ff\u63db\u7232\uff1a- \u5206\u914d\u7684 IP \u5730\u5740\uff0c\u985e\u4f3c\u65bc\uff1a`34.102.201.47`\n- \u60a8\u5275\u5efa\u7684\u5730\u5740\u7684\u5b8c\u6574\u7db2\u5740\uff0c\u985e\u4f3c\u65bc\uff1a`\"https://www.googleapis.com/compute/v1/projects/` `` `/global/addresses/` `` `\"`\n`` \u4e0d\u662f\u8cc7\u6e90\u540d\u7a31 ( `` )\u3002\n- \u91cd\u65b0\u90e8\u7f72 `MultiClusterIngress` \u8cc7\u6e90\uff1a```\nkubectl apply -f mci.yaml\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nmulticlusteringress.networking.gke.io/whereami-ingress configured\n```\n- \u6309\u7167 [\u9a57\u8b49\u6210\u529f\u90e8\u7f72\u72c0\u614b](#deployment_validation) \u4e2d\u7684\u6b65\u9a5f\u64cd\u4f5c\uff0c\u9a57\u8b49\u90e8\u7f72\u662f\u5426\u6b63\u5728 `` \u4e0a\u63d0\u4f9b\u670d\u52d9\u3002\n### \u9810\u5171\u4eab\u8b49\u66f8\n[\u9810\u5171\u4eab\u8b49\u66f8](https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-multi-ssl?hl=zh-cn#using_pre-shared_certificates) \u662f\u4e0a\u50b3\u5230 Google Cloud \u4ee5\u4f9b\u8ca0\u8f09\u5747\u8861\u5668\u7528\u65bc TLS \u7d42\u6b62\u7684\u8b49\u66f8\uff0c\u800c\u4e0d\u662f\u5b58\u5132\u5728 Kubernetes Secret \u4e2d\u7684\u8b49\u66f8\u3002\u9019\u4e9b\u8b49\u66f8\u6703\u5f9e GKE \u5e36\u5916\u4e0a\u50b3\u5230 Google Cloud\uff0c\u4e26\u7531 `MultiClusterIngress` \u8cc7\u6e90\u5f15\u7528\u3002\u6b64\u5916\uff0c\u7cfb\u7d71\u9084\u652f\u6301\u591a\u4efd\u8b49\u66f8\uff08\u901a\u904e\u9810\u5171\u4eab\u8b49\u66f8\u6216 Kubernetes Secret \u5f62\u5f0f\uff09\u3002\n\u5728\u591a\u96c6\u7fa3 Ingress \u4e2d\u4f7f\u7528\u8b49\u66f8\u9700\u8981\u4f7f\u7528 `networking.gke.io/pre-shared-certs` \u8a3b\u89e3\u548c\u8b49\u66f8\u540d\u7a31\u3002\u7232\u7d66\u5b9a\u7684 `MultiClusterIngress` \u6307\u5b9a\u591a\u7a2e\u8b49\u66f8\u6642\uff0c\u7cfb\u7d71\u6703\u6309\u7167\u9810\u5b9a\u9806\u5e8f\u63a7\u5236\u5411\u5ba2\u7aef\u6236\u5448\u73fe\u54ea\u7a2e\u8b49\u66f8\u3002\n\u60a8\u53ef\u4ee5\u901a\u904e\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u5217\u51fa\u53ef\u7528\u7684 SSL \u8b49\u66f8\uff1a\n```\ngcloud compute ssl-certificates list\n```\n\u4ee5\u4e0b\u793a\u4f8b\u63cf\u8ff0\u4e86\u6d41\u5411\u8207\u9810\u5171\u4eab\u8b49\u66f8\u7684\u516c\u7528\u540d\u5339\u914d\u7684\u4e00\u500b\u6307\u5b9a\u4e3b\u6a5f\u7684\u5ba2\u6236\u7aef\u6d41\u91cf\uff0c\u56e0\u6b64\uff0c\u7cfb\u7d71\u5c07\u5448\u73fe\u8207\u57df\u540d\u5339\u914d\u7684\u76f8\u61c9\u8b49\u66f8\u3002\n```\nkind: MultiClusterIngressmetadata:\u00a0 name: shopping-service\u00a0 namespace: whereami\u00a0 annotations:\u00a0 \u00a0 networking.gke.io/pre-shared-certs: \"domain1-cert, domain2-cert\"spec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 rules:\u00a0 \u00a0 \u00a0 - host: my-domain1.gcp.com\u00a0 \u00a0 \u00a0 \u00a0 http:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 paths:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - backend:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 serviceName: domain1-svc\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 servicePort: 443\u00a0 \u00a0 \u00a0 - host: my-domain2.gcp.com\u00a0 \u00a0 \u00a0 \u00a0 http:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 paths:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - backend:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 serviceName: domain2-svc\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 servicePort: 443\n```\n### Google \u7ba1\u7406\u7684\u8b49\u66f8\n`MultiClusterIngress` \u652f\u6301\u901a\u904e `networking.gke.io/pre-shared-certs` \u8a3b\u89e3\u4f7f\u7528 [Google \u7ba1\u7406\u7684\u8b49\u66f8](https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs?hl=zh-cn) \u3002\u591a\u96c6\u7fa3 Ingress \u652f\u6301\u5c07 Google \u7ba1\u7406\u7684\u8b49\u66f8\u9644\u52a0\u5230 `MultiClusterIngress` \u8cc7\u6e90\uff0c\u4f46\u8207\u55ae\u96c6\u7fa3 Ingress \u4e0d\u540c\uff0c [Kubernetes ManagedCertificate \u8cc7\u6e90\u7684\u8072\u660e\u5f0f\u751f\u6210](https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs?hl=zh-cn#setting_up_the_managed_certificate) \u4e0d\u53d7 `MultiClusterIngress` \u8cc7\u6e90\u652f\u6301\u3002\u60a8\u5fc5\u9808\u901a\u904e `compute ssl-certificates create` API \u76f4\u63a5\u5b8c\u6210 Google \u7ba1\u7406\u7684\u8b49\u66f8\u7684\u539f\u59cb\u5275\u5efa\uff0c\u7136\u5f8c\u624d\u80fd\u5c07\u5176\u9644\u52a0\u5230 `MultiClusterIngress` \u3002\u5177\u9ad4\u6b65\u9a5f\u5982\u4e0b\uff1a\n- \u6309\u7167 [\u7b2c 1 \u6b65](https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs?hl=zh-cn#create-ssl) \u4e2d\u7684\u8aaa\u660e\u5275\u5efa Google \u7ba1\u7406\u7684\u8b49\u66f8\u3002\u8acb\u52ff\u8f49\u5230\u7b2c 2 \u6b65\uff0c\u56e0\u7232\u591a\u96c6\u7fa3 Ingress \u6703\u7232\u60a8\u9644\u52a0\u6b64\u8b49\u66f8\u3002```\ngcloud compute ssl-certificates create my-google-managed-cert \\\u00a0 \u00a0 --domains=my-domain.gcp.com \\\u00a0 \u00a0 --global\n```\n- \u4f7f\u7528 `networking.gke.io/pre-shared-certs` \u8a3b\u89e3\u5728 `MultiClusterIngress` \u4e2d\u5f15\u7528\u8b49\u66f8\u7684\u540d\u7a31\u3002```\nkind: MultiClusterIngressmetadata:name: shopping-servicenamespace: whereamiannotations:\u00a0 networking.gke.io/pre-shared-certs: \"my-google-managed-cert\"spec:template:\u00a0 spec:\u00a0 \u00a0 rules:\u00a0 \u00a0 - host: my-domain.gcp.com\u00a0 \u00a0 \u00a0 http:\u00a0 \u00a0 \u00a0 \u00a0 paths:\u00a0 \u00a0 \u00a0 \u00a0 - backend:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 serviceName: my-domain-svc\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 servicePort: 8080\n```\n\u4e0a\u8ff0\u6e05\u55ae\u5c07\u8b49\u66f8\u9644\u52a0\u5230 `MultiClusterIngress` \uff0c\u4ee5\u4fbf\u7d42\u6b62\u5f8c\u7aef GKE \u96c6\u7fa3\u7684\u6d41\u91cf\u3002Google Cloud \u6703\u5728\u8b49\u66f8\u5230\u671f\u4e4b\u524d [\u81ea\u52d5\u7e8c\u8a02\u8b49\u66f8](https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs?hl=zh-cn#renewal) \u3002\u7e8c\u8a02\u4ee5\u900f\u660e\u65b9\u5f0f\u9032\u884c\uff0c\u4e0d\u9700\u8981\u5c0d\u591a\u96c6\u7fa3 Ingress \u9032\u884c\u4efb\u4f55\u66f4\u65b0\u3002\n### \u61c9\u7528\u5354\u8b70\n\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u5f9e\u8ca0\u8f09\u5747\u8861\u5668\u4ee3\u7406\u5230\u61c9\u7528\u7684\u9023\u63a5\u4f7f\u7528 HTTP\u3002\u4f7f\u7528 `networking.gke.io/app-protocols` \u8a3b\u89e3\uff0c\u60a8\u53ef\u4ee5\u5c07\u8ca0\u8f09\u5747\u8861\u5668\u914d\u7f6e\u7232\u5728\u5c07\u8acb\u6c42\u8f49\u767c\u5230\u61c9\u7528\u6642\u4f7f\u7528 HTTPS \u6216 HTTP/2\u3002\u5728\u4ee5\u4e0b\u793a\u4f8b\u7684 `annotation` \u5b57\u6bb5\u4e2d\uff0c `http2` \u8868\u793a `MultiClusterService` \u7aef\u53e3\u540d\u7a31\uff0c `HTTP2` \u8868\u793a\u8ca0\u8f09\u5747\u8861\u5668\u4f7f\u7528\u7684\u5354\u8b70\u3002\n```\nkind: MultiClusterServicemetadata:\u00a0 name: shopping-service\u00a0 namespace: whereami\u00a0 annotations:\u00a0 \u00a0 networking.gke.io/app-protocols: '{\"http2\":\"HTTP2\"}'spec:\u00a0 template:\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 - port: 443\u00a0 \u00a0 \u00a0 \u00a0 name: http2\n```\n### BackendConfig\n\u8acb\u53c3\u95b1 [\u4e0a\u8ff0](#backendconfig_support) \u90e8\u5206\uff0c\u77ad\u89e3\u5982\u4f55\u914d\u7f6e\u8a3b\u89e3\u3002\n## \u5f8c\u7e8c\u6b65\u9a5f\n- [\u95b1\u8b80 GKE \u7db2\u7d61\u6982\u89bd](https://cloud.google.com/kubernetes-engine/docs/concepts/network-overview?hl=zh-cn) \u3002\n- \u8a73\u7d30\u77ad\u89e3\u5982\u4f55 [\u4f7f\u7528 Ingress \u8a2d\u7f6e HTTP \u8ca0\u8f09\u5e73\u8861](https://cloud.google.com/kubernetes-engine/docs/tutorials/http-balancer?hl=zh-cn) \u3002\n- \u5be6\u73fe [\u4f7f\u7528\u7aef\u5230\u7aef HTTPS \u7684\u591a\u96c6\u7fa3 Ingress](https://github.com/GoogleCloudPlatform/gke-networking-recipes/tree/main/ingress/multi-cluster/mci-https-e2e) \u3002", "guide": "Google Kubernetes Engine (GKE)"}