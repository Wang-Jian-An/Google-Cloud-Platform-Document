{"title": "Google Kubernetes Engine (GKE) - Rotate your control plane IP", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/ip-rotation", "abstract": "# Google Kubernetes Engine (GKE) - Rotate your control plane IP\nThis page explains how to perform an IP rotation for your control plane in Google Kubernetes Engine (GKE) clusters running version 1.16.10-gke.8 and later.\n", "content": "## Overview\nYou can perform an to change the IP address that your control plane uses to serve requests from the Kubernetes API. The control plane IP address is static and doesn't change unless you perform an IP rotation.\nIP rotation changes the SSL certificate and cluster certificate authority (CA), which limits the ability to connect the previous address with the new one.\nIP rotation also occurs as a part of [credential rotation](/kubernetes-engine/docs/how-to/credential-rotation) .\n## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.## Perform an IP rotation\nIP rotation is a multi-step process:\n- When you initiate an IP rotation, your control plane begins serving on the new IP address in addition to the original IP address.\n- GKE recreates your node pools to use the new IP address.\n- After you initiate a rotation, you must update your cluster's API clients (such as development machines using the`kubectl`command-line interface) to begin communicating with the control plane over the new IP address.\n- When you complete the rotation, the control plane ceases serving traffic over the previous IP address.\n**Note:** If you start an IP rotation, but do not complete it, GKE automatically completes the rotation after seven days.\n### Initiate the rotation\n- To initiate an IP rotation, run the following command:```\ngcloud container clusters update CLUSTER_NAME \\\u00a0 \u00a0 --start-ip-rotation\n```Replace `` with the name of the cluster.The output is similar to the following:```\nThis will start an IP Rotation on cluster CLUSTER_NAME.\nThe master will be updated to serve on a new IP address in addition to\nthe current IP address. Google Kubernetes Engine will then schedule recreation of all nodes\nto point to the new IP address. If maintenance window is\nused, nodes are not recreated until a maintenance window occurs. See\ndocumentation on how to manually update nodes. This operation is\nlong-running and will block other operations on the cluster (including\ndelete) until it has run to completion.\nDo you want to continue (Y/n)?\n```This command configures the control plane to serve on two IP addresses: the original address and a new address. **Caution:** This command causes brief downtime for the cluster API.\n- Confirm the rotation and leave the shell open for the operation to complete.\n### Recreate nodes\nAfter reconfiguring the API server to serve on a new IP address, GKE automatically updates your nodes to use the new IP address. GKE upgrades all of your nodes to the nearest supported node version, which recreates the nodes. For more information, refer to [Node pool upgrades](/kubernetes-engine/docs/concepts/cluster-upgrades#node_pool_upgrades) .\nBy default, GKE automatically completes IP address rotations seven days after you start the operation. If an active maintenance window or exclusion in your cluster prevents GKE from recreating some nodes during this seven day period, the IP address rotation fails to complete.\n- If you use maintenance exclusions or maintenance windows that could result in a failed rotation, manually upgrade your cluster to force node recreation:```\ngcloud container clusters upgrade CLUSTER_NAME \\\u00a0 \u00a0 --location=LOCATION \\\u00a0 \u00a0 --cluster-version=VERSION\n```Replace `` with the GKE version that the cluster already uses.For more information, see [caveats for maintenance windows](/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions#caveats) .- To monitor the rotation operation, run the following command:```\ngcloud container operations list \\\u00a0 \u00a0 --filter=\"operationType=UPGRADE_NODES AND status=RUNNING\" \\\u00a0 \u00a0 --format=\"value(name)\"\n```This command returns the of the node upgrade operation.\n- To poll the operation, pass the operation ID to the following command:```\ngcloud container operations wait OPERATION_ID\n```\nNode pools are recreated one-by-one, and each has its own operation. If you have multiple node pools, use these instructions to poll each operation.\n### Update API clients\nAfter initiating IP rotation, you must update all API clients outside the cluster (such as `kubectl` on developer machines) to point to the new IP address.\nTo update your API clients, run the following command for each client:\n```\ngcloud container clusters get-credentials CLUSTER_NAME\n```\n**Note:** If you are using the Kubernetes Certificates API, you also must [issue new certificates](https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster/) .\n### Complete the rotation\nAfter updating API clients outside the cluster, complete the rotation to configure the control plane to serve only on the new IP address.\nTo complete the rotation, run the following command:\n```\ngcloud container clusters update CLUSTER_NAME \\\u00a0 \u00a0 --complete-ip-rotation\n```\nThe output is similar to the following:\n```\nThis will complete the in-progress IP Rotation on cluster CLUSTER_NAME.\nThe master will be updated to stop serving on the old IP address and only\nserve on the new IP address. Make sure all API clients have been updated\nto communicate with the new IP address (e.g. by running `gcloud container\nclusters get-credentials --project PROJECT_ID --region COMPUTE_REGION\nCLUSTER_NAME`). This operation is long-running and will\nblock other operations on the cluster (including delete) until it has\nrun to completion.\n```\n**Caution:** This command causes brief downtime for the cluster API.\nIf the IP address rotation fails to complete and returns an error message similar to the following, refer to [troubleshooting](/kubernetes-engine/docs/troubleshooting#credential-rotation-node-recreate) :\n```\nERROR: (gcloud.container.clusters.update) ResponseError: code=400, message=Node pool \"test-pool-1\" requires recreation.\n```\n## What's next\n- [Learn about Alias IPs](/kubernetes-engine/docs/how-to/alias-ips) .\n- [Learn about IP masquerade agent](/kubernetes-engine/docs/how-to/ip-masquerade-agent) .\n- [Learn about configuring authorized networks](/kubernetes-engine/docs/how-to/authorized-networks) .", "guide": "Google Kubernetes Engine (GKE)"}