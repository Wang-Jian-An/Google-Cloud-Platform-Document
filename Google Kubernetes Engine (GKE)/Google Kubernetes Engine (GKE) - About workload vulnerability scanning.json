{"title": "Google Kubernetes Engine (GKE) - About workload vulnerability scanning", "url": "https://cloud.google.com/kubernetes-engine/docs/concepts/about-workload-vulnerability-scanning", "abstract": "# Google Kubernetes Engine (GKE) - About workload vulnerability scanning\nThis page describes the workload vulnerability scanning capabilities offered in the Google Kubernetes Engine (GKE) security posture dashboard. This page is intended for security administrators who want to implement first-party vulnerability detection solutions.\nWorkload vulnerability scanning is a set of capabilities in the [security posture dashboard](/kubernetes-engine/docs/concepts/about-security-posture-dashboard) that automatically scans for known vulnerabilities in your container images and in specific language packages during the of the software delivery lifecycle. If GKE detects vulnerabilities, the security posture dashboard displays details about the issues and provides actionable remediation steps to mitigate the vulnerabilities.\nFor information about how the security posture dashboard fits into your security strategy, see [Usage as part of a broad security strategy](/kubernetes-engine/docs/concepts/about-security-posture-dashboard#broad-security-strategy) .\n", "content": "## Types of vulnerability scanning\nWorkload vulnerability scanning includes the following capabilities:\n- Container operating system (OS) vulnerability scanning\n- Language package vulnerability scanning\nIf a vulnerability is found in your container images or language packages, GKE displays the results in the security posture dashboard in the Google Cloud console. GKE also adds entries to Cloud Logging for auditing and traceability.\n### Container OS vulnerability scanning\nGKE continuously scans container images that run on enrolled GKE clusters. GKE uses vulnerability data from public CVE databases such as [NIST](https://nvd.nist.gov/vuln/search) . The images can come from any image registry. The OS version must be supported for scanning. For a list of supported operating systems, see [Supported Linux versions](/artifact-analysis/docs/os-overview#linux-versions) .\nFor instructions, see [Enable container OS vulnerability scanning](/kubernetes-engine/docs/how-to/security-posture-vulnerability-scanning#enable) .\n### Language package vulnerability scanning\nGKE continuously scans containers for known vulnerabilities in language packages, such as Go or Maven packages. We get vulnerability data from public sources such as the [GitHub Advisory Database](https://github.com/advisories) . The scanner is the Artifact Analysis scanner, which you can separately implement to safeguard your Artifact Registry repositories. In the security posture dashboard, the container images can come from any image registry because GKE scans the images while the workloads run. For information about Artifact Analysis scanning, see [Types of scanning](/artifact-analysis/docs/scanning-types) .\nGKE provides scanning of your language packages instead of only scanning on-demand or when your workflows push changes to your container images. Continuous scanning ensures that you're notified of new vulnerabilities as soon as fixes are available, which reduces your time to discovery and remediation.\nGKE scans the following language packages:\n- Go\n- Maven\n- Javascript\n- Python\nOnly vulnerabilities that have an associated CVE number are displayed in the security posture dashboard.\n## Enable vulnerability scanning in GKE\nYou can enable vulnerability scanning for GKE clusters as follows:\n| Tier          | Enabled capabilities              | GKE version requirement                                 |\n|:-------------------------------------------|:----------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Standard standard       | Container OS vulnerability scanning           | Requires version 1.23.5-gke.700 or later Enabled by default in Autopilot clusters running version 1.27 or later Disabled by default in Standard clusters |\n| Advanced vulnerability insights enterprise | Container OS vulnerability scanning Language package vulnerability scanning | Requires version 1.27 or later Disabled by default in Autopilot and Standard                    |\nFor enablement instructions, see [Automatically scan workloads for known vulnerabilities](/kubernetes-engine/docs/how-to/security-posture-vulnerability-scanning) .\n## Pricing\nFor pricing information, see [GKE security posture dashboard pricing](/kubernetes-engine/docs/concepts/about-security-posture-dashboard#pricing)\n## What actions does GKE suggest?\nEach vulnerability in the security posture dashboard has detailed information such as the following:\n- A full description of the vulnerability, including potential impact, attack pathways, and severity.\n- Fixed packages and version numbers.\n- Links to the relevant entries in public CVE databases.\nGKE doesn't show a vulnerability if there is no corresponding CVE with an actionable mitigation.\nFor an overview of the security posture dashboard interface, see [About the security posture dashboard](/kubernetes-engine/docs/concepts/about-security-posture-dashboard#about-interface) .\n## Limitations\n- GKE doesn't support scanning of proprietary packages and their dependencies.\n- GKE only displays results for vulnerabilities that have an available fix and an available CVE number in the security posture dashboard. You might see more results, such as vulnerabilities without an available fix, if you scan the same container images in a container registry.\n- GKE uses the following memory on each worker node for workload vulnerability scanning:- Container OS scanning: 50\u00a0MiB\n- Advanced vulnerability insights: 100\u00a0MiB\n- GKE has the following limitations on the size of each file that contains package data in your images. GKE won't scan files that exceed the size limit.- Container OS scanning: 30\u00a0MiB\n- Advanced vulnerability insights: 60\u00a0MiB\n- Windows Server containers aren't supported.\n- Workload vulnerability scanning is only available for clusters with less than 1000 nodes.\n- GKE doesn't scan nodes that use Arm architecture, such as the T2A machine type.## What's next\n- [Enable and use workload vulnerability scanning](/kubernetes-engine/docs/how-to/security-posture-vulnerability-scanning) \n- [Learn about other scanning capabilities in the security posture dashboard](/kubernetes-engine/docs/concepts/about-security-posture-dashboard#how-it-works)", "guide": "Google Kubernetes Engine (GKE)"}