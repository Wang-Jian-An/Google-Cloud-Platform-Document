{"title": "Google Kubernetes Engine (GKE) - \u4f7f\u7528 GKE Dataplane V2", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2?hl=zh-cn", "abstract": "# Google Kubernetes Engine (GKE) - \u4f7f\u7528 GKE Dataplane V2\n\u672c\u9801\u9762\u4ecb\u7d39\u77ad\u5982\u4f55\u7232 Google Kubernetes Engine (GKE) \u96c6\u7fa3\u5553\u7528 [GKE Dataplane V2](https://cloud.google.com/kubernetes-engine/docs/concepts/dataplane-v2?hl=zh-cn) \u3002\n\u65b0\u7684 Autopilot \u96c6\u7fa3\u5728 1.22.7-gke.1500 \u7248\u53ca\u66f4\u9ad8\u7248\u672c\u548c 1.23.4-gke.1500 \u7248\u53ca\u66f4\u9ad8\u7248\u672c\u4e2d\u5553\u7528\u4e86 GKE Dataplane V2\u3002 \u5982\u679c\u60a8\u5728\u4f7f\u7528 GKE Dataplane V2 \u6642\u9047\u5230\u554f\u984c\uff0c\u8acb\u8df3\u5230 [\u554f\u984c\u6392\u67e5](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2?hl=zh-cn#troubleshooting) \u3002\n", "content": "## \u4f7f\u7528 GKE Dataplane V2 \u5275\u5efa GKE \u96c6\u7fa3\n\u60a8\u53ef\u4ee5\u5728\u5275\u5efa\u5177\u6709 GKE 1.20.6-gke.700 \u7248\u53ca\u66f4\u9ad8\u7248\u672c\u7684\u65b0\u96c6\u7fa3\u6642\u4f7f\u7528 gcloud CLI \u6216 Kubernetes Engine AP \u4f86\u5553\u7528 GKE Dataplane V2\u3002\u60a8\u9084\u53ef\u4ee5\u5728\u5275\u5efa\u5177\u6709 GKE 1.17.9 \u7248\u53ca\u66f4\u9ad8\u7248\u672c\u7684\u65b0\u96c6\u7fa3\u6642\u5553\u7528 [\u9810\u89bd\u7248](https://cloud.google.com/products?hl=zh-cn#product-launch-stages) GKE Dataplane V2\n**\u8b66\u544a** \uff1aGKE Dataplane V2 \u5167\u7f6e\u4e86 [Kubernetes \u7db2\u7d61\u653f\u7b56](https://kubernetes.io/docs/concepts/services-networking/network-policies/) \u5f37\u5236\u57f7\u884c\u529f\u80fd\u3002\u9019\u610f\u5473\u7740\u60a8\u7121\u9700\u5728\u4f7f\u7528 GKE Dataplane V2 \u7684\u96c6\u7fa3\u4e2d [\u5553\u7528\u7db2\u7d61\u653f\u7b56](https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy?hl=zh-cn#enabling_network_policy_enforcement) \u3002\u5982\u679c\u60a8\u5617\u8a66\u5728\u4f7f\u7528 GKE Dataplane V2 \u7684\u96c6\u7fa3\u4e2d\u660e\u78ba\u5553\u7528\u6216\u505c\u7528\u7db2\u7d61\u653f\u7b56\u5f37\u5236\u57f7\u884c\u529f\u80fd\uff0c\u5247\u8acb\u6c42\u5c07\u5931\u6557\uff0c\u4e26\u4e14\u986f\u793a\u932f\u8aa4\u6d88\u606f `Enabling NetworkPolicy for clusters with DatapathProvider=ADVANCED_DATAPATH is not allowed.` \u3002\n\u5982\u9700\u4f7f\u7528 GKE Dataplane V2 \u5275\u5efa\u65b0\u96c6\u7fa3\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u4efb\u52d9\uff1a- \u8f49\u5230 Google Cloud \u63a7\u5236\u6aaf\u4e2d\u7684 **Google Kubernetes Engine** \u9801\u9762\u3002 [\u8f49\u5230 Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list?hl=zh-cn) \n- \u9ede\u64ca **\u5275\u5efa** \u3002\n- \u9ede\u64ca **\u914d\u7f6e** \u4ee5\u914d\u7f6e\u6a19\u6e96\u96c6\u7fa3\u3002\n- \u5728\u201c\u7db2\u7d61\u201d\u90e8\u5206\u4e2d\uff0c\u9078\u4e2d **\u5553\u7528 Dataplane V2** \u8907\u9078\u6846\u3002\u7576\u60a8\u9078\u64c7\u201c\u5553\u7528 Dataplane V2\u201d\u6642\uff0c\u201c\u5553\u7528 Kubernetes \u7db2\u7d61\u653f\u7b56\u201d\u9078\u9805\u6703\u505c\u7528\uff0c\u56e0\u7232\u7db2\u7d61\u653f\u7b56\u5f37\u5236\u57f7\u884c\u529f\u80fd\u5167\u7f6e\u65bc GKE Dataplane V2 \u4e2d\u3002\n- \u9ede\u64ca **\u5275\u5efa** \u3002\n\u5982\u9700\u4f7f\u7528 GKE Dataplane V2 \u5275\u5efa\u65b0\u96c6\u7fa3\uff0c\u8acb\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\ngcloud container clusters create CLUSTER_NAME \\\u00a0 \u00a0 --enable-dataplane-v2 \\\u00a0 \u00a0 --enable-ip-alias \\\u00a0 \u00a0 --release-channel CHANNEL_NAME \\\u00a0 \u00a0 --location COMPUTE_LOCATION\n```\n\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- ``\uff1a\u65b0\u96c6\u7fa3\u7684\u540d\u7a31\u3002\n- ``\uff1a\u5305\u542b GKE 1.20.6-gke.700 \u7248\u6216\u66f4\u9ad8\u7248\u672c\u7684 [\u767c\u4f48\u6e20\u9053](https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels?hl=zh-cn) \u3002\u5982\u679c\u60a8\u4e0d\u60f3\u4f7f\u7528\u767c\u4f48\u6e20\u9053\uff0c\u9084\u53ef\u4ee5\u4f7f\u7528`--cluster-version`\u6a19\u8a8c\u800c\u4e0d\u662f`--release-channel`\uff0c\u5f9e\u800c\u6307\u5b9a 1.20.6-gke.700 \u6216\u66f4\u9ad8\u7248\u672c\u3002\n- ``\uff1a\u65b0\u96c6\u7fa3\u7684 [Compute Engine \u4f4d\u7f6e](https://cloud.google.com/compute/docs/regions-zones/viewing-regions-zones?hl=zh-cn) \u3002\n\u5982\u9700\u4f7f\u7528 GKE Dataplane V2 \u5275\u5efa\u65b0\u96c6\u7fa3\uff0c\u8acb\u5728\u96c6\u7fa3 [create \u8acb\u6c42](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.zones.clusters/create?hl=zh-cn) \u4e2d\u6307\u5b9a [networkConfig \u5c0d\u8c61](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters?hl=zh-cn#networkconfig) \u7684 [datapathProvider \u5b57\u6bb5](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters?hl=zh-cn#datapathprovider) \u3002\n\u4ee5\u4e0b JSON \u4ee3\u78bc\u6bb5\u986f\u793a\u4e86\u5553\u7528 GKE Dataplane V2 \u6240\u9700\u7684\u914d\u7f6e\uff1a\n```\n\"cluster\":{\u00a0 \u00a0\"initialClusterVersion\":\"VERSION\",\u00a0 \u00a0\"ipAllocationPolicy\":{\u00a0 \u00a0 \u00a0 \"useIpAliases\":true\u00a0 \u00a0},\u00a0 \u00a0\"networkConfig\":{\u00a0 \u00a0 \u00a0 \"datapathProvider\":\"ADVANCED_DATAPATH\"\u00a0 \u00a0},\u00a0 \u00a0\"releaseChannel\":{\u00a0 \u00a0 \u00a0 \"channel\":\"CHANNEL_NAME\"\u00a0 \u00a0}}\n```\n\u66ff\u63db\u4ee5\u4e0b\u5167\u5bb9\uff1a- \uff1a\u60a8\u7684\u96c6\u7fa3\u7248\u672c\uff0c\u5fc5\u9808\u7232 GKE 1.20.6-gke.700 \u6216\u66f4\u9ad8\u7248\u672c\u3002\n- \uff1a\u5305\u542b GKE 1.20.6-gke.700 \u7248\u6216\u66f4\u9ad8\u7248\u672c\u7684 [\u767c\u4f48\u6e20\u9053](https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels?hl=zh-cn) \u3002## GKE Dataplane V2 \u554f\u984c\u6392\u67e5\n\u672c\u90e8\u5206\u4ecb\u7d39\u5982\u4f55\u8abf\u67e5\u548c\u89e3\u6c7a GKE Dataplane V2 \u7684\u554f\u984c\u3002\n- \u78ba\u8a8d\u5df2\u5553\u7528 GKE Dataplane V2\uff1a```\nkubectl -n kube-system get pods -l k8s-app=cilium -o wide\n```\u5982\u679c GKE Dataplane V2 \u6b63\u5728\u904b\u884c\uff0c\u5247\u8f38\u51fa\u5305\u542b\u524d\u7db4\u7232 `anetd-` \u7684 Pod\u3002anetd \u662f GKE Dataplane V2 \u7684\u7db2\u7d61\u63a7\u5236\u5668\u3002\n- \u5982\u679c\u554f\u984c\u5728\u65bc\u670d\u52d9\u6216\u7db2\u7d61\u653f\u7b56\u5f37\u5236\u57f7\u884c\u65b9\u5f0f\uff0c\u8acb\u6aa2\u67e5 `anetd` Pod \u65e5\u8a8c\u3002\u5728 Cloud Logging \u4e2d\u4f7f\u7528\u4ee5\u4e0b\u65e5\u8a8c\u9078\u64c7\u5668\uff1a```\nresource.type=\"k8s_container\"labels.\"k8s-pod/k8s-app\"=\"cilium\"resource.labels.cluster_name=\"CLUSTER_NAME\"\n```\n- \u5982\u679c Pod \u5275\u5efa\u5931\u6557\uff0c\u8acb\u6aa2\u67e5 kubelet \u65e5\u8a8c\u4ee5\u7372\u53d6\u76f8\u95dc\u7dda\u7d22\u3002\u5728 Cloud Logging \u4e2d\u4f7f\u7528\u4ee5\u4e0b\u65e5\u8a8c\u9078\u64c7\u5668\uff1a```\nresource.type=\"k8s_node\"log_name=~\".*/logs/kubelet\"resource.labels.cluster_name=\"CLUSTER_NAME\"\n```\u5c07 `` \u66ff\u63db\u7232\u96c6\u7fa3\u7684\u540d\u7a31\uff0c\u6216\u5c07\u5176\u5b8c\u5168\u79fb\u9664\u4ee5\u67e5\u770b\u6240\u6709\u96c6\u7fa3\u7684\u65e5\u8a8c\u3002## \u5df2\u77e5\u554f\u984c\n### \u7db2\u7d61\u653f\u7b56\u7aef\u53e3\u7bc4\u570d\u4e0d\u751f\u6548\n\u5982\u679c\u60a8\u5728\u5df2\u5553\u7528 GKE Dataplane V2 \u7684\u96c6\u7fa3\u7684\u7db2\u7d61\u653f\u7b56\u4e2d\u6307\u5b9a `endPort` \u5b57\u6bb5\uff0c\u5247\u8a72\u5b57\u6bb5\u5c07\u4e0d\u6703\u751f\u6548\u3002\n\u5f9e GKE 1.22 \u958b\u59cb\uff0c [Kubernetes Network Policy API](https://kubernetes.io/docs/concepts/services-networking/network-policies/) \u5141\u8a31\u60a8\u6307\u5b9a\u5f37\u5236\u57f7\u884c\u7db2\u7d61\u653f\u7b56\u7684\u7aef\u53e3\u7bc4\u570d\u3002\u5177\u6709 Calico \u7db2\u7d61\u653f\u7b56\u7684\u96c6\u7fa3\u652f\u6301\u6b64 API\uff0c\u4f46\u5177\u6709 GKE Dataplane V2 \u7684\u96c6\u7fa3\u4e0d\u652f\u6301\u6b64 API\u3002\n\u5982\u9700\u9a57\u8b49 `NetworkPolicy` \u5c0d\u8c61\u7684\u884c\u7232\uff0c\u60a8\u53ef\u4ee5\u5728\u5c07\u5b83\u5011\u5beb\u5165 API \u670d\u52d9\u5668\u5f8c\u91cd\u65b0\u8b80\u53d6\u9019\u4e9b\u5c0d\u8c61\u3002\u5982\u679c\u5c0d\u8c61\u4ecd\u5305\u542b `endPort` \u5b57\u6bb5\uff0c\u5247\u7cfb\u7d71\u6703\u5f37\u5236\u57f7\u884c\u8a72\u529f\u80fd\u3002\u5982\u679c\u7f3a\u5c11 `endPort` \u5b57\u6bb5\uff0c\u5247\u4e0d\u6703\u5f37\u5236\u57f7\u884c\u8a72\u529f\u80fd\u3002\u5728\u6240\u6709\u60c5\u6cc1\u4e0b\uff0c\u5b58\u5132\u5728 API \u670d\u52d9\u5668\u4e2d\u7684\u5c0d\u8c61\u90fd\u662f\u7db2\u7d61\u653f\u7b56\u7684\u53ef\u9760\u4f86\u6e90\u3002\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [KEP-2079\uff1a\u652f\u6301\u7aef\u53e3\u7bc4\u570d\u7684\u7db2\u7d61\u653f\u7b56](https://github.com/kubernetes/enhancements/tree/master/keps/sig-network/2079-network-policy-port-range) \u3002\n### Pod \u986f\u793a failed to allocate for range 0: no IP addresses available in range set \u932f\u8aa4\u6d88\u606f\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a1.22 \u81f3 1.25\n\u904b\u884c\u4f7f\u7528 containerd \u4e26\u5553\u7528\u4e86 GKE Dataplane V2 \u7684\u7bc0\u9ede\u6c60\u7684 GKE \u96c6\u7fa3\u53ef\u80fd\u6703\u9047\u5230 IP \u5730\u5740\u6cc4\u6f0f\u554f\u984c\uff0c\u4e26\u8017\u76e1\u7bc0\u9ede\u4e0a\u7684\u6240\u6709 Pod IP \u5730\u5740\u3002\u53d7\u5f71\u97ff\u7684\u7bc0\u9ede\u4e0a\u5b89\u6392\u7684 Pod \u6703\u986f\u793a\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\u7684\u932f\u8aa4\u6d88\u606f\uff1a\n```\nfailed to allocate for range 0: no IP addresses available in range set: 10.48.131.1-10.48.131.62\n```\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u8a72\u554f\u984c\uff0c\u8acb\u53c3\u95b1 containerd [\u554f\u984c #5768](https://github.com/containerd/containerd/issues/5768) \u3002\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5c07 [\u96c6\u7fa3\u5347\u7d1a](https://cloud.google.com/kubernetes-engine/docs/how-to/upgrading-a-cluster?hl=zh-cn) \u5230\u4ee5\u4e0b\u67d0\u500b GKE \u7248\u672c\uff1a\n- 1.22.17-gke.3100 \u6216\u66f4\u9ad8\u7248\u672c\u3002\n- 1.23.16-gke.200 \u6216\u66f4\u9ad8\u7248\u672c\u3002\n- 1.24.9-gke.3200 \u6216\u66f4\u9ad8\u7248\u672c\u3002\n- 1.25.6-gke.200 \u6216\u66f4\u9ad8\u7248\u672c\u3002\u60a8\u53ef\u4ee5\u901a\u904e\u522a\u9664\u7bc0\u9ede\u7684\u6cc4\u6f0f Pod IP \u5730\u5740\u4f86\u7de9\u89e3\u6b64\u554f\u984c\u3002\n\u5982\u9700\u522a\u9664\u6cc4\u6f0f\u7684 Pod IP \u5730\u5740\uff0c\u8acb [\u7372\u53d6\u96c6\u7fa3\u7684\u8eab\u4efd\u9a57\u8b49\u6191\u64da](https://cloud.google.com/kubernetes-engine/docs/deploy-app-cluster?hl=zh-cn#get_authentication_credentials_for_the_cluster) \u4e26\u57f7\u884c\u4ee5\u4e0b\u6b65\u9a5f\u4f86\u6e05\u7406\u55ae\u500b\u7bc0\u9ede\uff08\u5982\u679c\u60a8\u77e5\u9053\u5176\u540d\u7a31\uff09\u3002\n- \u5c07\u4ee5\u4e0b shell \u8173\u672c\u4fdd\u5b58\u5230\u540d\u7232 `cleanup.sh` \u7684\u6587\u4ef6\u4e2d\uff1a```\nfor hash in $(sudo find /var/lib/cni/networks/gke-pod-network -iregex '/var/lib/cni/networks/gke-pod-network/[0-9].*' -exec head -n1 {} \\;); do hash=\"${hash%%[[:space:]]}\"; if [ -z $(sudo ctr -n k8s.io c ls | grep $hash | awk '{print $1}') ]; then sudo grep -ilr $hash /var/lib/cni/networks/gke-pod-network; fi; done | sudo xargs -r rm\n```\n- \u5728\u96c6\u7fa3\u7bc0\u9ede\u4e0a\u904b\u884c\u8173\u672c\uff1a```\ngcloud compute ssh --zone \"ZONE\" --project \"PROJECT\" NODE_NAME --command \"$(cat cleanup.sh)\"\n```\u5c07 `` \u66ff\u63db\u7232\u8a72\u7bc0\u9ede\u7684\u540d\u7a31\u3002\n\u60a8\u9084\u53ef\u4ee5\u904b\u884c\u6b64\u8173\u672c\u7684 DaemonSet \u7248\u672c\u4ee5\u540c\u6642\u5728\u6240\u6709\u7bc0\u9ede\u4e0a\u4e26\u884c\u904b\u884c\uff1a\n- \u5c07\u4ee5\u4e0b\u6e05\u55ae\u4fdd\u5b58\u5230\u540d\u7232 `cleanup-ips.yaml` \u7684\u6587\u4ef6\u4e2d\uff1a```\napiVersion: apps/v1kind: DaemonSetmetadata:\u00a0 name: cleanup-ipam-dir\u00a0 namespace: kube-systemspec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 name: cleanup-ipam\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 name: cleanup-ipam\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 hostNetwork: true\u00a0 \u00a0 \u00a0 securityContext:\u00a0 \u00a0 \u00a0 \u00a0 runAsUser: 0\u00a0 \u00a0 \u00a0 \u00a0 runAsGroup: 0\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: cleanup-ipam\u00a0 \u00a0 \u00a0 \u00a0 image: gcr.io/gke-networking-test-images/ubuntu-test:2022\u00a0 \u00a0 \u00a0 \u00a0 command:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - /bin/bash\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - -c\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 while true; do\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for hash in $(find /hostipam -iregex '/hostipam/[0-9].*' -mmin +10 -exec head -n1 {} \\; ); do\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 hash=\"${hash%%[[:space:]]}\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if [ -z $(ctr -n k8s.io c ls | grep $hash | awk '{print $1}') ]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 grep -ilr $hash /hostipam\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fi\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 done | xargs -r rm\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \"Done cleaning up /var/lib/cni/networks/gke-pod-network at $(date)\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sleep 120s\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 done\u00a0 \u00a0 \u00a0 \u00a0 volumeMounts:\u00a0 \u00a0 \u00a0 \u00a0 - name: host-ipam\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mountPath: /hostipam\u00a0 \u00a0 \u00a0 \u00a0 - name: host-ctr\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mountPath: /run/containerd\u00a0 \u00a0 \u00a0 volumes:\u00a0 \u00a0 \u00a0 - name: host-ipam\u00a0 \u00a0 \u00a0 \u00a0 hostPath:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: /var/lib/cni/networks/gke-pod-network\u00a0 \u00a0 \u00a0 - name: host-ctr\u00a0 \u00a0 \u00a0 \u00a0 hostPath:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: /run/containerd\n```\n- \u5728\u96c6\u7fa3\u4e0a\u904b\u884c daemonset\uff1a```\nkubectl apply -f cleanup-ips.yaml\n```\u60a8\u5fc5\u9808\u5177\u6709\u96c6\u7fa3\u7ba1\u7406\u54e1\u7684 kubectl \u8a2a\u554f\u6b0a\u9650\u624d\u80fd\u904b\u884c\u6b64\u547d\u4ee4\u3002\n- \u6aa2\u67e5\u6b63\u5728\u904b\u884c\u7684 DaemonSet \u7684\u65e5\u8a8c\uff1a```\nkubectl -n kube-system logs -l name=cleanup-ipam\n```\n### \u7531\u65bc\u9023\u63a5\u8ddf\u8e64\u67e5\u627e\u4e0d\u6b63\u78ba\uff0c\u7db2\u7d61\u653f\u7b56\u4e1f\u68c4\u4e86\u9023\u63a5\n\u7576\u5ba2\u6236\u7aef Pod \u901a\u904e Service \u6216\u5167\u90e8\u76f4\u901a\u5f0f\u7db2\u7d61\u8ca0\u8f09\u5747\u8861\u5668\u7684\u865b\u64ec IP \u5730\u5740\u9023\u63a5\u5230\u81ea\u8eab\u6642\uff0c\u7531\u65bc\u6578\u64da\u5e73\u9762\u4e2d\u4e0d\u6b63\u78ba\u7684 conntrack \u67e5\u627e\uff0c\u56de\u8986\u6578\u64da\u5305\u4e0d\u6703\u88ab\u8b58\u5225\u7232\u73fe\u6709\u9023\u63a5\u7684\u4e00\u90e8\u5206\u3002\u9019\u610f\u5473\u7740\u9650\u5236 pod \u5165\u53e3\u6d41\u91cf\u7684\u7db2\u7d61\u653f\u7b56\u672a\u5728\u6578\u64da\u5305\u4e0a\u6b63\u78ba\u65bd\u884c\u3002\n\u6b64\u554f\u984c\u7684\u5f71\u97ff\u53d6\u6c7a\u65bc\u7232 Service \u914d\u7f6e\u7684 Pod \u6578\u91cf\u3002\u6bd4\u65b9\u8aaa\uff0c\u5982\u679c Service \u6709 1 \u500b\u5f8c\u7aef Pod\uff0c\u5247\u9023\u63a5\u59cb\u7d42\u5931\u6557\u3002\u5982\u679c Service \u6709 2 \u500b\u5f8c\u7aef Pod\uff0c\u5247\u9023\u63a5\u5931\u6557\u5e7e\u7387\u7232 50%\u3002\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5c07 [\u96c6\u7fa3\u5347\u7d1a](https://cloud.google.com/kubernetes-engine/docs/how-to/upgrading-a-cluster?hl=zh-cn) \u5230\u4ee5\u4e0b\u67d0\u500b GKE \u7248\u672c\uff1a\n- 1.28.3-gke.1090000 \u6216\u66f4\u9ad8\u7248\u672c\u3002\u8981\u7de9\u89e3\u6b64\u554f\u984c\uff0c\u60a8\u53ef\u4ee5\u5c07 Service \u6e05\u55ae\u4e2d\u7684 `port` \u548c `containerPort` \u914d\u7f6e\u7232\u76f8\u540c\u7684\u503c\u3002\n### \u201c\u9aee\u5361\u201d(hairpin) \u9023\u63a5\u6d41\u7684\u6578\u64da\u5305\u4e1f\u68c4\n\u7576 Pod \u4f7f\u7528 Service \u5275\u5efa\u8207\u5176\u81ea\u8eab\u7684 TCP \u9023\u63a5\u6642\uff0cPod \u540c\u6642\u662f\u9023\u63a5\u7684\u4f86\u6e90\u548c\u76ee\u7684\u5730\u6642\uff0cGKE Dataplane V2 eBPF \u9023\u63a5\u8ddf\u8e64\u6703\u932f\u8aa4\u5730\u8ddf\u8e64\u9023\u63a5\u72c0\u614b\uff0c\u5f9e\u800c\u5c0e\u81f4 conntrack \u689d\u76ee\u6cc4\u9732\u3002\n\u7576\u9023\u63a5\u5143\u7d44\uff08\u5354\u8b70\u3001\u6e90/\u76ee\u6a19 IP \u548c\u6e90/\u76ee\u6a19\u7aef\u53e3\uff09\u6cc4\u9732\u6642\uff0c\u4f7f\u7528\u540c\u4e00\u9023\u63a5\u5143\u7d44\u7684\u65b0\u9023\u63a5\u53ef\u80fd\u6703\u5c0e\u81f4\u8fd4\u56de\u6578\u64da\u5305\u4e1f\u68c4\u3002\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5c07 [\u96c6\u7fa3\u5347\u7d1a](https://cloud.google.com/kubernetes-engine/docs/how-to/upgrading-a-cluster?hl=zh-cn) \u5230\u4ee5\u4e0b\u67d0\u500b GKE \u7248\u672c\uff1a\n- 1.28.3-gke.1090000 \u6216\u66f4\u9ad8\u7248\u672c\n- 1.27.11-gke.1097000 \u6216\u66f4\u9ad8\u7248\u672c\u8acb\u4f7f\u7528\u4e0b\u5217\u89e3\u6c7a\u65b9\u6cd5\u4e4b\u4e00\uff1a\n- \u7232\u53ef\u80fd\u4f7f\u7528 Service \u8207\u81ea\u5df1\u901a\u4fe1\u7684 Pod \u4e2d\u904b\u884c\u7684\u61c9\u7528\u5553\u7528 TCP \u91cd\u8907\u4f7f\u7528 (keep-alive)\u3002\u9019\u53ef\u4ee5\u9632\u6b62\u767c\u51fa TCP FIN \u6a19\u8a8c\uff0c\u4e26\u907f\u514d\u6cc4\u9732 conntrack \u689d\u76ee\u3002\n- \u4f7f\u7528\u77ed\u671f\u9023\u63a5\u6642\uff0c\u8acb\u4f7f\u7528\u4ee3\u7406\u8ca0\u8f09\u5747\u8861\u5668\uff08\u4f8b\u5982 [\u7db2\u95dc](https://cloud.google.com/kubernetes-engine/docs/concepts/gateway-api?hl=zh-cn) \uff09\u516c\u958b Pod\uff0c\u4ee5\u516c\u958b Service\u3002\u9019\u6703\u5c0e\u81f4\u9023\u63a5\u8acb\u6c42\u7684\u76ee\u7684\u5730\u8a2d\u7f6e\u7232\u8ca0\u8f09\u5747\u8861\u5668 IP \u5730\u5740\uff0c\u5f9e\u800c\u963b\u6b62 GKE Dataplane V2 \u5c0d\u74b0\u56de IP \u5730\u5740\u57f7\u884c SNAT\u3002## \u5f8c\u7e8c\u6b65\u9a5f\n- \u4f7f\u7528 [\u7db2\u7d61\u653f\u7b56\u65e5\u8a8c\u8a18\u9304](https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy-logging?hl=zh-cn) \u529f\u80fd\u8a18\u9304\u96c6\u7fa3 [\u7db2\u7d61\u653f\u7b56](https://kubernetes.io/docs/concepts/services-networking/network-policies/) \u5141\u8a31\u6216\u62d2\u7d55\u8207 Pod \u9023\u63a5\u7684\u6642\u9593\u3002\n- \u77ad\u89e3 [GKE Dataplane V2](https://cloud.google.com/kubernetes-engine/docs/concepts/dataplane-v2?hl=zh-cn) \u7684\u5de5\u4f5c\u539f\u7406\u3002", "guide": "Google Kubernetes Engine (GKE)"}