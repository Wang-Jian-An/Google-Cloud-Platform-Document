{"title": "Google Kubernetes Engine (GKE) - \u5728 GKE \u4e0a\u90e8\u7f72\u6709\u72c0\u614b MySQL \u96c6\u7fa3", "url": "https://cloud.google.com/kubernetes-engine/docs/tutorials/stateful-workloads/mysql?hl=zh-cn", "abstract": "# Google Kubernetes Engine (GKE) - \u5728 GKE \u4e0a\u90e8\u7f72\u6709\u72c0\u614b MySQL \u96c6\u7fa3\n\u672c\u6587\u6a94\u9069\u7528\u65bc\u60f3\u5728 Google Kubernetes Engine \u4e0a\u90e8\u7f72\u9ad8\u53ef\u7528\u6027 MySQL \u62d3\u64b2\u7684\u6578\u64da\u5eab\u7ba1\u7406\u54e1\u3001\u96f2\u67b6\u69cb\u5e2b\u548c\u5c08\u696d\u904b\u71df\u4eba\u54e1\u3002\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c07\u77ad\u89e3\u5982\u4f55\u90e8\u7f72 [MySQL InnoDB \u96c6\u7fa3](https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-innodb-cluster.html) \u548c [MySQL InnoDB ClusterSet](https://dev.mysql.com/doc/mysql-shell/8.0/en/innodb-clusterset.html) \u3001\u5982\u4f55\u5728 GKE \u96c6\u7fa3\u4e0a\u90e8\u7f72 [MySQL \u8def\u7531\u5668](https://dev.mysql.com/doc/mysql-router/8.0/en/) \u4e2d\u9593\u4ef6\uff0c\u4ee5\u53ca\u5982\u4f55\u57f7\u884c\u5347\u7d1a\u3002", "content": "## \u76ee\u6a19\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c07\u5b78\u7fd2\u5982\u4f55\u5b8c\u6210\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u5275\u5efa\u548c\u90e8\u7f72\u6709\u72c0\u614b Kubernetes Service\u3002\n- \u90e8\u7f72 MySQL InnoDB \u96c6\u7fa3\u4ee5\u5be6\u73fe\u9ad8\u53ef\u7528\u6027\u3002\n- \u90e8\u7f72\u8def\u7531\u5668\u4e2d\u9593\u4ef6\u4ee5\u9032\u884c\u6578\u64da\u5eab\u64cd\u4f5c\u8def\u7531\u3002\n- \u90e8\u7f72 MySQL InnoDB ClusterSet \u4ee5\u5be6\u73fe\u707d\u96e3\u5bb9\u5fcd\u3002\n- \u6a21\u64ec MySQL \u96c6\u7fa3\u6545\u969c\u5207\u63db\u3002\n- \u57f7\u884c MySQL \u7248\u672c\u5347\u7d1a\u3002\n\u4ee5\u4e0b\u5404\u90e8\u5206\u4ecb\u7d39\u60a8\u5c07\u5728\u672c\u6559\u7a0b\u4e2d\u69cb\u5efa\u7684\u89e3\u6c7a\u65b9\u6848\u7684\u67b6\u69cb\u3002\u5728\u60a8\u7684\u5340\u57df GKE \u96c6\u7fa3\u4e2d\uff0c\u4f7f\u7528 StatefulSet \u90e8\u7f72\u5177\u6709\u5fc5\u8981\u547d\u540d\u548c\u914d\u7f6e\u7684 MySQL \u6578\u64da\u5eab\u5be6\u4f8b\uff0c\u4ee5\u5275\u5efa MySQL InnoDB \u96c6\u7fa3\u3002\u5982\u9700\u63d0\u4f9b\u5bb9\u932f\u548c\u9ad8\u53ef\u7528\u6027\uff0c\u60a8\u9700\u8981\u90e8\u7f72\u4e09\u500b\u6578\u64da\u5eab\u5be6\u4f8b Pod\u3002\u9019\u6a23\u53ef\u4ee5\u78ba\u4fdd\u5728\u4efb\u4f55\u7d66\u5b9a\u6642\u9593\u4e0d\u540c\u53ef\u7528\u5340\u4e2d\u7684\u5927\u591a\u6578 Pod \u53ef\u7528\uff0c\u5f9e\u800c\u80fd\u5920\u4f7f\u7528\u5171\u8b58\u5354\u8b70\u6210\u529f\u9078\u8209\u4e3b\u5be6\u4f8b\uff0c\u4e26\u4e14\u4f7f MySQL InnoDB \u96c6\u7fa3\u80fd\u5920\u5bb9\u5fcd\u55ae\u53ef\u7528\u5340\u6545\u969c\u3002\u90e8\u7f72\u5f8c\uff0c\u60a8\u53ef\u4ee5\u5c07\u4e00\u500b Pod \u6307\u5b9a\u7232\u4e3b\u5be6\u4f8b\u4f86\u97ff\u61c9\u8b80\u53d6\u548c\u5beb\u5165\u64cd\u4f5c\u3002\u53e6\u5916\u5169\u500b Pod \u662f\u8f14\u52a9\u53ea\u8b80\u526f\u672c\u3002\u5982\u679c\u4e3b\u5be6\u4f8b\u9047\u5230\u57fa\u790e\u67b6\u69cb\u6545\u969c\uff0c\u60a8\u53ef\u4ee5\u5c07\u9019\u5169\u500b\u526f\u672c Pod \u4e2d\u7684\u4e00\u500b\u63d0\u5347\u7232\u4e3b\u5be6\u4f8b\u3002\n\u5728\u53e6\u4e00\u500b\u547d\u540d\u7a7a\u9593\u4e2d\uff0c\u60a8\u9700\u8981\u90e8\u7f72\u4e09\u500b MySQL \u8def\u7531\u5668 Pod\uff0c\u4ee5\u63d0\u4f9b\u9023\u63a5\u8def\u7531\u4f86\u63d0\u9ad8\u5f48\u6027\u3002\u60a8\u7684\u61c9\u7528\u4e0d\u6703\u9023\u63a5\u5230\u6578\u64da\u5eab\u670d\u52d9\uff0c\u800c\u662f\u9023\u63a5\u5230 MySQL \u8def\u7531\u5668 Pod\u3002\u6bcf\u500b\u8def\u7531\u5668 Pod \u77ad\u89e3\u6bcf\u500b MySQL InnoDB \u96c6\u7fa3 Pod \u7684\u72c0\u614b\u548c\u7528\u9014\uff0c\u4e26\u5c07\u61c9\u7528\u64cd\u4f5c\u8def\u7531\u5230\u76f8\u61c9\u7684\u5065\u5eb7 Pod\u3002\u8def\u7531\u72c0\u614b\u6703\u7de9\u5b58\u5728\u8def\u7531\u5668 Pod \u4e2d\uff0c\u4e26\u6839\u64da\u5b58\u5132\u5728 MySQL InnoDB \u96c6\u7fa3\u7684\u6bcf\u500b\u7bc0\u9ede\u4e0a\u7684\u96c6\u7fa3\u5143\u6578\u64da\u66f4\u65b0\u3002\u5982\u679c\u67d0\u500b\u5be6\u4f8b\u767c\u751f\u6545\u969c\uff0c\u8def\u7531\u5668\u6703\u5c07\u9023\u63a5\u8def\u7531\u8abf\u6574\u5230\u6d3b\u52d5\u5be6\u4f8b\u3002\u60a8\u53ef\u4ee5\u5f9e\u521d\u59cb MySQL InnoDB \u96c6\u7fa3\u5275\u5efa MySQL InnoDB ClusterSet\u3002\u9019\u6a23\uff0c\u5982\u679c\u4e3b\u96c6\u7fa3\u4e0d\u518d\u53ef\u7528\uff0c\u60a8\u53ef\u4ee5\u63d0\u9ad8\u707d\u96e3\u5bb9\u5fcd\u5ea6\u3002\u5982\u679c MySQL InnoDB \u96c6\u7fa3\u4e3b\u5be6\u4f8b\u4e0d\u518d\u53ef\u7528\uff0c\u60a8\u53ef\u4ee5\u5c07 ClusterSet \u4e2d\u7684\u526f\u672c\u96c6\u7fa3\u63d0\u5347\u7232\u4e3b\u5be6\u4f8b\u3002\u4f7f\u7528 MySQL \u8def\u7531\u5668\u4e2d\u9593\u4ef6\u6642\uff0c\u60a8\u7684\u61c9\u7528\u4e0d\u9700\u8981\u8ddf\u8e64\u4e3b\u6578\u64da\u5eab\u5be6\u4f8b\u7684\u5065\u5eb7\u72c0\u6cc1\u3002\u8def\u7531\u5668\u6703\u8abf\u6574\u8def\u7531\uff0c\u4ee5\u5728\u9078\u8209\u5b8c\u6210\u5f8c\u5c07\u9023\u63a5\u767c\u9001\u5230\u65b0\u7684\u4e3b\u5be6\u4f8b\u3002\u4f46\u662f\uff0c\u60a8\u9700\u8981\u8ca0\u8cac\u78ba\u4fdd\u9023\u63a5\u5230 MySQL \u8def\u7531\u5668\u4e2d\u9593\u4ef6\u7684\u61c9\u7528\u9075\u5faa\u5f48\u6027\u6700\u4f73\u5be6\u8e10\uff0c\u4ee5\u4fbf\u5728\u96c6\u7fa3\u6545\u969c\u5207\u63db\u671f\u9593\u767c\u751f\u932f\u8aa4\u6642\u53ef\u4ee5\u91cd\u8a66\u9023\u63a5\u3002## \u8cbb\u7528\nTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5728\u672c\u6587\u6a94\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 Google Cloud \u7684\u4ee5\u4e0b\u6536\u8cbb\u7d44\u4ef6\uff1a- [GKE](https://cloud.google.com/kubernetes-engine/pricing?hl=zh-cn) \n- [Compute Engine](https://cloud.google.com/compute/disks-image-pricing?hl=zh-cn) \n\u60a8\u53ef\u4f7f\u7528 [\u50f9\u683c\u8a08\u7b97\u5668](https://cloud.google.com/products/calculator?hl=zh-cn) \u6839\u64da\u60a8\u7684\u9810\u8a08\u4f7f\u7528\u60c5\u6cc1\u4f86\u4f30\u7b97\u8cbb\u7528\u3002 \nTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5b8c\u6210\u672c\u6587\u6a94\u4e2d\u63cf\u8ff0\u7684\u4efb\u52d9\u5f8c\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u522a\u9664\u6240\u5275\u5efa\u7684\u8cc7\u6e90\u4f86\u907f\u514d\u7e7c\u7e8c\u8a08\u8cbb\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e05\u7406](#clean-up) \u3002## \u6e96\u5099\u5de5\u4f5c\n### \u8a2d\u7f6e\u9805\u76ee\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n### \u8a2d\u7f6e\u89d2\u8272- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u5411\u60a8\u7684 Google \u8cec\u865f\u6388\u4e88\u89d2\u8272\u3002\u5c0d\u4ee5\u4e0b\u6bcf\u500b IAM \u89d2\u8272\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e00\u6b21\uff1a `role/storage.objectViewer, role/logging.logWriter, role/artifactregistry.Admin, roles/container.clusterAdmin, role/container.serviceAgent, roles/serviceusage.serviceUsageAdmin, roles/iam.serviceAccountAdmin````\n$ gcloud projects add-iam-policy-binding PROJECT_ID --member=\"user:EMAIL_ADDRESS\" --role=ROLE\n```- \u5c07``\u66ff\u63db\u7232\u60a8\u7684\u9805\u76ee ID\u3002\n- \u5c07``\u66ff\u63db\u7232\u60a8\u7684\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u3002\n- \u5c07``\u66ff\u63db\u7232\u6bcf\u500b\u89d2\u8272\u3002### \u8a2d\u7f6e\u60a8\u7684\u74b0\u5883\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 [Cloud Shell](https://cloud.google.com/shell?hl=zh-cn) \u4f86\u7ba1\u7406 Google Cloud \u4e0a\u8a17\u7ba1\u7684\u8cc7\u6e90\u3002Cloud Shell \u9810\u5b89\u88dd\u6709 Docker\u3001 `kubectl` \u548c gcloud CLI\u3002\n\u7232\u4e86\u4f7f\u7528 Cloud Shell \u8a2d\u7f6e\u60a8\u7684\u74b0\u5883\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u8a2d\u7f6e\u74b0\u5883\u8b8a\u91cf\u3002```\nexport PROJECT_ID=PROJECT_IDexport CLUSTER_NAME=gkemulti-westexport REGION=COMPUTE_REGION\n```\u66ff\u63db\u4ee5\u4e0b\u503c\uff1a- \uff1a\u60a8\u7684 Google Cloud [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifying_projects) \u3002\n- \uff1a\u60a8\u7684 [Compute Engine \u5340\u57df](https://cloud.google.com/compute/docs/regions-zones?hl=zh-cn#available) \u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u5340\u57df\u7232`us-west1`\u3002\u901a\u5e38\uff0c\u5efa\u8b70\u4f7f\u7528\u60a8\u9644\u8fd1\u7684\u5340\u57df\u3002\n- \u8a2d\u7f6e\u9ed8\u8a8d\u74b0\u5883\u8b8a\u91cf\u3002```\n\u00a0gcloud config set project PROJECT_ID\u00a0gcloud config set compute/region COMPUTE_REGION\n```\n- \u514b\u9686\u4ee3\u78bc\u5eab\u3002```\ngit clone https://github.com/GoogleCloudPlatform/kubernetes-engine-samples\n```\n- \u5207\u63db\u5230\u5de5\u4f5c\u76ee\u9304\u3002```\ncd kubernetes-engine-samples/databases/gke-stateful-mysql/kubernetes\n```## \u5275\u5efa GKE \u96c6\u7fa3\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u5275\u5efa\u4e00\u500b [\u5340\u57df\u7d1a GKE \u96c6\u7fa3](https://cloud.google.com/kubernetes-engine/docs/concepts/regional-clusters?hl=zh-cn) \u3002\u8207\u53ef\u7528\u5340\u7d1a\u96c6\u7fa3\u4e0d\u540c\uff0c\u5340\u57df\u7d1a\u96c6\u7fa3\u7684\u63a7\u5236\u5e73\u9762\u6703\u88ab\u8907\u5236\u5230\u591a\u500b\u53ef\u7528\u5340\uff0c\u56e0\u6b64\u55ae\u500b\u53ef\u7528\u5340\u4e2d\u7684\u670d\u52d9\u4e2d\u65b7\u4e0d\u6703\u5c0e\u81f4\u8a72\u63a7\u5236\u5e73\u9762\u4e0d\u53ef\u7528\u3002\n\u5982\u9700\u5275\u5efa GKE \u96c6\u7fa3\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a\n- \u5728 Cloud Shell \u4e2d\uff0c\u5728 `us-west1` \u5340\u57df\u4e2d\u5275\u5efa GKE Autopilot \u96c6\u7fa3\u3002```\ngcloud container clusters create-auto $CLUSTER_NAME \\\u00a0 \u00a0 --region=$REGION\n```\n- \u7372\u53d6 GKE \u96c6\u7fa3\u6191\u64da\u3002```\ngcloud container clusters get-credentials $CLUSTER_NAME \\\u00a0 --region=$REGION\n```\n- \u8de8\u4e09\u500b\u5340\u57df\u90e8\u7f72 Service\u3002 [  databases/gke-stateful-mysql/kubernetes/prepare-for-ha.yaml ](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/kubernetes/prepare-for-ha.yaml) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/kubernetes/prepare-for-ha.yaml) ```\napiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: prepare-three-zone-ha\u00a0 labels:\u00a0 \u00a0 app: prepare-three-zone-haspec:\u00a0 replicas: 3\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app: prepare-three-zone-ha\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 app: prepare-three-zone-ha\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 affinity:\u00a0 \u00a0 \u00a0 \u00a0 # Tell Kubernetes to avoid scheduling a replica in a zone where there\u00a0 \u00a0 \u00a0 \u00a0 # is already a replica with the label \"app: prepare-three-zone-ha\"\u00a0 \u00a0 \u00a0 \u00a0 podAntiAffinity:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requiredDuringSchedulingIgnoredDuringExecution:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - labelSelector:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 matchExpressions:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - key: app\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 operator: In\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 values:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - prepare-three-zone-ha\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 topologyKey: \"topology.kubernetes.io/zone\"\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: prepare-three-zone-ha\u00a0 \u00a0 \u00a0 \u00a0 image: busybox:latest\u00a0 \u00a0 \u00a0 \u00a0 command:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - \"/bin/sh\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - \"-c\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - \"while true; do sleep 3600; done\"\u00a0 \u00a0 \u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 limits:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cpu: \"500m\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ephemeral-storage: \"10Mi\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: \"0.5Gi\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cpu: \"500m\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ephemeral-storage: \"10Mi\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: \"0.5Gi\"\n``````\nkubectl apply -f prepare-for-ha.yaml\n```\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0cAutopilot \u6703\u5728\u5169\u500b\u53ef\u7528\u5340\u4e2d\u9810\u914d\u8cc7\u6e90\u3002 `prepare-for-ha.yaml` \u4e2d\u5b9a\u7fa9\u7684 Deployment \u6703\u8a2d\u7f6e `replicas:3` \u3001\u5177\u6709 `requiredDuringSchedulingIgnoredDuringExecution` \u7684 `podAntiAffinity` \uff0c\u4ee5\u53ca `topologyKey: \"topology.kubernetes.io/zone\"` \uff0c\u4ee5\u78ba\u4fdd Autopilot \u5728\u96c6\u7fa3\u7684\u4e09\u500b\u53ef\u7528\u5340\u4e2d\u9810\u914d\u7bc0\u9ede\u3002\n- \u6aa2\u67e5 Deployment \u7684\u72c0\u614b\u3002```\nkubectl get deployment prepare-three-zone-ha --watch\n```\u7576\u60a8\u770b\u5230\u4e09\u500b Pod \u8655\u65bc\u5c31\u7dd2\u72c0\u614b\u6642\uff0c\u8acb\u4f7f\u7528 `CTRL+C` \u53d6\u6d88\u6b64\u547d\u4ee4\u3002\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nNAME     READY UP-TO-DATE AVAILABLE AGE\nprepare-three-zone-ha 0/3  3   0   9s\nprepare-three-zone-ha 1/3  3   1   116s\nprepare-three-zone-ha 2/3  3   2   119s\nprepare-three-zone-ha 3/3  3   3   2m16s\n```\n- \u904b\u884c\u6b64\u8173\u672c\u4ee5\u9a57\u8b49 Pod \u5df2\u5728\u4e09\u500b\u53ef\u7528\u5340\u4e2d\u90e8\u7f72\u3002```\nbash ../scripts/inspect_pod_node.sh default\n```\u8f38\u51fa\u7684\u6bcf\u4e00\u884c\u5c0d\u61c9\u4e00\u500b Pod\uff0c\u7b2c\u4e8c\u5217\u8868\u793a Cloud \u53ef\u7528\u5340\u3002\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\ngk3-gkemulti-west1-default-pool-eb354e2d-z6mv us-west1-b prepare-three-zone-ha-7885d77d9c-8f7qb\ngk3-gkemulti-west1-nap-25b73chq-739a9d40-4csr us-west1-c prepare-three-zone-ha-7885d77d9c-98fpn\ngk3-gkemulti-west1-default-pool-160c3578-bmm2 us-west1-a prepare-three-zone-ha-7885d77d9c-phmhj\n```\n- \u5728 Cloud Shell \u4e2d\uff0c\u5728 `us-west1` \u5340\u57df\u4e2d\u5275\u5efa GKE Standard \u96c6\u7fa3\u3002```\ngcloud container clusters create $CLUSTER_NAME \\\u00a0 --region=$REGION \\\u00a0 --machine-type=\"e2-standard-2\" \\\u00a0 --disk-type=\"pd-standard\" \\\u00a0 --num-nodes=\"5\"\n```\n- \u7372\u53d6 GKE \u96c6\u7fa3\u6191\u64da\u3002```\ngcloud container clusters get-credentials $CLUSTER_NAME \\\u00a0 --region=$REGION\n```\n## \u90e8\u7f72 MySQL StatefulSet\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u90e8\u7f72\u4e00\u500b MySQL [StatefulSet](https://cloud.google.com/kubernetes-engine/docs/concepts/statefulset?hl=zh-cn) \u3002\u6bcf\u500b StatefulSet \u7531\u4e09\u500b MySQL \u526f\u672c\u7d44\u6210\u3002\n\u5982\u9700\u90e8\u7f72 MySQL StatefulSet\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u7232 StatefulSet \u5275\u5efa\u547d\u540d\u7a7a\u9593\u3002```\nkubectl create namespace mysql1\n```\n- \u5275\u5efa MySQL \u5bc6\u9470\u3002 [  databases/gke-stateful-mysql/kubernetes/secret.yaml ](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/kubernetes/secret.yaml) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/kubernetes/secret.yaml) ```\napiVersion: v1kind: Secretmetadata:\u00a0 name: mysql-secrettype: Opaquedata:\u00a0 password: UGFzc3dvcmQkMTIzNDU2 # Password$123456\u00a0 admin-password: UGFzc3dvcmQkMTIzNDU2 # Password$123456\n``````\nkubectl apply -n mysql1 -f secret.yaml\n```\u5bc6\u78bc\u96a8\u6bcf\u500b Pod \u4e00\u8d77\u90e8\u7f72\uff0c\u4e26\u4f9b\u672c\u6559\u7a0b\u4e2d\u7684 MySQL InnoDB \u96c6\u7fa3\u548c ClusterSet \u90e8\u7f72\u7684\u7ba1\u7406\u8173\u672c\u548c\u547d\u4ee4\u4f7f\u7528\u3002\n- \u5275\u5efa StorageClass\u3002 [  databases/gke-stateful-mysql/kubernetes/storageclass.yaml ](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/kubernetes/storageclass.yaml) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/kubernetes/storageclass.yaml) ```\napiVersion: storage.k8s.io/v1kind: StorageClassmetadata:\u00a0 name: fast-storageclassprovisioner: pd.csi.storage.gke.iovolumeBindingMode: WaitForFirstConsumerreclaimPolicy: RetainallowVolumeExpansion: trueparameters:\u00a0 type: pd-balanced\n``````\nkubectl apply -n mysql1 -f storageclass.yaml\n```\u6b64\u5b58\u5132\u985e\u5225\u4f7f\u7528 `pd-balanced` \u6c38\u4e45\u6027\u78c1\u76e4\u985e\u578b\uff0c\u8a72\u985e\u578b\u53ef\u5e73\u8861\u6027\u80fd\u548c\u8cbb\u7528\u3002 `volumeBindingMode` \u5b57\u6bb5\u8a2d\u7f6e\u7232 `WaitForFirstConsumer` \uff0c\u8868\u793a GKE \u5c07\u63a8\u9072\u9810\u914d PersistentVolume\uff0c\u76f4\u5230 Pod \u5275\u5efa\u5b8c\u6210\u7232\u6b62\u3002\u6b64\u8a2d\u7f6e\u53ef\u78ba\u4fdd\u5728\u5b89\u6392 Pod \u7684\u53ef\u7528\u5340\u4e2d\u9810\u914d\u78c1\u76e4\u3002\n- \u90e8\u7f72 MySQL \u5be6\u4f8b Pod \u7684 StatefulSet\u3002 [  databases/gke-stateful-mysql/kubernetes/c1-mysql.yaml ](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/kubernetes/c1-mysql.yaml) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/kubernetes/c1-mysql.yaml) ```\napiVersion: apps/v1kind: StatefulSetmetadata:\u00a0 name: dbc1\u00a0 labels:\u00a0 \u00a0 app: mysqlspec:\u00a0 replicas: 3\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app: mysql\u00a0 serviceName: mysql\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 app: mysql\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 topologySpreadConstraints:\u00a0 \u00a0 \u00a0 - maxSkew: 1\u00a0 \u00a0 \u00a0 \u00a0 topologyKey: \"topology.kubernetes.io/zone\"\u00a0 \u00a0 \u00a0 \u00a0 whenUnsatisfiable: DoNotSchedule\u00a0 \u00a0 \u00a0 \u00a0 labelSelector:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 app: mysql\u00a0 \u00a0 \u00a0 affinity:\u00a0 \u00a0 \u00a0 \u00a0 podAntiAffinity:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requiredDuringSchedulingIgnoredDuringExecution:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - labelSelector:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 matchExpressions:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - key: app\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 operator: In\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 values:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - mysql\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 topologyKey: \"kubernetes.io/hostname\"\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: mysql\u00a0 \u00a0 \u00a0 \u00a0 image: mysql/mysql-server:8.0.28\u00a0 \u00a0 \u00a0 \u00a0 command:\u00a0 \u00a0 \u00a0 \u00a0 - /bin/bash\u00a0 \u00a0 \u00a0 \u00a0 args:\u00a0 \u00a0 \u00a0 \u00a0 - -c\u00a0 \u00a0 \u00a0 \u00a0 - >-\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 /entrypoint.sh\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --server-id=$((20 + \u00a0$(echo $HOSTNAME | grep -o '[^-]*$') + 1))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --report-host=${HOSTNAME}.mysql.mysql1.svc.cluster.local\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --binlog-checksum=NONE\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --enforce-gtid-consistency=ON\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --gtid-mode=ON\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 --default-authentication-plugin=mysql_native_password\u00a0 \u00a0 \u00a0 \u00a0 env:\u00a0 \u00a0 \u00a0 \u00a0 - name: MYSQL_ROOT_PASSWORD\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 valueFrom:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 secretKeyRef:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: mysql-secret\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 key: password\u00a0 \u00a0 \u00a0 \u00a0 - name: MYSQL_ADMIN_PASSWORD\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 valueFrom:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 secretKeyRef:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: mysql-secret\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 key: admin-password\u00a0 \u00a0 \u00a0 \u00a0 - name: MYSQL_ROOT_HOST\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 value: '%'\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - name: mysql\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 containerPort: 3306\u00a0 \u00a0 \u00a0 \u00a0 - name: mysqlx\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 containerPort: 33060\u00a0 \u00a0 \u00a0 \u00a0 - name: xcom\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 containerPort: 33061\u00a0 \u00a0 \u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 limits:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cpu: \"500m\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ephemeral-storage: \"1Gi\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: \"1Gi\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cpu: \"500m\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ephemeral-storage: \"1Gi\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: \"1Gi\"\u00a0 \u00a0 \u00a0 \u00a0 volumeMounts:\u00a0 \u00a0 \u00a0 \u00a0 - name: mysql\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mountPath: /var/lib/mysql\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 subPath: mysql\u00a0 \u00a0 \u00a0 \u00a0 readinessProbe:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exec:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 command:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - bash\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - \"-c\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mysql -h127.0.0.1 -uroot -p$MYSQL_ROOT_PASSWORD -e'SELECT 1'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 initialDelaySeconds: 30\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 periodSeconds: 2\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 timeoutSeconds: 1\u00a0 \u00a0 \u00a0 \u00a0 livenessProbe:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exec:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 command:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - bash\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - \"-c\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mysqladmin -uroot -p$MYSQL_ROOT_PASSWORD ping\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 initialDelaySeconds: 30\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 periodSeconds: 10\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 timeoutSeconds: 5\u00a0 updateStrategy:\u00a0 \u00a0 rollingUpdate:\u00a0 \u00a0 \u00a0 partition: 0\u00a0 \u00a0 type: RollingUpdate\u00a0 volumeClaimTemplates:\u00a0 - metadata:\u00a0 \u00a0 \u00a0 name: mysql\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 app: mysql\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 storageClassName: fast-storageclass\u00a0 \u00a0 \u00a0 volumeMode: Filesystem\u00a0 \u00a0 \u00a0 accessModes:\u00a0 \u00a0 \u00a0 - ReadWriteOnce\u00a0 \u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 storage: 10Gi\n``````\nkubectl apply -n mysql1 -f c1-mysql.yaml\n```\u6b64\u547d\u4ee4\u6703\u90e8\u7f72\u7531\u4e09\u500b\u526f\u672c\u7d44\u6210\u7684 StatefulSet\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0cMySQL \u4e3b\u96c6\u7fa3\u90e8\u7f72\u5728 `us-west1` \u4e2d\u7684\u4e09\u500b\u53ef\u7528\u5340\u4e2d\u3002\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nservice/mysql created\nstatefulset.apps/dbc1 created\n```\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u8cc7\u6e90\u9650\u5236\u548c\u8acb\u6c42\u8a2d\u7f6e\u7232\u6700\u5c0f\u503c\u4ee5\u7bc0\u7701\u8cbb\u7528\u3002\u5728\u898f\u5283\u751f\u7522\u5de5\u4f5c\u8ca0\u8f09\u6642\uff0c\u8acb\u52d9\u5fc5\u6839\u64da\u8cb4\u7d44\u7e54\u7684\u9700\u6c42\u9069\u7576\u8a2d\u7f6e\u9019\u4e9b\u503c\u3002\n- \u9a57\u8b49 StatefulSet \u5df2\u6210\u529f\u5275\u5efa\u3002```\nkubectl get statefulset -n mysql1 --watch\n```StatefulSet \u53ef\u80fd\u9700\u8981\u5927\u7d04 10 \u5206\u9418\u624d\u80fd\u6e96\u5099\u5c31\u7dd2\u3002\n- \u7576\u6240\u6709\u4e09\u500b Pod \u90fd\u8655\u65bc\u5c31\u7dd2\u72c0\u614b\u6642\uff0c\u4f7f\u7528 `Ctrl+C` \u9000\u51fa\u8a72\u547d\u4ee4\u3002\u5982\u679c\u60a8\u770b\u5230 CPU \u6216\u5167\u5b58\u4e0d\u8db3\u5c0e\u81f4\u7684 `PodUnscheduleable` \u932f\u8aa4\uff0c\u8acb\u7b49\u5f85\u5e7e\u5206\u9418\uff0c\u4ee5\u4fbf\u63a7\u5236\u5e73\u9762\u8abf\u6574\u5927\u5c0f\u4ee5\u9069\u61c9\u5927\u578b\u5de5\u4f5c\u8ca0\u8f09\u3002\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nNAME READY AGE\ndbc1 1/3  39s\ndbc1 2/3  50s\ndbc1 3/3  73s\n```\n- \u5982\u9700\u6aa2\u67e5 Pod \u5728 GKE \u96c6\u7fa3\u7bc0\u9ede\u4e0a\u7684\u653e\u7f6e\u4f4d\u7f6e\uff0c\u8acb\u904b\u884c\u6b64\u8173\u672c\uff1a```\nbash ../scripts/inspect_pod_node.sh mysql1 mysql\n```\u8f38\u51fa\u7d50\u679c\u986f\u793a Pod \u540d\u7a31\u3001GKE \u7bc0\u9ede\u540d\u7a31\u548c\u9810\u914d\u8a72\u7bc0\u9ede\u7684\u53ef\u7528\u5340\uff0c\u5982\u4e0b\u6240\u793a\uff1a```\ngke-gkemulti-west-5-default-pool-4bcaca65-jch0 us-west1-b dbc1-0\ngke-gkemulti-west-5-default-pool-1ac6e8b5-ddjx us-west1-c dbc1-1\ngke-gkemulti-west-5-default-pool-1f5baa66-bf8t us-west1-a dbc1-2\n```\u8f38\u51fa\u4e2d\u7684\u5217\u5206\u5225\u8868\u793a\u4e3b\u6a5f\u540d\u3001Cloud \u53ef\u7528\u5340\u548c Pod \u540d\u7a31\u3002StatefulSet \u898f\u7bc4 ( `c1-mysql.yaml` ) \u4e2d\u7684 `topologySpreadConstraints` \u653f\u7b56\u6307\u793a\u8abf\u5ea6\u5668\u5c07 Pod \u5747\u52fb\u5730\u5206\u4f48\u5728\u6545\u969c\u57df ( `topology.kubernetes.io/zone` ) \u4e2d\u3002`podAntiAffinity` \u653f\u7b56\u5f37\u5236\u57f7\u884c\u9650\u5236\u689d\u4ef6\uff0c\u898f\u5b9a Pod \u4e0d\u80fd\u4f4d\u65bc\u540c\u4e00 GKE \u96c6\u7fa3\u7bc0\u9ede ( `kubernetes.io/hostname` ) \u4e2d\u3002\u5c0d\u65bc MySQL \u5be6\u4f8b Pod\uff0c\u6b64\u653f\u7b56\u6703\u4f7f Pod \u5747\u52fb\u5206\u4f48\u5728 Google Cloud \u5340\u57df\u7684\u4e09\u500b\u53ef\u7528\u5340\u4e2d\u3002\u6b64\u653e\u7f6e\u7b56\u7565\u5c07\u6bcf\u500b\u6578\u64da\u5eab\u5be6\u4f8b\u653e\u7f6e\u5728\u55ae\u7368\u7684\u6545\u969c\u57df\u4e2d\uff0c\u5f9e\u800c\u5be6\u73fe MySQL InnoDB \u96c6\u7fa3\u7684\u9ad8\u53ef\u7528\u6027\u3002\n## \u6e96\u5099 MySQL InnoDB \u4e3b\u96c6\u7fa3\u5982\u9700\u914d\u7f6e MySQL InnoDB \u96c6\u7fa3\uff0c\u8acb\u9075\u5faa\u4ee5\u4e0b\u6b65\u9a5f\uff1a- \u5728 [Cloud Shell](https://cloud.google.com/shell?hl=zh-cn) \u7d42\u7aef\u4e2d\uff0c\u7232\u8981\u6dfb\u52a0\u5230\u96c6\u7fa3\u7684 MySQL \u5be6\u4f8b\u8a2d\u7f6e\u7fa3\u7d44\u8907\u88fd\u914d\u7f6e\u3002```\nbash ../scripts/c1-clustersetup.sh\n``` [  databases/gke-stateful-mysql/scripts/c1-clustersetup.sh ](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/scripts/c1-clustersetup.sh) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/scripts/c1-clustersetup.sh) ```\nPOD_ORDINAL_START=${1:-0}POD_ORDINAL_END=${2:-2}for i in $(seq ${POD_ORDINAL_START} ${POD_ORDINAL_END}); do\u00a0 echo \"Configuring pod mysql1/dbc1-${i}\"\u00a0 cat <<' \u00a0EOF' | kubectl -n mysql1 exec -i dbc1-${i} -- bash -c 'mysql -uroot -proot --password=${MYSQL_ROOT_PASSWORD}'INSTALL PLUGIN group_replication SONAME 'group_replication.so';RESET PERSIST IF EXISTS group_replication_ip_allowlist;RESET PERSIST IF EXISTS binlog_transaction_dependency_tracking;SET @@PERSIST.group_replication_ip_allowlist = 'mysql.mysql1.svc.cluster.local';SET @@PERSIST.binlog_transaction_dependency_tracking = 'WRITESET';\u00a0 EOFdone\n```\u8a72\u8173\u672c\u5c07\u9060\u7a0b\u9023\u63a5\u5230\u4e09\u500b MySQL \u5be6\u4f8b\u4e2d\u7684\u6bcf\u4e00\u500b\uff0c\u4ee5\u8a2d\u7f6e\u548c\u4fdd\u7559\u4ee5\u4e0b\u74b0\u5883\u8b8a\u91cf\uff1a- `group_replication_ip_allowlist`\uff1a\u5141\u8a31\u96c6\u7fa3\u4e2d\u7684\u5be6\u4f8b\u9023\u63a5\u5230\u7d44\u4e2d\u7684\u4efb\u610f\u5be6\u4f8b\u3002\n- `binlog_transaction_dependency_tracking='WRITESET'`\uff1a\u5141\u8a31\u4e0d\u767c\u751f\u885d\u7a81\u7684\u4e26\u884c\u4e8b\u52d9\u3002\n\u5728 8.0.22 \u4e4b\u524d\u7684 MySQL \u7248\u672c\u4e2d\uff0c\u4f7f\u7528 `group_replication_ip_whitelist` \u800c\u4e0d\u662f `group_replication_ip_allowlist` \u3002\n- \u6253\u958b\u7b2c\u4e8c\u500b\u7d42\u7aef\uff0c\u9019\u6a23\u60a8\u5c31\u4e0d\u9700\u8981\u7232\u6bcf\u500b Pod \u5275\u5efa\u4e00\u500b shell\u3002\n- \u5728 Pod `dbc1-0` \u4e0a\u9023\u63a5\u5230 MySQL Shell\u3002```\nkubectl -n mysql1 exec -it dbc1-0 -- \\\u00a0 \u00a0 /bin/bash \\\u00a0 \u00a0 -c 'mysqlsh --uri=\"root:$MYSQL_ROOT_PASSWORD@dbc1-0.mysql.mysql1.svc.cluster.local\"'\n```\n- \u9a57\u8b49 MySQL \u7d44\u8907\u88fd\u8a31\u53ef\u540d\u55ae\u4ee5\u9023\u63a5\u5230\u5176\u4ed6\u5be6\u4f8b\u3002```\n\\sql SELECT @@group_replication_ip_allowlist;\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n+----------------------------------+\n| @@group_replication_ip_allowlist |\n+----------------------------------+\n| mysql.mysql1.svc.cluster.local |\n+----------------------------------+\n```\n- \u9a57\u8b49\u5404\u500b\u5be6\u4f8b\u4e0a\u7684 `server-id` \u90fd\u662f\u552f\u4e00\u7684\u3002```\n\\sql SELECT @@server_id;\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n+-------------+\n| @@server_id |\n+-------------+\n|   21 |\n+-------------+\n```\n- \u914d\u7f6e\u6bcf\u500b\u5be6\u4f8b\u4ee5\u5728 MySQL InnoDB \u96c6\u7fa3\u4e2d\u4f7f\u7528\uff0c\u4e26\u5728\u6bcf\u500b\u5be6\u4f8b\u4e0a\u5275\u5efa\u7ba1\u7406\u54e1\u8cec\u865f\u3002```\n\\jsdba.configureInstance('root@dbc1-0.mysql.mysql1.svc.cluster.local', {password: os.getenv(\"MYSQL_ROOT_PASSWORD\"),clusterAdmin: 'icadmin', clusterAdminPassword: os.getenv(\"MYSQL_ADMIN_PASSWORD\")});dba.configureInstance('root@dbc1-1.mysql.mysql1.svc.cluster.local', {password: os.getenv(\"MYSQL_ROOT_PASSWORD\"),clusterAdmin: 'icadmin', clusterAdminPassword: os.getenv(\"MYSQL_ADMIN_PASSWORD\")});dba.configureInstance('root@dbc1-2.mysql.mysql1.svc.cluster.local', {password: os.getenv(\"MYSQL_ROOT_PASSWORD\"),clusterAdmin: 'icadmin', clusterAdminPassword: os.getenv(\"MYSQL_ADMIN_PASSWORD\")});\n```\u6240\u6709\u5be6\u4f8b\u5fc5\u9808\u5177\u6709\u76f8\u540c\u7684\u7528\u6236\u540d\u548c\u5bc6\u78bc\uff0c\u624d\u80fd\u4f7f MySQL InnoDB \u96c6\u7fa3\u6b63\u5e38\u904b\u884c\u3002\u6bcf\u500b\u547d\u4ee4\u90fd\u6703\u751f\u6210\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684\u8f38\u51fa\uff1a```\n...\nThe instance 'dbc1-2.mysql:3306' is valid to be used in an InnoDB cluster.\nCluster admin user 'icadmin'@'%' created.\nThe instance 'dbc1-2.mysql.mysql1.svc.cluster.local:3306' is already\nready to be used in an InnoDB cluster.\nSuccessfully enabled parallel appliers.\n```\n- \u9a57\u8b49\u5be6\u4f8b\u5df2\u6e96\u5099\u597d\u5728 MySQL InnoDB \u96c6\u7fa3\u4e2d\u4f7f\u7528\u3002```\ndba.checkInstanceConfiguration()\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n...\nThe instance 'dbc1-0.mysql.mysql1.svc.cluster.local:3306' is valid to be used in an InnoDB cluster.\n{\n \"status\": \"ok\"\n}\n```\uff08\u53ef\u9078\uff09\u60a8\u53ef\u4ee5\u9023\u63a5\u5230\u6bcf\u500b MySQL \u5be6\u4f8b\u4e26\u91cd\u5fa9\u6b64\u547d\u4ee4\u3002\u4f8b\u5982\uff0c\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u6aa2\u67e5 `dbc1-1` \u5be6\u4f8b\u4e0a\u7684\u72c0\u614b\uff1a```\nkubectl -n mysql1 exec -it dbc1-0 -- \\\u00a0 \u00a0 /bin/bash \\\u00a0 \u00a0 -c 'mysqlsh --uri=\"root:$MYSQL_ROOT_PASSWORD@dbc1-1.mysql.mysql1.svc.cluster.local\" \\\u00a0 \u00a0 --js --execute \"dba.checkInstanceConfiguration()\"'\n```\n## \u5275\u5efa MySQL InnoDB \u4e3b\u96c6\u7fa3\u63a5\u4e0b\u4f86\uff0c\u4f7f\u7528 MySQL Admin `createCluster` \u547d\u4ee4\u5275\u5efa MySQL InnoDB \u96c6\u7fa3\u3002\u5f9e `dbc1-0` \u5be6\u4f8b\uff08\u5b83\u5c07\u662f\u96c6\u7fa3\u7684\u4e3b\u5be6\u4f8b\uff09\u958b\u59cb\uff0c\u7136\u5f8c\u5411\u96c6\u7fa3\u6dfb\u52a0\u5169\u500b\u526f\u672c\u5be6\u4f8b\u3002\n\u5982\u9700\u521d\u59cb\u5316 MySQL InnoDB \u96c6\u7fa3\uff0c\u8acb\u9075\u5faa\u4ee5\u4e0b\u6b65\u9a5f\uff1a- \u5275\u5efa MySQL InnoDB \u96c6\u7fa3\u3002```\nvar cluster=dba.createCluster('mycluster');\n```\u904b\u884c `createCluster` \u547d\u4ee4\u6703\u89f8\u767c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u90e8\u7f72\u5143\u6578\u64da\u67b6\u69cb\u3002\n- \u9a57\u8b49\u7d44\u8907\u88fd\u7684\u914d\u7f6e\u6b63\u78ba\u7121\u8aa4\u3002\n- \u5c07\u5176\u8a3b\u518a\u7232\u65b0\u96c6\u7fa3\u7684\u7a2e\u5b50\u5be6\u4f8b\u3002\n- \u5275\u5efa\u5fc5\u8981\u7684\u5167\u90e8\u8cec\u865f\uff0c\u4f8b\u5982\u8907\u88fd\u7528\u6236\u8cec\u865f\u3002\n- \u958b\u59cb\u7d44\u8907\u88fd\u3002\n\u6b64\u547d\u4ee4\u6703\u521d\u59cb\u5316 MySQL InnoDB \u96c6\u7fa3\uff0c\u4e26\u4f7f\u7528\u4e3b\u6a5f `dbc1-0` \u4f5c\u7232\u4e3b\u5be6\u4f8b\u3002\u96c6\u7fa3\u5f15\u7528\u5b58\u5132\u5728\u96c6\u7fa3\u8b8a\u91cf\u4e2d\u3002\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nA new InnoDB cluster will be created on instance 'dbc1-0.mysql:3306'.\nValidating instance configuration at dbc1-0.mysql:3306...\nThis instance reports its own address as dbc1-0.mysql.mysql1.svc.cluster.local:3306\nInstance configuration is suitable.\nNOTE: Group Replication will communicate with other instances using\n'dbc1-0.mysql:33061'. Use the localAddress\noption to override.\nCreating InnoDB cluster 'mycluster' on\n'dbc1-0.mysql.mysql1.svc.cluster.local:3306'...\nAdding Seed Instance...\nCluster successfully created. Use Cluster.addInstance() to add MySQL\ninstances.\nAt least 3 instances are needed for the cluster to be able to withstand\nup to one server failure.\n```\n- \u5c07\u7b2c\u4e8c\u500b\u5be6\u4f8b\u6dfb\u52a0\u5230\u96c6\u7fa3\u3002```\ncluster.addInstance('icadmin@dbc1-1.mysql', {password: os.getenv(\"MYSQL_ROOT_PASSWORD\"), recoveryMethod: 'clone'});\n```\n- \u5c07\u5269\u9918\u7684\u5be6\u4f8b\u6dfb\u52a0\u5230\u96c6\u7fa3\u3002```\ncluster.addInstance('icadmin@dbc1-2.mysql', {password: os.getenv(\"MYSQL_ROOT_PASSWORD\"), recoveryMethod: 'clone'});\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n...\nThe instance 'dbc1-2.mysql:3306' was successfully added to the cluster.\n```\n- \u9a57\u8b49\u96c6\u7fa3\u7684\u72c0\u614b\u3002```\ncluster.status()\n```\u6b64\u547d\u4ee4\u6703\u986f\u793a\u96c6\u7fa3\u7684\u72c0\u614b\u3002\u8a72\u62d3\u64b2\u7531\u4e09\u500b\u4e3b\u6a5f\u7d44\u6210\uff0c\u5373\u4e00\u500b\u4e3b\u5be6\u4f8b\u548c\u5169\u500b\u8f14\u52a9\u5be6\u4f8b\u3002\u6216\u8005\uff0c\u60a8\u4e5f\u53ef\u4ee5\u8abf\u7528 `cluster.status({extended:1})` \u3002\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n{\n \"clusterName\": \"mysql1\",\n \"defaultReplicaSet\": {\n  \"name\": \"default\",\n  \"primary\": \"dbc1-0.mysql:3306\",\n  \"ssl\": \"REQUIRED\",\n  \"status\": \"OK\",\n  \"statusText\": \"Cluster is ONLINE and can tolerate up to ONE failure.\",\n  \"topology\": {\n   \"dbc1-0.mysql:3306\": {\n    \"address\": \"dbc1-0.mysql:3306\",\n    \"memberRole\": \"PRIMARY\",\n    \"mode\": \"R/W\",\n    \"readReplicas\": {},\n    \"replicationLag\": null,\n    \"role\": \"HA\",\n    \"status\": \"ONLINE\",\n    \"version\": \"8.0.28\"\n   },\n   \"dbc1-1.mysql:3306\": {\n    \"address\": \"dbc1-1.mysql:3306\",\n    \"memberRole\": \"SECONDARY\",\n    \"mode\": \"R/O\",\n    \"readReplicas\": {},\n    \"replicationLag\": null,\n    \"role\": \"HA\",\n    \"status\": \"ONLINE\",\n    \"version\": \"8.0.28\"\n   },\n   \"dbc1-2.mysql:3306\": {\n    \"address\": \"dbc1-2.mysql:3306\",\n    \"memberRole\": \"SECONDARY\",\n    \"mode\": \"R/O\",\n    \"readReplicas\": {},\n    \"replicationLag\": null,\n    \"role\": \"HA\",\n    \"status\": \"ONLINE\",\n    \"version\": \"8.0.28\"\n   }\n  },\n  \"topologyMode\": \"Single-Primary\"\n },\n \"groupInformationSourceMember\": \"dbc1-0.mysql:3306\"\n}\n```\u60a8\u9084\u53ef\u4ee5\u8abf\u7528 `cluster.status({extended:1})` \u4f86\u7372\u53d6\u5176\u4ed6\u72c0\u614b\u8a73\u7d30\u4fe1\u606f\u3002\n### \u5275\u5efa\u793a\u4f8b\u6578\u64da\u5eab\u5982\u9700\u5275\u5efa\u793a\u4f8b\u6578\u64da\u5eab\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u5275\u5efa\u6578\u64da\u5eab\u4e26\u5c07\u6578\u64da\u52a0\u8f09\u5230\u6578\u64da\u5eab\u4e2d\u3002```\n\\sqlcreate database loanapplication;use loanapplicationCREATE TABLE loan (loan_id INT unsigned AUTO_INCREMENT PRIMARY KEY, firstname VARCHAR(30) NOT NULL, lastname VARCHAR(30) NOT NULL , status VARCHAR(30) );\n```\n- \u5c07\u793a\u4f8b\u6578\u64da\u63d2\u5165\u6578\u64da\u5eab\u3002\u5982\u8981\u63d2\u5165\u6578\u64da\uff0c\u60a8\u5fc5\u9808\u9023\u63a5\u5230\u96c6\u7fa3\u7684\u4e3b\u5be6\u4f8b\u3002```\nINSERT INTO loan (firstname, lastname, status) VALUES ( 'Fred','Flintstone','pending');INSERT INTO loan (firstname, lastname, status) VALUES ( 'Betty','Rubble','approved');\n```\n- \u9a57\u8b49\u8a72\u8868\u5305\u542b\u4e0a\u4e00\u6b65\u4e2d\u63d2\u5165\u7684\u4e09\u884c\u3002```\nSELECT * FROM loan;\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n+---------+-----------+------------+----------+\n| loan_id | firstname | lastname | status |\n+---------+-----------+------------+----------+\n|  1 | Fred  | Flintstone | pending |\n|  2 | Betty  | Rubble  | approved |\n+---------+-----------+------------+----------+\n2 rows in set (0.0010 sec)\n```\n## \u5275\u5efa MySQL InnoDB ClusterSet\u60a8\u53ef\u4ee5\u4f7f\u7528\u5c08\u7528\u7684 ClusterSet \u8907\u88fd\u6e20\u9053\u5275\u5efa MySQL InnoDB ClusterSet\uff0c\u4ee5\u7ba1\u7406\u5f9e\u4e3b\u96c6\u7fa3\u5230\u526f\u672c\u96c6\u7fa3\u7684\u8907\u88fd\u3002\nMySQL InnoDB ClusterSet \u53ef\u5c07 MySQL InnoDB \u4e3b\u96c6\u7fa3\u8207\u5b83\u81ea\u5df1\u5728\u5176\u4ed6\u4f4d\u7f6e\uff08\u4f8b\u5982\u591a\u500b\u53ef\u7528\u5340\u548c\u591a\u500b\u5340\u57df\uff09\u7684\u4e00\u500b\u6216\u591a\u500b\u526f\u672c\u76f8\u9023\uff0c\u5f9e\u800c\u7232 MySQL InnoDB \u96c6\u7fa3\u90e8\u7f72\u63d0\u4f9b\u707d\u96e3\u5bb9\u5fcd\u3002\n\u5982\u679c\u60a8\u95dc\u9589\u4e86 MySQL Shell\uff0c\u8acb\u5728\u65b0\u7684 Cloud Shell \u7d42\u7aef\u4e2d\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4f86\u5275\u5efa\u65b0\u7684 shell\uff1a\n```\n\u00a0 kubectl -n mysql1 exec -it dbc1-0 -- \\\u00a0 \u00a0 \u00a0 /bin/bash -c 'mysqlsh \\\u00a0 \u00a0 \u00a0 --uri=\"root:$MYSQL_ROOT_PASSWORD@dbc1-0.mysql.mysql1.svc.cluster.local\"'\n```\n\u5982\u9700\u5275\u5efa MySQL InnoDB ClusterSet\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u5728 MySQL Shell \u7d42\u7aef\u4e2d\uff0c\u7372\u53d6\u96c6\u7fa3\u5c0d\u8c61\u3002```\n\\jscluster=dba.getCluster()\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n<Cluster:mycluster>\n```\n- \u4f7f\u7528\u5b58\u5132\u5728\u96c6\u7fa3\u5c0d\u8c61\u4e2d\u7684\u73fe\u6709 MySQL InnoDB \u4e3b\u96c6\u7fa3\u521d\u59cb\u5316 MySQL InnoDB ClusterSet\u3002```\nclusterset=cluster.createClusterSet('clusterset')\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nA new ClusterSet will be created based on the Cluster 'mycluster'.\n* Validating Cluster 'mycluster' for ClusterSet compliance.\n* Creating InnoDB ClusterSet 'clusterset' on 'mycluster'...\n* Updating metadata...\nClusterSet successfully created. Use ClusterSet.createReplicaCluster() to add Replica Clusters to it.\n<ClusterSet:clusterset>\n```\n- \u6aa2\u67e5 MySQL InnoDB ClusterSet \u7684\u72c0\u614b\u3002```\nclusterset.status()\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n{\n \"clusters\": {\n  \"mycluster\": {\n   \"clusterRole\": \"PRIMARY\",\n   \"globalStatus\": \"OK\",\n   \"primary\": \"dbc1-0.mysql:3306\"\n  }\n },\n \"domainName\": \"clusterset\",\n \"globalPrimaryInstance\": \"dbc1-0.mysql:3306\",\n \"primaryCluster\": \"mycluster\",\n \"status\": \"HEALTHY\",\n \"statusText\": \"All Clusters available.\"\n}\n```\uff08\u53ef\u9078\uff09\u60a8\u53ef\u4ee5\u8abf\u7528 `clusterset.status({extended:1})` \u4f86\u7372\u53d6\u5176\u4ed6\u72c0\u614b\u8a73\u7d30\u4fe1\u606f\uff0c\u5305\u62ec\u6709\u95dc\u96c6\u7fa3\u7684\u4fe1\u606f\u3002\n- \u9000\u51fa MySQL Shell\u3002```\n\\q\n```\n## \u90e8\u7f72 MySQL \u8def\u7531\u5668\u60a8\u53ef\u4ee5\u90e8\u7f72 MySQL \u8def\u7531\u5668\uff0c\u4ee5\u5c07\u5ba2\u6236\u7aef\u61c9\u7528\u6d41\u91cf\u5b9a\u5411\u5230\u6b63\u78ba\u7684\u96c6\u7fa3\u3002\u8def\u7531\u57fa\u65bc\u767c\u51fa\u6578\u64da\u5eab\u64cd\u4f5c\u7684\u61c9\u7528\u7684\u9023\u63a5\u7aef\u53e3\uff1a- \u5beb\u5165\u64cd\u4f5c\u6703\u8def\u7531\u5230\u4e3b ClusterSet \u4e2d\u7684\u4e3b\u96c6\u7fa3\u5be6\u4f8b\u3002\n- \u8b80\u53d6\u64cd\u4f5c\u53ef\u4ee5\u8def\u7531\u5230\u4e3b\u96c6\u7fa3\u4e2d\u7684\u4efb\u4f55\u5be6\u4f8b\u3002\n\u7576\u60a8\u5553\u52d5 MySQL \u8def\u7531\u5668\u6642\uff0c\u5b83\u6703\u91dd\u5c0d MySQL InnoDB ClusterSet \u90e8\u7f72\u5f15\u5c0e\u3002\u8207 MySQL InnoDB ClusterSet \u9023\u63a5\u7684 MySQL \u8def\u7531\u5668\u5be6\u4f8b\u53ef\u8b58\u5225\u4efb\u4f55\u53d7\u63a7\u5236\u7684\u5207\u63db\u6216\u7dca\u6025\u6545\u969c\u5207\u63db\uff0c\u4e26\u5c07\u6d41\u91cf\u5b9a\u5411\u5230\u65b0\u7684\u4e3b\u96c6\u7fa3\u3002\n\u5982\u9700\u90e8\u7f72 MySQL \u8def\u7531\u5668\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u5728 Cloud Shell \u7d42\u7aef\u4e2d\uff0c\u90e8\u7f72 MySQL \u8def\u7531\u5668\u3002```\nkubectl apply -n mysql1 -f c1-router.yaml\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nconfigmap/mysql-router-config created\nservice/mysql-router created\ndeployment.apps/mysql-router created\n```\n- \u6aa2\u67e5 MySQL \u8def\u7531\u5668\u90e8\u7f72\u7684\u5c31\u7dd2\u60c5\u6cc1\u3002```\nkubectl -n mysql1 get deployment mysql-router --watch\n```\u4e09\u500b Pod \u90fd\u6e96\u5099\u5c31\u7dd2\u5f8c\uff0c\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nNAME   READY UP-TO-DATE AVAILABLE AGE\nmysql-router 3/3  3   0   3m36s\n```\u5982\u679c\u60a8\u5728\u63a7\u5236\u6aaf\u4e2d\u770b\u5230 `PodUnschedulable` \u932f\u8aa4\uff0c\u8acb\u7b49\u5f85\u4e00\u5169\u5206\u9418\uff0c\u6b64\u6642 GKE \u6703\u9810\u914d\u66f4\u591a\u7bc0\u9ede\u3002\u5237\u65b0\u5f8c\uff0c\u60a8\u61c9\u8a72\u6703\u770b\u5230 `3/3 OK` \u3002\n- \u5728\u73fe\u6709\u96c6\u7fa3\u7684\u4efb\u4f55\u6210\u54e1\u4e0a\u5553\u52d5 MySQL Shell\u3002```\nkubectl -n mysql1 exec -it dbc1-0 -- \\\u00a0 \u00a0 /bin/bash -c 'mysqlsh --uri=\"root:$MYSQL_ROOT_PASSWORD@dbc1-0.mysql\"'\n```\u6b64\u547d\u4ee4\u6703\u9023\u63a5\u5230 `dbc1-0` Pod\uff0c\u7136\u5f8c\u5553\u52d5\u9023\u63a5\u5230 `dbc1-0` MySQL \u5be6\u4f8b\u7684 shell\u3002\n- \u9a57\u8b49\u8def\u7531\u5668\u914d\u7f6e\u3002```\nclusterset=dba.getClusterSet()clusterset.listRouters()\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n{\n \"domainName\": \"clusterset\",\n \"routers\": {\n \"mysql-router-7cd8585fbc-74pkm::\": {\n  \"hostname\": \"mysql-router-7cd8585fbc-74pkm\",\n  \"lastCheckIn\": \"2022-09-22 23:26:26\",\n  \"roPort\": 6447,\n  \"roXPort\": 6449,\n  \"rwPort\": 6446,\n  \"rwXPort\": 6448,\n  \"targetCluster\": null,\n  \"version\": \"8.0.27\"\n },\n \"mysql-router-7cd8585fbc-824d4::\": {\n  ...\n },\n \"mysql-router-7cd8585fbc-v2qxz::\": {\n  ...\n }\n }\n}\n```\n- \u9000\u51fa MySQL Shell\u3002```\n\\q\n```\n- \u904b\u884c\u6b64\u8173\u672c\u4ee5\u6aa2\u67e5 MySQL \u8def\u7531\u5668 Pod \u7684\u653e\u7f6e\u4f4d\u7f6e\u3002```\nbash ../scripts/inspect_pod_node.sh mysql1 | sort\n```\u8a72\u8173\u672c\u6703\u986f\u793a `mysql1` \u547d\u540d\u7a7a\u9593\u4e2d\u6240\u6709 Pod \u7684\u7bc0\u9ede\u548c Cloud \u53ef\u7528\u5340\u4f4d\u7f6e\uff0c\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\ngke-gkemulti-west-5-default-pool-1ac6e8b5-0h9v us-west1-c mysql-router-6654f985f5-df97q\ngke-gkemulti-west-5-default-pool-1ac6e8b5-ddjx us-west1-c dbc1-1\ngke-gkemulti-west-5-default-pool-1f5baa66-bf8t us-west1-a dbc1-2\ngke-gkemulti-west-5-default-pool-1f5baa66-kt03 us-west1-a mysql-router-6654f985f5-qlfj9\ngke-gkemulti-west-5-default-pool-4bcaca65-2l6s us-west1-b mysql-router-6654f985f5-5967d\ngke-gkemulti-west-5-default-pool-4bcaca65-jch0 us-west1-b dbc1-0\n```\u60a8\u53ef\u4ee5\u89c0\u5bdf\u5230 MySQL \u8def\u7531\u5668 Pod \u5728\u5404\u500b\u53ef\u7528\u5340\u4e2d\u5747\u52fb\u5206\u4f48\uff1b\u4e5f\u5c31\u662f\u8aaa\uff0c\u5b83\u4e0d\u8207 MySQL Pod \u4f4d\u65bc\u540c\u4e00\u7bc0\u9ede\u4e0a\uff0c\u4e5f\u4e0d\u8207\u53e6\u4e00\u500b MySQL \u8def\u7531\u5668 Pod \u4f4d\u65bc\u540c\u4e00\u7bc0\u9ede\u4e0a\u3002\n## \u7ba1\u7406 GKE \u548c MySQL InnoDB \u96c6\u7fa3\u5347\u7d1aMySQL \u548c Kubernetes \u7684\u66f4\u65b0\u6703\u5b9a\u671f\u767c\u4f48\u3002\u8acb\u9075\u5faa\u904b\u71df\u6700\u4f73\u5be6\u8e10\u5b9a\u671f\u66f4\u65b0\u60a8\u7684\u8edf\u4ef6\u74b0\u5883\u3002\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0cGKE \u6703\u7232\u60a8\u7ba1\u7406\u96c6\u7fa3\u548c\u7bc0\u9ede\u6c60\u5347\u7d1a\u3002Kubernetes \u548c GKE \u9084\u63d0\u4f9b\u4e86\u5176\u4ed6\u529f\u80fd\u4f86\u8f14\u52a9 MySQL \u8edf\u4ef6\u5347\u7d1a\u3002\n### \u898f\u5283 GKE \u5347\u7d1a\u60a8\u53ef\u4ee5\u57f7\u884c\u4e3b\u52d5\u6b65\u9a5f\u4e26\u8a2d\u7f6e\u914d\u7f6e\uff0c\u4ee5\u5728\u904b\u884c\u6709\u72c0\u614b\u670d\u52d9\u6642\u7de9\u89e3\u98a8\u96aa\u4e26\u4f7f\u96c6\u7fa3\u5347\u7d1a\u66f4\u52a0\u9806\u66a2\uff0c\u5305\u62ec\uff1a- **Standard \u96c6\u7fa3** \uff1a\u9075\u5faa [GKE \u5347\u7d1a\u96c6\u7fa3\u7684\u6700\u4f73\u5be6\u8e10](https://cloud.google.com/kubernetes-engine/docs/best-practices/upgrading-clusters?hl=zh-cn) \u3002\u9078\u64c7\u9069\u5408\u7684 [\u5347\u7d1a\u7b56\u7565](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies?hl=zh-cn) \uff0c\u4ee5\u78ba\u4fdd\u5728\u7dad\u8b77\u7a97\u53e3\u5167\u9032\u884c\u5347\u7d1a\uff1a- \u5982\u679c\u8cbb\u7528\u512a\u5316\u975e\u5e38\u91cd\u8981\uff0c\u4e26\u4e14\u5de5\u4f5c\u8ca0\u8f09\u53ef\u4ee5\u5bb9\u5fcd 60 \u5206\u9418\u4ee5\u5167\u7684\u6b63\u5e38\u95dc\u505c\uff0c\u8acb\u9078\u64c7 [\u8d85\u984d\u914d\u7f6e\u5347\u7d1a](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies?hl=zh-cn#surge) \u3002\n- \u5982\u679c\u5de5\u4f5c\u8ca0\u8f09\u5c0d\u4e2d\u65b7\u7684\u5bb9\u5fcd\u5ea6\u8f03\u4f4e\uff0c\u4e26\u4e14\u80fd\u5920\u63a5\u53d7\u56e0\u8cc7\u6e90\u7528\u91cf\u589e\u52a0\u800c\u5c0e\u81f4\u7684\u81e8\u6642\u8cbb\u7528\u589e\u52a0\uff0c\u8acb\u9078\u64c7 [\u85cd\u7da0\u5347\u7d1a](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pool-upgrade-strategies?hl=zh-cn#blue-green-upgrade-strategy) \u3002\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u5347\u7d1a\u904b\u884c\u6709\u72c0\u614b\u5de5\u4f5c\u8ca0\u8f09\u7684\u96c6\u7fa3](https://cloud.google.com/kubernetes-engine/docs/tutorials/upgrading-stateful-workload?hl=zh-cn#configure_a_node_pool_upgrade_strategy) \u3002\u6839\u64da\u60a8\u9078\u64c7\u7684\u767c\u4f48\u6e20\u9053\uff0cAutopilot \u96c6\u7fa3\u6703 [\u81ea\u52d5\u5347\u7d1a](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-upgrades-autopilot?hl=zh-cn) \u3002\n- \u8acb\u4f7f\u7528 [\u7dad\u8b77\u7a97\u53e3](https://cloud.google.com/kubernetes-engine/docs/concepts/maintenance-windows-and-exclusions?hl=zh-cn) \u4f86\u78ba\u4fdd\u5347\u7d1a\u5728\u9810\u671f\u6642\u9593\u9032\u884c\u3002\u5728\u7dad\u8b77\u7a97\u53e3\u4e4b\u524d\uff0c\u8acb\u78ba\u4fdd\u6578\u64da\u5eab\u5099\u4efd\u6210\u529f\u3002\n- \u5728\u5141\u8a31\u6d41\u91cf\u9032\u5165\u5347\u7d1a\u5f8c\u7684 MySQL \u7bc0\u9ede\u4e4b\u524d\uff0c\u8acb\u4f7f\u7528\u5c31\u7dd2\u6027\u63a2\u6e2c\u548c\u6d3b\u8e8d\u6027\u63a2\u6e2c\u4f86\u78ba\u4fdd\u7bc0\u9ede\u5df2\u6e96\u5099\u597d\u63a5\u53d7\u6d41\u91cf\u3002\n- \u5275\u5efa\u63a2\u6e2c\uff0c\u4ee5\u5728\u63a5\u53d7\u6d41\u91cf\u4e4b\u524d\u8a55\u4f30\u8907\u88fd\u662f\u5426\u540c\u6b65\u3002\u6b64\u4efb\u52d9\u53ef\u4ee5\u901a\u904e\u81ea\u5b9a\u7fa9\u8173\u672c\u5b8c\u6210\uff0c\u5177\u9ad4\u53d6\u6c7a\u65bc\u6578\u64da\u5eab\u7684\u8907\u96dc\u7a0b\u5ea6\u548c\u898f\u6a21\u3002\n\u7576 MySQL InnoDB \u96c6\u7fa3\u5728 GKE \u4e0a\u904b\u884c\u6642\uff0c\u4efb\u610f\u6642\u523b\u90fd\u5fc5\u9808\u6709\u8db3\u5920\u7684\u5be6\u4f8b\u5728\u904b\u884c\uff0c\u4ee5\u6eff\u8db3\u4ef2\u88c1\u8981\u6c42\u3002\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0cMySQL \u96c6\u7fa3\u5305\u542b\u4e09\u500b\u5be6\u4f8b\uff0c\u5247\u5fc5\u9808\u6709\u5169\u500b\u5be6\u4f8b\u53ef\u7528\u624d\u80fd\u5f62\u6210\u4ef2\u88c1\u3002 `PodDisruptionBudget` \u653f\u7b56\u4f7f\u60a8\u53ef\u4ee5\u9650\u5236\u5728\u4efb\u4f55\u7d66\u5b9a\u6642\u523b\u53ef\u7d42\u6b62\u7684 Pod \u6578\u91cf\u3002\u9019\u5c0d\u65bc\u6709\u72c0\u614b\u670d\u52d9\u7684\u7a69\u5b9a\u72c0\u614b\u64cd\u4f5c\u548c\u96c6\u7fa3\u5347\u7d1a\u975e\u5e38\u6709\u7528\u3002\n\u7232\u78ba\u4fdd\u50c5\u6709\u9650\u6578\u91cf\u7684 Pod \u53ef\u540c\u6642\u4e2d\u65b7\uff0c\u8acb\u5c07\u5de5\u4f5c\u8ca0\u8f09\u7684 PDB \u8a2d\u7f6e\u7232 `maxUnavailable: 1` \u3002\u9019\u6a23\u53ef\u4ee5\u78ba\u4fdd\u5728\u670d\u52d9\u904b\u884c\u904e\u7a0b\u4e2d\u7684\u4efb\u4f55\u6642\u523b\uff0c\u6700\u591a\u96bb\u6709\u4e00\u500b Pod \u6c92\u6709\u5728\u904b\u884c\u3002\n **\u6ce8\u610f** \uff1a\u60a8\u9084\u53ef\u4ee5\u8a2d\u7f6e `minAvailable` \u503c\u4f86\u78ba\u4fdd\u6b63\u5728\u904b\u884c\u7684 Pod \u6578\u4e0b\u9650\u3002\u4f46\u662f\uff0c\u5982\u679c\u55ae\u7368\u4f7f\u7528 `minAvailable` \uff0c\u7232\u4fdd\u8b49\u96c6\u7fa3\u53ef\u7528\u6027\uff0c\u8acb\u78ba\u4fdd\u5728\u96c6\u7fa3\u5927\u5c0f\u589e\u52a0\u6642\u8a72\u503c\u589e\u52a0\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c `maxUnavailable` \u503c\u53ef\u4ee5\u7232\u96c6\u7fa3\u63d0\u4f9b\u4ef2\u88c1\u4fdd\u8b77\uff0c\u800c\u7121\u9700\u9032\u884c\u4efb\u4f55\u66f4\u6539\uff1b\u4f46\u4ee3\u50f9\u662f\u4e00\u6b21\u53ea\u80fd\u4e2d\u65b7\u4e00\u500b\u5be6\u4f8b\u4f86\u9032\u884c\u5347\u7d1a\u3002\n\u4ee5\u4e0b `PodDisruptionBudget` \u653f\u7b56\u6e05\u55ae\u5c07 MySQL \u61c9\u7528\u7684\u6700\u5927\u4e0d\u53ef\u7528 Pod \u6578\u8a2d\u7f6e\u7232\u4e00\u3002\n [  databases/gke-stateful-mysql/kubernetes/mysql-pdb-maxunavailable.yaml ](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/kubernetes/mysql-pdb-maxunavailable.yaml) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/blob/HEAD/databases/gke-stateful-mysql/kubernetes/mysql-pdb-maxunavailable.yaml) \n```\napiVersion: policy/v1kind: PodDisruptionBudgetmetadata:\u00a0 name: mysql-pdbspec:\u00a0 maxUnavailable: 1\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app: mysql\n```\n\u5982\u9700\u5c07 PDB \u653f\u7b56\u61c9\u7528\u65bc\u96c6\u7fa3\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u4f7f\u7528 `kubectl` \u61c9\u7528 PDB \u653f\u7b56\u3002```\nkubectl apply -n mysql1 -f mysql-pdb-maxunavailable.yaml\n```\n- \u67e5\u770b PDB \u7684\u72c0\u614b\u3002```\nkubectl get poddisruptionbudgets -n mysql1 mysql-pdb -o yaml\n```\u5728\u8f38\u51fa\u7684 `status` \u90e8\u5206\u4e2d\uff0c\u67e5\u770b `currentHealthy` \u548c `desiredHealthy` Pod \u8a08\u6578\u3002\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nstatus:\n...\n currentHealthy: 3\n desiredHealthy: 2\n disruptionsAllowed: 1\n expectedPods: 3\n...\n```\n### \u898f\u5283 MySQL \u4e8c\u9032\u5236\u6587\u4ef6\u5347\u7d1aKubernetes \u548c GKE \u63d0\u4f9b\u53ef\u5354\u52a9\u9032\u884c MySQL \u4e8c\u9032\u5236\u6587\u4ef6\u5347\u7d1a\u7684\u529f\u80fd\u3002\u4f46\u662f\uff0c\u60a8\u9700\u8981\u57f7\u884c\u4e00\u4e9b\u64cd\u4f5c\u4f86\u7232\u5347\u7d1a\u505a\u6e96\u5099\u3002\n\u5728\u958b\u59cb\u5347\u7d1a\u904e\u7a0b\u4e4b\u524d\uff0c\u8acb\u7262\u8a18\u4ee5\u4e0b\u6ce8\u610f\u4e8b\u9805\uff1a- \u5347\u7d1a\u61c9\u5148\u5728\u6e2c\u8a66\u74b0\u5883\u4e2d\u57f7\u884c\u3002\u5c0d\u65bc\u751f\u7522\u7cfb\u7d71\uff0c\u60a8\u61c9\u8a72\u5728\u6e2c\u8a66\u74b0\u5883\u4e2d\u57f7\u884c\u9032\u4e00\u6b65\u6e2c\u8a66\u3002\n- \u5c0d\u65bc\u67d0\u4e9b\u4e8c\u9032\u5236\u6587\u4ef6\u7248\u672c\uff0c\u57f7\u884c\u5347\u7d1a\u5f8c\u4fbf\u7121\u6cd5\u964d\u7d1a\u7248\u672c\u3002\u8acb\u82b1\u4e9b\u6642\u9593\u77ad\u89e3\u5347\u7d1a\u7684\u5f71\u97ff\u3002\n- \u8907\u88fd\u4f86\u6e90\u53ef\u4ee5\u8907\u88fd\u5230\u8f03\u65b0\u7248\u672c\u3002\u4f46\u662f\uff0c\u901a\u5e38\u4e0d\u652f\u6301\u5f9e\u65b0\u7248\u672c\u8907\u88fd\u5230\u820a\u7248\u672c\u3002\n- \u5728\u90e8\u7f72\u5347\u7d1a\u5f8c\u7684\u7248\u672c\u4e4b\u524d\uff0c\u8acb\u78ba\u4fdd\u60a8\u64c1\u6709\u5b8c\u6574\u7684\u6578\u64da\u5eab\u5099\u4efd\u3002\n- \u8acb\u8a18\u4f4f\uff0cKubernetes Pod \u5177\u6709\u81e8\u6642\u6027\u3002\u91cd\u65b0\u90e8\u7f72 Pod \u6642\uff0cPod \u5b58\u5132\u5728\u975e\u6c38\u4e45\u6027\u5377\u4e2d\u7684\u6240\u6709\u914d\u7f6e\u72c0\u614b\u90fd\u5c07\u4e1f\u5931\u3002\n- \u5c0d\u65bc MySQL \u4e8c\u9032\u5236\u6587\u4ef6\u5347\u7d1a\uff0c\u8acb\u4f7f\u7528\u4e0a\u6587\u4ecb\u7d39\u7684\u76f8\u540c PDB\u3001\u7bc0\u9ede\u6c60\u66f4\u65b0\u7b56\u7565\u548c\u63a2\u6e2c\u3002\n\u5728\u751f\u7522\u74b0\u5883\u4e2d\uff0c\u60a8\u61c9\u9075\u5faa\u4ee5\u4e0b\u6700\u4f73\u5be6\u8e10\uff1a- \u4f7f\u7528\u65b0\u7248 MySQL \u5275\u5efa\u5bb9\u5668\u6620\u50cf\u3002\n- \u5728\u6e90\u4ee3\u78bc\u63a7\u5236\u4ee3\u78bc\u5eab\u4e2d\u4fdd\u7559\u6620\u50cf\u69cb\u5efa\u8aaa\u660e\u3002\n- \u4f7f\u7528\u81ea\u52d5\u6620\u50cf\u69cb\u5efa\u548c\u6e2c\u8a66\u6d41\u6c34\u7dda\uff08\u5982 Cloud Build\uff09\uff0c\u4e26\u5c07\u6620\u50cf\u4e8c\u9032\u5236\u6587\u4ef6\u5b58\u5132\u5728 Artifact Registry \u7b49\u6620\u50cf\u5b58\u5132\u5eab\u4e2d\u3002\n\u7232\u7c21\u5316\u672c\u6559\u7a0b\uff0c\u60a8\u5c07\u4e0d\u6703\u69cb\u5efa\u548c\u4fdd\u7559\u5bb9\u5668\u6620\u50cf\uff0c\u800c\u5c07\u4f7f\u7528\u516c\u5171 MySQL \u6620\u50cf\u3002\u5982\u9700\u57f7\u884c MySQL \u4e8c\u9032\u5236\u6587\u4ef6\u5347\u7d1a\uff0c\u8acb\u767c\u51fa\u4e00\u500b\u4fee\u6539 StatefulSet \u8cc7\u6e90\u6620\u50cf\u7248\u672c\u7684\u8072\u660e\u5f0f\u547d\u4ee4\u3002GKE \u6703\u57f7\u884c\u5fc5\u8981\u7684\u6b65\u9a5f\u4f86\u505c\u6b62\u7576\u524d Pod\uff0c\u4f7f\u7528\u5347\u7d1a\u5f8c\u7684\u4e8c\u9032\u5236\u6587\u4ef6\u90e8\u7f72\u65b0\u7684 Pod\uff0c\u4e26\u5c07\u6c38\u4e45\u6027\u78c1\u76e4\u639b\u63a5\u5230\u65b0\u7684 Pod\u3002- \u9a57\u8b49 PDB \u5df2\u5275\u5efa\u3002```\nkubectl get poddisruptionbudgets -n mysql1\n```\n- \u7372\u53d6\u6709\u72c0\u614b\u96c6\u7684\u5217\u8868\u3002```\nkubectl get statefulsets -n mysql1\n```\n- \u4f7f\u7528 `app` \u6a19\u7c64\u7372\u53d6\u6b63\u5728\u904b\u884c\u7684 Pod \u5217\u8868\u3002```\nkubectl get pods --selector=app=mysql -n mysql1\n```\n- \u66f4\u65b0\u6709\u72c0\u614b\u96c6\u4e2d\u7684 MySQL \u6620\u50cf\u3002```\nkubectl \u00a0-n mysql1 \\\u00a0 \u00a0 set image statefulset/dbc1 \\\u00a0 \u00a0 mysql=mysql/mysql-server:8.0.30\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nstatefulset.apps/mysql image updated\n```\n- \u6aa2\u67e5\u7d42\u6b62 Pod \u548c\u65b0 Pod \u7684\u72c0\u614b\u3002```\nkubectl get pods --selector=app=mysql -n mysql1\n```\n\u5728\u5347\u7d1a\u671f\u9593\uff0c\u60a8\u53ef\u4ee5\u9a57\u8b49\u767c\u4f48\u3001\u65b0 Pod \u548c\u73fe\u6709 Service \u7684\u72c0\u614b\u3002- \u904b\u884c `rollout status` \u547d\u4ee4\u4f86\u78ba\u8a8d\u5347\u7d1a\u3002```\nkubectl rollout status statefulset/dbc1 -n mysql1\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\npartitioned roll out complete: 3 new pods have been updated...\n```\n- \u6aa2\u67e5\u6709\u72c0\u614b\u96c6\u4ee5\u78ba\u8a8d\u6620\u50cf\u7248\u672c\u3002```\nkubectl get statefulsets -o wide -n mysql1\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nNAME READY AGE CONTAINERS IMAGES\ndbc1 3/3  37m mysql  mysql/mysql-server:8.0.30\n```\n- \u6aa2\u67e5\u96c6\u7fa3\u72c0\u614b\u3002```\nkubectl -n mysql1 \\\u00a0 \u00a0 \u00a0exec -it dbc1-0 -- \\\u00a0 \u00a0 \u00a0 \u00a0/bin/bash \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0-c 'mysqlsh \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0--uri=\"root:$MYSQL_ROOT_PASSWORD@dbc1-1.mysql.mysql1.svc.cluster.local\" \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0--js \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0--execute \"print(dba.getClusterSet().status({extended:1})); print(\\\"\\\\n\\\")\"'\n```\u5c0d\u65bc\u6bcf\u500b\u96c6\u7fa3\u5be6\u4f8b\uff0c\u67e5\u627e\u8f38\u51fa\u4e2d\u7684\u72c0\u614b\u548c\u7248\u672c\u503c\u3002\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n...\n \"status\": \"ONLINE\",\n \"version\": \"8.0.30\"\n...\n```\n **\u8b66\u544a** \uff1a\u67d0\u4e9b\u4e8c\u9032\u5236\u6587\u4ef6\u7248\u672c\u7121\u6cd5\u964d\u7d1a\u3002\u5728\u57f7\u884c\u4e8c\u9032\u5236\u6587\u4ef6\u5347\u7d1a\u4e4b\u524d\uff0c\u8acb\u4e86\u89e3\u76f8\u95dc\u7684\u5f71\u97ff\u548c\u7d04\u675f\u3002\n\u9084\u539f\u5df2\u5347\u7d1a\u7684\u4e8c\u9032\u5236\u6587\u4ef6\u7248\u672c\u7684\u90e8\u7f72\u6642\uff0c\u767c\u4f48\u904e\u7a0b\u6703\u9006\u8f49\uff0c\u4e26\u6703\u4f7f\u7528\u5148\u524d\u7684\u6620\u50cf\u7248\u672c\u90e8\u7f72\u4e00\u7d44\u65b0\u7684 Pod\u3002\n\u5982\u9700\u5c07\u90e8\u7f72\u9084\u539f\u5230\u5148\u524d\u7684\u5de5\u4f5c\u7248\u672c\uff0c\u8acb\u4f7f\u7528 `rollout undo` \u547d\u4ee4\uff1a\n```\nkubectl rollout undo statefulset/dbc1 -n mysql1\n```\n\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\nstatefulset.apps/dbc1 rolled back\n```## \u6a6b\u5411\u64f4\u5bb9\u6578\u64da\u5eab\u96c6\u7fa3\u5982\u9700\u6a6b\u5411\u64f4\u5bb9 MySQL InnoDB \u96c6\u7fa3\uff0c\u8acb\u5411 GKE \u96c6\u7fa3\u7bc0\u9ede\u6c60\u6dfb\u52a0\u66f4\u591a\u7bc0\u9ede\uff08\u50c5\u5728\u4f7f\u7528 Standard \u96c6\u7fa3\u6642\u624d\u9700\u8981\u6b64\u64cd\u4f5c\uff09\uff0c\u90e8\u7f72\u66f4\u591a MySQL \u5be6\u4f8b\uff0c\u7136\u5f8c\u5c07\u6bcf\u500b\u5be6\u4f8b\u6dfb\u52a0\u5230\u73fe\u6709 MySQL InnoDB \u96c6\u7fa3\u3002\n### \u5411 Standard \u96c6\u7fa3\u6dfb\u52a0\u7bc0\u9ede\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Autopilot \u96c6\u7fa3\uff0c\u5247\u7121\u9700\u57f7\u884c\u6b64\u64cd\u4f5c\u3002\n\u5982\u9700\u5c07\u7bc0\u9ede\u6dfb\u52a0\u5230 Standard \u96c6\u7fa3\uff0c\u8acb\u9075\u5faa\u9069\u7528\u65bc Cloud Shell \u6216 Google Cloud \u63a7\u5236\u6aaf\u7684\u4ee5\u4e0b\u8aaa\u660e\u3002\u5982\u9700\u77ad\u89e3\u8a73\u7d30\u6b65\u9a5f\uff0c\u8acb\u53c3\u95b1 [\u8abf\u6574\u7bc0\u9ede\u6c60\u7684\u5927\u5c0f](https://cloud.google.com/kubernetes-engine/docs/how-to/node-pools?hl=zh-cn#resizing_a_node_pool) \u3002\n\u5728 Cloud Shell \u4e2d\uff0c\u5c07\u6bcf\u500b\u4ee3\u7ba1\u5f0f\u5be6\u4f8b\u7d44\u4e2d\u7684\u9ed8\u8a8d\u7bc0\u9ede\u6c60\u8abf\u6574\u7232 8 \u500b\u5be6\u4f8b\u3002\n```\ngcloud container clusters resize ${CLUSTER_NAME} \\\u00a0 \u00a0 \u00a0--node-pool default-pool \\\u00a0 \u00a0 \u00a0--num-nodes=8\n```\n\u5982\u9700\u5411 Standard \u96c6\u7fa3\u6dfb\u52a0\u7bc0\u9ede\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\u6253\u958b`gkemulti-west1`\u96c6\u7fa3\u9801\u9762\u3002\n- \u9078\u64c7 **\u7bc0\u9ede** \uff0c\u7136\u5f8c\u9ede\u64ca **\u9ed8\u8a8d\u6c60** \u3002\n- \u5411\u4e0b\u6efe\u52d5\u5230 **\u5be6\u4f8b\u7d44** \u3002\n- \u5c0d\u65bc\u6bcf\u500b\u5be6\u4f8b\u7d44\uff0c\u5c07`Number of nodes`\u503c\u5f9e 5 \u500b\u7bc0\u9ede\u8abf\u6574\u7232 8 \u500b\u7bc0\u9ede\u3002### \u5411\u4e3b\u96c6\u7fa3\u6dfb\u52a0 MySQL Pod\u5982\u9700\u90e8\u7f72\u66f4\u591a MySQL Pod \u4ee5\u6a6b\u5411\u64f4\u5bb9\u96c6\u7fa3\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u5728 Cloud Shell \u4e2d\uff0c\u5c07 MySQL \u90e8\u7f72\u4e2d\u7684\u526f\u672c\u6578\u91cf\u5f9e\u4e09\u500b\u526f\u672c\u66f4\u65b0\u7232\u4e94\u500b\u526f\u672c\u3002```\nkubectl scale \u00a0-n mysql1 --replicas=5 -f c1-mysql.yaml\n```\n- \u9a57\u8b49\u90e8\u7f72\u7684\u9032\u5ea6\u3002```\nkubectl -n mysql1 get pods --selector=app=mysql -o wide\n```\u5982\u9700\u78ba\u5b9a Pod \u662f\u5426\u5df2\u6e96\u5099\u5c31\u7dd2\uff0c\u8acb\u4f7f\u7528 `--watch` \u6a19\u8a8c\u4f86\u76e3\u8996\u90e8\u7f72\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Autopilot \u96c6\u7fa3\u4e26\u770b\u5230 `Pod Unschedulable` \u932f\u8aa4\uff0c\u5247\u53ef\u80fd\u8868\u793a GKE \u6b63\u5728\u9810\u914d\u7bc0\u9ede\u4ee5\u5bb9\u7d0d\u984d\u5916\u7684 Pod\u3002\n- \u7232\u8981\u6dfb\u52a0\u5230\u96c6\u7fa3\u7684\u65b0 MySQL \u5be6\u4f8b\u914d\u7f6e\u7d44\u8907\u88fd\u8a2d\u7f6e```\nbash ../scripts/c1-clustersetup.sh 3 4\n```\u8a72\u8173\u672c\u6703\u5c07\u547d\u4ee4\u63d0\u4ea4\u5230\u5728\u5e8f\u6578\u7232 3 \u5230 4 \u7684 Pod \u4e0a\u904b\u884c\u7684\u5be6\u4f8b\u3002\n- \u6253\u958b MySQL Shell\u3002```\nkubectl -n mysql1 \\\u00a0 exec -it dbc1-0 -- \\\u00a0 \u00a0 \u00a0 /bin/bash \\\u00a0 \u00a0 \u00a0 \u00a0 -c 'mysqlsh \\\u00a0 \u00a0 \u00a0 \u00a0 --uri=\"root:$MYSQL_ROOT_PASSWORD@dbc1-0.mysql\"'\n```\n- \u914d\u7f6e\u5169\u500b\u65b0\u7684 MySQL \u5be6\u4f8b\u3002```\ndba.configureInstance('root:$MYSQL_ROOT_PASSWORD@dbc1-3.mysql', {password: os.getenv(\"MYSQL_ROOT_PASSWORD\"),clusterAdmin: 'icadmin', clusterAdminPassword: os.getenv(\"MYSQL_ADMIN_PASSWORD\")});dba.configureInstance('root:$MYSQL_ROOT_PASSWORD@dbc1-4.mysql', {password: os.getenv(\"MYSQL_ROOT_PASSWORD\"),clusterAdmin: 'icadmin', clusterAdminPassword: os.getenv(\"MYSQL_ADMIN_PASSWORD\")});\n```\u9019\u4e9b\u547d\u4ee4\u6703\u6aa2\u67e5\u5be6\u4f8b\u662f\u5426\u5df2\u6b63\u78ba\u914d\u7f6e\u4ee5\u5728 MySQL InnoDB \u96c6\u7fa3\u4e2d\u4f7f\u7528\uff0c\u4e26\u57f7\u884c\u5fc5\u8981\u7684\u914d\u7f6e\u66f4\u6539\u3002\n- \u5c07\u5176\u4e2d\u4e00\u500b\u65b0\u5be6\u4f8b\u6dfb\u52a0\u5230\u4e3b\u96c6\u7fa3\u3002```\ncluster = dba.getCluster()cluster.addInstance('icadmin@dbc1-3.mysql', {password: os.getenv(\"MYSQL_ROOT_PASSWORD\"), recoveryMethod: 'clone'});\n```\n- \u5c07\u7b2c\u4e8c\u500b\u65b0\u5be6\u4f8b\u6dfb\u52a0\u5230\u4e3b\u96c6\u7fa3\u3002```\ncluster.addInstance('icadmin@dbc1-4.mysql', {password: os.getenv(\"MYSQL_ROOT_PASSWORD\"), recoveryMethod: 'clone'});\n```\n- \u7372\u53d6 ClusterSet \u72c0\u614b\uff0c\u5176\u4e2d\u4e5f\u5305\u62ec\u96c6\u7fa3\u72c0\u614b\u3002```\nclusterset = dba.getClusterSet()clusterset.status({extended: 1})\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\n\"domainName\": \"clusterset\",\n\"globalPrimaryInstance\": \"dbc1-0.mysql:3306\",\n\"metadataServer\": \"dbc1-0.mysql:3306\",\n\"primaryCluster\": \"mycluster\",\n\"status\": \"HEALTHY\",\n\"statusText\": \"All Clusters available.\"\n```\n- \u9000\u51fa MySQL Shell\u3002```\n\\q\n```\n## \u6e05\u7406\u7232\u907f\u514d\u56e0\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u8cc7\u6e90\u5c0e\u81f4\u60a8\u7684 Google Cloud \u8cec\u865f\u7522\u751f\u8cbb\u7528\uff0c\u8acb\u522a\u9664\u5305\u542b\u9019\u4e9b\u8cc7\u6e90\u7684\u9805\u76ee\uff0c\u6216\u8005\u4fdd\u7559\u9805\u76ee\u4f46\u522a\u9664\u5404\u500b\u8cc7\u6e90\u3002\n### \u522a\u9664\u9805\u76ee\u7232\u907f\u514d\u652f\u4ed8\u8cbb\u7528\uff0c\u6700\u7c21\u55ae\u7684\u65b9\u6cd5\u662f\u522a\u9664\u60a8\u7232\u672c\u6559\u7a0b\u5275\u5efa\u7684\u9805\u76ee\u3002Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them **\u8b66\u544a** \uff1a\u522a\u9664\u9805\u76ee\u6703\u7522\u751f\u4ee5\u4e0b\u5f71\u97ff- **\u9805\u76ee\u4e2d\u7684\u6240\u6709\u5167\u5bb9\u90fd\u6703\u88ab\u522a\u9664\u3002** \u5982\u679c\u60a8\u5c07\u73fe\u6709\u9805\u76ee\u7528\u65bc\u672c\u6587\u6a94\u4e2d\u7684\u4efb\u52d9\uff0c\u5247\u522a\u9664\u8a72\u9805\u76ee\u5f8c\uff0c\u9084\u5c07\u522a\u9664\u60a8\u5df2\u5728\u8a72\u9805\u76ee\u4e2d\u5b8c\u6210\u7684\u4efb\u4f55\u5176\u4ed6\u5de5\u4f5c\u3002\n- **\u81ea\u5b9a\u7fa9\u9805\u76ee ID \u4e1f\u5931\u3002** \u5275\u5efa\u6b64\u9805\u76ee\u6642\uff0c\u60a8\u53ef\u80fd\u5275\u5efa\u4e86\u8981\u5728\u5c07\u4f86\u4f7f\u7528\u7684\u81ea\u5b9a\u7fa9\u9805\u76ee ID\u3002\u8981\u4fdd\u7559\u4f7f\u7528\u8a72\u9805\u76ee ID \u7684\u7db2\u5740\uff08\u4f8b\u5982`appspot.com`\u7db2\u5740\uff09\uff0c\u8acb\u522a\u9664\u9805\u76ee\u5167\u7684\u6240\u9078\u8cc7\u6e90\uff0c\u800c\u4e0d\u662f\u522a\u9664\u6574\u500b\u9805\u76ee\u3002\n\u5982\u679c\u60a8\u6253\u7b97\u63a2\u7d22\u591a\u500b\u67b6\u69cb\u3001\u6559\u7a0b\u6216\u5feb\u901f\u5165\u9580\uff0c\u5247\u91cd\u8907\u4f7f\u7528\u9805\u76ee\u53ef\u4ee5\u5e6b\u52a9\u60a8\u907f\u514d\u8d85\u51fa\u9805\u76ee\u914d\u984d\u9650\u5236\u3002\n\u522a\u9664 Google Cloud \u9805\u76ee\uff1a\n```\ngcloud projects delete PROJECT_ID\n```## \u5f8c\u7e8c\u6b65\u9a5f\n- \u8a73\u7d30\u77ad\u89e3 [Google Cloud \u7684\u904b\u7dad\u5957\u4ef6 MySQL \u96c6\u6210](https://cloud.google.com/stackdriver/docs/solutions/agents/ops-agent/third-party/mysql?hl=zh-cn) \u5982\u4f55\u6536\u96c6\u8207 InnoDB \u76f8\u95dc\u7684\u6027\u80fd\u6307\u6a19\u3002\n- \u8a73\u7d30\u77ad\u89e3 [Backup for GKE](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/concepts/backup-for-gke?hl=zh-cn) \uff0c\u8a72\u670d\u52d9\u7528\u65bc\u5728 GKE \u4e2d\u5099\u4efd\u548c\u6062\u5fa9\u5de5\u4f5c\u8ca0\u8f09\u3002\n- \u8a73\u7d30\u63a2\u7d22 [\u6c38\u4e45\u6027\u5377](https://cloud.google.com/kubernetes-engine/docs/concepts/persistent-volumes?hl=zh-cn) \u3002", "guide": "Google Kubernetes Engine (GKE)"}