{"title": "Google Kubernetes Engine (GKE) - \u5728 GKE \u4e0a\u90e8\u7f72\u9ad8\u53ef\u7528\u6027 Kafka \u96c6\u7fa3", "url": "https://cloud.google.com/kubernetes-engine/docs/tutorials/stateful-workloads/kafka?hl=zh-cn", "abstract": "# Google Kubernetes Engine (GKE) - \u5728 GKE \u4e0a\u90e8\u7f72\u9ad8\u53ef\u7528\u6027 Kafka \u96c6\u7fa3\n[Kafka](https://kafka.apache.org/) \u662f\u4e00\u500b\u958b\u6e90\u5206\u4f48\u5f0f\u767c\u4f48-\u8a02\u95b1\u6d88\u606f\u50b3\u905e\u7cfb\u7d71\uff0c\u7528\u65bc\u8655\u7406\u5927\u91cf\u3001\u9ad8\u541e\u5410\u91cf\u548c\u5be6\u6642\u7684\u6d41\u5f0f\u6578\u64da\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 Kafka \u69cb\u5efa\u6d41\u5f0f\u6578\u64da\u6d41\u6c34\u7dda\uff0c\u4ee5\u5728\u4e0d\u540c\u7cfb\u7d71\u548c\u61c9\u7528\u4e4b\u9593\u53ef\u9760\u5730\u79fb\u52d5\u6578\u64da\u4f86\u9032\u884c\u8655\u7406\u548c\u5206\u6790\u3002\n\u672c\u6559\u7a0b\u9069\u7528\u65bc\u60f3\u8981\u5728 Google Kubernetes Engine (GKE) \u4e0a\u90e8\u7f72\u9ad8\u53ef\u7528\u6027 Kafka \u96c6\u7fa3\u7684\u5e73\u81fa\u7ba1\u7406\u54e1\u3001\u96f2\u67b6\u69cb\u5e2b\u548c\u904b\u7dad\u5c08\u696d\u4eba\u54e1\u3002", "content": "## \u76ee\u6a19\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c07\u5b78\u7fd2\u5982\u4f55\u5b8c\u6210\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u4f7f\u7528 Terraform \u5275\u5efa\u5340\u57df\u7d1a GKE \u96c6\u7fa3\u3002\n- \u90e8\u7f72\u9ad8\u53ef\u7528\u6027 Kafka \u96c6\u7fa3\u3002\n- \u5347\u7d1a Kafka \u4e8c\u9032\u5236\u6587\u4ef6\u3002\n- \u5099\u4efd\u548c\u6062\u5fa9 Kafka \u96c6\u7fa3\u3002\n- \u6a21\u64ec GKE \u7bc0\u9ede\u4e2d\u65b7\u548c Kafka \u4ee3\u7406\u6545\u969c\u5207\u63db\u3002\n## \u67b6\u69cb\u672c\u90e8\u5206\u4ecb\u7d39\u4e86\u60a8\u5c07\u5728\u672c\u6559\u7a0b\u4e2d\u69cb\u5efa\u7684\u89e3\u6c7a\u65b9\u6848\u7684\u67b6\u69cb\u3002\nKafka \u96c6\u7fa3\u662f\u4e00\u7d44\uff08\u5305\u542b\u4e00\u500b\u6216\u591a\u500b\uff09\u670d\u52d9\u5668\uff08\u7a31\u7232\u201c\u4ee3\u7406\u201d \uff09\uff0c\u9019\u4e9b\u670d\u52d9\u5668\u5354\u540c\u5de5\u4f5c\u4f86\u8655\u7406 Kafka \u5ba2\u6236\u7aef\uff08\u7a31\u7232\u201c\u4f7f\u7528\u65b9\u201d \uff09\u7684\u50b3\u5165\u6578\u64da\u6d41\u548c\u767c\u4f48-\u8a02\u95b1\u6d88\u606f\u50b3\u905e\u3002\nKafka \u96c6\u7fa3\u4e2d\u7684\u6bcf\u500b\u6578\u64da\u5206\u5340\u90fd\u6709\u4e00\u500b\u4e3b\u8981 \u4ee3\u7406\uff0c\u4e26\u4e14\u53ef\u4ee5\u5305\u542b\u4e00\u500b\u6216\u591a\u500b\u8ddf\u96a8\u4ee3\u7406\u3002\u4e3b\u8981\u4ee3\u7406\u6703\u8655\u7406\u5c0d\u5206\u5340\u7684\u6240\u6709\u8b80\u53d6\u548c\u5beb\u5165\u64cd\u4f5c\u3002\u6bcf\u500b\u8ddf\u96a8\u4ee3\u7406\u90fd\u6703\u88ab\u52d5\u5730\u8907\u88fd\u4e3b\u8981\u4ee3\u7406\u3002\n\u5728\u5178\u578b\u7684 Kafka \u8a2d\u7f6e\u4e2d\uff0c\u60a8\u9084\u9700\u8981\u4f7f\u7528\u4e00\u500b\u540d\u7232 [ZooKeeper](https://zookeeper.apache.org/) \u7684\u958b\u6e90\u670d\u52d9\u4f86\u5354\u8abf Kafka \u96c6\u7fa3\u3002\u6b64\u670d\u52d9\u6709\u52a9\u65bc\u5728\u4ee3\u7406\u4e4b\u9593\u9078\u8209\u4e3b\u8981\u4ee3\u7406\uff0c\u4e26\u5728\u767c\u751f\u6545\u969c\u6642\u89f8\u767c\u6545\u969c\u5207\u63db\u3002\n\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u9700\u8981\u5c07 Kafka \u4ee3\u7406\u548c ZooKeeper \u670d\u52d9\u914d\u7f6e\u7232\u55ae\u500b [StatefulSet](https://cloud.google.com/kubernetes-engine/docs/concepts/statefulset?hl=zh-cn) \uff0c\u5f9e\u800c\u5728 GKE \u4e0a\u90e8\u7f72 Kafka \u96c6\u7fa3\u3002\u5982\u9700\u9810\u914d\u9ad8\u53ef\u7528\u6027 Kafka \u96c6\u7fa3\u4f75\u7232\u707d\u96e3\u6062\u5fa9\u505a\u597d\u6e96\u5099\uff0c\u8acb\u5c07 Kafka \u548c ZooKeeper StatefulSet \u914d\u7f6e\u7232\u4f7f\u7528\u55ae\u7368\u7684 [\u7bc0\u9ede\u6c60](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pools?hl=zh-cn) \u548c [\u53ef\u7528\u5340](https://cloud.google.com/compute/docs/regions-zones?hl=zh-cn) \u3002\n\u4e0b\u5716\u5c55\u793a\u4e86 Kafka StatefulSet \u5982\u4f55\u5728 GKE \u96c6\u7fa3\u4e2d\u7684\u591a\u500b\u7bc0\u9ede\u548c\u53ef\u7528\u5340\u4e0a\u904b\u884c\u3002\u4e0b\u5716\u5c55\u793a\u4e86 Zookeeper StatefulSet \u5982\u4f55\u5728 GKE \u96c6\u7fa3\u4e2d\u7684\u591a\u500b\u7bc0\u9ede\u548c\u53ef\u7528\u5340\u4e0a\u904b\u884c\u3002\n### \u7bc0\u9ede\u9810\u914d\u548c Pod \u8abf\u5ea6\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Autopilot \u96c6\u7fa3\uff0c\u5247 Autopilot \u6703\u7232\u5de5\u4f5c\u8ca0\u8f09\u8655\u7406\u7bc0\u9ede\u9810\u914d\u548c Pod \u8abf\u5ea6\u3002\u60a8\u9700\u8981\u4f7f\u7528 Pod \u53cd\u89aa\u548c\u6027 [](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) \u4f86\u78ba\u4fdd\u4e0d\u6703\u5728\u540c\u4e00\u7bc0\u9ede\u548c\u540c\u4e00\u53ef\u7528\u5340\u4e0a\u8abf\u5ea6\u540c\u4e00 StatefulSet \u7684\u5169\u500b Pod\u3002\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Standard \u96c6\u7fa3\uff0c\u5247\u9700\u8981\u914d\u7f6e Pod [\u5bb9\u5fcd\u8a2d\u7f6e](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) \u548c [\u7bc0\u9ede\u89aa\u548c\u6027](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) \u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u5728\u5c08\u7528\u7bc0\u9ede\u6c60\u4e2d\u9694\u96e2\u5de5\u4f5c\u8ca0\u8f09](https://cloud.google.com/kubernetes-engine/docs/how-to/isolate-workloads-dedicated-nodes?hl=zh-cn) \u3002## \u8cbb\u7528\nTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5728\u672c\u6587\u6a94\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 Google Cloud \u7684\u4ee5\u4e0b\u6536\u8cbb\u7d44\u4ef6\uff1a- [Artifact Registry](https://cloud.google.com/artifact-registry/pricing?hl=zh-cn) \n- [Backup for GKE](https://cloud.google.com/kubernetes-engine/pricing?hl=zh-cn#backup-for-gke) \n- [Compute Engine](https://cloud.google.com/compute/disks-image-pricing?hl=zh-cn) \n- [GKE](https://cloud.google.com/kubernetes-engine/pricing?hl=zh-cn) \n- [Google Cloud Managed Service for Prometheus](https://cloud.google.com/stackdriver/docs/managed-prometheus?hl=zh-cn) \n\u60a8\u53ef\u4f7f\u7528 [\u50f9\u683c\u8a08\u7b97\u5668](https://cloud.google.com/products/calculator?hl=zh-cn) \u6839\u64da\u60a8\u7684\u9810\u8a08\u4f7f\u7528\u60c5\u6cc1\u4f86\u4f30\u7b97\u8cbb\u7528\u3002 \nTitles in dynamic includes are not used anywhere, and we should avoid paying to translate them\u5b8c\u6210\u672c\u6587\u6a94\u4e2d\u63cf\u8ff0\u7684\u4efb\u52d9\u5f8c\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u522a\u9664\u6240\u5275\u5efa\u7684\u8cc7\u6e90\u4f86\u907f\u514d\u7e7c\u7e8c\u8a08\u8cbb\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6e05\u7406](#clean-up) \u3002## \u6e96\u5099\u5de5\u4f5c\n### \u8a2d\u7f6e\u9805\u76ee\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n### \u8a2d\u7f6e\u89d2\u8272- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u5411\u60a8\u7684 Google \u8cec\u865f\u6388\u4e88\u89d2\u8272\u3002\u5c0d\u4ee5\u4e0b\u6bcf\u500b IAM \u89d2\u8272\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4e00\u6b21\uff1a `role/storage.objectViewer, role/logging.logWriter, role/artifactregistry.Admin, roles/container.clusterAdmin, role/container.serviceAgent, roles/iam.serviceAccountAdmin, roles/serviceusage.serviceUsageAdmin, roles/iam.serviceAccountAdmin````\n$ gcloud projects add-iam-policy-binding PROJECT_ID --member=\"user:EMAIL_ADDRESS\" --role=ROLE\n```- \u5c07``\u66ff\u63db\u7232\u60a8\u7684\u9805\u76ee ID\u3002\n- \u5c07``\u66ff\u63db\u7232\u60a8\u7684\u96fb\u5b50\u90f5\u4ef6\u5730\u5740\u3002\n- \u5c07``\u66ff\u63db\u7232\u6bcf\u500b\u89d2\u8272\u3002### \u8a2d\u7f6e\u60a8\u7684\u74b0\u5883\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 [Cloud Shell](https://cloud.google.com/shell?hl=zh-cn) \u4f86\u7ba1\u7406 Google Cloud \u4e0a\u8a17\u7ba1\u7684\u8cc7\u6e90\u3002Cloud Shell \u9810\u5b89\u88dd\u6709\u672c\u6559\u7a0b\u6240\u9700\u7684\u8edf\u4ef6\uff0c\u5305\u62ec [Docker](https://www.docker.com/) \u3001 [kubectl](https://kubernetes.io/docs/reference/kubectl/) \u3001 [gcloud CLI](https://cloud.google.com/sdk/gcloud?hl=zh-cn) \u3001 [Helm](https://helm.sh/) \u548c [Terraform](https://cloud.google.com/docs/terraform?hl=zh-cn) \u3002\n\u5982\u9700\u4f7f\u7528 Cloud Shell \u8a2d\u7f6e\u60a8\u7684\u74b0\u5883\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u9ede\u64ca [Google Cloud \u63a7\u5236\u6aaf](http://console.cloud.google.com?hl=zh-cn) \u4e2d\u7684 **\u6fc0\u6d3b Cloud Shell** \uff0c\u5f9e Google Cloud \u63a7\u5236\u6aaf\u5553\u52d5 Cloud Shell \u6703\u8a71\u3002\u6b64\u64cd\u4f5c\u6703\u5728 Google Cloud \u63a7\u5236\u6aaf\u7684\u5e95\u90e8\u7a97\u683c\u4e2d\u5553\u52d5\u6703\u8a71\u3002\n- \u8a2d\u7f6e\u74b0\u5883\u8b8a\u91cf\u3002```\nexport PROJECT_ID=PROJECT_IDexport REGION=us-central1\n```\u66ff\u63db\u4ee5\u4e0b\u503c\uff1a- \uff1a\u60a8\u7684 Google Cloud [\u9805\u76ee ID](https://cloud.google.com/resource-manager/docs/creating-managing-projects?hl=zh-cn#identifying_projects) \u3002\n- \u8a2d\u7f6e\u9ed8\u8a8d\u74b0\u5883\u8b8a\u91cf\u3002```\ngcloud config set project PROJECT_ID\n```\n- \u514b\u9686\u4ee3\u78bc\u5eab\u3002```\ngit clone https://github.com/GoogleCloudPlatform/kubernetes-engine-samples\n```\n- \u5207\u63db\u5230\u5de5\u4f5c\u76ee\u9304\u3002```\ncd kubernetes-engine-samples/streaming/gke-stateful-kafka\n```\n## \u5275\u5efa\u96c6\u7fa3\u57fa\u790e\u67b6\u69cb\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u904b\u884c Terraform \u8173\u672c\u4f86\u5275\u5efa\u5169\u500b [\u5340\u57df\u7d1a GKE \u96c6\u7fa3](https://cloud.google.com/kubernetes-engine/docs/concepts/regional-clusters?hl=zh-cn) \u3002\u4e3b\u8981\u96c6\u7fa3\u5c07\u90e8\u7f72\u5728 `us-central1` \u4e2d\u3002\n **\u6ce8\u610f** \uff1a\u60a8\u5c07\u5728\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528 [Google Cloud Managed Service for Prometheus](https://cloud.google.com/stackdriver/docs/managed-prometheus?hl=zh-cn) \u548c [Backup for GKE](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/concepts/backup-for-gke?hl=zh-cn) \uff0c\u56e0\u6b64\u5275\u5efa\u548c\u5354\u8abf\u96c6\u7fa3\u6700\u9577\u53ef\u80fd\u9700\u8981 8 \u5206\u9418\u3002\n\u5982\u9700\u5275\u5efa\u96c6\u7fa3\uff0c\u8acb\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n\u5728 Cloud Shell \u4e2d\uff0c\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\nterraform -chdir=terraform/gke-autopilot initterraform -chdir=terraform/gke-autopilot apply -var project_id=$PROJECT_ID\n```\n\u51fa\u73fe\u63d0\u793a\u6642\uff0c\u8acb\u8f38\u5165 `yes` \u3002\n\u5728 Cloud Shell \u4e2d\uff0c\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\nterraform -chdir=terraform/gke-standard initterraform -chdir=terraform/gke-standard apply -var project_id=$PROJECT_ID\n```\n\u51fa\u73fe\u63d0\u793a\u6642\uff0c\u8acb\u8f38\u5165 `yes` \u3002 [Terraform \u914d\u7f6e\u6587\u4ef6](https://github.com/GoogleCloudPlatform/kubernetes-engine-samples/tree/main/streaming/gke-stateful-kafka/terraform) \u6703\u5275\u5efa\u4ee5\u4e0b\u8cc7\u6e90\u4f86\u90e8\u7f72\u57fa\u790e\u67b6\u69cb\uff1a- \u5275\u5efa Artifact Registry \u88fd\u54c1\u5eab\u4ee5\u5b58\u5132 Docker \u6620\u50cf\u3002\n- \u7232\u865b\u64ec\u6a5f\u7684\u7db2\u7d61\u63a5\u53e3\u5275\u5efa VPC \u7db2\u7d61\u548c\u5b50\u7db2\u3002\n- \u5275\u5efa\u5169\u500b GKE \u96c6\u7fa3\u3002\nTerraform \u6703\u5728\u5169\u500b\u5340\u57df\u4e2d\u5275\u5efa\u5c08\u7528\u96c6\u7fa3\uff0c\u4e26\u5553\u7528 Backup for GKE \u4ee5\u7528\u65bc\u707d\u96e3\u6062\u5fa9\u3002\n **\u63d0\u793a** \uff1a\u5982\u9700\u5728\u904b\u884c Terraform \u6642\u8abf\u8a66\u554f\u984c\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u8a2d\u7f6e Terraform \u65e5\u8a8c\u7d1a\u5225\u74b0\u5883\u8b8a\u91cf `TF_LOG` \u4f86\u6355\u7372\u8abf\u8a66\u8f38\u51fa\u3002\u4f8b\u5982\uff1a `export TF_LOG=\"DEBUG\"` \u3002\u6709\u6548\u65e5\u8a8c\u7d1a\u5225\u5982\u4e0b\uff08\u6309\u8a73\u7d30\u7a0b\u5ea6\u964d\u5e8f\u6392\u5217\uff09\uff1a `TRACE` \u3001 `DEBUG` \u3001 `INFO` \u3001 `WARN` \u6216 `ERROR` \u3002\n## \u5728\u96c6\u7fa3\u4e0a\u90e8\u7f72 Kafka\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 Helm \u5716\u8868\u5728 GKE \u4e0a\u90e8\u7f72 Kafka\u3002\u8a72\u64cd\u4f5c\u6703\u5275\u5efa\u4ee5\u4e0b\u8cc7\u6e90\uff1a- Kafka \u548c Zookeeper StatefulSet\u3002\n- [Kafka \u5c0e\u51fa\u5668](https://github.com/danielqsj/kafka_exporter) \u90e8\u7f72\u3002\u5c0e\u51fa\u5668\u6703\u6536\u96c6 Kafka \u6307\u6a19\u4ee5\u4f9b Prometheus \u4f7f\u7528\u3002\n- [Pod \u4e2d\u65b7\u9810\u7b97 (PDB)](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/) \uff0c\u7528\u65bc\u9650\u5236\u81ea\u9858\u4e2d\u65b7\u671f\u9593\u7684\u96e2\u7dda Pod \u6578\u91cf\u3002\n\u5982\u9700\u4f7f\u7528 Helm \u5716\u8868\u90e8\u7f72 Kafka\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u914d\u7f6e Docker \u8a2a\u554f\u6b0a\u9650\u3002```\ngcloud auth configure-docker us-docker.pkg.dev\n```\n- \u4f7f\u7528 Kafka \u548c Zookeeper \u6620\u50cf\u586b\u5145 Artifact Registry\u3002```\n./scripts/gcr.sh bitnami/kafka 3.3.2-debian-11-r0./scripts/gcr.sh bitnami/kafka-exporter 1.6.0-debian-11-r52./scripts/gcr.sh bitnami/jmx-exporter 0.17.2-debian-11-r41./scripts/gcr.sh bitnami/zookeeper 3.8.0-debian-11-r74\n```\n- \u914d\u7f6e\u5c0d\u4e3b\u8981\u96c6\u7fa3\u7684 `kubectl` \u547d\u4ee4\u884c\u8a2a\u554f\u6b0a\u9650\u3002```\ngcloud container clusters get-credentials gke-kafka-us-central1 \\\u00a0 \u00a0 --region=${REGION} \\\u00a0 \u00a0 --project=${PROJECT_ID}\n```\n- \u5275\u5efa\u547d\u540d\u7a7a\u9593\u3002```\nexport NAMESPACE=kafkakubectl create namespace $NAMESPACE\n```\n- \u4f7f\u7528 Helm \u5716\u8868 20.0.6 \u7248\u5b89\u88dd Kafka\u3002```\ncd helm../scripts/chart.sh kafka 20.0.6 && \\rm -rf Chart.lock charts && \\helm dependency update && \\helm -n kafka upgrade --install kafka . \\--set global.imageRegistry=\"us-docker.pkg.dev/$PROJECT_ID/main\"\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff1a```\nNAME: kafka\nLAST DEPLOYED: Thu Feb 16 03:29:39 2023\nNAMESPACE: kafka\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\n```\n- \u9a57\u8b49 Kafka \u526f\u672c\u662f\u5426\u6b63\u5728\u904b\u884c\uff08\u9019\u53ef\u80fd\u9700\u8981\u5e7e\u5206\u9418\u7684\u6642\u9593\uff09\u3002```\nkubectl get all -n kafka\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\n--NAME     READY STATUS RESTARTS  AGE\npod/kafka-0    1/1  Running 2 (3m51s ago) 4m28s\npod/kafka-1    1/1  Running 3 (3m41s ago) 4m28s\npod/kafka-2    1/1  Running 2 (3m57s ago) 4m28s\npod/kafka-zookeeper-0 1/1  Running 0    4m28s\npod/kafka-zookeeper-1 1/1  Running 0    4m28s\npod/kafka-zookeeper-2 1/1  Running 0    4m28s\nNAME         TYPE  CLUSTER-IP  EXTERNAL-IP PORT(S)      AGE\nservice/kafka       ClusterIP 192.168.112.124 <none>  9092/TCP      4m29s\nservice/kafka-app      ClusterIP 192.168.75.57  <none>  9092/TCP      35m\nservice/kafka-app-headless    ClusterIP None    <none>  9092/TCP,9093/TCP   35m\nservice/kafka-app-zookeeper   ClusterIP 192.168.117.102 <none>  2181/TCP,2888/TCP,3888/TCP 35m\nservice/kafka-app-zookeeper-headless ClusterIP None    <none>  2181/TCP,2888/TCP,3888/TCP 35m\nservice/kafka-headless     ClusterIP None    <none>  9092/TCP,9093/TCP   4m29s\nservice/kafka-zookeeper    ClusterIP 192.168.89.249 <none>  2181/TCP,2888/TCP,3888/TCP 4m29s\nservice/kafka-zookeeper-headless  ClusterIP None    <none>  2181/TCP,2888/TCP,3888/TCP 4m29s\nNAME        READY AGE\nstatefulset.apps/kafka    3/3  4m29s\nstatefulset.apps/kafka-zookeeper 3/3  4m29s\n```\n## \u5275\u5efa\u6e2c\u8a66\u6578\u64da\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u6e2c\u8a66 Kafka \u61c9\u7528\u4e26\u751f\u6210\u6d88\u606f\u3002- \u5275\u5efa\u8207 Kafka \u61c9\u7528\u9032\u884c\u4ea4\u4e92\u7684\u4f7f\u7528\u65b9\u5ba2\u6236\u7aef Pod\u3002```\nkubectl run kafka-client -n kafka --rm -ti \\\u00a0 \u00a0 --image us-docker.pkg.dev/$PROJECT_ID/main/bitnami/kafka:3.3.2-debian-11-r0 -- bash\n```\n- \u5275\u5efa\u4e00\u500b\u540d\u7232 `topic1` \u7684\u4e3b\u984c\uff0c\u5176\u5305\u542b\u4e09\u500b\u5206\u5340\u4e14\u8907\u88fd\u56e0\u5b50\u7232 3\u3002```\nkafka-topics.sh \\\u00a0 \u00a0 --create \\\u00a0 \u00a0 --topic topic1 \\\u00a0 \u00a0 --partitions 3 \u00a0\\\u00a0 \u00a0 --replication-factor 3 \\\u00a0 \u00a0 --bootstrap-server kafka-headless.kafka.svc.cluster.local:9092\n```\n- \u9a57\u8b49\u4e3b\u984c\u5206\u5340\u662f\u5426\u5df2\u5728\u6240\u6709\u4e09\u500b\u4ee3\u7406\u4e2d\u8907\u88fd\u3002```\nkafka-topics.sh \\\u00a0 \u00a0 --describe \\\u00a0 \u00a0 --topic topic1 \\\u00a0 \u00a0 --bootstrap-server kafka-headless.kafka.svc.cluster.local:9092\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nTopic: topic1  TopicId: 1ntc4WiFS4-AUNlpr9hCmg PartitionCount: 3  ReplicationFactor: 3 Configs: flush.ms=1000,segment.bytes=1073741824,flush.messages=10000,max.message.bytes=1000012,retention.bytes=1073741824\n  Topic: topic1 Partition: 0 Leader: 2  Replicas: 2,0,1 Isr: 2,0,1\n  Topic: topic1 Partition: 1 Leader: 1  Replicas: 1,2,0 Isr: 1,2,0\n  Topic: topic1 Partition: 2 Leader: 0  Replicas: 0,1,2 Isr: 0,1,2\n```\u5728\u793a\u4f8b\u8f38\u51fa\u4e2d\uff0c\u8acb\u6ce8\u610f `topic1` \u6709\u4e09\u500b\u5206\u5340\uff0c\u6bcf\u500b\u5206\u5340\u90fd\u6709\u4e0d\u540c\u7684\u4e3b\u8981\u4ee3\u7406\u548c\u526f\u672c\u96c6\u3002\u9019\u662f\u56e0\u7232 Kafka \u4f7f\u7528\u5206\u5340\u5c07\u6578\u64da\u5206\u4f48\u5230\u591a\u500b\u4ee3\u7406\uff0c\u5f9e\u800c\u5be6\u73fe\u66f4\u9ad8\u7684\u53ef\u4f38\u7e2e\u6027\u548c\u5bb9\u932f\u80fd\u529b\u3002\u8907\u88fd\u56e0\u5b50\u7232 3 \u53ef\u78ba\u4fdd\u6bcf\u500b\u5206\u5340\u90fd\u6709\u4e09\u500b\u526f\u672c\uff0c\u56e0\u6b64\uff0c\u5373\u4f7f\u4e00\u500b\u6216\u5169\u500b\u4ee3\u7406\u767c\u751f\u6545\u969c\uff0c\u6578\u64da\u4e5f\u4ecd\u7136\u53ef\u7528\u3002\n- \u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u5c07\u6d88\u606f\u7de8\u865f\u6279\u91cf\u751f\u6210\u5230 `topic1` \u4e2d\u3002```\nALLOW_PLAINTEXT_LISTENER=yesfor x in $(seq 0 200); do\u00a0 echo \"$x: Message number $x\"done | kafka-console-producer.sh \\\u00a0 \u00a0 --topic topic1 \\\u00a0 \u00a0 --bootstrap-server kafka-headless.kafka.svc.cluster.local:9092 \\\u00a0 \u00a0 --property parse.key=true \\\u00a0 \u00a0 --property key.separator=\":\"\n```\n- \u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u5728\u6240\u6709\u5206\u5340\u4e2d\u4f7f\u7528 `topic1` \u3002```\nkafka-console-consumer.sh \\\u00a0 \u00a0 --bootstrap-server kafka.kafka.svc.cluster.local:9092 \\\u00a0 \u00a0 --topic topic1 \\\u00a0 \u00a0 --property print.key=true \\\u00a0 \u00a0 --property key.separator=\" : \" \\\u00a0 \u00a0 --from-beginning;\n```\u6309 `CTRL+C` \u4ee5\u505c\u6b62\u4f7f\u7528\u65b9\u9032\u7a0b\u3002\n## \u5c0d Kafka \u9032\u884c\u57fa\u6e96\u5316\u5206\u6790\u5982\u9700\u6e96\u78ba\u7232\u7528\u4f8b\u5efa\u6a21\uff0c\u60a8\u53ef\u4ee5\u5c0d\u96c6\u7fa3\u4e0a\u7684\u9810\u671f\u8ca0\u8f09\u904b\u884c\u6a21\u64ec\u3002\u5982\u9700\u6e2c\u8a66\u6027\u80fd\uff0c\u60a8\u9700\u8981\u4f7f\u7528 Kafka \u8edf\u4ef6\u5305\u4e2d\u5305\u542b\u7684\u5de5\u5177\uff0c\u5373 `bin` \u6587\u4ef6\u593e\u4e2d\u7684 `kafka-producer-perf-test.sh` \u548c `kafka-consumer-perf-test.sh` \u8173\u672c\u3002- \u5275\u5efa\u4e00\u500b\u7528\u65bc\u57fa\u6e96\u5316\u5206\u6790\u7684\u4e3b\u984c\u3002```\nkafka-topics.sh \\\u00a0 --create \\\u00a0 --topic topic-benchmark \\\u00a0 --partitions 3 \u00a0\\\u00a0 --replication-factor 3 \\\u00a0 --bootstrap-server kafka-headless.kafka.svc.cluster.local:9092\n```\n- \u5728 Kafka \u96c6\u7fa3\u4e0a\u5275\u5efa\u8ca0\u8f09\u3002```\nKAFKA_HEAP_OPTS=\"-Xms4g -Xmx4g\" kafka-producer-perf-test.sh \\\u00a0 \u00a0 --topic topic-benchmark \\\u00a0 \u00a0 --num-records 10000000 \\\u00a0 \u00a0 --throughput -1 \\\u00a0 \u00a0 --producer-props bootstrap.servers=kafka.kafka.svc.cluster.local:9092 \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 batch.size=16384 \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 acks=all \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 linger.ms=500 \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 compression.type=none \\\u00a0 \u00a0 --record-size 100 \\\u00a0 \u00a0 --print-metrics\n```\u63d0\u4f9b\u65b9\u6703\u7232 `topic-benchmark` \u751f\u6210 1000 \u842c\u689d\u8a18\u9304\u3002\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\n623821 records sent, 124316.7 records/sec (11.86 MB/sec), 1232.7 ms avg latency, 1787.0 ms max latency.\n1235948 records sent, 247140.2 records/sec (23.57 MB/sec), 1253.0 ms avg latency, 1587.0 ms max latency.\n1838898 records sent, 367779.6 records/sec (35.07 MB/sec), 793.6 ms avg latency, 1185.0 ms max latency.\n2319456 records sent, 463242.7 records/sec (44.18 MB/sec), 54.0 ms avg latency, 321.0 ms max latency.\n```\u6240\u6709\u8a18\u9304\u90fd\u767c\u9001\u5f8c\uff0c\u60a8\u61c9\u8a72\u6703\u5728\u8f38\u51fa\u4e2d\u770b\u5230\u5176\u4ed6\u6307\u6a19\uff0c\u5982\u4e0b\u6240\u793a\uff1a```\nproducer-topic-metrics:record-send-rate:{client-id=perf-producer-client, topic=topic-benchmark}  : 173316.233\nproducer-topic-metrics:record-send-total:{client-id=perf-producer-client, topic=topic-benchmark} : 10000000.000\n```\u5982\u9700\u9000\u51fa\u76e3\u63a7\uff0c\u8acb\u6309 `CTRL + C` \u3002\n- \u9000\u51fa Pod shell\u3002```\nexit\n```\n## \u7ba1\u7406\u5347\u7d1aKafka \u548c Kubernetes \u7684\u7248\u672c\u66f4\u65b0\u6703\u5b9a\u671f\u767c\u4f48\u3002\u8acb\u9075\u5faa [\u904b\u71df\u6700\u4f73\u5be6\u8e10](https://cloud.google.com/kubernetes-engine/docs/best-practices/upgrading-clusters?hl=zh-cn) \u4f86\u5b9a\u671f\u66f4\u65b0\u60a8\u7684\u8edf\u4ef6\u74b0\u5883\u3002\n **\u6ce8\u610f** \uff1a\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0cGKE \u6703\u7232\u60a8\u7ba1\u7406\u96c6\u7fa3\u548c\u7bc0\u9ede\u6c60\u5347\u7d1a\u3002\u6839\u64da\u60a8\u9078\u64c7\u7684\u767c\u4f48\u6e20\u9053\uff0cAutopilot \u96c6\u7fa3\u6703 [\u81ea\u52d5\u5347\u7d1a](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-upgrades-autopilot?hl=zh-cn) \u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Standard \u96c6\u7fa3\u4e26\u4e14\u5df2\u505c\u7528\u81ea\u52d5\u5347\u7d1a\uff0c\u8acb\u53c3\u95b1 [\u624b\u52d5\u5347\u7d1a\u96c6\u7fa3\u6216\u7bc0\u9ede\u6c60](https://cloud.google.com/kubernetes-engine/docs/how-to/upgrading-a-cluster?hl=zh-cn) \u3002\n### \u898f\u5283 Kafka \u4e8c\u9032\u5236\u6587\u4ef6\u5347\u7d1a\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528 Helm \u66f4\u65b0 Kafka \u6620\u50cf\uff0c\u4e26\u9a57\u8b49\u4e3b\u984c\u662f\u5426\u4ecd\u7136\u53ef\u7528\u3002\n\u5982\u9700\u901a\u904e [\u5728\u96c6\u7fa3\u4e0a\u90e8\u7f72 Kafka](#deploy-kafka) \u4e2d\u4f7f\u7528\u7684 Helm \u5716\u8868\u5f9e\u65e9\u671f Kafka \u7248\u672c\u9032\u884c\u5347\u7d1a\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u4f7f\u7528\u4ee5\u4e0b\u6620\u50cf\u586b\u5145 Artifact Registry\uff1a```\n../scripts/gcr.sh bitnami/kafka 3.4.0-debian-11-r2../scripts/gcr.sh bitnami/kafka-exporter 1.6.0-debian-11-r61../scripts/gcr.sh bitnami/jmx-exporter 0.17.2-debian-11-r49../scripts/gcr.sh bitnami/zookeeper 3.8.1-debian-11-r0\n```\n- \u57f7\u884c\u4ee5\u4e0b\u6b65\u9a5f\u4ee5\u4f7f\u7528\u5347\u7d1a\u5f8c\u7684 Kafka \u548c ZooKeeper \u6620\u50cf\u90e8\u7f72 Helm \u5716\u8868\u3002\u5982\u9700\u77ad\u89e3\u7279\u5b9a\u65bc\u7248\u672c\u7684\u6307\u5c0e\u4fe1\u606f\uff0c\u8acb\u53c3\u95b1 [\u6709\u95dc\u7248\u672c\u5347\u7d1a\u7684 Kafka \u8aaa\u660e](https://kafka.apache.org/documentation/#upgrade) \u3002- \u66f4\u65b0`Chart.yaml`\u4f9d\u8cf4\u9805\u7248\u672c\uff1a\n```\n../scripts/chart.sh kafka 20.1.0\n```- \u4f7f\u7528\u65b0\u7684 Kafka \u548c Zookeeper \u6620\u50cf\u90e8\u7f72 Helm \u5716\u8868\uff0c\u5982\u4ee5\u4e0b\u793a\u4f8b\u6240\u793a\uff1a```\nrm -rf Chart.lock charts && \\helm dependency update && \\helm -n kafka upgrade --install kafka ./ \\\u00a0 \u00a0 \u00a0 --set global.imageRegistry=\"$REGION-docker.pkg.dev/$PROJECT_ID/main\"\n```\n\u76e3\u63a7 Kafka Pod \u662f\u5426\u5347\u7d1a\uff1a```\nkubectl get pod -l app.kubernetes.io/component=kafka -n kafka --watch\n```\u5982\u9700\u9000\u51fa\u76e3\u63a7\uff0c\u8acb\u6309 `CTRL + C` \u3002\n- \u4f7f\u7528\u5ba2\u6236\u7aef Pod \u9023\u63a5\u5230 Kafka \u96c6\u7fa3\u3002```\nkubectl run kafka-client -n kafka --rm -ti \\\u00a0 --image us-docker.pkg.dev/$PROJECT_ID/main/bitnami/kafka:3.4.0-debian-11-r2 -- bash\n```\n- \u9a57\u8b49\u60a8\u662f\u5426\u53ef\u4ee5\u8a2a\u554f\u4f86\u81ea `topic1` \u7684\u6d88\u606f\u3002```\nkafka-console-consumer.sh \\\u00a0 --topic topic1 \\\u00a0 --from-beginning \\\u00a0 --bootstrap-server kafka-headless.kafka.svc.cluster.local:9092\n```\u8f38\u51fa\u61c9\u986f\u793a\u4e0a\u4e00\u6b65\u4e2d\u751f\u6210\u7684\u6d88\u606f\u3002\u6309 `CTRL+C` \u4ee5\u9000\u51fa\u9032\u7a0b\u3002\n- \u9000\u51fa\u5ba2\u6236\u7aef Pod\u3002```\nexit\n```\n## \u7232\u707d\u96e3\u6062\u5fa9\u505a\u597d\u6e96\u5099\u7232\u78ba\u4fdd\u751f\u7522\u5de5\u4f5c\u8ca0\u8f09\u5728\u767c\u751f\u670d\u52d9\u4e2d\u65b7\u4e8b\u4ef6\u6642\u4ecd\u7136\u53ef\u7528\uff0c\u60a8\u61c9\u8a72\u6e96\u5099\u707d\u96e3\u6062\u5fa9 (DR) \u898f\u5283\u3002\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u707d\u96e3\u6062\u5fa9\u898f\u5283\uff0c\u8acb\u53c3\u95b1 [\u707d\u96e3\u6062\u5fa9\u898f\u5283\u6307\u5357](https://cloud.google.com/architecture/dr-scenarios-planning-guide?hl=zh-cn) \u3002\n\u5982\u9700\u5728 GKE \u96c6\u7fa3\u4e0a\u5099\u4efd\u548c\u6062\u5fa9\u5de5\u4f5c\u8ca0\u8f09\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 [Backup for GKE](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/concepts/backup-for-gke?hl=zh-cn) \u3002\n **\u63d0\u793a** \uff1a\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Autopilot \u96c6\u7fa3\uff0c\u8acb\u6aa2\u67e5\u60a8\u7684\u57fa\u790e\u67b6\u69cb\u662f\u5426\u7b26\u5408\u76f8\u61c9 [Backup for GKE \u9650\u5236](https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/concepts/about-autopilot?hl=zh-cn) \u3002### Kafka \u5099\u4efd\u548c\u6062\u5fa9\u5834\u666f\u793a\u4f8b\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u5f9e `gke-kafka-us-central1` \u5099\u4efd\u96c6\u7fa3\uff0c\u4e26\u5c07\u5099\u4efd\u6062\u5fa9\u5230 `gke-kafka-us-west1` \u3002\u60a8\u5c07\u4f7f\u7528 `ProtectedApplication` \u81ea\u5b9a\u7fa9\u8cc7\u6e90\u5728\u61c9\u7528\u7bc4\u570d\u5167\u57f7\u884c\u5099\u4efd\u548c\u6062\u5fa9\u64cd\u4f5c\u3002\n\u4e0b\u5716\u5c55\u793a\u4e86\u707d\u96e3\u6062\u5fa9\u89e3\u6c7a\u65b9\u6848\u7684\u7d44\u4ef6\uff0c\u4ee5\u53ca\u76f8\u4e92\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u5982\u9700\u6e96\u5099\u5099\u4efd\u548c\u6062\u5fa9 Kafka \u96c6\u7fa3\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\uff1a- \u8a2d\u7f6e\u74b0\u5883\u8b8a\u91cf\u3002```\nexport BACKUP_PLAN_NAME=kafka-protected-appexport BACKUP_NAME=protected-app-backup-1export RESTORE_PLAN_NAME=kafka-protected-appexport RESTORE_NAME=protected-app-restore-1export REGION=us-central1export DR_REGION=us-west1export CLUSTER_NAME=gke-kafka-$REGIONexport DR_CLUSTER_NAME=gke-kafka-$DR_REGION\n```\n- \u9a57\u8b49\u96c6\u7fa3\u662f\u5426\u8655\u65bc `RUNNING` \u72c0\u614b\u3002```\ngcloud container clusters describe $CLUSTER_NAME --region us-central1 --format='value(status)'\n``` **\u6ce8\u610f** \uff1a\u96c6\u7fa3\u5fc5\u9808\u8655\u65bc `RUNNING` \u72c0\u614b\uff0c\u624d\u80fd\u5275\u5efa\u5099\u4efd\u3002\n- \u5275\u5efa\u5099\u4efd\u65b9\u6848\u3002```\ngcloud beta container backup-restore backup-plans create $BACKUP_PLAN_NAME \\\u00a0 \u00a0 --project=$PROJECT_ID \\\u00a0 \u00a0 --location=$DR_REGION \\\u00a0 \u00a0 --cluster=projects/$PROJECT_ID/locations/$REGION/clusters/$CLUSTER_NAME \\\u00a0 \u00a0 --selected-applications=kafka/kafka,kafka/zookeeper \\\u00a0 \u00a0 --include-secrets \\\u00a0 \u00a0 --include-volume-data \\\u00a0 \u00a0 --cron-schedule=\"0 3 * * *\" \\\u00a0 \u00a0 --backup-retain-days=7 \\\u00a0 \u00a0 --backup-delete-lock-days=0\n```\n- \u624b\u52d5\u5275\u5efa\u5099\u4efd\u3002\u96d6\u7136\u8a08\u5283\u5099\u4efd\u901a\u5e38\u53d7\u5099\u4efd\u65b9\u6848\u4e2d\u7684 Cron \u6642\u9593\u8868\u7d04\u675f\uff0c\u4f46\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u77ad\u5982\u4f55\u5553\u52d5\u4e00\u6b21\u6027\u5099\u4efd\u64cd\u4f5c\u3002```\ngcloud beta container backup-restore backups create $BACKUP_NAME \\\u00a0 \u00a0 --project=$PROJECT_ID \\\u00a0 \u00a0 --location=$DR_REGION \\\u00a0 \u00a0 --backup-plan=$BACKUP_PLAN_NAME \\\u00a0 \u00a0 --wait-for-completion\n```\n- \u5275\u5efa\u6062\u5fa9\u65b9\u6848\u3002```\ngcloud beta container backup-restore restore-plans create $RESTORE_PLAN_NAME \\\u00a0 \u00a0 --project=$PROJECT_ID \\\u00a0 \u00a0 --location=$DR_REGION \\\u00a0 \u00a0 --backup-plan=projects/$PROJECT_ID/locations/$DR_REGION/backupPlans/$BACKUP_PLAN_NAME \\\u00a0 \u00a0 --cluster=projects/$PROJECT_ID/locations/$DR_REGION/clusters/$DR_CLUSTER_NAME \\\u00a0 \u00a0 --cluster-resource-conflict-policy=use-existing-version \\\u00a0 \u00a0 --namespaced-resource-restore-mode=delete-and-restore \\\u00a0 \u00a0 --volume-data-restore-policy=restore-volume-data-from-backup \\\u00a0 \u00a0 --selected-applications=kafka/kafka,kafka/zookeeper \\\u00a0 \u00a0 --cluster-resource-scope-selected-group-kinds=\"storage.k8s.io/StorageClass\"\n```\n- \u901a\u904e\u5099\u4efd\u624b\u52d5\u9032\u884c\u6062\u5fa9\u3002```\ngcloud beta container backup-restore restores create $RESTORE_NAME \\\u00a0 \u00a0 --project=$PROJECT_ID \\\u00a0 \u00a0 --location=$DR_REGION \\\u00a0 \u00a0 --restore-plan=$RESTORE_PLAN_NAME \\\u00a0 \u00a0 --backup=projects/$PROJECT_ID/locations/$DR_REGION/backupPlans/$BACKUP_PLAN_NAME/backups/$BACKUP_NAME\n```\n- \u76e3\u63a7\u6062\u5fa9\u7684\u61c9\u7528\u662f\u5426\u51fa\u73fe\u5728\u5099\u4efd\u96c6\u7fa3\u4e2d\u3002\u6240\u6709 Pod \u53ef\u80fd\u9700\u8981\u5e7e\u5206\u9418\u6642\u9593\u624d\u80fd\u904b\u884c\u4e26\u6e96\u5099\u5c31\u7dd2\u3002```\ngcloud container clusters get-credentials gke-kafka-us-west1 \\\u00a0 \u00a0 --region us-west1kubectl get pod -n kafka --watch\n```\u6309 `CTRL+C` \u4ee5\u5728\u6240\u6709 Pod \u5df2\u5553\u52d5\u4e26\u904b\u884c\u6642\u9000\u51fa\u76e3\u63a7\u3002\n- \u9a57\u8b49\u4f7f\u7528\u65b9\u662f\u5426\u53ef\u4ee5\u63d0\u53d6\u4e4b\u524d\u7684\u4e3b\u984c\u3002```\nkubectl run kafka-client -n kafka --rm -ti \\\u00a0 \u00a0 --image us-docker.pkg.dev/$PROJECT_ID/main/bitnami/kafka:3.4.0 -- bash\n``````\nkafka-console-consumer.sh \\\u00a0 \u00a0 --bootstrap-server kafka.kafka.svc.cluster.local:9092 \\\u00a0 \u00a0 --topic topic1 \\\u00a0 \u00a0 --property print.key=true \\\u00a0 \u00a0 --property key.separator=\" : \" \\\u00a0 \u00a0 --from-beginning;\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\n192 : Message number 192\n193 : Message number 193\n197 : Message number 197\n200 : Message number 200\nProcessed a total of 201 messages\n```\u6309 `CTRL+C` \u4ee5\u9000\u51fa\u9032\u7a0b\u3002\n- \u9000\u51fa Pod\u3002```\nexit\n```\n## \u6a21\u64ec Kafka \u670d\u52d9\u4e2d\u65b7\u5728\u672c\u90e8\u5206\u4e2d\uff0c\u60a8\u5c07\u901a\u904e\u66ff\u63db\u8a17\u7ba1\u4ee3\u7406\u7684 Kubernetes \u7bc0\u9ede\u4f86\u6a21\u64ec\u7bc0\u9ede\u6545\u969c\u3002\u672c\u90e8\u5206\u50c5\u9069\u7528\u65bc Standard\u3002Autopilot \u6703\u7232\u60a8\u7ba1\u7406\u7bc0\u9ede\uff0c\u56e0\u6b64\u7121\u6cd5\u6a21\u64ec\u7bc0\u9ede\u6545\u969c\u3002- \u5275\u5efa\u5ba2\u6236\u7aef Pod \u4ee5\u9023\u63a5\u5230 Kafka \u61c9\u7528\u3002```\nkubectl run kafka-client -n kafka --restart='Never' -it \\--image us-docker.pkg.dev/$PROJECT_ID/main/bitnami/kafka:3.4.0 -- bash\n```\n- \u5275\u5efa\u4e3b\u984c `topic-failover-test` \u4e26\u751f\u6210\u6e2c\u8a66\u6d41\u91cf\u3002```\nkafka-topics.sh \\\u00a0 --create \\\u00a0 --topic topic-failover-test \\\u00a0 --partitions 1 \u00a0\\\u00a0 --replication-factor 3 \u00a0\\\u00a0 --bootstrap-server kafka-headless.kafka.svc.cluster.local:9092\n```\n- \u78ba\u5b9a\u54ea\u500b\u4ee3\u7406\u662f `topic-failover-test` \u4e3b\u984c\u7684\u4e3b\u8981\u4ee3\u7406\u3002```\nkafka-topics.sh --describe \\\u00a0 --topic topic-failover-test \\\u00a0 --bootstrap-server kafka-headless.kafka.svc.cluster.local:9092\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nTopic: topic-failover-test  Partition: 0 Leader: 1  Replicas: 1,0,2 Isr: 1,0,2\n```\u5728\u4e0a\u9762\u7684\u8f38\u51fa\u4e2d\uff0c `Leader: 1` \u8868\u793a `topic-failover-test` \u7684\u4e3b\u8981\u4ee3\u7406\u662f\u4ee3\u7406 1\u3002\u6b64\u4ee3\u7406\u5c0d\u61c9\u65bc Pod `kafka-1` \u3002\n- \u6253\u958b\u65b0\u7d42\u7aef\u4e26\u9023\u63a5\u5230\u540c\u4e00\u96c6\u7fa3\u3002```\ngcloud container clusters get-credentials gke-kafka-us-west1 --region us-west1 --project PROJECT_ID\n```\n- \u67e5\u627e Pod `kafka-1` \u5728\u54ea\u500b\u7bc0\u9ede\u4e0a\u904b\u884c\u3002```\nkubectl get pod -n kafka kafka-1 -o wide\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nNAME  READY STATUS RESTARTS  AGE IP    NODE            NOMINATED NODE READINESS GATES\nkafka-1 2/2  Running 1 (35m ago) 36m 192.168.132.4 gke-gke-kafka-us-west1-pool-system-a0d0d395-nx72 <none>   <none>\n```\u5728\u4e0a\u9762\u7684\u8f38\u51fa\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230 Pod `kafka-1` \u5728\u7bc0\u9ede `gke-gke-kafka-us-west1-pool-system-a0d0d395-nx72` \u4e0a\u904b\u884c\u3002\n- \u6392\u7a7a\u8a72\u7bc0\u9ede\u4ee5\u9010\u51fa Pod\u3002```\nkubectl drain NODE \\\u00a0 --delete-emptydir-data \\\u00a0 --force \\\u00a0 --ignore-daemonsets\n```\u5c07 \u66ff\u63db\u7232 Pod kafka-1 \u5728\u5176\u4e0a\u904b\u884c\u7684\u7bc0\u9ede\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u8a72\u7bc0\u9ede\u7232 `gke-gke-kafka-us-west1-pool-system-a0d0d395-nx72` \u3002\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nnode/gke-gke-kafka-us-west1-pool-system-a0d0d395-nx72 cordoned\nWarning: ignoring DaemonSet-managed Pods: gmp-system/collector-gjzsd, kube-system/calico-node-t28bj, kube-system/fluentbit-gke-lxpft, kube-system/gke-metadata-server-kxw78, kube-system/ip-masq-agent-kv2sq, kube-system/netd-h446k, kube-system/pdcsi-node-ql578\nevicting pod kafka/kafka-1\nevicting pod kube-system/kube-dns-7d48cb57b-j4d8f\nevicting pod kube-system/calico-typha-56995c8d85-5clph\npod/calico-typha-56995c8d85-5clph evicted\npod/kafka-1 evicted\npod/kube-dns-7d48cb57b-j4d8f evicted\nnode/gke-gke-kafka-us-west1-pool-system-a0d0d395-nx72 drained\n```\n- \u67e5\u627e Pod `kafka-1` \u5728\u54ea\u500b\u7bc0\u9ede\u4e0a\u904b\u884c\u3002```\nkubectl get pod -n kafka kafka-1 -o wide\n```\u8f38\u51fa\u61c9\u985e\u4f3c\u5982\u4e0b\u6240\u793a\uff1a```\nNAME  READY STATUS RESTARTS AGE  IP    NODE            NOMINATED NODE READINESS GATES\nkafka-1 2/2  Running 0   2m49s 192.168.128.8 gke-gke-kafka-us-west1-pool-kafka-700d8e8d-05f7 <none>   <none>\n```\u5f9e\u4e0a\u9762\u7684\u8f38\u51fa\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u61c9\u7528\u5728\u65b0\u7bc0\u9ede\u4e0a\u904b\u884c\u3002\n- \u5728\u9023\u63a5\u5230 `kafka-client` Pod \u7684\u7d42\u7aef\u4e2d\uff0c\u78ba\u5b9a\u54ea\u500b\u4ee3\u7406\u662f `topic-failover-test` \u7684\u4e3b\u8981\u4ee3\u7406\u3002```\nkafka-topics.sh --describe \\\u00a0 --topic topic-failover-test \\\u00a0 --bootstrap-server kafka-headless.kafka.svc.cluster.local:9092\n```\u8f38\u51fa\u61c9\u985e\u4f3c\u5982\u4e0b\u6240\u793a\uff1a```\nTopic: topic-failover-test  TopicId: bemKyqmERAuKZC5ymFwsWg PartitionCount: 1  ReplicationFactor: 3 Configs: flush.ms=1000,segment.bytes=1073741824,flush.messages=10000,max.message.bytes=1000012,retention.bytes=1073741824\n Topic: topic-failover-test  Partition: 0 Leader: 1  Replicas: 1,0,2 Isr: 0,2,1\n```\u5728\u793a\u4f8b\u8f38\u51fa\u4e2d\uff0c\u4e3b\u8981\u4ee3\u7406\u4ecd\u7232 1\u3002\u4e0d\u904e\uff0c\u5b83\u73fe\u5728\u5728\u65b0\u7bc0\u9ede\u4e0a\u904b\u884c\u3002\n### \u6e2c\u8a66 Kafka \u4e3b\u8981\u4ee3\u7406\u6545\u969c\n- \u5728 Cloud Shell \u4e2d\uff0c\u9023\u63a5\u5230 Kafka \u5ba2\u6236\u7aef\uff0c\u7136\u5f8c\u4f7f\u7528 `describe` \u67e5\u770b\u7232 `topic1` \u4e2d\u7684\u6bcf\u500b\u5206\u5340\u9078\u8209\u7684\u4e3b\u8981\u4ee3\u7406\u3002```\nkafka-topics.sh --describe \\\u00a0 --topic topic1 \\\u00a0 --bootstrap-server kafka-headless.kafka.svc.cluster.local:9092\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nTopic: topic1 TopicId: B3Jr_5t2SPq7F1jVHu4r0g PartitionCount: 3  ReplicationFactor: 3 Configs: flush.ms=1000,segment.bytes=1073741824,flush.messages=10000,max.message.bytes=1000012,retention.bytes=1073741824\n Topic: topic1 Partition: 0 Leader: 0  Replicas: 0,2,1 Isr: 0,2,1\n Topic: topic1 Partition: 1 Leader: 0  Replicas: 2,1,0 Isr: 0,2,1\n Topic: topic1 Partition: 2 Leader: 0  Replicas: 1,0,2 Isr: 0,2,1\n```\n- \u5728\u672a\u9023\u63a5\u5230 Kafka \u5ba2\u6236\u7aef\u7684 Cloud Shell \u4e2d\uff0c\u522a\u9664 `kafka-0` \u4e3b\u8981\u4ee3\u7406\u4ee5\u5f37\u5236\u9078\u8209\u65b0\u7684\u4e3b\u8981\u4ee3\u7406\u3002\u60a8\u61c9\u8a72\u522a\u9664\u6620\u5c04\u5230\u4e0a\u8ff0\u8f38\u51fa\u4e2d\u7684\u4e00\u500b\u4e3b\u8981\u4ee3\u7406\u7684\u7d22\u5f15\u3002```\nkubectl delete pod -n kafka kafka-0 --force\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\npod \"kafka-0\" force deleted\n```\n- \u5728\u9023\u63a5\u5230 Kafka \u5ba2\u6236\u7aef\u7684 Cloud Shell \u4e2d\uff0c\u4f7f\u7528 `describe` \u67e5\u770b\u9078\u8209\u7684\u4e3b\u8981\u4ee3\u7406\u3002```\nkafka-topics.sh --describe \\\u00a0 --topic topic1 \\\u00a0 --bootstrap-server kafka-headless.kafka.svc.cluster.local:9092\n```\u8f38\u51fa\u5167\u5bb9\u985e\u4f3c\u5982\u4e0b\uff1a```\nTopic: topic1 TopicId: B3Jr_5t2SPq7F1jVHu4r0g PartitionCount: 3  ReplicationFactor: 3 Configs: flush.ms=1000,segment.bytes=1073741824,flush.messages=10000,max.message.bytes=1000012,retention.bytes=1073741824\n Topic: topic1 Partition: 0 Leader: 2  Replicas: 0,1,2 Isr: 2,0,1\n Topic: topic1 Partition: 1 Leader: 2  Replicas: 2,0,1 Isr: 2,0,1\n Topic: topic1 Partition: 2 Leader: 2  Replicas: 1,2,0 Isr: 2,0,1\n```\u5728\u8f38\u51fa\u4e2d\uff0c\u5982\u679c\u6bcf\u500b\u5206\u5340\u7684\u65b0\u4e3b\u8981\u4ee3\u7406\u5df2\u5206\u914d\u7d66\u4e2d\u65b7\u7684\u4e3b\u8981\u4ee3\u7406 ( `kafka-0` )\uff0c\u5247\u65b0\u4e3b\u8981\u4ee3\u7406\u6703\u767c\u751f\u66f4\u6539\u3002\u9019\u8868\u793a\u522a\u9664\u4e26\u91cd\u65b0\u5275\u5efa Pod \u6642\uff0c\u539f\u59cb\u4e3b\u8981\u4ee3\u7406\u5df2\u88ab\u66ff\u63db\u3002\n## \u6e05\u7406\u7232\u907f\u514d\u56e0\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u8cc7\u6e90\u5c0e\u81f4\u60a8\u7684 Google Cloud \u8cec\u865f\u7522\u751f\u8cbb\u7528\uff0c\u8acb\u522a\u9664\u5305\u542b\u9019\u4e9b\u8cc7\u6e90\u7684\u9805\u76ee\uff0c\u6216\u8005\u4fdd\u7559\u9805\u76ee\u4f46\u522a\u9664\u5404\u500b\u8cc7\u6e90\u3002\n### \u522a\u9664\u9805\u76ee\u7232\u907f\u514d\u652f\u4ed8\u8cbb\u7528\uff0c\u6700\u7c21\u55ae\u7684\u65b9\u6cd5\u662f\u522a\u9664\u60a8\u7232\u672c\u6559\u7a0b\u5275\u5efa\u7684\u9805\u76ee\u3002Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them **\u8b66\u544a** \uff1a\u522a\u9664\u9805\u76ee\u6703\u7522\u751f\u4ee5\u4e0b\u5f71\u97ff- **\u9805\u76ee\u4e2d\u7684\u6240\u6709\u5167\u5bb9\u90fd\u6703\u88ab\u522a\u9664\u3002** \u5982\u679c\u60a8\u5c07\u73fe\u6709\u9805\u76ee\u7528\u65bc\u672c\u6587\u6a94\u4e2d\u7684\u4efb\u52d9\uff0c\u5247\u522a\u9664\u8a72\u9805\u76ee\u5f8c\uff0c\u9084\u5c07\u522a\u9664\u60a8\u5df2\u5728\u8a72\u9805\u76ee\u4e2d\u5b8c\u6210\u7684\u4efb\u4f55\u5176\u4ed6\u5de5\u4f5c\u3002\n- **\u81ea\u5b9a\u7fa9\u9805\u76ee ID \u4e1f\u5931\u3002** \u5275\u5efa\u6b64\u9805\u76ee\u6642\uff0c\u60a8\u53ef\u80fd\u5275\u5efa\u4e86\u8981\u5728\u5c07\u4f86\u4f7f\u7528\u7684\u81ea\u5b9a\u7fa9\u9805\u76ee ID\u3002\u8981\u4fdd\u7559\u4f7f\u7528\u8a72\u9805\u76ee ID \u7684\u7db2\u5740\uff08\u4f8b\u5982`appspot.com`\u7db2\u5740\uff09\uff0c\u8acb\u522a\u9664\u9805\u76ee\u5167\u7684\u6240\u9078\u8cc7\u6e90\uff0c\u800c\u4e0d\u662f\u522a\u9664\u6574\u500b\u9805\u76ee\u3002\n\u5982\u679c\u60a8\u6253\u7b97\u63a2\u7d22\u591a\u500b\u67b6\u69cb\u3001\u6559\u7a0b\u6216\u5feb\u901f\u5165\u9580\uff0c\u5247\u91cd\u8907\u4f7f\u7528\u9805\u76ee\u53ef\u4ee5\u5e6b\u52a9\u60a8\u907f\u514d\u8d85\u51fa\u9805\u76ee\u914d\u984d\u9650\u5236\u3002\n\u522a\u9664 Google Cloud \u9805\u76ee\uff1a\n```\ngcloud projects delete PROJECT_ID\n```## \u5f8c\u7e8c\u6b65\u9a5f\n- \u5982\u9700\u77ad\u89e3\u5168\u4ee3\u7ba1\u5f0f\u53ef\u4f38\u7e2e\u7684\u6d88\u606f\u50b3\u905e\u670d\u52d9\uff0c\u8acb\u53c3\u95b1 [\u5f9e Kafka \u9077\u79fb\u5230 Pub/Sub](https://cloud.google.com/pubsub/docs/migrating-from-kafka-to-pubsub?hl=zh-cn) \u3002", "guide": "Google Kubernetes Engine (GKE)"}