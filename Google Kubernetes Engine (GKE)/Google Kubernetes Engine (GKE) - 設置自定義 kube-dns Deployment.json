{"title": "Google Kubernetes Engine (GKE) - \u8a2d\u7f6e\u81ea\u5b9a\u7fa9 kube-dns Deployment", "url": "https://cloud.google.com/kubernetes-engine/docs/how-to/custom-kube-dns?hl=zh-cn", "abstract": "# Google Kubernetes Engine (GKE) - \u8a2d\u7f6e\u81ea\u5b9a\u7fa9 kube-dns Deployment\n\u672c\u9801\u9762\u4ecb\u7d39\u5982\u4f55\u7232 Google Kubernetes Engine (GKE) Standard \u6a21\u5f0f\u96c6\u7fa3\u904b\u884c kube-dns \u7684\u81ea\u5b9a\u7fa9 Deployment\u3002\u672c\u9801\u9762\u4e0d\u9069\u7528\u65bc GKE Autopilot\uff08\u5728\u5176\u4e2d\uff0c\u7531 Google \u7ba1\u7406 kube-dns\uff09\u3002\n**\u6ce8\u610f** \uff1a\u5982\u679c\u60a8\u904b\u884c kube-dns \u7684\u81ea\u5b9a\u7fa9 Deployment\uff0c\u5247\u5fc5\u9808\u4f7f\u7528\u5b89\u5168\u88dc\u4e01\u548c\u66f4\u65b0\u4f7f kube-dns \u6620\u50cf\u4fdd\u6301\u6700\u65b0\u3002\u60a8\u53ef\u4ee5\u5f9e kube-system \u547d\u540d\u7a7a\u9593\u4e2d\u7684 kube-dns Deployment \u7372\u53d6\u6700\u65b0\u6620\u50cf\u3002\n", "content": "## \u6982\u89bd\n\u5982\u9700\u914d\u7f6e kube-dns CPU\u3001\u5167\u5b58\u548c\u5176\u4ed6\u53c3\u6578\uff0c\u60a8\u5fc5\u9808\u904b\u884c\u81ea\u5b9a\u7fa9 Deployment \u4e26\u505c\u7528 GKE \u63d0\u4f9b\u7684 Deployment\u3002\u60a8\u9084\u53ef\u4ee5\u6309\u7167\u672c\u9801\u9762\u4e2d\u7684\u8aaa\u660e\u904b\u884c Core DNS \u6216\u4efb\u4f55\u5176\u4ed6\u7b26\u5408 [Kubernetes DNS \u898f\u7bc4](https://github.com/kubernetes/dns/blob/master/docs/specification.md) \u7684 DNS \u63d0\u4f9b\u5546\u7684\u81ea\u5b9a\u7fa9 Deployment\u3002\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3 GKE \u5982\u4f55\u5be6\u73fe\u670d\u52d9\u767c\u73fe\uff0c\u8acb\u53c3\u95b1 [\u670d\u52d9\u767c\u73fe\u548c DNS](https://cloud.google.com/kubernetes-engine/docs/concepts/service-discovery?hl=zh-cn) \u3002\n## \u5275\u5efa\u81ea\u5b9a\u7fa9 Deployment\n- \u5275\u5efa kube-dns\u3001Core DNS \u6216\u5176\u4ed6 DNS \u63d0\u4f9b\u5546\u7684Deployment \u6e05\u55ae\u3002\u4ee5\u4e0b\u793a\u4f8b kube-dns \u6e05\u55ae\u5305\u542b `-q` \u6a19\u8a8c\uff0c\u4ee5\u8a18\u9304\u67e5\u8a62\u7d50\u679c\u3002\u5c07\u6e05\u55ae\u4fdd\u5b58\u7232 `custom-kube-dns.yaml` \u3002```\napiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: DNS_DEPLOYMENT_NAME\u00a0 namespace: kube-system\u00a0 annotations:\u00a0 \u00a0 deployment.kubernetes.io/revision: \"1\"\u00a0 \u00a0 k8s-app: kube-dnsspec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 k8s-app: kube-dns\u00a0 strategy:\u00a0 \u00a0 rollingUpdate:\u00a0 \u00a0 \u00a0 maxSurge: 10%\u00a0 \u00a0 \u00a0 maxUnavailable: 0\u00a0 \u00a0 type: RollingUpdate\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 creationTimestamp: null\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 k8s-app: kube-dns\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: kubedns\u00a0 \u00a0 \u00a0 \u00a0 image: registry.k8s.io/dns/k8s-dns-kube-dns:1.17.3\u00a0 \u00a0 \u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 limits:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: '170Mi'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cpu: 100m\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: '70Mi'\u00a0 \u00a0 \u00a0 \u00a0 livenessProbe:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 httpGet:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: /healthcheck/kubedns\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port: 10054\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 scheme: HTTP\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 initialDelaySeconds: 60\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 timeoutSeconds: 5\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 successThreshold: 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 failureThreshold: 5\u00a0 \u00a0 \u00a0 \u00a0 readinessProbe:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 httpGet:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: /readiness\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port: 8081\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 scheme: HTTP\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 initialDelaySeconds: 3\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 timeoutSeconds: 5\u00a0 \u00a0 \u00a0 \u00a0 args:\u00a0 \u00a0 \u00a0 \u00a0 - --domain=cluster.local.\u00a0 \u00a0 \u00a0 \u00a0 - --dns-port=10053\u00a0 \u00a0 \u00a0 \u00a0 - --config-dir=/kube-dns-config\u00a0 \u00a0 \u00a0 \u00a0 - --v=2\u00a0 \u00a0 \u00a0 \u00a0 env:\u00a0 \u00a0 \u00a0 \u00a0 - name: PROMETHEUS_PORT\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 value: \"10055\"\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 10053\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: dns-local\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 protocol: UDP\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 10053\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: dns-tcp-local\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 protocol: TCP\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 10055\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: metrics\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 protocol: TCP\u00a0 \u00a0 \u00a0 \u00a0 volumeMounts:\u00a0 \u00a0 \u00a0 \u00a0 - name: kube-dns-config\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mountPath: /kube-dns-config\u00a0 \u00a0 \u00a0 \u00a0 securityContext:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 allowPrivilegeEscalation: false\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 readOnlyRootFilesystem: true\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 runAsUser: 1001\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 runAsGroup: 1001\u00a0 \u00a0 \u00a0 - name: dnsmasq\u00a0 \u00a0 \u00a0 \u00a0 image: registry.k8s.io/dns/k8s-dns-dnsmasq-nanny:1.17.3\u00a0 \u00a0 \u00a0 \u00a0 livenessProbe:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 httpGet:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: /healthcheck/dnsmasq\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port: 10054\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 scheme: HTTP\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 initialDelaySeconds: 60\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 timeoutSeconds: 5\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 successThreshold: 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 failureThreshold: 5\u00a0 \u00a0 \u00a0 \u00a0 args:\u00a0 \u00a0 \u00a0 \u00a0 - -v=2\u00a0 \u00a0 \u00a0 \u00a0 - -logtostderr\u00a0 \u00a0 \u00a0 \u00a0 - -configDir=/etc/k8s/dns/dnsmasq-nanny\u00a0 \u00a0 \u00a0 \u00a0 - -restartDnsmasq=true\u00a0 \u00a0 \u00a0 \u00a0 - --\u00a0 \u00a0 \u00a0 \u00a0 - -k\u00a0 \u00a0 \u00a0 \u00a0 - --cache-size=1000\u00a0 \u00a0 \u00a0 \u00a0 - --no-negcache\u00a0 \u00a0 \u00a0 \u00a0 - --dns-forward-max=1500\u00a0 \u00a0 \u00a0 \u00a0 - --log-facility=-\u00a0 \u00a0 \u00a0 \u00a0 - --server=/cluster.local/127.0.0.1#10053\u00a0 \u00a0 \u00a0 \u00a0 - --server=/in-addr.arpa/127.0.0.1#10053\u00a0 \u00a0 \u00a0 \u00a0 - --server=/ip6.arpa/127.0.0.1#10053\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 53\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: dns\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 protocol: UDP\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 53\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: dns-tcp\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 protocol: TCP\u00a0 \u00a0 \u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cpu: 150m\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: 20Mi\u00a0 \u00a0 \u00a0 \u00a0 volumeMounts:\u00a0 \u00a0 \u00a0 \u00a0 - name: kube-dns-config\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mountPath: /etc/k8s/dns/dnsmasq-nanny\u00a0 \u00a0 \u00a0 \u00a0 securityContext:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 capabilities:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 drop:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - all\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 add:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - NET_BIND_SERVICE\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - SETGID\u00a0 \u00a0 \u00a0 - name: sidecar\u00a0 \u00a0 \u00a0 \u00a0 image: registry.k8s.io/dns/k8s-dns-sidecar:1.17.3\u00a0 \u00a0 \u00a0 \u00a0 livenessProbe:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 httpGet:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: /metrics\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port: 10054\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 scheme: HTTP\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 initialDelaySeconds: 60\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 timeoutSeconds: 5\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 successThreshold: 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 failureThreshold: 5\u00a0 \u00a0 \u00a0 \u00a0 args:\u00a0 \u00a0 \u00a0 \u00a0 - --v=2\u00a0 \u00a0 \u00a0 \u00a0 - --logtostderr\u00a0 \u00a0 \u00a0 \u00a0 - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV\u00a0 \u00a0 \u00a0 \u00a0 - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - containerPort: 10054\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: metrics\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 protocol: TCP\u00a0 \u00a0 \u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: 20Mi\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cpu: 10m\u00a0 \u00a0 \u00a0 \u00a0 securityContext:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 allowPrivilegeEscalation: false\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 readOnlyRootFilesystem: true\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 runAsUser: 1001\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 runAsGroup: 1001\u00a0 \u00a0 \u00a0 dnsPolicy: Default\u00a0 \u00a0 \u00a0 restartPolicy: Always\u00a0 \u00a0 \u00a0 schedulerName: default-scheduler\u00a0 \u00a0 \u00a0 securityContext: {}\u00a0 \u00a0 \u00a0 serviceAccount: kube-dns\u00a0 \u00a0 \u00a0 serviceAccountName: kube-dns\u00a0 \u00a0 \u00a0 terminationGracePeriodSeconds: 30\u00a0 \u00a0 \u00a0 tolerations:\u00a0 \u00a0 \u00a0 - key: CriticalAddonsOnly\u00a0 \u00a0 \u00a0 \u00a0 operator: Exists\u00a0 \u00a0 \u00a0 volumes:\u00a0 \u00a0 \u00a0 - configMap:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 defaultMode: 420\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: kube-dns\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 optional: true\u00a0 \u00a0 \u00a0 \u00a0 name: kube-dns-config\n```\u5c07 `` \u66ff\u63db\u7232\u81ea\u5b9a\u7fa9 kube-dns Deployment \u7684\u540d\u7a31\u3002\n- \u5c07\u6e05\u55ae\u61c9\u7528\u65bc\u96c6\u7fa3\uff1a```\nkubectl create -f custom-kube-dns.yaml\n```\n- \u9a57\u8b49 pod \u662f\u5426\u6b63\u5728\u904b\u884c\uff1a```\nkubectl get pods -n kube-system -l=k8s-app=kube-dns\n```\u8f38\u51fa\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\uff0c\u986f\u793a\u81ea\u5b9a\u7fa9 kube-dns pod\uff1a```\nNAME \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 READY \u00a0 STATUS \u00a0 \u00a0RESTARTS \u00a0 AGEcustom-kube-dns-5685645b44-kzs8w \u00a0 3/3 \u00a0 \u00a0 Running \u00a0 0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a022h\n```\u65b0 Deployment \u7684\u9078\u64c7\u5668\u8207 kube-dns \u76f8\u540c\uff0c\u9019\u610f\u5473\u7740 pod \u4f7f\u7528\u76f8\u540c\u7684 kube-dns \u670d\u52d9 IP \u5730\u5740\u8207\u904b\u884c\u81ea\u5b9a\u7fa9 kube-dns Deployment \u7684 pod \u9032\u884c\u901a\u4fe1\u3002\u5b8c\u6210\u6b64\u6b65\u9a5f\u5f8c\uff0c\u60a8\u5fc5\u9808\u6309\u7167\u4e0b\u4e00\u90e8\u5206\u4e2d\u7684\u6b65\u9a5f\u7e2e\u6e1b kube-dns\u3002## \u7e2e\u6e1b kube-dns\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u505c\u7528 kube-dns \u90e8\u7f72\u548c\u81ea\u52d5\u64f4\u7e2e\u5668\uff0c\u4ee5\u505c\u7528\u7531 GKE \u7ba1\u7406\u7684 kube-dns\uff1a\n```\nkubectl scale deployment --replicas=0 kube-dns-autoscaler --namespace=kube-systemkubectl scale deployment --replicas=0 kube-dns --namespace=kube-system\n```\n## \u5275\u5efa\u81ea\u5b9a\u7fa9\u81ea\u52d5\u64f4\u7e2e\u5668\n\u5982\u679c\u60a8\u7684\u81ea\u5b9a\u7fa9 DNS \u9700\u8981\u81ea\u52d5\u64f4\u7e2e\uff0c\u5247\u5fc5\u9808\u914d\u7f6e\u548c\u90e8\u7f72\u55ae\u7368\u7684\u81ea\u52d5\u64f4\u7e2e\u5668\u3002kube-dns-autoscaler \u50c5\u64f4\u7e2e\u96c6\u7fa3\u4e0a\u7684\u9ed8\u8a8d kube-dns Deployment\u3002\u60a8\u9084\u9700\u8981\u7232\u81ea\u52d5\u64f4\u7e2e\u5668\u914d\u7f6e\u81ea\u5b9a\u7fa9 ClusterRole\uff0c\u4e26\u6dfb\u52a0\u6b0a\u9650\u4ee5\u4fee\u6539\u81ea\u5b9a\u7fa9 kube-dns \u90e8\u7f72\u3002\n- \u7232\u81ea\u52d5\u64f4\u7e2e\u5668\u5275\u5efa ClusterRole \u548c Deployment \u6e05\u55ae\uff0c\u4e26\u5c07\u6e05\u55ae\u4fdd\u5b58\u7232 `custom-dns-autoscaler.yaml` \uff1a```\napiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata:\u00a0 name: system:custom-dns-autoscalerroleRef:\u00a0 apiGroup: rbac.authorization.k8s.io\u00a0 kind: ClusterRole\u00a0 name: system:custom-dns-autoscalersubjects:- kind: ServiceAccount\u00a0 name: kube-dns-autoscaler\u00a0 namespace: kube-system---apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRolemetadata:\u00a0 name: system:custom-dns-autoscalerrules:- apiGroups:\u00a0 - \"\"\u00a0 resources:\u00a0 - nodes\u00a0 verbs:\u00a0 - list\u00a0 - watch- apiGroups:\u00a0 - apps\u00a0 resourceNames:\u00a0 - DNS_DEPLOYMENT_NAME\u00a0 resources:\u00a0 - deployments/scale\u00a0 verbs:\u00a0 - get\u00a0 - update- apiGroups:\u00a0 - \"\"\u00a0 resources:\u00a0 - configmaps\u00a0 verbs:\u00a0 - get\u00a0 - create---apiVersion: apps/v1kind: Deploymentmetadata:\u00a0 name: custom-dns-autoscaler\u00a0 namespace: kube-system\u00a0 labels:\u00a0 \u00a0 k8s-app: custom-dns-autoscalerspec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 k8s-app: custom-dns-autoscaler\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 k8s-app: custom-dns-autoscaler\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 seccomp.security.alpha.kubernetes.io/pod: 'docker/default'\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 priorityClassName: system-cluster-critical\u00a0 \u00a0 \u00a0 securityContext:\u00a0 \u00a0 \u00a0 \u00a0 supplementalGroups: [ 65534 ]\u00a0 \u00a0 \u00a0 \u00a0 fsGroup: 65534\u00a0 \u00a0 \u00a0 nodeSelector:\u00a0 \u00a0 \u00a0 \u00a0 kubernetes.io/os: linux\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: autoscaler\u00a0 \u00a0 \u00a0 \u00a0 image: registry.k8s.io/cluster-proportional-autoscaler-amd64:1.7.1\u00a0 \u00a0 \u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cpu: \"20m\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: \"10Mi\"\u00a0 \u00a0 \u00a0 \u00a0 command:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - /cluster-proportional-autoscaler\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - --namespace=kube-system\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - --configmap=custom-dns-autoscaler\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - --target=Deployment/DNS_DEPLOYMENT_NAME\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - --default-params={\"linear\":{\"coresPerReplica\":256,\"nodesPerReplica\":16,\"preventSinglePointFailure\":true}}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - --logtostderr=true\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - --v=2\u00a0 \u00a0 \u00a0 tolerations:\u00a0 \u00a0 \u00a0 - key: \"CriticalAddonsOnly\"\u00a0 \u00a0 \u00a0 \u00a0 operator: \"Exists\"\u00a0 \u00a0 \u00a0 serviceAccountName: kube-dns-autoscaler\n```\n- \u5c07\u6e05\u55ae\u61c9\u7528\u65bc\u96c6\u7fa3\uff1a```\nkubectl create -f custom-dns-autoscaler.yaml\n```## \u5f8c\u7e8c\u6b65\u9a5f\n- \u7c21\u8981\u4e86\u89e3 GKE \u5982\u4f55\u63d0\u4f9b [\u4ee3\u7ba1\u5f0f DNS](https://cloud.google.com/kubernetes-engine/docs/concepts/service-discovery?hl=zh-cn) \u3002\n- \u95b1\u8b80 [\u670d\u52d9\u548c Pod \u7684 DNS](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service) \uff0c\u5927\u81f4\u77ad\u89e3\u5982\u4f55\u5728 Kubernetes \u96c6\u7fa3\u4e2d\u4f7f\u7528 DNS\u3002", "guide": "Google Kubernetes Engine (GKE)"}