{"title": "Google Kubernetes Engine (GKE) - \u6392\u67e5\u5bb9\u5668\u904b\u884c\u6642\u554f\u984c", "url": "https://cloud.google.com/kubernetes-engine/docs/troubleshooting/container-runtime?hl=zh-cn", "abstract": "# Google Kubernetes Engine (GKE) - \u6392\u67e5\u5bb9\u5668\u904b\u884c\u6642\u554f\u984c\n\u672c\u6587\u6a94\u4ecb\u7d39\u4e86\u60a8\u5728\u4f7f\u7528 Google Kubernetes Engine (GKE) \u7bc0\u9ede\u4e0a\u7684\u5bb9\u5668\u904b\u884c\u6642\u6642\u53ef\u80fd\u6703\u9047\u5230\u7684\u5e38\u898b\u554f\u984c\u7684\u554f\u984c\u6392\u67e5\u6b65\u9a5f\u3002\n[Cloud Customer Care](https://cloud.google.com/kubernetes-engine/docs/getting-support?hl=zh-cn)\n", "content": "## \u5728\u4f7f\u7528 Containerd \u7684 Windows \u7bc0\u9ede\u6c60\u4e0a\uff0c\u5305\u542b\u7c21\u55ae\u76e4\u7b26\u7684\u88dd\u8f09\u8def\u5f91\u5931\u6557\n\u5728\u5553\u52d5\u5bb9\u5668\u6642\uff0c\u904b\u884c\u4f7f\u7528\u4f4e\u65bc 1.6.6 \u7248\u7684 containerd \u904b\u884c\u6642\u7684 Windows Server \u7bc0\u9ede\u6c60\u7684 GKE \u96c6\u7fa3\u53ef\u80fd\u6703\u9047\u5230\u4ee5\u4e0b\u932f\u8aa4\uff1a\n```\nfailed to create containerd task : CreateComputeSystem : The parameter is incorrect : unknown\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [GitHub \u554f\u984c 6589](https://github.com/containerd/containerd/issues/6589) \u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5c07\u7bc0\u9ede\u6c60\u5347\u7d1a\u5230\u4f7f\u7528 containerd \u904b\u884c\u6642\u7248\u672c 1.6.6 \u6216\u66f4\u9ad8\u7248\u672c\u7684\u6700\u65b0 GKE \u7248\u672c\u3002\n## \u5728\u4f7f\u7528 containerd \u7684 Windows \u7bc0\u9ede\u6c60\u4e0a\uff0c\u5177\u6709\u975e\u6578\u7d44\u9810\u8f49\u7fa9 CMD \u6216 ENTRYPOINT \u547d\u4ee4\u884c\u7684\u5bb9\u5668\u6620\u50cf\u5931\u6557\n\u5728\u5553\u52d5\u5bb9\u5668\u6642\uff0c\u904b\u884c\u4f7f\u7528 containerd \u904b\u884c\u6642 1.5.X \u7684 Windows Server \u7bc0\u9ede\u6c60\u7684 GKE \u96c6\u7fa3\u53ef\u80fd\u6703\u9047\u5230\u4ee5\u4e0b\u932f\u8aa4\uff1a\n```\nfailed to start containerd task : hcs::System::CreateProcess : The system cannot find the file specified.: unknown\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [GitHub \u554f\u984c #5067](https://github.com/containerd/containerd/issues/5067) \u548c [GitHub \u554f\u984c #6300](https://github.com/containerd/containerd/issues/6300) \u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5c07\u7bc0\u9ede\u6c60\u5347\u7d1a\u5230\u4f7f\u7528 containerd \u904b\u884c\u6642\u7248\u672c 1.6.6 \u6216\u66f4\u9ad8\u7248\u672c\u7684\u6700\u65b0 GKE \u7248\u672c\u3002\n## \u5728\u4f7f\u7528 Containerd \u7684 Windows \u7bc0\u9ede\u6c60\u4e0a\uff0c\u5177\u6709\u4e0d\u5b58\u5728\u7684\u8def\u5f91\u6216 Linux \u683c\u5f0f\uff08\u6b63\u659c\u7dda\uff09\u8def\u5f91\u7684\u5bb9\u5668\u6620\u50cf\u5377\u5931\u6557\n\u5728\u5553\u52d5\u5bb9\u5668\u6642\uff0c\u904b\u884c\u4f7f\u7528 containerd \u904b\u884c\u6642 1.5.X \u7684 Windows Server \u7bc0\u9ede\u6c60\u7684 GKE \u96c6\u7fa3\u53ef\u80fd\u6703\u9047\u5230\u4ee5\u4e0b\u932f\u8aa4\uff1a\n```\nfailed to generate spec: failed to stat \"<volume_path>\": CreateFile : The system cannot find the path specified.\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [GitHub \u554f\u984c 5671](https://github.com/containerd/containerd/issues/5671) \u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5c07\u7bc0\u9ede\u6c60\u5347\u7d1a\u5230\u4f7f\u7528 containerd \u904b\u884c\u6642\u7248\u672c 1.6.x \u6216\u66f4\u9ad8\u7248\u672c\u7684\u6700\u65b0 GKE \u7248\u672c\u3002\n## /etc/mtab\uff1a\u4e0d\u5b58\u5728\u6b64\u985e\u6587\u4ef6\u6216\u76ee\u9304\nDocker \u5bb9\u5668\u904b\u884c\u6642\u9ed8\u8a8d\u5728\u5bb9\u5668\u5167\u586b\u5145\u6b64\u7b26\u865f\u93c8\u63a5\uff0c\u4f46 containerd \u904b\u884c\u6642\u4e0d\u6703\u586b\u5145\u3002\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [GitHub \u554f\u984c 2419](https://github.com/containerd/containerd/issues/2419) \u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u8981\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5728\u6620\u50cf\u69cb\u5efa\u671f\u9593\u624b\u52d5\u5275\u5efa\u7b26\u865f\u93c8\u63a5 `/etc/mtab` \u3002\n```\nln -sf /proc/mounts /etc/mtab\n```\n## \u6620\u50cf\u62c9\u53d6\u932f\u8aa4\uff1a\u4e0d\u662f\u76ee\u9304\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a\u5168\u90e8\n\u4f7f\u7528 [kaniko](https://github.com/GoogleContainerTools/kaniko) \u69cb\u5efa\u6620\u50cf\u6642\uff0c\u53ef\u80fd\u7121\u6cd5\u4f7f\u7528 containerd \u62c9\u53d6\u8a72\u6620\u50cf\uff0c\u4e26\u986f\u793a\u932f\u8aa4\u6d88\u606f\u201c\u4e0d\u662f\u76ee\u9304\u201d\u3002\u5982\u679c\u6620\u50cf\u4ee5\u7279\u6b8a\u65b9\u5f0f\u69cb\u5efa\uff0c\u5247\u4ee5\u4e0b\u60c5\u6cc1\u4e0b\u6703\u767c\u751f\u6b64\u932f\u8aa4\uff1a\u7576\u4e0a\u4e00\u500b\u547d\u4ee4\u522a\u9664\u4e00\u500b\u76ee\u9304\uff0c\u800c\u4e0b\u4e00\u500b\u547d\u4ee4\u5728\u8a72\u76ee\u9304\u4e2d\u91cd\u65b0\u5275\u5efa\u76f8\u540c\u7684\u6587\u4ef6\u3002\n\u4ee5\u4e0b\u5e36\u6709 `npm` \u7684 Dockerfile \u793a\u4f8b\u8aaa\u660e\u4e86\u6b64\u554f\u984c\u3002\n```\nRUN npm cache clean --force\nRUN npm install\n```\n\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [GitHub \u554f\u984c #4659](https://github.com/containerd/containerd/issues/4659) \u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u4f7f\u7528 `docker build` \u69cb\u5efa\u6620\u50cf\uff0c\u9019\u4e0d\u53d7\u6b64\u554f\u984c\u7684\u5f71\u97ff\u3002\n\u5982\u679c `docker build` \u4e0d\u9069\u7528\u65bc\u60a8\uff0c\u8acb\u5c07\u9019\u4e9b\u547d\u4ee4\u7d44\u5408\u6210\u4e00\u500b\u3002\u4ee5\u4e0b Dockerfile \u793a\u4f8b\u7d50\u5408\u4f7f\u7528\u4e86 `RUN npm cache clean --force` \u548c `RUN npm install` \uff1a\n```\nRUN npm cache clean --force && npm install\n```\n## \u67d0\u4e9b\u6587\u4ef6\u7cfb\u7d71\u6307\u6a19\u7f3a\u5931\u4e14\u6307\u6a19\u683c\u5f0f\u4e0d\u540c\n**\u6ce8\u610f** \uff1a\u6b64\u554f\u984c\u4e0d\u6703\u5f71\u97ff\u4f7f\u7528 [Cloud Monitoring](https://cloud.google.com/monitoring/api/metrics_kubernetes?hl=zh-cn) \u7684\u5ba2\u6236\u3002\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a\u5168\u90e8\nKubelet `/metrics/cadvisor` \u7aef\u9ede\u63d0\u4f9b Prometheus \u6307\u6a19\uff0c\u5982 [Kubernetes \u7cfb\u7d71\u7d44\u4ef6\u7684\u6307\u6a19](https://kubernetes.io/docs/concepts/cluster-administration/system-metrics/) \u4e2d\u6240\u8ff0\u3002\u5982\u679c\u60a8\u5b89\u88dd\u4f9d\u8cf4\u65bc\u8a72\u7aef\u9ede\u7684\u6307\u6a19\u6536\u96c6\u5668\uff0c\u53ef\u80fd\u6703\u770b\u5230\u4ee5\u4e0b\u554f\u984c\uff1a\n- Docker \u7bc0\u9ede\u4e0a\u7684\u6307\u6a19\u683c\u5f0f\u7232`k8s_<container-name>_<pod-name>_<namespace>_<pod-uid>_<restart-count>`\uff0c\u4f46 containerd \u7bc0\u9ede\u4e0a\u7684\u6307\u6a19\u683c\u5f0f\u7232`<container-id>`\u3002\n- containerd \u7bc0\u9ede\u4e0a\u7f3a\u5c11\u4e00\u4e9b\u6587\u4ef6\u7cfb\u7d71\u6307\u6a19\uff0c\u5982\u4e0b\u6240\u793a\uff1a```\ncontainer_fs_inodes_free\ncontainer_fs_inodes_total\ncontainer_fs_io_current\ncontainer_fs_io_time_seconds_total\ncontainer_fs_io_time_weighted_seconds_total\ncontainer_fs_limit_bytes\ncontainer_fs_read_seconds_total\ncontainer_fs_reads_merged_total\ncontainer_fs_sector_reads_total\ncontainer_fs_sector_writes_total\ncontainer_fs_usage_bytes\ncontainer_fs_write_seconds_total\ncontainer_fs_writes_merged_total\n```\n### \u89e3\u6c7a\u65b9\u6848\n\u60a8\u53ef\u4ee5\u4f7f\u7528 [cAdvisor](https://github.com/google/cadvisor) \u4f5c\u7232\u7368\u7acb\u5b88\u8b77\u9032\u7a0b\u96c6\u4f86\u7de9\u89e3\u6b64\u554f\u984c\u3002\n- \u67e5\u627e\u540d\u7a31\u6a21\u5f0f\u7232`vX.Y.Z-containerd-cri`\u7684\u6700\u65b0 [cAdvisor \u7248\u672c](https://github.com/google/cadvisor/releases) \uff08\u4f8b\u5982`v0.42.0-containerd-cri`\uff09\u3002\n- \u6309\u7167 [cAdvisor Kubernetes Daemonset](https://github.com/google/cadvisor/tree/master/deploy/kubernetes) \u4e2d\u7684\u6b65\u9a5f\u5275\u5efa\u5b88\u8b77\u9032\u7a0b\u96c6\u3002\n- \u8b93\u5df2\u5b89\u88dd\u7684\u6307\u6a19\u6536\u96c6\u5668\u6307\u5411\u4f7f\u7528 cAdvisor`/metrics`\u7aef\u9ede\uff0c\u8a72\u7aef\u9ede\u63d0\u4f9b\u5168\u5957 [Prometheus \u5bb9\u5668\u6307\u6a19](https://github.com/google/cadvisor/blob/master/docs/storage/prometheus.md) \u3002\n### \u66ff\u4ee3\u65b9\u6848\n- \u5c07\u76e3\u63a7\u89e3\u6c7a\u65b9\u6848\u9077\u79fb\u5230 [Cloud Monitoring](https://cloud.google.com/monitoring/api/metrics_kubernetes?hl=zh-cn) \uff0c\u5f8c\u8005\u63d0\u4f9b\u4e86\u4e00\u6574\u5957\u5bb9\u5668\u6307\u6a19\u3002\n- \u4f7f\u7528\u7aef\u9ede`/stats/summary`\u5f9e [Kubelet \u6458\u8981 API](https://pkg.go.dev/k8s.io/kubelet/pkg/apis/stats/v1alpha1) \u6536\u96c6\u6307\u6a19\u3002## \u5728 GKE Windows \u4e0a\u5bb9\u5668\u904b\u884c\u6642\u91cd\u5553\u5f8c\uff0c\u57fa\u65bc\u639b\u63a5\u7684\u64cd\u4f5c\u5c07\u7121\u6cd5\u6b63\u5e38\u904b\u884c\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a1.21 \u5230 1.21.5-gke.1802\u30011.22 \u5230 1.22.3-gke.700\n\u5982\u679c GKE \u96c6\u7fa3\u904b\u884c\u4f7f\u7528 Containerd \u904b\u884c\u6642\uff08\u7248\u672c 1.5.4 \u548c 1.5.7-gke.0\uff09\u7684 Windows Server \u7bc0\u9ede\u6c60\uff0c\u5247\u5728\u5bb9\u5668\u904b\u884c\u6642\u88ab\u5f37\u5236\u91cd\u5553\u6642\uff0c\u53ef\u80fd\u6703\u9047\u5230\u554f\u984c\uff1a\u5c0d\u73fe\u6709\u904b\u884c\u5bb9\u5668\u7684\u639b\u63a5\u64cd\u4f5c\u7121\u6cd5\u518d\u6b21\u7d81\u5b9a IO\u3002\u6b64\u554f\u984c\u4e0d\u6703\u5c0e\u81f4 API \u8abf\u7528\u5931\u6557\uff0c\u4f46\u7cfb\u7d71\u4e0d\u6703\u767c\u9001\u6216\u63a5\u6536\u6578\u64da\u3002\u9019\u5305\u62ec\u901a\u904e\u96c6\u7fa3 API \u670d\u52d9\u5668\u639b\u63a5\u548c\u8a18\u9304 CLI \u8207 API \u7684\u6578\u64da\u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u8981\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u4f7f\u7528\u8f03\u65b0\u7684 GKE \u7248\u672c\u5347\u7d1a\u5230\u4fee\u88dc\u5f8c\u7684\u5bb9\u5668\u904b\u884c\u6642\u7248\u672c (1.5.7-gke.1)\u3002\n## Pod \u986f\u793a failed to allocate for range 0: no IP addresses available in range set \u932f\u8aa4\u6d88\u606f\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a1.24.6-gke.1500 \u6216\u66f4\u65e9\u7248\u672c\u30011.23.14-gke.1800 \u6216\u66f4\u65e9\u7248\u672c\u4ee5\u53ca 1.22.16-gke.2000 \u6216\u66f4\u65e9\u7248\u672c\n\u904b\u884c\u4f7f\u7528 containerd \u7684\u7bc0\u9ede\u6c60\u7684 GKE \u96c6\u7fa3\u53ef\u80fd\u6703\u9047\u5230 IP \u6cc4\u9732\u554f\u984c\uff0c\u4e26\u8017\u76e1\u7bc0\u9ede\u4e0a\u7684\u6240\u6709 Pod IP\u3002\u53d7\u5f71\u97ff\u7684\u7bc0\u9ede\u4e0a\u5b89\u6392\u7684 Pod \u6703\u986f\u793a\u985e\u4f3c\u65bc\u4ee5\u4e0b\u5167\u5bb9\u7684\u932f\u8aa4\u6d88\u606f\uff1a\n```\nfailed to allocate for range 0: no IP addresses available in range set: 10.48.131.1-10.48.131.62\n```\n\u5982\u9700\u8a73\u7d30\u77ad\u89e3\u6b64\u554f\u984c\uff0c\u8acb\u53c3\u95b1 containerd [GitHub \u554f\u984c #5438](https://github.com/containerd/containerd/issues/5438) \u548c [GitHub \u554f\u984c #5768](https://github.com/containerd/containerd/issues/5768) \u3002\nGKE Dataplane V2 \u4e2d\u5b58\u5728\u4e00\u500b [\u5df2\u77e5\u554f\u984c](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2?hl=zh-cn#containerd-pod-ip-leak) \uff0c\u53ef\u80fd\u6703\u89f8\u767c\u6b64\u554f\u984c\u3002\u4f46\u662f\uff0c\u6b64\u554f\u984c\u53ef\u80fd\u662f\u7531\u5176\u4ed6\u539f\u56e0\uff08\u5305\u62ec [runc \u5361\u4f4f](https://github.com/opencontainers/runc/issues/2865) \uff09\u89f8\u767c\u7684\u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u6309\u7167 GKE Dataplane V2 [\u6a19\u6e96 GKE \u96c6\u7fa3\u7684\u89e3\u6c7a\u65b9\u6cd5](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2?hl=zh-cn#workarounds_for_standard_clusters) \u4e2d\u6240\u8ff0\u7684\u89e3\u6c7a\u65b9\u6cd5\u64cd\u4f5c\u3002\n## \u63a2\u6e2c\u8d85\u51fa\u8d85\u6642\u5f8c\u7684\u57f7\u884c\u63a2\u6e2c\u884c\u7232\u5dee\u7570\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a\u5168\u90e8\ncontainerd \u6620\u50cf\u4e0a\u7684\u57f7\u884c\u63a2\u6e2c\u884c\u7232\u8207 `dockershim` \u6620\u50cf\u4e0a\u7684\u884c\u7232\u4e0d\u540c\u3002\u5982\u679c\u7232 Pod \u5b9a\u7fa9\u7684\u57f7\u884c\u63a2\u6e2c\u8d85\u904e `dockershim` \u6620\u50cf\u4e0a\u8072\u660e\u7684 [Kubernetes timeoutSeconds](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes) \u95be\u503c\uff0c\u5247\u8a72\u63a2\u6e2c\u6703\u88ab\u8996\u7232\u5931\u6557\u3002\u5728 containerd \u6620\u50cf\u4e0a\uff0c\u7cfb\u7d71\u6703\u5ffd\u7565\u8072\u660e\u7684 `timeoutSeconds` \u95be\u503c\u5f8c\u8fd4\u56de\u7684\u63a2\u6e2c\u7d50\u679c\u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u5728 GKE \u4e2d\uff0c\u7279\u6027\u9580\u63a7 `ExecProbeTimeout` \u8a2d\u7f6e\u7232 `false` \uff0c\u4e26\u4e14\u7121\u6cd5\u66f4\u6539\u3002\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u63d0\u9ad8\u6240\u6709\u53d7\u5f71\u97ff\u7684\u57f7\u884c\u63a2\u6e2c\u7684 `timeoutSeconds` \u95be\u503c\uff0c\u6216\u5728\u63a2\u6e2c\u908f\u8f2f\u4e2d\u5be6\u73fe\u8d85\u6642\u529f\u80fd\u3002\n## \u6c92\u6709\u7232\u672c\u5730\u7db2\u7d61 (10.0.0.0/8) \u914d\u7f6e\u4e0d\u5b89\u5168\u7684\u8a3b\u518a\u8868\u9078\u9805\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a\u5168\u90e8\n\u5728 containerd \u6620\u50cf\u4e0a\uff0c **\u6c92\u6709** \u7232\u672c\u5730\u7db2\u7d61 `10.0.0.0/8` \u914d\u7f6e\u4e0d\u5b89\u5168\u7684\u8a3b\u518a\u8868\u9078\u9805\u3002\u5982\u679c\u4f7f\u7528\u4e0d\u5b89\u5168\u7684\u79c1\u6709\u5009\u5eab\uff0c\u60a8\u53ef\u80fd\u6703\u770b\u5230\u4ee5\u4e0b\u932f\u8aa4\uff1a\n```\npulling image: rpc error: code = Unknown desc = failed to pull and unpack image \"IMAGE_NAME\": failed to do request: Head \"IMAGE_NAME\": http: server gave HTTP response to HTTPS client\n```\n\u6211\u5011\u5efa\u8b70\u60a8\u4f7f\u7528 [Artifact Registry](https://cloud.google.com/artifact-registry/docs/repositories/create-repos?hl=zh-cn) \u6216\u5728\u79c1\u6709\u5009\u5eab\u4e0a\u914d\u7f6e TLS\uff08\u5982\u679c\u60a8\u7684\u61c9\u7528\u5834\u666f\u652f\u6301\u9019\u4e9b\u9078\u9805\uff09\u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u5c0d\u65bc\u6a19\u6e96\u96c6\u7fa3\uff0c\u8acb\u5617\u8a66\u4ee5\u4e0b\u6b65\u9a5f\u3002\u6b64\u89e3\u6c7a\u65b9\u6cd5\u4e0d\u9069\u7528\u65bc Autopilot\uff0c\u56e0\u7232\u7279\u6b0a\u5bb9\u5668\u5b58\u5728\u5b89\u5168\u98a8\u96aa\u3002\u5982\u679c\u60a8\u7684\u74b0\u5883\u5411\u4e92\u806f\u7db2\u516c\u958b\uff0c\u5247\u5728\u90e8\u7f72\u6b64\u89e3\u6c7a\u65b9\u6848\u4e4b\u524d\uff0c\u8acb\u8003\u616e\u60a8\u7684\u98a8\u96aa\u5bb9\u5fcd\u5ea6\u3002\n**\u6ce8\u610f** \uff1a\u6b64\u64cd\u4f5c\u9700\u8981\u91cd\u5553 containerd\uff0c\u9019\u53ef\u80fd\u6703\u5c0e\u81f4\u5df2\u5728\u7bc0\u9ede\u4e0a\u904b\u884c\u7684\u5de5\u4f5c\u8ca0\u8f09\u4e2d\u65b7\u3002\n- \u8acb\u67e5\u770b\u4ee5\u4e0b\u6e05\u55ae\uff1a [  container-insecure-registry/insecure-registry-config.yaml ](https://github.com/GoogleCloudPlatform/k8s-node-tools/blob/HEAD/container-insecure-registry/insecure-registry-config.yaml) [\u5728\u7de8\u8f2f\u5668\u4e2d\u6253\u958b](https://ide.cloud.google.com/?git_repo=https%3A%2F%2Fgithub.com%2FGoogleCloudPlatform%2Fk8s-node-tools&page=editor&cloudshell_workspace=container-insecure-registry&cloudshell_open_in_editor=insecure-registry-config.yaml&hl=zh-cn) [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/k8s-node-tools/blob/HEAD/container-insecure-registry/insecure-registry-config.yaml) ```\napiVersion: apps/v1kind: DaemonSetmetadata:\u00a0 name: insecure-registries\u00a0 namespace: default\u00a0 labels:\u00a0 \u00a0 k8s-app: insecure-registriesspec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 name: insecure-registries\u00a0 updateStrategy:\u00a0 \u00a0 type: RollingUpdate\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 name: insecure-registries\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 nodeSelector:\u00a0 \u00a0 \u00a0 \u00a0 cloud.google.com/gke-container-runtime: \"containerd\"\u00a0 \u00a0 \u00a0 hostPID: true\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 \u00a0 - name: startup-script\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 image: gcr.io/google-containers/startup-script:v1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 imagePullPolicy: Always\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 securityContext:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 privileged: true\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 env:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - name: ADDRESS\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 value: \"REGISTRY_ADDRESS\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - name: STARTUP_SCRIPT\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 value: |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 set -o errexit\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 set -o pipefail\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 set -o nounset\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if [[ -z \"$ADDRESS\" || \"$ADDRESS\" == \"REGISTRY_ADDRESS\" ]]; then\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \"Error: Environment variable ADDRESS is not set in containers.spec.env\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exit 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fi\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \"Allowlisting insecure registries\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 grep -qxF '[plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"'$ADDRESS'\"]' /etc/containerd/config.toml || \\\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo -e '[plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"'$ADDRESS'\"]\\n \u00a0endpoint = [\"http://'$ADDRESS'\"]' >> /etc/containerd/config.toml\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \"Reloading systemd management configuration\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 systemctl daemon-reload\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo \"Restarting containerd...\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 systemctl restart containerd\n```\u5728 `.spec.containers.env` \u5b57\u6bb5\u4e2d\uff0c\u5c07 `ADDRESS` \u8b8a\u91cf\u7684 `` \u503c\u66ff\u63db\u7232\u672c\u5730 HTTP \u5009\u5eab\u7684\u5730\u5740\uff0c\u683c\u5f0f\u7232 `DOMAIN_NAME:PORT` \u3002\u4f8b\u5982\uff0c```\ncontainers:- name: startup-script\u00a0 ...\u00a0 env:\u00a0 - name: ADDRESS\u00a0 \u00a0 value: \"example.com:5000\"\n```\n- \u90e8\u7f72 DaemonSet\uff1a```\nkubectl apply -f insecure-registry-ds.yaml\n```\nDaemonSet \u6703\u5c07\u4e0d\u5b89\u5168\u7684\u5009\u5eab\u6dfb\u52a0\u5230\u6bcf\u500b\u7bc0\u9ede\u4e0a\u7684 containerd \u914d\u7f6e\u4e2d\u3002\n## containerd \u5ffd\u7565\u7279\u6b0a Pod \u7684\u4efb\u4f55\u8a2d\u5099\u6620\u5c04\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a\u5168\u90e8\n\u5c0d\u65bc [\u7279\u6b0a Kubernetes Pod](https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged) \uff0c\u5bb9\u5668\u904b\u884c\u6642\u6703\u5ffd\u7565 `volumeDevices.devicePath` \u50b3\u905e\u7d66\u5b83\u7684\u6240\u6709\u8a2d\u5099\u6620\u5c04\uff0c\u6539\u7232\u8b93\u4e3b\u6a5f\u4e0a\u7684\u6bcf\u81fa\u8a2d\u5099\u90fd\u53ef\u4f9b `/dev` \u4e0b\u7684\u5bb9\u5668\u4f7f\u7528\u3002\n## \u7576\u7bc0\u9ede\u9762\u81e8 I/O \u58d3\u529b\u6642\uff0ccontainerd \u6cc4\u9732 shim \u9032\u7a0b\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c\uff1a1.25.0 \u81f3 1.25.15-gke.1040000\u30011.26.0 \u81f3 1.26.10-gke.1030000\u30011.27.0 \u81f3 1.27.6-gke.1513000\uff0c\u4ee5\u53ca 1.28.0 \u81f3 1.28.3-gke.1061000\n\u7576 GKE \u7bc0\u9ede\u9762\u81e8 I/O \u58d3\u529b\u6642\uff0ccontainerd \u5728\u522a\u9664 Pod \u5f8c\u53ef\u80fd\u7121\u6cd5\u522a\u9664 `containerd-shim-runc-v2` \u9032\u7a0b\uff0c\u5f9e\u800c\u5c0e\u81f4\u9032\u7a0b\u6cc4\u9732\u3002\u5982\u679c\u67d0\u500b\u7bc0\u9ede\u4e0a\u767c\u751f\u6cc4\u9732\uff0c\u60a8\u6703\u770b\u5230\u7bc0\u9ede\u4e0a\u7684 `containerd-shim-runc-v2` \u9032\u7a0b\u591a\u65bc\u8a72\u7bc0\u9ede\u4e0a\u7684 Pod \u6578\u91cf\u3002\u60a8\u53ef\u80fd\u9084\u6703\u770b\u5230\u5167\u5b58\u548c CPU \u7528\u91cf\u589e\u52a0\u4ee5\u53ca\u984d\u5916\u7684 PID\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 GitHub \u554f\u984c [\u4fee\u5fa9\u7531\u9ad8 IO \u58d3\u529b\u5c0e\u81f4\u7684 shim \u6cc4\u9732](https://github.com/containerd/containerd/pull/8954) \u3002\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5c07 [\u7bc0\u9ede\u5347\u7d1a](https://cloud.google.com/kubernetes-engine/docs/how-to/upgrading-a-cluster?hl=zh-cn#upgrade_cp) \u5230\u4ee5\u4e0b\u7248\u672c\u6216\u66f4\u9ad8\u7248\u672c\uff1a\n- 1.25.15-gke.1040000\n- 1.26.10-gke.1030000\n- 1.27.6-gke.1513000\n- 1.28.3-gke.1061000## \u5728\u904b\u884c containerd \u7684 Pod \u4e0a\u5553\u7528 IPv6 \u5730\u5740\u7cfb\u5217\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a1.18\u30011.19\u30011.20.0 \u81f3 1.20.9\n\u7232\u4f7f\u7528 containerd \u904b\u884c\u7684 Pod \u5553\u7528\u4e86 IPv6 \u6620\u50cf\u7cfb\u5217\u3002 `dockershim` \u6620\u50cf\u6703\u5728\u6240\u6709 Pod \u4e0a\u505c\u7528 IPv6\uff0c\u800c containerd \u6620\u50cf\u4e0d\u6703\u3002\u4f8b\u5982\uff0c `localhost` \u6703\u5148\u89e3\u6790\u7232 IPv6 \u5730\u5740 `::1` \u3002\u9019\u901a\u5e38\u4e0d\u6703\u9020\u6210\u554f\u984c\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u9019\u53ef\u80fd\u6703\u5c0e\u81f4\u610f\u5916\u884c\u7232\u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u660e\u78ba\u4f7f\u7528 IPv4 \u5730\u5740\uff08\u5982 `127.0.0.1` \uff09\uff0c\u6216\u5c07 Pod \u4e2d\u904b\u884c\u7684\u61c9\u7528\u914d\u7f6e\u7232\u540c\u6642\u7528\u65bc\u5169\u500b\u5730\u5740\u7cfb\u5217\u3002\n## \u7bc0\u9ede\u81ea\u52d5\u9810\u914d\u529f\u80fd\u53ea\u6703\u9810\u914d\u5e36\u6709 Docker \u7bc0\u9ede\u6c60\u7684 Container-Optimized OS\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a1.18\u30011.19\u30011.20.0 \u81f3 1.20.6-gke.1800\n\u901a\u904e [\u7bc0\u9ede\u81ea\u52d5\u9810\u914d](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning?hl=zh-cn) \u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u81ea\u52d5\u64f4\u7e2e\u5177\u6709 [\u4efb\u4f55\u53d7\u652f\u6301\u7684\u6620\u50cf\u985e\u578b](https://cloud.google.com/kubernetes-engine/docs/concepts/node-images?hl=zh-cn#available_node_images) \u7684\u7bc0\u9ede\u6c60\uff0c\u4f46\u53ea\u80fd\u4f7f\u7528 [\u5e36\u6709 Docker \u7684 Container-Optimized OS](https://cloud.google.com/kubernetes-engine/docs/concepts/node-images?hl=zh-cn#cos) \u6620\u50cf\u985e\u578b\u5275\u5efa \u7bc0\u9ede\u6c60\u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u8981\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5c07 GKE \u96c6\u7fa3\u5347\u7d1a\u5230 1.20.6-gke.1800 \u7248\u6216\u66f4\u9ad8\u7248\u672c\u3002\u5728\u9019\u4e9b GKE \u7248\u672c\u4e2d\uff0c\u53ef\u4ee5 [\u7232\u96c6\u7fa3\u8a2d\u7f6e](https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning?hl=zh-cn#default-image-type) \u9ed8\u8a8d\u6620\u50cf\u985e\u578b\u3002\n## \u8207 172.17/16 IP \u5730\u5740\u7bc4\u570d\u885d\u7a81\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a1.18.0 \u81f3 1.18.14\n`172.17/16` IP \u5730\u5740\u7bc4\u570d\u6703\u88ab\u5553\u7528\u4e86 containerd \u7684\u7bc0\u9ede\u865b\u64ec\u6a5f\u4e0a\u7684 `docker0` \u63a5\u53e3\u5360\u7528\u3002\u5411\u8a72\u7bc4\u570d\u767c\u9001\u6216\u4f86\u81ea\u8a72\u7bc4\u570d\u7684\u6d41\u91cf\u53ef\u80fd\u7121\u6cd5\u6b63\u78ba\u8def\u7531\uff08\u4f8b\u5982\uff0cPod \u53ef\u80fd\u7121\u6cd5\u9023\u63a5\u5230 IP \u5730\u5740\u5728 `172.17/16` \u4e2d\u7684 VPN \u9023\u63a5\u4e3b\u6a5f\uff09\u3002\n## \u672a\u6536\u96c6\u7684 GPU \u6307\u6a19\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a1.18.0 \u81f3 1.18.18\n\u5728 GKE 1.18.18 \u7248\u4e4b\u524d\uff0c\u5982\u679c\u5c07 containerd \u7528\u4f5c\u904b\u884c\u6642\uff0c\u7cfb\u7d71\u4e0d\u6703\u6536\u96c6 [GPU \u7528\u91cf\u6307\u6a19](https://cloud.google.com/kubernetes-engine/docs/how-to/gpus?hl=zh-cn#monitoring) \u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u8981\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5c07\u96c6\u7fa3\u5347\u7d1a\u5230 GKE 1.18.18 \u7248\u6216\u66f4\u9ad8\u7248\u672c\u3002\n## \u4e0d\u80fd\u5728 containerd \u4e2d\u4f7f\u7528 config.mediaType \u8a2d\u7f6e\u7232 application/octet-stream \u7684\u6620\u50cf\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a\u5168\u90e8\n\u4e0d\u80fd\u5728 containerd \u4e2d\u4f7f\u7528 `config.mediaType` \u8a2d\u7f6e\u7232 `\"application/octet-stream\"` \u7684\u6620\u50cf\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [GitHub \u554f\u984c #4756](https://github.com/containerd/containerd/issues/4756#issuecomment-731287262) \u3002\u9019\u4e9b\u6620\u50cf\u8207 Open Container Initiative \u898f\u7bc4\u4e0d\u517c\u5bb9\uff0c\u88ab\u8996\u7232\u4e0d\u6b63\u78ba\u3002\u9019\u4e9b\u6620\u50cf\u53ef\u8207 Docker \u7d50\u5408\u4f7f\u7528\u4f86\u63d0\u4f9b\u5411\u5f8c\u517c\u5bb9\u6027\uff0c\u800c\u5728 containerd \u4e2d\uff0c\u9019\u4e9b\u6620\u50cf\u4e0d\u53d7\u652f\u6301\u3002\n### \u75c7\u72c0\u548c\u8a3a\u65b7\n\u7bc0\u9ede\u65e5\u8a8c\u4e2d\u7684\u932f\u8aa4\u793a\u4f8b\uff1a\n```\nError syncing pod <pod-uid> (\"<pod-name>_<namespace>(<pod-uid>)\"), skipping: failed to \"StartContainer\" for \"<container-name>\" with CreateContainerError: \"failed to create containerd container: error unpacking image: failed to extract layer sha256:<some id>: failed to get reader from content store: content digest sha256:<some id>: not found\"\n```\n\u6620\u50cf\u6e05\u55ae\u901a\u5e38\u53ef\u5728\u8a17\u7ba1\u5b83\u7684\u8a3b\u518a\u8868\u4e2d\u627e\u5230\u3002\u7372\u5f97\u6e05\u55ae\u5f8c\uff0c\u8acb\u6aa2\u67e5 `config.mediaType` \u4ee5\u78ba\u5b9a\u60a8\u662f\u5426\u9047\u5230\u4e86\u6b64\u554f\u984c\uff1a\n```\n\"mediaType\": \"application/octet-stream\",\n```\n### \u89e3\u6c7a\u65b9\u6848\n\u7531\u65bc containerd \u793e\u5340\u6c7a\u5b9a\u4e0d\u652f\u6301\u6b64\u985e\u6620\u50cf\uff0c\u56e0\u6b64\u6240\u6709 containerd \u7248\u672c\u90fd\u6703\u53d7\u5230\u5f71\u97ff\uff0c\u4e26\u4e14\u6c92\u6709\u4fee\u5fa9\u3002\u60a8\u5fc5\u9808\u4f7f\u7528 Docker 1.11 \u6216\u66f4\u9ad8\u7248\u672c\u91cd\u65b0\u69cb\u5efa\u5bb9\u5668\u6620\u50cf\uff0c\u4e26\u4e14\u5fc5\u9808\u78ba\u4fdd `config.mediaType` \u5b57\u6bb5\u672a\u8a2d\u7f6e\u7232 `\"application/octet-stream\"` \u3002\n## CNI \u914d\u7f6e\u672a\u521d\u59cb\u5316\n\u53d7\u5f71\u97ff\u7684 GKE \u7248\u672c \uff1a\u5168\u90e8\nGKE \u7121\u6cd5\u5728\u5347\u7d1a\u3001\u8abf\u6574\u5927\u5c0f\u6216\u5176\u4ed6\u64cd\u4f5c\u671f\u9593\u5275\u5efa\u7bc0\u9ede\u3002\n### \u75c7\u72c0\u548c\u8a3a\u65b7\nGoogle Cloud \u63a7\u5236\u6aaf\u4e2d\u7684\u793a\u4f8b\u932f\u8aa4\uff1a\n```\nError: \"runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized\".\n```\n\u6b64\u932f\u8aa4\u53ef\u80fd\u6703\u5728\u4ee5\u4e0b\u60c5\u6cc1\u4e0b\u767c\u751f\uff1a\n- \u7576 GKE \u5b89\u88dd CNI \u914d\u7f6e\u6642\uff0c\u5728\u7bc0\u9ede\u5f15\u5c0e\u671f\u9593\u986f\u793a\u5728\u65e5\u8a8c\u6587\u4ef6\u4e2d\u3002\n- \u5982\u679c\u6514\u622a\u5275\u5efa Pod \u7684 DaemonSet \u63a7\u5236\u5668\u547d\u4ee4\u7684\u81ea\u5b9a\u7fa9\u7db2\u7d61\u9264\u5b50\u6709\u932f\u8aa4\uff0c\u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\u986f\u793a\u7232\u7bc0\u9ede\u932f\u8aa4\u72c0\u614b\u3002\u9019\u6703\u963b\u6b62 GKE \u5275\u5efa`netd`\u6216`calico-node`Pod\u3002\u5982\u679c\u7576\u932f\u8aa4\u4ecd\u7136\u5b58\u5728\u6642`netd`\u6216`calico-node`Pod \u6210\u529f\u5553\u52d5\uff0c\u8acb\u8207\u652f\u6301\u5718\u968a\u806f\u7e6b\u3002\n### \u89e3\u6c7a\u65b9\u6848\n\u5982\u9700\u89e3\u6c7a\u6b64\u554f\u984c\uff0c\u8acb\u5617\u8a66\u4ee5\u4e0b\u89e3\u6c7a\u65b9\u6848\uff1a\n- \u7b49\u5f85 GKE \u5b8c\u6210 CNI \u914d\u7f6e\u7684\u5b89\u88dd\u3002\n- \u79fb\u9664\u6240\u6709\u914d\u7f6e\u932f\u8aa4\u7684\u7db2\u7d61\u9264\u5b50\u3002\n- \u914d\u7f6e\u7db2\u7d61\u9264\u5b50\u4ee5 [\u5ffd\u7565\u7cfb\u7d71 Pod](https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#avoiding-operating-on-the-kube-system-namespace) \u3002## \u5f8c\u7e8c\u6b65\u9a5f\n[Cloud Customer Care](https://cloud.google.com/kubernetes-engine/docs/getting-support?hl=zh-cn)", "guide": "Google Kubernetes Engine (GKE)"}