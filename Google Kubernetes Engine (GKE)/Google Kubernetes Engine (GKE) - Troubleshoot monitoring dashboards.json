{"title": "Google Kubernetes Engine (GKE) - Troubleshoot monitoring dashboards", "url": "https://cloud.google.com/kubernetes-engine/docs/troubleshooting/dashboards", "abstract": "# Google Kubernetes Engine (GKE) - Troubleshoot monitoring dashboards\nThis page shows you how to resolve issues related monitoring dashboards for Google Kubernetes Engine (GKE).\n[Cloud Customer Care](/kubernetes-engine/docs/getting-support)\n", "content": "## GKE dashboards are not listed in Cloud Monitoring\nBy default Monitoring is enabled when you create a cluster. If you don't see GKE dashboards when you are [viewing provided Google Cloud dashboards](/monitoring/charts/predefined-dashboards) in Monitoring, Monitoring is not enabled for clusters in the selected Google Cloud project. [Enable monitoring](/stackdriver/docs/solutions/gke/installing) to view these dashboards.\n**Note:** For GKE Autopilot clusters, you cannot disable the Cloud Monitoring and Cloud Logging integration.\n## No Kubernetes resources are in my dashboard\nIf you don't see any Kubernetes resources in your GKE dashboard, then check the following:\n### Selected Google Cloud project\nVerify that you have selected the correct Google Cloud project from the drop-down list in the Google Cloud console menu bar to select a project. You must select the project whose data you want to see.\n### Clusters activity\nIf you just created your cluster, wait a few minutes for it to populate with data. See [Configuring logging and monitoring for GKE](/stackdriver/docs/solutions/gke/installing) for details.\n### Time range\nThe selected time range might be too narrow. You can use the **Time** menu in the dashboard toolbar to select other time ranges or define a **Custom** range.\n### Permissions to view the dashboard\nIf you see either of the following permission-denied error messages when viewing a service's deployment details or a Google Cloud project's metrics, you need to update your Identity and Access Management role to include **roles/monitoring.viewer** or **roles/viewer** :\n- `You do not have sufficient permissions to view this page`\n- `You don't have permissions to perform the action on the selected resources`\nFor more details, go to [Predefined roles](/monitoring/access-control#predefined_roles) .\n### Cluster and node service account permissions to write data to Monitoring and Logging\nIf you see high error rates in the **Enabled APIs and services** page in the Google Cloud console, then your service account might be missing the following roles:\n- `roles/logging.logWriter` : In the Google Cloud console, this role is named **Logs Writer** . For more information on Logging roles, see the [Logging access control guide](/logging/docs/access-control) .\n- `roles/monitoring.metricWriter` : In the Google Cloud console, this role is named **Monitoring Metric Writer** . For more information on Monitoring roles, see the [Monitoring accesscontrol guide](/monitoring/access-control) .\n- `roles/stackdriver.resourceMetadata.writer` : In the Google Cloud console, this role is named **Stackdriver Resource Metadata Writer** . This role permits write-only access to resource metadata, and it provides exactly the permissions needed by agents to send metadata. For more information on Monitoring roles, see the [Monitoring access control guide](/monitoring/access-control) .\nTo list your service accounts, in the Google Cloud console go to **IAM and Admin** , and then select **Service Accounts** .\n## Can't view logs\nIf you don't see your logs in dashboards, check the following:\n### Agent is running and healthy\nGKE version 1.17 and later use [Fluent Bit](https://fluentbit.io/) to capture logs. Fluent Bit is the Logging agent that runs on Kubernetes nodes. To check if the agent is running correctly, perform the following steps:\n- Check whether the agent is restarting by running the following command:```\nkubectl get pods -l k8s-app=fluentbit-gke -n kube-system\n```If there are no restarts, the output is similar to the following:```\nNAME     READY STATUS RESTARTS AGE\nfluentbit-gke-6zr6g 2/2  Running 0   44d\nfluentbit-gke-dzh9l 2/2  Running 0   44d\n```\n- Check Pod status conditions by running the following command:```\nJSONPATH='{range .items[*]};{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status},{end}{end};' \u00a0\\\u00a0&& kubectl get pods -l k8s-app=fluentbit-gke -n kube-system -o jsonpath=\"$JSONPATH\" | tr \";\" \"\\n\"\n```If the deployment is healthy, the output is similar to the following:```\nfluentbit-gke-nj4qs:Initialized=True,Ready=True,ContainersReady=True,PodScheduled=True,\nfluentbit-gke-xtcvt:Initialized=True,Ready=True,ContainersReady=True,PodScheduled=True,\n```\n- Check the Pod status, which can help determine if the deployment is healthy by running the following command:```\nkubectl get daemonset -l k8s-app=fluentbit-gke -n kube-system\n```If the deployment is healthy, the output is similar to the following:```\nNAME   DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR   AGE\nfluentbit-gke 2   2   2  2   2   kubernetes.io/os=linux 5d19h\n```In this example output, the desired state matches the current state.\nIf the agent is running and healthy in these scenarios, and you still don't see all of your logs, the agent might be overloaded and dropping logs.\n### Agent overloaded and dropping logs\nOne possible reason you're not seeing all of your logs is that the node's log volume is overloading the agent. The default Logging agent configuration in GKE is tuned for the rate of 100 kiB per second for each node, and the agent might start dropping logs if the volume exceeds that limit.\nTo detect if you might be hitting this limit, look for any of the following indicators:\n- View the `kubernetes.io/container/cpu/core_usage_time` metric with the filter `container_name=fluentbit-gke` to see if the CPU usage of the Logging agent is near or at 100%.\n- View the `logging.googleapis.com/byte_count` metric grouped by `metadata.system_labels.node_name` to see if any node reaches 100 kiB per second.\nIf you see any of these conditions, you can reduce the log volume of your nodes by adding more nodes to the cluster. If all of the log volume comes from a single pod, then you would need to reduce the volume from that pod.\nIf you want to change the Logging agent tuning parameters, see the community tutorial for [deploying a custom Logging agent configuration](https://github.com/GoogleCloudPlatform/community/blob/master/archived/kubernetes-engine-customize-fluentbit/index.md) .\nFor more information on investigating and resolving GKE logging related issues, see [Troubleshooting logging in GKE](/kubernetes-engine/docs/troubleshooting/troubleshooting-gke-logging) .\n## Incident isn't matched to a GKE resource?\nIf you have an alerting policy condition that aggregates metrics across distinct GKE resources, you might need to edit the policy's condition to include more GKE hierarchy labels to associate incidents with specific entities.\nFor example, you might have two GKE clusters, one for production and one for staging, each with their own copy of service `lilbuddy-2` . When the alerting policy condition aggregates a metric across containers in both clusters, the GKE Monitoring dashboard isn't able to associate this incident uniquely with the production service or the staging service.\nTo resolve this situation, target the alerting policy to a specific service by adding `namespace` , `cluster` , and `location` to the policy's **Group By** field. On the event card for the alert, click the **Update alert policy** link to open the **Edit alerting policy** page for the relevant alert policy. From here, you can update the alerting policy with the additional information so that the dashboard can find the associated resource.\nAfter you update the alerting policy, the GKE Monitoring dashboard is able to associate all future incidents with a unique service in a particular cluster, giving you additional information to diagnose the problem.\nDepending on your use case, you might want to filter on some of these labels in addition to adding them to the **Group By** field. For example, if you only want alerts for your production cluster, you can filter on `cluster_name` .\n## What's next\n[Cloud Customer Care](/kubernetes-engine/docs/getting-support)", "guide": "Google Kubernetes Engine (GKE)"}