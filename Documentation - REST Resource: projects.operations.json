{"title": "Documentation - REST Resource: projects.operations", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - REST Resource: projects.operations\nImportant: To access the URL listed within parentheses, you must connect to the internet. The URL is provided to access outside of your air-gapped environment.", "content": "## Resource: Operation\nThis resource represents a long-running operation that is the result of a network API call.| JSON representation                                                                      |\n|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| { \"name\": string, \"metadata\": { \"@type\": string, field1: ..., ... }, \"done\": boolean, // Union field result can be only one of the following: \"error\": { object (Status) }, \"response\": { \"@type\": string, field1: ..., ... } // End of list of possible types for union field result. } || Fields                                                                        | Fields.1                                                                                                                                                                   |\n|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------||\n| name                                                                        | string The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.                                                                                                                |\n| metadata                                                                       | object Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.An object containing fields of an arbitrary type. An additional field \"@type\" contains a URI identifying the type. Example: { \"id\": 1234, \"@type\": \"types.example.com/standard/id\" }.                                                |\n| done                                                                        | boolean If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.                                                                                                                              |\n| Union field result. The operation result, which can be either an error or a valid response. If done == false, neither error nor response is set. If done == true, exactly one of error or response may be set. Some services might not provide the result. result can be only one of the following: | Union field result. The operation result, which can be either an error or a valid response. If done == false, neither error nor response is set. If done == true, exactly one of error or response may be set. Some services might not provide the result. result can be only one of the following:                                                                                            |\n| error                                                                        | object (Status) The error result of the operation in case of failure or cancellation.                                                                                                                                                |\n| response                                                                       | object The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.An object containing fields of an arbitrary type. An additional field \"@type\" contains a URI identifying the type. Example: { \"id\": 1234, \"@type\": \"types.example.com/standard/id\" }. |\n## Status\nThe `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by `gRPC` (https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details.\nYou can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).| JSON representation                     |\n|:------------------------------------------------------------------------------------------------------|\n| { \"code\": integer, \"message\": string, \"details\": [ { \"@type\": string, field1: ..., ... } ] } || Fields | Fields.1                                                                        |\n|:----------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| code  | integer The status code, which should be an enum value of google.rpc.Code.                                                       |\n| message | string A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.                         |\n| details[] | object A list of messages that carry the error details. There is a common set of message types for APIs to use.An object containing fields of an arbitrary type. An additional field \"@type\" contains a URI identifying the type. Example: { \"id\": 1234, \"@type\": \"types.example.com/standard/id\" }. |\n| Methods | Methods.1              |\n|:----------|:-----------------------------------------------------------------|\n| get  | Gets the latest state of a long-running operation.    |\n| list  | Lists operations that match the specified filter in the request. |", "guide": "Documentation"}