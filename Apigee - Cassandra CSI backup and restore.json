{"title": "Apigee - Cassandra CSI backup and restore", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Cassandra CSI backup and restore\nYou are currently viewing version 1.9 of the Apigee hybrid documentation. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nStarting with Apigee hybrid 1.9, you can back up and restore your [hybrid data](/apigee/docs/hybrid/v1.9/cassandra-backup-overview#what-is-backed-up) using [CSI](https://kubernetes.io/docs/concepts/storage/volume-snapshots/) (Container Storage Interface) snapshots. CSI backup generates disk snapshots and stores them as encrypted data in cloud storage. CSI backup does not need a Google Cloud Storage bucket or a remote server to store backup data.\nCSI backup is recommended for hybrid instances hosted in Google Cloud, AWS, or Azure.\nThis page describes the steps to use hybrid CSI backup and restore. For an overview of hybrid back up and restore in general, see the [Cassandra backup and restore overview](/apigee/docs/hybrid/v1.9/cassandra-backup-overview) .\nWarning: Using the`apigeectl delete`command with the`--all`flag (for example,`apigeectl delete --all -f overrides.yaml`) will delete all snapshot backup data. To retain the snapshot backup data, exclude the`--all`flag (for example,`apigeectl delete -f overrides.yaml`).\n", "content": "## Backup and restore limitations\nBe aware of these limitations when using CSI backup and restore:\n- The CSI driver used by the configured storage class must support CSI snapshots. See this [Kubernetes CSI driver list](https://kubernetes-csi.github.io/docs/drivers.html) for driver information.\n- Not all platforms are supported. Only Google Cloud, AWS, and Azure platforms are supported.\n- OpenShift Container Platform is not supported due to volume snapshot [limitations](https://docs.openshift.com/container-platform/4.12/storage/container_storage_interface/persistent-storage-csi-snapshots.html#persistent-storage-csi-snapshots-create_persistent-storage-csi-snapshots) .\n- Only cloud platforms are supported. On-prem platforms are not supported.\n- CSI backup data and non-CSI hybrid backup data are incompatible. Non-CSI backups cannot be used with  CSI restore and CSI backups cannot be used with non-CSI restore.\n- CSI driver installation and functionality is the responsibility of the CSI driver vendor.\n- Users are responsible for ensuring adequate cluster resources are available for  provisioning CSI snapshots.\n- Users are responsible for removing old snapshot data.## Set up CSI backups\nTo schedule hybrid backups using CSI, perform the following steps:\n- If you have not previously set up hybrid backup:- Run the following`create-service-account`command to create a Google Cloud service account (SA) with the standard [roles/storage.objectAdmin](https://cloud.google.com/storage/docs/access-control/iam-roles) role.   This SA role allows you to write backup data   to Cloud Storage. Execute the following command in the`` `/hybrid-files`directory:```\n./tools/create-service-account --env non-prod --dir ./service-accounts\n```This command creates a single service account named`apigee-non-prod`for use in non-production environments and   places the downloaded key file in the`./service-accounts`directory. **Note:** If you prefer to create all the individual service   accounts for a production environment, use the following command:```\n./tools/create-service-account --env prod --dir ./service-accounts\n```For more information about Google Cloud service accounts, see [Creating  and managing service accounts](https://cloud.google.com/iam/docs/creating-managing-service-accounts) .\n- The`create-service-account`command saves a JSON file containing the   service account private key. The file is saved in the same directory   where the command executes. You will need the path to this file   in the following steps.\n- Open your`overrides.yaml`file. Set the follow parameters,  as shown in [Example overrides files](#example-overrides-files) .- Set the general parameters shown below in the`backup`block. If you've already set these parameters for the   non-CSI hybrid back up solution, you can use the same parameters for your CSI snapshots.   See [backup properties reference table](/apigee/docs/hybrid/v1.9/schedule-cassandra-backup-gcs#backup-properties-ref) for more information about each value.For `backup` :- **enabled:** Set to`true`to enable scheduled backups.\n- **pullPolicy in image:** Set to`Always`.\n- **serviceAccountPath:** The path to the service account.\n- **schedule:** Provide a [cron expression schedule](https://en.wikipedia.org/wiki/Cron#Cron_expression) .\n- Set these parameters for CSI-specific backup:- **Cassandra storage group values:** The configured Cassandra storage class must support CSI snapshots    for CSI backup and restore to work. To check if a storage class supports CSI snapshots, run    the following command to get the available storage classes:```\nkubectl get sc\n```Look at the \"Provisioner\" output for each storage class. Provisioners using CSI usually have a    \".csi.\" part to their name like \"pd.csi.storage.gke.io\". Look for the provisioner name in    this [Kubernetes CSI driver list](https://kubernetes-csi.github.io/docs/drivers.html) .    If the \"Other Features\" column for the provisioner contains    the word \"SNAPSHOT\", then the storage class using the provisioner supports CSI snapshots.Add these parameters in the storage group. Both values are required.- **storageclass:** A CSI snapshot-enabled storage class name.\n- **capacity:** The capacity of the disk.\n- **Cloud provider type:** Once the CSI snapshot capability has been verified, modify the overrides file to use    CSI backup and restore:- **cloudProvider:** Set`cloudProvider`in`backup`and`restore`to`CSI`.\n### Example backup config\n`overrides.yaml`\n```\ncassandra:\u00a0 hostNetwork: false\u00a0 replicaCount: 3\u00a0 \u00a0storage:\u00a0 \u00a0 storageclass: standard-rwo\u00a0 \u00a0 capacity: 100Gi\u00a0 image:\u00a0 \u00a0 \u00a0pullPolicy: Always\u00a0 backup:\u00a0 \u00a0enabled: true\u00a0 \u00a0image:\u00a0 \u00a0 \u00a0pullPolicy: Always\u00a0 \u00a0serviceAccountPath: \"/Users/myuser/apigee-hybrid/hybrid-files/service-accounts/mycompany-hybrid-apigee-cassandra.json\"\u00a0 \u00a0cloudProvider: \"CSI\"\u00a0 \u00a0schedule: \"0 * * 11 *\"\n```\n## Launch a manual backup\nCSI backups generate automatically according to the cron schedule set in the `overrides.yaml` file.\nTo initiate a manual CSI backup, use this command:\n```\nkubectl create job -n apigee --from=cronjob/apigee-cassandra-backup backup-pod-name\n```\n`backup-pod-name`\n## Verify backups\nOne way to verify a backup was successfully created is to check the volume snapshots on the Kubernetes cluster, using this command:\n```\nkubectl get volumesnapshot -n apigee\n```\nThe output shows the current list of snapshots on the cluster. The CSI backup process creates a snapshot of each Cassandra disk. The number of generated snapshots should match the total number of cassandra pods in the cluster.\n## Restore a backup\nUse this process to restore a previously generated CSI backup. For general information on  restoring backups and an overview of the process, see the [restore overview page](/apigee/docs/hybrid/v1.9/restore-cassandra-backup) .\nTo initiate a restore of a CSI backup, follow the instructions for the [hybrid non-CSI single region restore](/apigee/docs/hybrid/v1.9/restore-cassandra-single-region) ,  but use these values in the `restore` block in your `overrides.yaml` .  See the [backup properties reference table](/apigee/docs/hybrid/v1.9/schedule-cassandra-backup-gcs#backup-properties-ref) for more information about each value and the [example restore configuration](#example-restore-config) for an example.\n- **enabled:** Set to`true`to enable restore for the backup referenced with   the`snapshotTimestamp`timestamp.\n- **snapshotTimestamp:** Provide the timestamp of a previous CSI backup.\n- **serviceAccountPath:** The path to the service account.\n- **pullPolicy in image:** Set to`Always`.\nTo find the `snapshotTimestamp` value to restore, run this command to get the  list of available snapshots:\n```\nkubectl get volumesnapshot -n apigee\n```\n```\npvc-us-west2-b-20220803004907-47beff0e306d8861\n```\n`20220803004907`\nImportant: Terminating the Cassandra cluster is a normal part of the CSI restoration process. After terminating the cluster, the restore process creates new PVCs containing the backup data and then re-creates the Cassandra cluster using the new PVCs. Do not be concerned if you see the cluster terminating.\n### Example restore config\n`overrides.yaml`\n```\ncassandra:\u00a0 hostNetwork: false\u00a0 replicaCount: 3\u00a0 \u00a0storage:\u00a0 \u00a0 storageclass: standard-rwo\u00a0 \u00a0 capacity: 100Gi\u00a0 image:\u00a0 \u00a0 \u00a0pullPolicy: Always\u00a0 restore:\u00a0 \u00a0 enabled: true\u00a0 \u00a0 snapshotTimestamp: \"20220908222130\"\u00a0 \u00a0 serviceAccountPath: \"/Users/myuser/apigee-hybrid/hybrid-files/service-accounts/mycompany-hybrid-apigee-cassandra.json\"\u00a0 \u00a0 cloudProvider: \"CSI\"\u00a0 \u00a0 image:\u00a0 \u00a0 \u00a0 pullPolicy: Always\n```\n## Migrate to CSI backup and restore\nIf you have not previously used hybrid backup and restore, you can follow the instructions in [Set up CSI backups](#set-up-csi-backups) to create a new CSI backups without the steps in this section. These steps guide you through migrating from the non-CSI backup and restore solution to CSI backups.\n- Generate a new backup using the currently configured non-CSI backup method.\n- Change the backup configuration in the hybrid`overrides.yaml`file to use the CSI  backup overrides as shown in the [](#example-backup-config) example backup config.\n- Apply the changes in the`overrides.yaml`file:```\n$APIGEECTL_HOME/apigeectl apply -f YOUR_OVERRIDES_FILE\n```\n- Verify the backup job:```\nkubectl get cronjob -n apigee\n```\n- After a backup job completes, verify snapshots have been created. The number of  generated snapshots should be equivalent to the number of Cassandra nodes in the Hybrid instance.```\nkubectl get volumesnapshot -n apigee\n```", "guide": "Apigee"}