{"title": "Compute Engine - Create a shared reservation", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Create a shared reservation\nThis document explains how to create shared reservations, which are reservations shared across multiple projects, and manage which projects in your organization can consume the shared reservations.\nA shared reservation can be used by the project that hosts the reservation (owner project) and by the projects the reservation is shared with (consumer projects). Use shared reservations if your organization has multiple projects that need virtual machine (VM) instances with the same properties reserved. By using shared reservations, you can improve the utilization of your reservations and reduce the number of reservations that you need to create and manage. To learn more about reservations, see [Reservations of Compute Engine zonal resources](/compute/docs/instances/reservations-overview) .\nFor other methods of creating reservations, see instead the following pages:\n- If you have any 1-year or 3-years commitments in the current project, then your reserved resources automatically receive any applicable committed use discounts (CUDs). You can also create and attach a reservation to a commitment when you purchase the commitment. To learn more, see [Attach reservations to commitments](/compute/docs/instances/reservations-with-commitments) .\n- To create a reservation that can only be used by a single project, see [Create a reservation for a single project](/compute/docs/instances/reservations-single-project) .\n**Note:** After you create a reservation, it incurs charges for its reserved resources, even when it's not being consumed, until you delete it. For more information, see [Billing](/compute/docs/instances/reservations-overview#reservation-billing) .\n", "content": "## Before you begin\n- Review the [requirements](/compute/docs/instances/reservations-overview#requirements) and [restrictions](/compute/docs/instances/reservations-overview#restrictions) for reservations.\n- Review the [requirements](/compute/docs/instances/reservations-overview#requirements-shared-reservations) and [restrictions](/compute/docs/instances/reservations-overview#restrictions-shared-reservations) for shared reservations.\n- Make sure the project you use to create shared reservations has been added to the allowlist for the **Shared Reservations Owner Projects** (`compute.sharedReservationsOwnerProjects`) organization policy constraint by an organization policy administrator. This allowlist is empty by default, so you can't create shared reservations until your organization grants this permission to one or more projects. For more details on viewing and editing the organization policy constraint, see [Allowing and restricting projects fromcreating and modifying shared reservations](#shared_reservation_constraint) in this document.\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\nTo use the Terraform samples on this page from a local development environment, install and initialize the gcloud CLI, and then set up Application Default Credentials with your user credentials.- [Install](/sdk/docs/install) the Google Cloud CLI.\n- To [initialize](/sdk/docs/initializing) the gcloud CLI, run the following command:```\ngcloud init\n```\n- Create local authentication credentials for your Google Account:```\ngcloud auth application-default login\n```\nFor more information, see [   Set up authentication for a local development environment](/compute/docs/authentication#local-development) .To use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```\n### Required roles\nTo get the permissions that you need to create shared reservations,   ask your administrator to grant you the  following IAM roles:\n- [Compute Admin ](https://cloud.google.com/iam/docs/understanding-roles#compute.admin) (`roles/compute.admin`)    on the project\n- To view and edit organization policies: [Organization Policy Administrator ](https://cloud.google.com/iam/docs/understanding-roles#orgpolicy.policyAdmin) (`roles/orgpolicy.policyAdmin`)    on the organization\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nThese predefined roles contain     the permissions required to create shared reservations. To see the exact permissions that are   required, expand the **Required permissions** section:\nYou might also be able to get   these permissions  with [custom roles](/iam/docs/creating-custom-roles) or  other [predefined roles](/iam/docs/understanding-roles) .\n## Best practices\nWhen creating shared reservations, the following best practices are recommended. By following them, you can help optimize the manageability and utilization of shared reservations in your organization.\n- **Have the owner project create the shared reservation but not consume it.\n ** - To spread spendings across projects, it's recommended to only have  consumer projects consume a shared reservation. The owner project should  only be used to create the shared reservation.\n- The owner project must have sufficient quota for twice the resources  to reserve. For more information, see [  Additional requirements for shared reservations](/compute/docs/instances/reservations-overview#requirements-shared-reservations) .\n- **Minimize the number of projects in your organization that you allow to\n create shared reservations. You can control this through the Shared\n Reservations Owner Projects\n (compute.sharedReservationsOwnerProjects) organization policy\n constraint.** - You can only list the reservations created by each project. This means  that shared reservations are only listed in the owner project\u2014you  cannot list the reservations shared with each project or list all shared  reservations in each organization\u2014so having only a few owner  projects makes it easier to monitor and manage your shared  reservations.\n- Limit the sharing of a shared reservation to a few projects only to  manage the quota of your reserved resources more easily.\n- For more information, see [Allow and restrict projects from  creating and modifying shared reservations](#shared_reservation_constraint) .\n- **Minimize the number of separate shared reservations with identical VM\n properties.** - An organization can have up to 100 shared reservations for each unique  combination of [VM  properties](/compute/docs/instances/reservations-overview#requirements) . As a result, minimizing the number of shared reservations  with identical VM properties that you create helps mitigate this  limit.\n- Having fewer shared reservations improves manageability.\n- **Only share reservations between projects with the same Cloud Billing\n account.** - Limit each shared reservation to only be shared with consumer projects  that have the same Cloud Billing account as the owner project.  This makes it easier for you to see if a reservation was consumed and how  it was billed.\n- If you enabled [  CUD sharing](/compute/docs/instances/signing-up-committed-use-discounts#share-committed-use-discounts-across-projects) and you're eligible to receive CUDs at the  Cloud Billing account level, then, to maximize the CUDs you  receive for your consumed reservations, limit your shared reservations to  that commitment's Cloud Billing account. Doing this lets you  maintain consistent billing across projects that create and consume shared  reservations.\n- **For future reservation requests, carefully review the total count of VMs\n that you request.** - If you are creating a [future  reservation request](/compute/docs/instances/create-shared-future-reservations) , ensure that you request aof  VMs that accounts for all of the following:- All matching reserved VMs that will already exist at the future   date.\n- All matching unreserved VMs that will already exist at the future   date.\n- Any matching unused on-demand reservations that will already exist   at the future date.\n- The increase in usage that you want to reserve at the future   date.\nFor example, suppose you need 10 additional VMs at the future date and  you'll already have the following resources at the future date:- 40 matching reserved VMs\n- 50 matching unreserved VMs\nor- 40 matching reserved VMs\n- 50 matching unused on-demand reservations\nBecause your existing usage at the future date already adds up to 90  matching VMs and reservations, and you need an additional ten VMs, you  must specify a total count of `100` in your future reservation  request. **Note:** If you create additional on-demand reservations after  submitting the future reservation request and before the future date, then  those are counted toward your total count.If after the future  date, you add more on-demand reservations, then those reservations are  added on top of the previous total count. For example, if after the future  date, you reserve another ten VMs, then you have 110 reservations.For more information, see [  Count and provision reserved resources](/compute/docs/instances/future-reservations-overview#count-reserved-resources) .\n## Allow and restrict projects from creating and modifying shared reservations\nBy default, no projects are allowed to create or modify shared reservations in an organization. Add projects to the [Shared Reservations Owner Projects (compute.sharedReservationsOwnerProjects) organization policy constraint](/resource-manager/docs/organization-policy/org-policy-constraints#:%7E:text=compute.sharedReservationsOwnerProjects) to allow them to create and modify shared reservations. For more information about organization policy constraints, see [Introduction to the Organization Policy Service](/resource-manager/docs/organization-policy/overview) .\nUse the following steps to view and edit the **Shared Reservations Owner Projects** ( `compute.sharedReservationsOwnerProjects` ) organization policy constraint.\n### View the shared reservations organization policy constraint\nTo see which projects are allowed to create and modify shared reservations, use the Google Cloud console or gcloud CLI.\nFollow the steps for [Viewing organization policies](/resource-manager/docs/organization-policy/creating-managing-policies#viewing_organization_policies) using the **Shared Reservations Owner Projects** constraint.\nTo see which projects the `compute.sharedReservationsOwnerProjects` constraint allows to create and modify shared reservations:- Download the policy for your organization as a file named `policy.yaml` , using the [gcloud resource-manager org-policies describe command](/sdk/gcloud/reference/resource-manager/org-policies/describe) :```\ngcloud resource-manager org-policies describe compute.sharedReservationsOwnerProjects --organization=ORGANIZATION_ID > policy.yaml\n```Replace with the [organization ID](/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id) of your organization.\n- Use a text editor to open the `policy.yaml` file and view the `compute.sharedReservationsOwnerProjects` constraint. The projects that are allowed to create and modify shared reservations are listed under its `allowedValues` :```\n...\nconstraint: constraints/compute.sharedReservationsOwnerProjects\nlistPolicy:\n allowedValues:\n - projects/PROJECT_NUMBER_1\n - projects/PROJECT_NUMBER_2\n - projects/PROJECT_NUMBER_3\n...\n```where , , and are the [project numbers](/resource-manager/docs/creating-managing-projects#identifying_projects) of the only projects in your organization that are allowed to create shared reservations.\n- Optional: Delete the `policy.yaml` file.- If you are using a Linux or macOS terminal, use the following command:```\nrm policy.yaml\n```\n- If you are using a Windows terminal, use the following command:```\ndel policy.yaml\n```\n### Edit the shared reservations organization policy constraint\nTo edit which projects are allowed to create and modify shared reservations, use the Google Cloud console or gcloud CLI.\nFollow the steps for [Customizing policies for list constraints](/resource-manager/docs/organization-policy/creating-managing-policies#list_constraints) using the **Shared Reservations Owner Projects** constraint.\n **Note:** You must specify the [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) (not project ID) for each project that you want to allow to create shared reservations.\nTo edit which projects the `compute.sharedReservationsOwnerProjects` constraint allows to create and modify shared reservations, use one of the following methods:- To **grant permission to a single project** to create and modify shared reservations, use the [gcloud resource-manager org-policies allow command](/sdk/gcloud/reference/resource-manager/org-policies/allow) . You can repeat this command for each project that you want to grant this permission to.```\ngcloud resource-manager org-policies allow compute.sharedReservationsOwnerProjects projects/PROJECT_NUMBER \\\n --organization=ORGANIZATION_ID\n```Replace the following:- : the [project number](/resource-manager/docs/creating-managing-projects#identifying_projects) (not project ID) of a project in your organization that you want to allow to create and modify shared reservations.\n- : the [organization ID](/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id) of your organization.\n- To **grant or revoke the permissions for multiple projects** to create and modify shared reservations, replace the organization policy constraint:- To download the policy for your organization as a file named `policy.yaml` , use the [gcloud resource-manager org-policies describe command](/sdk/gcloud/reference/resource-manager/org-policies/describe) :```\ngcloud resource-manager org-policies describe compute.sharedReservationsOwnerProjects --organization=ORGANIZATION_ID > policy.yaml\n```Replace with the [organization ID](/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id) of your organization.\n- Use a text editor to modify the `policy.yaml` file so that the `compute.sharedReservationsOwnerProjects` constraint lists all of the projects that you want to be allowed to create and modify shared reservations under its `allowedValues` .- For each project that you want to grant the permission to create and modify shared reservations, add the project in a new line under`allowedValues`.\n- For each project that you want to revoke the permission to create and modify shared reservations, delete the line for that project.\nWhen you are finished, make sure the `policy.yaml` file looks similar to the following:```\n...\nconstraint: constraints/compute.sharedReservationsOwnerProjects\nlistPolicy:\n allowedValues:\n - projects/PROJECT_NUMBER_1\n - projects/PROJECT_NUMBER_2\n - projects/PROJECT_NUMBER_3\n...\n```where , , and are the [project numbers](/resource-manager/docs/creating-managing-projects#identifying_projects) (not project IDs) of all of the projects in your organization that you want to be allowed to create and modify shared reservations.\n- Save the `policy.yaml` file and close the text editor.\n- To update the policy for your organization with your changes, use the [gcloud resource-manager org-policies set-policy command](/sdk/gcloud/reference/resource-manager/org-policies/set-policy) :```\ngcloud resource-manager org-policies set-policy --organization=ORGANIZATION_ID policy.yaml\n```Replace with the [organization ID](/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id) of your organization.\n- Optional: Delete the `policy.yaml` file.- If you are using a Linux or macOS terminal, use the following command:```\nrm policy.yaml\n```\n- If you are using a Windows terminal, use the following command:```\ndel policy.yaml\n```\nYou might need to wait a few minutes for the edit to take effect.\n## Create a shared reservation\nThis section explains how to create shared reservations. After you create a shared reservation, it can be modified only by the owner project, but the resources for a shared reservation can be consumed by the owner project or any consumer projects.\nTo consume a reservation, a VM must have [properties that exactly match](/compute/docs/instances/reservations-overview#requirements) that reservation. To specify the properties of the VMs that you want to reserve, select one of the following sections in this document:\n- Recommended: [Specify an instance template](#specify-instance-template) This section explains how to use an [instance template](/compute/docs/instance-templates) to define the properties of a shared reservation. By using an instance template, you can define the properties of a reservation and the VMs that can consume the reservation in the same place. However, because templates are project-specific, you can't use the same template to create VMs that can consume the reservation outside of the project that created the reservation. For the projects the reservation is shared with, you must create similar templates in those projects or create VMs by specifying properties directly.\n- [Specify properties directly](#specify-vm-properties) This section explains how to directly define the properties of a shared reservation. This method requires you to manually ensure that the properties of your VMs and reservations match \u2014any [mismatched properties prevent consumption](/compute/docs/troubleshooting/troubleshooting-reservation-consumption#mismatched-vm-properties) .\nBy default, a reservation can be automatically consumed by any VMs with properties that match it. If you want to control reservation consumption, do one or more of the following:\n- Create a reservation that can only be consumed by VMs that specifically target it, as explained in the following sections in this document. Then, [configure VMs to consume that specific reservation](/compute/docs/instances/reservations-consume#consuming_instances_from_a_specific_reservation) .\n- Configure [VMs that can't consume any reservations](/compute/docs/instances/reservations-consume#creating_instances_without_consuming_reservations) .\n### Specify an instance template\nTo create a shared reservation by specifying an instance template, you can use the Google Cloud console, gcloud CLI, or REST.\n**Caution:** Make sure of the following:- An instance template contains project-specific settings, so you can only access and use an instance template within the same project. If you create a shared reservation by specifying an instance template, you can't use the same template to create VMs that can consume the reservation outside of the project that created the reservation.\n- Create your reservation in the same region and zone as the resources within the instance template. Any [ regional](/compute/docs/regions-zones/global-regional-zonal-resources#regionalresources) or [ zonal resources](/compute/docs/regions-zones/global-regional-zonal-resources#zoneresource) that are specified in an instance template\u2014such as a machine type or a disk\u2014restrict the use of the template to the locations where those resources exist. For example, if your instance template specifies an existing disk in the`us-central1-a`zone, then you must create your reservation in the same zone. Otherwise, creating the reservation or the VMs that can consume the reservation fails.To check if an existing template specifies any resources that bind the template to a specific region or zone, [ describe the instance template](/compute/docs/instance-templates/get-list-delete-instance-templates#get_information_about_an_instance_template) and look for references to regional or zonal resources inside of it.To create a shared reservation by specifying an instance template, do the following:- In the Google Cloud console, go to the **Reservations** page. [Go to Reservations](https://console.cloud.google.com/compute/reservations) The **Reservations** page appears.\n- Click add_box **Create reservation** .The **Create a reservation** page appears.\n- In the **Name** field, enter a name for your reservation.\n- Select the **Region** and **Zone** where you want to reserve resources.\n- In the **Share type** section, do the following:- To specify a shared reservation, click **Shared** .\n- Click add **Add projects** , and then select the projects from the current project's organization that you want to share the reservation with.\n- In the **Use with VM instance** section, select one of the following options:- To allow matching VM instances to automatically use this reservation, click **Use reservation automatically** (default).\n- To consume this reservation's resources only when creating matching VMs that specifically target this reservation by name, click **Select specific reservation** .\n- In the **Number of VM instances** field, enter the number of VMs that you want to reserve.\n- In the **Machine configuration** section, do the following:- To specify the properties of your VMs from an existing [instance template](/compute/docs/instance-templates) , select **Use instance template** .\n- In the **Instance template** field, select the instance template of your choice. If you select a regional instance template, you can only reserve resources within the region of the instance template.\n- In the **Auto-delete** section, you can enable the auto-delete option to let Compute Engine automatically delete the reservation at a specific date and time. Automatically deleting reservations can be useful to avoid unnecessary charges when you stop consuming the reservation.\n- To create the reservation, click **Create** .Creating the shared reservation might take some time to complete. This action redirects you to the **Reservations** page.\nTo create a shared reservation by specifying an instance template, use the [gcloud compute reservations create command](/sdk/gcloud/reference/compute/reservations/create) .\nTo create a shared reservation by specifying an instance template without any optional flags, run the following command:\n```\ngcloud compute reservations create RESERVATION_NAME \\\n --project=PROJECT_ID \\\n --share-setting=projects \\\n --share-with=CONSUMER_PROJECT_IDS \\\n --source-instance-template=projects/PROJECT_ID/LOCATION/instanceTemplates/INSTANCE_TEMPLATE_NAME \\\n --vm-count=NUMBER_OF_VMS \\\n --zone=ZONE\n```\nReplace the following:- `` : the name of the reservation to create.\n- `` : the ID of the project where you want to reserve resources and where the instance template exists.\n- `` : a comma-separated list of [IDs of projects](/resource-manager/docs/creating-managing-projects#identifying_projects) that can consume this reservation\u2014for example, `project-1,project-2` . You can include up to 100 consumer projects. These projects must be in the same organization as the owner project. Don't include the owner project. By default, it is already allowed to consume the reservation.\n- `` : the location of the instance template. Specify one of the following values:- For a global instance template: `global` .\n- For a regional instance template: `regions/` `` . Replace `` with the region where the instance template is located. If you specify a regional instance template, you can only reserve VMs within the region of the instance template.\n- `` : the name of an existing instance template. If you specify an instance template, you can't override any of its properties when creating the reservation. Otherwise, you encounter [errors](/compute/docs/troubleshooting/troubleshoot-future-reservations#override-instance-template) .\n- `` : the number of VMs to reserve.\n- `` : the zone in which to reserve resources.\nFor example, to create a reservation by specifying a global instance template in zone `us-central1-a` , share the reservation with projects `project-1` and `project-2` , and reserve ten VMs that each use an N2 predefined machine type with 4\u00a0vCPUs, run the following command:\n```\ngcloud compute reservations create my-reservation \\\n --project=example-project \\\n --share-setting=projects \\\n --share-with=project-1,project-2 \\\n --source-instance-template=projects/example-project/global/example-instance-template \\\n --vm-count=10 \\\n --zone=us-central1-a\n```\nOptionally, you can do one or more of the following:- To specify that only VMs that [specifically target this reservation](/compute/docs/instances/reservations-consume#consuming_instances_from_a_specific_reservation) can consume it, include the `--require-specific-reservation` flag.```\ngcloud compute reservations create example-reservation \\\n --require-specific-reservation \\\n ...\n```\n- To enable Compute Engine to [automatically delete the reservation](/compute/docs/instances/reservations-overview#auto-delete) , select one of the following methods: **    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .- To delete the reservation at a specific date and time, use the [gcloud beta compute reservations create command](/sdk/gcloud/reference/beta/compute/reservations/create) and include the `--delete-at-time` flag.```\ngcloud beta compute reservations create reservation-example \\\n --delete-at-time=DELETE_AT_TIME \\\n ...\n```Replace `` with a date and time formatted as an [RFC 3339 timestamp](https://tools.ietf.org/html/rfc3339) , which must be as follows:```\nYYYY-MM-DDTHH:MM:SSOFFSET\n```Replace the following:- `` : a date formatted as a 4-digit year, 2-digit month, and a 2-digit day of the month, separated by hyphens ( `-` ).\n- `` : a time formatted as a 2-digit hour using a 24-hour time, 2-digit minutes, and 2-digit seconds, separated by colons ( `:` ).\n- `` : the time zone formatted as an offset of [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) . For example, to use the Pacific Standard Time (PST), specify `-08:00` . Alternatively, to use no offset, specify `Z` .\n- To delete the reservation after a specific duration, use the [gcloud beta compute reservations create command](/sdk/gcloud/reference/beta/compute/reservations/create) and include the `--delete-after-duration` flag.```\ngcloud beta compute reservations create reservation-example \\\n --delete-after-duration=DELETE_AFTER_DURATION \\\n ...\n```Replace `` with a duration in days, hours, minutes, or seconds. For example, specify `30m` for 30 minutes, or `1d2h3m4s` for 1 day, 2 hours, 3 minutes, and 4 seconds.\nTo create a shared reservation by specifying an instance template, make a `POST` request to the [reservations.insert method](/compute/docs/reference/rest/v1/reservations/insert) .\nFor example, to create a shared reservation by specifying an instance template without any optional fields and share the reservation with two consumer projects, make the following `POST` request:\n```\nPOST https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/reservations{\u00a0 \"name\": \"RESERVATION_NAME\",\u00a0 \"shareSettings\": {\u00a0 \u00a0 \"shareType\": \"SPECIFIC_PROJECTS\",\u00a0 \u00a0 \"projectMap\": {\u00a0 \u00a0 \u00a0 \"CONSUMER_PROJECT_ID_1\": {\u00a0 \u00a0 \u00a0 \u00a0 \"projectId\": \"CONSUMER_PROJECT_ID_1\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"CONSUMER_PROJECT_ID_2\": {\u00a0 \u00a0 \u00a0 \u00a0 \"projectId\": \"CONSUMER_PROJECT_ID_2\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 },\u00a0 \"specificReservation\": {\u00a0 \u00a0 \"count\": \"NUMBER_OF_VMS\",\u00a0 \u00a0 \"sourceInstanceTemplate\": \"projects/PROJECT_ID/LOCATION/instanceTemplates/INSTANCE_TEMPLATE_NAME\"\u00a0 }}\n```\nReplace the following:- `` : the ID of the project where you want to reserve resources and where the instance template exists.\n- `` : the zone in which to reserve resources.\n- `` : the name of the reservation to create.\n- `` and `` : the [IDs of projects](/resource-manager/docs/creating-managing-projects#identifying_projects) that can consume this reservation. You can include up to 100 consumer projects. These projects must be in the same organization as the owner project. Don't include the owner project. By default, it is already allowed to consume the reservation.\n- `` : the number of VMs to reserve.\n- `` : the location of the instance template. Specify one of the following values:- For a global instance template: `global` .\n- For a regional instance template: `regions/` `` . Replace `` with the region where the instance template is located. If you specify a regional instance template, you can only reserve VMs within the region of the instance template.\n- `` : the name of an existing instance template. If you specify an instance template, you can't override any of its properties when creating the reservation. Otherwise, you encounter [errors](/compute/docs/troubleshooting/troubleshoot-future-reservations#override-instance-template) .\nFor example, to create a reservation for ten VMs in zone `us-central1-a` by specifying a global instance template, and share the reservation with projects `project-1` and `project-2` , make the following `POST` request:\n```\nPOST https://compute.googleapis.com/compute/v1/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"my-reservation\",\u00a0 \"shareSettings\": {\u00a0 \u00a0 \"shareType\": \"SPECIFIC_PROJECTS\",\u00a0 \u00a0 \"projectMap\": {\u00a0 \u00a0 \u00a0 \"project-1\": {\u00a0 \u00a0 \u00a0 \u00a0 \"projectId\": \"project-1\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"project-2\": {\u00a0 \u00a0 \u00a0 \u00a0 \"projectId\": \"project-2\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 },\u00a0 \"specificReservation\": {\u00a0 \u00a0 \"count\": \"10\",\u00a0 \u00a0 \"sourceInstanceTemplate\": \"projects/example-project/global/instanceTemplates/example-instance-template\"\u00a0 }}\n```\nOptionally, you can do one or more of the following:- To specify that only VMs that [specifically target this reservation](/compute/docs/instances/reservations-consume#consuming_instances_from_a_specific_reservation) can consume it, include the `specificReservationRequired` field in the request body and set it to `true` .```\nPOST https://compute.googleapis.com/compute/v1/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"example-reservation\",\u00a0 \"specificReservationRequired\": true,\u00a0 ...}\n```\n- To enable Compute Engine to [automatically delete the reservation](/compute/docs/instances/reservations-overview#auto-delete) , select one of the following methods: **    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .- To delete the reservation at a specific date and time, make a `POST` request to the [beta.reservations.insert method](/compute/docs/reference/rest/beta/reservations/insert) . In the request body, include the `deleteAtTime` field.```\nPOST https://compute.googleapis.com/compute/beta/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"example-reservation\",\u00a0 \"deleteAtTime\": \"DELETE_AT_TIME\",\u00a0 ...}\n```Replace `` with a date and time formatted as an [RFC 3339 timestamp](https://tools.ietf.org/html/rfc3339) , which must be as follows:```\nYYYY-MM-DDTHH:MM:SSOFFSET\n```Replace the following:- `` : a date formatted as a 4-digit year, 2-digit month, and a 2-digit day of the month, separated by hyphens ( `-` ).\n- `` : a time formatted as a 2-digit hour using a 24-hour time, 2-digit minutes, and 2-digit seconds, separated by colons ( `:` ).\n- `` : the time zone formatted as an offset of [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) . For example, to use the Pacific Standard Time (PST), specify `-08:00` . Alternatively, to use no offset, specify `Z` .\n- To delete the reservation after a specific duration, make a `POST` request to the [beta.reservations.insert method](/compute/docs/reference/rest/beta/reservations/insert) . In the request body, include the `deleteAfterDuration` field.```\nPOST https://compute.googleapis.com/compute/beta/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"example-reservation\",\u00a0 \"deleteAfterDuration\": {\u00a0 \u00a0 \"seconds\": \"DELETE_AFTER_DURATION\"\u00a0 },\u00a0 ...}\n```Replace `` with a duration in seconds. For example, specify `86400` for 86,400 seconds (1 day).\n### Specify VM properties directly\nTo create a shared reservation by specifying properties directly, use the Google Cloud console, gcloud CLI, Terraform, or REST.\nTo create a shared reservation, do the following:- In the Google Cloud console, go to the **Reservations** page. [Go to Reservations](https://console.cloud.google.com/compute/reservations) The **Reservations** page appears.\n- Click add_box **Create reservation** .The **Create a reservation** page appears.\n- In the **Name** field, enter a name for your reservation.\n- Select the **Region** and **Zone** where you want to reserve resources.\n- In the **Share type** section, do the following:- To specify a shared reservation, click **Shared** .\n- Click add **Add projects** , and then select the projects from the current project's organization that you want to share the reservation with.\n- In the **Use with VM instance** section, select one of the following options:- To allow matching VMs to automatically consume this reservation, click **Use reservation automatically** (default).\n- To consume this reservation's resources only when creating matching VMs that specifically target this reservation by name, click **Select specific reservation** .\n- In the **Number of VM instances** field, enter the number of VMs that you want to reserve.\n- In the **Machine configuration** section, select **Specify machine type** , and then specify the following:- In the **Machine family** , **Series** , and **Machine type** fields, select a machine family, series, and machine type.\n- Optional: To specify a minimum CPU platform and/or GPUs, do the following:- To expand the **CPU Platform and GPU** section, click the expand_more expander arrow.\n- Optional: To specify a minimum CPU platform, in the **CPU Plaform** list, select an option.\n- Optional: To add GPUs, click add **Add GPU** . Then, in the **GPU type** and **Number of GPUs** fields, select the type and number of GPUs for each VM.\n- Optional: To add Local SSDs, do the following:- In the **Number of disks** field, select the number of Local SSDs for each VM.\n- In the **Interface type** field, select the interface for the Local SSDs.\n- In the **Auto-delete** section, you can enable the auto-delete option to let Compute Engine automatically delete the reservation at a specific date and time. Automatically deleting reservations can be useful to avoid unnecessary charges when you stop consuming the reservation.\n- To create the reservation, click **Create** .Creating the shared reservation might take some time to complete. This action redirects you to the **Reservations** page.\nTo create a shared reservation, use the [gcloud compute reservations create command](/sdk/gcloud/reference/compute/reservations/create) .\nTo create a shared reservation without any optional flags, run the following command:\n```\ngcloud compute reservations create RESERVATION_NAME \\\n --machine-type=MACHINE_TYPE \\\n --project=PROJECT_ID \\\n --share-setting=projects \\\n --share-with=CONSUMER_PROJECT_IDS \\\n --vm-count=NUMBER_OF_VMS \\\n --zone=ZONE\n```\nReplace the following:- `` : the name of the reservation to create.\n- `` : a [machine type](/compute/docs/machine-resource) to use for each VM. Specify one of the following values:- For a predefined machine type: `` `-standard-` `` .\n- For a custom machine type: `` `-custom-` `` `-` `` . Before specifying a custom machine type, review the [limitations](/compute/docs/instances/creating-instance-with-custom-machine-type#limitations) for VMs with custom machine types.\nReplace the following:- `` : the machine family.\n- `` : the number of vCPUs.\n- `` : the total memory for a reserved VM. Memory must be a multiple of 256\u00a0MB and must be supplied in MB.\nFor example, to specify an N2 custom machine type with 4\u00a0vCPUs and 5\u00a0GB of memory, which is 5,120\u00a0MB, specify `n2-custom-4-5120` .\n- `` : the ID of the project where you want to reserve resources.\n- `` : a comma-separated list of [IDs of projects](/resource-manager/docs/creating-managing-projects#identifying_projects) that can consume this reservation\u2014for example, `project-1,project-2` . You can include up to 100 consumer projects. These projects must be in the same organization as the owner project. Don't include the owner project. By default, it is already allowed to consume the reservation.\n- `` : the number of VMs to reserve.\n- `` : the zone in which to reserve resources.\nFor example, to create a reservation for ten VMs in zone `us-central1-a` by specifying a global instance template, and share the reservation with projects `project-1` and `project-2` , run the following command:\n```\ngcloud compute reservations create my-reservation \\\n --machine-type=n2-standard-4 \\\n --project=example-project \\\n --share-setting=projects \\\n --share-with=project-1,project-2 \\\n --vm-count=10 \\\n --zone=us-central1-a\n```\nOptionally, you can do one or more of the following:- To add [graphics processing units (GPUs)](/compute/docs/gpus) to each reserved VM, include the `--accelerator` flag.```\ngcloud compute reservations create my-reservation \\\n --accelerator=count=NUMBER_OF_ACCELERATORS,type=ACCELERATOR_TYPE\n ...\n```Replace the following:- `` : the number of GPUs to add per reserved VM.\n- `` : the type of GPU to add to the reserved VMs.\nMake sure that the machine type you specify in the reservation supports the types of GPUs you specify and that [the GPU is available in the zone](/compute/docs/gpus/gpu-regions-zones) where you want to reserve resources. Otherwise, creating the reservation fails.\n- To add one or more [Local SSDs](/compute/docs/disks#localssds) to each reserved VM, include one or more `--local-ssd` flags. You can specify up to 24 Local SSDs. Each Local SSD is 375\u00a0GB.For example, to specify two Local SSDs when creating a reservation, include two `--local-ssd` flags.```\ngcloud compute reservations create my-reservation \\\n --local-ssd=size=375,interface=INTERFACE_1 \\\n --local-ssd=size=375,interface=INTERFACE_2 \\\n ...\n```Replace `` and `` with the type of interface you want each Local SSD to use. Specify one of the following values:- For NVME disk interfaces: `nvme` .\n- For SCSI disk interfaces: `scsi` .\nMake sure that the machine type you specify for the reserved VMs supports the chosen disk interfaces. Otherwise, creating the reservation fails. For more information, see how to [choose a disk interface](/compute/docs/disks/local-ssd#choose_an_interface) .\n- To have the reserved VMs use a specific [minimum CPU platform](/compute/docs/instances/specify-min-cpu-platform) instead of the zone's default CPU platform, include the `--min-cpu-platform` flag.```\ngcloud compute reservations create my-reservation \\\n --min-cpu-platform=\"MIN_CPU_PLATFORM\" \\\n ...\n```Replace `` with a minimum CPU platform. To make sure that a CPU platform is available in the zone where you're reserving resources, [view the available CPU platforms by zone](/compute/docs/instances/specify-min-cpu-platform#cpusbyzone) .\n- To specify that only VMs that [specifically target this reservation](/compute/docs/instances/reservations-consume#consuming_instances_from_a_specific_reservation) can consume it, include the `--require-specific-reservation` flag.```\ngcloud compute reservations create example-reservation \\\n --require-specific-reservation \\\n ...\n```\n- To enable Compute Engine to [automatically delete the reservation](/compute/docs/instances/reservations-overview#auto-delete) , select one of the following methods: **    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .- To delete the reservation at a specific date and time, use the [gcloud beta compute reservations create command](/sdk/gcloud/reference/beta/compute/reservations/create) and include the `--delete-at-time` flag.```\ngcloud beta compute reservations create reservation-example \\\n --delete-at-time=DELETE_AT_TIME \\\n ...\n```Replace `` with a date and time formatted as an [RFC 3339 timestamp](https://tools.ietf.org/html/rfc3339) , which must be as follows:```\nYYYY-MM-DDTHH:MM:SSOFFSET\n```Replace the following:- `` : a date formatted as a 4-digit year, 2-digit month, and a 2-digit day of the month, separated by hyphens ( `-` ).\n- `` : a time formatted as a 2-digit hour using a 24-hour time, 2-digit minutes, and 2-digit seconds, separated by colons ( `:` ).\n- `` : the time zone formatted as an offset of [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) . For example, to use the Pacific Standard Time (PST), specify `-08:00` . Alternatively, to use no offset, specify `Z` .\n- To delete the reservation after a specific duration, use the [gcloud beta compute reservations create command](/sdk/gcloud/reference/beta/compute/reservations/create) and include the `--delete-after-duration` flag.```\ngcloud beta compute reservations create reservation-example \\\n --delete-after-duration=DELETE_AFTER_DURATION \\\n ...\n```Replace `` with a duration in days, hours, minutes, or seconds. For example, specify `30m` for 30 minutes, or `1d2h3m4s` for 1 day, 2 hours, 3 minutes, and 4 seconds.\nTo create a reservation, use the [google_compute_reservation Terraform resource](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_reservation) . To specify a shared reservation, define the `share_settings` block:- Set the`share_type`field to`SPECIFIC_PROJECTS`.\n- In the`project_map`block, specify the [project IDs](/resource-manager/docs/creating-managing-projects#identifying_projects) of the projects that you want to share this reservation with.\nFor more information about how to use Terraform, see [Using Terraform with Google Cloud](/docs/terraform) .\nTo create a shared reservation, make a `POST` request to the [reservations.insert method](/compute/docs/reference/rest/v1/reservations/insert) .\nFor example, to create a shared reservation without any optional fields and share the reservation with two consumer projects, make the following `POST` request:\n```\nPOST https://compute.googleapis.com/compute/v1/projects/PROJECT_ID/zones/ZONE/reservations{\u00a0 \"name\": \"RESERVATION_NAME\",\u00a0 \"shareSettings\": {\u00a0 \u00a0 \"shareType\": \"SPECIFIC_PROJECTS\",\u00a0 \u00a0 \"projectMap\": {\u00a0 \u00a0 \u00a0 \"CONSUMER_PROJECT_ID_1\": {\u00a0 \u00a0 \u00a0 \u00a0 \"projectId\": \"CONSUMER_PROJECT_ID_1\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"CONSUMER_PROJECT_ID_2\": {\u00a0 \u00a0 \u00a0 \u00a0 \"projectId\": \"CONSUMER_PROJECT_ID_2\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 },\u00a0 \"specificReservation\": {\u00a0 \u00a0 \"count\": \"NUMBER_OF_VMS\",\u00a0 \u00a0 \"instanceProperties\": {\u00a0 \u00a0 \u00a0 \"machineType\": \"MACHINE_TYPE\",\u00a0 \u00a0 }\u00a0 }}\n```\nReplace the following:- `` : the ID of the project where you want to reserve resources.\n- `` : the zone in which to reserve resources.\n- `` : the name of the reservation to create.\n- `` and `` : the [IDs of projects](/resource-manager/docs/creating-managing-projects#identifying_projects) that can consume this reservation. You can include up to 100 consumer projects. These projects must be in the same organization as the owner project. Don't include the owner project. By default, it is already allowed to consume the reservation.\n- `` : the number of VMs to reserve.\n- `` : a [machine type](/compute/docs/machine-resource) to use for each VM. Specify one of the following values:- For a predefined machine type: `` `-standard-` `` .\n- For a custom machine type: `` `-custom-` `` `-` `` . Before specifying a custom machine type, review the [limitations](/compute/docs/instances/creating-instance-with-custom-machine-type#limitations) for VMs with custom machine types.\nReplace the following:- `` : the machine family.\n- `` : the number of vCPUs.\n- `` : the total memory for a reserved VM. Memory must be a multiple of 256\u00a0MB and must be supplied in MB.\nFor example, to specify an N2 custom machine type with 4\u00a0vCPUs and 5\u00a0GB of memory, which is 5,120\u00a0MB, specify `n2-custom-4-5120` .\nFor example, to create a reservation by specifying a global instance template in zone `us-central1-a` , share the reservation with projects `project-1` and `project-2` , and reserve ten VMs that each use an N2 predefined machine type with 4\u00a0vCPUs, make the following `POST` request:\n```\nPOST https://compute.googleapis.com/compute/v1/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"my-reservation\",\u00a0 \"shareSettings\": {\u00a0 \u00a0 \"shareType\": \"SPECIFIC_PROJECTS\",\u00a0 \u00a0 \"projectMap\": {\u00a0 \u00a0 \u00a0 \"project-1\": {\u00a0 \u00a0 \u00a0 \u00a0 \"projectId\": \"project-1\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"project-2\": {\u00a0 \u00a0 \u00a0 \u00a0 \"projectId\": \"project-2\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 },\u00a0 \"specificReservation\": {\u00a0 \u00a0 \"count\": \"10\",\u00a0 \u00a0 \"instanceProperties\": {\u00a0 \u00a0 \u00a0 \"machineType\": \"n2-standard-4\",\u00a0 \u00a0 }\u00a0 }}\n```\nOptionally, you can do one or more of the following:- To add [graphics processing units (GPUs)](/compute/docs/gpus) to each reserved VM, include the `guestAccelerators` field in the request body.```\nPOST https://compute.googleapis.com/compute/v1/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"example-reservation\",\u00a0 \"specificReservation\": {\u00a0 \u00a0 \"instanceProperties\": {\u00a0 \u00a0 \u00a0 \"guestAccelerators\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"acceleratorCount\": NUMBER_OF_ACCELERATORS,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"acceleratorType\": \"ACCELERATOR_TYPE\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 },\u00a0 \u00a0 ...\u00a0 }}\n```Replace the following:- `` : the number of GPUs to add per reserved VM.\n- `` : the type of GPU to add to the reserved VMs.\nMake sure that the machine type you specify in the reservation supports the types of GPUs you specify and that [the GPU is available in the zone](/compute/docs/gpus/gpu-regions-zones) where you want to reserve resources. Otherwise, creating the reservation fails.\n- To add one or more [Local SSDs](/compute/docs/disks#localssds) to each reserved VM, include the `localSsds` field in the request body. You can specify up to 24 Local SSDs. Each Local SSD is 375\u00a0GB.For example, to specify two Local SSDs when creating a reservation, specify the following:```\nPOST https://compute.googleapis.com/compute/v1/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"example-reservation\",\u00a0 \"specificReservation\": {\u00a0 \u00a0 \"instanceProperties\": {\u00a0 \u00a0 \u00a0 \"localSsds\": [\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"diskSizeGb\": \"375\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"interface\": \"INTERFACE_1\"\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"diskSizeGb\": \"375\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"interface\": \"INTERFACE_2\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 ],\u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 },\u00a0 \u00a0 ...\u00a0 }}\n```Replace `` and `` with the type of interface you want each Local SSD to use. Specify one of the following values:- For NVME disk interfaces: `NVME` .\n- For SCSI disk interfaces: `SCSI` .\nMake sure that the machine type you specify for the reserved VMs supports the chosen disk interfaces. Otherwise, creating the reservation fails. For more information, see how to [choose a disk interface](/compute/docs/disks/local-ssd#choose_an_interface) .\n- To have the reserved VMs use a specific [minimum CPU platform](/compute/docs/instances/specify-min-cpu-platform) instead of the zone's default CPU platform, include the `minCpuPlatform` field in the request body.```\nPOST https://compute.googleapis.com/compute/v1/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"example-reservation\",\u00a0 \"specificReservation\": {\u00a0 \u00a0 \"instanceProperties\": {\u00a0 \u00a0 \u00a0 \"minCpuPlatform\": \"MIN_CPU_PLATFORM\",\u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 },\u00a0 \u00a0 ...\u00a0 }}\n```Replace `` with a minimum CPU platform. To make sure that a CPU platform is available in the zone where you're reserving resources, [view the available CPU platforms by zone](/compute/docs/instances/specify-min-cpu-platform#cpusbyzone) .\n- To specify that only VMs that [specifically target this reservation](/compute/docs/instances/reservations-consume#consuming_instances_from_a_specific_reservation) can consume it, include the `specificReservationRequired` field in the request body and set it to `true` .```\nPOST https://compute.googleapis.com/compute/v1/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"example-reservation\",\u00a0 \"specificReservationRequired\": true,\u00a0 ...}\n```\n- To enable Compute Engine to [automatically delete the reservation](/compute/docs/instances/reservations-overview#auto-delete) , select one of the following methods: **    Preview     ** This product or feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA products and features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .- To delete the reservation at a specific date and time, make a `POST` request to the [beta.reservations.insert method](/compute/docs/reference/rest/beta/reservations/insert) . In the request body, include the `deleteAtTime` field.```\nPOST https://compute.googleapis.com/compute/beta/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"example-reservation\",\u00a0 \"deleteAtTime\": \"DELETE_AT_TIME\",\u00a0 ...}\n```Replace `` with a date and time formatted as an [RFC 3339 timestamp](https://tools.ietf.org/html/rfc3339) , which must be as follows:```\nYYYY-MM-DDTHH:MM:SSOFFSET\n```Replace the following:- `` : a date formatted as a 4-digit year, 2-digit month, and a 2-digit day of the month, separated by hyphens ( `-` ).\n- `` : a time formatted as a 2-digit hour using a 24-hour time, 2-digit minutes, and 2-digit seconds, separated by colons ( `:` ).\n- `` : the time zone formatted as an offset of [Coordinated Universal Time (UTC)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) . For example, to use the Pacific Standard Time (PST), specify `-08:00` . Alternatively, to use no offset, specify `Z` .\n- To delete the reservation after a specific duration, make a `POST` request to the [beta.reservations.insert method](/compute/docs/reference/rest/beta/reservations/insert) . In the request body, include the `deleteAfterDuration` field.```\nPOST https://compute.googleapis.com/compute/beta/projects/example-project/zones/us-central1-a/reservations{\u00a0 \"name\": \"example-reservation\",\u00a0 \"deleteAfterDuration\": {\u00a0 \u00a0 \"seconds\": \"DELETE_AFTER_DURATION\"\u00a0 },\u00a0 ...}\n```Replace `` with a duration in seconds. For example, specify `86400` for 86,400 seconds (1 day).\n## Troubleshooting\nLearn how to [troubleshoot reservation creation](/compute/docs/troubleshooting/troubleshooting-reservation-creation) .\n## What's next\n- Learn how to [view your reservations](/compute/docs/instances/reservations-view) .\n- Learn how to [attach reservations to commitments](/compute/docs/instances/reservations-with-commitments) .\n- Learn how to [consume reservations](/compute/docs/instances/reservations-consume) .\n- Learn how to [monitor reservations consumption](/compute/docs/instances/reservations-monitor) .", "guide": "Compute Engine"}