{"title": "Compute Engine - Troubleshooting OS Login", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Troubleshooting OS Login\nThis document describes how to troubleshoot OS Login using the metadata server. For information about setting up OS Login or for step-by-step instructions, see [Setting up OS Login](/compute/docs/instances/managing-instance-access) .\nYou can query the metadata server from within a virtual machine (VM) instance. For more information, see [Storing and retrieving instance metadata](/compute/docs/storing-retrieving-metadata) .\n", "content": "## Before you begin\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\nTo use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```## Common error messages\nThe following are examples of common errors you might encounter when you use OS Login.\n### Cannot find name for group\nOn some VMs using OS Login, you might receive the following error message after the connection is established:\n```\n/usr/bin/id: cannot find name for group ID 123456789\n```\nIgnore this error message. This error does not affect your VMs.\n### Failure getting groups\nYou might see logs similar to the following when you create VMs:\n```\nDec 10 22:31:05 instance-1 google_oslogin_nss_cache[381]: oslogin_cache_refresh[381]: Refreshing group entry cache\nDec 10 22:31:05 instance-1 google_oslogin_nss_cache[381]: oslogin_cache_refresh[381]: Failure getting groups, quitting\n```\nThese logs indicate that your organization doesn't have OS Login Linux groups configured. Ignore these messages.\n### Failed precondition\nYou might see an error similar to the following when you connect to the VM using SSH:\n```\nERROR: (gcloud.compute.ssh) FAILED_PRECONDITION: The specified username or UID is not unique within given system ID.\n```\nThis error occurs when OS Login attempts to generate a username that already exists within an organization. This is common when a user account is deleted and a new user with the same email address is created shortly after. After a user account is deleted, it takes up to 48 hours to remove the user's POSIX information.\nTo resolve this issue, do one of the following:\n- [Restore the deleted account](https://support.google.com/cloudidentity/answer/1397578) .\n- Remove the account's [POSIX information](/compute/docs/oslogin/manage-oslogin-in-an-org#modify-users) before deleting the account.\n### Invalid argument\nYou might see errors similar to the following when you connect to a VM using SSH or use SCP to transfer files:\n```\nERROR: (gcloud.compute.ssh) INVALID_ARGUMENT: Login profile size exceeds 32 KiB. Delete profile values to make additional space.\n```\n```\nERROR: (gcloud.compute.scp) INVALID_ARGUMENT: Login profile size exceeds 32 KiB. Delete profile values to make additional space.\n```\nTo resolve these errors, do the following:\n- View your OS Login profile by running the [gcloud compute os-login describe-profile command](/sdk/gcloud/reference/compute/os-login/describe-profile) :```\ngcloud compute os-login describe-profile\n```The output looks similar to the following:```\nname: '00000000000000'\nposixAccounts:\n...\nsshPublicKeys:\n ...:\n fingerprint: ...\n key: |\n  ssh-rsa AAAAB3NzaC1yc2...\n name: ...\n ...\n```\n- Review the output to identify any unused SSH keys.\n- Remove any unused keys from the output using the [gcloud compute os-login ssh-keys remove command](/sdk/gcloud/reference/compute/os-login/ssh-keys/remove) :```\ngcloud compute os-login ssh-keys remove --key=KEY\n```Replace `` with the keys's fingerprint or the key string.\nTo prevent this issue from occurring in the future, [add an expiry time for SSH keys](/compute/docs/connect/add-ssh-keys#os-login) . Expired keys are automatically removed from your login profile 48 hours after expiry, or when you add a new key to your profile.\n## Default OS Login metadata entries\nCompute Engine defines a set of default metadata entries that serves OS Login information. Default metadata is always defined and set by the server. Default metadata keys are case sensitive.\nThe following table describes the entries you can query.\n| ('Relative to http://metadata.google.internal/computeMetadata/v1/', 'Metadata entry') | ('Relative to http://metadata.google.internal/computeMetadata/v1/', 'Description')                                                     |\n|:----------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| project/attributes/enable-oslogin              | Checks if OS Login is enabled on the current Google Cloud project.                                                         |\n| instance/attributes/enable-oslogin              | Checks if OS Login is enabled on the current VM.                                                             |\n| oslogin/users/                   | Retrieves profile information for OS Login users. You can pass query parameters such as username, uid, pagesize and pagetoken.                                         |\n| oslogin/authorize/                  | Retrieves login or administrative level permission settings for an OS Login user. To check a permission, you must specify the policy query parameter. The value of the policy parameter must be set to either login (to check for login permission) or adminLogin (to check for sudo access). |\n## Checking if OS Login is configured\n[Use the Google Cloud console or Google Cloud CLI to query metadata](/compute/docs/metadata/querying-metadata#console-gcloud) to determine if OS Login is enabled. OS Login is enabled when the `enable-oslogin` metadata key is set to `TRUE` in project or instance metadata. If both instance and project metadata are set, the value set in instance metadata takes precedence.\n## Viewing OS Login users\nTo view the profile information for multiple users, you need to specify the `pagesize` and `pagetoken` parameters. Replace the `pagesize` and `pagetoken` with the required numeric value.\n```\ncurl \"http://metadata.google.internal/computeMetadata/v1/oslogin/users?pagesize=PAGE_SIZE&\npagetoken=PAGE_TOKEN\" -H \"Metadata-Flavor: Google\"\n```\nFor example, to set the `pagesize` to `1` and the `pagetoken` to `0` , run the following command:\n```\ncurl \"http://metadata.google.internal/computeMetadata/v1/oslogin/users?pagesize=1&pagetoken=0\" -H \"Metadata-Flavor: Google\"\n```\nOn most distributions, you can also run the Unix command `getent passwd` to retrieve the password entries for organization users.\n## Viewing a specific OS Login user\nTo view the profile information for a specific user on your VM, run the following command:\n```\ncurl \"http://metadata.google.internal/computeMetadata/v1/oslogin/users?username=USERNAME\" -H \"Metadata-Flavor: Google\"\n```\nReplace `` with the username of the user that you want to query.\nFor example, you can perform a request to look up the user `user_example_com` . The following command and output show added formatting for improved readability.\n```\ncurl \"http://metadata.google.internal/computeMetadata/v1/oslogin/users?username=user_example_com\" -H \"Metadata-Flavor: Google\"\n```\nThe output is similar to the following:\n```\n{\n \"loginProfiles\": [{\n  \"name\": \"12345678912345\",\n  \"posixAccounts\": [{\n   \"primary\": true,\n   \"username\": \"user_example_com\",\n   \"uid\": \"123451\",\n   \"gid\": \"123451\",\n   \"homeDirectory\": \"/home/user_example_com\",\n   \"operatingSystemType\": \"LINUX\"\n  }],\n  \"sshPublicKeys\": {\n   \"204c4b4fb...\": {\n    \"key\": \"ssh-rsa AAAAB3Nz...\",\n    \"fingerprint\": \"204c4b4fb...\"\n   }\n  }\n }]\n}\n```\nOn most distributions, you can also run Unix commands such as `getent passwd username` or `getent passwd uid` to retrieve profile information.\nTo retrieve the SSH keys for a user, you can also run `/usr/bin/google_authorized_keys` `` . If no keys are returned, the user might not have the required permissions to log into the VM.\n## Checking login permissions\nTo view login and administrative level permissions, you must provide the `policy=login&email=` `` query parameters.\n- Query the user profile to get the value of the `name` field:```\ncurl \"http://metadata.google.internal/computeMetadata/v1/oslogin/users?username=user_example_com\" -H \"Metadata-Flavor: Google\"\n```\n- In the output, take note of the `name` .\n- Run the following `login` command using the value of `name` :```\ncurl \"http://metadata.google.internal/computeMetadata/v1/oslogin/authorize?policy=login&email=LOGIN_NAME\" -H \"Metadata-Flavor: Google\"\n```\nFor example, you can query the login permissions for the user `user_example_com` that was viewed in the [previous section](#query-specific-user) :\n```\ncurl \"http://metadata.google.internal/computeMetadata/v1/oslogin/authorize?policy=login&email=12345678912345\" -H \"Metadata-Flavor: Google\"\n```\nThe command output indicates the user is authorized to log in to the VM:\n```\n{\"success\":true}\n```\n**Note:** If a user is granted the `roles/compute.osLogin` access role and the authorization output returns `{\"success\" : false}` , this indicates that the user might be missing the `roles/iam.serviceAccountUser` permission for the service account associated with the VM. For more information, see [Granting OS Login IAM roles ](/compute/docs/instances/managing-instance-access#grant-iam-roles) .\n## Checking if your VM has a service account\nYou can query the metadata server to find the service account associated with your VM. On your VM, run the following command:\n```\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/\" -H \"Metadata-Flavor: Google\"\n```\nThe output is similar to the following:\n```\n12345-sa@developer.gserviceaccount.com/\ndefault/\n```\nIf no service account is found, the output is blank.\n## What's next\n- Learn more about [OS Login](/compute/docs/oslogin) .\n- Learn how [SSH connections to Linux VMs](/compute/docs/instances/ssh) work on Compute Engine.\n- For step-by-step instructions, review one of the following:- [Setting up OS Login](/compute/docs/instances/managing-instance-access) .\n- [Setting up OS Login with 2-step verification](/compute/docs/oslogin/setup-two-factor-authentication) \n- Review [Managing OS Login in an organization](/compute/docs/oslogin/manage-oslogin-in-an-org)", "guide": "Compute Engine"}