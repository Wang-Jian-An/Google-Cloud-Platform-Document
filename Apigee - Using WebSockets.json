{"title": "Apigee - Using WebSockets", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Using WebSockets\nThis topic discusses how to use [WebSockets](https://en.wikipedia.org/wiki/WebSocket) with Apigee and Apigee hybrid.\n", "content": "## \n Introduction\nThere are many situations where web interactions need to happen in real time, such as gaming, communications, financial transactions, and other high-throughput activities.\nWebSocket is a protocol that provides a full-duplex communications channel between a web client and web server over a single TCP connection. The WebSocket protocol uses the HTTP protocol to establish the connection between the client and server. Once established, the client and  server then use the WebSocket protocol to send and receive data.\nThe [WebSockets spec](https://html.spec.whatwg.org/multipage/web-sockets.html) and protocol is maintained by the W3C.\n## \n Support for WebSockets in Apigee\nIn Apigee and Apigee hybrid, environment groups provide routing to environments and define the hostnames on which API proxies are exposed. Environment groups support both the HTTP and WS protocols natively. You do not have to create a special environment group or any special configuration to use WebSockets. Rather, it is up to the client to request a protocol upgrade from HTTP to WS by including the `Upgrade` request header. An upgrade request made to an API proxy endpoint returns a `101 Switching Protocols` response. Further requests and responses are made bidirectionally on the open WebSockets connection, until it is closed.\n### \n Policy support\nWith a WebSockets connection, you can only use the Verify API Key and OAuthV2 policies in your API proxy. All other policies are ignored.\n### \n Revoking the connection\nThe WebSockets connection is closed when:\n- The proxy endpoint receives a request without an API key or OAuth token.\n- The proxy endpoint receives a request with an expired or invalid API key or OAuth token.\n- The WebSockets connection times out.\n### \n Using trace and analytics\nIn the Debug tool, for each WebSockets connection you'll see one request appear with a **101 Status** , as shown in the following screenshot:\nIn the Apigee analytics dashboard, you will see traffic counted for each WebSockets session. Back and forth traffic that occurs during the session is not shown in the dashboard.\n## \n Sample WebSockets application\nTo learn more, you can refer to a working [websocket-sample](https://github.com/srinandan/websocket-sample) application on GitHub. The sample demonstrates how to call an API proxy over a WebSockets connection. The proxy calls a simple backend target application that is deployed in your Kubernetes cluster.", "guide": "Apigee"}