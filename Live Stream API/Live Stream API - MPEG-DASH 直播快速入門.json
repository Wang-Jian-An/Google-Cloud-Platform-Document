{"title": "Live Stream API - MPEG-DASH \u76f4\u64ad\u5feb\u901f\u5165\u9580", "url": "https://cloud.google.com/livestream/docs/quickstarts/quickstart-dash?hl=zh-cn", "abstract": "# Live Stream API - MPEG-DASH \u76f4\u64ad\u5feb\u901f\u5165\u9580\n# MPEG-DASH \u76f4\u64ad\u5feb\u901f\u5165\u9580\n\u672c\u9801\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528 Live Stream API \u7684\u9ed8\u8a8d\u8a2d\u7f6e\u548c `curl` \u3001PowerShell \u6216\u5ba2\u6236\u7aef\u5eab\u5275\u5efa\u57fa\u672c\u7684 MPEG-DASH \u76f4\u64ad\u4f5c\u696d\u3002", "content": "## \u6e96\u5099\u5de5\u4f5c\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n### \u5275\u5efa Cloud Storage \u5b58\u5132\u6876\u5275\u5efa Cloud Storage \u5b58\u5132\u6876\u4ee5\u4fdd\u5b58\u76f4\u64ad\u6e05\u55ae\u548c\u7247\u6bb5\u6587\u4ef6\u3002Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u9032\u5165 Cloud Storage **\u5b58\u5132\u6876** \u9801\u9762\u3002 [\u9032\u5165\u201c\u5b58\u5132\u6876\u201d\u9801\u9762](https://console.cloud.google.com/storage/browser?hl=zh-cn) \n- \u9ede\u64ca **\u5275\u5efa\u5b58\u5132\u5206\u5340** \u3002\n- \u5728 **\u5275\u5efa\u5b58\u5132\u5206\u5340** \u9801\u9762\u4e0a\uff0c\u8f38\u5165\u60a8\u7684\u5b58\u5132\u5206\u5340\u4fe1\u606f\u3002\u8981\u8f49\u5230\u4e0b\u4e00\u6b65\uff0c\u8acb\u9ede\u64ca **\u7e7c\u7e8c** \u3002- \u5728 **\u6307\u5b9a\u5b58\u5132\u5206\u5340\u7684\u540d\u7a31** \u4e2d\uff0c\u8f38\u5165\u7b26\u5408 [\u5b58\u5132\u5206\u5340\u547d\u540d\u8981\u6c42](https://cloud.google.com/storage/docs/bucket-naming?hl=zh-cn#requirements) \u7684\u540d\u7a31\u3002\n- \u5c0d\u65bc **\u9078\u64c7\u6578\u64da\u5b58\u5132\u4f4d\u7f6e** \uff0c\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u9078\u64c7 **\u4f4d\u7f6e\u985e\u578b** \u9078\u9805\u3002\n- \u9078\u64c7 **\u4f4d\u7f6e** \u9078\u9805\u3002\n- \u5c0d\u65bc **\u7232\u6578\u64da\u9078\u64c7\u4e00\u500b\u9ed8\u8a8d\u5b58\u5132\u985e\u5225** \uff0c\u9078\u64c7\u4ee5\u4e0b\u9805\uff1a **Standard** \u3002\n- \u5c0d\u65bc **\u9078\u64c7\u5982\u4f55\u63a7\u5236\u5c0d\u8c61\u7684\u8a2a\u554f\u6b0a\u9650** \uff0c\u8acb\u9078\u64c7 **\u8a2a\u554f\u6b0a\u9650\u63a7\u5236** \u9078\u9805\u3002\n- \u5c0d\u65bc **\u9ad8\u7d1a\u8a2d\u7f6e\uff08\u53ef\u9078\uff09** \uff0c\u8acb\u6307\u5b9a [\u52a0\u5bc6\u65b9\u6cd5](https://cloud.google.com/storage/docs/encryption?hl=zh-cn) \u3001 [\u4fdd\u7559\u653f\u7b56](https://cloud.google.com/storage/docs/bucket-lock?hl=zh-cn) \u6216 [\u5b58\u5132\u5206\u5340\u6a19\u7c64](https://cloud.google.com/storage/docs/tags-and-labels?hl=zh-cn#bucket-labels) \u3002\n- \u9ede\u64ca **\u5275\u5efa** \u3002\n- \u5275\u5efa Cloud Storage \u5b58\u5132\u5206\u5340\uff1a\n- ```\ngcloud storage buckets create gs://BUCKET_NAME\n```\n- \u5c07\n- ``\n- \u66ff\u63db\u7232\u7b26\u5408\n- [\u5b58\u5132\u6876\u540d\u7a31\u8981\u6c42](https://cloud.google.com/storage/docs/buckets?hl=zh-cn#naming) \n- \u7684\u5b58\u5132\u6876\u540d\u7a31\u3002\n### \u5b89\u88dd\u7de8\u78bc\u5668\u8981\u4f7f\u7528\u8a72 API\uff0c\u60a8\u9700\u8981\u4e00\u500b\u7de8\u78bc\u5668\u4f86\u751f\u6210\u4f9b API \u8655\u7406\u7684\u8f38\u5165\u6d41\u3002\n\u5b89\u88dd [ffmpeg](https://ffmpeg.org/download.html) \uff0c\u56e0\u7232\u672c\u9801\u4ecb\u7d39\u77ad\u5982\u4f55\u4f7f\u7528 `ffmpeg` \u751f\u6210\u8f38\u5165\u6d41\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5728 Cloud Shell \u4e2d\u5b89\u88dd\u6b64\u7d44\u4ef6\u3002\n```\nsudo apt install ffmpeg\n```## \u5275\u5efa\u8f38\u5165\u7aef\u9ede\u5982\u9700\u958b\u59cb\u76f4\u64ad\uff0c\u60a8\u5fc5\u9808\u5148\u4f7f\u7528 [projects.locations.inputs.create](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.inputs/create?hl=zh-cn) \u65b9\u6cd5\u5275\u5efa\u8f38\u5165\u7aef\u9ede\u3002\u60a8\u9700\u8981\u5c07\u8f38\u5165\u6d41\u767c\u9001\u5230\u6b64\u7aef\u9ede\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- ``\uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\uff1b\u4f4d\u65bc [IAM \u8a2d\u7f6e](https://console.cloud.google.com/iam-admin/settings?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **\u9805\u76ee\u7de8\u865f** \u5b57\u6bb5\u4e2d\n- ``\uff1a\u8981\u5728\u5176\u4e2d\u5275\u5efa\u8f38\u5165\u7aef\u9ede\u7684\u4f4d\u7f6e\uff1b\u8acb\u4f7f\u7528 [\u652f\u6301\u7684\u5340\u57df](https://cloud.google.com/livestream/docs/locations?hl=zh-cn) \u4e4b\u4e00\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u65b0\u8f38\u5165\u7aef\u9ede\u6a19\u8b58\u7b26\uff0c\u8981\u5275\u5efa\u7684\u65b0\u8f38\u5165\u7aef\u9ede\uff08\u60a8\u5c07\u8f38\u5165\u6d41\u767c\u9001\u5230\u6b64\u7aef\u9ede\uff09\u3002\u6b64\u503c\u5fc5\u9808\u7232 1-63 \u500b\u5b57\u7b26\uff0c\u4ee5`[a-z0-9]`\u958b\u982d\u548c\u7d50\u5c3e\uff0c\u53ef\u5728\u5b57\u7b26\u4e4b\u9593\u5305\u542b\u77ed\u5283\u7dda (-)\u3002\u4f8b\u5982`my-input`\u3002\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.video.livestream.v1.OperationMetadata\",\n \"createTime\": CREATE_TIME,\n \"target\": \"projects/PROJECT_NUMBER/locations/LOCATION/inputs/INPUT_ID\",\n \"verb\": \"create\",\n \"requestedCancellation\": false,\n \"apiVersion\": \"v1\"\n },\n \"done\": false\n}\n```\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.Video.LiveStream.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/media/livestream/api/LiveStream.Samples/CreateInputAsync.cs) \n```\nusing Google.Api.Gax.ResourceNames;using Google.Cloud.Video.LiveStream.V1;using Google.LongRunning;using System.Threading.Tasks;public class CreateInputSample{\u00a0 \u00a0 public async Task<Input> CreateInputAsync(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0string projectId, string locationId, string inputId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create the client.\u00a0 \u00a0 \u00a0 \u00a0 LivestreamServiceClient client = LivestreamServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 CreateInputRequest request = new CreateInputRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ParentAsLocationName = LocationName.FromProjectLocation(projectId, locationId),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputId = inputId,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Input = new Input\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Type = Input.Types.Type.RtmpPush\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request.\u00a0 \u00a0 \u00a0 \u00a0 Operation<Input, OperationMetadata> response = await client.CreateInputAsync(request);\u00a0 \u00a0 \u00a0 \u00a0 // Poll until the returned long-running operation is complete.\u00a0 \u00a0 \u00a0 \u00a0 Operation<Input, OperationMetadata> completedResponse = await response.PollUntilCompletedAsync();\u00a0 \u00a0 \u00a0 \u00a0 // Retrieve the operation result.\u00a0 \u00a0 \u00a0 \u00a0 return completedResponse.Result;\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Go API \u53c3\u8003\u6587\u6a94](https://pkg.go.dev/cloud.google.com/go/video/livestream) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/media/livestream/create_input.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 livestream \"cloud.google.com/go/video/livestream/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/video/livestream/apiv1/livestreampb\")// createInput creates an input endpoint. You send an input video stream to this// endpoint.func createInput(w io.Writer, projectID, location, inputID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"my-project-id\"\u00a0 \u00a0 \u00a0 \u00a0 // location := \"us-central1\"\u00a0 \u00a0 \u00a0 \u00a0 // inputID := \"my-input\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := livestream.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &livestreampb.CreateInputRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Parent: \u00a0fmt.Sprintf(\"projects/%s/locations/%s\", projectID, location),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputId: inputID,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Input: &livestreampb.Input{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Type: livestreampb.Input_RTMP_PUSH,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Creates the input.\u00a0 \u00a0 \u00a0 \u00a0 op, err := client.CreateInput(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"CreateInput: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 response, err := op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"Wait: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Input: %v\", response.Name)\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-live-stream/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/media/livestream/src/main/java/com/example/livestream/CreateInput.java) \n```\nimport com.google.cloud.video.livestream.v1.CreateInputRequest;import com.google.cloud.video.livestream.v1.Input;import com.google.cloud.video.livestream.v1.LivestreamServiceClient;import com.google.cloud.video.livestream.v1.LocationName;import java.io.IOException;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class CreateInput {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String inputId = \"my-input-id\";\u00a0 \u00a0 createInput(projectId, location, inputId);\u00a0 }\u00a0 public static void createInput(String projectId, String location, String inputId)\u00a0 \u00a0 \u00a0 throws InterruptedException, ExecutionException, TimeoutException, IOException {\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 LivestreamServiceClient livestreamServiceClient = LivestreamServiceClient.create();\u00a0 \u00a0 var createInputRequest =\u00a0 \u00a0 \u00a0 \u00a0 CreateInputRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setParent(LocationName.of(projectId, location).toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setInputId(inputId)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setInput(Input.newBuilder().setType(Input.Type.RTMP_PUSH).build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // First API call in a project can take up to 15 minutes.\u00a0 \u00a0 Input result =\u00a0 \u00a0 \u00a0 \u00a0 livestreamServiceClient.createInputAsync(createInputRequest).get(15, TimeUnit.MINUTES);\u00a0 \u00a0 System.out.println(\"Input: \" + result.getName());\u00a0 \u00a0 livestreamServiceClient.close();\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/media/livestream/createInput.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\u00a0*/// projectId = 'my-project-id';// location = 'us-central1';// inputId = 'my-input';// Imports the Livestream libraryconst {LivestreamServiceClient} = require('@google-cloud/livestream').v1;// Instantiates a clientconst livestreamServiceClient = new LivestreamServiceClient();async function createInput() {\u00a0 // Construct request\u00a0 const request = {\u00a0 \u00a0 parent: livestreamServiceClient.locationPath(projectId, location),\u00a0 \u00a0 inputId: inputId,\u00a0 \u00a0 input: {\u00a0 \u00a0 \u00a0 type: 'RTMP_PUSH',\u00a0 \u00a0 },\u00a0 };\u00a0 // Run request\u00a0 const [operation] = await livestreamServiceClient.createInput(request);\u00a0 const response = await operation.promise();\u00a0 const [input] = response;\u00a0 console.log(`Input: ${input.name}`);}createInput();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API PHP API \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-php/#/docs/google-cloud/latest/videolivestream/readme) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/media/livestream/src/create_input.php) \n```\nuse Google\\Cloud\\Video\\LiveStream\\V1\\Input;use Google\\Cloud\\Video\\LiveStream\\V1\\Client\\LivestreamServiceClient;use Google\\Cloud\\Video\\LiveStream\\V1\\CreateInputRequest;/**\u00a0* Creates an input. You send an input video stream to this endpoint.\u00a0*\u00a0* @param string \u00a0$callingProjectId \u00a0 The project ID to run the API call under\u00a0* @param string \u00a0$location \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 The location of the input\u00a0* @param string \u00a0$inputId \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0The ID of the input to be created\u00a0*/function create_input(\u00a0 \u00a0 string $callingProjectId,\u00a0 \u00a0 string $location,\u00a0 \u00a0 string $inputId): void {\u00a0 \u00a0 // Instantiate a client.\u00a0 \u00a0 $livestreamClient = new LivestreamServiceClient();\u00a0 \u00a0 $parent = $livestreamClient->locationName($callingProjectId, $location);\u00a0 \u00a0 $input = (new Input())\u00a0 \u00a0 \u00a0 \u00a0 ->setType(Input\\Type::RTMP_PUSH);\u00a0 \u00a0 // Run the input creation request. The response is a long-running operation ID.\u00a0 \u00a0 $request = (new CreateInputRequest())\u00a0 \u00a0 \u00a0 \u00a0 ->setParent($parent)\u00a0 \u00a0 \u00a0 \u00a0 ->setInput($input)\u00a0 \u00a0 \u00a0 \u00a0 ->setInputId($inputId);\u00a0 \u00a0 $operationResponse = $livestreamClient->createInput($request);\u00a0 \u00a0 $operationResponse->pollUntilComplete();\u00a0 \u00a0 if ($operationResponse->operationSucceeded()) {\u00a0 \u00a0 \u00a0 \u00a0 $result = $operationResponse->getResult();\u00a0 \u00a0 \u00a0 \u00a0 // Print results\u00a0 \u00a0 \u00a0 \u00a0 printf('Input: %s' . PHP_EOL, $result->getName());\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 \u00a0 $error = $operationResponse->getError();\u00a0 \u00a0 \u00a0 \u00a0 // handleError($error)\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/video/live-stream/create_input.py) \n```\nimport argparsefrom google.cloud.video import live_stream_v1from google.cloud.video.live_stream_v1.services.livestream_service import (\u00a0 \u00a0 LivestreamServiceClient,)def create_input(\u00a0 \u00a0 project_id: str, location: str, input_id: str) -> live_stream_v1.types.Input:\u00a0 \u00a0 \"\"\"Creates an input.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 project_id: The GCP project ID.\u00a0 \u00a0 \u00a0 \u00a0 location: The location in which to create the input.\u00a0 \u00a0 \u00a0 \u00a0 input_id: The user-defined input ID.\"\"\"\u00a0 \u00a0 client = LivestreamServiceClient()\u00a0 \u00a0 parent = f\"projects/{project_id}/locations/{location}\"\u00a0 \u00a0 input = live_stream_v1.types.Input(\u00a0 \u00a0 \u00a0 \u00a0 type_=\"RTMP_PUSH\",\u00a0 \u00a0 )\u00a0 \u00a0 operation = client.create_input(parent=parent, input=input, input_id=input_id)\u00a0 \u00a0 response = operation.result(900)\u00a0 \u00a0 print(f\"Input: {response.name}\")\u00a0 \u00a0 return response\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Ruby API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/ruby/docs/reference/google-cloud-video-live_stream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-video-live_stream/samples/create_input.rb) \n```\nrequire \"google/cloud/video/live_stream\"\n### Create an input endpoint\n## @param project_id [String] Your Google Cloud project (e.g. \"my-project\")# @param location [String] The location (e.g. \"us-central1\")# @param input_id [String] Your input name (e.g. \"my-input\")#def create_input project_id:, location:, input_id:\u00a0 # Create a Live Stream client.\u00a0 client = Google::Cloud::Video::LiveStream.livestream_service\u00a0 # Build the resource name of the parent.\u00a0 parent = client.location_path project: project_id, location: location\u00a0 # Set the input fields.\u00a0 new_input = {\u00a0 \u00a0 type: Google::Cloud::Video::LiveStream::V1::Input::Type::RTMP_PUSH\u00a0 }\u00a0 operation = client.create_input parent: parent, input: new_input, input_id: input_id\u00a0 # The returned object is of type Gapic::Operation. You can use this\u00a0 # object to check the status of an operation, cancel it, or wait\u00a0 # for results. Here is how to block until completion:\u00a0 operation.wait_until_done!\u00a0 # Print the input name.\u00a0 puts \"Input: #{operation.response.name}\"end\n```\u8907\u88fd\u8fd4\u56de\u7684 \u4ee5\u4fbf\u5728\u4e0b\u4e00\u90e8\u5206\u4e2d\u4f7f\u7528\u3002\n### \u67e5\u770b\u7d50\u679c\u4f7f\u7528 [projects.locations.operations.get](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.operations/get?hl=zh-cn) \u65b9\u6cd5\u6aa2\u67e5\u662f\u5426\u5df2\u5275\u5efa\u8f38\u5165\u7aef\u9ede\u3002\u5982\u679c\u97ff\u61c9\u5305\u542b `\"done: false\"` \uff0c\u8acb\u91cd\u8907\u8a72\u547d\u4ee4\uff0c\u76f4\u5230\u97ff\u61c9\u5305\u542b `\"done: true\"` \u3002\u5728\u5340\u57df\u4e2d\u5275\u5efa\u7b2c\u4e00\u500b\u8f38\u5165\u7aef\u9ede\u6700\u591a\u53ef\u80fd\u9700\u8981 10 \u5206\u9418\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- ``\uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\uff1b\u4f4d\u65bc [IAM \u8a2d\u7f6e](https://console.cloud.google.com/iam-admin/settings?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **\u9805\u76ee\u7de8\u865f** \u5b57\u6bb5\u4e2d\n- ``\uff1a\u8f38\u5165\u7aef\u9ede\u6240\u5728\u7684\u4f4d\u7f6e\uff1b\u8acb\u4f7f\u7528 [\u652f\u6301\u7684\u5340\u57df](https://cloud.google.com/livestream/docs/locations?hl=zh-cn) \u4e4b\u4e00\n- ``\uff1a\u64cd\u4f5c\u7684\u6a19\u8b58\u7b26\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.video.livestream.v1.OperationMetadata\",\n \"createTime\": CREATE_TIME,\n \"endTime\": END_TIME,\n \"target\": \"projects/PROJECT_NUMBER/locations/LOCATION/inputs/INPUT_ID\",\n \"verb\": \"create\",\n \"requestedCancellation\": false,\n \"apiVersion\": \"v1\"\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.cloud.video.livestream.v1.Input\",\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/inputs/INPUT_ID\",\n \"createTime\": CREATE_TIME,\n \"updateTime\": UPDATE_TIME,\n \"type\": \"RTMP_PUSH\",\n \"uri\": INPUT_STREAM_URI, # For example, \"rtmp://1.2.3.4/live/b8ebdd94-c8d9-4d88-a16e-b963c43a953b\",\n \"tier\": \"HD\"\n }\n}\n```\n\u627e\u5230 `uri` \u5b57\u6bb5\u4e26\u8907\u88fd\u8fd4\u56de\u7684 \uff0c\u4ee5\u4fbf\u7a0d\u5f8c\u5728 [\u767c\u9001\u8f38\u5165\u6d41](#send_input_stream) \u90e8\u5206\u4f7f\u7528\u3002## \u5275\u5efa\u983b\u9053\u5982\u9700\u5c07\u8f38\u5165\u6d41\u8f49\u78bc\u7232\u8f38\u51fa\u6d41\uff0c\u60a8\u9700\u8981\u5275\u5efa\u983b\u9053\u8cc7\u6e90\u3002\n\u5982\u9700\u5275\u5efa\u6e20\u9053\uff0c\u8acb\u4f7f\u7528 [projects.locations.channels.create](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels/create?hl=zh-cn) \u65b9\u6cd5\u3002\u4ee5\u4e0b\u793a\u4f8b\u6703\u5275\u5efa\u4e00\u500b\u751f\u6210 MPEG-DASH \u76f4\u64ad\u6d41\u7684\u983b\u9053\uff0c\u8a72\u76f4\u64ad\u7531\u55ae\u500b\u9ad8\u6e05 (1280x720) \u8f49\u5beb\u5167\u5bb9\u7d44\u6210\u3002\n\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- ``\uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\uff1b\u4f4d\u65bc [IAM \u8a2d\u7f6e](https://console.cloud.google.com/iam-admin/settings?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **\u9805\u76ee\u7de8\u865f** \u5b57\u6bb5\u4e2d\n- ``\uff1a\u8981\u5728\u5176\u4e2d\u5275\u5efa\u983b\u9053\u7684\u4f4d\u7f6e\uff1b\u8acb\u4f7f\u7528 [\u652f\u6301\u7684\u5340\u57df](https://cloud.google.com/livestream/docs/locations?hl=zh-cn) \u4e4b\u4e00\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u983b\u9053\u6a19\u8b58\u7b26\uff1b\u6b64\u503c\u5fc5\u9808\u7232 1-63 \u500b\u5b57\u7b26\uff0c\u4ee5`[a-z0-9]`\u958b\u982d\u548c\u7d50\u5c3e\uff0c\u4e26\u4e14\u53ef\u4ee5\u5728\u5b57\u7b26\u4e4b\u9593\u5305\u542b\u77ed\u5283\u7dda (-)\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u8f38\u5165\u7aef\u9ede\u6a19\u8b58\u7b26\n- ``\uff1a\u60a8\u7232\u4e86\u4fdd\u5b58\u76f4\u64ad\u6e05\u55ae\u548c\u7247\u6bb5\u6587\u4ef6\u800c\u5275\u5efa\u7684 Cloud Storage \u5b58\u5132\u6876\u7684\u540d\u7a31\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.video.livestream.v1.OperationMetadata\",\n \"createTime\": CREATE_TIME,\n \"target\": \"projects/PROJECT_NUMBER/locations/LOCATION/channels/CHANNEL_ID\",\n \"verb\": \"create\",\n \"requestedCancellation\": false,\n \"apiVersion\": \"v1\"\n },\n \"done\": false\n}\n```### \u8a02\u95b1\u983b\u9053\u60a8\u53ef\u4ee5\u4f7f\u7528\u65b0\u7684\u64cd\u4f5c ID [\u67e5\u770b\u983b\u9053\u5275\u5efa\u64cd\u4f5c\u7684\u7d50\u679c](#check_for_result) \u3002\n\u5275\u5efa\u983b\u9053\u5f8c\uff0c\u4f7f\u7528 [projects.locations.channels.get](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels/get?hl=zh-cn) \u65b9\u6cd5\u67e5\u8a62\u983b\u9053\u72c0\u614b\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- ``\uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\uff1b\u4f4d\u65bc [IAM \u8a2d\u7f6e](https://console.cloud.google.com/iam-admin/settings?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **\u9805\u76ee\u7de8\u865f** \u5b57\u6bb5\u4e2d\n- ``\uff1a\u60a8\u7684\u983b\u9053\u6240\u5728\u7684\u4f4d\u7f6e\uff1b\u8acb\u4f7f\u7528 [\u652f\u6301\u7684\u5340\u57df](https://cloud.google.com/livestream/docs/locations?hl=zh-cn) \u4e4b\u4e00\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u983b\u9053\u6a19\u8b58\u7b26\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/channels/CHANNEL_ID\",\n \"createTime\": CREATE_TIME,\n \"updateTime\": UPDATE_TIME,\n \"inputAttachments\": [ {\n  \"key\": \"INPUT_ID\",\n  \"input\": \"projects/PROJECT_NUMBER/locations/LOCATION/inputs/INPUT_ID\"\n }\n ],\n \"activeInput\": \"INPUT_ID\",\n \"output\": {\n \"uri\": \"gs://BUCKET_NAME\"\n },\n \"elementaryStreams\": [ {\n  \"videoStream\": {\n  \"h264\": {\n   \"widthPixels\": 1280,\n   \"heightPixels\": 720,\n   \"frameRate\": 30,\n   \"bitrateBps\": 3000000,\n   \"gopDuration\": \"2s\",\n   \"vbvSizeBits\": 3000000,\n   \"vbvFullnessBits\": 2700000,\n   \"entropyCoder\": \"cabac\",\n   \"profile\": \"high\"\n  }\n  },\n  \"key\": \"es_video\"\n },\n {\n  \"audioStream\": {\n  \"codec\": \"aac\",\n  \"bitrateBps\": 160000,\n  \"channelCount\": 2,\n  \"channelLayout\": [\"fl\", \"fr\"],\n  \"sampleRateHertz\": 48000\n  },\n  \"key\": \"es_audio\"\n }\n ],\n \"muxStreams\": [ {\n  \"key\": \"mux_video\",\n  \"container\": \"fmp4\",\n  \"elementaryStreams\": [\"es_video\"],\n  \"segmentSettings\": { \"segmentDuration\": \"2s\" }\n },\n {\n  \"key\": \"mux_audio\",\n  \"container\": \"fmp4\",\n  \"elementaryStreams\": [\"es_audio\"],\n  \"segmentSettings\": { \"segmentDuration\": \"2s\" }\n }\n ],\n \"manifests\": [ {\n  \"fileName\": \"main.mpd\",\n  \"type\": \"DASH\",\n  \"muxStreams\": [  \"mux_video\",\n  \"mux_audio\"\n  ],\n  \"maxSegmentCount\": 5,\n  \"segmentKeepDuration\": \"60s\"\n }\n ],\n \"streamingState\": \"STOPPED\"\n}\n```\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.Video.LiveStream.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/media/livestream/api/LiveStream.Samples/GetChannel.cs) \n```\nusing Google.Cloud.Video.LiveStream.V1;public class GetChannelSample{\u00a0 \u00a0 public Channel GetChannel(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0string projectId, string locationId, string channelId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create the client.\u00a0 \u00a0 \u00a0 \u00a0 LivestreamServiceClient client = LivestreamServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 GetChannelRequest request = new GetChannelRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ChannelName = ChannelName.FromProjectLocationChannel(projectId, locationId, channelId)\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request.\u00a0 \u00a0 \u00a0 \u00a0 Channel response = client.GetChannel(request);\u00a0 \u00a0 \u00a0 \u00a0 return response;\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Go API \u53c3\u8003\u6587\u6a94](https://pkg.go.dev/cloud.google.com/go/video/livestream) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/media/livestream/get_channel.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 livestream \"cloud.google.com/go/video/livestream/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/video/livestream/apiv1/livestreampb\")// getChannel gets a previously-created channel.func getChannel(w io.Writer, projectID, location, channelID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"my-project-id\"\u00a0 \u00a0 \u00a0 \u00a0 // location := \"us-central1\"\u00a0 \u00a0 \u00a0 \u00a0 // channelID := \"my-channel-id\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := livestream.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &livestreampb.GetChannelRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: fmt.Sprintf(\"projects/%s/locations/%s/channels/%s\", projectID, location, channelID),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 response, err := client.GetChannel(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"GetChannel: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Channel: %v\", response.Name)\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-live-stream/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/media/livestream/src/main/java/com/example/livestream/GetChannel.java) \n```\nimport com.google.cloud.video.livestream.v1.Channel;import com.google.cloud.video.livestream.v1.ChannelName;import com.google.cloud.video.livestream.v1.LivestreamServiceClient;import java.io.IOException;public class GetChannel {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String channelId = \"my-channel-id\";\u00a0 \u00a0 getChannel(projectId, location, channelId);\u00a0 }\u00a0 public static void getChannel(String projectId, String location, String channelId)\u00a0 \u00a0 \u00a0 throws IOException {\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. In this example, try-with-resources is used\u00a0 \u00a0 // which automatically calls close() on the client to clean up resources.\u00a0 \u00a0 try (LivestreamServiceClient livestreamServiceClient = LivestreamServiceClient.create()) {\u00a0 \u00a0 \u00a0 ChannelName name = ChannelName.of(projectId, location, channelId);\u00a0 \u00a0 \u00a0 Channel response = livestreamServiceClient.getChannel(name);\u00a0 \u00a0 \u00a0 System.out.println(\"Channel: \" + response.getName());\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/media/livestream/getChannel.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\u00a0*/// projectId = 'my-project-id';// location = 'us-central1';// channelId = 'my-channel';// Imports the Livestream libraryconst {LivestreamServiceClient} = require('@google-cloud/livestream').v1;// Instantiates a clientconst livestreamServiceClient = new LivestreamServiceClient();async function getChannel() {\u00a0 // Construct request\u00a0 const request = {\u00a0 \u00a0 name: livestreamServiceClient.channelPath(projectId, location, channelId),\u00a0 };\u00a0 const [channel] = await livestreamServiceClient.getChannel(request);\u00a0 console.log(`Channel: ${channel.name}`);}getChannel();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API PHP API \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-php/#/docs/google-cloud/latest/videolivestream/readme) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/media/livestream/src/get_channel.php) \n```\nuse Google\\Cloud\\Video\\LiveStream\\V1\\Client\\LivestreamServiceClient;use Google\\Cloud\\Video\\LiveStream\\V1\\GetChannelRequest;/**\u00a0* Gets a channel.\u00a0*\u00a0* @param string \u00a0$callingProjectId \u00a0 The project ID to run the API call under\u00a0* @param string \u00a0$location \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 The location of the channel\u00a0* @param string \u00a0$channelId \u00a0 \u00a0 \u00a0 \u00a0 \u00a0The ID of the channel\u00a0*/function get_channel(\u00a0 \u00a0 string $callingProjectId,\u00a0 \u00a0 string $location,\u00a0 \u00a0 string $channelId): void {\u00a0 \u00a0 // Instantiate a client.\u00a0 \u00a0 $livestreamClient = new LivestreamServiceClient();\u00a0 \u00a0 $formattedName = $livestreamClient->channelName($callingProjectId, $location, $channelId);\u00a0 \u00a0 // Get the channel.\u00a0 \u00a0 $request = (new GetChannelRequest())\u00a0 \u00a0 \u00a0 \u00a0 ->setName($formattedName);\u00a0 \u00a0 $response = $livestreamClient->getChannel($request);\u00a0 \u00a0 // Print results\u00a0 \u00a0 printf('Channel: %s' . PHP_EOL, $response->getName());}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/video/live-stream/get_channel.py) \n```\nimport argparsefrom google.cloud.video import live_stream_v1from google.cloud.video.live_stream_v1.services.livestream_service import (\u00a0 \u00a0 LivestreamServiceClient,)def get_channel(\u00a0 \u00a0 project_id: str, location: str, channel_id: str) -> live_stream_v1.types.Channel:\u00a0 \u00a0 \"\"\"Gets a channel.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 project_id: The GCP project ID.\u00a0 \u00a0 \u00a0 \u00a0 location: The location of the channel.\u00a0 \u00a0 \u00a0 \u00a0 channel_id: The user-defined channel ID.\"\"\"\u00a0 \u00a0 client = LivestreamServiceClient()\u00a0 \u00a0 name = f\"projects/{project_id}/locations/{location}/channels/{channel_id}\"\u00a0 \u00a0 response = client.get_channel(name=name)\u00a0 \u00a0 print(f\"Channel: {response.name}\")\u00a0 \u00a0 return response\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Ruby API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/ruby/docs/reference/google-cloud-video-live_stream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-video-live_stream/samples/get_channel.rb) \n```\nrequire \"google/cloud/video/live_stream\"\n### Get a channel\n## @param project_id [String] Your Google Cloud project (e.g. \"my-project\")# @param location [String] The location (e.g. \"us-central1\")# @param channel_id [String] Your channel name (e.g. \"my-channel\")#def get_channel project_id:, location:, channel_id:\u00a0 # Create a Live Stream client.\u00a0 client = Google::Cloud::Video::LiveStream.livestream_service\u00a0 # Build the resource name of the channel.\u00a0 name = client.channel_path project: project_id, location: location, channel: channel_id\u00a0 # Get the channel.\u00a0 channel = client.get_channel name: name\u00a0 # Print the channel name.\u00a0 puts \"Channel: #{channel.name}\"end\n```\u5b8c\u6574\u97ff\u61c9\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\u3002\uff08\u4e0a\u9762\u7684\u67d0\u4e9b\u4ee3\u78bc\u793a\u4f8b\u50c5\u8fd4\u56de\u97ff\u61c9\u4e2d\u7684\u7279\u5b9a\u5b57\u6bb5\uff0c\u4f46\u53ef\u4ee5\u4fee\u6539\u7232\u8fd4\u56de\u5b8c\u6574\u97ff\u61c9\u3002\uff09\n```\n{\n ...\n \"streamingState\": \"STOPPED\"\n ...\n}\n```\n\u6b64\u97ff\u61c9\u8868\u793a\u60a8\u73fe\u5728\u53ef\u4ee5\u5553\u52d5\u983b\u9053\u4e86\u3002\n **\u6ce8\u610f** \uff1a\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\uff0c\u8a72 API \u7684\u6e20\u9053\u5e73\u81fa\u65e5\u8a8c\u8655\u65bc\u505c\u7528\u72c0\u614b\u3002\u60a8\u53ef\u80fd\u9700\u8981\u5553\u7528\u9019\u4e9b\u65e5\u8a8c\u624d\u80fd\u9032\u884c\u8abf\u8a66\u548c\u554f\u984c\u6392\u67e5\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u6fc0\u6d3b\u5e73\u81fa\u65e5\u8a8c\u8a18\u9304](https://cloud.google.com/livestream/docs/how-to/logging?hl=zh-cn#activate_platform_logging) \u3002## \u5275\u5efa\u983b\u9053\u4f7f\u7528 [projects.locations.channels.start](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels/start?hl=zh-cn) \u65b9\u6cd5\u5553\u52d5\u6e20\u9053\u3002\u901a\u9053\u5fc5\u9808\u5148\u5553\u52d5\uff0c\u7136\u5f8c\u624d\u80fd\u63a5\u53d7\u8f38\u5165\u6d41\u6216\u751f\u6210\u8f38\u51fa\u6d41\u3002\n\u5553\u52d5\u5340\u57df\u4e2d\u7684\u7b2c\u4e00\u500b\u983b\u9053\u5927\u7d04\u9700\u8981 10 \u5206\u9418\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- ``\uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\uff1b\u4f4d\u65bc [IAM \u8a2d\u7f6e](https://console.cloud.google.com/iam-admin/settings?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **\u9805\u76ee\u7de8\u865f** \u5b57\u6bb5\u4e2d\n- ``\uff1a\u60a8\u7684\u983b\u9053\u6240\u5728\u7684\u4f4d\u7f6e\uff1b\u8acb\u4f7f\u7528 [\u652f\u6301\u7684\u5340\u57df](https://cloud.google.com/livestream/docs/locations?hl=zh-cn) \u4e4b\u4e00\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u983b\u9053\u6a19\u8b58\u7b26\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.video.livestream.v1.OperationMetadata\",\n \"createTime\": CREATE_TIME,\n \"target\": \"projects/PROJECT_NUMBER/locations/LOCATION/channels/CHANNEL_ID\",\n \"verb\": \"start\",\n \"requestedCancellation\": false,\n \"apiVersion\": \"v1\"\n },\n \"done\": false\n}\n```\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.Video.LiveStream.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/media/livestream/api/LiveStream.Samples/StartChannelAsync.cs) \n```\nusing Google.Cloud.Video.LiveStream.V1;using Google.LongRunning;using System.Threading.Tasks;public class StartChannelSample{\u00a0 \u00a0 public async Task StartChannelAsync(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0string projectId, string locationId, string channelId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create the client.\u00a0 \u00a0 \u00a0 \u00a0 LivestreamServiceClient client = LivestreamServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 StartChannelRequest request = new StartChannelRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ChannelName = ChannelName.FromProjectLocationChannel(projectId, locationId, channelId)\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request.\u00a0 \u00a0 \u00a0 \u00a0 Operation<ChannelOperationResponse, OperationMetadata> response = await client.StartChannelAsync(request);\u00a0 \u00a0 \u00a0 \u00a0 // Poll until the returned long-running operation is complete.\u00a0 \u00a0 \u00a0 \u00a0 await response.PollUntilCompletedAsync();\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Go API \u53c3\u8003\u6587\u6a94](https://pkg.go.dev/cloud.google.com/go/video/livestream) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/media/livestream/start_channel.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 livestream \"cloud.google.com/go/video/livestream/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/video/livestream/apiv1/livestreampb\")// startChannel starts a channel.func startChannel(w io.Writer, projectID, location, channelID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"my-project-id\"\u00a0 \u00a0 \u00a0 \u00a0 // location := \"us-central1\"\u00a0 \u00a0 \u00a0 \u00a0 // channelID := \"my-channel-id\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := livestream.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &livestreampb.StartChannelRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: fmt.Sprintf(\"projects/%s/locations/%s/channels/%s\", projectID, location, channelID),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := client.StartChannel(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"StartChannel: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 _, err = op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"Wait: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Started channel\")\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-live-stream/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/media/livestream/src/main/java/com/example/livestream/StartChannel.java) \n```\nimport com.google.cloud.video.livestream.v1.ChannelName;import com.google.cloud.video.livestream.v1.LivestreamServiceClient;import java.io.IOException;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class StartChannel {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String channelId = \"my-channel-id\";\u00a0 \u00a0 startChannel(projectId, location, channelId);\u00a0 }\u00a0 public static void startChannel(String projectId, String location, String channelId)\u00a0 \u00a0 \u00a0 throws InterruptedException, ExecutionException, TimeoutException, IOException {\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 LivestreamServiceClient livestreamServiceClient = LivestreamServiceClient.create();\u00a0 \u00a0 ChannelName name = ChannelName.of(projectId, location, channelId);\u00a0 \u00a0 // First API call in a project can take up to 15 minutes.\u00a0 \u00a0 livestreamServiceClient.startChannelAsync(name).get(15, TimeUnit.MINUTES);\u00a0 \u00a0 System.out.println(\"Started channel\");\u00a0 \u00a0 livestreamServiceClient.close();\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/media/livestream/startChannel.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\u00a0*/// projectId = 'my-project-id';// location = 'us-central1';// channelId = 'my-channel';// Imports the Livestream libraryconst {LivestreamServiceClient} = require('@google-cloud/livestream').v1;// Instantiates a clientconst livestreamServiceClient = new LivestreamServiceClient();async function startChannel() {\u00a0 // Construct request\u00a0 const request = {\u00a0 \u00a0 name: livestreamServiceClient.channelPath(projectId, location, channelId),\u00a0 };\u00a0 const [operation] = await livestreamServiceClient.startChannel(request);\u00a0 await operation.promise();\u00a0 console.log('Started channel');}startChannel();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API PHP API \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-php/#/docs/google-cloud/latest/videolivestream/readme) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/media/livestream/src/start_channel.php) \n```\nuse Google\\Cloud\\Video\\LiveStream\\V1\\Client\\LivestreamServiceClient;use Google\\Cloud\\Video\\LiveStream\\V1\\StartChannelRequest;/**\u00a0* Starts a channel.\u00a0*\u00a0* @param string \u00a0$callingProjectId \u00a0 The project ID to run the API call under\u00a0* @param string \u00a0$location \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 The location of the channel\u00a0* @param string \u00a0$channelId \u00a0 \u00a0 \u00a0 \u00a0 \u00a0The ID of the channel\u00a0*/function start_channel(\u00a0 \u00a0 string $callingProjectId,\u00a0 \u00a0 string $location,\u00a0 \u00a0 string $channelId): void {\u00a0 \u00a0 // Instantiate a client.\u00a0 \u00a0 $livestreamClient = new LivestreamServiceClient();\u00a0 \u00a0 $formattedName = $livestreamClient->channelName($callingProjectId, $location, $channelId);\u00a0 \u00a0 // Run the channel start request. The response is a long-running operation ID.\u00a0 \u00a0 $request = (new StartChannelRequest())\u00a0 \u00a0 \u00a0 \u00a0 ->setName($formattedName);\u00a0 \u00a0 $operationResponse = $livestreamClient->startChannel($request);\u00a0 \u00a0 $operationResponse->pollUntilComplete();\u00a0 \u00a0 if ($operationResponse->operationSucceeded()) {\u00a0 \u00a0 \u00a0 \u00a0 // Print results\u00a0 \u00a0 \u00a0 \u00a0 printf('Started channel' . PHP_EOL);\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 \u00a0 $error = $operationResponse->getError();\u00a0 \u00a0 \u00a0 \u00a0 // handleError($error)\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/video/live-stream/start_channel.py) \n```\nimport argparsefrom google.cloud.video import live_stream_v1from google.cloud.video.live_stream_v1.services.livestream_service import (\u00a0 \u00a0 LivestreamServiceClient,)def start_channel(\u00a0 \u00a0 project_id: str, location: str, channel_id: str) -> live_stream_v1.types.ChannelOperationResponse:\u00a0 \u00a0 \"\"\"Starts a channel.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 project_id: The GCP project ID.\u00a0 \u00a0 \u00a0 \u00a0 location: The location of the channel.\u00a0 \u00a0 \u00a0 \u00a0 channel_id: The user-defined channel ID.\"\"\"\u00a0 \u00a0 client = LivestreamServiceClient()\u00a0 \u00a0 name = f\"projects/{project_id}/locations/{location}/channels/{channel_id}\"\u00a0 \u00a0 operation = client.start_channel(name=name)\u00a0 \u00a0 response = operation.result(900)\u00a0 \u00a0 print(\"Started channel\")\u00a0 \u00a0 return response\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Ruby API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/ruby/docs/reference/google-cloud-video-live_stream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-video-live_stream/samples/start_channel.rb) \n```\nrequire \"google/cloud/video/live_stream\"\n### Starts a channel\n## @param project_id [String] Your Google Cloud project (e.g. \"my-project\")# @param location [String] The location (e.g. \"us-central1\")# @param channel_id [String] Your channel name (e.g. \"my-channel\")#def start_channel project_id:, location:, channel_id:\u00a0 # Create a Live Stream client.\u00a0 client = Google::Cloud::Video::LiveStream.livestream_service\u00a0 # Build the resource name of the channel.\u00a0 name = client.channel_path project: project_id, location: location, channel: channel_id\u00a0 # Start the channel.\u00a0 operation = client.start_channel name: name\u00a0 # The returned object is of type Gapic::Operation. You can use this\u00a0 # object to check the status of an operation, cancel it, or wait\u00a0 # for results. Here is how to block until completion:\u00a0 operation.wait_until_done!\u00a0 # Print a success message.\u00a0 puts \"Started channel\"end\n```\n## \u767c\u9001\u8f38\u5165\u6d41\u5982\u9700\u78ba\u5b9a\u983b\u9053\u662f\u5426\u5df2\u958b\u59cb\uff0c\u8acb\u50cf\u4e4b\u524d\u4e00\u6a23 [\u7372\u53d6\u983b\u9053](#get_channel) \u4fe1\u606f\u3002\u97ff\u61c9\u61c9\u5305\u542b\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\n{\n ...\n \"streamingState\": \"AWAITING_INPUT\"\n ...\n}\n```\n\u73fe\u5728\u983b\u9053\u5df2\u6e96\u5099\u5c31\u7dd2\uff0c\u8acb\u5c07\u6e2c\u8a66\u8f38\u5165\u6d41\u767c\u9001\u5230\u8f38\u5165\u7aef\u9ede\uff0c\u4ee5\u751f\u6210\u76f4\u64ad\u3002\n\u6253\u958b\u4e00\u500b\u65b0\u7d42\u7aef\u7a97\u53e3\u3002\u4f7f\u7528 [\u6aa2\u67e5\u7d50\u679c](#check_for_result) \u90e8\u5206\u4e2d\u7684 \u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n```\nffmpeg -re -f lavfi -i \"testsrc=size=1280x720 [out0]; sine=frequency=500 [out1]\" \\\u00a0 -acodec aac -vcodec h264 -f flv INPUT_STREAM_URI\n```## \u6aa2\u67e5\u983b\u9053\u662f\u5426\u6b63\u5728\u76f4\u64ad\u5982\u9700\u6aa2\u67e5\u76f4\u64ad\u64cd\u4f5c\u7684\u72c0\u614b\uff0c\u8acb\u50cf\u4e4b\u524d\u4e00\u6a23 [\u7372\u53d6\u983b\u9053](#get_channel) \u4fe1\u606f\u3002\u97ff\u61c9\u61c9\u5305\u542b\u4ee5\u4e0b\u5167\u5bb9\uff1a\n```\n{\n ...\n \"streamingState\": \"STREAMING\"\n ...\n}\n```## \u9a57\u8b49 Cloud Storage \u5b58\u5132\u6876\u4e2d\u7684\u5167\u5bb9\u6253\u958b Cloud Storage \u5b58\u5132\u6876\u3002\u78ba\u8a8d\u5b83\u5305\u542b\u4ee5\u4e0b\u6587\u4ef6\u548c\u76ee\u9304\uff1a\n- `main.mpd`\n- `mux_audio/`- \u591a\u500b`segment-` `` `.m4s`\u6587\u4ef6\n- \u55ae\u500b`segment-initialization_segment_0000000000.m4s`\u6587\u4ef6\n- `mux_video/`- \u591a\u500b`segment-` `` `.m4s`\u6587\u4ef6\n- \u55ae\u500b`segment-initialization_segment_0000000000.m4s`\u6587\u4ef6## \u64ad\u653e\u751f\u6210\u7684\u76f4\u64ad **\u6ce8\u610f** \uff1a\u5982\u679c\u8981\u7232\u5a92\u9ad4\u8f38\u51fa\u5275\u5efa CDN\uff0c\u8acb\u53c3\u95b1 [\u5a92\u9ad4 CDN \u5feb\u901f\u5165\u9580](https://cloud.google.com/media-cdn/docs/quickstart?hl=zh-cn) \u3002\n\u5982\u9700\u5728 [Shaka Player](https://shaka-player-demo.appspot.com/demo/?hl=zh-cn) \u4e2d\u64ad\u653e\u751f\u6210\u7684\u5a92\u9ad4\u6587\u4ef6\uff0c\u8acb\u5b8c\u6210\u4ee5\u4e0b\u6b65\u9a5f\uff1a- [\u8acb\u5c07 Cloud Storage \u5b58\u5132\u6876\u8a2d\u7232\u53ef\u516c\u958b\u8b80\u53d6](https://cloud.google.com/storage/docs/access-control/making-data-public?hl=zh-cn#buckets) \u3002\n- \u5982\u9700 [\u5728 Cloud Storage \u5b58\u5132\u6876\u4e0a\u5553\u7528\u8de8\u57df\u8cc7\u6e90\u5171\u4eab (CORS)](https://cloud.google.com/storage/docs/using-cors?hl=zh-cn#configure-cors-bucket) \uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a- \u5275\u5efa\u4e00\u500b\u5305\u542b\u4ee5\u4e0b\u4ee3\u78bc\u7684 JSON \u6587\u4ef6\uff1a```\n[ {\n \"origin\": [\"https://shaka-player-demo.appspot.com/\"],\n \"responseHeader\": [\"Content-Type\", \"Range\"],\n \"method\": [\"GET\", \"HEAD\"],\n \"maxAgeSeconds\": 3600\n }\n]\n```\n- \u5c07\u66ff\u63db\u7232\u60a8\u5728\u4e0a\u4e00\u6b65\u4e2d\u5275\u5efa\u7684 JSON \u6587\u4ef6\u7684\u540d\u7a31\uff0c\u7136\u5f8c\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a```\ngsutil cors set JSON_FILE_NAME.json gs://BUCKET_NAME\n```\n- \u5728 Cloud Storage \u5b58\u5132\u6876\u4e2d\uff0c\u627e\u5230\u751f\u6210\u7684`main.mpd`\u6587\u4ef6\u3002\u5728\u8a72\u6587\u4ef6\u7684 **\u516c\u958b\u8a2a\u554f\u6b0a\u9650** \u5217\u4e2d\uff0c\u9ede\u64ca **\u8907\u88fd\u7db2\u5740** \u3002\n- \u5c0e\u822a\u5230\u5728\u7dda\u76f4\u64ad\u64ad\u653e\u5668 [Shaka Player](https://shaka-player-demo.appspot.com/demo/?hl=zh-cn) \u3002\n- \u9ede\u64ca\u9802\u90e8\u5c0e\u822a\u6b04\u4e2d\u7684 **\u81ea\u5b9a\u7fa9\u5167\u5bb9** \u3002\n- \u9ede\u64ca **+** \u6309\u9215\u3002\n- \u5c07\u6587\u4ef6\u7684\u516c\u958b\u7db2\u5740\u7c98\u8cbc\u5230 **\u6e05\u55ae\u7db2\u5740** \u6846\u4e2d\u3002\n- \u5728 **\u540d\u7a31** \u6846\u4e2d\u8f38\u5165\u4e00\u500b\u540d\u7a31\u3002\n- \u9ede\u64ca **\u4fdd\u5b58** \u3002\n- \u9ede\u64ca **\u64ad\u653e** \u3002\n\u60a8\u61c9\u8a72\u6703\u770b\u5230\u4f5c\u7232\u76f4\u64ad\u5448\u73fe\u7684\u6e2c\u8a66\u6d41\u3002\n ## \u5411\u76f4\u64ad\u6dfb\u52a0\u5ee3\u544a\u63d2\u64ad\u6642\u9593\u9ede\u6a19\u8a18\u4f7f\u7528 [projects.locations.channels.events.create](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels.events/create?hl=zh-cn) \u65b9\u6cd5\u5411\u76f4\u64ad\u6dfb\u52a0\u5ee3\u544a\u63d2\u64ad\u6642\u9593\u9ede\u6a19\u8a18\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- ``\uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\uff1b\u4f4d\u65bc [IAM \u8a2d\u7f6e](https://console.cloud.google.com/iam-admin/settings?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **\u9805\u76ee\u7de8\u865f** \u5b57\u6bb5\u4e2d\n- ``\uff1a\u60a8\u7684\u983b\u9053\u6240\u5728\u7684\u4f4d\u7f6e\uff1b\u8acb\u4f7f\u7528 [\u652f\u6301\u7684\u5340\u57df](https://cloud.google.com/livestream/docs/locations?hl=zh-cn) \u4e4b\u4e00\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u983b\u9053\u6a19\u8b58\u7b26\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u4e8b\u4ef6\u6a19\u8b58\u7b26\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/channels/CHANNEL_ID/events/EVENT_ID\",\n \"createTime\": CREATE_TIME,\n \"updateTime\": UPDATE_TIME,\n \"adBreak\": {\n \"duration\": \"100s\"\n },\n \"executeNow\": true,\n \"state\": \"PENDING\"\n}\n```\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.Video.LiveStream.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/media/livestream/api/LiveStream.Samples/CreateChannelEvent.cs) \n```\nusing Google.Cloud.Video.LiveStream.V1;public class CreateChannelEventSample{\u00a0 \u00a0 public Event CreateChannelEvent(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0string projectId, string locationId, string channelId, string eventId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create the client.\u00a0 \u00a0 \u00a0 \u00a0 LivestreamServiceClient client = LivestreamServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 CreateEventRequest request = new CreateEventRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ParentAsChannelName = ChannelName.FromProjectLocationChannel(projectId, locationId, channelId),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EventId = eventId,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Event = new Event\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AdBreak = new Event.Types.AdBreakTask\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Duration = new Google.Protobuf.WellKnownTypes.Duration\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Seconds = 30\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ExecuteNow = true\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request.\u00a0 \u00a0 \u00a0 \u00a0 Event response = client.CreateEvent(request);\u00a0 \u00a0 \u00a0 \u00a0 return response;\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Go API \u53c3\u8003\u6587\u6a94](https://pkg.go.dev/cloud.google.com/go/video/livestream) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/media/livestream/create_channel_event.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 \"github.com/golang/protobuf/ptypes/duration\"\u00a0 \u00a0 \u00a0 \u00a0 livestream \"cloud.google.com/go/video/livestream/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/video/livestream/apiv1/livestreampb\")// createChannelEvent creates a channel event. An event is a sub-resource of a// channel, which can be scheduled by the user to execute operations on a// channel resource without having to stop the channel. This sample creates an// ad break event.func createChannelEvent(w io.Writer, projectID, location, channelID, eventID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"my-project-id\"\u00a0 \u00a0 \u00a0 \u00a0 // location := \"us-central1\"\u00a0 \u00a0 \u00a0 \u00a0 // channelID := \"my-channel\"\u00a0 \u00a0 \u00a0 \u00a0 // eventID := \"my-channel-event\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := livestream.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &livestreampb.CreateEventRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Parent: \u00a0fmt.Sprintf(\"projects/%s/locations/%s/channels/%s\", projectID, location, channelID),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EventId: eventID,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Event: &livestreampb.Event{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Task: &livestreampb.Event_AdBreak{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AdBreak: &livestreampb.Event_AdBreakTask{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Duration: &duration.Duration{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Seconds: 30,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ExecuteNow: true,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Creates the channel event.\u00a0 \u00a0 \u00a0 \u00a0 response, err := client.CreateEvent(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"CreateEvent: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Channel event: %v\", response.Name)\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-live-stream/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/media/livestream/src/main/java/com/example/livestream/CreateChannelEvent.java) \n```\nimport com.google.cloud.video.livestream.v1.ChannelName;import com.google.cloud.video.livestream.v1.CreateEventRequest;import com.google.cloud.video.livestream.v1.Event;import com.google.cloud.video.livestream.v1.Event.AdBreakTask;import com.google.cloud.video.livestream.v1.LivestreamServiceClient;import com.google.protobuf.Duration;import java.io.IOException;public class CreateChannelEvent {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String channelId = \"my-channel-id\";\u00a0 \u00a0 String eventId = \"my-channel-event-id\";\u00a0 \u00a0 createChannelEvent(projectId, location, channelId, eventId);\u00a0 }\u00a0 public static void createChannelEvent(\u00a0 \u00a0 \u00a0 String projectId, String location, String channelId, String eventId) throws IOException {\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. In this example, try-with-resources is used\u00a0 \u00a0 // which automatically calls close() on the client to clean up resources.\u00a0 \u00a0 try (LivestreamServiceClient livestreamServiceClient = LivestreamServiceClient.create()) {\u00a0 \u00a0 \u00a0 var createEventRequest =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 CreateEventRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setParent(ChannelName.of(projectId, location, channelId).toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEventId(eventId)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setEvent(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Event.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setAdBreak(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AdBreakTask.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDuration(Duration.newBuilder().setSeconds(30).build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setExecuteNow(true)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 Event response = livestreamServiceClient.createEvent(createEventRequest);\u00a0 \u00a0 \u00a0 System.out.println(\"Channel event: \" + response.getName());\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/media/livestream/createChannelEvent.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\u00a0*/// projectId = 'my-project-id';// location = 'us-central1';// channelId = 'my-channel';// eventId = 'my-channel-event';// Imports the Livestream libraryconst {LivestreamServiceClient} = require('@google-cloud/livestream').v1;// Instantiates a clientconst livestreamServiceClient = new LivestreamServiceClient();async function createChannelEvent() {\u00a0 // Construct request\u00a0 const request = {\u00a0 \u00a0 parent: livestreamServiceClient.channelPath(\u00a0 \u00a0 \u00a0 projectId,\u00a0 \u00a0 \u00a0 location,\u00a0 \u00a0 \u00a0 channelId\u00a0 \u00a0 ),\u00a0 \u00a0 eventId: eventId,\u00a0 \u00a0 event: {\u00a0 \u00a0 \u00a0 adBreak: {\u00a0 \u00a0 \u00a0 \u00a0 duration: {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 seconds: 30,\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 executeNow: true,\u00a0 \u00a0 },\u00a0 };\u00a0 // Run request\u00a0 const [event] = await livestreamServiceClient.createEvent(request);\u00a0 console.log(`Channel event: ${event.name}`);}createChannelEvent();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API PHP API \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-php/#/docs/google-cloud/latest/videolivestream/readme) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/media/livestream/src/create_channel_event.php) \n```\nuse Google\\Cloud\\Video\\LiveStream\\V1\\Event;use Google\\Cloud\\Video\\LiveStream\\V1\\Client\\LivestreamServiceClient;use Google\\Cloud\\Video\\LiveStream\\V1\\CreateEventRequest;use Google\\Protobuf\\Duration;/**\u00a0* Creates a channel event. This particular sample inserts an ad break marker.\u00a0* Other event types are supported.\u00a0*\u00a0* @param string \u00a0$callingProjectId \u00a0 The project ID to run the API call under\u00a0* @param string \u00a0$location \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 The location of the channel\u00a0* @param string \u00a0$channelId \u00a0 \u00a0 \u00a0 \u00a0 \u00a0The ID of the channel\u00a0* @param string \u00a0$eventId \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0The ID of the channel event\u00a0*/function create_channel_event(\u00a0 \u00a0 string $callingProjectId,\u00a0 \u00a0 string $location,\u00a0 \u00a0 string $channelId,\u00a0 \u00a0 string $eventId): void {\u00a0 \u00a0 // Instantiate a client.\u00a0 \u00a0 $livestreamClient = new LivestreamServiceClient();\u00a0 \u00a0 $parent = $livestreamClient->channelName($callingProjectId, $location, $channelId);\u00a0 \u00a0 $eventAdBreak = (new Event\\AdBreakTask())\u00a0 \u00a0 \u00a0 \u00a0 ->setDuration(new Duration(['seconds' => 30]));\u00a0 \u00a0 $event = (new Event())\u00a0 \u00a0 \u00a0 \u00a0 ->setAdBreak($eventAdBreak)\u00a0 \u00a0 \u00a0 \u00a0 ->setExecuteNow(true);\u00a0 \u00a0 // Run the channel event creation request.\u00a0 \u00a0 $request = (new CreateEventRequest())\u00a0 \u00a0 \u00a0 \u00a0 ->setParent($parent)\u00a0 \u00a0 \u00a0 \u00a0 ->setEvent($event)\u00a0 \u00a0 \u00a0 \u00a0 ->setEventId($eventId);\u00a0 \u00a0 $response = $livestreamClient->createEvent($request);\u00a0 \u00a0 // Print results.\u00a0 \u00a0 printf('Channel event: %s' . PHP_EOL, $response->getName());}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/video/live-stream/create_channel_event.py) \n```\nimport argparsefrom google.cloud.video import live_stream_v1from google.cloud.video.live_stream_v1.services.livestream_service import (\u00a0 \u00a0 LivestreamServiceClient,)from google.protobuf import duration_pb2 as durationdef create_channel_event(\u00a0 \u00a0 project_id: str, location: str, channel_id: str, event_id: str) -> live_stream_v1.types.Event:\u00a0 \u00a0 \"\"\"Creates a channel event.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 project_id: The GCP project ID.\u00a0 \u00a0 \u00a0 \u00a0 location: The location of the channel.\u00a0 \u00a0 \u00a0 \u00a0 channel_id: The user-defined channel ID.\u00a0 \u00a0 \u00a0 \u00a0 event_id: The user-defined event ID.\"\"\"\u00a0 \u00a0 client = LivestreamServiceClient()\u00a0 \u00a0 parent = f\"projects/{project_id}/locations/{location}/channels/{channel_id}\"\u00a0 \u00a0 name = f\"projects/{project_id}/locations/{location}/channels/{channel_id}/events/{event_id}\"\u00a0 \u00a0 event = live_stream_v1.types.Event(\u00a0 \u00a0 \u00a0 \u00a0 name=name,\u00a0 \u00a0 \u00a0 \u00a0 ad_break=live_stream_v1.types.Event.AdBreakTask(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 duration=duration.Duration(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 seconds=30,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 execute_now=True,\u00a0 \u00a0 )\u00a0 \u00a0 response = client.create_event(parent=parent, event=event, event_id=event_id)\u00a0 \u00a0 print(f\"Channel event: {response.name}\")\u00a0 \u00a0 return response\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Ruby API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/ruby/docs/reference/google-cloud-video-live_stream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-video-live_stream/samples/create_channel_event.rb) \n```\nrequire \"google/cloud/video/live_stream\"\n### Create a channel event\n## @param project_id [String] Your Google Cloud project (e.g. \"my-project\")# @param location [String] The location (e.g. \"us-central1\")# @param channel_id [String] Your channel name (e.g. \"my-channel\")# @param event_id [String] Your event name (e.g. \"my-event\")#def create_channel_event project_id:, location:, channel_id:, event_id:\u00a0 # Create a Live Stream client.\u00a0 client = Google::Cloud::Video::LiveStream.livestream_service\u00a0 # Build the resource name of the parent.\u00a0 parent = client.channel_path project: project_id, location: location, channel: channel_id\u00a0 # Set the event fields.\u00a0 new_event = {\u00a0 \u00a0 ad_break: {\u00a0 \u00a0 \u00a0 duration: {\u00a0 \u00a0 \u00a0 \u00a0 seconds: 100\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 execute_now: true\u00a0 }\u00a0 response = client.create_event parent: parent, event: new_event, event_id: event_id\u00a0 # Print the channel event name.\u00a0 puts \"Channel event: #{response.name}\"end\n```\n### \u9a57\u8b49\u5ee3\u544a\u63d2\u64ad\u6642\u9593\u9ede\u6a19\u8a18\u662f\u5426\u5b58\u5728\n\u5728\u76f4\u64ad\u4e2d\u63d2\u5165\u5ee3\u544a\u6a19\u8a18\u5f8c\uff0c\u6a19\u8a18\u7232\n`<SpliceInfoSection>`\n\u7684\u4e8b\u4ef6\u5c07\u5728\u6307\u5b9a\u7684\u5ee3\u544a\u6642\u9577\uff08100 \u79d2\uff09\u5167\u986f\u793a\u5728 DASH \u6e05\u55ae\u4e2d\u3002\n\u904b\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u67e5\u770b\u751f\u6210\u7684 DASH \u6e05\u55ae\u7684\u5167\u5bb9\uff1a\n```\ngsutil cat gs://BUCKET_NAME/main.mpd\n```\n\u60a8\u53ef\u80fd\u9700\u8981\u904b\u884c `gsutil cat` \u547d\u4ee4\u591a\u6b21\uff0c\u76f4\u5230\u986f\u793a `<SpliceInfoSection>` \u90e8\u5206\uff1a\n```\n<EventStream timescale=\"10000000\" schemeIdUri=\"urn:scte:scte35:2013:xml\">\u00a0 <Event duration=\"100000000\" id=\"809\">\u00a0 \u00a0 <SpliceInfoSection xmlns=\"urn:scte:scte35:2013:xml\">\u00a0 \u00a0 \u00a0 <SpliceInsert outOfNetworkIndicator=\"true\" spliceImmediateFlag=\"true\">\u00a0 \u00a0 \u00a0 \u00a0 <BreakDuration autoReturn=\"true\" duration=\"100000000\"/>\u00a0 \u00a0 \u00a0 </SpliceInsert>\u00a0 \u00a0 </SpliceInfoSection>\u00a0 </Event></EventStream>\n```## \u6e05\u7406\u7232\u907f\u514d\u56e0\u672c\u9801\u4e2d\u4f7f\u7528\u7684\u8cc7\u6e90\u5c0e\u81f4\u60a8\u7684 Google Cloud \u8cec\u865f\u7522\u751f\u8cbb\u7528\uff0c\u8acb\u6309\u7167\u4ee5\u4e0b\u6b65\u9a5f\u64cd\u4f5c\u3002\n### \u505c\u6b62\u983b\u9053\u4f7f\u7528 [projects.locations.channels.stop](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels/stop?hl=zh-cn) \u65b9\u6cd5\u505c\u6b62\u6e20\u9053\u3002\u4f60\u5fc5\u9808\u5148\u505c\u6b62\u8a72\u983b\u9053\uff0c\u7136\u5f8c\u624d\u80fd\u5c07\u5176\u522a\u9664\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- ``\uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\uff1b\u4f4d\u65bc [IAM \u8a2d\u7f6e](https://console.cloud.google.com/iam-admin/settings?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **\u9805\u76ee\u7de8\u865f** \u5b57\u6bb5\u4e2d\n- ``\uff1a\u60a8\u7684\u983b\u9053\u6240\u5728\u7684\u4f4d\u7f6e\uff1b\u8acb\u4f7f\u7528 [\u652f\u6301\u7684\u5340\u57df](https://cloud.google.com/livestream/docs/locations?hl=zh-cn) \u4e4b\u4e00\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u983b\u9053\u6a19\u8b58\u7b26\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.video.livestream.v1.OperationMetadata\",\n \"createTime\": CREATE_TIME,\n \"target\": \"projects/PROJECT_NUMBER/locations/LOCATION/channels/CHANNEL_ID\",\n \"verb\": \"stop\",\n \"requestedCancellation\": false,\n \"apiVersion\": \"v1\"\n },\n \"done\": false\n}\n```\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.Video.LiveStream.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/media/livestream/api/LiveStream.Samples/StopChannelAsync.cs) \n```\nusing Google.Cloud.Video.LiveStream.V1;using Google.LongRunning;using System.Threading.Tasks;public class StopChannelSample{\u00a0 \u00a0 public async Task StopChannelAsync(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0string projectId, string locationId, string channelId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create the client.\u00a0 \u00a0 \u00a0 \u00a0 LivestreamServiceClient client = LivestreamServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 StopChannelRequest request = new StopChannelRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ChannelName = ChannelName.FromProjectLocationChannel(projectId, locationId, channelId)\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request.\u00a0 \u00a0 \u00a0 \u00a0 Operation<ChannelOperationResponse, OperationMetadata> response = await client.StopChannelAsync(request);\u00a0 \u00a0 \u00a0 \u00a0 // Poll until the returned long-running operation is complete.\u00a0 \u00a0 \u00a0 \u00a0 await response.PollUntilCompletedAsync();\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Go API \u53c3\u8003\u6587\u6a94](https://pkg.go.dev/cloud.google.com/go/video/livestream) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/media/livestream/stop_channel.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 livestream \"cloud.google.com/go/video/livestream/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/video/livestream/apiv1/livestreampb\")// stopChannel stops a channel.func stopChannel(w io.Writer, projectID, location, channelID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"my-project-id\"\u00a0 \u00a0 \u00a0 \u00a0 // location := \"us-central1\"\u00a0 \u00a0 \u00a0 \u00a0 // channelID := \"my-channel-id\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := livestream.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &livestreampb.StopChannelRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: fmt.Sprintf(\"projects/%s/locations/%s/channels/%s\", projectID, location, channelID),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := client.StopChannel(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"StopChannel: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 _, err = op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"Wait: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Stopped channel\")\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-live-stream/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/media/livestream/src/main/java/com/example/livestream/StopChannel.java) \n```\nimport com.google.cloud.video.livestream.v1.ChannelName;import com.google.cloud.video.livestream.v1.LivestreamServiceClient;import java.io.IOException;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class StopChannel {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String channelId = \"my-channel-id\";\u00a0 \u00a0 stopChannel(projectId, location, channelId);\u00a0 }\u00a0 public static void stopChannel(String projectId, String location, String channelId)\u00a0 \u00a0 \u00a0 throws InterruptedException, ExecutionException, TimeoutException, IOException {\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 LivestreamServiceClient livestreamServiceClient = LivestreamServiceClient.create();\u00a0 \u00a0 ChannelName name = ChannelName.of(projectId, location, channelId);\u00a0 \u00a0 // First API call in a project can take up to 10 minutes.\u00a0 \u00a0 livestreamServiceClient.stopChannelAsync(name).get(10, TimeUnit.MINUTES);\u00a0 \u00a0 System.out.println(\"Stopped channel\");\u00a0 \u00a0 livestreamServiceClient.close();\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/media/livestream/stopChannel.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\u00a0*/// projectId = 'my-project-id';// location = 'us-central1';// channelId = 'my-channel';// Imports the Livestream libraryconst {LivestreamServiceClient} = require('@google-cloud/livestream').v1;// Instantiates a clientconst livestreamServiceClient = new LivestreamServiceClient();async function stopChannel() {\u00a0 // Construct request\u00a0 const request = {\u00a0 \u00a0 name: livestreamServiceClient.channelPath(projectId, location, channelId),\u00a0 };\u00a0 const [operation] = await livestreamServiceClient.stopChannel(request);\u00a0 await operation.promise();\u00a0 console.log('Stopped channel');}stopChannel();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API PHP API \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-php/#/docs/google-cloud/latest/videolivestream/readme) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/media/livestream/src/stop_channel.php) \n```\nuse Google\\Cloud\\Video\\LiveStream\\V1\\Client\\LivestreamServiceClient;use Google\\Cloud\\Video\\LiveStream\\V1\\StopChannelRequest;/**\u00a0* Stops a channel.\u00a0*\u00a0* @param string \u00a0$callingProjectId \u00a0 The project ID to run the API call under\u00a0* @param string \u00a0$location \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 The location of the channel\u00a0* @param string \u00a0$channelId \u00a0 \u00a0 \u00a0 \u00a0 \u00a0The ID of the channel\u00a0*/function stop_channel(\u00a0 \u00a0 string $callingProjectId,\u00a0 \u00a0 string $location,\u00a0 \u00a0 string $channelId): void {\u00a0 \u00a0 // Instantiate a client.\u00a0 \u00a0 $livestreamClient = new LivestreamServiceClient();\u00a0 \u00a0 $formattedName = $livestreamClient->channelName($callingProjectId, $location, $channelId);\u00a0 \u00a0 // Run the channel stop request. The response is a long-running operation ID.\u00a0 \u00a0 $request = (new StopChannelRequest())\u00a0 \u00a0 \u00a0 \u00a0 ->setName($formattedName);\u00a0 \u00a0 $operationResponse = $livestreamClient->stopChannel($request);\u00a0 \u00a0 $operationResponse->pollUntilComplete();\u00a0 \u00a0 if ($operationResponse->operationSucceeded()) {\u00a0 \u00a0 \u00a0 \u00a0 // Print results\u00a0 \u00a0 \u00a0 \u00a0 printf('Stopped channel' . PHP_EOL);\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 \u00a0 $error = $operationResponse->getError();\u00a0 \u00a0 \u00a0 \u00a0 // handleError($error)\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/video/live-stream/stop_channel.py) \n```\nimport argparsefrom google.cloud.video import live_stream_v1from google.cloud.video.live_stream_v1.services.livestream_service import (\u00a0 \u00a0 LivestreamServiceClient,)def stop_channel(\u00a0 \u00a0 project_id: str, location: str, channel_id: str) -> live_stream_v1.types.ChannelOperationResponse:\u00a0 \u00a0 \"\"\"Stops a channel.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 project_id: The GCP project ID.\u00a0 \u00a0 \u00a0 \u00a0 location: The location of the channel.\u00a0 \u00a0 \u00a0 \u00a0 channel_id: The user-defined channel ID.\"\"\"\u00a0 \u00a0 client = LivestreamServiceClient()\u00a0 \u00a0 name = f\"projects/{project_id}/locations/{location}/channels/{channel_id}\"\u00a0 \u00a0 operation = client.stop_channel(name=name)\u00a0 \u00a0 response = operation.result(600)\u00a0 \u00a0 print(\"Stopped channel\")\u00a0 \u00a0 return response\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Ruby API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/ruby/docs/reference/google-cloud-video-live_stream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-video-live_stream/samples/stop_channel.rb) \n```\nrequire \"google/cloud/video/live_stream\"\n### Stops a channel\n## @param project_id [String] Your Google Cloud project (e.g. \"my-project\")# @param location [String] The location (e.g. \"us-central1\")# @param channel_id [String] Your channel name (e.g. \"my-channel\")#def stop_channel project_id:, location:, channel_id:\u00a0 # Create a Live Stream client.\u00a0 client = Google::Cloud::Video::LiveStream.livestream_service\u00a0 # Build the resource name of the channel.\u00a0 name = client.channel_path project: project_id, location: location, channel: channel_id\u00a0 # Stop the channel.\u00a0 operation = client.stop_channel name: name\u00a0 # The returned object is of type Gapic::Operation. You can use this\u00a0 # object to check the status of an operation, cancel it, or wait\u00a0 # for results. Here is how to block until completion:\u00a0 operation.wait_until_done!\u00a0 # Print a success message.\u00a0 puts \"Stopped channel\"end\n```\u4f7f\u7528  [\u6aa2\u67e5\u64cd\u4f5c\u72c0\u614b](#check_for_result) \uff0c\u76f4\u5230\u7d50\u679c\u4e2d\u7372\u5f97 `\"done\":true` \u3002\n### \u505c\u6b62\u8f38\u5165\u6d41\u5982\u679c\u60a8\u4f7f\u7528 `ffmpeg` \u767c\u9001\u8f38\u5165\u6d41\uff0c\u5247\u5728\u60a8\u505c\u6b62\u901a\u9053\u5f8c\uff0c\u9023\u63a5\u6703\u81ea\u52d5\u65b7\u958b\u3002\n\u5982\u679c\u60a8\u4f7f\u7528\u5176\u4ed6\u5177\u6709\u91cd\u8a66\u6a5f\u5236\u7684\u7de8\u78bc\u5668\uff0c\u5247\u53ef\u80fd\u9700\u8981\u624b\u52d5\u505c\u6b62\u8f38\u5165\u6d41\u3002\n### \u522a\u9664\u6d3b\u52d5\u4f7f\u7528 [projects.locations.channels.events.delete](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels.events/delete?hl=zh-cn) \u65b9\u6cd5\u522a\u9664\u5ee3\u544a\u63d2\u64ad\u6642\u9593\u9ede\u4e8b\u4ef6\u3002\u60a8\u5fc5\u9808\u5148\u522a\u9664\u983b\u9053\u4e8b\u4ef6\uff0c\u7136\u5f8c\u624d\u80fd\u522a\u9664\u983b\u9053\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- ``\uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\uff1b\u4f4d\u65bc [IAM \u8a2d\u7f6e](https://console.cloud.google.com/iam-admin/settings?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **\u9805\u76ee\u7de8\u865f** \u5b57\u6bb5\u4e2d\n- ``\uff1a\u60a8\u7684\u983b\u9053\u6240\u5728\u7684\u4f4d\u7f6e\uff1b\u8acb\u4f7f\u7528 [\u652f\u6301\u7684\u5340\u57df](https://cloud.google.com/livestream/docs/locations?hl=zh-cn) \u4e4b\u4e00\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u983b\u9053\u6a19\u8b58\u7b26\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u4e8b\u4ef6\u6a19\u8b58\u7b26\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{}\n```\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.Video.LiveStream.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/media/livestream/api/LiveStream.Samples/DeleteChannelEvent.cs) \n```\nusing Google.Cloud.Video.LiveStream.V1;public class DeleteChannelEventSample{\u00a0 \u00a0 public void DeleteChannelEvent(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0string projectId, string locationId, string channelId, string eventId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create the client.\u00a0 \u00a0 \u00a0 \u00a0 LivestreamServiceClient client = LivestreamServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 DeleteEventRequest request = new DeleteEventRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EventName = EventName.FromProjectLocationChannelEvent(projectId, locationId, channelId, eventId),\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request.\u00a0 \u00a0 \u00a0 \u00a0 client.DeleteEvent(request);\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Go API \u53c3\u8003\u6587\u6a94](https://pkg.go.dev/cloud.google.com/go/video/livestream) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/media/livestream/delete_channel_event.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 livestream \"cloud.google.com/go/video/livestream/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/video/livestream/apiv1/livestreampb\")// deleteChannelEvent deletes a previously-created channel event.func deleteChannelEvent(w io.Writer, projectID, location, channelID, eventID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"my-project-id\"\u00a0 \u00a0 \u00a0 \u00a0 // location := \"us-central1\"\u00a0 \u00a0 \u00a0 \u00a0 // channelID := \"my-channel\"\u00a0 \u00a0 \u00a0 \u00a0 // eventID := \"my-channel-event\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := livestream.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &livestreampb.DeleteEventRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: fmt.Sprintf(\"projects/%s/locations/%s/channels/%s/events/%s\", projectID, location, channelID, eventID),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 err = client.DeleteEvent(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"DeleteEvent: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Deleted channel event\")\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-live-stream/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/media/livestream/src/main/java/com/example/livestream/DeleteChannelEvent.java) \n```\nimport com.google.cloud.video.livestream.v1.DeleteEventRequest;import com.google.cloud.video.livestream.v1.EventName;import com.google.cloud.video.livestream.v1.LivestreamServiceClient;import java.io.IOException;public class DeleteChannelEvent {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String channelId = \"my-channel-id\";\u00a0 \u00a0 String eventId = \"my-channel-event-id\";\u00a0 \u00a0 deleteChannelEvent(projectId, location, channelId, eventId);\u00a0 }\u00a0 public static void deleteChannelEvent(\u00a0 \u00a0 \u00a0 String projectId, String location, String channelId, String eventId) throws IOException {\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. In this example, try-with-resources is used\u00a0 \u00a0 // which automatically calls close() on the client to clean up resources.\u00a0 \u00a0 try (LivestreamServiceClient livestreamServiceClient = LivestreamServiceClient.create()) {\u00a0 \u00a0 \u00a0 var deleteEventRequest =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeleteEventRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setName(EventName.of(projectId, location, channelId, eventId).toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 livestreamServiceClient.deleteEvent(deleteEventRequest);\u00a0 \u00a0 \u00a0 System.out.println(\"Deleted channel event\");\u00a0 \u00a0 }\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/media/livestream/deleteChannelEvent.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\u00a0*/// projectId = 'my-project-id';// location = 'us-central1';// channelId = 'my-channel';// eventId = 'my-channel-event';// Imports the Livestream libraryconst {LivestreamServiceClient} = require('@google-cloud/livestream').v1;// Instantiates a clientconst livestreamServiceClient = new LivestreamServiceClient();async function deleteChannelEvent() {\u00a0 // Construct request\u00a0 const request = {\u00a0 \u00a0 name: livestreamServiceClient.eventPath(\u00a0 \u00a0 \u00a0 projectId,\u00a0 \u00a0 \u00a0 location,\u00a0 \u00a0 \u00a0 channelId,\u00a0 \u00a0 \u00a0 eventId\u00a0 \u00a0 ),\u00a0 };\u00a0 // Run request\u00a0 await livestreamServiceClient.deleteEvent(request);\u00a0 console.log('Deleted channel event');}deleteChannelEvent();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API PHP API \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-php/#/docs/google-cloud/latest/videolivestream/readme) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/media/livestream/src/delete_channel_event.php) \n```\nuse Google\\Cloud\\Video\\LiveStream\\V1\\Client\\LivestreamServiceClient;use Google\\Cloud\\Video\\LiveStream\\V1\\DeleteEventRequest;/**\u00a0* Deletes a channel event.\u00a0*\u00a0* @param string \u00a0$callingProjectId \u00a0 The project ID to run the API call under\u00a0* @param string \u00a0$location \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 The location of the channel\u00a0* @param string \u00a0$channelId \u00a0 \u00a0 \u00a0 \u00a0 \u00a0The ID of the channel\u00a0* @param string \u00a0$eventId \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0The ID of the channel event to be deleted\u00a0*/function delete_channel_event(\u00a0 \u00a0 string $callingProjectId,\u00a0 \u00a0 string $location,\u00a0 \u00a0 string $channelId,\u00a0 \u00a0 string $eventId): void {\u00a0 \u00a0 // Instantiate a client.\u00a0 \u00a0 $livestreamClient = new LivestreamServiceClient();\u00a0 \u00a0 $formattedName = $livestreamClient->eventName($callingProjectId, $location, $channelId, $eventId);\u00a0 \u00a0 // Run the channel event deletion request.\u00a0 \u00a0 $request = (new DeleteEventRequest())\u00a0 \u00a0 \u00a0 \u00a0 ->setName($formattedName);\u00a0 \u00a0 $livestreamClient->deleteEvent($request);\u00a0 \u00a0 printf('Deleted channel event %s' . PHP_EOL, $eventId);}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/video/live-stream/delete_channel_event.py) \n```\nimport argparsefrom google.cloud.video.live_stream_v1.services.livestream_service import (\u00a0 \u00a0 LivestreamServiceClient,)def delete_channel_event(\u00a0 \u00a0 project_id: str, location: str, channel_id: str, event_id: str) -> None:\u00a0 \u00a0 \"\"\"Deletes a channel event.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 project_id: The GCP project ID.\u00a0 \u00a0 \u00a0 \u00a0 location: The location of the channel.\u00a0 \u00a0 \u00a0 \u00a0 channel_id: The user-defined channel ID.\u00a0 \u00a0 \u00a0 \u00a0 event_id: The user-defined event ID.\"\"\"\u00a0 \u00a0 client = LivestreamServiceClient()\u00a0 \u00a0 name = f\"projects/{project_id}/locations/{location}/channels/{channel_id}/events/{event_id}\"\u00a0 \u00a0 response = client.delete_event(name=name)\u00a0 \u00a0 print(\"Deleted channel event\")\u00a0 \u00a0 return response\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Ruby API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/ruby/docs/reference/google-cloud-video-live_stream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-video-live_stream/samples/delete_channel_event.rb) \n```\nrequire \"google/cloud/video/live_stream\"\n### Delete a channel event\n## @param project_id [String] Your Google Cloud project (e.g. \"my-project\")# @param location [String] The location (e.g. \"us-central1\")# @param channel_id [String] Your channel name (e.g. \"my-channel\")# @param event_id [String] Your event name (e.g. \"my-event\")#def delete_channel_event project_id:, location:, channel_id:, event_id:\u00a0 # Create a Live Stream client.\u00a0 client = Google::Cloud::Video::LiveStream.livestream_service\u00a0 # Build the resource name of the channel event.\u00a0 name = client.event_path project: project_id, location: location, channel: channel_id, event: event_id\u00a0 # Delete the channel event.\u00a0 client.delete_event name: name\u00a0 # Print a success message.\u00a0 puts \"Deleted channel event\"end\n```\n### \u522a\u9664\u983b\u9053\u4f7f\u7528 [projects.locations.channels.delete](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels/delete?hl=zh-cn) \u65b9\u6cd5\u522a\u9664\u983b\u9053\u3002\u60a8\u5fc5\u9808\u5148\u522a\u9664\u6e20\u9053\uff0c\u7136\u5f8c\u624d\u80fd\u522a\u9664\u8a72\u6e20\u9053\u4f7f\u7528\u7684\u8f38\u5165\u7aef\u9ede\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- ``\uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\uff1b\u4f4d\u65bc [IAM \u8a2d\u7f6e](https://console.cloud.google.com/iam-admin/settings?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **\u9805\u76ee\u7de8\u865f** \u5b57\u6bb5\u4e2d\n- ``\uff1a\u60a8\u7684\u983b\u9053\u6240\u5728\u7684\u4f4d\u7f6e\uff1b\u8acb\u4f7f\u7528 [\u652f\u6301\u7684\u5340\u57df](https://cloud.google.com/livestream/docs/locations?hl=zh-cn) \u4e4b\u4e00\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u983b\u9053\u6a19\u8b58\u7b26\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.video.livestream.v1.OperationMetadata\",\n \"createTime\": CREATE_TIME,\n \"target\": \"projects/PROJECT_NUMBER/locations/LOCATION/channels/CHANNEL_ID\",\n \"verb\": \"delete\",\n \"requestedCancellation\": false,\n \"apiVersion\": \"v1\"\n },\n \"done\": false\n}\n```\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.Video.LiveStream.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/media/livestream/api/LiveStream.Samples/DeleteChannelAsync.cs) \n```\nusing Google.Cloud.Video.LiveStream.V1;using Google.LongRunning;using Google.Protobuf.WellKnownTypes;using System.Threading.Tasks;public class DeleteChannelSample{\u00a0 \u00a0 public async Task DeleteChannelAsync(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0string projectId, string locationId, string channelId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create the client.\u00a0 \u00a0 \u00a0 \u00a0 LivestreamServiceClient client = LivestreamServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 DeleteChannelRequest request = new DeleteChannelRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ChannelName = ChannelName.FromProjectLocationChannel(projectId, locationId, channelId)\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request.\u00a0 \u00a0 \u00a0 \u00a0 Operation<Empty, OperationMetadata> response = await client.DeleteChannelAsync(request);\u00a0 \u00a0 \u00a0 \u00a0 // Poll until the returned long-running operation is complete.\u00a0 \u00a0 \u00a0 \u00a0 await response.PollUntilCompletedAsync();\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Go API \u53c3\u8003\u6587\u6a94](https://pkg.go.dev/cloud.google.com/go/video/livestream) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/media/livestream/delete_channel.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 livestream \"cloud.google.com/go/video/livestream/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/video/livestream/apiv1/livestreampb\")// deleteChannel deletes a previously-created channel.func deleteChannel(w io.Writer, projectID, location, channelID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"my-project-id\"\u00a0 \u00a0 \u00a0 \u00a0 // location := \"us-central1\"\u00a0 \u00a0 \u00a0 \u00a0 // channelID := \"my-channel\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := livestream.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &livestreampb.DeleteChannelRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: fmt.Sprintf(\"projects/%s/locations/%s/channels/%s\", projectID, location, channelID),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := client.DeleteChannel(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"DeleteChannel: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 err = op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"Wait: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Deleted channel\")\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-live-stream/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/media/livestream/src/main/java/com/example/livestream/DeleteChannel.java) \n```\nimport com.google.cloud.video.livestream.v1.ChannelName;import com.google.cloud.video.livestream.v1.DeleteChannelRequest;import com.google.cloud.video.livestream.v1.LivestreamServiceClient;import java.io.IOException;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class DeleteChannel {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String channelId = \"my-channel-id\";\u00a0 \u00a0 deleteChannel(projectId, location, channelId);\u00a0 }\u00a0 public static void deleteChannel(String projectId, String location, String channelId)\u00a0 \u00a0 \u00a0 throws InterruptedException, ExecutionException, TimeoutException, IOException {\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 LivestreamServiceClient livestreamServiceClient = LivestreamServiceClient.create();\u00a0 \u00a0 var deleteChannelRequest =\u00a0 \u00a0 \u00a0 \u00a0 DeleteChannelRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setName(ChannelName.of(projectId, location, channelId).toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // First API call in a project can take up to 10 minutes.\u00a0 \u00a0 livestreamServiceClient.deleteChannelAsync(deleteChannelRequest).get(10, TimeUnit.MINUTES);\u00a0 \u00a0 System.out.println(\"Deleted channel\");\u00a0 \u00a0 livestreamServiceClient.close();\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/media/livestream/deleteChannel.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\u00a0*/// projectId = 'my-project-id';// location = 'us-central1';// channelId = 'my-channel';// Imports the Livestream libraryconst {LivestreamServiceClient} = require('@google-cloud/livestream').v1;// Instantiates a clientconst livestreamServiceClient = new LivestreamServiceClient();async function deleteChannel() {\u00a0 // Construct request\u00a0 const request = {\u00a0 \u00a0 name: livestreamServiceClient.channelPath(projectId, location, channelId),\u00a0 };\u00a0 // Run request\u00a0 const [operation] = await livestreamServiceClient.deleteChannel(request);\u00a0 await operation.promise();\u00a0 console.log('Deleted channel');}deleteChannel();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API PHP API \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-php/#/docs/google-cloud/latest/videolivestream/readme) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/media/livestream/src/delete_channel.php) \n```\nuse Google\\Cloud\\Video\\LiveStream\\V1\\Client\\LivestreamServiceClient;use Google\\Cloud\\Video\\LiveStream\\V1\\DeleteChannelRequest;/**\u00a0* Deletes a channel.\u00a0*\u00a0* @param string \u00a0$callingProjectId \u00a0 The project ID to run the API call under\u00a0* @param string \u00a0$location \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 The location of the channel\u00a0* @param string \u00a0$channelId \u00a0 \u00a0 \u00a0 \u00a0 \u00a0The ID of the channel to be deleted\u00a0*/function delete_channel(\u00a0 \u00a0 string $callingProjectId,\u00a0 \u00a0 string $location,\u00a0 \u00a0 string $channelId): void {\u00a0 \u00a0 // Instantiate a client.\u00a0 \u00a0 $livestreamClient = new LivestreamServiceClient();\u00a0 \u00a0 $formattedName = $livestreamClient->channelName($callingProjectId, $location, $channelId);\u00a0 \u00a0 // Run the channel deletion request. The response is a long-running operation ID.\u00a0 \u00a0 $request = (new DeleteChannelRequest())\u00a0 \u00a0 \u00a0 \u00a0 ->setName($formattedName);\u00a0 \u00a0 $operationResponse = $livestreamClient->deleteChannel($request);\u00a0 \u00a0 $operationResponse->pollUntilComplete();\u00a0 \u00a0 if ($operationResponse->operationSucceeded()) {\u00a0 \u00a0 \u00a0 \u00a0 // Print status\u00a0 \u00a0 \u00a0 \u00a0 printf('Deleted channel %s' . PHP_EOL, $channelId);\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 \u00a0 $error = $operationResponse->getError();\u00a0 \u00a0 \u00a0 \u00a0 // handleError($error)\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/video/live-stream/delete_channel.py) \n```\nimport argparsefrom google.cloud.video.live_stream_v1.services.livestream_service import (\u00a0 \u00a0 LivestreamServiceClient,)from google.protobuf import empty_pb2 as emptydef delete_channel(project_id: str, location: str, channel_id: str) -> empty.Empty:\u00a0 \u00a0 \"\"\"Deletes a channel.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 project_id: The GCP project ID.\u00a0 \u00a0 \u00a0 \u00a0 location: The location of the channel.\u00a0 \u00a0 \u00a0 \u00a0 channel_id: The user-defined channel ID.\"\"\"\u00a0 \u00a0 client = LivestreamServiceClient()\u00a0 \u00a0 name = f\"projects/{project_id}/locations/{location}/channels/{channel_id}\"\u00a0 \u00a0 operation = client.delete_channel(name=name)\u00a0 \u00a0 response = operation.result(600)\u00a0 \u00a0 print(\"Deleted channel\")\u00a0 \u00a0 return response\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Ruby API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/ruby/docs/reference/google-cloud-video-live_stream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-video-live_stream/samples/delete_channel.rb) \n```\nrequire \"google/cloud/video/live_stream\"\n### Delete a channel\n## @param project_id [String] Your Google Cloud project (e.g. \"my-project\")# @param location [String] The location (e.g. \"us-central1\")# @param channel_id [String] Your channel name (e.g. \"my-channel\")#def delete_channel project_id:, location:, channel_id:\u00a0 # Create a Live Stream client.\u00a0 client = Google::Cloud::Video::LiveStream.livestream_service\u00a0 # Build the resource name of the channel.\u00a0 name = client.channel_path project: project_id, location: location, channel: channel_id\u00a0 # Delete the channel.\u00a0 operation = client.delete_channel name: name\u00a0 # The returned object is of type Gapic::Operation. You can use this\u00a0 # object to check the status of an operation, cancel it, or wait\u00a0 # for results. Here is how to block until completion:\u00a0 operation.wait_until_done!\u00a0 # Print a success message.\u00a0 puts \"Deleted channel\"end\n```\u4f7f\u7528  [\u6aa2\u67e5\u64cd\u4f5c\u72c0\u614b](#check_for_result) \uff0c\u76f4\u5230\u7d50\u679c\u4e2d\u7372\u5f97 `\"done\":true` \u3002\n### \u522a\u9664\u8f38\u5165\u7aef\u9ede\u4f7f\u7528 [projects.locations.inputs.delete](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.inputs/delete?hl=zh-cn) \u65b9\u6cd5\u522a\u9664\u8f38\u5165\u7aef\u9ede\u3002\u5728\u4f7f\u7528\u4efb\u4f55\u8acb\u6c42\u6578\u64da\u4e4b\u524d\uff0c\u8acb\u5148\u9032\u884c\u4ee5\u4e0b\u66ff\u63db\uff1a- ``\uff1a\u60a8\u7684 Google Cloud \u9805\u76ee\u7de8\u865f\uff1b\u4f4d\u65bc [IAM \u8a2d\u7f6e](https://console.cloud.google.com/iam-admin/settings?hl=zh-cn) \u9801\u9762\u4e0a\u7684 **\u9805\u76ee\u7de8\u865f** \u5b57\u6bb5\u4e2d\n- ``\uff1a\u8f38\u5165\u7aef\u9ede\u6240\u5728\u7684\u4f4d\u7f6e\uff1b\u8acb\u4f7f\u7528 [\u652f\u6301\u7684\u5340\u57df](https://cloud.google.com/livestream/docs/locations?hl=zh-cn) \u4e4b\u4e00\n- ``\uff1a\u7528\u6236\u5b9a\u7fa9\u7684\u8f38\u5165\u7aef\u9ede\u6a19\u8b58\u7b26\n\u5982\u9700\u767c\u9001\u60a8\u7684\u8acb\u6c42\uff0c\u8acb\u5c55\u958b\u4ee5\u4e0b\u9078\u9805\u4e4b\u4e00\uff1a\u60a8\u61c9\u8a72\u6536\u5230\u985e\u4f3c\u4ee5\u4e0b\u5167\u5bb9\u7684 JSON \u97ff\u61c9\uff1a\n```\n{\n \"name\": \"projects/PROJECT_NUMBER/locations/LOCATION/operations/OPERATION_ID\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.video.livestream.v1.OperationMetadata\",\n \"createTime\": CREATE_TIME,\n \"target\": \"projects/PROJECT_NUMBER/locations/LOCATION/inputs/INPUT_ID\",\n \"verb\": \"delete\",\n \"requestedCancellation\": false,\n \"apiVersion\": \"v1\"\n },\n \"done\": false\n}\n```\n\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API C# API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/dotnet/docs/reference/Google.Cloud.Video.LiveStream.V1/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/HEAD/media/livestream/api/LiveStream.Samples/DeleteInputAsync.cs) \n```\nusing Google.Cloud.Video.LiveStream.V1;using Google.LongRunning;using Google.Protobuf.WellKnownTypes;using System.Threading.Tasks;public class DeleteInputSample{\u00a0 \u00a0 public async Task DeleteInputAsync(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0string projectId, string locationId, string inputId)\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create the client.\u00a0 \u00a0 \u00a0 \u00a0 LivestreamServiceClient client = LivestreamServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 DeleteInputRequest request = new DeleteInputRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 InputName = InputName.FromProjectLocationInput(projectId, locationId, inputId)\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request.\u00a0 \u00a0 \u00a0 \u00a0 Operation<Empty, OperationMetadata> response = await client.DeleteInputAsync(request);\u00a0 \u00a0 \u00a0 \u00a0 // Poll until the returned long-running operation is complete.\u00a0 \u00a0 \u00a0 \u00a0 await response.PollUntilCompletedAsync();\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Go API \u53c3\u8003\u6587\u6a94](https://pkg.go.dev/cloud.google.com/go/video/livestream) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/media/livestream/delete_input.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"io\"\u00a0 \u00a0 \u00a0 \u00a0 livestream \"cloud.google.com/go/video/livestream/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/video/livestream/apiv1/livestreampb\")// deleteInput deletes a previously-created input endpoint.func deleteInput(w io.Writer, projectID, location, inputID string) error {\u00a0 \u00a0 \u00a0 \u00a0 // projectID := \"my-project-id\"\u00a0 \u00a0 \u00a0 \u00a0 // location := \"us-central1\"\u00a0 \u00a0 \u00a0 \u00a0 // inputID := \"my-input\"\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 client, err := livestream.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"NewClient: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &livestreampb.DeleteInputRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: fmt.Sprintf(\"projects/%s/locations/%s/inputs/%s\", projectID, location, inputID),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := client.DeleteInput(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"DeleteInput: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 err = op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return fmt.Errorf(\"Wait: %w\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Fprintf(w, \"Deleted input\")\u00a0 \u00a0 \u00a0 \u00a0 return nil}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Java API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/java/docs/reference/google-cloud-live-stream/latest/overview?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/media/livestream/src/main/java/com/example/livestream/DeleteInput.java) \n```\nimport com.google.cloud.video.livestream.v1.DeleteInputRequest;import com.google.cloud.video.livestream.v1.InputName;import com.google.cloud.video.livestream.v1.LivestreamServiceClient;import java.io.IOException;import java.util.concurrent.ExecutionException;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;public class DeleteInput {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 // TODO(developer): Replace these variables before running the sample.\u00a0 \u00a0 String projectId = \"my-project-id\";\u00a0 \u00a0 String location = \"us-central1\";\u00a0 \u00a0 String inputId = \"my-input-id\";\u00a0 \u00a0 deleteInput(projectId, location, inputId);\u00a0 }\u00a0 public static void deleteInput(String projectId, String location, String inputId)\u00a0 \u00a0 \u00a0 throws InterruptedException, ExecutionException, TimeoutException, IOException {\u00a0 \u00a0 // Initialize client that will be used to send requests. This client only needs to be created\u00a0 \u00a0 // once, and can be reused for multiple requests. After completing all of your requests, call\u00a0 \u00a0 // the \"close\" method on the client to safely clean up any remaining background resources.\u00a0 \u00a0 LivestreamServiceClient livestreamServiceClient = LivestreamServiceClient.create();\u00a0 \u00a0 var deleteInputRequest =\u00a0 \u00a0 \u00a0 \u00a0 DeleteInputRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setName(InputName.of(projectId, location, inputId).toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 // First API call in a project can take up to 10 minutes.\u00a0 \u00a0 livestreamServiceClient.deleteInputAsync(deleteInputRequest).get(10, TimeUnit.MINUTES);\u00a0 \u00a0 System.out.println(\"Deleted input\");\u00a0 \u00a0 livestreamServiceClient.close();\u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Node.js API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/nodejs/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/media/livestream/deleteInput.js) \n```\n/**\u00a0* TODO(developer): Uncomment these variables before running the sample.\u00a0*/// projectId = 'my-project-id';// location = 'us-central1';// inputId = 'my-input';// Imports the Livestream libraryconst {LivestreamServiceClient} = require('@google-cloud/livestream').v1;// Instantiates a clientconst livestreamServiceClient = new LivestreamServiceClient();async function deleteInput() {\u00a0 // Construct request\u00a0 const request = {\u00a0 \u00a0 name: livestreamServiceClient.inputPath(projectId, location, inputId),\u00a0 };\u00a0 // Run request\u00a0 const [operation] = await livestreamServiceClient.deleteInput(request);\u00a0 await operation.promise();\u00a0 console.log('Deleted input');}deleteInput();\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API PHP API \u53c3\u8003\u6587\u6a94](https://googleapis.github.io/google-cloud-php/#/docs/google-cloud/latest/videolivestream/readme) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/php-docs-samples/blob/HEAD/media/livestream/src/delete_input.php) \n```\nuse Google\\Cloud\\Video\\LiveStream\\V1\\Client\\LivestreamServiceClient;use Google\\Cloud\\Video\\LiveStream\\V1\\DeleteInputRequest;/**\u00a0* Deletes an input.\u00a0*\u00a0* @param string \u00a0$callingProjectId \u00a0 The project ID to run the API call under\u00a0* @param string \u00a0$location \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 The location of the input\u00a0* @param string \u00a0$inputId \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0The ID of the input to be deleted\u00a0*/function delete_input(\u00a0 \u00a0 string $callingProjectId,\u00a0 \u00a0 string $location,\u00a0 \u00a0 string $inputId): void {\u00a0 \u00a0 // Instantiate a client.\u00a0 \u00a0 $livestreamClient = new LivestreamServiceClient();\u00a0 \u00a0 $formattedName = $livestreamClient->inputName($callingProjectId, $location, $inputId);\u00a0 \u00a0 // Run the input deletion request. The response is a long-running operation ID.\u00a0 \u00a0 $request = (new DeleteInputRequest())\u00a0 \u00a0 \u00a0 \u00a0 ->setName($formattedName);\u00a0 \u00a0 $operationResponse = $livestreamClient->deleteInput($request);\u00a0 \u00a0 $operationResponse->pollUntilComplete();\u00a0 \u00a0 if ($operationResponse->operationSucceeded()) {\u00a0 \u00a0 \u00a0 \u00a0 // Print status\u00a0 \u00a0 \u00a0 \u00a0 printf('Deleted input %s' . PHP_EOL, $inputId);\u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 \u00a0 $error = $operationResponse->getError();\u00a0 \u00a0 \u00a0 \u00a0 // handleError($error)\u00a0 \u00a0 }}\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Python API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/python/docs/reference/livestream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/video/live-stream/delete_input.py) \n```\nimport argparsefrom google.cloud.video.live_stream_v1.services.livestream_service import (\u00a0 \u00a0 LivestreamServiceClient,)from google.protobuf import empty_pb2 as emptydef delete_input(project_id: str, location: str, input_id: str) -> empty.Empty:\u00a0 \u00a0 \"\"\"Deletes an input.\u00a0 \u00a0 Args:\u00a0 \u00a0 \u00a0 \u00a0 project_id: The GCP project ID.\u00a0 \u00a0 \u00a0 \u00a0 location: The location of the input.\u00a0 \u00a0 \u00a0 \u00a0 input_id: The user-defined input ID.\"\"\"\u00a0 \u00a0 client = LivestreamServiceClient()\u00a0 \u00a0 name = f\"projects/{project_id}/locations/{location}/inputs/{input_id}\"\u00a0 \u00a0 operation = client.delete_input(name=name)\u00a0 \u00a0 response = operation.result(600)\u00a0 \u00a0 print(\"Deleted input\")\u00a0 \u00a0 return response\n```\u5982\u9700\u77ad\u89e3\u5982\u4f55\u5b89\u88dd\u548c\u4f7f\u7528 Live Stream API \u5ba2\u6236\u7aef\u5eab\uff0c\u8acb\u53c3\u95b1 [Live Stream API \u5ba2\u6236\u7aef\u5eab](https://cloud.google.com/livestream/docs/reference/libraries?hl=zh-cn) \u3002 \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [Live Stream API Ruby API \u53c3\u8003\u6587\u6a94](https://cloud.google.com/ruby/docs/reference/google-cloud-video-live_stream/latest?hl=zh-cn) \u3002\n\u5982\u9700\u5411 Live Stream API \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-video-live_stream/samples/delete_input.rb) \n```\nrequire \"google/cloud/video/live_stream\"\n### Delete an input endpoint\n## @param project_id [String] Your Google Cloud project (e.g. \"my-project\")# @param location [String] The location (e.g. \"us-central1\")# @param input_id [String] Your input name (e.g. \"my-input\")#def delete_input project_id:, location:, input_id:\u00a0 # Create a Live Stream client.\u00a0 client = Google::Cloud::Video::LiveStream.livestream_service\u00a0 # Build the resource name of the input.\u00a0 name = client.input_path project: project_id, location: location, input: input_id\u00a0 # Delete the input.\u00a0 operation = client.delete_input name: name\u00a0 # The returned object is of type Gapic::Operation. You can use this\u00a0 # object to check the status of an operation, cancel it, or wait\u00a0 # for results. Here is how to block until completion:\u00a0 operation.wait_until_done!\u00a0 # Print a success message.\u00a0 puts \"Deleted input\"end\n```\n### \u522a\u9664 Cloud Storage \u5b58\u5132\u6876\u8acb\u6ce8\u610f\uff0c\u505c\u6b62\u983b\u9053\u5f8c\uff0c\u7cfb\u7d71\u6703\u522a\u9664\u7531 Live Stream API \u751f\u6210\u7684\u5b58\u5132\u6876\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u548c\u6587\u4ef6\u593e\u3002- \u5728 Google Cloud \u63a7\u5236\u6aaf\u4e2d\uff0c\u524d\u5f80\u201cCloud Storage \u700f\u89bd\u5668\u201d\u9801\u9762\u3002 [\u8f49\u5230\u201cCloud Storage \u700f\u89bd\u5668\u201d\u9801\u9762](https://console.cloud.google.com/storage/browser?hl=zh-cn) \n- \u9078\u4e2d\u6240\u5275\u5efa\u5b58\u5132\u6876\u65c1\u908a\u7684\u8907\u9078\u6846\u3002\n- \u9ede\u64ca **\u522a\u9664** \u3002\n- \u5728\u986f\u793a\u7684\u5f48\u51fa\u5f0f\u7a97\u53e3\u4e2d\uff0c\u9ede\u64ca **\u522a\u9664** \u4ee5\u6c38\u4e45\u522a\u9664\u5b58\u5132\u6876\u53ca\u5176\u5167\u5bb9\u3002\n### \u64a4\u6d88\u60a8\u7684\u6191\u64da- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u53ef\u9078\uff1a\u64a4\u6d88\u60a8\u5275\u5efa\u7684\u8eab\u4efd\u9a57\u8b49\u6191\u64da\uff0c\u4e26\u522a\u9664\u672c\u5730\u6191\u64da\u6587\u4ef6\u3002```\ngcloud auth application-default revoke\n```\n- Titles in dynamic includes are not used anywhere, and we should avoid paying to translate them\n- \u53ef\u9078\uff1a\u5f9e gcloud CLI \u64a4\u6d88\u6191\u64da\u3002```\ngcloud auth revoke\n```\n## \u5f8c\u7e8c\u6b65\u9a5f\n- \u8acb\u5617\u8a66\u6309\u7167 [HLS \u76f4\u64ad](https://cloud.google.com/livestream/docs/quickstarts/quickstart-hls?hl=zh-cn) \u7684\u5feb\u901f\u5165\u9580\u8aaa\u660e\u9032\u884c\u64cd\u4f5c\u3002\n- \u77ad\u89e3\u5982\u4f55 [\u914d\u7f6e\u5099\u7528\u8f38\u5165\u6d41](https://cloud.google.com/livestream/docs/how-to/configure-backup-stream?hl=zh-cn) \u3002", "guide": "Live Stream API"}