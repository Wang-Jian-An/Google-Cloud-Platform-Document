{"title": "Live Stream API - Overview of the Live Stream API", "url": "https://cloud.google.com/livestream/docs/overview", "abstract": "# Live Stream API - Overview of the Live Stream API\nThis page provides an overview of the Live Stream API. The Live Stream API transcodes mezzanine live signals into direct-to-consumer streaming formats, including Dynamic Adaptive Streaming over HTTP (DASH/MPEG-DASH), and HTTP Live Streaming (HLS), for multiple device platforms.\nYou first create an input endpoint, then create a channel resource that transcodes the live SRT or RTMP input signal into an HLS or DASH output stream. Output streams created by the Live Stream API are saved to Cloud Storage buckets. You can then configure a Cloud Storage bucket as a backend for Media CDN.\n", "content": "## Features\nThe Live Stream API includes support for the following features:\n- Automatic infrastructure provisioning\n- Integration with Cloud Storage, Cloud Audit Logs, and Google Cloud infrastructure\n- Configuration of a backup input stream for redundancy\n- Content encryption\n- Slates (image and video)\n### Supported inputs and outputs\nThe following tables show the supported input and output formats for the Live Stream API.\n| Input types | Supported formats     |\n|:--------------|:-----------------------------------|\n| Protocols  | SRT, RTMP       |\n| Video codecs | H.264 (AVC)      |\n| Audio codecs | AAC        |\n| Captions  | Embedded CEA-608/708 (passthrough) |\n| Output types  | Supported formats              |\n|:-------------------|:------------------------------------------------------------------------|\n| Protocols   | Apple HLS with fMP4 and MPEG2-TS segments, MPEG-DASH with fMP4 segments |\n| Video codecs  | H.264 (AVC)                |\n| Audio codecs  | AAC                  |\n| Captions   | Embedded CEA-608/708 (passthrough)          |\n| Encryption   | AES-128, SAMPLE-AES, MPEG-CENC           |\n| Spritesheet images | JPG tiles, single images            |\nSee the [supported configurations for content encryption](/livestream/docs/how-to/encrypt-content#supported-configurations) .\n## Access control\nThe Live Stream API access control model is based on [Identity and Access Management (IAM)](/iam/docs) . IAM's fine-grained permissions give you control over what can be done with media data, and by whom.\n## Concepts and terminology\nThis section provides a glossary of useful terms for working with the Live Stream API.\n### Channels\nA channel is a resource that ingests the input stream through an input endpoint, transcodes the input stream into multiple renditions, and publishes output live streams in certain formats in the specified location. You can include a primary and backup input stream in the same channel.\n### Channel events\nA channel event is a sub-resource of a channel that executes operations on a channel resource without needing to stop the channel. The following channel events are supported:\n- Create ad break markers\n- Mute/unmute the live stream\n- Insert a slate into the live stream\n- Return to program (live stream)\n- Switch the channel input\n### Encoder\nAn encoder is a program used to send input streams, such as `ffmpeg` .\n### Input endpoints\nAn input endpoint is an endpoint to which your encoder sends your input stream. You can use the input endpoint to specify configurations for your stream, such as input resolution, input type, and video cropping.\nAn input endpoint consists of either an RTMP or SRT URI that looks like the following:\n```\nrtmp://192.0.2.1/live/STREAM_ID\n```\n```\nsrt://192.0.2.1:4201?streamid=STREAM_ID\n```\nwhere is a string such as `b8ebdd94-c8d9-4d88-a16e-b963c43a953b` .", "guide": "Live Stream API"}