{"title": "Cloud Architecture Center - Active Directory single sign-on", "url": "https://cloud.google.com/architecture/reference-patterns/overview", "abstract": "# Cloud Architecture Center - Active Directory single sign-on\nLast reviewed 2023-02-27 UTC\nThis article shows you how to set up [single sign-on](/architecture/identity/single-sign-on) between your [Active Directory](https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/active-directory-domain-services) environment and your Cloud Identity or Google Workspace account by using Microsoft [Active Directory Federation Services](https://docs.microsoft.com/en-us/windows-server/identity/active-directory-federation-services) (AD\u00a0FS) and [SAML Federation](https://www.oasis-open.org/standards#samlv2.0) .\nThe article assumes that you understand [how Active Directory identity management can be extended to Google Cloud](/architecture/identity/federating-gcp-with-active-directory-introduction) and have already [configured user provisioning](/architecture/identity/federating-gcp-with-active-directory-synchronizing-user-accounts) . The article also assumes that you have a working AD\u00a0FS 4.0 server that is running on Windows Server 2016 or a later version of Windows Server.\nTo follow this guide, knowledge of Active Directory Domain Services and AD\u00a0FS is required. You also need a user in Cloud Identity or Google Workspace that has [super-admin](https://support.google.com/cloudidentity/answer/2405986?hl=en) privileges and a user in Active Directory that has administrative access to your AD\u00a0FS server.\n **Note:** This article uses [classic organizational SSO profiles](/architecture/identity/single-sign-on#configuration) instead of SAML profiles to set up single sign-on. Organizational SSO profiles let you [choose whether to apply additional authentication challenges](https://support.google.com/a/answer/6002699#ssochallenges) to users, which is not supported for SAML profiles.", "content": "## Objectives\n- Configure your AD\u00a0FS server so that Cloud Identity or Google Workspace can use it as an identity provider.\n- Create a claims issuance policy that matches identities between Active Directory and Cloud Identity or Google Workspace.\n- Configure your Cloud Identity or Google Workspace account so that it delegates authentication to AD\u00a0FS.\n## CostsIf you're using the [free edition of Cloud Identity](https://support.google.com/cloudidentity/answer/7431902?hl=en) , following this article will not use any billable components of Google Cloud.## Before you begin\n- Verify that your AD\u00a0FS server runs Windows Server 2016 or later. While you can also configure single sign-on by using previous versions of Windows Server and AD\u00a0FS, the necessary configuration steps might be different from what this article describes.\n- Make sure you understand [how Active Directory identity management can be extended to Google Cloud](/architecture/identity/federating-gcp-with-active-directory-introduction) .\n- Configure [user provisioning between Active Directory and Cloud Identity or Google Workspace](/architecture/identity/federating-gcp-with-active-directory-synchronizing-user-accounts) .\n- Consider setting up AD\u00a0FS in a server farm configuration in order to avoid it becoming a single point of failure. After you've enabled single sign-on, the availability of AD\u00a0FS determines whether users can log in to the Google Cloud console.\n## Understanding single sign-onBy using [Google Cloud Directory Sync](https://tools.google.com/dlpage/dirsync/) , you've already automated the creation and maintenance of users and tied their lifecycle to the users in Active Directory.\nAlthough Google Cloud Directory Sync provisions user account details, it doesn't synchronize passwords. Whenever a user needs to authenticate in Google Cloud, the authentication must be delegated back to Active Directory, which is done by using AD\u00a0FS and the Security Assertion Markup Language (SAML) protocol. This setup ensures that only Active Directory has access to user credentials and is enforcing any existing policies or multi-factor authentication (MFA) mechanisms. Moreover, it establishes a single sign-on experience between your on-premises environment and Google.\nFor more details on single sign-on, see [Single sign-on](/architecture/identity/single-sign-on) ## Configuring AD\u00a0FSBefore enabling single sign-on in Cloud Identity or Google Workspace, you must first configure AD\u00a0FS.\n### Creating the relying party trustCreate a new relying party trust:- Log in to your AD\u00a0FS server and open the **AD\u00a0FS Management** MMC snap-in.\n- Select **AD FS\u00a0> Relying Party Trusts** .\n- On the **Actions** pane, click **Add relying party trust** .\n- On the **Welcome** page of the wizard, select **Claims aware** , and click **Start** .\n- On the **Select data source** page, select **Enter data about the relying party manually** , and click **Next** .\n- On the **Specify display name** page, enter a name such as`Google Cloud`and click **Next** .\n- On the **Configure certificate** page, click **Next** .\n- On the **Configure URL** page, select **Enable support for the SAML 2.0 WebSSO protocol** , and enter the following SSO service URL:```\nhttps://www.google.com/a/DOMAIN/acs\n```Replace `` with the of your Cloud Identity or Google Workspace account, and click **Next** . \n- On the **Configure identifiers** page, add the following two identifiers:- `google.com/a/` ``, replacing``with the primary domain of your Cloud Identity or Google Workspace account\n- `google.com`\nThen click **Next** . \n- On the **Choose access control policy** page, choose an appropriate access policy and click **Next** .\n- On the **Ready to Add Trust** page, review your settings, and then click **Next** .\n- On the final page, clear the **Configure claims issuance policy** checkbox and close the wizard.In the list of relying party trusts, you now see a new entry.\n### Configuring the logout URLWhen you're enabling users to use single sign-on across multiple applications, it's important to allow them to sign out across multiple applications:- In the AD\u00a0FS Management console, under **Relying Party Trusts** , right-click the trust that you just created, and click **Properties** .\n- On the **Endpoints** tab, click **Add SAML** .\n- In the **Add an Endpoint** dialog, configure the following settings:- **Endpoint type** : **SAML Logout** \n- **Binding** : **POST** \n- **Trusted URL** : `https://` `` `/adfs/ls/?wa=wsignout1.0`Replace `` with the fully qualified domain name of your AD\u00a0FS server. \n- Click **OK** .\n- Click **OK** to close the dialog.\n### Configuring the claims mappingAfter AD\u00a0FS has authenticated a user, it issues a SAML assertion. This assertion serves as proof that authentication has successfully taken place. The assertion must identify who has been authenticated, which is the purpose of the [NameID claim](https://support.google.com/a/answer/6330801?hl=en) .\nTo enable Google Sign-In to associate the `NameID` with a user, the `NameID` must contain the primary email address of that user. Depending on how you are [mapping users](/architecture/identity/federating-gcp-with-active-directory-introduction#mapping_account_identities) between Active Directory and Cloud Identity or Google Workspace, the `NameID` must contain the UPN or the email address from the Active Directory user, with domain substitutions applied as necessary.\n- In the list of relying party trusts, select the trust that you just created and click **Edit claim issuance policy** .\n- Click **Add rule** \n- On the **Choose rule type** page of the **Add transform claim rule** wizard, select **Transform an incoming claim** , then click **Next** .\n- On the **Configure claim rule** page, configure the following settings:- **Claim rule name** :`Name Identifier`\n- **Incoming claim type** : **UPN** \n- **Outgoing claim type** : **Name ID** \n- **Outgoing name ID format** : **Email** \n- Select **Pass through all claim values** and click **Finish** .\n- Click **OK** to close the claim issuance policy dialog.\n- In the list of relying party trusts, select the trust that you just created and click **Edit claim issuance policy** .\n- Click **Add rule** \n- On the **Choose rule type** page of the **Add transform claim rule** wizard, select **Transform an incoming claim** , then click **Next** .\n- On the **Configure claim rule** page, configure the following settings:- **Claim rule name** :`Name Identifier`\n- **Incoming claim type** : **UPN** \n- **Outgoing claim type** : **Name ID** \n- **Outgoing name ID format** : **Email** \n- Select **Replace incoming claim e-mail suffix with a new e-mail suffix** and configure the following setting:- **New e-mail suffix** : A domain name used by your Cloud Identity or Google Workspace account.\n- Click **Finish** , and then click **OK** .\n- In the list of relying party trusts, select the trust that you just created and click **Edit claim issuance policy** .\n- Add a rule to lookup the email address:- In the dialog, click **Add Rule** .\n- Select **Send LDAP Attributes as Claims** , and click **Next** .\n- On the next page, apply the following settings:- **Claim rule name** :`Email address`\n- **Attribute Store** : **Active Directory** \n- Add a row to the list of LDAP attribute mappings:- **LDAP Attribute** : **E-Mail-Addresses** \n- **Outgoing Claim Type** : **E-Mail-Address** \n- Click **Finish** .\n- Add another rule to set the `NameID` :- Click **Add rule** \n- On the **Choose rule type** page of the **Add transform claim rule** wizard, select **Transform an incoming claim** , then click **Next** .\n- On the **Configure claim rule** page, configure the following settings:- **Claim rule name** :`Name Identifier`\n- **Incoming claim type** : **E-Mail-Address** \n- **Outgoing claim type** : **Name ID** \n- **Outgoing name ID format** : **Email** \n- Select **Pass through all claim values** and click **Finish** .\n- Click **OK** to close the claim issuance policy dialog.- In the list of relying party trusts, select the trust that you just created and click **Edit claim issuance policy** .\n- Add a rule to lookup the email address:- In the dialog, click **Add Rule** .\n- Select **Send LDAP Attributes as Claims** , and click **Next** .\n- On the next page, apply the following settings:- **Claim rule name** :`Email address`\n- **Attribute Store** : **Active Directory** \n- Add a row to the list of LDAP attribute mappings:- **LDAP Attribute** : **E-Mail-Addresses** \n- **Outgoing Claim Type** : **E-Mail-Address** \n- Click **Finish** .\n- Add another rule to set the `NameID` value:- Click **Add rule** \n- On the **Choose rule type** page of the **Add transform claim rule** wizard, select **Transform an incoming claim** , then click **Next** .\n- On the **Configure claim rule** page, configure the following settings:- **Claim rule name** :`Name Identifier`\n- **Incoming claim type** : **E-Mail-Address** \n- **Outgoing claim type** : **Name ID** \n- **Outgoing name ID format** : **Email** \n- Select **Replace incoming claim e-mail suffix with a new e-mail suffix** and configure the following setting:- **New e-mail suffix** : A domain name used by your Cloud Identity or Google Workspace account.\n- Click **Finish** , and then click **OK** .single-sign-on### Exporting the AD\u00a0FS token-signing certificateAfter AD\u00a0FS authenticates a user, it passes a SAML assertion to Cloud Identity or Google Workspace. To enable Cloud Identity and Google Workspace to verify the integrity and authenticity of that assertion, AD\u00a0FS signs the assertion with a special token-signing key and provides a certificate that enables Cloud Identity or Google Workspace to check the signature.\nYou now export the signing certificate from AD\u00a0FS:- In the AD\u00a0FS Management console, click **Service\u00a0> Certificates** .\n- Right-click the certificate that is listed under **Token-signing** , and click **View Certificate** .\n- Select the **Details** tab.\n- Click **Copy to File** to open the Certificate Export Wizard.\n- On the **Welcome to the certificate export wizard** , click **Next** .\n- On the **Export private key** page, select **No, do not export the private key** .\n- On the **Export file format** page, select **Base-64 encoded X.509 (.CER)** and click **Next** .\n- On the **File to export** page, provide a local filename, and click **Next** .\n- Click **Finish** to close the dialog.\n- Copy the exported certificate to your local computer.\n## Configuring your Cloud Identity or Google Workspace accountWith the AD\u00a0FS configuration completed, you can now configure single sign-on in your Cloud Identity or Google Workspace account:- Open the Admin Console and go to **SSO with third-party IdP** . [Go to SSO with third-party IdP](https://admin.google.com/ac/security/sso) \n- Click **Add SSO profile** . **Note:** Don't use the **Add SAML profile** button.\n- Set **Setup SSO with third party identity provider** to **enabled** .\n- Enter the following settings. In all URLs, replace `` with the fully qualified domain name of your AD\u00a0FS server:- **Sign-in page URL** :`https://` `` `/adfs/ls/`\n- **Sign-out page URL** :`https://` `` `/adfs/ls/?wa=wsignout1.0`\n- **Change password URL** :`https://` `` `/adfs/portal/updatepassword/`\n- Under **Verification certificate** , click **Upload certificate** , and then pick the token signing certificate that you downloaded previously.\n- Click **Save** .\n- Sign out of the Admin Console.\n **Note:** The token-signing certificate is valid for a limited period of time. Depending on [your configuration](https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/operations/configure-ts-td-certs-ad-fs) , AD\u00a0FS either renews the certificate automatically before it expires, or it requires you to provide a new certificate before the current certificate expires. In both cases, you must update your configuration to use the new certificate.## Testing single sign-onYou've now completed the single sign-on configuration in both AD\u00a0FS and Cloud Identity or Google Workspace. To check if single sign-on works as intended, run the following test:- Choose an Active Directory user that has previously been provisioned to Cloud Identity or Google Workspace and does not have super-admin privileges assigned. Users that have super-admin privileges must always sign in by using Google credentials, so they aren't suitable for testing single sign-on.\n- Open a new browser window and go to [https://console.cloud.google.com/](https://console.cloud.google.com/) .\n- On the Google Sign-In page that appears, enter the email address of the user, and click **Next** . If you use domain substitution, you must apply the substitution to the email address. You are redirected to AD\u00a0FS. If you configured AD\u00a0FS to use forms-based authentication, you now see the sign-in page.\n- Enter your UPN and password for the Active Directory user, and click **Sign in** . \n- After successful authentication, AD\u00a0FS redirects you back to Google Identity Platform. Because this is the first login for this user, you're asked to accept the Google terms of service and privacy policy.\n- If you agree to the terms, click **Accept** .\n- You are redirected to the Google Cloud console, which asks you to confirm preferences and accept the Google Cloud terms of service. If you agree to the terms, click **Yes** , and then click **Agree and Continue** .\n- At the upper left, click the avatar icon, and click **Sign out** .You are then redirected to an AD\u00a0FS page confirming that you've been successfully signed out.\nIf you have trouble signing in, you might find additional information in the [AD\u00a0FS admin log](https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/troubleshooting/ad-fs-tshoot-logging) .\nKeep in mind that users that have super-admin privileges are exempted from single sign-on, so you can still use the Admin console to verify or change settings.## Clean upIf you don't intend to keep single sign-on enabled for your organization, follow these steps to disable single sign-on in Cloud Identity or Google Workspace:- In the [Admin console](http://admin.google.com/) , click **Security\u00a0> Settings** .\n- Click **Set up single sign-on (SSO) with a third party IdP** .\n- Clear the **Setup SSO with third party identity provider** checkbox.\n- Click **Save** .\nTo clean up configuration in AD\u00a0FS, follow these steps:- Log in to your AD\u00a0FS server and open the **AD\u00a0FS** MMC snap-in.\n- In the menu at left, right-click the **Relying Party Trusts** folder.\n- In the list of relying party trusts, right-click **Cloud Identity** , and click **Delete** .\n- Confirm the deletion by clicking **Yes** .\n## What's next\n- Learn more about [federating Google Cloud with Active Directory](/architecture/identity/federating-gcp-with-active-directory-introduction) .\n- Learn about [Azure Active Directory B2B user provisioning and single sign-on](/architecture/identity/azure-ad-b2b-user-provisioning-and-sso) .\n- Read about [best practices for planning accounts and organizations](/architecture/identity/best-practices-for-planning) and [best practices for federating Google Cloud with an external identity provider](/architecture/identity/best-practices-for-federating) .\n- Acquaint yourself with our [best practices for managing super-admin users.](/resource-manager/docs/super-admin-best-practices) .", "guide": "Cloud Architecture Center"}