{"title": "Documentation - KRM API prediction.aiplatform.gdc.goog/v1", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - KRM API prediction.aiplatform.gdc.goog/v1\n", "content": "## prediction.aiplatform.gdc.goog/v1\nPackage v1 contains API Schema definitions for the prediction.aiplatform.gdc.goog v1 API group.\n### Autoscaling\nDefines the autoscaling parameters for a deployment.- [DedicatedResources](#dedicatedresources) \n| Field      | Description               |\n|:---------------------------|:-----------------------------------------------------------------------|\n| minReplica integer   | Number of minimum replicas. The default value is 1. The next tag is 5. |\n| maxReplica integer   | Number of maximum replicas.           |\n| cpuTarget integer   | The threshold of CPU usage for scaling up a pod.      |\n| gpuDutyCycleTarget integer | The threshold of GPU duty-cycle utilization for scaling up a pod.  |\n### DedicatedResources\nDefines the resources that are dedicated to a resource pool. The next ID is `8` .- [ResourcePoolSpec](#resourcepoolspec) \n| Field     | Description                                                                 |\n|:------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| machineSpec    | Not required. Specifies the configuration of a single machine using the machineType value. If not provided, a default value is used. For Prediction, the default machine type for a deployment is n1-standard-2 (GKE-based models) or n2-standard-2-gdc (CPU-based models). |\n| autoscaling Autoscaling | Specifies the autoscaling parameters for the user workloads, for example, the predictor deployment for prediction.                                       |\n### DeployedModel\nDefines the Schema for the `DeployedModels` API.- [DeployedModelList](#deployedmodellist) \n| Field      | Description             |\n|:---------------------------|:--------------------------------------------------------------|\n| apiVersion string   | prediction.aiplatform.gdc.goog/v1        |\n| kind string    | DeployedModel             |\n| metadata ObjectMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| spec DeployedModelSpec  | nan               |\n| status DeployedModelStatus | nan               |\n### DeployedModelList\nContains a list of `DeployedModel` resources.\n| Field      | Description             |\n|:--------------------------|:--------------------------------------------------------------|\n| apiVersion string   | prediction.aiplatform.gdc.goog/v1        |\n| kind string    | DeployedModelList            |\n| metadata ListMeta   | Refer to Kubernetes API documentation for fields of metadata. |\n| items DeployedModel array | nan               |\n### DeployedModelSpec\nDefines the expected state of `DeployedModel` resources.- [DeployedModel](#deployedmodel) \n| Field       | Description                                 |\n|:--------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------|\n| endpointPath string    | Specifies the resource name of the endpoint. The format is projects/{project}/locations/{location}/endpoints/{endpoint-id}. The next tag is 6. |\n| modelSpec invalid type   | Defines the model specification needed when deploying the model.                    |\n| resourcePoolRef ObjectReference | Specifies the reference of the resource pool with the resource specifications required for this DeployedModel.         |\n| sharesResourcePool boolean  | Specifies if the DeployedModel shares a resource pool with other models.                  |\n### DeployedModelStatus\nDefines the observed state of the `DeployedModel` resource.- [DeployedModel](#deployedmodel) \n| Field      | Description                                                 |\n|:---------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ready boolean    | Indicates whether the resource is in a ready state.                                       |\n| primaryCondition   | Represents the primary condition of a resource. If the resource is ready, then the condition indicates the resource is ready. Otherwise, the condition is the primary reason why the resource is not ready. |\n| resourceConditions array | Represents a collection of conditions for a resource and its subresources. You can use it to determine the overall health of a resource and its subresources.            |\n| conditions Condition array | Represents raw resource conditions populated from Kubernetes resources for debugging purposes.                            |\n| routes Routes    | Represents the container or system routes for the deployed model prediction or health check.                            |\n| ports Ports    | Represents the container HTTP or gRPC ports.                                        |\n| rpcStatus RpcStatus  | Indicates a canonical RPC representation of the deployed model's primary condition.                               |\n| observedGeneration integer | Indicates the revision of the resource that was most recently reconciled.                                 |\n### Ports- [DeployedModelStatus](#deployedmodelstatus) \n| Field       | Description                                                                    |\n|:---------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| predictorPorts integer array  | Lists the HTTP ports to expose from the predictor. Requests aren't forwarded to ports other than the first one listed. This field corresponds to the ports field of the Kubernetes Containers v1 core API.                     |\n| predictorGRPCPorts integer array | Lists the gRPC ports to expose from the predictor. If this field is omitted, then the gRPC requests to the container are disabled. Requests aren't forwarded to ports other than the first one listed. This field corresponds to the ports field of the Kubernetes Containers v1 core API. |\n### ReplicaStatus\nDefines the replica information of the `ResourcePool` resource.- [ResourcePoolStatus](#resourcepoolstatus) \n| Field      | Description                                                      |\n|:----------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| resourceType ResourceType | Specifies the type of the resource.                                                |\n| resourceName string   | Indicates the unique resource name in the namespace of the resource type. For example, a Deployment ResourceType has the Kubernetes deployment name as its resource name.              |\n| resourceNamespace string | Indicates the namespace of the resource. This field is not applicable for cluster-scoped resources.                                |\n| appType string    | Indicates the application type of the resource, defined by a specific product. For example, Prediction supports predictor and explainer as appType.                    |\n| availableReplicas integer | Indicates the total number of available replicas. For Kubernetes deployment resource type, this field represents the total number of available pods, ready for at least a minimum of ready seconds, targeted by this deployment. |\n| unavailableReplicas integer | Indicates the total number of unavailable replicas. For Kubernetes deployment resource type, it represents the total number of unavailable pods targeted by the deployment.              |\n### ResourcePool\nDefines the Schema for the `ResourcePools` API.- [ResourcePoolList](#resourcepoollist) \n| Field      | Description             |\n|:--------------------------|:--------------------------------------------------------------|\n| apiVersion string   | prediction.aiplatform.gdc.goog/v1        |\n| kind string    | ResourcePool             |\n| metadata ObjectMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| spec ResourcePoolSpec  | nan               |\n| status ResourcePoolStatus | nan               |\n### ResourcePoolList\nContains a list of `ResourcePool` resources.\n| Field     | Description             |\n|:-------------------------|:--------------------------------------------------------------|\n| apiVersion string  | prediction.aiplatform.gdc.goog/v1        |\n| kind string    | ResourcePoolList            |\n| metadata ListMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| items ResourcePool array | nan               |\n### ResourcePoolSpec\nDefines the expected state of `ResourcePool` resources.- [ResourcePool](#resourcepool) \n| Field         | Description                                             |\n|:--------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| resourcePoolID string     | Represents the system-generated ID of the ResourcePool resource. This field is only applicable for Google Cloud and GDCE. The next tag is 8.            |\n| userProvidedID string     | Represents the user-provided ID of the ResourcePool resource. This field is only applicable for Google Cloud and GDCE.                  |\n| dedicatedResources DedicatedResources | Contains a description of resources that are dedicated to the resource pool.                            |\n| enableContainerLogging boolean  | Indicates whether or not container logging is enabled for the ResourcePool.                             |\n| userGsa string      | Indicates the user-provided IAM service account in the user project. If not specified, the default serving service account is used.               |\n| customKsaName string     | Specifies the custom name that the operator creates and the user workload uses for bring your own service account (BYOSA) cases only. If empty, the system uses the default naming pattern. |\n| rolloutStrategy invalid type   | Specifies whether models deployed to this pool must be rolled out to the model server replicas gradually or all at once.                 |\n### ResourcePoolStatus\nDefines the observed state of `ResourcePool` resources.- [ResourcePool](#resourcepool) \n| Field        | Description                                                 |\n|:------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ready boolean      | Indicates whether the resource is in a ready state.                                       |\n| primaryCondition     | Represents the primary condition of a resource. If the resource is ready, then the condition indicates the resource is ready. Otherwise, the condition is the primary reason why the resource is not ready. |\n| resourceConditions     | Represents a collection of conditions for a resource and its subresources. You can use it to determine the overall health of a resource and its subresources.            |\n| conditions Condition array   | Represents raw resource conditions populated from Kubernetes resources for debugging purposes.                            |\n| replicaStatuses ReplicaStatus array | nan                                                   |\n| rpcStatus RpcStatus     | Indicates a canonical RPC representation of the ResourcePool's primary condition.                               |\n| observedGeneration integer   | Indicates what revision of the resource was most recently reconciled.                                  |\n### Routes- [DeployedModelStatus](#deployedmodelstatus) \n| Field      | Description                                                                |\n|:--------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| predictRoute string  | Represents the routing path on the container to send prediction requests. Vertex AI forwards requests using projects.locations.endpoints.predict to this path on the container's IP address and port. Vertex AI then returns the container's response in the API response. |\n| predictSystemRoute string | Represents the system routing path to send prediction requests to the cluster ingress. This field is populated internally only when it is copied to the deployedModel during deployment.                     |\n| healthRoute string  | Represents the routing path on the container to send health checks. Vertex AI intermittently sends GET requests to this path on the container's IP address and port to check that the container is healthy.                |\n| healthSystemRoute string | Represents the system routing path to send health check requests to the cluster ingress. This field is populated internally only when it is copied to the deployedModel during deployment.                     |\n### RpcStatus\nEncapsulates an RPC code and a message.- [DeployedModelStatus](#deployedmodelstatus) \n| Field     | Description                      |\n|:----------------------|:---------------------------------------------------------------------------------------------------|\n| code Code    | Represents the RPC code. The next tag is 4.              |\n| message string  | Contains a user-facing description of the condition.            |\n| terminalState boolean | Indicates a value of true if the resource has reached a terminal state and it cannot become ready. |", "guide": "Documentation"}