{"title": "Google Kubernetes Engine (GKE) - Use Kubernetes beta APIs with GKE clusters", "url": "https://cloud.google.com/kubernetes-engine/docs/concepts/kubernetes-engine-overview", "abstract": "# Google Kubernetes Engine (GKE) - Use Kubernetes beta APIs with GKE clusters\n[configure beta APIs](#configure-beta-apis)\n", "content": "## How new features are introduced with the Kubernetes API\nGKE clusters [consistof](/kubernetes-engine/docs/concepts/cluster-architecture) a control plane and worker nodes. The control plane exposes the API server, which exposes [theKubernetes API](https://kubernetes.io/docs/concepts/overview/kubernetes-api/) so that end users, along with internal and external components, can communicate. This API evolves over time, with new features being [introduced in Alpha or Betastages](https://kubernetes.io/docs/reference/using-api/#api-versioning) , and then eventually either graduating to General Availability (GA) or being deprecated and removed in newer minor versions.\nYou can only use alpha APIs with [alphaclusters](/kubernetes-engine/docs/concepts/alpha-clusters) , but you can use beta APIs with all types of GKE clusters. Starting with Kubernetes version 1.24, new beta APIs are, by default, disabled in new clusters. Existing clusters created running a version earlier than 1.24 keep existing beta APIs enabled, as automatically enabled (introduced earlier than 1.24) or [manuallyenabled beta APIs](#configure-beta-apis) (introduced 1.24 or later) cannot be disabled on existing clusters. For all clusters, existing beta APIs introduced before version 1.24 remain enabled by default, and new versions of existing beta APIs also remain enabled by default.\nFor example, if a `v1beta1` API was introduced in Kubernetes version 1.22, then a new version of this beta API, such as `v1beta3` , is introduced in Kubernetes version 1.25, the API is automatically enabled. This happens because it is a new version of an existing beta API, not a completely new beta API. However, a new beta API with the `v1beta1` version introduced in Kubernetes version 1.24 or later is disabled by default.\nTo use beta APIs introduced with version 1.24 and later, you must [configurebeta APIs](#configure-beta-apis) per resource per cluster. You can enable APIs [on cluster creation](#create-cluster-beta-apis) or [for an existingcluster](#update-existing-cluster-beta-apis) . To see what beta APIs are available for your cluster's minor version, refer to the [available betaAPIs](#available-beta-apis) .\nAfter you enable a beta API, it remains enabled until the beta API is deprecated and the cluster is upgraded to the minor version where the API is removed. To see which beta APIs your cluster has enabled, see [Check which beta APIs areenabled](#check-beta-apis-enabled) .\n### Available beta APIs\nYou can enable a subset of Kubernetes beta APIs for your GKE clusters. Other beta APIs are not available for reasons such as the following:\n- The beta API relies on non-GA Kubernetes features.\n- The beta API is not secure.\n- The beta API is not Autopilot compatible.\nRefer to the following table for beta APIs and the corresponding minor version where they were introduced:\n| Kubernetes version | Beta APIs added with this Kubernetes minor version                      | Available with GKE                              | Notes                         |\n|---------------------:|:----------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------|\n|     1.29 | nan                                  | admissionregistration.k8s.io/v1beta1/validatingadmissionpolicies admissionregistration.k8s.io/v1beta1/validatingadmissionpolicybindings | You must enable both APIs at the same time. This enables the Validating Admission Policy beta feature. |\n|     1.28 | admissionregistration.k8s.io/v1beta1/validatingadmissionpolicies admissionregistration.k8s.io/v1beta1/validatingadmissionpolicybindings | nan                                  | nan                         |\n|     1.27 | authentication.k8s.io/v1beta1/selfsubjectreviews                      | authentication.k8s.io/v1beta1/selfsubjectreviews                      | nan                         |\n## Considerations before using beta APIs\nKubernetes beta APIs are subject to the [Kubernetes Deprecation Policy](https://kubernetes.io/docs/reference/using-api/deprecation-policy/) . When a beta API is deprecated, you must discontinue usage of it. To learn more, see [Beta API deprecations](#beta-api-deprecations) .\n## Before you begin\nBefore you start, make sure you have performed the following tasks:\n- Enable    the Google Kubernetes Engine API.\n- [    Enable Google Kubernetes Engine API   ](https://console.cloud.google.com/flows/enableapi?apiid=container.googleapis.com) \n- If you want to use the Google Cloud CLI for this task, [install](/sdk/docs/install) and then [initialize](/sdk/docs/initializing) the  gcloud CLI. If you previously installed the gcloud CLI, get the latest  version by running`gcloud components update`. **Note:** For existing gcloud CLI  installations, make sure to set the`compute/region`and`compute/zone` [properties](/sdk/docs/properties#setting_properties) . By setting default locations,  you can avoid errors in gcloud CLI like the following:`One of [--zone, --region] must be supplied: Please specify location`.## Configure beta APIs\nBeta APIs are enabled per resource per cluster. You can enable APIs when you create a cluster or for an existing cluster.\nTo list a beta API resource for these commands, use the representation `{group}/{version}/{resource}` . The version must be a beta version. An example of this valid representation is `authentication.k8s.io/v1beta1/selfsubjectreviews` .\nFor the commands in the next section, replace the following variables:\n- ``: the name of the cluster you want to update.\n- ``: the list of beta APIs you want to enable, in a comma-separated list.\n- ``: the [Compute Engine region](/compute/docs/regions-zones#available) for the new cluster. For zonal clusters, use`--zone=` ``.\n### Create new cluster with beta APIs enabled\nCreate a new cluster with a list of beta APIs enabled:\n```\ngcloud container clusters create-auto CLUSTER_NAME \u00a0\\\u00a0 \u00a0 --enable-kubernetes-unstable-apis=LIST_OF_APIS \\\u00a0 \u00a0 --region=COMPUTE_REGION\n```\n### Enable beta APIs on an existing cluster\nEnable a list of beta APIs on an existing cluster:\n```\ngcloud container clusters update CLUSTER_NAME \u00a0\\\u00a0 \u00a0 --enable-kubernetes-unstable-apis=LIST_OF_APIS \\\u00a0 \u00a0 --region=COMPUTE_REGION\n```\n### Disable beta APIs on an existing cluster\nYou cannot disable beta APIs that are already enabled on a cluster. Beta APIs remain available until they are deprecated and the cluster is upgraded to the minor version where the API is removed. To learn more, see [Beta API deprecations](#beta-api-deprecations) .\n## Check which beta APIs are enabled\nCheck which beta APIs are enabled for your GKE cluster:\n```\ngcloud container clusters describe CLUSTER_NAME \\\u00a0 \u00a0 --region=COMPUTE_REGION \\\u00a0 \u00a0 --format=\"value(enableK8sBetaApis.enabledApis)\"\n```\n## Beta API deprecations\nOnce a beta API is enabled, it remains enabled until the beta API is deprecated and the cluster is upgraded to the minor version where the API is removed.\nBeta APIs are typically available for three minor versions before they are deprecated in favor of a new beta version, a stable version, or with no replacement. Beta APIs versions are removed three minor versions after deprecation. If you are using a beta API that has been deprecated and is removed in an upcoming Kubernetes minor version, you need to migrate to supported APIs so that your cluster can be upgraded to the minor version where the beta API is removed. To learn more, see [How Kubernetes deprecations work withGKE](/kubernetes-engine/docs/deprecations#how_kubernetes_deprecations_work_with) .\nGKE makes this process easier by attempting to detect the usage of deprecated Kubernetes APIs. If GKE detects the usage of a deprecated API, it [pauses automatic upgrades](/kubernetes-engine/docs/deprecations#auto-upgrade-pause) to the minor version where that API is removed. GKE also shares [deprecation insights and recommendation](/kubernetes-engine/docs/deprecations#what-deprecation-insights-recs) to notify you of your cluster's usage of a deprecated API so that you can take action to let upgrades continue. To learn more, see [Assess and mitigate exposure to upcoming Kubernetes deprecations](/kubernetes-engine/docs/deprecations#assess_and_mitigate_exposure_to_upcoming_kubernetes_deprecations) .\nSee the [Kubernetes API deprecations table](/kubernetes-engine/docs/deprecations#kubernetes_api_deprecations) for a complete list of deprecated APIs and whether GKE detects usage.\n## What's next\n- [GKE deprecations](/kubernetes-engine/docs/deprecations)", "guide": "Google Kubernetes Engine (GKE)"}