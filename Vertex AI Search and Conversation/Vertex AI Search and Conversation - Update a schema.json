{"title": "Vertex AI Search and Conversation - Update a schema", "url": "https://cloud.google.com/generative-ai-app-builder/docs/update-schemas?hl=zh-cn", "abstract": "# Vertex AI Search and Conversation - Update a schema\n**Note:** This feature is a Preview offering, subject to the \"Pre-GA Offerings Terms\" of the [GCP Service Specific Terms](https://cloud.google.com/terms/service-terms) . Pre-GA products and features may have limited support, and changes to pre-GA products and features may not be compatible with other pre-GA versions. For more information, see the [launch stage descriptions](https://cloud.google.com/products#product-launch-stages) . Further, by using this feature, you agree to the [Generative AI Preview terms and conditions](https://cloud.google.com/trustedtester/aitos) (\"Preview Terms\"). For this feature, you can process personal data as outlined in the [Cloud Data Processing Addendum](https://cloud.google.com/terms/data-processing-terms) , subject to applicable restrictions and obligations in the Agreement (as defined in the Preview Terms).\nYou can update the schema for any data that supports a schema, such as [structured data](/generative-ai-app-builder/docs/create-datastore-ingest#structured-data) , [websites withmetadata](/generative-ai-app-builder/docs/add-website-metadata) , or other [unstructured data withmetadata](/generative-ai-app-builder/docs/create-datastore-ingest#unstructured-data) .\nYou can update the schema in the Google Cloud console or by using the [schemas.patch](/generative-ai-app-builder/docs/reference/rest/v1beta/projects.locations.collections.dataStores.schemas/patch) API method. Updating the schema for a website is supported only over the REST API.\nTo update the schema, you can add new fields, change indexable, searchable, and retrievable annotations for a field, or mark a field as a key property, such as `title` , `uri` and `description` .\n**Important:** Google strongly recommends that you update your schema with key property mappings, especially for `title` . This ensures that your results are displayed correctly and helps Vertex AI Search and Conversation identify important information that allows it to generate better results.\n", "content": "## Update your schema\nYou can update your schema in the Google Cloud console or using the API.\nTo update a schema in the Google Cloud console, follow these steps:- Review the [Requirements and limitations](#limitations) section to check that your schema update is valid.\n- If you are updating field annotations (setting fields as indexable, retrievable, dynamic facetable, searchable, or completable), review [Configure field settings](/generative-ai-app-builder/docs/configure-field-settings) for the limitations and requirements of each annotation type.\n- Check that you have completed data ingestion. Otherwise, the schema might not be available to edit yet.\n- In the Google Cloud console, go to the **Search and Conversation** page. [Search and Conversation](https://console.cloud.google.com/gen-app-builder/start) \n- In the navigation menu, click **Data stores** .\n- In the **Name** column, click the data store with the schema that you want to update.\n- Click the **Schema** tab to view the schema for your data.\n- Click the **Edit** button.\n- Update your schema:- **Map key properties:** In the **Key properties** column of your schema, select a key property to map a field to. For example, if a field called `details` always contains the description of a document, map that field to the key property **Description** .\n- **Update number of dimensions (Advanced)** : You can update this setting if you are using custom vector embeddings with Vertex AI Search. See [Advanced: Use custom embeddings](/generative-ai-app-builder/docs/bring-embeddings) .\n- **Update field annotations:** To update annotations for a field, select or deselect a field's annotation setting. Available annotations are **Retrievable** , **Indexable** , **Dynamic Facetable** , **Searchable** , and **Completable** . Some field settings have limitations. See [Configure field settings](/generative-ai-app-builder/docs/configure-field-settings) for descriptions and requirements for each annotation type.\n- **Add a new field:** Adding new fields to your schema before importing new documents with those fields can shorten the time it takes Vertex AI Search and Conversation to reindex your data after import.- Click **Add new fields** to expand that section.\n- Click add_box **Add Node** and specify settings for the new field.To indicate an array, set **Array** to **Yes** . For example, to add an array of strings, set **type** to `string` and **Array** to `Yes` .\n- Click **Save** to apply your schema changes.Changing the schema triggers reindexing. For large data stores, reindexing can take hours.\nTo use the API to update your schema, follow these steps:- Review the [Requirements and limitations](#limitations) and the [Limitationexamples (REST only)](#examples) sections to check that your schema changes are valid.To update the schema for data stores with websites or unstructured data with metadata, skip to Step 5 to call the `schema.patch` method.\n- If you are updating field annotations (setting fields as indexable, retrievable, dynamic facetable, or searchable), review [Configure field settings](/generative-ai-app-builder/docs/configure-field-settings) for the limitations and requirements of each annotation type.\n- If you are editing an auto-detected schema, make sure that you have completed data ingestion. Otherwise, the schema might not be available to edit yet.\n- Find your data store ID. If you already have your data store ID, skip to the next step.- In the Google Cloud console, go to the **Search and Conversation** page and in the navigation menu, click **Data stores** . [Go to the Data stores page](https://console.cloud.google.com/gen-app-builder/data-stores) \n- Click the name of your data store.\n- On the **Data** page for your data store, get the data store ID.\n- Use the [schemas.patch](/generative-ai-app-builder/docs/reference/rest/v1beta/projects.locations.collections.dataStores.schemas/patch) API method to provide your new JSON schema as a JSON object.```\ncurl -X PATCH \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\\"https://discoveryengine.googleapis.com/v1beta/projects/PROJECT_ID/locations/global/collections/default_collection/dataStores/DATA_STORE_ID/schemas/default_schema\" \\-d '{\u00a0 \"structSchema\": JSON_SCHEMA_OBJECT}'\n```- : The ID of your project.\n- : The ID of your data store.\n- : Your new JSON schema as a JSON object. For example:```\n{\u00a0 \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\u00a0 \"type\": \"object\",\u00a0 \"properties\": {\u00a0 \u00a0 \"title\": {\u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"title\"\u00a0 \u00a0 },\u00a0 \u00a0 \"categories\": {\u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \"items\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"category\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 },\u00a0 \u00a0 \"uri\": {\u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"uri\"\u00a0 \u00a0 }\u00a0 }}\n```For more information, see the [Vertex AI Search and Conversation C# API reference documentation](/dotnet/docs/reference/Google.Cloud.DiscoveryEngine.V1Beta/latest) .\nTo authenticate to Vertex AI Search and Conversation, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-dotnet/blob/HEAD/apis/Google.Cloud.DiscoveryEngine.V1/Google.Cloud.DiscoveryEngine.V1.GeneratedSnippets/SchemaServiceClient.UpdateSchemaRequestObjectSnippet.g.cs) \n```\nusing Google.Cloud.DiscoveryEngine.V1;using Google.LongRunning;public sealed partial class GeneratedSchemaServiceClientSnippets{\u00a0 \u00a0 /// <summary>Snippet for UpdateSchema</summary>\u00a0 \u00a0 /// <remarks>\u00a0 \u00a0 /// This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 /// It will require modifications to work:\u00a0 \u00a0 /// - It may require correct/in-range values for request initialization.\u00a0 \u00a0 /// - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 /// \u00a0 https://cloud.google.com/dotnet/docs/reference/help/client-configuration#endpoint.\u00a0 \u00a0 /// </remarks>\u00a0 \u00a0 public void UpdateSchemaRequestObject()\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create client\u00a0 \u00a0 \u00a0 \u00a0 SchemaServiceClient schemaServiceClient = SchemaServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s)\u00a0 \u00a0 \u00a0 \u00a0 UpdateSchemaRequest request = new UpdateSchemaRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Schema = new Schema(),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AllowMissing = false,\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request\u00a0 \u00a0 \u00a0 \u00a0 Operation<Schema, UpdateSchemaMetadata> response = schemaServiceClient.UpdateSchema(request);\u00a0 \u00a0 \u00a0 \u00a0 // Poll until the returned long-running operation is complete\u00a0 \u00a0 \u00a0 \u00a0 Operation<Schema, UpdateSchemaMetadata> completedResponse = response.PollUntilCompleted();\u00a0 \u00a0 \u00a0 \u00a0 // Retrieve the operation result\u00a0 \u00a0 \u00a0 \u00a0 Schema result = completedResponse.Result;\u00a0 \u00a0 \u00a0 \u00a0 // Or get the name of the operation\u00a0 \u00a0 \u00a0 \u00a0 string operationName = response.Name;\u00a0 \u00a0 \u00a0 \u00a0 // This name can be stored, then the long-running operation retrieved later by name\u00a0 \u00a0 \u00a0 \u00a0 Operation<Schema, UpdateSchemaMetadata> retrievedResponse = schemaServiceClient.PollOnceUpdateSchema(operationName);\u00a0 \u00a0 \u00a0 \u00a0 // Check if the retrieved long-running operation has completed\u00a0 \u00a0 \u00a0 \u00a0 if (retrievedResponse.IsCompleted)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // If it has completed, then access the result\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Schema retrievedResult = retrievedResponse.Result;\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }}\n```For more information, see the [Vertex AI Search and Conversation Go API reference documentation](/go/docs/reference/cloud.google.com/go/discoveryengine/latest/apiv1beta) .\nTo authenticate to Vertex AI Search and Conversation, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-go/blob/HEAD/internal/generated/snippets/discoveryengine/apiv1/SchemaClient/UpdateSchema/main.go) \n```\npackage mainimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 discoveryengine \"cloud.google.com/go/discoveryengine/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 discoveryenginepb \"cloud.google.com/go/discoveryengine/apiv1/discoveryenginepb\")func main() {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 \u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 \u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 \u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in:\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options\u00a0 \u00a0 \u00a0 \u00a0 c, err := discoveryengine.NewSchemaClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer c.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &discoveryenginepb.UpdateSchemaRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Fill request struct fields.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // See https://pkg.go.dev/cloud.google.com/go/discoveryengine/apiv1/discoveryenginepb#UpdateSchemaRequest.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := c.UpdateSchema(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // TODO: Use resp.\u00a0 \u00a0 \u00a0 \u00a0 _ = resp}\n```For more information, see the [Vertex AI Search and Conversation Java API reference documentation](/java/docs/reference/google-cloud-discoveryengine/latest/overview) .\nTo authenticate to Vertex AI Search and Conversation, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-java/blob/HEAD/java-discoveryengine/samples/snippets/generated/com/google/cloud/discoveryengine/v1/schemaservice/updateschema/SyncUpdateSchema.java) \n```\nimport com.google.cloud.discoveryengine.v1.Schema;import com.google.cloud.discoveryengine.v1.SchemaServiceClient;import com.google.cloud.discoveryengine.v1.UpdateSchemaRequest;public class SyncUpdateSchema {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 syncUpdateSchema();\u00a0 }\u00a0 public static void syncUpdateSchema() throws Exception {\u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 // https://cloud.google.com/java/docs/setup#configure_endpoints_for_the_client_library\u00a0 \u00a0 try (SchemaServiceClient schemaServiceClient = SchemaServiceClient.create()) {\u00a0 \u00a0 \u00a0 UpdateSchemaRequest request =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 UpdateSchemaRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setSchema(Schema.newBuilder().build())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setAllowMissing(true)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 Schema response = schemaServiceClient.updateSchemaAsync(request).get();\u00a0 \u00a0 }\u00a0 }}\n```For more information, see the [Vertex AI Search and Conversation Python API reference documentation](/python/docs/reference/discoveryengine/latest) .\nTo authenticate to Vertex AI Search and Conversation, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-python/blob/HEAD/packages/google-cloud-discoveryengine/samples/generated_samples/discoveryengine_v1_generated_schema_service_update_schema_sync.py) \n```\n# This snippet has been automatically generated and should be regarded as a# code template only.# It will require modifications to work:# - It may require correct/in-range values for request initialization.# - It may require specifying regional endpoints when creating the service# \u00a0 client as shown in:# \u00a0 https://googleapis.dev/python/google-api-core/latest/client_options.htmlfrom google.cloud import discoveryengine_v1def sample_update_schema():\u00a0 \u00a0 # Create a client\u00a0 \u00a0 client = discoveryengine_v1.SchemaServiceClient()\u00a0 \u00a0 # Initialize request argument(s)\u00a0 \u00a0 request = discoveryengine_v1.UpdateSchemaRequest(\u00a0 \u00a0 )\u00a0 \u00a0 # Make the request\u00a0 \u00a0 operation = client.update_schema(request=request)\u00a0 \u00a0 print(\"Waiting for operation to complete...\")\u00a0 \u00a0 response = operation.result()\u00a0 \u00a0 # Handle the response\u00a0 \u00a0 print(response)\n```For more information, see the [Vertex AI Search and Conversation Ruby API reference documentation](/ruby/docs/reference/google-cloud-discovery_engine-v1beta/latest) .\nTo authenticate to Vertex AI Search and Conversation, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-discovery_engine-v1/snippets/schema_service/update_schema.rb) \n```\nrequire \"google/cloud/discovery_engine/v1\"\n### Snippet for the update_schema call in the SchemaService service\n## This snippet has been automatically generated and should be regarded as a code# template only. It will require modifications to work:# - It may require correct/in-range values for request initialization.# - It may require specifying regional endpoints when creating the service# client as shown in https://cloud.google.com/ruby/docs/reference.\n## This is an auto-generated example demonstrating basic usage of# Google::Cloud::DiscoveryEngine::V1::SchemaService::Client#update_schema.#def update_schema\u00a0 # Create a client object. The client can be reused for multiple calls.\u00a0 client = Google::Cloud::DiscoveryEngine::V1::SchemaService::Client.new\u00a0 # Create a request. To set request fields, pass in keyword arguments.\u00a0 request = Google::Cloud::DiscoveryEngine::V1::UpdateSchemaRequest.new\u00a0 # Call the update_schema method.\u00a0 result = client.update_schema request\u00a0 # The returned object is of type Gapic::Operation. You can use it to\u00a0 # check the status of an operation, cancel it, or wait for results.\u00a0 # Here is how to wait for a response.\u00a0 result.wait_until_done! timeout: 60\u00a0 if result.response?\u00a0 \u00a0 p result.response\u00a0 else\u00a0 \u00a0 puts \"No response received.\"\u00a0 endend\n```\n## Requirements and limitations\nWhen updating a schema, be sure that the new schema is backward compatible with the schema you are updating. To update a schema with a new schema that is not backward compatible, you need to delete all the documents in the data store, delete the schema, and create a new schema.\nSchema updates do not support the following:\n- **Changing a field type.** A schema update doesn't support changing the type of the field. For example, a field mapped to integer cannot be changed to string.\n- **Removing a field.** Once defined, a field cannot be removed. You can continue adding new fields but you cannot remove an existing field.## Limitation examples (REST only)\nThis section shows examples of valid and invalid types of schema updates. These examples use the following example JSON schema:\n```\n{\u00a0 \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\u00a0 \"type\": \"object\",\u00a0 \"properties\": {\u00a0 \u00a0 \"title\": {\u00a0 \u00a0 \u00a0 \"type\": \"string\"\u00a0 \u00a0 },\u00a0 \u00a0 \"description\": {\u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"description\"\u00a0 \u00a0 },\u00a0 \u00a0 \"categories\": {\u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \"items\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"category\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\n### Examples of supported updates\nThe following updates to the example schema are supported.\n- **Adding a field.** In this example, the field `properties.uri` has been added to the schema.```\n{\u00a0 \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\u00a0 \"type\": \"object\",\u00a0 \"properties\": {\u00a0 \u00a0 \"title\": {\u00a0 \u00a0 \u00a0 \"type\": \"string\"\u00a0 \u00a0 },\u00a0 \u00a0 \"description\": {\u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"description\"\u00a0 \u00a0 },\u00a0 \u00a0 \"uri\": { // Added field. This is supported.\u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"uri\"\u00a0 \u00a0 },\u00a0 \u00a0 \"categories\": {\u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \"items\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"category\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\n- **Adding or removing key property annotations for title, descriptionor uri.** In this example, `keyPropertyMapping` has been added to the `title` field.```\n{\u00a0 \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\u00a0 \"type\": \"object\",\u00a0 \"properties\": {\u00a0 \u00a0 \"title\": {\u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"title\" // Added \"keyPropertyMapping\". This is supported.\u00a0 \u00a0 },\u00a0 \u00a0 \"description\": {\u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"description\"\u00a0 \u00a0 },\u00a0 \u00a0 \"categories\": {\u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \"items\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"category\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```\n### Examples of invalid schema updates\nThe following updates to the example schema aren't supported.\n- **Changing a field type.** In this example, the `title` field's type has been changed from string to number. This is not supported.```\n\u00a0 {\u00a0 \u00a0 \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\u00a0 \u00a0 \"type\": \"object\",\u00a0 \u00a0 \"properties\": {\u00a0 \u00a0 \u00a0 \"title\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"number\" // Changed from string. Not allowed.\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"description\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"description\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"categories\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \u00a0 \"items\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"category\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }\n```\n- **Removing a field.** In this example, the `title` field has been removed. This is not supported.```\n\u00a0 {\u00a0 \u00a0 \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\u00a0 \u00a0 \"type\": \"object\",\u00a0 \u00a0 \"properties\": {\u00a0 \u00a0 \u00a0 // \"title\" is removed. Not allowed.\u00a0 \u00a0 \u00a0 \"description\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"description\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"uri\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"uri\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \"categories\": {\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"array\",\u00a0 \u00a0 \u00a0 \u00a0 \"items\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"string\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"keyPropertyMapping\": \"category\"\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }\n```## What's next\n- [View the schema definition for structured data](/generative-ai-app-builder/docs/get-schema-definition) \n- [Delete a schema for structured data](/generative-ai-app-builder/docs/delete-schemas) \n- [Preview search results](/generative-ai-app-builder/docs/preview-search-results)", "guide": "Vertex AI Search and Conversation"}