{"title": "Vertex AI Search and Conversation - Filter generic search for website data", "url": "https://cloud.google.com/generative-ai-app-builder/docs/filter-website-search?hl=zh-cn", "abstract": "# Vertex AI Search and Conversation - Filter generic search for website data\nThis page explains how to filter search queries for a search app with [websitedata](/generative-ai-app-builder/docs/create-datastore-ingest#websites) .\n", "content": "## Before you begin\nMake sure you have created an app and data store and have ingested website data into your data store. For more information, see [Create a searchapp](/generative-ai-app-builder/docs/create-engine-es) .\n## About filter expressions\nUse filter expressions to construct your website search filters. How you construct your filters varies depending on whether you have turned on [advancedwebsite indexing](/generative-ai-app-builder/docs/about-advanced-features#advanced-website-indexing) . See one of the following sections, depending on whether you have standard or advanced website indexing:\n- [Filter expressions with standard websiteindexing](#filter-expressions-standard-indexing) \n- [Filter expressions with advanced websiteindexing](#filter-expressions-advanced-indexing) ## Filter expressions with standard website indexing\nThis section explains filter expression behavior with standard website indexing (advanced website indexing is turned off).\n### Syntax for standard website indexing\nThe following [Extended Backus\u2013Naur form](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form#:%7E:text=In%20compute) summarizes filter expression syntax for constructing a website search filter when you have standard website indexing. Double quotes after the colon in a filter are strictly enforced.\n```\n\u00a0 \u00a0 # A single expression or multiple expressions that are joined by \"AND\".\u00a0 filter = expression, { \"AND\", expression };\u00a0 expression =\u00a0 \u00a0 # A simple expression applying to a text url string.\u00a0 \u00a0 | filter_key, \":\", \\\"text_value\\\"\u00a0 filter_key = (cr | highRange | lowRange | fileType | lr | rights | siteSearch);\u00a0 text_value = string value to filter on;\n```\n### Available fields for standard website indexing\nHere are the fields that are available for filtering your website search when you have standard website indexing:\n- `cr` (string) Restricts search results to documents from a specific country. For a list of supported values, see [Country CollectionValues](https://developers.google.com/custom-search/docs/json_api_reference#countryCollections) .\n- `highRange` (string) Specifies the upper limit of the search range. If a document contains a number, the number must be at or below the value of `highRange` for that document to be included in the response. Specify both `highRange` and `lowRange` to create a search query within the range of these parameters.\n- `lowRange` (string) Specifies the lower limit of the search range. If a document contains a number, the number must be at or above the value of `lowRange` for that document to be included in the response. Specify both `lowRange` and `highRange` to create a search query within the range of these parameters.\n- `fileType` (string) Restricts search results to documents with a specified extension. For a list of supported file types, see [File types indexable byGoogle](https://developers.google.com/search/docs/crawling-indexing/indexable-file-types?visit_id=638338519105717597-4216646087&rd=1) .\n- `lr` (string) Restricts search results to documents written in a specified language. For a list of supported languages, see [Query parameters(lr)](https://developers.google.com/custom-search/v1/reference/rest/v1/cse.siterestrict/list#body.QUERY_PARAMETERS.lr) .\n- `rights` (string) Filters search results based on licensing. For supported values, see [Query parameters(rights)](https://developers.google.com/custom-search/v1/reference/rest/v1/cse.siterestrict/list#body.QUERY_PARAMETERS.rights) .\n- `siteSearch` (string) Specifies A URL pattern for the web pages that your query should search through.\n### Examples for standard website indexing\nHere are some filter examples for standard website indexing:\n- `{\"filter\": \"cr:\\\"countryUS\\\" AND siteSearch:\\\"https://example.com/example_domain\\\"\"}`Filters for documents that are: (1) From the US, and (2) In the domain `https://example.com/example_domain` .\n- `{\"filter\": \"fileType:\\\".pdf\\\" AND lr:\\\"lang_en\\\"\"}`Filters for documents that are: (1) PDF files, and (2) In English.\n- `{\"filter\": \"rights:\\\"cc_publicdomain\\\"\"}`Filters for documents that are in the public domain.## Filter expressions with advanced website indexing\nThis section explains filter expression behavior with advanced website indexing (advanced website indexing is turned on).\n### Syntax for advanced website indexing\nThe following [Extended Backus\u2013Naur form](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form#:%7E:text=In%20compute) summarizes filter expression syntax for constructing a website search filter when you have advanced website indexing. Filter expressions for advanced website search are limited to URL patterns. Wildcards are allowed and are denoted by the `*` character. Double quotes after the colon in a filter are strictly enforced.\n```\n\u00a0 \u00a0 # A single expression or multiple expressions that are joined by \"OR\".\u00a0 filter = expression, { \"OR\", expression };\u00a0 \u00a0 # Expressions can be prefixed with \"-\" or \"NOT\" to express a negation.\u00a0 expression = [ \"-\" | \"NOT \" ],\u00a0 \u00a0 # A simple expression applying to a text url string.\u00a0 \u00a0 | filter_key, \":\", \\\"url_string\\\"\u00a0 filter_key = siteSearch;\u00a0 url_string = double quoted string representing a URL;\n```\n### Available fields for advanced website indexing\nOne field is available for your website search filter when you have advanced website indexing:\n- `siteSearch`(string) Specifies A URL pattern for the web pages that your query should search through.\n### Examples for advanced website indexing\nHere are some filter examples for advanced website indexing:\n- `{\"filter\": \"siteSearch:\\\"https://example.com/example_domain\\\"\"}`Filters for documents that are in the domain `https://example.com/example_domain` . For example, `https://example.com/example_domain/index.html` .\n- `{\"filter\": \"siteSearch:\\\"https://example.com/subdomains/*\\\"\"}`Filters for documents that are in any domains matching `https://example.com/subdomains/*` . For example, `https://example.com/subdomains/example_subdomain_page` .\n- `{\"filter\": \"siteSearch:\\\"https://altostrat.com/subdomain/pages/*\\\" OR siteSearch:\\\"http://cymbalgroup.com/pages/*\\\"\"}`Filters for documents that are in any domains matching the first or second URL pattern. For example, `https://altostrat.com/subdomain/pages/title_page` , `https://cymbalgroup.com/subdomain/pages/title_page` , or `https://altostrat.com/subdomain/pages/INFO` .## Filter a website search\nTo filter a website search, follow these steps:\n- Find your data store ID. If you already have your data store ID, skip to the next step.- In the Google Cloud console, go to the **Search and Conversation** page and in the navigation menu, click **Data stores** . [Go to the Data stores page](https://console.cloud.google.com/gen-app-builder/data-stores) \n- Click the name of your data store.\n- On the **Data** page for your data store, get the data store ID.\n- To filter a website search, use the `filter` field with the [search](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.collections.dataStores.servingConfigs/search) method.```\ncurl -X POST -H \"Authorization: Bearer $(gcloud auth application-default print-access-token)\" \\-H \"Content-Type: application/json\" \\\"https://discoveryengine.googleapis.com/v1alpha/projects/PROJECT_ID/locations/global/collections/default_collection/dataStores/DATA_STORE_ID/servingConfigs/default_config:search\" \\-d '{\"servingConfig\": \"projects/PROJECT_ID/locations/global/collections/default_collection/dataStores/DATA_STORE_ID/servingConfigs/default_config\",\"query\": \"QUERY\",\"filter\": \"FILTER\"}'\n```- : The ID of your project.\n- : The ID of your data store.\n- : The query text to search.\n- : A text field for filtering your search using a filter expression. The default value is an empty string.For information about constructing a filter for standard website indexing, see [Filter expressions with standard website indexing](#filter-expressions-standard-indexing) .For information about constructing a filter for advanced website indexing, see [Filter expressions with advanced website indexing](#filter-expressions-advanced-indexing) .", "guide": "Vertex AI Search and Conversation"}