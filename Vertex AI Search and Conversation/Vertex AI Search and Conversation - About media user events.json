{"title": "Vertex AI Search and Conversation - About media user events", "url": "https://cloud.google.com/generative-ai-app-builder/docs/user-events?hl=zh-cn", "abstract": "# Vertex AI Search and Conversation - About media user events\nThis page describes user events for media apps, including user event types, requirements, and examples for user event types.\nRecording user events is required for media recommendations apps. Media recommendations apps use real-time user events to generate recommendations. Other app types don't require user events.\nThe following table lists which app types to upload user events for:\n| App type        | User events required? |\n|:--------------------------------------|:------------------------|\n| Media recommendations     | Yes      |\n| Media search (Preview with allowlist) | No, but recommended  |\n| Generic recommendations    | No      |\n| Generic search      | No      |\nFor help with recording user events, see [Record real-time user events](/generative-ai-app-builder/docs/record-user-events) .\n", "content": "## User event types\nYou can record the following types of user events as end users browse your site:\n| User event name | User action                |\n|:-------------------|:---------------------------------------------------------------------------|\n| view-category-page | Views a category page, such as Home > TV > Dramas, Home > Movies > Action. |\n| view-item   | Views a detail page of a document.           |\n| view-home-page  | Views homepage.               |\n| media-play   | Clicks play on a media item.            |\n| media-complete  | Stops playing a media item, signifying the end of watching.    |\nFor detailed information about the `UserEvent` object, see the [UserEvent API reference](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents) .\n### Event type priority\nThe following table describes the priority of user event types. Some user events are required to use media recommendations. Others are recommended for improving your results, but not required.\n| Priority                | User Events          |\n|:-----------------------------------------------------------------------|:---------------------------------------------------|\n| Required for initial live experiment         | view-item view-home-page media-play media-complete |\n| Important for improving media recommendations result quality over time | view-category-page         |\n## User event requirements and best practices\nThe following tables list requirements and best practices for user event types that media recommendations apps use. Check that your user events fulfill these requirements so that your app can generate quality results.\nAlso see [About media app recommendations types](/generative-ai-app-builder/docs/about-media-recommendations-types) , which lists the types of user events needed depending on the recommendation type and optimization objective you plan to use.\n### Media recommendations requirements\nMake sure your user events meet the following requirements so that your media recommendations apps can generate quality results.\n| Event type | Requirement                              | Impact                                                                                           |\n|:-------------|:----------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| All events | Don't include synthetic data or duplicate events.                     | Synthetic or duplicate events negatively impact result quality and can prevent you from deploying your app. Duplicate events can cause incorrect metrics values.                                                    |\n| All events | Include at least 100 unique user pseudo IDs for each type of event ingested.              | This ensures media recommendations apps have enough data to generate quality results.                                                                       |\n| All events | User pseudo IDs must be formatted exactly the same across event import or event recording and in media recommendations requests. | Using a consistent format for user pseudo IDs helps media recommendations apps correctly identify visitor patterns and provide better-quality results based on user behavior.                                                 |\n| All events | The DocumentInfo.name field or the DocumentInfo.id field is required for all documents.           | An event that includes a document without a DocumentInfo.name field or a DocumentInfo.id field can't be used by media recommendations apps.                                                         |\n| All events | Documents included in the events should exist in your data store.                 | The unjoined events ratio should be kept as low as possible. A high ratio can negatively impact the quality of results.                                                               |\n| All events | Some user events should have the same user pseudo ID.                    | To construct valid behavior sequence histories, media recommendations apps must be able to see multiple events with the same user pseudo ID. For example, visitor123 has viewed five items and clicked play on two. If these events provide the same consistently formatted user pseudo ID, a media recommendations app can consider that behavior sequence in its results. |\n| view-item | Include exactly one document per event.                       | The event can't be used if no document exists. If multiple documents are included, the event is malformed and can't be used.                                                             |\n| media-play | Include exactly one document per event.                       | If multiple documents are included, the event is malformed and can't be used.                                                                         |\n## User event type examples and schemas\nThis section provides the data formats for each event type supported by media recommendations.\nExamples for JavaScript Pixel are provided. For BigQuery, the full table schema for each type is provided.\nFor all user events types, `userId` is optional.\nNote that:\n- The`tagIds`field is needed only if you are running an A/B experiment.\n- The`attributionToken`field is optional; it is used to measure performance.`view-item`events that are generated from media recommendations clicks should have an attribution token in order to link the events back to the recommendations that generated them.\nFor more details about the user event object, see the [UserEvent API reference documentation](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents) .\n### view-category-page\nThe following shows the `view-category-page` user event format.\nThe following examples show only the required fields of the `view-category-page` user event format.\nWhile there is usually only one category associated with a page, the `pageCategories` field also supports a category hierarchy, which you can provide as a list.\nWhen you import events, you must provide the timestamp in the [eventTime](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents#UserEvent.FIELDS.event_time) field in the format specified by [RFC 3339](https://tools.ietf.org/html/rfc3339) .\nOther fields might be required depending on the API method used or if additional fields are used. For full details of each field and when they are required, see the [UserEvent API reference](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents) .\n```\nvar user_event = {\u00a0 \"eventType\": \"view-category-page\",\u00a0 \"userPseudoId\": \"user-pseudo-id\",\u00a0 \"eventTime\": \"2020-01-01T03:33:33.000001Z\",\u00a0 \"pageInfo\": {\u00a0 \u00a0 \"pageCategory\": \"category1 > category2\"\u00a0 }};\n```\nThis is the complete JSON schema for this user event type. Specify this schema when creating tables for this user event type in BigQuery.\nModes for required fields are set to `REQUIRED` or `REPEATED` . Modes for optional fields are set to `NULLABLE` .\nNote that `eventTime` is required for importing events with BigQuery. `eventTime` is a string with a Timestamp format.\n```\n[\u00a0 {\u00a0 \u00a0 \"name\": \"eventType\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"userPseudoId\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"eventTime\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"userInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"userId\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"userAgent\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"pageInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"pageviewId\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"pageCategory\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"uri\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"referrerUri\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"attributionToken\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"documents\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"REPEATED\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"id\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"tagIds\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"attributes\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"example_text_attribute\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"text\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"example_number_attribute\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"numbers\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"NUMERIC\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 }]\n```### view-item\nThe following shows the `view-item` user event data format.\nThe following examples show only the required fields of the `view-item` user event format.\nIn most cases, `documents` contains details for the associated document.\nWhen you import events, you must provide the timestamp in the [eventTime](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents#UserEvent.FIELDS.event_time) field in the format specified by [RFC 3339](https://tools.ietf.org/html/rfc3339) .\nOther fields might be required depending on the API method used or if additional fields are used. For full details of each field and when they are required, see the [UserEvent API reference](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents) .\n```\nvar user_event = {\u00a0 \"eventType\": \"view-item\",\u00a0 \"userPseudoId\": \"user-pseudo-id\",\u00a0 \"eventTime\": \"2020-01-01T03:33:33.000001Z\",\u00a0 \"documents\": [{\u00a0 \u00a0 \"id\": \"document-id\"\u00a0 }]};\n```\nThis is the complete JSON schema for this user event type. Specify this schema when creating tables for this user event type in BigQuery.\nModes for required fields are set to `REQUIRED` or `REPEATED` . Modes for optional fields are set to `NULLABLE` .\nNote that `eventTime` is required for importing events with BigQuery. `eventTime` is a string with a Timestamp format.\n```\n[\u00a0 {\u00a0 \u00a0 \"name\": \"eventType\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"userPseudoId\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"eventTime\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"userInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"userId\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"userAgent\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"pageInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"pageviewId\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"uri\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"referrerUri\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"attributionToken\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"documents\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"REPEATED\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"id\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"tagIds\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"attributes\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"example_text_attribute\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"text\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"example_number_attribute\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"numbers\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"NUMERIC\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 }]\n```### view-home-page\nThe following shows the `view-home-page` user event format.\nThe following examples show only the required fields of the `view-home-page` user event format.\nWhen you import events, you must provide the timestamp in the [eventTime](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents#UserEvent.FIELDS.event_time) field in the format specified by [RFC 3339](https://tools.ietf.org/html/rfc3339) .\nOther fields might be required depending on the API method used or if additional fields are used. For full details of each field and when they are required, see the [UserEvent API reference](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents) .\n```\nvar user_event = {\u00a0 \"eventType\": \"view-home-page\",\u00a0 \"userPseudoId\": \"user-pseudo-id\",\u00a0 \"eventTime\": \"2020-01-01T03:33:33.000001Z\",};\n```\nThis is the complete JSON schema for this user event type. Specify this schema when creating tables for this user event type in BigQuery.\nModes for required fields are set to `REQUIRED` or `REPEATED` . Modes for optional fields are set to `NULLABLE` .\nNote that `eventTime` is required for importing events with BigQuery. `eventTime` is a string with a Timestamp format.\n```\n[\u00a0 {\u00a0 \u00a0 \"name\": \"eventType\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"userPseudoId\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"eventTime\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"userInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"userId\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"userAgent\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"pageInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"pageviewId\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"uri\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"referrerUri\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"attributionToken\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"documents\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"REPEATED\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"id\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"quantity\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"INT64\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"tagIds\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"attributes\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"example_text_attribute\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"text\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"example_number_attribute\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"numbers\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"NUMERIC\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 }]\n```### media-play\nThe following shows the `media-play` user event format.\nThe following examples show only the required fields of the `media-play` user event format.\nWhen you import events, you must provide the timestamp in the [eventTime](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents#UserEvent.FIELDS.event_time) field in the format specified by [RFC 3339](https://tools.ietf.org/html/rfc3339) .\nOther fields might be required depending on the API method used or if additional fields are used. For full details of each field and when they are required, see the [UserEvent API reference](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents) .\n```\nvar user_event = {\u00a0 \"eventType\": \"media-play\",\u00a0 \"userPseudoId\": \"user-pseudo-id\",\u00a0 \"eventTime\": \"2020-01-01T03:33:33.000001Z\",\u00a0 \"documents\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"id\": \"document-id1\"\u00a0 \u00a0 }\u00a0 ]};\n```\nThis is the complete JSON schema for this user event type. Specify this schema when creating tables for this user event type in BigQuery.\nModes for required fields are set to `REQUIRED` or `REPEATED` . Modes for optional fields are set to `NULLABLE` .\nNote that `eventTime` is required for importing events with BigQuery. `eventTime` is a string with a Timestamp format.\n```\n[\u00a0 {\u00a0 \u00a0 \"name\": \"eventType\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"userPseudoId\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"eventTime\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"userInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"userId\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"userAgent\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"pageInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"pageviewId\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"uri\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"referrerUri\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"attributionToken\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"documents\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"REPEATED\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"id\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"tagIds\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"attributes\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"example_text_attribute\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"text\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"example_number_attribute\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"numbers\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"NUMERIC\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 }]\n```### media-complete\nThe following shows the `media-complete` user event format.\nThe following examples show only the required fields of the `media-complete` user event format.\nWhen you import events, you must provide the timestamp in the [eventTime](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents#UserEvent.FIELDS.event_time) field in the format specified by [RFC 3339](https://tools.ietf.org/html/rfc3339) .\nOther fields might be required depending on the API method used or if additional fields are used. For full details of each field and when they are required, see the [UserEvent API reference](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents) .\n```\nvar user_event = {\u00a0 \"eventType\": \"media-complete\",\u00a0 \"userPseudoId\": \"user-pseudo-id\",\u00a0 \"eventTime\": \"2020-01-01T03:33:33.000001Z\",\u00a0 \"documents\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"id\": \"document-id1\"\u00a0 \u00a0 }\u00a0 ],\u00a0 \"mediaInfo\": {\u00a0 \u00a0 \"mediaProgressDuration\": \"65s\",\u00a0 \u00a0 \"mediaProgressPercentage\": 1.2\u00a0 }};\n```\nThis is the complete JSON schema for this user event type. Specify this schema when creating tables for this user event type in BigQuery.\nModes for required fields are set to `REQUIRED` or `REPEATED` . Modes for optional fields are set to `NULLABLE` .\nNote that `eventTime` is required for importing events with BigQuery. `eventTime` is a string with a Timestamp format.\n```\n[\u00a0 {\u00a0 \u00a0 \"name\": \"eventType\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"userPseudoId\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"eventTime\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REQUIRED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"userInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"userId\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"userAgent\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"pageInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"pageviewId\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"uri\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"referrerUri\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"attributionToken\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"documents\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"REPEATED\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"id\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"tagIds\",\u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"attributes\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"example_text_attribute\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"text\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"example_number_attribute\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"numbers\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"NUMERIC\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"REPEATED\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 ]\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 },\u00a0 {\u00a0 \u00a0 \"name\": \"mediaInfo\",\u00a0 \u00a0 \"type\": \"RECORD\",\u00a0 \u00a0 \"mode\": \"NULLABLE\",\u00a0 \u00a0 \"fields\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"mediaProgressDuration\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"STRING\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"name\": \"mediaProgressPercentage\",\u00a0 \u00a0 \u00a0 \u00a0 \"type\": \"NUMERIC\",\u00a0 \u00a0 \u00a0 \u00a0 \"mode\": \"NULLABLE\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ]\u00a0 }]\n```\n## Custom attributes\nYou can include additional custom attributes and features for user events. This can result in improved, more specific recommendations for your users when you use media recommendations. To add custom attributes, use `attributes` when you record a user event.\nIf you provide custom attributes for ingested user events, it's important to also include them in the user events that you associate with recommendation requests. The formatting of custom attributes must be consistent between imported events and events provided with recommendation requests. This lets media recommendations apps use those custom attributes to improve quality.\nYou can provide custom text values by using the `text` field or custom numerical values by using the `numbers` field.\nFor example, the following shows the `attributes` section from a request to record a user event:\n```\n\u00a0 attributes: {\u00a0 \u00a0 user_age: {text: [\"teen\", \"young adult\"]},\u00a0 \u00a0 user_location: {text: [\"CA\"]},\u00a0 \u00a0 user_zip: {numbers: [90210]}\u00a0 }\n```\n## About user information\n`userPseudoId` represents the unique user identifier and is required when you record a user event.\nThe user information ( [UserInfo](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents#userinfo) ) included when you record a user event contains the `userPseudoId` value and, if available, the `userId` value. `userId` is optional and can be used as a unique, persistent identifier for a user across devices whenever a user logs in to your site. When you record the `userId` for a user, media recommendations apps can generate more personalized results for one user across multiple devices, such as both a mobile device and a web browser.\n**Note:** Use a secure form of a unique identifier to keep users anonymous to Vertex AI Search and Conversation and protect your users' privacy. You are responsible for redacting PII (personally identifiable information), such as email or home addresses, from your data.\n## About the timestamp\nWhen you record a user event, be sure to include an accurate timestamp of when the event occurred. Accurate timestamps ensure that your events are stored in the correct order. Timestamps are recorded automatically for events collected using the JavaScript Pixel. When you import events, you must provide the timestamp in the [eventTime](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.dataStores.userEvents#UserEvent.FIELDS.event_time) field in the format specified by [RFC3339](https://tools.ietf.org/html/rfc3339) .\n## What's next\n- Learn how to [record user events](/generative-ai-app-builder/docs/record-user-events) .", "guide": "Vertex AI Search and Conversation"}