{"title": "Vertex AI Search and Conversation - Get started with media recommendations", "url": "https://cloud.google.com/generative-ai-app-builder/docs/try-media-recommendations?hl=zh-cn", "abstract": "# Vertex AI Search and Conversation - Get started with media recommendations\n# Get started with media recommendations\nYou can quickly build a state-of-the-art media recommendations app. Media recommendations enable your audiences to discover more personalized content, like what to watch or read next, with Google-quality results that are customized by optimization objectives.\nIn this getting-started tutorial, you will use the [Movielens](https://grouplens.org/datasets/movielens/) dataset to demonstrate how to upload your media content catalog and user events into Vertex AI Search and train a personalized movie recommendation model. The Movielens dataset contains a catalog of movies (documents) and user movie ratings (user events).\nIn this tutorial, you train a recommendation model of type Others You May Like optimized for click-through-rate (CTR). After training, the model can recommend movies based on a user ID or on a seed movie.\nTo meet the minimum data requirements for the model, each positive movie rating (4 or higher) is treated as a view-item event.\nEstimated time to complete this tutorial:- Initial steps to start training the model: ~1.5 hours.\n- Waiting for the model to train: ~24 hours. ( [Train the model](#train-rec-model) )\n- Evaluating the model predictions and cleaning up: ~30 minutes. ( [Previewrecommendations](#preview-recommendations) )\n", "content": "## Objectives\n- Learn how to import media documents and user events data from BigQuery into Vertex AI Search.\n- Train and evaluate recommendation models.\nBefore following this tutorial, make sure you have done the steps in [Before youbegin](/generative-ai-app-builder/docs/before-you-begin) .To follow step-by-step guidance for this task directly in the Google Cloud console, click **Guide me** :\n [Guide me](https://console.cloud.google.com/gen-app-builder/?tutorial=generative-ai-app-builder--genappbuilder-media-recommendations-intro) ## Before you begin\n## Prepare the datasetYou use the Cloud Shell to import the Movielens dataset and restructure the dataset for Vertex AI Search for media.\n### Open the Cloud Shell\n- Open [Google Cloud console](https://console.cloud.google.com/) .\n- Select your Google Cloud project.\n- Take note of the project ID in the **Project info** card on the dashboard page. You will need the project ID for the following procedures.\n- Click the **Activate Cloud Shell** button at the top of the console. A Cloud Shell session opens inside a new frame at the bottom of the Google Cloud console and displays a command-line prompt. \n### Import the datasetThe Movielens dataset is available in a public Cloud Storage bucket to make it easier to import.- Run the following using your project ID to set the default project for the command-line.```\ngcloud config set project PROJECT_ID\n```\n- Create a BigQuery dataset:```\nbq mk movielens\n```\n- Load `movies.csv` into a new `movies` BigQuery table:```\nbq load --skip_leading_rows=1 movielens.movies \\\u00a0 gs://cloud-samples-data/gen-app-builder/media-recommendations/movies.csv \\\u00a0 movieId:integer,title,genres\n```\n- Load `ratings.csv` into a new `ratings` BigQuery table:```\nbq load --skip_leading_rows=1 movielens.ratings \\\u00a0 gs://cloud-samples-data/gen-app-builder/media-recommendations/ratings.csv \\\u00a0 userId:integer,movieId:integer,rating:float,time:timestamp\n```\n### Create BigQuery viewsIn this step, you will restructure the Movielens dataset so it follows the expected format for media recommendations. Media recommendations require user events data in order to create a model. For this guide, you will create fake `view-item` events during the past 90 days from positive ratings ( `< 4` ).- Create a view that converts the movies table into the [Document schema](/generative-ai-app-builder/docs/media-documents#json-schemaimport-data-media-recommendations) :```\nbq mk --project_id=PROJECT_ID \\\u00a0--use_legacy_sql=false \\\u00a0--view '\u00a0 WITH t AS (\u00a0 \u00a0 SELECT\u00a0 \u00a0 \u00a0 CAST(movieId AS string) AS id,\u00a0 \u00a0 \u00a0 SUBSTR(title, 0, 128) AS title,\u00a0 \u00a0 \u00a0 SPLIT(genres, \"|\") AS categories\u00a0 \u00a0 \u00a0 FROM `PROJECT_ID.movielens.movies`)\u00a0 \u00a0 SELECT\u00a0 \u00a0 \u00a0 id, \"default_schema\" as schemaId, null as parentDocumentId,\u00a0 \u00a0 \u00a0 TO_JSON_STRING(STRUCT(title as title, categories as categories,\u00a0 \u00a0 \u00a0 CONCAT(\"http://mytestdomain.movie/content/\", id) as uri,\u00a0 \u00a0 \u00a0 \"2023-01-01T00:00:00Z\" as available_time,\u00a0 \u00a0 \u00a0 \"2033-01-01T00:00:00Z\" as expire_time,\u00a0 \u00a0 \u00a0 \"movie\" as media_type)) as jsonData\u00a0 \u00a0 FROM t;' \\movielens.movies_view\n```Now the new view has the schema that the Vertex AI Search and Conversation API expects.\n- Go to the **BigQuery** page in Google Cloud console. [Go to BigQuery](https://console.cloud.google.com/bigquery) \n- In the **Explorer** pane, expand your project name, expand the **movielens** dataset and click **movies_view** to open the query page for this view. \n- Go to the **Table explorer** tab.\n- In the **Generated query** pane, click the **Copy to query** button. The query editor opens.\n- Click **Run** to see movie data in the view that you created.\n- Create fictitious [user events](/generative-ai-app-builder/docs/user-events) from movie ratings by running the following Cloud Shell command:```\nbq mk --project_id=PROJECT_ID \\\u00a0--use_legacy_sql=false \\\u00a0--view '\u00a0WITH t AS (\u00a0 SELECT\u00a0 \u00a0 MIN(UNIX_SECONDS(time)) AS old_start,\u00a0 \u00a0 MAX(UNIX_SECONDS(time)) AS old_end,\u00a0 \u00a0 UNIX_SECONDS(TIMESTAMP_SUB(\u00a0 \u00a0 CURRENT_TIMESTAMP(), INTERVAL 90 DAY)) AS new_start,\u00a0 \u00a0 UNIX_SECONDS(CURRENT_TIMESTAMP()) AS new_end\u00a0 FROM `PROJECT_ID.movielens.ratings`)\u00a0 SELECT\u00a0 \u00a0 CAST(userId AS STRING) AS userPseudoId,\u00a0 \u00a0 \"view-item\" AS eventType,\u00a0 \u00a0 FORMAT_TIMESTAMP(\"%Y-%m-%dT%X%Ez\",\u00a0 \u00a0 TIMESTAMP_SECONDS(CAST(\u00a0 \u00a0 \u00a0 (t.new_start + (UNIX_SECONDS(time) - t.old_start) *\u00a0 \u00a0 \u00a0 (t.new_end - t.new_start) / (t.old_end - t.old_start))\u00a0 \u00a0 AS int64))) AS eventTime,\u00a0 \u00a0 [STRUCT(movieId AS id, null AS name)] AS documents,\u00a0 FROM `PROJECT_ID.movielens.ratings`, t\u00a0 WHERE rating >= 4;' \\\u00a0 movielens.user_events\n```\n## Activate Vertex AI Search and Conversation\n- In the Google Cloud console, go to the **Search and Conversation** page. [Search and Conversation](https://console.cloud.google.com/gen-app-builder/start) \n- Read and agree to the Terms of Service, then click **Continue and activatethe API** .\n## Create an app for media recommendationsThe procedures in this section guide you through creating and deploying a media recommendations app.- In the Google Cloud console, go to the **Search and Conversation** page. [Search and Conversation](https://console.cloud.google.com/gen-app-builder/start) \n- Click .\n- On the **Create app** page, select **Recommendations** .\n- In the **App name** field, enter a name for your app, such as `quickstart-media-recommendations` . Your app ID appears under the app name.\n- Under **Content** , select **Media** .\n- Under **Recommendations type** , make sure **Others you may like** is selected.\n- Under **Business Objective** , make sure **Click-through rate (CTR)** is selected.\n- Click **Continue** .\n- On the **Data stores** page, click **Create new data store** .\n- Enter a display name for your data store, such as `quickstart-media-data-store` , and then click **Create** .\n- Select the data store you just created, and then click **Create** to create your app.\n## Import dataNext, import the movies and user events data that were formatted earlier.\n### Import documents\n- Open the **Requirements** tab.\n- Click **Import Documents** .\n- Select **BigQuery** .\n- Enter the name of the `movies` BigQuery view you created and click **Import** .```\nPROJECT_ID.movielens.movies_view\n```\n- Wait until all documents have been imported, which should take about 15 minutes. There should be 86537 documents when complete.You can check the **Activity** tab for the import operation status. When the import is complete, the import operation status changes to **Completed** .\n### Import user events\n- Open the **Requirements** tab.\n- Click **Import Events** .\n- Select **BigQuery** .\n- Enter the name of the `user_events` BigQuery view you created and click **Import** .```\nPROJECT_ID.movielens.user_events\n```\n- Wait until at least a million events have been imported before proceeding to the next step, in order to meet the data requirements for training a new model.You can check the **Activity** tab for the operation status. The process takes about an hour to complete because you are importing millions of rows.It can take some time for the **Requirements** tab to update its status to **Data requirements met** .\n## Train the recommendation model\n- Go to the **Configurations** page.\n- Click the **Serving** tab. A serving config has already been created.If you want to adjust the [Recommendation demotion](/generative-ai-app-builder/docs/demote-recommendations) or [Result diversification](/generative-ai-app-builder/docs/diversify-recommendations) settings, you can do so on this page.\n- Click the **Training** tab.After the data requirements have been met, the model will begin training automatically. You can view the training and tuning status on this page.It should take a few hours for the model to train and become ready to query. The **Ready to query** field indicates **Yes** when the process is complete. You will need to refresh the page to see the change **No** to **Yes** .\n## Preview recommendationsAfter the model is ready to query:- In the navigation menu, click .\n- Click the **Document ID** field. A list of document IDs appears.\n- Enter a seed document (movie) ID, such as `4993` for \"The Lord of the Rings: The Fellowship of the Ring (2001)\". \n- Select the **Serving config** name from the drop-down menu.\n- Click **Get recommendations** . A list of recommended documents appears.\n## Deploy your app for structured dataThere is no recommendations widget for deploying your app. To test your app before deployment:- Go to the **Data** page, **Documents** tab, and copy a document **ID** .\n- Go to the **Integration** page. This page includes a sample command for the [servingConfigs.recommend](/generative-ai-app-builder/docs/reference/rest/v1beta/projects.locations.dataStores.servingConfigs/recommend) method in the REST API.\n- Paste the document ID you copied earlier into the **Document ID** field.\n- Leave the **User Pseudo ID** field as is.\n- Copy the example request and run it in Cloud Shell.\nFor help integrating the recommendations app into your web app, see the code samples at [Get media recommendations](/generative-ai-app-builder/docs/preview-recommendations#get-media-recommendations) .## Clean upTo avoid incurring charges to your Google Cloud account for   the resources used on this page, follow these steps.- To avoid unnecessary Google Cloud charges, use the [Google Cloud console](https://console.cloud.google.com/) to delete your project if you don't need it.\n- If you created a new project to learn about Vertex AI Search and Conversation and you no longer need the project, [delete the project](https://console.cloud.google.com/cloud-resource-manager) .\n- If you used an existing Google Cloud project, delete the resources you created to avoid incurring charges to your account. For more information, see [Delete an app](/generative-ai-app-builder/docs/delete-engine) .\n- Follow the steps in [Turn offVertex AI Search and Conversation](/generative-ai-app-builder/docs/turn-off-enterprise-search) .\n- If you created a BigQuery dataset, delete it in Cloud Shell:```\nbq rm --recursive --dataset movielens\n```\n## What's next\n- [Introduction to Vertex AI Search](/generative-ai-app-builder/docs/enterprise-search-introduction) \n- [About apps and data stores](/generative-ai-app-builder/docs/create-datastore-ingest)", "guide": "Vertex AI Search and Conversation"}