{"title": "Vertex AI Search and Conversation - Get search summaries", "url": "https://cloud.google.com/generative-ai-app-builder/docs/get-search-summaries?hl=zh-cn", "abstract": "# Vertex AI Search and Conversation - Get search summaries\nThis page shows how to use the API to get search summaries with your search results. It also explains the options that are available with search summaries. For unstructured and website data only.\nFor information about getting search results, see [Get search results](/generative-ai-app-builder/docs/preview-search-results) .\nFor information about getting generative AI answers for your healthcare data queries, see [Search using natural language query with generative AI answer](/generative-ai-app-builder/docs/search-hc-data#nl-search-genAI)\n", "content": "## Before you begin\nDepending on the type of app you have, complete the following requirements:\n- For an unstructured search app: Turn on the [Advanced LLM features](/generative-ai-app-builder/docs/about-advanced-features#advanced-llm-features) .\n- For a website search app: Turn on the following features:- [Enterprise edition features](/generative-ai-app-builder/docs/about-advanced-features#enterprise-features) .\n- [Advanced LLM features](/generative-ai-app-builder/docs/about-advanced-features#advanced-llm-features) .\n- [Advanced website indexing](/generative-ai-app-builder/docs/about-advanced-features#advanced-website-indexing) . Requires domain verification.\n## Get a search summary\nA search summary is a short summarization of the top one or more search results returned in a search response. The summary itself is taken from the extractive answers returned in the response. Therefore, to get a summary, you must also get extractive answers with your search results. For more information, see [Getextractive answers (Preview)](/generative-ai-app-builder/docs/snippets#extractive-answers) .\nThe following image shows the summary when PDFs in a data store are queried with the `summaryResultCount` set to `5` . The summary content can vary depending on the app configurations.\nSearch summaries can include Markdown-formatted text. For this reason, consider using a Markdown parser in your application to render Markdown text.\n**Note:** By default, search summaries returned by the API don't include citations. To get citations with your summary, see [Get citations](#get-citations) .\nTo get a search summary, follow these steps:\n- Submit a search request that includes [contentSearchSpec.summarySpec](/generative-ai-app-builder/docs/reference/rest/v1beta/ContentSearchSpec#summaryspec) and specifies values for `summaryResultCount` and `maxExtractiveAnswerCount` . For more information about submitting a search request, see [Get search results](/generative-ai-app-builder/docs/preview-search-results) .In the following example, `summarySpec` indicates that you want a search summary and that the summary should be generated from the top three search results.```\n\"contentSearchSpec\":\u00a0{\u00a0 \u00a0\"summarySpec\":\u00a0 \u00a0{\u00a0 \u00a0 \u00a0\"summaryResultCount\": 3\u00a0 \u00a0},\u00a0 \u00a0\"extractiveContentSpec\": { \"maxExtractiveAnswerCount\" : 1}\u00a0}\n```- `summaryResultCount`: The number of top results to generate the search summary from. If the number of results returned is less than`summaryResultCount`, the summary is generated from all of the results. The maximum value is`5`.\n- `maxExtractiveAnswerCount`: The number of extractive answers to return for each search result. The default value is 0 and the maximum is 1.\n- Get the summary from the search response. One `summary` property is returned in each response.Here is an example of a summary returned at the end of a search response:```\n\"summary\":{\u00a0 \"summaryText\": \"BigQuery is Google Cloud's fully managed and completely\u00a0 serverless enterprise data warehouse. BigQuery supports all data types,\u00a0 works across clouds, and has built-in machine learning and business\u00a0 intelligence, all within a unified platform.\"}\n```## Get citations\nCitations, when specified, are numbers that are placed inline in a search summary. These numbers indicate from which search results specific sentences in the summary are taken.\nTo get citations, follow these steps:\n- Submit a search request that includes [contentSearchSpec.summarySpec](/generative-ai-app-builder/docs/reference/rest/v1beta/ContentSearchSpec#summaryspec) and specifies `\"includeCitations\": true` . For more information about submitting a search request, see [Get search results](/generative-ai-app-builder/docs/preview-search-results) .In the following example, `summarySpec` indicates that you want a search summary, that the summary should be generated from the top three search results, and that citations should be included in the summary.```\n\"contentSearchSpec\":\u00a0{\u00a0 \u00a0\"summarySpec\":\u00a0 \u00a0{\u00a0 \u00a0 \u00a0\"summaryResultCount\": 3,\u00a0 \u00a0 \u00a0\"includeCitations\": true\u00a0 \u00a0},\u00a0 \u00a0\"extractiveContentSpec\": { \"maxExtractiveAnswerCount\" : 1}\u00a0}\n```- `summaryResultCount`: The number of top results to generate the search summary from. If the number of results returned is less than`summaryResultCount`, the summary is generated from all of the results. The maximum value is`5`.\n- `includeCitations`: A boolean that specifies whether citations are returned.\n- `maxExtractiveAnswerCount`: The number of extractive answers to return for each search result. The default value is 0 and the maximum is 1.\n- Get the summary, with citations, from the search response. One `summary` property is returned in each response.Here is an example of a summary, with citations and citation metadata, returned at the end of a search response:```\n\"summary\": {\u00a0\"summaryText\": \"BigQuery is Google Cloud's fully managed and completely\u00a0 serverless enterprise data warehouse [1]. BigQuery supports all data types,\u00a0 works across clouds, and has built-in machine learning and business\u00a0 intelligence, all within a unified platform [2, 3].\",\u00a0\"summaryWithMetadata\": {\u00a0 \u00a0\"summary\": \"BigQuery is Google Cloud's fully managed and completely\u00a0 \u00a0serverless enterprise data warehouse. BigQuery supports all data types,\u00a0 \u00a0works across clouds, and has built-in machine learning and business\u00a0 \u00a0intelligence, all within a unified platform.\",\u00a0 \u00a0\"citationMetadata\": {\u00a0 \u00a0 \u00a0\"citations\": [\u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"startIndex\": \"0\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"endIndex\": \"101\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"sources\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"uri\": \"gs://example-dataset/html/6344007140738632642.html\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"title\": \"About BigQuery\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"id\": \"b6344007140738632642\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"referenceIndex\": \"0\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"uri\": \"gs://example-dataset/html/1365490014946172719.html\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"title\": \"Google Cloud article\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"id\": \"b1365490014946172719\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"referenceIndex\": \"1\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"uri\": \"gs://example-dataset/html/2687910668117268120.html\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"title\": \"BigQuery document\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"id\": \"a2687910668117268120\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"referenceIndex\": \"2\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0]\u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"startIndex\": \"103\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"endIndex\": \"230\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"sources\": [\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"referenceIndex\": \"0\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"referenceIndex\": \"1\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"referenceIndex\": \"2\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0]\u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0]\u00a0 \u00a0},\u00a0 \u00a0\"references\": [\u00a0 \u00a0{\u00a0 \u00a0 \u00a0\"title\": \"Sports in the United States\",\u00a0 \u00a0 \u00a0\"docName\": \"projects/123/locations/global/collections/default_collection/dataStores/ds-123/branches/0/documents/b6344007140738632642\",\u00a0 \u00a0 \u00a0\"uri\": \"https://example.com/bigqueryA\"\u00a0 \u00a0},\u00a0 \u00a0{\u00a0 \u00a0 \u00a0\"title\": \"Sports in the United States\",\u00a0 \u00a0 \u00a0\"docName\": \"projects/123/locations/global/collections/default_collection/dataStores/ds-123/branches/0/documents/b1365490014946172719\",\u00a0 \u00a0 \u00a0\"uri\": \"https://example.com/bigqueryB\"\u00a0 \u00a0},\u00a0 \u00a0{\u00a0 \u00a0 \u00a0\"title\": \"Sports in the United States\",\u00a0 \u00a0 \u00a0\"docName\": \"projects/123/locations/global/collections/default_collection/dataStores/ds-123/branches/0/documents/a268791066811726812\",\u00a0 \u00a0 \u00a0\"uri\": \"https://example.com/bigqueryC\"\u00a0 \u00a0}\u00a0]}}\n```- `summaryText`: The search summary, with citation numbers. The citation numbers refer to the returned search results and are 1-indexed. For example,`[1]`means that the sentence is attributed to the first search result.`[2, 3]`means that the sentence is attributed to both the second and third search results.\n- `citations`: For each sentence in the summary that has a citation, lists the metadata for that citation.\n- `startIndex`: Indicates the start of the sentence, measured in unicode bytes.\n- `endIndex`: Indicates the end of the sentence, measured in unicode bytes.\n- `sources`: Lists the`referenceIndex`for each source that was included in the sentence's citation.`referenceIndex`is the index number assigned to a source. The first source's`referenceIndex`isn't always explicitly returned in the response. Because`referenceIndex`is 0-indexed, the first source always has a`referenceIndex`of 0.\n- `references`: Lists metadata for each reference that was cited in the summary. Metadata includes`title`,`docName`, and`uri`.\n## Ignore adversarial queries\nAdversarial queries include negative comments or are designed to generate unsafe, policy-violating output. You can specify that no search summaries should be returned for adversarial queries. When an adversarial query is ignored, the `summaryText` property contains boilerplate text indicating that no search summary is returned. Search documents are returned for adversarial queries even though search summaries are not.\nTo specify that no search summaries should be returned for adversarial queries, follow these steps:\n- Submit a search request that includes [contentSearchSpec.summarySpec](/generative-ai-app-builder/docs/reference/rest/v1beta/ContentSearchSpec#summaryspec) and specifies `\"ignoreAdversarialQuery\": true` . For more information about submitting a search request, see [Get search results](/generative-ai-app-builder/docs/preview-search-results) .In the following example, `summarySpec` indicates that you want a search summary, that the summary should be generated from the top three search results, but that no summary should be returned for adversarial queries.```\n\"contentSearchSpec\":\u00a0{\u00a0 \u00a0\"summarySpec\":\u00a0 \u00a0{\u00a0 \u00a0 \u00a0\"summaryResultCount\": 3,\u00a0 \u00a0 \u00a0\"ignoreAdversarialQuery\": true\u00a0 \u00a0},\u00a0 \u00a0\"extractiveContentSpec\": { \"maxExtractiveAnswerCount\" : 1}\u00a0}\n```- `summaryResultCount`: The number of top results to generate the search summary from. If the number of results returned is less than`summaryResultCount`, the summary is generated from all of the results. The maximum value is`5`.\n- `ignoreAdversarialQuery`: A boolean that specifies that no search summaries should be returned for adversarial queries.\n- `maxExtractiveAnswerCount`: The number of extractive answers to return for each search result. The default value is 0 and the maximum is 1.\n- See the `summary` property that is returned for an adversarial search request.Here is an example:```\n\"summary\":{\u00a0 \"summaryText\": \"We do not have a summary for your query. Here are some\u00a0 search results.\",\u00a0 \"summarySkippedReasons\": [\u00a0 \u00a0\"ADVERSARIAL_QUERY_IGNORED\"\u00a0]}\n```- `summaryText`: Boilerplate text indicating that no search summary is returned.\n- `summarySkippedReasons`: An enumeration with values for summary-skipped reasons.\n## Ignore non-summary seeking queries\nNon-summary seeking queries return results that are not suitable for summarization. For example, \"why is the sky blue\" and \"Who is the best soccer player in the world?\" are summary-seeking queries, but \"SFO airport\" and \"world cup 2026\" are not. They are most likely navigational queries. You can specify that no search summaries should be returned for non-summary seeking queries. Search documents are returned for non-summary seeking queries even though search summaries are not.\nTo specify that no search summaries should be returned for non-summary seeking queries, follow these steps:\n- Submit a search request that includes [contentSearchSpec.summarySpec](/generative-ai-app-builder/docs/reference/rest/v1beta/ContentSearchSpec#summaryspec) and specifies `\"ignoreNonSummarySeekingQuery\": true` . For more information about submitting a search request, see [Get search results](/generative-ai-app-builder/docs/preview-search-results) .In the following example, `summarySpec` indicates that you want a search summary, the summary should be generated from the top three search results, but that no summary should be returned for non-summary seeking queries.```\n\"contentSearchSpec\":\u00a0{\u00a0 \u00a0\"summarySpec\":\u00a0 \u00a0{\u00a0 \u00a0 \u00a0\"summaryResultCount\": 3,\u00a0 \u00a0 \u00a0\"ignoreNonSummarySeekingQuery\": true\u00a0 \u00a0},\u00a0 \u00a0\"extractiveContentSpec\": { \"maxExtractiveAnswerCount\" : 1}\u00a0}\n```- `summaryResultCount`: The number of top results to generate the search summary from. If the number of results returned is less than`summaryResultCount`, the summary is generated from all of the results. The maximum value is`5`.\n- `ignoreNonSummarySeekingQuery`: A boolean that specifies that no search summaries should be returned for non-summary seeking queries.\n- `maxExtractiveAnswerCount`: The number of extractive answers to return for each search result. The default value is 0 and the maximum is 1.\n- See the `summary` property that is returned for a non-summary seeking search request.Here is an example:```\n\"summary\":{\u00a0 \"summaryText\": \"We do not have a summary for your query. Here are some\u00a0 search results.\",\u00a0 \"summarySkippedReasons\": [\u00a0 \u00a0 \"NON_SUMMARY_SEEKING_QUERY_IGNORED\"\u00a0]}\n```- `summaryText`: Boilerplate text indicating that no search summary is returned.\n- `summarySkippedReasons`: An enumeration with values for summary-skipped reasons.\n## Get customized summaries\nYou can get customized summaries by providing natural-language instructions. This feature is available for the search widget by using the console, and for the API by entering instructions in the `modelPromptSpec.preamble` field.\nYou can request customizations such as length, level of detail, style of output (such as \"simple\"), language of output, focus of answer, and format (such as tables, bullets, and XML).\nFor example, for the query \"What are the benefits of bigquery?\" you could enter customization instructions like in the following examples:\n- Example instruction: `\"please show the answer format in an ordered list\"`Example answer:```\nThe benefits of BigQuery are:\n1. Increased business productivity\n2. IT staff productivity\n3. Reduced infrastructure costs\n4. Loading and exporting data are free\n```\n- Example instruction: `give a very detailed answer`Example answer:```\nBigQuery is a serverless, highly scalable, and cost-effective cloud data warehouse that enables businesses to analyze all their data very quickly. It is a fully managed service that takes care of provisioning, scaling, and managing the underlying infrastructure, so you can focus on analyzing your data. BigQuery is also integrated with other Google Cloud services, such as Google Kubernetes Engine, Cloud Data Fusion, and Cloud Dataproc, making it easy to build and deploy data pipelines.\nHere are some of the benefits of using BigQuery:\n* **Fast and scalable:** BigQuery can process petabytes of data very quickly, and it can scale to handle even the most demanding workloads. * **Cost-effective:** BigQuery is a very cost-effective way to store and analyze data. You only pay for the data that you use, and there are no upfront costs or commitments. * **Secure:** BigQuery is a secure platform that meets the needs of even the most security-conscious organizations. * **Easy to use:** BigQuery is easy to use, even for non-technical users. It has a simple and intuitive user interface, and it supports a variety of data sources. * **Integrated with other Google Cloud services:** BigQuery is integrated with other Google Cloud services, making it easy to build and deploy data pipelines.\nIf you are looking for a fast, scalable, and cost-effective way to analyze your data, then BigQuery is a great option.\n```\n### Best practices for customized summaries\nIf you plan to use this feature, do the following:\n- Request only one customization at a time. Don't combine customizations\u2014for example, requesting an HTML table in French.\n- Google recommends that you impose limits on what customizations your end users can request\u2014for example, by offering a selector with a set of predefined customizations.\n### Customize summaries\nYou can get customized summaries for only the search widget by using the console or, for any search request, by using the API.\nTo get a customized summary, follow these steps:\n- In the Google Cloud console, go to the **Search and Conversation** page. [Search and Conversation](https://console.cloud.google.com/gen-app-builder/start) \n- Click the name of the app that you want to edit.\n- Go to **Configurations** > **Widget** .\n- Make sure your search widget's **Search type** is set to **Search withan answer** or **Search with follow-ups** . This feature isn't available if **Search** is selected.\n- Turn on **Enable summary customization** .\n- To enter summary instructions, do one of the following:- Enter free-form instructions: Enter your own natural language instructions in the **Preamble** field.\n- Use template instructions: Click **Replace with a template** and select one of the predefined template instructions. The predefined template appears in the **Preamble** field after you select it.\n- Test the customized summary generation for your app by searching in the **Preview** pane.\n- To reset to the last saved set of instructions, click **Resetpreamble** .\n- To save your settings to the widget, click **Save and publish** .\n- Submit a search request that includes [contentSearchSpec.summarySpec](/generative-ai-app-builder/docs/reference/rest/v1beta/ContentSearchSpec#summaryspec) and specifies the customization instruction in `modelPromptSpec.preamble` . For more information about submitting a search request, see [Get search results](/generative-ai-app-builder/docs/preview-search-results) .In the following example, `summarySpec` indicates that you want a search summary, the summary should be generated from the top three search results, and the summary should be customized as though it is being explained to a 10-year-old.```\n\"contentSearchSpec\":\u00a0 {\u00a0 \u00a0 \"summarySpec\":\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"summaryResultCount\": 3,\u00a0 \u00a0 \u00a0 \"modelPromptSpec\":\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"preamble\": \"explain like you would to a ten year old\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }\n```- `summaryResultCount`: The number of top results to generate the search summary from. If the number of results returned is less than`summaryResultCount`, the summary is generated from all of the results. The maximum value is`5`.\n- `preamble`: The instruction for customization.\n- Get the customized summary from the search response.Here is an example of a customized summary that is returned:```\n\"summary\":{\u00a0 \"summaryText\": \"BigQuery is a serverless data warehouse that helps you\u00a0 analyze all your data very quickly. It's very easy to use and you don't\u00a0 need to worry about managing servers or infrastructure. BigQuery is also\u00a0 very scalable, so you can analyze large datasets without any problems.\"}\n```- `summaryText`: The customized search summary.\n## Specify the summarization model\nYou can specify the model that you want to use to generate summaries.\nYou can specify a stable, GA model that is based on either the `text-bison` model or `gemini-pro` model, or you can specify a preview model that is based on the `gemini-pro` model. For available model versions, see [Answer generationmodel versions and lifecycle](/generative-ai-app-builder/docs/answer-generation-models) .\nTo change the model version:\n- Submit a search request that includes [ContentSearchSpec](/generative-ai-app-builder/docs/reference/rest/v1beta/ContentSearchSpec) and specifies the model version in [SummarySpec.ModelSpec](/generative-ai-app-builder/docs/reference/rest/v1/SummarySpec#ModelSpec) .```\n\"contentSearchSpec\": {\u00a0 \"summarySpec\": {\u00a0 \u00a0 \"modelSpec\": {\u00a0 \u00a0 \u00a0 \"version\": \"MODEL_VERSION\"\u00a0 \u00a0 \u00a0}\u00a0 \u00a0}\u00a0}\n```- : Specifies which model to use to generate summaries. Supported values are:- `stable`: string. Default specification when no value is specified.`stable`points to a GA model version that's fine-tuned for answer generation. Which model`stable`points to changes as new GA model versions are released and previous model versions are discontinued. For the up-to-date version that`stable`points to, see [Answer generation model versions andlifecycle](/generative-ai-app-builder/docs/answer-generation-models) .\n- `preview`: string.`preview`points to the latest Gemini Pro model for question and answering. For more information about Gemini Pro, see [Vertex AI Gemini API](/vertex-ai/docs/generative-ai/multimodal/overview#gemini-api) .\n- To specify a certain model version instead, enter the version name, such as`text-bison@001/answer_gen/v1`. For supported versions, see [Answergeneration model versions and lifecycle](/generative-ai-app-builder/docs/answer-generation-models) .\nFor example, the following search request specifies `preview` as the model version:\n```\ncurl -X POST \\-H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\\"https://discoveryengine.googleapis.com/v1/projects/exampleproject/locations/global/collections/default_collection/dataStores/exampledatastore/servingConfigs/default_search:search\" \\-d '{\u00a0 \"query\": \"what is bigquery\",\u00a0 \"contentSearchSpec\": {\u00a0 \u00a0 \"summarySpec\": {\u00a0 \u00a0 \u00a0 \"modelSpec\": {\u00a0 \u00a0 \u00a0 \u00a0 \"version\": \"preview\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}'\n```\n## Limitations of search summaries\nYou might encounter the following limitations when using search summaries:\n- Because LLMs are used to generate search summaries and citations, the limitations of LLMs also apply to Vertex AI Search summaries.For general information about these LLM limitations, see [PaLM APIlimitations](/vertex-ai/docs/generative-ai/learn/responsible-ai#limitations) in the documentation.\n- Search queries that require complex logical or analytical reasoning or understanding of the world can lead to search summaries that contain incorrect information (hallucinations) or information that is not present in the unstructured or website data.\n- Some statements in the search summary might not contain a citation and, in rare cases, citations might be incorrectly attributed to a statement.\n- Complex documents might be incorrectly parsed by the LLM. In this case, the summary might be incomplete or incorrect.\n- Because customization instructions are in natural language, adherence to instructions can't be guaranteed for all requests.", "guide": "Vertex AI Search and Conversation"}