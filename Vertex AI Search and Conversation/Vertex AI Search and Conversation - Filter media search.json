{"title": "Vertex AI Search and Conversation - Filter media search", "url": "https://cloud.google.com/generative-ai-app-builder/docs/filter-media-search?hl=zh-cn", "abstract": "# Vertex AI Search and Conversation - Filter media search\n**Note:** Media search is in Preview with allowlist.\nIf you have a media search app, you can use metadata to filter your search queries. This page explains how use metadata fields to restrict your search to a specific set of documents.\n", "content": "## Before you begin\nMake sure you have created a media app and data store and ingested data. For more information, see [Create a media app and data store](/generative-ai-app-builder/docs/create-app-data-store-media-recommendations) .\n### Example documents\nReview these example media documents. You can refer back to them as you read through this page.\n```\n{\"id\":\"172851\",\"schemaId\":\"default_schema\",\"jsonData\":\"{\\\"title\\\":\\\"Avatar: Creating the World of Pandora (2010)\\\",\\\"categories\\\":[\\\"Documentary\\\"],\\\"uri\\\":\\\"http://mytestdomain.movie/content/172851\\\",\\\"available_time\\\":\\\"2023-01-01T00:00:00Z\\\",\\\"media_type\\\":\\\"movie\\\"}\"}{\"id\":\"243308\",\"schemaId\":\"default_schema\",\"jsonData\":\"{\\\"title\\\":\\\"Capturing Avatar (2010)\\\",\\\"categories\\\":[\\\"Documentary\\\"],\\\"uri\\\":\\\"http://mytestdomain.movie/content/243308\\\",\\\"available_time\\\":\\\"2023-01-01T00:00:00Z\\\",\\\"media_type\\\":\\\"movie\\\"}\"}{\"id\":\"280218\",\"schemaId\":\"default_schema\",\"jsonData\":\"{\\\"title\\\":\\\"Avatar: The Way of Water (2022)\\\",\\\"categories\\\":[\\\"Action\\\",\\\"Adventure\\\",\\\"Sci-Fi\\\"],\\\"uri\\\":\\\"http://mytestdomain.movie/content/280218\\\",\\\"available_time\\\":\\\"2023-01-01T00:00:00Z\\\",\\\"media_type\\\":\\\"movie\\\"}\"}{\"id\":\"72998\",\"schemaId\":\"default_schema\",\"jsonData\":\"{\\\"title\\\":\\\"Avatar (2009)\\\",\\\"categories\\\":[\\\"Action\\\",\\\"Adventure\\\",\\\"Sci-Fi\\\",\\\"IMAX\\\"],\\\"uri\\\":\\\"http://mytestdomain.movie/content/72998\\\",\\\"available_time\\\":\\\"2023-01-01T00:00:00Z\\\",\\\"media_type\\\":\\\"movie\\\"}\"}\n```\n### Filter expression syntax\nMake sure you understand the filter expression syntax that you'll use to define your search filter. The filter expression syntax can be summarized by the following [Extended Backus\u2013Naur form](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form#:%7E:text=In%20compute) :\n```\n\u00a0 # A single expression or multiple expressions that are joined by \"AND\" or \"OR\".\u00a0 filter = expression, { \" AND \" | \"OR\", expression };\u00a0 # Expressions can be prefixed with \"-\" or \"NOT\" to express a negation.\u00a0 expression = [ \"-\" | \"NOT \" ],\u00a0 \u00a0 # A parenthetical expression.\u00a0 \u00a0 | \"(\", expression, \")\"\u00a0 \u00a0 # A simple expression applying to a text field.\u00a0 \u00a0 # Function \"ANY\" returns true if the field contains any of the literals.\u00a0 \u00a0 ( text_field, \":\", \"ANY\", \"(\", literal, { \",\", literal }, \")\"\u00a0 \u00a0 # A simple expression applying to a numerical field. Function \"IN\" returns true\u00a0 \u00a0 # if a field value is within the range. By default, lower_bound is inclusive and\u00a0 \u00a0 # upper_bound is exclusive.\u00a0 \u00a0 | numerical_field, \":\", \"IN\", \"(\", lower_bound, \",\", upper_bound, \")\"\u00a0 \u00a0 # A simple expression that applies to a numerical field and compares with a double value.\u00a0 \u00a0 | numerical_field, comparison, double );\u00a0 # A lower_bound is either a double or \"*\", which represents negative infinity.\u00a0 # Explicitly specify inclusive bound with the character 'i' or exclusive bound\u00a0 # with the character 'e'.\u00a0 lower_bound = ( double, [ \"e\" | \"i\" ] ) | \"*\";\u00a0 # An upper_bound is either a double or \"*\", which represents infinity.\u00a0 # Explicitly specify inclusive bound with the character 'i' or exclusive bound\u00a0 # with the character 'e'.\u00a0 upper_bound = ( double, [ \"e\" | \"i\" ] ) | \"*\";\u00a0 # Supported comparison operators.\u00a0 comparison = \"<=\" | \"<\" | \">=\" | \">\" | \"=\";\u00a0 # A literal is any double quoted string. You must escape backslash (\\) and\u00a0 # quote (\") characters.\u00a0 literal = double quoted string;\u00a0 text_field = text field - for example, category;\u00a0 numerical_field = numerical field - for example, score;\n```\n## Filter media search\nTo filter media search using metadata, follow these steps:\n- Find your data store ID. If you already have your data store ID, skip to the next step.- In the Google Cloud console, go to the **Search and Conversation** page and in the navigation menu, click **Data stores** . [Go to the Data stores page](https://console.cloud.google.com/gen-app-builder/data-stores) \n- Click the name of your data store.\n- On the **Data** page for your data store, get the data store ID.\n- Determine the document field or fields that you want to filter on. For example, for the documents in [Before you begin](#before-you-begin) , you could use the `categories` field as a filter.\n- To make the `categories` field filterable, do the following:- In the Google Cloud console, go to the **Search and Conversation** page, and in the navigation menu, click **Apps** . [Go to the Apps page](https://console.cloud.google.com/gen-app-builder/engines) \n- Click your media search app.\n- In the navigation menu, click **Data** .\n- Click the **Schema** tab. This tab shows current field settings.\n- Click **Edit** .\n- If it's not already selected, select the **Indexable** checkbox in the **categories** row, and then click **Save** .\n- Wait six hours to allow time for your schema edit to propagate. After six hours, you can proceed to the following step.\n- Get search results.```\ncurl -X POST -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\-H \"Content-Type: application/json\" \\\"https://discoveryengine.googleapis.com/v1beta/projects/PROJECT_ID/locations/global/collections/default_collection/dataStores/DATA_STORE_ID/servingConfigs/default_search:search\" \\-d '{\"query\": \"QUERY\",\"filter\": \"FILTER\"}'\n```- : The ID of your project.\n- : The ID your data store.\n- : The query text to search.\n- : A text field for filtering your search using a filter expression.\nFor example, suppose you want to search through the movies in the [Before youbegin](#before-you-begin) section, and you want search results only for movies that: (1) Contain the word \"avatar\", and (2) are in the \"Documentary\" category. You would do that by including the following statements with your call:```\n\"query\": \"avatar\",\"filter\": \"categories: ANY(\\\"Documentary\\\")\n```For more information, see the [search](/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.collections.dataStores.servingConfigs/search) method.", "guide": "Vertex AI Search and Conversation"}