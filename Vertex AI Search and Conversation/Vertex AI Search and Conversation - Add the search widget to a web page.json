{"title": "Vertex AI Search and Conversation - Add the search widget to a web page", "url": "https://cloud.google.com/generative-ai-app-builder/docs/add-widget?hl=zh-cn", "abstract": "# Vertex AI Search and Conversation - Add the search widget to a web page\nThis page describes how to add search functionality to a website using the search widget.\n", "content": "## Before you begin\nBefore you add a search widget to your web page, be sure to configure your search widget, starting with [Configure results for the searchwidget](/generative-ai-app-builder/docs/configure-widget-attributes) . Note that it's not possible to adjust the styling of the search widget in your web page.\n## Procedures\nThe procedure for adding the search widget to your web page differs depending on the authorization type you choose:\n- **Authorization token** : The widget uses a JWT or OAuth token provided by your codebase. You must have your own server that you can use to generate a token. The auth token is used to make an API call on behalf of the user or service account. When generating the auth token, use the OAuth scope `https://www.googleapis.com/auth/cloud-platform` .- **For server-to-server interactions with service accounts:** See [Using OAuth2.0 for Server to ServerApplications](https://developers.google.com/identity/protocols/oauth2/service-account) in the authorization documentation.\n- **For JavaScript web applications:** See [OAuth 2.0 for Client-side WebApplications](https://developers.google.com/identity/protocols/oauth2/javascript-implicit-flow) in the authorization documentation.\n **Note:** If you selected a workforce pool to control access to your app's data, then [obtain short-lived tokens for workforce identity federation](/iam/docs/workforce-obtaining-short-lived-credentials) .\n- **Public access** : The widget won't restrict who can get results from a search query.\n### Add a widget that uses an authorization token\n- In the Google Cloud console, go to the **Search and Conversation** page. [Search and Conversation](https://console.cloud.google.com/gen-app-builder/start) \n- Click the name of the app that you want to edit.\n- Click **Integration** .\n- Click the **Widget** tab.\n- Select **JWT or OAuth based** as the widget authorization type.\n- Specify the domain name for the widget page:- Enter the domain name for the page where the widget will appear.For example, if you are going to copy the widget to the pages `example.com/ai.html` and `cymbal.example.com/search.html` , enter `example.com` as the domain. If you only want the widget to work on a page in the subdomain, enter `cymbal.example.com` .If you want to test the widget on your localhost, enter `localhost` .\n- Click **Add** .\n- Repeat step 6 for each domain where the widget will appear.\n- Click **Save** .\n- Copy the code snippet provided in the **Copy the following code to yourweb application** section.\n- In your codebase, generate an authorization token. **Note:** If you selected a workforce pool to control access to your app's data, then [obtain short-lived tokens for workforce identity federation](/iam/docs/workforce-obtaining-short-lived-credentials) .\n- To pass the authorization token to your widget, use the \"Set authorization token\" code snippet provided in the **Copy the following codeto your web application** section and replace the text `<JWT or OAuth token provided by you backend>` with your authorization token.\n- Periodically set a fresh token by repeating the previous step before the current token expires.\n### Add a widget that has public access\n- In the Google Cloud console, go to the **Search and Conversation** page. [Search and Conversation](https://console.cloud.google.com/gen-app-builder/start) \n- Click the name of the app that you want to edit.\n- Click **Integrations** .\n- Click the **Widget** tab.\n- Select **Public Access** as the widget authorization type.\n- Specify the domain name for the widget page:- Enter the domain name for the page where the widget will appear.For example, if you are going to copy the widget to the pages `example.com/ai.html` and `cymbal.example.com/search.html` , enter `example.com` as the domain. If you only want the widget to work on pages in the subdomain, enter `cymbal.example.com` .If you want to test the widget on your localhost, enter `localhost` .\n- Click **Add** .\n- Repeat step 6 for each domain where the widget will appear.\n- Click **Save** .\n- Copy the code snippet provided in the **Copy the following code to yourweb application** section and paste the code snippet into your web page.", "guide": "Vertex AI Search and Conversation"}