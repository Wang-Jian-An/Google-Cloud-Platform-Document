{"title": "Documentation - Securely boot a VM", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Securely boot a VM\nSecure boot helps to ensure that the system runs only authentic software by verifying the digital signature of all boot components, and stopping the boot process if signature verification fails.\nThe Unified Extensible Firmware Interface (UEFI) firmware securely manages the certificates that contain the keys the software manufacturers use to sign the system firmware, the system boot loader, and any binaries they load. To see the UEFI documentation, visit `https://uefi.org/sites/default/files/resources/UEFI_Secure_Boot_in_Modern_Computer_Security_Solutions_2013.pdf` .\nOn each boot, the UEFI firmware verifies the digital signature of each boot component against the secure store of approved keys. Any boot component that you do not sign properly, or you do not sign at all, isn't allowed to run. You must set the `bootloader` type of the virtual machine (VM) to `uefi` to enable a secure boot.\n", "content": "## Before you begin\nTo use `gdcloud` command-line interface (CLI) commands, ensure that you have downloaded, installed, and configured the [gdcloud CLI](/distributed-cloud/hosted/docs/latest/gdch/resources/gdcloud-overview) . All commands for Distributed Cloud Hosted use the `gdcloud` or `kubectl` CLI, and require an operating system (OS) environment.\n### Get the kubeconfig file path\nTo run commands against the org admin cluster, ensure you have the following resources:\n- Locate the org admin cluster name, or ask your Platform Administrator (PA) what the cluster name is.\n- [Sign in and generate](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/iam/sign-in#cli) the kubeconfig file for the org admin cluster if you don't have one.\n- Use the path to the kubeconfig file of the org admin cluster to replace `` in these instructions.## Enable secure boot\nEnable secure boot for a VM. Use the following instructions for a VM called `` in the project's namespace ( `` ).\n- [Run the following command](None) :```\nkubectl --kubeconfig ORG_ADMIN_KUBECONFIG patch virtualmachines.virtualmachine.gdc.goog VM_NAME -n PROJECT_NAMESPACE --type merge --patch $'spec:\u00a0 \u00a0firmware:\u00a0 \u00a0 \u00a0 type: uefi\u00a0 \u00a0 \u00a0 enableSecureBoot: true'\n```- [If the VM is running](None) , restart it using the instructions to [restart a VM](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/manage-vms/operations-and-lifecycle/start-and-stop-vm#restart-a-vm) .\n- Verify that you've enabled `SecureBoot` . [SSH into the VM](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/connect-to-vm/connect-to-a-vm) and run the following command:```\n\u00a0mokutil --sb-state\u00a0```\n```\nIf you've successfully enabled `SecureBoot` , the command returns `SecureBoot enabled` .If the `mokutil` tool reports that you have not enabled `SecureBoot` , follow these steps:- Run the following command:```\n\u00a0kubectl --kubeconfig ORG_ADMIN_KUBECONFIG edit virtualmachines.virtualmachine.gdc.goog VM_NAME -n PROJECT_NAMESPACE\u00a0```\n```\n- Look for missing fields or values as shown in the `spec` field in [\"Run the following command\"](#reference) . These are required.\n- If any are missing or are incorrect, edit `spec` to add the missing fields and correct erroneous values.\n- Save the file.\n- Follow the steps in [Restart the VM](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/vms/manage-vms/operations-and-lifecycle/start-and-stop-vm#restart-a-vm) .\nIf the previous steps don't resolve your issue, check the documentation corresponding to the VM's operating system (OS) to verify that the OS version supports the secure boot.", "guide": "Documentation"}