{"title": "Compute Engine - Rescue an inaccessible VM", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Rescue an inaccessible VM\nIf your Linux VM is inaccessible due to any reason, you can try rescue the VM using the following steps.\n", "content": "## Required roles\nTo get the permissions that you need to rescue a VM,   ask your administrator to grant you the  following IAM roles on the project:\n- [Compute Instance Admin (v1) ](https://cloud.google.com/iam/docs/understanding-roles#compute.instanceAdmin.v1) (`roles/compute.instanceAdmin.v1`)\n- VMs that use a service account: [Service account user ](https://cloud.google.com/iam/docs/understanding-roles#iam.serviceAccountUser) (`roles/iam.serviceAccountUser`)\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nThese predefined roles contain     the permissions required to rescue a VM. To see the exact permissions that are   required, expand the **Required permissions** section:\nYou might also be able to get   these permissions  with [custom roles](/iam/docs/creating-custom-roles) or  other [predefined roles](/iam/docs/understanding-roles) .\n## Rescue a VM\nIf you can't connect to your VM, or your boot disk is full, you must create a temporary VM to rescue the inaccessible VM.\n- (Optional) Stop the inaccessible VM.\n- [Create a snapshot](/compute/docs/disks/create-snapshots#creating_snapshots) from the boot disk of the inaccessible VM.\n- [Create a temporary VM using a public image closest to inaccessible VM's OS](/compute/docs/images#list_of_public_images_available_on) .\n- Check if you're able to [connect to the temporary VM](/compute/docs/connect/standard-ssh) using SSH.\n- Add an additional disk to the temporary VM by following these steps:- In the Google Cloud console, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) \n- Click the name of the temporary VM that you created.\n- Click edit **Edit** .\n- Under **Additional disks** , click add **Add new disk** , and then do the following:- Add the disk name, like\n- For **Source type** , select the **Snapshot** tab.\n- In the **Source snapshot** drop-down menu, select the snapshot of the source VM that you created earlier in these steps.\n- Click **Done** .\n- Click **Save** .\n- [Connect to the temporary VM](/compute/docs/instances/connecting-to-instance#connecting_to_vms) using SSH.\n- Execute the following command:```\nls -l /dev/disk/by-id/google-*\n```The output will be similar to the following:```\n /dev/disk/by-id/google-my-vm -> ../../sda\n /dev/disk/by-id/google-my-vm-part1 -> ../../sda1\n /dev/disk/by-id/google-my-vm-part14 -> ../../sda14\n /dev/disk/by-id/google-my-vm-part15 -> ../../sda15\n /dev/disk/by-id/google-my-recovery-disk -> ../../sdb\n /dev/disk/by-id/google-my-recovery-disk-part1 -> ../../sdb1\n /dev/disk/by-id/google-my-recovery-disk-part2 -> ../../sdb2\n /dev/disk/by-id/google-my-recovery-disk-part5 -> ../../sdb5\n```Use the symlinks ( `/dev/disk/by-id/google-my-recovery-disk-part` `` ) to locate the underlying device and partitions for the newly added disk, for example, `/dev/sdb1` .The symlink for the disk is either google- or, if you specified a custom device name for the disk, google- . Make note of the device name that the new disk symlink points to.\n- Create a mount point at `/mnt/newdisk` :```\nsudo mkdir /mnt/newdisk\n```\n- Mount the additional disk partition to the mount point `/mnt/newdisk` :```\n sudo mount -o discard,defaults DISK_NAME /mnt/newdisk\n```Replace with the device name that you noted earlier in these steps \u2014 for example `/dev/sdb1` .If you see the error `Filesystem has duplicate UUID XXXXXX - can't mount` , `mount: /mnt/newdisk: wrong fs type, bad option` or `bad superblock on /dev/sdb` , use the following command:```\n sudo mount -o nouuid DISK_NAME /mnt/newdisk\n```The inaccessible VM's file system is now mounted at `/mnt/newdisk` . You can navigate the file system, change config files, fix issues or retrieve the data.## Revert the changes and boot the inaccessible VM back\nAfter the issue is fixed or data is retrieved, you need to bring back the actual VM. Use the following steps to restore the original VM:\n- Unmount the additional disk which is mounted at `/mnt/newdisk` in the temporary VM:```\n cd ~\n sudo umount /mnt/newdisk\n```\n- In the Google Cloud console, go to the **VM instances** page. [Go to VM instances](https://console.cloud.google.com/compute/instances) - Select the temporary VM that you created.\n- Click edit **Edit** .\n- Under **Additional disks** , click close for the disk created in earlier steps to detach the additional disk from the temporary VM.\n- Click **Save** .\n- Go to the **VM instances** page in the Google Cloud console. [Go to VM instances](https://console.cloud.google.com/compute/instances) - If the inaccessible VM is still running, [stop the VM](/compute/docs/instances/stop-start-instance#stop-vm) .\n- Click the name of the VM you just stopped, and then click edit **Edit** .\n- Under **Boot disk** , click close **Detach book disk** to detach the exiting boot disk from the inaccessible VM.\n- Next, click edit **CONFIGURE BOOTDISK** to attach the disk you created and fixed previously in [Rescue a VM](#rescue) on this page.- In the **Boot Disk** section, click the **Existing disks** tab.\n- In the drop-down list, select the disk that you created in the previous section, for example`my-recovery-disk`.\n- Click **Select** and then click **Save** .\n- [Start the VM](/compute/docs/instances/stop-start-instance#starting_a_stopped_instance) .\n- You should now be able to [connect to the VM](/compute/docs/instances/connecting-to-instance#connecting_to_vms) using SSH.", "guide": "Compute Engine"}