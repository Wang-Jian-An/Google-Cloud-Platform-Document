{"title": "Cloud Natural Language - Entity", "url": "https://cloud.google.com/natural-language/docs/reference/rest/v1beta2/Entity?hl=zh-cn", "abstract": "# Cloud Natural Language - Entity\n- [JSON representation](#SCHEMA_REPRESENTATION) \n- [Type](#Type) \n- [EntityMention](#EntityMention) - [JSON representation](#EntityMention.SCHEMA_REPRESENTATION) \n- [Type](#Type_1) Represents a phrase in the text that is a known entity, such as a person, an organization, or location. The API associates information, such as salience and mentions, with entities.| JSON representation                                            |\n|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| { \"name\": string, \"type\": enum (Type), \"metadata\": { string: string, ... }, \"salience\": number, \"mentions\": [ { object (EntityMention) } ], \"sentiment\": { object (Sentiment) } } || Fields  | Fields.1                                                                                               |\n|:-----------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| name  | string The representative name for the entity.                                                                                     |\n| type  | enum (Type) The entity type.                                                                                          |\n| metadata | map (key: string, value: string) Metadata associated with the entity.For most entity types, the metadata is a Wikipedia URL (wikipedia_url) and Knowledge Graph MID (mid), if they are available. For the metadata associated with other entity types, see the Type table below.An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }. |\n| salience | number The salience score associated with the entity in the [0, 1.0] range.The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient.                        |\n| mentions[] | object (EntityMention) The mentions of this entity in the input document. The API currently supports proper noun mentions.                                                                  |\n| sentiment | object (Sentiment) For calls to [AnalyzeEntitySentiment][] or if AnnotateTextRequest.Features.extract_entity_sentiment is set to true, this field will contain the aggregate sentiment expressed for this entity in the provided document.                                      |", "content": "## Type\nThe type of the entity. For most entity types, the associated metadata is a Wikipedia URL ( `wikipedia_url` ) and Knowledge Graph MID ( `mid` ). The table below lists the associated fields for entities that have different metadata.| Enums   | Enums.1                                                                                                                               |\n|:--------------||\n| UNKNOWN  | Unknown                                                                                                                               |\n| PERSON  | Person                                                                                                                               |\n| LOCATION  | Location                                                                                                                               |\n| ORGANIZATION | Organization                                                                                                                              |\n| EVENT   | Event                                                                                                                               |\n| WORK_OF_ART | Artwork                                                                                                                               |\n| CONSUMER_GOOD | Consumer product                                                                                                                             |\n| OTHER   | Other types of entities                                                                                                                           |\n| PHONE_NUMBER | Phone numberThe metadata lists the phone number, formatted according to local convention, plus whichever additional elements appear in the text: number - the actual number, broken down into sections as per local convention national_prefix - country code, if detected area_code - region or area code, if detected extension - phone extension (to be dialed after connection), if detected                                 |\n| ADDRESS  | AddressThe metadata identifies the street number and locality plus whichever additional elements appear in the text: street_number - street number locality - city or town street_name - street/route name, if detected postal_code - postal code, if detected country - country, if detected< broad_region - administrative area, such as the state, if detected narrow_region - smaller administrative area, such as county, if detected sublocality - used in Asian addresses to demark a district within a city, if detected |\n| DATE   | DateThe metadata identifies the components of the date: year - four digit year, if detected month - two digit month number, if detected day - two digit day number, if detected                                                                                     |\n| NUMBER  | NumberThe metadata is the number itself.                                                                                                                       |\n| PRICE   | PriceThe metadata identifies the value and currency.                                                                                                                    |\n## EntityMention\nRepresents a mention for an entity in the text. Currently, proper noun mentions are supported.| JSON representation                    |\n|:---------------------------------------------------------------------------------------------------|\n| { \"text\": { object (TextSpan) }, \"type\": enum (Type), \"sentiment\": { object (Sentiment) } } || Fields | Fields.1                                                          |\n|:----------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| text  | object (TextSpan) The mention text.                                                    |\n| type  | enum (Type) The type of the entity mention.                                                  |\n| sentiment | object (Sentiment) For calls to [AnalyzeEntitySentiment][] or if AnnotateTextRequest.Features.extract_entity_sentiment is set to true, this field will contain the sentiment expressed for this mention of the entity in the provided document. |\n## Type\nThe supported types of mentions.| Enums  | Enums.1      |\n|:-------------|:-------------------------------|\n| TYPE_UNKNOWN | Unknown      |\n| PROPER  | Proper name     |\n| COMMON  | Common noun (or noun compound) |", "guide": "Cloud Natural Language"}