{"title": "Cloud Natural Language - Locations", "url": "https://cloud.google.com/natural-language/docs/locations", "abstract": "# Cloud Natural Language - Locations\nCloud Natural Language offers you some control over where the resources for your project are stored and processed. In particular, you can configure Cloud Natural Language to store your data at rest and perform machine learning processing on your data only in the European Union or the United States.\nBy default Cloud Natural Language stores and processes resources in a **Global** location, which means that Cloud Natural Language doesn't guarantee that your resources will remain within a particular location or region. If you choose the **European Union** location, Google will store your data and perform machine learning with it only in the European Union. If you choose the **United States** location, Google will store your data and perform machine learning with it only in the United States. You and your users can access the data from any location.\n", "content": "## Setting the location using the API\nCloud Natural Language supports a global API endpoint ( `language.googleapis.com` ), a European Union endpoint ( `eu-language.googleapis.com` ), and a United States endpoint ( `us-language.googleapis.com` ). To store and process your data in the European Union only, use the URI `eu-language.googleapis.com` in place of `language.googleapis.com` for your REST API calls. To store and process your data in the United States only, use the URI `us-language.googleapis.com` in place of `language.googleapis.com` for your REST API calls.\n## Setting the location using client libraries\nThe client libraries access the global API endpoint ( `language.googleapis.com` ) by default. To store and process your data in the European Union or United States only, you need to explicitly set the endpoint. The code samples below show how to configure this setting.\nTo learn how to install and use the client library for Natural Language, see [Natural Language client libraries](/natural-language/docs/reference/libraries) .       For more information, see the [Natural Language Python API reference documentation](/python/docs/reference/language/latest) .\nTo authenticate to Natural Language, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/language/snippets/cloud-client/v1/set_endpoint.py) \n```\n# Imports the Google Cloud client libraryfrom google.cloud import language_v1client_options = {\"api_endpoint\": \"eu-language.googleapis.com:443\"}# Instantiates a clientclient = language_v1.LanguageServiceClient(client_options=client_options)\n```To learn how to install and use the client library for Natural Language, see [Natural Language client libraries](/natural-language/docs/reference/libraries) .       For more information, see the [Natural Language Java API reference documentation](/java/docs/reference/google-cloud-language/latest/overview) .\nTo authenticate to Natural Language, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [Open in Editor](https://ide.cloud.google.com/?git_repo=https://github.com/GoogleCloudPlatform/java-docs-samples&page=editor&cloudshell_workspace=language/snippets/src/main/java/com/example/language&cloudshell_open_in_editor=SetEndpoint.java) [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/language/snippets/src/main/java/com/example/language/SetEndpoint.java) \n```\nLanguageServiceSettings settings =\u00a0 \u00a0 LanguageServiceSettings.newBuilder().setEndpoint(\"eu-language.googleapis.com:443\").build();// Initialize client that will be used to send requests. This client only needs to be created// once, and can be reused for multiple requests. After completing all of your requests, call// the \"close\" method on the client to safely clean up any remaining background resources.LanguageServiceClient client = LanguageServiceClient.create(settings);\n```To learn how to install and use the client library for Natural Language, see [Natural Language client libraries](/natural-language/docs/reference/libraries) .       For more information, see the [Natural Language Node.js API reference documentation](/nodejs/docs/reference/language/latest) .\nTo authenticate to Natural Language, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [Open in Editor](https://ide.cloud.google.com/?git_repo=https://github.com/GoogleCloudPlatform/nodejs-docs-samples&page=editor&cloudshell_workspace=cloud-language&cloudshell_open_in_editor=setEndpoint.js) [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/cloud-language/setEndpoint.js) \n```\n// Imports the Google Cloud client libraryconst language = require('@google-cloud/language');// Specifies the location of the api endpointconst clientOptions = {apiEndpoint: 'eu-language.googleapis.com'};// Instantiates a clientconst client = new language.LanguageServiceClient(clientOptions);\n```", "guide": "Cloud Natural Language"}