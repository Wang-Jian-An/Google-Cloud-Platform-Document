{"title": "Cloud Natural Language - Package google.cloud.language.v1", "url": "https://cloud.google.com/natural-language/docs/reference/rpc/google.cloud.language.v1?hl=zh-cn", "abstract": "# Cloud Natural Language - Package google.cloud.language.v1\n", "content": "## Index\n- ` [LanguageService](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.LanguageService) `(interface)\n- ` [AnalyzeEntitiesRequest](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnalyzeEntitiesRequest) `(message)\n- ` [AnalyzeEntitiesResponse](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnalyzeEntitiesResponse) `(message)\n- ` [AnalyzeEntitySentimentRequest](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnalyzeEntitySentimentRequest) `(message)\n- ` [AnalyzeEntitySentimentResponse](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnalyzeEntitySentimentResponse) `(message)\n- ` [AnalyzeSentimentRequest](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnalyzeSentimentRequest) `(message)\n- ` [AnalyzeSentimentResponse](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnalyzeSentimentResponse) `(message)\n- ` [AnalyzeSyntaxRequest](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnalyzeSyntaxRequest) `(message)\n- ` [AnalyzeSyntaxResponse](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnalyzeSyntaxResponse) `(message)\n- ` [AnnotateTextRequest](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnnotateTextRequest) `(message)\n- ` [AnnotateTextRequest.Features](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnnotateTextRequest.Features) `(message)\n- ` [AnnotateTextResponse](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.AnnotateTextResponse) `(message)\n- ` [ClassificationCategory](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.ClassificationCategory) `(message)\n- ` [ClassificationModelOptions](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.ClassificationModelOptions) `(message)\n- ` [ClassificationModelOptions.V1Model](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.ClassificationModelOptions.V1Model) `(message)\n- ` [ClassificationModelOptions.V2Model](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.ClassificationModelOptions.V2Model) `(message)\n- ` [ClassificationModelOptions.V2Model.ContentCategoriesVersion](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.ClassificationModelOptions.V2Model.ContentCategoriesVersion) `(enum)\n- ` [ClassifyTextRequest](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.ClassifyTextRequest) `(message)\n- ` [ClassifyTextResponse](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.ClassifyTextResponse) `(message)\n- ` [DependencyEdge](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.DependencyEdge) `(message)\n- ` [DependencyEdge.Label](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.DependencyEdge.Label) `(enum)\n- ` [Document](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.Document) `(message)\n- ` [Document.Type](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.Document.Type) `(enum)\n- ` [EncodingType](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.EncodingType) `(enum)\n- ` [Entity](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.Entity) `(message)\n- ` [Entity.Type](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.Entity.Type) `(enum)\n- ` [EntityMention](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.EntityMention) `(message)\n- ` [EntityMention.Type](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.EntityMention.Type) `(enum)\n- ` [ModerateTextRequest](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.ModerateTextRequest) `(message)\n- ` [ModerateTextResponse](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.ModerateTextResponse) `(message)\n- ` [PartOfSpeech](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech) `(message)\n- ` [PartOfSpeech.Aspect](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Aspect) `(enum)\n- ` [PartOfSpeech.Case](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Case) `(enum)\n- ` [PartOfSpeech.Form](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Form) `(enum)\n- ` [PartOfSpeech.Gender](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Gender) `(enum)\n- ` [PartOfSpeech.Mood](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Mood) `(enum)\n- ` [PartOfSpeech.Number](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Number) `(enum)\n- ` [PartOfSpeech.Person](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Person) `(enum)\n- ` [PartOfSpeech.Proper](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Proper) `(enum)\n- ` [PartOfSpeech.Reciprocity](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Reciprocity) `(enum)\n- ` [PartOfSpeech.Tag](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Tag) `(enum)\n- ` [PartOfSpeech.Tense](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Tense) `(enum)\n- ` [PartOfSpeech.Voice](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.PartOfSpeech.Voice) `(enum)\n- ` [Sentence](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.Sentence) `(message)\n- ` [Sentiment](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.Sentiment) `(message)\n- ` [TextSpan](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.TextSpan) `(message)\n- ` [Token](/natural-language/docs/reference/rpc/google.cloud.language.v1#google.cloud.language.v1.Token) `(message)\n## LanguageService\nProvides text analysis operations such as sentiment analysis and entity recognition.| AnalyzeEntities                                                                                                             |\n|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| rpc AnalyzeEntities(AnalyzeEntitiesRequest) returns (AnalyzeEntitiesResponse) Finds named entities (currently proper names and common nouns) in the text along with entity types, salience, mentions for each entity, and other properties. Authorization scopes Requires one of the following OAuth scopes: https://www.googleapis.com/auth/cloud-language https://www.googleapis.com/auth/cloud-platform For more information, see the Authentication Overview. || AnalyzeEntitySentiment                                                                                                        |\n|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| rpc AnalyzeEntitySentiment(AnalyzeEntitySentimentRequest) returns (AnalyzeEntitySentimentResponse) Finds entities, similar to AnalyzeEntities in the text and analyzes sentiment associated with each entity and its mentions. Authorization scopes Requires one of the following OAuth scopes: https://www.googleapis.com/auth/cloud-language https://www.googleapis.com/auth/cloud-platform For more information, see the Authentication Overview. || AnalyzeSentiment                                                                                 |\n|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| rpc AnalyzeSentiment(AnalyzeSentimentRequest) returns (AnalyzeSentimentResponse) Analyzes the sentiment of the provided text. Authorization scopes Requires one of the following OAuth scopes: https://www.googleapis.com/auth/cloud-language https://www.googleapis.com/auth/cloud-platform For more information, see the Authentication Overview. || AnalyzeSyntax                                                                                                           |\n|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| rpc AnalyzeSyntax(AnalyzeSyntaxRequest) returns (AnalyzeSyntaxResponse) Analyzes the syntax of the text and provides sentence boundaries and tokenization along with part of speech tags, dependency trees, and other properties. Authorization scopes Requires one of the following OAuth scopes: https://www.googleapis.com/auth/cloud-language https://www.googleapis.com/auth/cloud-platform For more information, see the Authentication Overview. || AnnotateText                                                                                                     |\n|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| rpc AnnotateText(AnnotateTextRequest) returns (AnnotateTextResponse) A convenience method that provides all the features that analyzeSentiment, analyzeEntities, and analyzeSyntax provide in one call. Authorization scopes Requires one of the following OAuth scopes: https://www.googleapis.com/auth/cloud-language https://www.googleapis.com/auth/cloud-platform For more information, see the Authentication Overview. || ClassifyText                                                                              |\n|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| rpc ClassifyText(ClassifyTextRequest) returns (ClassifyTextResponse) Classifies a document into categories. Authorization scopes Requires one of the following OAuth scopes: https://www.googleapis.com/auth/cloud-language https://www.googleapis.com/auth/cloud-platform For more information, see the Authentication Overview. || ModerateText                                                                                   |\n|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| rpc ModerateText(ModerateTextRequest) returns (ModerateTextResponse) Moderates a document for harmful and sensitive categories. Authorization scopes Requires one of the following OAuth scopes: https://www.googleapis.com/auth/cloud-language https://www.googleapis.com/auth/cloud-platform For more information, see the Authentication Overview. |\n## AnalyzeEntitiesRequest\nThe entity analysis request message.| Fields  | Fields.1                |\n|:--------------|:---------------------------------------------------------------------|\n| document  | Document Required. Input document.         |\n| encoding_type | EncodingType The encoding type used by the API to calculate offsets. |\n## AnalyzeEntitiesResponse\nThe entity analysis response message.| Fields  | Fields.1                                                 |\n|:-----------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| entities[] | Entity The recognized entities in the input document.                                      |\n| language | string The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details. |\n## AnalyzeEntitySentimentRequest\nThe entity-level sentiment analysis request message.| Fields  | Fields.1                |\n|:--------------|:---------------------------------------------------------------------|\n| document  | Document Required. Input document.         |\n| encoding_type | EncodingType The encoding type used by the API to calculate offsets. |\n## AnalyzeEntitySentimentResponse\nThe entity-level sentiment analysis response message.| Fields  | Fields.1                                                 |\n|:-----------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| entities[] | Entity The recognized entities in the input document with associated sentiments.                               |\n| language | string The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details. |\n## AnalyzeSentimentRequest\nThe sentiment analysis request message.| Fields  | Fields.1                  |\n|:--------------|:------------------------------------------------------------------------------|\n| document  | Document Required. Input document.           |\n| encoding_type | EncodingType The encoding type used by the API to calculate sentence offsets. |\n## AnalyzeSentimentResponse\nThe sentiment analysis response message.| Fields    | Fields.1                                                 |\n|:-------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| document_sentiment | Sentiment The overall sentiment of the input document.                                     |\n| language   | string The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details. |\n| sentences[]  | Sentence The sentiment for all the sentences in the document.                                    |\n## AnalyzeSyntaxRequest\nThe syntax analysis request message.| Fields  | Fields.1                |\n|:--------------|:---------------------------------------------------------------------|\n| document  | Document Required. Input document.         |\n| encoding_type | EncodingType The encoding type used by the API to calculate offsets. |\n## AnalyzeSyntaxResponse\nThe syntax analysis response message.| Fields  | Fields.1                                                 |\n|:------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| sentences[] | Sentence Sentences in the input document.                                         |\n| tokens[] | Token Tokens, along with their syntactic information, in the input document.                                |\n| language | string The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details. |\n## AnnotateTextRequest\nThe request message for the text annotation API, which can perform multiple analysis types (sentiment, entities, and syntax) in one call.| Fields  | Fields.1                |\n|:--------------|:---------------------------------------------------------------------|\n| document  | Document Required. Input document.         |\n| features  | Features Required. The enabled features.        |\n| encoding_type | EncodingType The encoding type used by the API to calculate offsets. |\n## Features\nAll available features for sentiment, syntax, and semantic analysis. Setting each one to true will enable that specific analysis for the input.| Fields      | Fields.1                                     |\n|:-----------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| extract_syntax    | bool Extract syntax information.                               |\n| extract_entities    | bool Extract entities.                                  |\n| extract_document_sentiment | bool Extract document-level sentiment.                              |\n| extract_entity_sentiment  | bool Extract entities and their associated sentiment.                          |\n| classify_text    | bool Classify the full document into categories.                           |\n| moderate_text    | bool Moderate the document for harmful and sensitive categories.                       |\n| classification_model_options | ClassificationModelOptions The model options to use for classification. Defaults to v1 options if not specified. Only used if classify_text is set to true. |\n## AnnotateTextResponse\nThe text annotations response message.| Fields     | Fields.1                                                 |\n|:------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| sentences[]    | Sentence Sentences in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_syntax.                      |\n| tokens[]    | Token Tokens, along with their syntactic information, in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_syntax.             |\n| entities[]    | Entity Entities, along with their semantic information, in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_entities.            |\n| document_sentiment  | Sentiment The overall sentiment for the document. Populated if the user enables AnnotateTextRequest.Features.extract_document_sentiment.                 |\n| language    | string The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details. |\n| categories[]   | ClassificationCategory Categories identified in the input document.                                  |\n| moderation_categories[] | ClassificationCategory Harmful and sensitive categories identified in the input document.                             |\n## ClassificationCategory\nRepresents a category returned from the text classifier.| Fields  | Fields.1                                   |\n|:-----------|:-------------------------------------------------------------------------------------------------------------------------------------------------|\n| name  | string The name of the category representing the document.                      |\n| confidence | float The classifier's confidence of the category. Number represents how certain the classifier is that this category represents the given text. |\n## ClassificationModelOptions\nModel options available for classification requests.| Fields                                 | Fields.1                                         |\n|:------------------------------------------------------------------------------------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Union field model_type. If this field is not set, then the v1_model will be used by default. model_type can be only one of the following: | Union field model_type. If this field is not set, then the v1_model will be used by default. model_type can be only one of the following:        |\n| v1_model                                 | V1Model Setting this field will use the V1 model and V1 content categories version. The V1 model is a legacy model; support for this will be discontinued in the future. |\n| v2_model                                 | V2Model Setting this field will use the V2 model with the appropriate content categories version. The V2 model is a better performing model.        |\n## V1ModelThis type has no fields.\nOptions for the V1 model.\n## V2Model\nOptions for the V2 model.| Fields      | Fields.1                 |\n|:---------------------------|:-------------------------------------------------------------------------|\n| content_categories_version | ContentCategoriesVersion The content categories used for classification. |\n## ContentCategoriesVersion\nThe content categories used for classification.| Enums         | Enums.1                  |\n|:---------------------------------------|:------------------------------------------------------------------------------|\n| CONTENT_CATEGORIES_VERSION_UNSPECIFIED | If ContentCategoriesVersion is not specified, this option will default to V1. |\n| V1          | Legacy content categories of our initial launch in 2017.      |\n| V2          | Updated content categories in 2022.           |\n## ClassifyTextRequest\nThe document classification request message.| Fields      | Fields.1                          |\n|:-----------------------------|:-------------------------------------------------------------------------------------------------------------|\n| document      | Document Required. Input document.                   |\n| classification_model_options | ClassificationModelOptions Model options to use for classification. Defaults to v1 options if not specified. |\n## ClassifyTextResponse\nThe document classification response message.| Fields  | Fields.1               |\n|:-------------|:-------------------------------------------------------------------|\n| categories[] | ClassificationCategory Categories representing the input document. |\n## DependencyEdge\nRepresents dependency parse tree information for a token. (For more information on dependency labels, see [https://www.aclweb.org/anthology/P13-2017](https://www.aclweb.org/anthology/P13-2017) | Fields   | Fields.1                                                                         |\n|:-----------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| head_token_index | int32 Represents the head of this token in the dependency tree. This is the index of the token which has an arc going to this token. The index is the position of the token in the array of tokens returned by the API method. If this token is a root token, then the head_token_index is its own index. |\n| label   | Label The parse label for the token.                                                                  |\n## Label\nThe parse label enum for the token.| Enums  | Enums.1               |\n|:-------------|:-------------------------------------------------------------------|\n| UNKNOWN  | Unknown               |\n| ABBREV  | Abbreviation modifier            |\n| ACOMP  | Adjectival complement            |\n| ADVCL  | Adverbial clause modifier           |\n| ADVMOD  | Adverbial modifier             |\n| AMOD   | Adjectival modifier of an NP          |\n| APPOS  | Appositional modifier of an NP          |\n| ATTR   | Attribute dependent of a copular verb        |\n| AUX   | Auxiliary (non-main) verb           |\n| AUXPASS  | Passive auxiliary             |\n| CC   | Coordinating conjunction           |\n| CCOMP  | Clausal complement of a verb or adjective       |\n| CONJ   | Conjunct               |\n| CSUBJ  | Clausal subject             |\n| CSUBJPASS | Clausal passive subject           |\n| DEP   | Dependency (unable to determine)         |\n| DET   | Determiner               |\n| DISCOURSE | Discourse               |\n| DOBJ   | Direct object              |\n| EXPL   | Expletive               |\n| GOESWITH  | Goes with (part of a word in a text not well edited)    |\n| IOBJ   | Indirect object             |\n| MARK   | Marker (word introducing a subordinate clause)      |\n| MWE   | Multi-word expression            |\n| MWV   | Multi-word verbal expression          |\n| NEG   | Negation modifier             |\n| NN   | Noun compound modifier            |\n| NPADVMOD  | Noun phrase used as an adverbial modifier       |\n| NSUBJ  | Nominal subject             |\n| NSUBJPASS | Passive nominal subject           |\n| NUM   | Numeric modifier of a noun           |\n| NUMBER  | Element of compound number           |\n| P   | Punctuation mark             |\n| PARATAXIS | Parataxis relation             |\n| PARTMOD  | Participial modifier            |\n| PCOMP  | The complement of a preposition is a clause      |\n| POBJ   | Object of a preposition           |\n| POSS   | Possession modifier            |\n| POSTNEG  | Postverbal negative particle          |\n| PRECOMP  | Predicate complement            |\n| PRECONJ  | Preconjunt               |\n| PREDET  | Predeterminer              |\n| PREF   | Prefix                |\n| PREP   | Prepositional modifier            |\n| PRONL  | The relationship between a verb and verbal morpheme    |\n| PRT   | Particle               |\n| PS   | Associative or possessive marker         |\n| QUANTMOD  | Quantifier phrase modifier           |\n| RCMOD  | Relative clause modifier           |\n| RCMODREL  | Complementizer in relative clause         |\n| RDROP  | Ellipsis without a preceding predicate        |\n| REF   | Referent               |\n| REMNANT  | Remnant               |\n| REPARANDUM | Reparandum               |\n| ROOT   | Root                |\n| SNUM   | Suffix specifying a unit of number         |\n| SUFF   | Suffix                |\n| TMOD   | Temporal modifier             |\n| TOPIC  | Topic marker              |\n| VMOD   | Clause headed by an infinite form of the verb that modifies a noun |\n| VOCATIVE  | Vocative               |\n| XCOMP  | Open clausal complement           |\n| SUFFIX  | Name suffix              |\n| TITLE  | Name title               |\n| ADVPHMOD  | Adverbial phrase modifier           |\n| AUXCAUS  | Causative auxiliary            |\n| AUXVV  | Helper auxiliary             |\n| DTMOD  | Rentaishi (Prenominal modifier)         |\n| FOREIGN  | Foreign words              |\n| KW   | Keyword               |\n| LIST   | List for chains of comparable items        |\n| NOMC   | Nominalized clause             |\n| NOMCSUBJ  | Nominalized clausal subject          |\n| NOMCSUBJPASS | Nominalized clausal passive          |\n| NUMC   | Compound of numeric modifier          |\n| COP   | Copula                |\n| DISLOCATED | Dislocated relation (for fronted/topicalized elements)    |\n| ASP   | Aspect marker              |\n| GMOD   | Genitive modifier             |\n| GOBJ   | Genitive object             |\n| INFMOD  | Infinitival modifier            |\n| MES   | Measure               |\n| NCOMP  | Nominal complement of a noun          |\n## Document\nRepresents the input to API methods.| Fields                                     | Fields.1                                                                                             |\n|:--------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| type                                     | Type Required. If the type is not set or is TYPE_UNSPECIFIED, returns an INVALID_ARGUMENT error.                                                                       |\n| language                                    | string The language of the document (if not specified, the language is automatically detected). Both ISO and BCP-47 language codes are accepted. Language Support lists currently supported languages for each API method. If the language (either specified by the caller or automatically detected) is not supported by the called API method, an INVALID_ARGUMENT error is returned. |\n| Union field source. The source of the document: a string containing the content or a Google Cloud Storage URI. source can be only one of the following: | Union field source. The source of the document: a string containing the content or a Google Cloud Storage URI. source can be only one of the following:                                                         |\n| content                                     | string The content of the input in string format. Cloud audit logging exempt since it is based on user data.                                                                    |\n| gcs_content_uri                                   | string The Google Cloud Storage URI where the file content is located. This URI must be of the form: gs://bucket_name/object_name. For more details, see https://cloud.google.com/storage/docs/reference-uris. NOTE: Cloud Storage object versioning is not supported.                             |\n## Type\nThe document types enum.| Enums   | Enums.1       |\n|:-----------------|:-----------------------------------|\n| TYPE_UNSPECIFIED | The content type is not specified. |\n| PLAIN_TEXT  | Plain text       |\n| HTML    | HTML        |\n## EncodingType\nRepresents the text encoding that the caller uses to process the output. Providing an `EncodingType` is recommended because the API provides the beginning offsets for various outputs, such as tokens and mentions, and languages that natively use different text encodings may access offsets differently.| Enums | Enums.1                                              |\n|:--------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| NONE | If EncodingType is not specified, encoding-dependent information (such as begin_offset) will be set at -1.                     |\n| UTF8 | Encoding-dependent information (such as begin_offset) is calculated based on the UTF-8 encoding of the input. C++ and Go are examples of languages that use this encoding natively.   |\n| UTF16 | Encoding-dependent information (such as begin_offset) is calculated based on the UTF-16 encoding of the input. Java and JavaScript are examples of languages that use this encoding natively. |\n| UTF32 | Encoding-dependent information (such as begin_offset) is calculated based on the UTF-32 encoding of the input. Python is an example of a language that uses this encoding natively.   |\n## Entity\nRepresents a phrase in the text that is a known entity, such as a person, an organization, or location. The API associates information, such as salience and mentions, with entities.| Fields  | Fields.1                                                                       |\n|:-----------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| name  | string The representative name for the entity.                                                              |\n| type  | Type The entity type.                                                                    |\n| metadata | map<string, string> Metadata associated with the entity.For most entity types, the metadata is a Wikipedia URL (wikipedia_url) and Knowledge Graph MID (mid), if they are available. For the metadata associated with other entity types, see the Type table below.        |\n| salience | float The salience score associated with the entity in the [0, 1.0] range.The salience score for an entity provides information about the importance or centrality of that entity to the entire document text. Scores closer to 0 are less salient, while scores closer to 1.0 are highly salient. |\n| mentions[] | EntityMention The mentions of this entity in the input document. The API currently supports proper noun mentions.                                             |\n| sentiment | Sentiment For calls to [AnalyzeEntitySentiment][] or if AnnotateTextRequest.Features.extract_entity_sentiment is set to true, this field will contain the aggregate sentiment expressed for this entity in the provided document.                 |\n## Type\nThe type of the entity. For most entity types, the associated metadata is a Wikipedia URL ( `wikipedia_url` ) and Knowledge Graph MID ( `mid` ). The table below lists the associated fields for entities that have different metadata.| Enums   | Enums.1                                                                                                                               |\n|:--------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| UNKNOWN  | Unknown                                                                                                                               |\n| PERSON  | Person                                                                                                                               |\n| LOCATION  | Location                                                                                                                               |\n| ORGANIZATION | Organization                                                                                                                              |\n| EVENT   | Event                                                                                                                               |\n| WORK_OF_ART | Artwork                                                                                                                               |\n| CONSUMER_GOOD | Consumer product                                                                                                                             |\n| OTHER   | Other types of entities                                                                                                                           |\n| PHONE_NUMBER | Phone numberThe metadata lists the phone number, formatted according to local convention, plus whichever additional elements appear in the text: number - the actual number, broken down into sections as per local convention national_prefix - country code, if detected area_code - region or area code, if detected extension - phone extension (to be dialed after connection), if detected                                 |\n| ADDRESS  | AddressThe metadata identifies the street number and locality plus whichever additional elements appear in the text: street_number - street number locality - city or town street_name - street/route name, if detected postal_code - postal code, if detected country - country, if detected< broad_region - administrative area, such as the state, if detected narrow_region - smaller administrative area, such as county, if detected sublocality - used in Asian addresses to demark a district within a city, if detected |\n| DATE   | DateThe metadata identifies the components of the date: year - four digit year, if detected month - two digit month number, if detected day - two digit day number, if detected                                                                                     |\n| NUMBER  | NumberThe metadata is the number itself.                                                                                                                       |\n| PRICE   | PriceThe metadata identifies the value and currency.                                                                                                                    |\n## EntityMention\nRepresents a mention for an entity in the text. Currently, proper noun mentions are supported.| Fields | Fields.1                                                        |\n|:----------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| text  | TextSpan The mention text.                                                    |\n| type  | Type The type of the entity mention.                                                 |\n| sentiment | Sentiment For calls to [AnalyzeEntitySentiment][] or if AnnotateTextRequest.Features.extract_entity_sentiment is set to true, this field will contain the sentiment expressed for this mention of the entity in the provided document. |\n## Type\nThe supported types of mentions.| Enums  | Enums.1      |\n|:-------------|:-------------------------------|\n| TYPE_UNKNOWN | Unknown      |\n| PROPER  | Proper name     |\n| COMMON  | Common noun (or noun compound) |\n## ModerateTextRequest\nThe document moderation request message.| Fields | Fields.1       |\n|:---------|:-----------------------------------|\n| document | Document Required. Input document. |\n## ModerateTextResponse\nThe document moderation response message.| Fields     | Fields.1                     |\n|:------------------------|:-----------------------------------------------------------------------------------------|\n| moderation_categories[] | ClassificationCategory Harmful and sensitive categories representing the input document. |\n## PartOfSpeech\nRepresents part of speech information for a token. Parts of speech are as defined in [https://www.lrec-conf.org/proceedings/lrec2012/pdf/274_Paper.pdf](https://www.lrec-conf.org/proceedings/lrec2012/pdf/274_Paper.pdf) | Fields  | Fields.1         |\n|:------------|:-----------------------------------------|\n| tag   | Tag The part of speech tag.    |\n| aspect  | Aspect The grammatical aspect.   |\n| case  | Case The grammatical case.    |\n| form  | Form The grammatical form.    |\n| gender  | Gender The grammatical gender.   |\n| mood  | Mood The grammatical mood.    |\n| number  | Number The grammatical number.   |\n| person  | Person The grammatical person.   |\n| proper  | Proper The grammatical properness.  |\n| reciprocity | Reciprocity The grammatical reciprocity. |\n| tense  | Tense The grammatical tense.    |\n| voice  | Voice The grammatical voice.    |\n## Aspect\nThe characteristic of a verb that expresses time flow during an event.| Enums   | Enums.1                |\n|:---------------|:-----------------------------------------------------------------------|\n| ASPECT_UNKNOWN | Aspect is not applicable in the analyzed language or is not predicted. |\n| PERFECTIVE  | Perfective                |\n| IMPERFECTIVE | Imperfective               |\n| PROGRESSIVE | Progressive               |\n## Case\nThe grammatical function performed by a noun or pronoun in a phrase, clause, or sentence. In some languages, other parts of speech, such as adjective and determiner, take case inflection in agreement with the noun.| Enums   | Enums.1                |\n|:---------------|:---------------------------------------------------------------------|\n| CASE_UNKNOWN | Case is not applicable in the analyzed language or is not predicted. |\n| ACCUSATIVE  | Accusative               |\n| ADVERBIAL  | Adverbial               |\n| COMPLEMENTIVE | Complementive              |\n| DATIVE   | Dative                |\n| GENITIVE  | Genitive                |\n| INSTRUMENTAL | Instrumental               |\n| LOCATIVE  | Locative                |\n| NOMINATIVE  | Nominative               |\n| OBLIQUE  | Oblique                |\n| PARTITIVE  | Partitive               |\n| PREPOSITIONAL | Prepositional              |\n| REFLEXIVE_CASE | Reflexive               |\n| RELATIVE_CASE | Relative                |\n| VOCATIVE  | Vocative                |\n## Form\nDepending on the language, Form can be categorizing different forms of verbs, adjectives, adverbs, etc. For example, categorizing inflected endings of verbs and adjectives or distinguishing between short and long forms of adjectives and participles| Enums   | Enums.1                |\n|:---------------|:---------------------------------------------------------------------|\n| FORM_UNKNOWN | Form is not applicable in the analyzed language or is not predicted. |\n| ADNOMIAL  | Adnomial                |\n| AUXILIARY  | Auxiliary               |\n| COMPLEMENTIZER | Complementizer              |\n| FINAL_ENDING | Final ending               |\n| GERUND   | Gerund                |\n| REALIS   | Realis                |\n| IRREALIS  | Irrealis                |\n| SHORT   | Short form               |\n| LONG   | Long form               |\n| ORDER   | Order form               |\n| SPECIFIC  | Specific form              |\n## Gender\nGender classes of nouns reflected in the behaviour of associated words.| Enums   | Enums.1                |\n|:---------------|:-----------------------------------------------------------------------|\n| GENDER_UNKNOWN | Gender is not applicable in the analyzed language or is not predicted. |\n| FEMININE  | Feminine                |\n| MASCULINE  | Masculine                |\n| NEUTER   | Neuter                 |\n## Mood\nThe grammatical feature of verbs, used for showing modality and attitude.| Enums   | Enums.1                |\n|:-----------------|:---------------------------------------------------------------------|\n| MOOD_UNKNOWN  | Mood is not applicable in the analyzed language or is not predicted. |\n| CONDITIONAL_MOOD | Conditional               |\n| IMPERATIVE  | Imperative               |\n| INDICATIVE  | Indicative               |\n| INTERROGATIVE | Interrogative              |\n| JUSSIVE   | Jussive                |\n| SUBJUNCTIVE  | Subjunctive               |\n## Number\nCount distinctions.| Enums   | Enums.1                |\n|:---------------|:-----------------------------------------------------------------------|\n| NUMBER_UNKNOWN | Number is not applicable in the analyzed language or is not predicted. |\n| SINGULAR  | Singular                |\n| PLURAL   | Plural                 |\n| DUAL   | Dual                 |\n## Person\nThe distinction between the speaker, second person, third person, etc.| Enums   | Enums.1                |\n|:-----------------|:-----------------------------------------------------------------------|\n| PERSON_UNKNOWN | Person is not applicable in the analyzed language or is not predicted. |\n| FIRST   | First                 |\n| SECOND   | Second                 |\n| THIRD   | Third                 |\n| REFLEXIVE_PERSON | Reflexive                |\n## Proper\nThis category shows if the token is part of a proper name.| Enums   | Enums.1                |\n|:---------------|:-----------------------------------------------------------------------|\n| PROPER_UNKNOWN | Proper is not applicable in the analyzed language or is not predicted. |\n| PROPER   | Proper                 |\n| NOT_PROPER  | Not proper                |\n## Reciprocity\nReciprocal features of a pronoun.| Enums    | Enums.1                  |\n|:--------------------|:----------------------------------------------------------------------------|\n| RECIPROCITY_UNKNOWN | Reciprocity is not applicable in the analyzed language or is not predicted. |\n| RECIPROCAL   | Reciprocal                 |\n| NON_RECIPROCAL  | Non-reciprocal                |\n## Tag\nThe part of speech tags enum.| Enums | Enums.1         |\n|:--------|:-------------------------------------------|\n| UNKNOWN | Unknown         |\n| ADJ  | Adjective         |\n| ADP  | Adposition (preposition and postposition) |\n| ADV  | Adverb          |\n| CONJ | Conjunction        |\n| DET  | Determiner         |\n| NOUN | Noun (common and proper)     |\n| NUM  | Cardinal number       |\n| PRON | Pronoun         |\n| PRT  | Particle or other function word   |\n| PUNCT | Punctuation        |\n| VERB | Verb (all tenses and modes)    |\n| X  | Other: foreign words, typos, abbreviations |\n| AFFIX | Affix          |\n## Tense\nTime reference.| Enums    | Enums.1                |\n|:------------------|:----------------------------------------------------------------------|\n| TENSE_UNKNOWN  | Tense is not applicable in the analyzed language or is not predicted. |\n| CONDITIONAL_TENSE | Conditional               |\n| FUTURE   | Future                |\n| PAST    | Past                 |\n| PRESENT   | Present                |\n| IMPERFECT   | Imperfect                |\n| PLUPERFECT  | Pluperfect               |\n## Voice\nThe relationship between the action that a verb expresses and the participants identified by its arguments.| Enums   | Enums.1                |\n|:--------------|:----------------------------------------------------------------------|\n| VOICE_UNKNOWN | Voice is not applicable in the analyzed language or is not predicted. |\n| ACTIVE  | Active                |\n| CAUSATIVE  | Causative                |\n| PASSIVE  | Passive                |\n## Sentence\nRepresents a sentence in the input document.| Fields | Fields.1                                           |\n|:----------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| text  | TextSpan The sentence text.                                      |\n| sentiment | Sentiment For calls to [AnalyzeSentiment][] or if AnnotateTextRequest.Features.extract_document_sentiment is set to true, this field will contain the sentiment for the sentence. |\n## Sentiment\nRepresents the feeling associated with the entire text or entities in the text.| Fields | Fields.1                                    |\n|:----------|:-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| magnitude | float A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment regardless of score (positive or negative). |\n| score  | float Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).                |\n## TextSpan\nRepresents a text span in the input document.| Fields  | Fields.1                                   |\n|:-------------|:--------------------------------------------------------------------------------------------------------------------------------------------------|\n| content  | string The content of the text span, which is a substring of the document.                  |\n| begin_offset | int32 The API calculates the beginning offset of the content in the original document according to the EncodingType specified in the API request. |\n## Token\nRepresents the smallest syntactic building block of the text.| Fields   | Fields.1            |\n|:----------------|:-----------------------------------------------------|\n| text   | TextSpan The token text.        |\n| part_of_speech | PartOfSpeech Parts of speech tag for this token.  |\n| dependency_edge | DependencyEdge Dependency tree parse for this token. |\n| lemma   | string Lemma of the token.       |", "guide": "Cloud Natural Language"}