{"title": "Cloud Natural Language - Natural Language client libraries", "url": "https://cloud.google.com/natural-language/docs/reference/libraries?hl=zh-cn", "abstract": "# Cloud Natural Language - Natural Language client libraries\nThis page shows how to get started with the Cloud Client Libraries for the Cloud Natural Language API. Client libraries make it easier to access Google Cloud APIs from a supported language. Although you can use Google Cloud APIs directly by making raw requests to the server, client libraries provide simplifications that significantly reduce the amount of code you need to write.\nRead more about the Cloud Client Libraries and the older Google API Client Libraries in [Client libraries explained](/apis/docs/client-libraries-explained) .\n**    Beta     ** This library is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA libraries are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\n[](None)\n", "content": "## Install the client library\nSee [Setting up a C++ development environment](/cpp/docs/setup) for details about this client library's requirements and install dependencies.\nIf you are using Visual Studio 2017 or higher, open nuget package manager window and type the following:\n```\nInstall-Package Google.Apis\n```\nIf you are using .NET Core command-line interface tools to install your dependencies, run the following command:\n```\ndotnet add package Google.Apis\n```\nFor more information, see [Setting Up a C# Development Environment](/dotnet/docs/setup) .```\ngo get cloud.google.com/go/language/apiv1\n```\nFor more information, see [Setting Up a Go Development Environment](/go/docs/setup) .If you are using [Maven](https://maven.apache.org/) , add the following to your `pom.xml` file. For more information about BOMs, see [The Google Cloud Platform Libraries BOM](https://cloud.google.com/java/docs/bom) .\n```\n<dependencyManagement>\u00a0 <dependencies>\u00a0 \u00a0 <dependency>\u00a0 \u00a0 \u00a0 <groupId>com.google.cloud</groupId>\u00a0 \u00a0 \u00a0 <artifactId>libraries-bom</artifactId>\u00a0 \u00a0 \u00a0 <version>26.34.0</version>\u00a0 \u00a0 \u00a0 <type>pom</type>\u00a0 \u00a0 \u00a0 <scope>import</scope>\u00a0 \u00a0 </dependency>\u00a0 </dependencies></dependencyManagement><dependencies>\u00a0 <dependency>\u00a0 \u00a0 <groupId>com.google.cloud</groupId>\u00a0 \u00a0 <artifactId>google-cloud-language</artifactId>\u00a0 </dependency>\n```\nIf you are using [Gradle](https://gradle.org/) , add the following to your dependencies:\n```\nimplementation 'com.google.cloud:google-cloud-language:2.38.0'\n```\nIf you are using [sbt](https://www.scala-sbt.org/) , add the following to your dependencies:\n```\nlibraryDependencies += \"com.google.cloud\" % \"google-cloud-language\" % \"2.38.0\"\n```\nIf you're using Visual Studio Code, IntelliJ, or Eclipse, you can add client libraries to your project using the following IDE plugins:- [Cloud Code for VS Code](/code/docs/vscode/client-libraries) \n- [Cloud Code for IntelliJ](/code/docs/intellij/client-libraries) \n- [Cloud Tools for Eclipse](/eclipse/docs/libraries) \nThe plugins provide additional functionality, such as key management for service accounts. Refer to each plugin's documentation for details.\n **Note:** Cloud Java client libraries do not currently support Android.\nFor more information, see [Setting Up a Java Development Environment](/java/docs/setup) .```\nnpm install --save @google-cloud/language\n```\nFor more information, see [Setting Up a Node.js Development Environment](/nodejs/docs/setup) .```\ncomposer require google/apiclient\n```\nFor more information, see [Using PHP on Google Cloud](/php/docs) . **Note: ** See the [migration guide](/python/docs/reference/language/latest/upgrading) for information about migrating to the latest Python client library. For more information on setting up Python development environment, such as installing and using`pip`, see the [Python Development Environment Setup Guide](/python/docs/setup) .\n```\npip install --upgrade google-cloud-language\n```\nFor more information, see [Setting Up a Python Development Environment](/python/docs/setup) .```\ngem install google-api-client\n```\nFor more information, see [Setting Up a Ruby Development Environment](/ruby/docs/setup) .\n[](None)\n## Set up authentication\n[Application Default Credentials (ADC)](/docs/authentication/application-default-credentials)\nFor production environments, the way you set up ADC depends on the service and context. For more information, see [Set up Application Default Credentials](/docs/authentication/provide-credentials-adc) .\nFor a local development environment, you can set up ADC with the credentials that are associated with your Google Account:\n- [Install and initialize the gcloud CLI](/sdk/docs/install) .When you initialize the gcloud CLI, be sure to specify a Google Cloud project in which you have permission to access the resources your application needs.\n- Create your credential file:```\ngcloud auth application-default login\n```A sign-in screen appears. After you sign in, your credentials are stored in the [local credential file used by ADC](/docs/authentication/application-default-credentials#personal) .\n[](None)\n## Use the client library\nThe following example shows how to use the client library.\n[View on GitHub](https://github.com/googleapis/google-cloud-cpp/blob/HEAD/google/cloud/language/quickstart/quickstart.cc) \n```\n#include \"google/cloud/language/v2/language_client.h\"#include <iostream>auto constexpr kText = R\"\"\"(Four score and seven years ago our fathers brought forth on thiscontinent, a new nation, conceived in Liberty, and dedicated tothe proposition that all men are created equal.)\"\"\";int main(int argc, char* argv[]) try {\u00a0 if (argc != 1) {\u00a0 \u00a0 std::cerr << \"Usage: \" << argv[0] << \"\\n\";\u00a0 \u00a0 return 1;\u00a0 }\u00a0 namespace language = ::google::cloud::language_v2;\u00a0 auto client = language::LanguageServiceClient(\u00a0 \u00a0 \u00a0 language::MakeLanguageServiceConnection());\u00a0 google::cloud::language::v2::Document document;\u00a0 document.set_type(google::cloud::language::v2::Document::PLAIN_TEXT);\u00a0 document.set_content(kText);\u00a0 document.set_language_code(\"en-US\");\u00a0 auto response = client.AnalyzeEntities(document);\u00a0 if (!response) throw std::move(response).status();\u00a0 for (auto const& entity : response->entities()) {\u00a0 \u00a0 if (entity.type() != google::cloud::language::v2::Entity::NUMBER) continue;\u00a0 \u00a0 std::cout << entity.DebugString() << \"\\n\";\u00a0 }\u00a0 return 0;} catch (google::cloud::Status const& status) {\u00a0 std::cerr << \"google::cloud::Status thrown: \" << status << \"\\n\";\u00a0 return 1;}\n``` [Open in Editor](https://ide.cloud.google.com/?git_repo=https://github.com/GoogleCloudPlatform/golang-samples&page=editor&cloudshell_workspace=language/language_quickstart&cloudshell_open_in_editor=main.go) [View on GitHub](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/language/language_quickstart/main.go) \n```\n// Sample language-quickstart uses the Google Cloud Natural API to analyze the// sentiment of \"Hello, world!\".package mainimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"log\"\u00a0 \u00a0 \u00a0 \u00a0 language \"cloud.google.com/go/language/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 \"cloud.google.com/go/language/apiv1/languagepb\")func main() {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 // Creates a client.\u00a0 \u00a0 \u00a0 \u00a0 client, err := language.NewClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatalf(\"Failed to create client: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer client.Close()\u00a0 \u00a0 \u00a0 \u00a0 // Sets the text to analyze.\u00a0 \u00a0 \u00a0 \u00a0 text := \"Hello, world!\"\u00a0 \u00a0 \u00a0 \u00a0 // Detects the sentiment of the text.\u00a0 \u00a0 \u00a0 \u00a0 sentiment, err := client.AnalyzeSentiment(ctx, &languagepb.AnalyzeSentimentRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Document: &languagepb.Document{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Source: &languagepb.Document_Content{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Content: text,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Type: languagepb.Document_PLAIN_TEXT,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 EncodingType: languagepb.EncodingType_UTF8,\u00a0 \u00a0 \u00a0 \u00a0 })\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatalf(\"Failed to analyze text: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 fmt.Printf(\"Text: %v\\n\", text)\u00a0 \u00a0 \u00a0 \u00a0 if sentiment.DocumentSentiment.Score >= 0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Println(\"Sentiment: positive\")\u00a0 \u00a0 \u00a0 \u00a0 } else {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Println(\"Sentiment: negative\")\u00a0 \u00a0 \u00a0 \u00a0 }}\n``` [Open in Editor](https://ide.cloud.google.com/?git_repo=https://github.com/GoogleCloudPlatform/java-docs-samples&page=editor&cloudshell_workspace=language/cloud-client/src/main/java/com/example/language&cloudshell_open_in_editor=QuickstartSample.java) [View on GitHub](https://github.com/GoogleCloudPlatform/java-docs-samples/blob/HEAD/language/cloud-client/src/main/java/com/example/language/QuickstartSample.java) \n```\n// Imports the Google Cloud client libraryimport com.google.cloud.language.v1.Document;import com.google.cloud.language.v1.Document.Type;import com.google.cloud.language.v1.LanguageServiceClient;import com.google.cloud.language.v1.Sentiment;public class QuickstartSample {\u00a0 public static void main(String... args) throws Exception {\u00a0 \u00a0 // Instantiates a client\u00a0 \u00a0 try (LanguageServiceClient language = LanguageServiceClient.create()) {\u00a0 \u00a0 \u00a0 // The text to analyze\u00a0 \u00a0 \u00a0 String text = \"Hello, world!\";\u00a0 \u00a0 \u00a0 Document doc = Document.newBuilder().setContent(text).setType(Type.PLAIN_TEXT).build();\u00a0 \u00a0 \u00a0 // Detects the sentiment of the text\u00a0 \u00a0 \u00a0 Sentiment sentiment = language.analyzeSentiment(doc).getDocumentSentiment();\u00a0 \u00a0 \u00a0 System.out.printf(\"Text: %s%n\", text);\u00a0 \u00a0 \u00a0 System.out.printf(\"Sentiment: %s, %s%n\", sentiment.getScore(), sentiment.getMagnitude());\u00a0 \u00a0 }\u00a0 }}\n``` [Open in Editor](https://ide.cloud.google.com/?git_repo=https://github.com/GoogleCloudPlatform/nodejs-docs-samples&page=editor&cloudshell_workspace=cloud-language&cloudshell_open_in_editor=quickstart.js) [View on GitHub](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/cloud-language/quickstart.js) \n```\nasync function quickstart() {\u00a0 // Imports the Google Cloud client library\u00a0 const language = require('@google-cloud/language');\u00a0 // Instantiates a client\u00a0 const client = new language.LanguageServiceClient();\u00a0 // The text to analyze\u00a0 const text = 'Hello, world!';\u00a0 const document = {\u00a0 \u00a0 content: text,\u00a0 \u00a0 type: 'PLAIN_TEXT',\u00a0 };\u00a0 // Detects the sentiment of the text\u00a0 const [result] = await client.analyzeSentiment({document: document});\u00a0 const sentiment = result.documentSentiment;\u00a0 console.log(`Text: ${text}`);\u00a0 console.log(`Sentiment score: ${sentiment.score}`);\u00a0 console.log(`Sentiment magnitude: ${sentiment.magnitude}`);}\n``` [Open in Editor](https://ide.cloud.google.com/?git_repo=https://github.com/GoogleCloudPlatform/python-docs-samples&page=editor&cloudshell_workspace=language/snippets/cloud-client/v1&cloudshell_open_in_editor=quickstart.py) [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/language/snippets/cloud-client/v1/quickstart.py) \n```\n# Imports the Google Cloud client libraryfrom google.cloud import language_v1# Instantiates a clientclient = language_v1.LanguageServiceClient()# The text to analyzetext = \"Hello, world!\"document = language_v1.types.Document(\u00a0 \u00a0 content=text, type_=language_v1.types.Document.Type.PLAIN_TEXT)# Detects the sentiment of the textsentiment = client.analyze_sentiment(\u00a0 \u00a0 request={\"document\": document}).document_sentimentprint(f\"Text: {text}\")print(f\"Sentiment: {sentiment.score}, {sentiment.magnitude}\")\n```\n[](None)\n## Additional resources\nThe following list contains links to more resources related to the client library for C++:- [API reference](/cpp/docs/reference/language/latest) \n- [Client libraries best practices](/apis/docs/client-libraries-best-practices) \n- [Issue tracker](https://github.com/googleapis/google-cloud-cpp/issues) \n- [google-cloud-nl on Stack Overflow](https://stackoverflow.com/search?q=%5Bgoogle-cloud-nl%5D%5Bc%2B%2B%5D) \n- [Source code](https://github.com/googleapis/google-cloud-cpp) \nThe following list contains links to more resources related to the client library for C#:- [API reference](https://developers.google.com/api-client-library/dotnet) \n- [Client libraries best practices](/apis/docs/client-libraries-best-practices) \n- [Issue tracker](https://github.com/google/google-api-dotnet-client/issues) \n- [google-cloud-nl on Stack Overflow](https://stackoverflow.com/search?q=%5Bgoogle-cloud-nl%5D+%5Bc%23%5D) \n- [Source code](https://github.com/google/google-api-dotnet-client) \nThe following list contains links to more resources related to the client library for Go:- [API reference](https://godoc.org/cloud.google.com/go/language/apiv1) \n- [Client libraries best practices](/apis/docs/client-libraries-best-practices) \n- [Issue tracker](https://github.com/GoogleCloudPlatform/google-cloud-go/issues) \n- [google-cloud-nl on Stack Overflow](https://stackoverflow.com/search?q=%5Bgoogle-cloud-nl%5D+%5Bgo%5D) \n- [Source code](https://github.com/GoogleCloudPlatform/google-cloud-go) The following list contains links to more resources related to the client library for Java:- [API reference](https://cloud.google.com/java/docs/reference) \n- [Client libraries best practices](/apis/docs/client-libraries-best-practices) \n- [Issue tracker](https://github.com/googleapis/google-cloud-java/issues) \n- [google-cloud-nl on Stack Overflow](https://stackoverflow.com/search?q=%5Bgoogle-cloud-nl%5D+%5Bjava%5D) \n- [Source code](https://github.com/googleapis/google-cloud-java) The following list contains links to more resources related to the client library for Node.js:- [API reference](/nodejs/docs/reference/language/latest) \n- [Client libraries best practices](/apis/docs/client-libraries-best-practices) \n- [Issue tracker](https://github.com/googleapis/nodejs-language/issues) \n- [google-cloud-nl on Stack Overflow](https://stackoverflow.com/search?q=%5Bgoogle-cloud-nl%5D+%5Bnode.js%5D) \n- [Source code](https://github.com/googleapis/nodejs-language) The following list contains links to more resources related to the client library for PHP:- [API reference](https://developers.google.com/api-client-library/php/) \n- [Client libraries best practices](/apis/docs/client-libraries-best-practices) \n- [Issue tracker](https://github.com/google/google-api-php-client/issues) \n- [google-cloud-nl on Stack Overflow](https://stackoverflow.com/search?q=%5Bgoogle-cloud-nl%5D+%5Bphp%5D) \n- [Source code](https://github.com/google/google-api-php-client) \nThe following list contains links to more resources related to the client library for Python:- [API reference](/python/docs/reference/language/latest) \n- [Client libraries best practices](/apis/docs/client-libraries-best-practices) \n- [Issue tracker](https://github.com/GoogleCloudPlatform/google-cloud-python/issues) \n- [google-cloud-nl on Stack Overflow](https://stackoverflow.com/search?q=%5Bgoogle-cloud-nl%5D+%5Bpython%5D) \n- [Source code](https://github.com/GoogleCloudPlatform/google-cloud-python) The following list contains links to more resources related to the client library for Ruby:- [API reference](https://developers.google.com/api-client-library/ruby/apis/) \n- [Client libraries best practices](/apis/docs/client-libraries-best-practices) \n- [Issue tracker](https://github.com/google/google-api-ruby-client/issues) \n- [google-cloud-nl on Stack Overflow](https://stackoverflow.com/search?q=%5Bgoogle-cloud-nl%5D+%5Bruby%5D) \n- [Source code](https://github.com/google/google-api-ruby-client)", "guide": "Cloud Natural Language"}