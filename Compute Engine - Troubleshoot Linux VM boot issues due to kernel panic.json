{"title": "Compute Engine - Troubleshoot Linux VM boot issues due to kernel panic", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Troubleshoot Linux VM boot issues due to kernel panic\n", "content": "## Before you begin\n- If you want to log serial port output in Cloud Logging, familiarize yourself with [Cloud Logging](/logging) .\n- If you haven't already, set up authentication. [Authentication](/compute/docs/authentication) is the process by which your identity is verified for access to Google Cloud services and APIs. To run code or samples from a local development environment, you can authenticate to Compute Engine as follows.Select the tab for how you plan to use the samples on this page:\nWhen you use the Google Cloud console to access Google Cloud services and   APIs, you don't need to set up authentication.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- [ Set a default region and zone](/compute/docs/gcloud-compute#set_default_zone_and_region_in_your_local_client) .\nTo use the REST API samples on this page in a local development environment, you use the credentials you provide to the gcloud CLI.- [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:\n- ```\ngcloud init\n```## Kernel panic\nA kernel panic can happen when the kernel is unable to load properly `initramfs` modules, which are required for the guest OS to boot.\nAnother form of kernel panic can occur in a situation where the kernel doesn't know how to handle a certain request and protects itself by stopping. Kernel panic can happen on a Compute Engine VM running RedHat, SUSE, CentOS, or Ubuntu.\n### Common error messages\nBelow are some of the most common kernel panic events for reference:\n```\nKernel panic - not syncing: hung_task: blocked tasks\n```\n```\nKernel Panic - not syncing: VFS: Unable to mount root fs on unknown-block(0,0)\n```\n```\nKernel panic - not syncing: NMI: Not continuing\n```\n```\nKernel panic - not syncing: out of memory. panic_on_oom is selected\n```\n```\nKernel panic - not syncing: Fatal Machine check \n```\n### Common causes\nThe kernel panic error can occur due to multiple reasons. Some of the common reasons are:\n- The entry related to the`initramfs`file that corresponds to the kernel doesn't exist in the`grub.cfg`file.\n- The`initramfs`file doesn't get generated in the`/boot`directory during kernel installation.\n- The`initramfs`file gets only partially generated or is corrupted.\n### Symptoms\nWhen you experience kernel panic on a VM instance, a common symptom is that the kernel does not allow you to connect to the VM, even when using the serial console.\nYou should check the serial console logs to identify the kernel that was loaded by the guest OS, for example:\n```\n[ 0.000000] Initializing cgroup subsys cpu\n[ 0.000000] Initializing cgroup subsys cpuacct\n[ 0.000000] Linux version 3.10.0-1160.95.1.el7.x86_64 (mockbuild@x86-vm-42.build.eng.bos.redhat.com) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) ) #1 SMP Thu Aug 10 10:46:21 EDT 2023\n```\nThe following example shows a kernel panic event due to `initramfs` issues:\n```\n[ 1.520840] No filesystem could mount root, tried:\n[ 1.520840]\n[ 1.521964] Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block(0,0)\n[ 1.523495] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 3.10.0-1160.95.1.el7.x86_64 #1\n[ 1.524932] Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/11/2022\n[ 1.526901] Call Trace:\n[ 1.527421] dump_stack+0x41/0x60\n[ 1.527978] panic+0xe7/0x2ac\n[ 1.528578] mount_block_root+0x2be/0x2e6\n[ 1.529693] ? do_early_param+0x95/0x95\n[ 1.530441] prepare_namespace+0x135/0x16b\n[ 1.531237] kernel_init_freeable+0x203/0x22d\n[ 1.532081] ? rest_init+0xaa/0xaa\n[ 1.532808] kernel_init+0xa/0x103\n[ 1.533395] ret_from_fork+0x35/0x40\n[ 1.535229] Kernel Offset: 0x23a00000 from 0xffffffff81000000 \n```\n## Resolve the kernel panic error\nTo resolve the kernel panic error, perform the following steps:\n- Connect to the [serial console](/compute/docs/troubleshooting/troubleshooting-using-serial-console#connectserialconsole) and log in to the VM from the Google Cloud console.\n- Click **Reset** for VM in the Google Cloud console.\n- After the GRUB splash screen appears, select the previously working kernel or rescue kernel, and then boot the system. This causes the VM to start with the selected kernel. **Note:** Booting the VM by selecting the previous kernel from the GRUB splash screen doesn't make changes to GRUB configuration file, so this is not a persistent change.\n- When the VM is accessible, you can initiate an SSH connection to the VM.\n- Identify the cause of the issue and take further action accordingly.For example, if the `initramfs` file is missing or corrupted, complete the following steps:- Generate the `initramfs` file corresponding to original kernel by using the `dracut` command, for example:```\ndracut -f /boot/initramfs-3.10.0-1160.95.1.el7.x86_64.img 3.10.0-1160.95.1.el7.x86_64\n```\n- Update the `grub2.cfg` file using the `grub2-mkconfig` command, for example:```\ngrub2-mkconfig -o /boot/grub2/grub.cfg\n```\n- After the `initramfs` file is generated, you can restart the VM without any errors.", "guide": "Compute Engine"}