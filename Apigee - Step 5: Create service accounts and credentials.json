{"title": "Apigee - Step 5: Create service accounts and credentials", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Step 5: Create service accounts and credentials\nYou are currently viewing version 1.4 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nThis step explains how to create the Google Cloud service accounts and TLS credentials that are required for Apigee hybrid to operate.\n", "content": "## Create the service accounts\nApigee hybrid uses Google Cloud [ service accounts](https://cloud.google.com/iam/docs/service-accounts) to allow hybrid components to communicate by making authorized API calls.\nIn this step, you use an Apigee hybrid command-line tool to create a set of service accounts and download the service account private key files.\nTo learn more about service accounts and read the full list of service accounts recommended for  production environments, see the following:\n- [About service accounts](/apigee/docs/hybrid/v1.4/sa-about) \n- [Service accounts and roles used by hybrid components](/apigee/docs/hybrid/v1.4/sa-about#recommended-sas) \nApigee provides a tool, `create-service-account` , that creates the service accounts, assigns the roles to the service accounts, and creates and downloads the key files for the service account in a single command. To learn about the related Google Cloud concepts, see [Creating and managing service accounts](https://cloud.google.com/iam/docs/creating-managing-service-accounts) and [Creating and managing service account keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys) .\n- Be sure that you are in the`` `/hybrid-files`directory you  configured in [Set up the project directory structure](#setup-directory) .\n- Execute the following command from inside the`hybrid-files`directory. This command  creates a service account for the`apigee-metrics`component and places  the downloaded key in the`./service-accounts`directory.```\n./tools/create-service-account apigee-metrics ./service-accounts\n```When you see the following prompt, enter :```\n[INFO]: gcloud configured project ID is project_id.\n Press: y to proceed with creating service account in project: project_id\n Press: n to abort.\n```If this is the first time an SA with the exact name assigned by the tool was created, then  the tool just creates it, and you do not have to do anything further.If, however, you see the following message and prompt, enter to generate  new keys:```\n[INFO]: Service account apigee-metrics@project_id.iam.gserviceaccount.com already exists.\n...\n [INFO]: The service account might have keys associated with it. It is recommended to use existing keys.\n Press: y to generate new keys.(this does not de-activate existing keys)\n Press: n to skip generating new keys.\n```\n- Now, create the rest of the service accounts using the following commands. The`create-service-account`command  is interactive and requires a response for each account.```\n./tools/create-service-account apigee-synchronizer ./service-accounts\n``````\n./tools/create-service-account apigee-udca ./service-accounts\n``````\n./tools/create-service-account apigee-mart ./service-accounts\n``````\n./tools/create-service-account apigee-cassandra ./service-accounts\n``````\n./tools/create-service-account apigee-logger ./service-accounts\n``````\n./tools/create-service-account apigee-watcher ./service-accounts\n``````\n./tools/create-service-account apigee-distributed-trace ./service-accounts\n``` **Note:** The Cloud Pub/Sub API must be enabled in the Google Cloud project that  owns the service account for Synchronizer. See [Enable APIs](/apigee/docs/hybrid/v1.4/precog-enableapi) .\n- Verify that the service account keys were created using the following command. You are responsible for storing these  private keys securely. The key filenames are prefixed with the name of your Google Cloud project.```\nls ./service-accounts\n```The result should look something like the following:```\ngcp-project-id-apigee-cassandra.json\ngcp-project-id-apigee-distributed-trace.json\ngcp-project-id-apigee-logger.json\ngcp-project-id-apigee-mart.json\ngcp-project-id-apigee-metrics.json\ngcp-project-id-apigee-synchronizer.json\ngcp-project-id-apigee-udca.json\ngcp-project-id-apigee-watcher.json\n```\n**Tip:** Apigee hybrid includes a validator that checks your service accounts' key files and permissions when [apigeectl](/apigee/docs/hybrid/v1.4/cli-reference) applies the Apigee hybrid runtime components to your cluster. This validation is enabled by default. For more information, see [Service account validation](/apigee/docs/hybrid/v1.4/sa-validation) .\n## \n Create TLS certificates\nYou are required to provide TLS certificates for the runtime ingress gateway in your Apigee hybrid configuration. For the purpose of this quickstart (a non-production trial installation), the runtime gateway can accept self-signed credentials. In the following steps, [openssl](https://www.openssl.org/) is used to generate the self-signed credentials.\n**Note:** In a production environment, you will need to use signed certificates. You can either use either a certificate and key pair or a Kubernetes secret. For an example on how to obtain a TLS certificate from thecertificate authority (CA), see [Obtain TLS credentials: An example](/apigee/docs/hybrid/v1.4/lets-encrypt) .\nIn this step, you will create the TLS credential files and add them to the `` `/hybrid-files/certs` directory. In [Step 6: Configure the cluster](/apigee/docs/hybrid/v1.4/2-6-install-configure-cluster) , you will add the file paths to the cluster configuration file.\n- Be sure that you are in the`` `/hybrid-files`directory  you configured in [Set up the project directory structure](#setup-directory) .\n- Make sure to save a domain name to the **DOMAIN** environment variable using the following command:```\necho $DOMAIN\n```\n- Execute the following command from inside the`hybrid-files`directory:```\nopenssl req -nodes -new -x509 -keyout ./certs/keystore.key -out \\\n ./certs/keystore.pem -subj '/CN='$DOMAIN'' -days 3650\n```Where **DOMAIN** is the same one you used for your environment in [Part 1, Step 5: Create an  environment group](/apigee/docs/hybrid/v1.4/precog-add-environment) .This command creates a self-signed certificate/key pair that you can use for the quickstart  installation.\n- Check to make sure the files are in the`./certs`directory using the following command:```\nls ./certs\n keystore.pem\n keystore.key\n```Where `keystore.pem` is the self-signed TLS certificate file and `keystore.key` is the key file.\nYou now have the service accounts and credentials needed to manage Apigee hybrid in your Kubernetes cluster. Next, you will create a file that is used by Kubernetes to deploy the hybrid runtime components to the cluster.\n## Next step\nstepper_buttons is defined in localvars Iterate over all the buttons in the data dictionary If the button's step matches the current step in the process, make the button disabled [1](/apigee/docs/hybrid/v1.4/2-1-install-create-cluster) If the button's step matches the current step in the process, make the button disabled [2](/apigee/docs/hybrid/v1.4/2-2-install-cert-manager) If the button's step matches the current step in the process, make the button disabled [3](/apigee/docs/hybrid/v1.4/2-3-install-asm) If the button's step matches the current step in the process, make the button disabled [4](/apigee/docs/hybrid/v1.4/2-4-install-apigeectl) If the button's step matches the current step in the process, make the button disabled If the button's step matches the next step [5](/apigee/docs/hybrid/v1.4/2-5-install-service-accounts) If the button's step matches the current step in the process, make the button disabled In all other cases (previous buttons or future buttons (after the next one), make them links [(NEXT) Step 6: Configure the hybrid runtime](/apigee/docs/hybrid/v1.4/2-6-install-configure-cluster) If the button's step matches the current step in the process, make the button disabled [7](/apigee/docs/hybrid/v1.4/2-7-install-hybrid-runtime)", "guide": "Apigee"}