{"title": "Apigee - Salesforce trigger", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Salesforce trigger\n**Announcement:** Application Integration is now available for your Google Cloud project. You can now use both Apigee Integration and Application Integration within the same Google Cloud project. [Learn more](/apigee/docs/api-platform/integration/using-application-integration)\nThe **Salesforce trigger** lets you listen to either [Change Data Capture (CDC)](https://developer.salesforce.com/docs/atlas.en-us.change_data_capture.meta/change_data_capture/cdc_intro.htm) or [Enterprise Messaging Platform](https://developer.salesforce.com/docs/atlas.en-us.platform_events.meta/platform_events/platform_events_intro_emp.htm) events. With this trigger, you can start your integration based on any of the CDC events (Create, Update, Delete, or Undelete) or the platform events in your Salesforce instance.\n", "content": "## Before you begin\nThis section outlines the steps required to connect and configure a Salesforce instance to use [Change Data Capture (CDC)](https://developer.salesforce.com/docs/atlas.en-us.change_data_capture.meta/change_data_capture/cdc_intro.htm) or [ Platform](https://developer.salesforce.com/docs/atlas.en-us.platform_events.meta/platform_events/platform_events_intro.htm) events to stream changes to your Apigee Integration in a pub/sub manner. The following steps must be completed before configuring any Salesforce-related task or trigger in Apigee:\n- [Set up an integration user](#set-up-an-integration-user) \n- [Configure a permission set](#configure-a-permission-set) \n- [Set up a security token](#set-up-a-security-token) \n- [Create a connected app](#create-a-connected-app) \n**Note** : To complete these steps, system administration access to your Salesforce instance is required. If you do not have admin access, share these instructions with your Salesforce Administrator.This tutorial provides in-depth instruction, but we recommend that you have some understanding of  Salesforce configuration options. Salesforce provides detailed [Developer Documentation](https://developer.salesforce.com/docs/) to help you get started.\n### Set up an integration user\n**Note** : If you already have an integration user and you know the password, you can skip to the next step. If you need to reset the password, see Step 6 below.\nSet up an integration user with the following steps:\n- Log in to your Salesforce instance with your`sysadmin`credentials.\n- Click the **Gear** icon and then select **Setup** , as shown in the image below:\n- Click **Users > Users** from the **Administration menu** .\n- From the **Users** pane, select the **New User** button.\n- In the **User Edit** dialog, fill in the following details:- **First Name** : First name of the integration user.\n- **Last Name** : Last name of the integration user.\n- **Email Address** : Email for the integration user. Ideally, this should be a group email.\n- **Username** : User name that complies with any org-level naming conventions.If you are creating a new integration user, use the following format: `` `.` `` `.` `` If you have an existing integration user, confirm that the username is entered here.\n- **Role** : Select from the dropdown of options.\n- **User License** : Enter`Salesforce`or, if using a trial org, enter`Salesforce Platform`.\n- **Profile** : Select the permissions profile for integration users from the dropdown.We recommend assigning a profile with , to protect your integration user  Salesforce access from unauthorized usage.\n- Click **Save** .- To update the password for the new integration user, follow these steps:- Click the **Reset password(s)** button on the **Users** pane. A password reset email is sent to the email address associated with the user. **Note** : Confirm that you have access to the email account associated with the integration user before triggering the  reset password flow. In addition, **if you have if you have SSO enabled** for this user, you will not be able to reset the password.  To enable the reset option, go to **Profile > System Permissions** and uncheck the option for **SSO Login Enabled.** \n- Follow the reset password flow from the email account. **Take note of the new password** , as you will need it for a later step.\n### Configure a Permission Set\nIf you have already have access to a Permission Set that is appropriate for an integration user, you can skip this step and proceed to [Set up a security token](#set-up-a-security-token) . Otherwise, follow these steps to configure a Permission Set for the integration user and the Salesforce object.\nTo configure a Permission Set for the integration user:\n- From the **Setup** menu, click **Users > Permission Sets** .\n- In the **Permission Sets** pane, click the **New** button.\n- In the **Permission Sets** dialog, enter the following details:- **Label** : Enter a name for the Permission Set.\n- **License** : Select **Salesforce** from the **License** dropdown.\n- Click **Save** .- From the list of **System** setting options, scroll down and select **System Permissions** \n- On the **System Permissions** page, click the **Edit** button.\n- Scroll down the list of available permissions and select the **API Enabled** checkbox.The **Api Only User** permission is also required, but cannot be enabled until the required security token  is reset. This permission is added in a later step.\n- Scroll and select **Modify All Data ** and **View All Data** , if applicable. These permissions are not required, but can be helpful if you want to automatically give the integration user access to new objects. We recommend only enabling these permissions for testing in a sandbox.\n- Scroll to the top of the permissions list and click **Save** .\n- Confirm your settings and click **Save** .\nTo configure the Permission Set for the Salesforce object:\n- Click **Permission Set Overview** to return to the main **Permissions Set** configuration page.\n- Select **Object Settings** from the **Apps** section of the **Permissions Set** pane.\n- Scroll down and select the Salesforce object(s) requiring a Permission Set.  This example uses the **Opportunity** object. **NOTE:** CDC only supports a subset of standard Salesforce objects.  To learn more, see: [Change Event Object Support](https://developer.salesforce.com/docs/atlas.en-us.change_data_capture.meta/change_data_capture/cdc_object_support.htm) .\n- Click the **Edit** button on the object detail page.\n- Select the checkboxes for record types If you know which record  types are required select those. If you don't know which record types are required, select them all.\n- Select the checkboxes for the **Object Permissions** to enable. **Read** and **View All** are recommended.\n- Grant **Read Access** or **Edit Access** for each object field by selecting the corresponding checkbox. **Note** : Write access is not required for use with CDC.\n- Scroll to the top of the page and click **Save** .\n### Set up a Security Token\nIf you have created a security token for the integration user previously, and reset the password, an email with a new security token is sent automatically. You can use the new token and skip to [Create a connected app](#create-a-connected-app) .\nOtherwise, use the following steps to reset the security token for the integration user:\n- Log in to Salesforce as the integration user, using the username and password set in a previous step.\n- From the main menu, click the profile picture, then click **Settings** .\n- From the **Settings** menu, select **Reset My Security Token** to open the **Reset Security Token** pane.\n- Click the **Reset Security Token** button.\n- Check the email account associated with the integration user for an email containing the new security token. **Take note of the new security token** , as you will need it for a later step.\n- Enable the **Api User Only** permission in **System Permissions** for your permission set, as described in [Configure a permission set](#configure-a-permission-set) above.\n### Create a Connected App\nSystem administration permission is required to set up a Connected App. If you are currently logged in as the integration users, make sure to log out and then log in again as `sysadmin` .\nFollow these steps to set up a Connected App:\n- Click the **Gear** icon and then select **Setup** .\n- From the **Setup** menu, search for and select **App Manager** , as shown in the image below:\n- Click **New Connected App** .\n- In the configuration pane, provide the following details:- **Connected App Name** : Enter a name for your connected app.\n- **API Name** : Enter the name of the API.\n- **Contact email** : Enter an email for your connected app, ideally a group email alias.\n- **API (Enable OAuth Settings)** : Select **Enable OAuth Settings** . Then, set the following:- **Callback URL** : This is only required if you want an external service to perform validation.  If you do choose to provide a callback, make sure to include the`http(s)://`prefix.\n- **Selected OAuth Scopes** : Select:- **Access and manage your data (api) ** \n- **Perform requests on your behalf at any time (refresh_token, offline_access)** - Click **Save** . **Note** : Your newly created connected app will not work for the initial 2-10 minutes after creation.\n- Click **Continue** .\n- A **consumer secret** and a **consumer key** are displayed on the next page. **Note these values** ,  as they will be used when setting up the Auth Module for Apigee.\n- Click the **Manage** button.\n- Once on the **Connected App Detail** page, click the **Edit Policies** button.\n- In the **OAuth Policies** section, change the value in the **Permitted Users** dropdown  to **Admin approved users are pre-authorized** .\n- Click **Save** .\n- Scroll to the **Profiles** and **Permission Sets** section of the page to select the profile or Permission Set you want to apply to the connected app.You can select either a profile or a Permission Set, or a mixture of both, which will allow users  with either the correct profile or Permission Set to access the connected app.\n- Select the desired profile or Permission Set.\n- Click **Save** .## Prerequisite steps to use CDC events\nBefore configuring your Apigee trigger to use CDC events, make sure to add a configured object to CDC in Salesforce:\n- Log in to Salesforce as a`sysadmin`.\n- Click the **Gear** icon, then click **Setup** .\n- Using the left nav, search for and select **Change Data Capture** .\n- On the **Change Data Capture** setup page, locate the Salesforce object you'd like to use in the **Available Entities** column and drag it to the **Selected Entities** column. **Note** : A maximum of 5 objects per Salesforce license can be selected for CDC.  Contact your Salesforce representative for more information and licensing options.\n- Click **Save** .## Prerequisite steps to use Platform events\nBefore configuring your Apigee trigger to use Platform events, complete the following steps in Salesforce:\n- Create a Platform Event\n- Update permissions for the Platform Event\n### \n Create a Platform event\nTo create a Platform event, perform the following steps:\n- Log in to your Salesforce instance with your`sysadmin`credentials.\n- Click the **Gear** icon and then select **Setup** .\n- In the navigation pane, search for **Platform** and then click **Platform events** .\n- In the **Platform events** page, click **New Platform Event** and set the following properties:\n- **Label** \n- **Plural Label** \n- **Object Name** (This field is automatically populated)\n- **Publish Behavior** Select any one of the following values:- **Publish After Commit** : Reverts streaming of events if a condition isn't met.\n- **Publish Immediately** : Instantly triggers the event, without waiting for any validation.\nFor more information about the publishing behavior, see [  Platform events and Transactions](https://developer.salesforce.com/docs/atlas.en-us.platform_events.meta/platform_events/platform_events_intro_emp.htm) .\n- **Deployment Status** (Optional): Select **Deployed** if the event is ready for deployment.\nClick **Save** .\nCreate custom fields.  To create the custom fields, click **New** in the **Custom Fields and Relationships section** and select the type of custom field. You can create as many custom fields as required.\nAfter creating the custom fields, in the **Platform events** page, notice the value of the **API Name** field. The object name ends with **_e** , which means that the object is a Platform Event object. For a CDC object, the object name ends with **_c** .\n### Update permissions for the Platform Event\nThe permissions set must be updated to let the integration user access the newly created Platform Event.\nTo update the permissions, perform the following steps:\n- From the **Setup** menu, click **Users > Permission Sets** .\n- In the **Permission Sets** page, click the previously created permission.\n- Click **Object Settings** >.\n- In the **Object Permissions** section, enable the **Read** and **Create** permissions.\n- Click **Save** .## Add a Salesforce trigger\n**Salesforce trigger**\n- In the [Apigee UI](https://apigee.google.com) , select your.\n- Click **Develop > Integrations** .\n- Select an existing integration or create a new integration by clicking **Create Integration** .If you are creating a new integration:- Enter a name and description in the **Create Integration** dialog.\n- Select a **Region** for the integration from the list of supported regions.\n- Click **Create** .\nThis opens the integration in the .\n- In thenavigation bar, click **+Add a task/trigger > Tasks** to view the list of available tasks.\n- Select an existing integration or click **Create integration** .\n- In the integration editor, click **+ Add a task/trigger > Triggers** to view the available triggers\n- Click and place the **Salesforce trigger** element to the designer.## Configure the Salesforce trigger\nTo configure the Salesforce trigger, perform the following steps:\n- Click **Salesforce trigger** in the integration editor to view the trigger configuration pane.\n- Select a Salesforce instance from the **Salesforce instance configuration** drop-down.If you do not have a Salesforce instance, create a new instance. For more information, see [Create a new Salesforce instance](#sfdcinstance) .\n- Select a Salesforce channel from the **Salesforce channel configuration** drop-down.If you do not have a Salesforce channel, create a new channel. For more information, see [Create a new Salesforce channel](#sfdcchannel) .\n- If you have chosen the event type as **CDC** , select any one of the following operations:- `Create`\n- `Update`\n- `Delete`\n- `Undelete`\nThe trigger runs only if the specific operation or gap operation occurs.The **Salesforce trigger** can be configured for only one operation. If you want to run the trigger for multiple operations, create a **Salesforce trigger** for each operation.\n### Create a new Salesforce instance\nTo configure a new Salesforce instance, perform the following steps:\n- In the editable properties of the trigger, click **Select a Salesforce\n instance configuration** > **+ Add new Salesforce instance configuration** .\n- In the **Add Salesforce instance configuration** dialog, set the following properties:\n- **Salesforce instance connection name** : Enter a name for the instance.After configuration, you will use this name to refer to the Salesforce instance.\n- **Salesforce domain** : Enter a service authority for the instance. You can find the domain in your Salesforce account. For example,`instance.my.salesforce.com`. The following image shows the Salesforce domain: \n- **Authentication profile** : Select an authentication profile.If you don't have an authentication profile, create a new profile. For information, see [Create a new authentication profile](/apigee/docs/api-platform/integration/configuring-auth-profile#create-a-new-authentication-profile) .\n- **Salesforce Organization ID** : Enter the org id of the salesforce instance.  You can get the ID from your Salesforce administrator.\n- Click **Add** .\n### Create a new Salesforce channel\nTo configure a new Salesforce channel, perform the following steps:\n- In the editable properties of the trigger, click **Select a Salesforce\n channel configuration** > **+ Add new Salesforce channel configuration** .\n- In the **Add Salesforce channel configuration** dialog, enter the object name  for the **Salesforce object name** property.If unsure of the object name, contact your Salesforce administrator.\n- Click **Add** .## Output variables\nThe response from the **Salesforce trigger** is available to you in the output variables.\nThe output variables for a **CDC** event are described in the following table:\n| 0       | 1   | 2                              |\n|:-----------------------------|:----------|:-----------------------------------------------------------------------------------------------------------------------|\n| Variable      | Data type | Description                           |\n| SalesforceTriggerCdcPayload | JSON  | Details of the change event.                       |\n| SalesforceTriggerEvent  | JSON  | Contains replayId of the event.                      |\n| SalesforceTriggerSchema  | String | Trigger schema.                          |\n| SalesforceTriggerCdcSnapshot | JSON  | Snapshot of the object after the change event. This field is available only for Update and Create operations.   |\n| SalesforceTriggerCdcRecordId | String | Contains the recordId of the updated or added record. The recordId is an identifier of the changed Salesforce object. |\nThe output variables for a **Platform** event are described in the following table:\n| 0       | 1   | 2        |\n|:---------------------------|:----------|:--------------------------------|\n| Variable     | Data type | Description      |\n| SalesforceTriggerPEPayload | JSON  | Details of the change event. |\n| SalesforceTriggerEvent  | JSON  | Contains replayId of the event. |\n| SalesforceTriggerSchema | String | Trigger schema.     |\n`CdcTriggerPayload`\n## Best practices\nUsing the **Salesforce trigger** is recommended in cases where you want to use Salesforce notifications to trigger integrations without writing custom code to publish Salesforce events. Any small field change in your Salesforce case will trigger a Salesforce CDC event, and thus trigger an integration, which can result in significant integration . Consider using [Change event filters](https://developer.salesforce.com/docs/atlas.en-us.change_data_capture.meta/change_data_capture/cdc_filters.htm) to filter only the required CDC events that trigger the integration. Using [Change event filters](https://developer.salesforce.com/docs/atlas.en-us.change_data_capture.meta/change_data_capture/cdc_filters.htm) can help reduce integration noise and ensure compliance with your license limitations.\nSimilarly, we recommend unpublishing any integration using this trigger when the integration is no longer needed. Until it is unpublished or deleted, the integration will continue to listen for Salesforce CDC and Platform events.\n## Considerations\nBefore using the **Salesforce trigger** to run your integration, consider the following:\n- Salesforce typically sends aof 100k CDC and Platform events per day. Speak with your Salesforce  administrator to understand your license restrictions before choosing CDC events for your integration trigger. **Note** : Multiple integrations using the same Salesforce Channel will not  double your Salesforce quota consumption.\n- If you are planning bulk uploads to Salesforce, consider pausing CDC to reduce integration noise and ensure compliance  with your license limitations.\n- The maximum event message size that Salesforce can publish is 1 MB. For more information,  see [Change Data Capture Allocations](https://developer.salesforce.com/docs/atlas.en-us.change_data_capture.meta/change_data_capture/cdc_allocations.htm) .\n- Apigee does not support Salesforce CDC events for the following minicluster regions:- `asia-northeast1`\n- `asia-south1`\n- `australia-southeast1`\n- `europe-west2`\n- `europe-west3`\n- `europe-west6`\n- `northamerica-northeast1`\n- `southamerica-east1`\n- `us-east4`\n- `us-west2`", "guide": "Apigee"}