{"title": "Apigee - While Loop task", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - While Loop task\n**Announcement:** Application Integration is now available for your Google Cloud project. You can now use both Apigee Integration and Application Integration within the same Google Cloud project. [Learn more](/apigee/docs/api-platform/integration/using-application-integration)\nThe **While Loop** task lets you make repeated calls to a sub-integration from your current (main) integration until a specified condition is met.\nThe **API Trigger ID** and the **Integration name** identifies the sub-integration you want to run.\nThe task also lets you collect the response from each sub-integration run and store the value in your current integration for use in downstream tasks. You can use any of the following approach to collect the responses:\n- Collate the response of each run in an array variable, where each element of the array has the response from one particular run. To collate the responses, configure the`Collect values from sub-integration output(s)`property.\n- Aggregate the responses of all the runs in a single variable. To aggregate the responses, configure the`Override values from sub-integration output(s)`property.\n**Note** :- The **While Loop** task can run a maximum of 8000 iterations. This constraint holds good even if the configured condition results in an infinte loop.\n- The cumulative size of the data collected from each sub-integration run cannot exceed`50 MB`. If the size exceeds`50 MB`, the integration fails, and  the downstream tasks are not run.", "content": "## Before you begin\n- Ensure that you have [attached a user-managed service account](/application-integration/docs/access-control#add-service-account) to your integration. If your integration does not have user-managed service account configured, then by default the [default service account](/application-integration/docs/access-control#default-service-account) (`service-` `` `@gcp-sa-apigee.iam.gserviceaccount.com`) is used for authentication.\n- Ensure that your service account has the **Application Integration Invoker** IAM role. For information about granting roles to a service account, see [Manage access to service accounts](/iam/docs/manage-access-service-accounts) .## Configuration properties\nThe following table describes the configuration properties of the **While Loop** task.\n| 0            | 1   | 2                                                                                                                                                                |\n|:-----------------------------------------------|:-----------||\n| Property          | Data type | Description                                                                                                                                                              |\n| API Trigger ID         | String  | Trigger ID of the sub-integration to run. This value is available in the Trigger ID field of the API Trigger in the sub-integration.                                                                                                                               |\n| Integration name        | String  | Name of the sub-integration to run.                                                                                                                                                        |\n| While loop condition       | nan  | Condition to terminate the loop. The sub-integration runs till the condition is met.                                                                                                                                            |\n| Map to sub-integration input(s)    | nan  | Values to pass from the current integration to the sub-integration. The values of this property are in the form of key-value pairs, where the key is a variable in the current integration, and the value is the corresponding input variable in the sub-integration. For example, suppose your main integration has the productID variable, which you want to map to the subIntProductID sub-integration variable; you would select productID from the Integration variable to map from drop-down and enter subIntProductID in the Sub-Integration input to map to field.                    |\n| Collect values from sub-integration output(s) | nan  | Collate the results of the sub-integration runs. Every time the sub-integration runs, you can store the output of the sub-integration in an array variable of the current integration. Enter the sub-integration's output variable in the Sub-Integration output to collect from field and select the array variable in current integration from the Integration variable to collect into drop-down. Each element of the array has the response from a particular sub-integration run. For example, if the array variable is resultsArray, resultsArray[0] has the response from the first run and resultsArray[1] has the response from the second run. |\n| Override values from sub-integration output(s) | nan  | Read the output variable of a sub-integration run and store it in a variable of the current integration. Select the sub-integration's output variable from the Sub-integration output to map from drop-down, and select the corresponding variable in the current integration from the Integration variable to override drop-down. You can send the overridden variable in the current integration to the next sub-integration run by mapping the variable in the Map to additional sub-integration input(s) property. As a result, you can cumulatively aggregate the responses from the sub-integration runs.           |\n| Loop metadata         | JSON array | The output variable that has the execution details of the sub-integration runs like the sub-integration execution ID, errors messages, and variable values passed during execution.                                                                                                                    |\n## Best practices\nFor information about the usage limits that apply to the **While Loop** task, see [ Usage limits](/apigee/docs/api-platform/integration/system-limits#usage-limits) .\n## Error handling strategy\nAn error handling strategy for a task specifies the action to take if the task fails due to a [temporary error](/apigee/docs/api-platform/integration/error-handling) . For information about how to use an error handling strategy, and to know about the different types of error handling strategies, see [Error handling strategies](/apigee/docs/api-platform/integration/error-handling-strategy) .", "guide": "Apigee"}