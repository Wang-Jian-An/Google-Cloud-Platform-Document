{"title": "Apigee - Glossary", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Glossary\n**Announcement:** Application Integration is now available for your Google Cloud project. You can now use both Apigee Integration and Application Integration within the same Google Cloud project. [Learn more](/apigee/docs/api-platform/integration/using-application-integration)\nThis page provides brief definitions and links to more information of terms that are used in the Apigee Integration documentation.\n[Alert](None)\nA configuration that could be at the Integration or task level that triggers automatic notifications to the desired destination in case of failures etc. This helps customers monitor and track their integration executions.\n[API](None)\nA REST interface that makes it easy for one application to consume capabilities or data from another application. By defining stable, simple, and well-documented entry points, APIs enable developers to easily access and reuse application logic built by other developers.\n[Edge](None)\nAn edge is a connection between two integration entities, such as tasks or triggers. Edges support comprehensive branching and conditional specifications that can be used to define real-world business flows. Edges can described as complex \"if, then, else-if\" conditions.\n[Integration](None)\nA design time configuration defining the various components required to connect enterprise applications. An Integration can be understood as a directed-acyclic-graph consisting of different elements (nodes, edges etc.)\n[Task](None)\nExecutable set of steps.\n[Trigger](None)\nA trigger is an initiation point for a integration and determines how and when an integration is fired. Apigee Integration supports several out-of-the-box triggers, and supports the use of multiple triggers for a single integration.\n[Variables](None)\nA variable is an integration element holds and transports data between tasks in an integration. These can be statically defined at design time, or dynamically passed to the integration at runtime, or be references to other variables in a integration.\nVariables act substantially like variables in a program, and like all variables, parameters can be global (at the integration level and accessible to all tasks), or local (at a particular task level); acting as input, output, or transient", "content": ".", "guide": "Apigee"}