{"title": "Document AI - Managing processor versions", "url": "https://cloud.google.com/document-ai/docs/manage-processor-versions?hl=zh-cn", "abstract": "# Document AI - Managing processor versions\n# Managing processor versions\nNew versions are released for a variety of reasons, for example, to improve accuracy, increase availability, and support new document elements, such as selection marks.\nGiven that Document AI is powered by generative AI, future versions are using new foundation models so you can benefit from generative AI enhancements.\nAs we improve foundation models, [earlier foundation models are deprecated](/vertex-ai/docs/generative-ai/learn/model-versioning#stable-versions-available) . Similarly, processor versions are deprecated six months after new versions are released.\nA processor can have one of the following :\n- [Stable version](#google_stable_versions) \n- [Release candidate (RC)](#google_release_candidates_rc) \n- [Customized version](#customized_versions) and its associated [base version](#base_versions) \nThis page describes how processors are versioned, and how to view and select a particular version.\n", "content": "## Processor versions overview\nThere are two categories of processor versions:\n- **Google versions** are either stable (for production use cases) or release candidates (experimental with latest functionality).\n- **User versions** are created by you to customize predictions for your documents and have alphanumeric version IDs.## Google versions\nEach Google version is identified by a , for example `pretrained-TYPE-vX.X-YYYY-MM-DD` . Each processor version Google offers is named either or .\n### Google stable versions\nStable versions are production-quality and ready for use.\n- Google prioritizes stability of the processor behaviour, but stills includes critical fixes\n- Earlier Google stable versions are deprecated six months after the newest stable version is released as depicted in the following figure.### Google release candidates (RC)\nRelease candidates are experimental and are upgraded regularly with the latest features. These are not production-quality versions, and their stability isn't guaranteed.\n## Customized versions\nCustomized versions are the processor versions that you can create based on your documents to customize predictions. Customized versions have a `Type` , which shows the kind of model used for predictions. If you create a version using a foundation model (either by creating a version or fine tuning), then the type is **Generative AI** . If you create a processor version by training a smaller, custom model (either model or template based), then the type is **Custom** . If you create processor versions, you decide the name and ID.\n### Base versions\nIf you create a processor version, the \"base version\" shows which Google version powers your customized user version. The base version dictates the lifecycle of your user version. You need to make decisions about how to manage the lifecycle of your customized user version.\n## Available stable processor versions\n| Custom extractor       | Release date | Deprecation date |\n|:--------------------------------------------|:----------------|:-------------------|\n| pretrained-foundation-model-v1.0-2023-08-22 | January 9, 2024 | Not applicable  |\n| Bank statement       | Release date  | Deprecation date |\n|:-----------------------------------------|:------------------|:-------------------|\n| pretrained-bankstatement-v3.0-2022-05-16 | May 16, 2022  | Not applicable  |\n| pretrained-bankstatement-v2.0-2021-12-10 | December 10, 2021 | Not applicable  |\n| pretrained-bankstatement-v1.1-2021-08-13 | August 13, 2021 | Not applicable  |\n| pretrained-bankstatement-v1.0-2021-08-08 | August 8, 2021 | Not applicable  |\n| Expense       | Release date  | Deprecation date |\n|:-----------------------------------|:------------------|:-------------------|\n| pretrained-expense-v1.3-2022-07-15 | July 15, 2022  | Not applicable  |\n| pretrained-expense-v1.2-2022-02-18 | February 18, 2022 | Not applicable  |\n| pretrained-expense-v1.1-2021-04-09 | April 9, 2021  | Not applicable  |\n| Identity proofing      | Release date | Deprecation date |\n|:---------------------------------------|:----------------|:-------------------|\n| pretrained-id-proofing-v1.0-2022-10-03 | October 3, 2022 | Not applicable  |\n| Invoice       | Release date  | Deprecation date |\n|:-----------------------------------|:------------------|:-------------------|\n| pretrained-invoice-v1.3-2022-07-15 | July 15, 2022  | Not applicable  |\n| pretrained-invoice-v1.2-2022-02-18 | February 18, 2022 | Not applicable  |\n| pretrained-invoice-v1.1-2021-04-09 | April 9, 2021  | Not applicable  |\n| US driver license       | Release date | Deprecation date |\n|:---------------------------------------------|:---------------|:-------------------|\n| pretrained-us-driver-license-v1.0-2021-06-14 | June 14, 2021 | Not applicable  |\n| US passport       | Release date | Deprecation date |\n|:---------------------------------------|:---------------|:-------------------|\n| pretrained-us-passport-v1.0-2021-06-14 | June 14, 2021 | Not applicable  |\n| Paystub       | Release date  | Deprecation date |\n|:-----------------------------------|:------------------|:-------------------|\n| pretrained-paystub-v2.0-2022-07-22 | July 22, 2022  | Not applicable  |\n| pretrained-paystub-v1.2-2021-12-10 | December 10, 2021 | Not applicable  |\n| pretrained-paystub-v1.1-2021-08-13 | August 13, 2021 | Not applicable  |\n| pretrained-paystub-v1.0-2021-03-19 | March 19, 2021 | Not applicable  |\n| W2       | Release date  | Deprecation date |\n|:------------------------------|:-----------------|:-------------------|\n| pretrained-w2-v2.1-2022-06-08 | June 8, 2022  | Not applicable  |\n| pretrained-w2-v1.2-2022-01-28 | January 28, 2022 | Not applicable  |\n| pretrained-w2-v1.1-2022-01-27 | January 27, 2022 | March 31, 2024  |\n| pretrained-w2-v1.0-2020-10-01 | October 1, 2020 | March 31, 2024  |## Processor version lifecycle\nAs soon as a new Google version is available, you should [create and evaluate new user versions](/document-ai/docs/workbench/cde-with-genai) with the new base version. Then, deploy your new version and undeploy (or delete) earlier user versions that use the prior stable version as their base. Stable versions are discontinued after a new one is released. Google gives you at least six months' notice when this occurs.\n### What happens when a base version is deprecated?\nUser versions depending on earlier base versions stop returning predictions when the base version is deprecated.\n### How are processor versions selected for your requests?\nWhen you call a processor endpoint without specifying the processor version, the default processor version is used. When the default processor version changes, you might need to update the code.\n| Endpoint used        | Experience                                                       |\n|:---------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| If you do not specify a processor version ID | Requests processed using a new default processor version. If your default processor version is deprecated, the default updates to the most recently launched stable Google version when the older default version is deprecated. |\n| If you specify the processor version ID  | The response fails if you call a processor endpoint and specify a version ID which has been deprecated.                               |\n**Note:** We recommend you to not specify the processor version ID in your production requests to process documents. Instead, we recommend you to call the processor's endpoint and rely on the default processor to control which version processes requests. This helps you to upgrade and benefit from automatic default version updates. See how to [change the default version](#change-default) .\n## Deprecation example of a customized version\nConsider the following scenario that describes the sequence of events in a customized version deprecation:\n- As a developer, you're using a Custom Extractor to get data from documents. Given the complexity and volume of documents you process, you fine tune the foundation model to create a version named `fine-tune-A` . You set the `fine-tune-A` version as the default version for your processor and use it to process documents. The base version that powers the `fine-tune-A` model is the `pretrained-foundation-model-v1.0-2023-08-22 (v1.0)` stable version.\n- Google published a new stable version named `pretrained-foundation-model-v2.0-2024-02-22 (v2.0)` and announced that the `v1.0` stable version is to be deprecated on August 22, 2024.\n- Since you kept your training and test documents in your processor's dataset, you fine-tune another version based on the newest Google stable version, `v2.0` , and name it `fine-tune-B` . After you evaluate its performance, you set the `fine-tune-B` version as the new default version for your processor and decommission the `fine-tune-A` version. Your new version now uses the latest supported Google stable version.\nOn the other hand, had you not created and evaluated the customized `fine-tune-B` version, then Google would have updated the default version of your processor to `v2.0` on August 22, 2024. Because you are calling the processor's endpoint and not specifying a processor version, the new `v2.0` version is used as the new default to process your requests.\n## Select a processor version\nThere are three ways to specify which processor version to use for online and batch processing:\n- If you **do not specify a version** , the processor's default is used.- Example:`projects/my-proj/locations/us/processors/my-processor:process`\n- If you **specify a version** , then that specific version is used. If the specific version does not exist, the request fails with an error.- Example:`projects/my-proj/locations/us/processors/my-processor/processorVersions/pretrained-invoice-v1.2-2022-02-18:process`\n- If you **specify a channel** then the latest version in that channel is used. (Options: `stable` , `rc` )- Example:`projects/my-proj/locations/us/processors/my-processor/processorVersions/stable:process`\n## View available version\n**Note:** Some processors have only one version.\n- In the Google Cloud console, in the Document AI section, go to the **Processors** page. [Go to Processors](https://console.cloud.google.com/ai/document-ai/processors) \n- From the list of processors, click the name of the processor that you want to view details for.\n- Select the **Manage Versions** (or **Deploy & use** ) tab, which will display all of the available processor versions.\nThis sample shows how to list the available processor versions for your processor using the [processorVersions.list](/document-ai/docs/reference/rest/v1/projects.locations.processors.processorVersions/list) method.\nBefore using any of the request data, make the following replacements:- : your processor's [location](/document-ai/docs/regions) , for example:- `us`- United States\n- `eu`- European Union\n- : Your Google Cloud project ID.\n- : the ID of your custom processor.\nHTTP method and URL:\n```\nGET https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\ncurl -X GET \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method GET ` -Headers $headers ` -Uri \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions\" | Select-Object -Expand Content\n```\nThe response contains a list of [ProcessorVersions](/document-ai/docs/reference/rest/v1/projects.locations.processors.processorVersions#ProcessorVersion) ,  which contains information about each processor version such as its `name` , `state` , and other details.\n```\n{\n \"processorVersions\": [ {\n  \"name\": \"projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/pretrained-ocr-v1.1-2022-09-12\",\n  \"displayName\": \"Google Release Candidate\",\n  \"state\": \"DEPLOYED\",\n  \"createTime\": \"2022-09-13T23:39:12.156648Z\",\n  \"googleManaged\": true\n },\n {\n  \"name\": \"projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/pretrained-ocr-v1.0-2020-09-23\",\n  \"displayName\": \"Google Stable\",\n  \"state\": \"DEPLOYED\",\n  \"createTime\": \"2022-09-12T23:35:09.829557Z\",\n  \"googleManaged\": true,\n  \"deprecationInfo\": {\n  \"deprecationTime\": \"1970-01-01T00:00:00Z\"\n  }\n }\n ]\n}\n```\nFor more information, see the [Document AI C# API reference documentation](/dotnet/docs/reference/Google.Cloud.DocumentAI.V1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-dotnet/blob/HEAD/apis/Google.Cloud.DocumentAI.V1/Google.Cloud.DocumentAI.V1.GeneratedSnippets/DocumentProcessorServiceClient.ListProcessorVersionsRequestObjectSnippet.g.cs) \n```\nusing Google.Api.Gax;using Google.Cloud.DocumentAI.V1;using System;public sealed partial class GeneratedDocumentProcessorServiceClientSnippets{\u00a0 \u00a0 /// <summary>Snippet for ListProcessorVersions</summary>\u00a0 \u00a0 /// <remarks>\u00a0 \u00a0 /// This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 /// It will require modifications to work:\u00a0 \u00a0 /// - It may require correct/in-range values for request initialization.\u00a0 \u00a0 /// - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 /// \u00a0 https://cloud.google.com/dotnet/docs/reference/help/client-configuration#endpoint.\u00a0 \u00a0 /// </remarks>\u00a0 \u00a0 public void ListProcessorVersionsRequestObject()\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create client\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient documentProcessorServiceClient = DocumentProcessorServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s)\u00a0 \u00a0 \u00a0 \u00a0 ListProcessorVersionsRequest request = new ListProcessorVersionsRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ParentAsProcessorName = ProcessorName.FromProjectLocationProcessor(\"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\"),\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request\u00a0 \u00a0 \u00a0 \u00a0 PagedEnumerable<ListProcessorVersionsResponse, ProcessorVersion> response = documentProcessorServiceClient.ListProcessorVersions(request);\u00a0 \u00a0 \u00a0 \u00a0 // Iterate over all response items, lazily performing RPCs as required\u00a0 \u00a0 \u00a0 \u00a0 foreach (ProcessorVersion item in response)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Do something with each item\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(item);\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Or iterate over pages (of server-defined size), performing one RPC per page\u00a0 \u00a0 \u00a0 \u00a0 foreach (ListProcessorVersionsResponse page in response.AsRawResponses())\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Do something with each page of items\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(\"A page of results:\");\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 foreach (ProcessorVersion item in page)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Do something with each item\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(item);\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Or retrieve a single page of known size (unless it's the final page), performing as many RPCs as required\u00a0 \u00a0 \u00a0 \u00a0 int pageSize = 10;\u00a0 \u00a0 \u00a0 \u00a0 Page<ProcessorVersion> singlePage = response.ReadPage(pageSize);\u00a0 \u00a0 \u00a0 \u00a0 // Do something with the page of items\u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine($\"A page of {pageSize} results (unless it's the final page):\");\u00a0 \u00a0 \u00a0 \u00a0 foreach (ProcessorVersion item in singlePage)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Do something with each item\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Console.WriteLine(item);\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // Store the pageToken, for when the next page is required.\u00a0 \u00a0 \u00a0 \u00a0 string nextPageToken = singlePage.NextPageToken;\u00a0 \u00a0 }}\n```For more information, see the [Document AI Go API reference documentation](/go/docs/reference/cloud.google.com/go/documentai/latest/apiv1) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-go/blob/HEAD/internal/generated/snippets/documentai/apiv1/DocumentProcessorClient/ListProcessorVersions/main.go) \n```\npackage mainimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 documentai \"cloud.google.com/go/documentai/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 documentaipb \"cloud.google.com/go/documentai/apiv1/documentaipb\"\u00a0 \u00a0 \u00a0 \u00a0 \"google.golang.org/api/iterator\")func main() {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 \u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 \u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 \u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in:\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options\u00a0 \u00a0 \u00a0 \u00a0 c, err := documentai.NewDocumentProcessorClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer c.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &documentaipb.ListProcessorVersionsRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Fill request struct fields.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // See https://pkg.go.dev/cloud.google.com/go/documentai/apiv1/documentaipb#ListProcessorVersionsRequest.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 it := c.ListProcessorVersions(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 for {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 resp, err := it.Next()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if err == iterator.Done {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 break\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Use resp.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 _ = resp\u00a0 \u00a0 \u00a0 \u00a0 }}\n```For more information, see the [Document AI Java API reference documentation](/java/docs/reference/google-cloud-document-ai/latest/overview) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-java/blob/HEAD/java-document-ai/samples/snippets/generated/com/google/cloud/documentai/v1/documentprocessorservice/listprocessorversions/SyncListProcessorVersions.java) \n```\nimport com.google.cloud.documentai.v1.DocumentProcessorServiceClient;import com.google.cloud.documentai.v1.ListProcessorVersionsRequest;import com.google.cloud.documentai.v1.ProcessorName;import com.google.cloud.documentai.v1.ProcessorVersion;public class SyncListProcessorVersions {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 syncListProcessorVersions();\u00a0 }\u00a0 public static void syncListProcessorVersions() throws Exception {\u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 // https://cloud.google.com/java/docs/setup#configure_endpoints_for_the_client_library\u00a0 \u00a0 try (DocumentProcessorServiceClient documentProcessorServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient.create()) {\u00a0 \u00a0 \u00a0 ListProcessorVersionsRequest request =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ListProcessorVersionsRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setParent(ProcessorName.of(\"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\").toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setPageSize(883849137)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setPageToken(\"pageToken873572522\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 for (ProcessorVersion element :\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 documentProcessorServiceClient.listProcessorVersions(request).iterateAll()) {\u00a0 \u00a0 \u00a0 \u00a0 // doThingsWith(element);\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 }}\n```For more information, see the [Document AI Python API reference documentation](/python/docs/reference/documentai/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/documentai/snippets/list_processor_versions_sample.py) \n```\nfrom google.api_core.client_options import ClientOptionsfrom google.cloud import documentai \u00a0# type: ignore# TODO(developer): Uncomment these variables before running the sample.# project_id = 'YOUR_PROJECT_ID'# location = 'YOUR_PROCESSOR_LOCATION' # Format is 'us' or 'eu'# processor_id = 'YOUR_PROCESSOR_ID' # Create processor before running sampledef list_processor_versions_sample(\u00a0 \u00a0 project_id: str, location: str, processor_id: str) -> None:\u00a0 \u00a0 # You must set the `api_endpoint` if you use a location other than \"us\".\u00a0 \u00a0 opts = ClientOptions(api_endpoint=f\"{location}-documentai.googleapis.com\")\u00a0 \u00a0 client = documentai.DocumentProcessorServiceClient(client_options=opts)\u00a0 \u00a0 # The full resource name of the processor\u00a0 \u00a0 # e.g.: projects/project_id/locations/location/processors/processor_id\u00a0 \u00a0 parent = client.processor_path(project_id, location, processor_id)\u00a0 \u00a0 # Make ListProcessorVersions request\u00a0 \u00a0 processor_versions = client.list_processor_versions(parent=parent)\u00a0 \u00a0 # Print the processor version information\u00a0 \u00a0 for processor_version in processor_versions:\u00a0 \u00a0 \u00a0 \u00a0 processor_version_id = client.parse_processor_version_path(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 processor_version.name\u00a0 \u00a0 \u00a0 \u00a0 )[\"processor_version\"]\u00a0 \u00a0 \u00a0 \u00a0 print(f\"Processor Version: {processor_version_id}\")\u00a0 \u00a0 \u00a0 \u00a0 print(f\"Display Name: {processor_version.display_name}\")\u00a0 \u00a0 \u00a0 \u00a0 print(f\"DEPLOYED: {processor_version.state}\")\u00a0 \u00a0 \u00a0 \u00a0 print(\"\")\n```For more information, see the [Document AI Ruby API reference documentation](/ruby/docs/reference/google-cloud-document_ai-v1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-document_ai-v1/snippets/document_processor_service/list_processor_versions.rb) \n```\nrequire \"google/cloud/document_ai/v1\"\n### Snippet for the list_processor_versions call in the DocumentProcessorService service\n## This snippet has been automatically generated and should be regarded as a code# template only. It will require modifications to work:# - It may require correct/in-range values for request initialization.# - It may require specifying regional endpoints when creating the service# client as shown in https://cloud.google.com/ruby/docs/reference.\n## This is an auto-generated example demonstrating basic usage of# Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client#list_processor_versions.#def list_processor_versions\u00a0 # Create a client object. The client can be reused for multiple calls.\u00a0 client = Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client.new\u00a0 # Create a request. To set request fields, pass in keyword arguments.\u00a0 request = Google::Cloud::DocumentAI::V1::ListProcessorVersionsRequest.new\u00a0 # Call the list_processor_versions method.\u00a0 result = client.list_processor_versions request\u00a0 # The returned object is of type Gapic::PagedEnumerable. You can iterate\u00a0 # over elements, and API calls will be issued to fetch pages as needed.\u00a0 result.each do |item|\u00a0 \u00a0 # Each element is of type ::Google::Cloud::DocumentAI::V1::ProcessorVersion.\u00a0 \u00a0 p item\u00a0 endend\n```\n## View details about a version\n- In the Google Cloud console, in the Document AI section, go to the **Processors** page. [Go to Processors](https://console.cloud.google.com/ai/document-ai/processors) \n- From the list of processors, click the name of the processor that you want to view details for.\n- Select the **Manage Versions** (or **Deploy & use** ) tab, which will display all of the available processor versions and their details.\nThis sample shows how to get details about a processor version for your processor using the [processorVersions.get](/document-ai/docs/reference/rest/v1/projects.locations.processors.processorVersions/get) method.\nBefore using any of the request data, make the following replacements:- : your processor's [location](/document-ai/docs/regions) , for example:- `us`- United States\n- `eu`- European Union\n- : Your Google Cloud project ID.\n- : the ID of your custom processor.\n- : the processor version identifier. Refer to [Select a processor version](/document-ai/docs/manage-processor#select_a_processor_version) for more information. For example:- `pretrained-TYPE-vX.X-YYYY-MM-DD`\n- `stable`\n- `rc`\nHTTP method and URL:\n```\nGET https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\ncurl -X GET \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method GET ` -Headers $headers ` -Uri \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION\" | Select-Object -Expand Content\n```\nThe response is a [ProcessorVersion](/document-ai/docs/reference/rest/v1/projects.locations.processors.processorVersions#ProcessorVersion) ,  which contains information about the processor version such as its `name` , `state` , and other details.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/pretrained-ocr-v1.1-2022-09-12\",\n \"displayName\": \"Google Release Candidate\",\n \"state\": \"DEPLOYED\",\n \"createTime\": \"2022-09-13T23:39:12.156648Z\",\n \"googleManaged\": true\n}\n```\nFor more information, see the [Document AI C# API reference documentation](/dotnet/docs/reference/Google.Cloud.DocumentAI.V1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-dotnet/blob/HEAD/apis/Google.Cloud.DocumentAI.V1/Google.Cloud.DocumentAI.V1.GeneratedSnippets/DocumentProcessorServiceClient.GetProcessorVersionRequestObjectSnippet.g.cs) \n```\nusing Google.Cloud.DocumentAI.V1;public sealed partial class GeneratedDocumentProcessorServiceClientSnippets{\u00a0 \u00a0 /// <summary>Snippet for GetProcessorVersion</summary>\u00a0 \u00a0 /// <remarks>\u00a0 \u00a0 /// This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 /// It will require modifications to work:\u00a0 \u00a0 /// - It may require correct/in-range values for request initialization.\u00a0 \u00a0 /// - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 /// \u00a0 https://cloud.google.com/dotnet/docs/reference/help/client-configuration#endpoint.\u00a0 \u00a0 /// </remarks>\u00a0 \u00a0 public void GetProcessorVersionRequestObject()\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create client\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient documentProcessorServiceClient = DocumentProcessorServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s)\u00a0 \u00a0 \u00a0 \u00a0 GetProcessorVersionRequest request = new GetProcessorVersionRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProcessorVersionName = ProcessorVersionName.FromProjectLocationProcessorProcessorVersion(\"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\", \"[PROCESSOR_VERSION]\"),\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request\u00a0 \u00a0 \u00a0 \u00a0 ProcessorVersion response = documentProcessorServiceClient.GetProcessorVersion(request);\u00a0 \u00a0 }}\n```For more information, see the [Document AI Go API reference documentation](/go/docs/reference/cloud.google.com/go/documentai/latest/apiv1) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-go/blob/HEAD/internal/generated/snippets/documentai/apiv1/DocumentProcessorClient/GetProcessorVersion/main.go) \n```\npackage mainimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 documentai \"cloud.google.com/go/documentai/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 documentaipb \"cloud.google.com/go/documentai/apiv1/documentaipb\")func main() {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 \u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 \u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 \u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in:\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options\u00a0 \u00a0 \u00a0 \u00a0 c, err := documentai.NewDocumentProcessorClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer c.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &documentaipb.GetProcessorVersionRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Fill request struct fields.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // See https://pkg.go.dev/cloud.google.com/go/documentai/apiv1/documentaipb#GetProcessorVersionRequest.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := c.GetProcessorVersion(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // TODO: Use resp.\u00a0 \u00a0 \u00a0 \u00a0 _ = resp}\n```For more information, see the [Document AI Java API reference documentation](/java/docs/reference/google-cloud-document-ai/latest/overview) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-java/blob/HEAD/java-document-ai/samples/snippets/generated/com/google/cloud/documentai/v1/documentprocessorservice/getprocessorversion/SyncGetProcessorVersion.java) \n```\nimport com.google.cloud.documentai.v1.DocumentProcessorServiceClient;import com.google.cloud.documentai.v1.GetProcessorVersionRequest;import com.google.cloud.documentai.v1.ProcessorVersion;import com.google.cloud.documentai.v1.ProcessorVersionName;public class SyncGetProcessorVersion {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 syncGetProcessorVersion();\u00a0 }\u00a0 public static void syncGetProcessorVersion() throws Exception {\u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 // https://cloud.google.com/java/docs/setup#configure_endpoints_for_the_client_library\u00a0 \u00a0 try (DocumentProcessorServiceClient documentProcessorServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient.create()) {\u00a0 \u00a0 \u00a0 GetProcessorVersionRequest request =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 GetProcessorVersionRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setName(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProcessorVersionName.of(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\", \"[PROCESSOR_VERSION]\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 ProcessorVersion response = documentProcessorServiceClient.getProcessorVersion(request);\u00a0 \u00a0 }\u00a0 }}\n```For more information, see the [Document AI Python API reference documentation](/python/docs/reference/documentai/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/documentai/snippets/get_processor_version_sample.py) \n```\nfrom google.api_core.client_options import ClientOptionsfrom google.cloud import documentai \u00a0# type: ignore# TODO(developer): Uncomment these variables before running the sample.# project_id = 'YOUR_PROJECT_ID'# location = 'YOUR_PROCESSOR_LOCATION' # Format is 'us' or 'eu'# processor_id = 'YOUR_PROCESSOR_ID' # Create processor before running sample# processor_version_id = 'YOUR_PROCESSOR_VERSION_ID'def get_processor_version_sample(\u00a0 \u00a0 project_id: str, location: str, processor_id: str, processor_version_id: str) -> None:\u00a0 \u00a0 # You must set the api_endpoint if you use a location other than 'us'.\u00a0 \u00a0 opts = ClientOptions(api_endpoint=f\"{location}-documentai.googleapis.com\")\u00a0 \u00a0 client = documentai.DocumentProcessorServiceClient(client_options=opts)\u00a0 \u00a0 # The full resource name of the processor version\u00a0 \u00a0 # e.g.: projects/project_id/locations/location/processors/processor_id/processorVersions/processor_version_id\u00a0 \u00a0 name = client.processor_version_path(\u00a0 \u00a0 \u00a0 \u00a0 project_id, location, processor_id, processor_version_id\u00a0 \u00a0 )\u00a0 \u00a0 # Make GetProcessorVersion request\u00a0 \u00a0 processor_version = client.get_processor_version(name=name)\u00a0 \u00a0 # Print the processor version information\u00a0 \u00a0 print(f\"Processor Version: {processor_version_id}\")\u00a0 \u00a0 print(f\"Display Name: {processor_version.display_name}\")\u00a0 \u00a0 print(f\"DEPLOYED: {processor_version.state}\")\n```For more information, see the [Document AI Ruby API reference documentation](/ruby/docs/reference/google-cloud-document_ai-v1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-document_ai-v1/snippets/document_processor_service/get_processor_version.rb) \n```\nrequire \"google/cloud/document_ai/v1\"\n### Snippet for the get_processor_version call in the DocumentProcessorService service\n## This snippet has been automatically generated and should be regarded as a code# template only. It will require modifications to work:# - It may require correct/in-range values for request initialization.# - It may require specifying regional endpoints when creating the service# client as shown in https://cloud.google.com/ruby/docs/reference.\n## This is an auto-generated example demonstrating basic usage of# Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client#get_processor_version.#def get_processor_version\u00a0 # Create a client object. The client can be reused for multiple calls.\u00a0 client = Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client.new\u00a0 # Create a request. To set request fields, pass in keyword arguments.\u00a0 request = Google::Cloud::DocumentAI::V1::GetProcessorVersionRequest.new\u00a0 # Call the get_processor_version method.\u00a0 result = client.get_processor_version request\u00a0 # The returned object is of type Google::Cloud::DocumentAI::V1::ProcessorVersion.\u00a0 p resultend\n```\n## Change the default version\nA processor's specifies the version that is used to process documents when you don't specify a specific version. When you [create a processor](/document-ai/docs/create-processor) , the initial default version is the latest version in the stable channel.\nIf you change the default version, incoming requests are processed using the newly selected version. If you change the default version while the processor is in the middle of a request, the request will continue to use the previously selected version.\nTo change the default version:\n- In the Google Cloud console, in the Document AI section, go to the **Processors** page. [Go to the Processors page](https://console.cloud.google.com/ai/document-ai/processors) \n- From the list of processors, click the name of the processor that you want to view details for.\n- In the processor's **Manage Versions** (or **Deploy & use** ) tab, in the **Default version** dropdown menu, choose a version of the processor that you want to use as the default version.\nThis sample shows how to set the default processor version for your processor using the [processors.setDefaultProcessorVersion](/document-ai/docs/reference/rest/v1/projects.locations.processors/setDefaultProcessorVersion) method.\nBefore using any of the request data, make the following replacements:- : your processor's [location](/document-ai/docs/regions) , for example:- `us`- United States\n- `eu`- European Union\n- : Your Google Cloud project ID.\n- : the ID of your custom processor.\n- : the processor version identifier. Refer to [Select a processor version](/document-ai/docs/manage-processor#select_a_processor_version) for more information. For example:- `pretrained-TYPE-vX.X-YYYY-MM-DD`\n- `stable`\n- `rc`\nHTTP method and URL:\n```\nPOST https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID:setDefaultProcessorVersion\n```\nRequest JSON body:\n```\n{\n \"defaultProcessorVersion\": \"PROCESSOR_VERSION\"\n}\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID:setDefaultProcessorVersion\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID:setDefaultProcessorVersion\" | Select-Object -Expand Content\n```\nThe response is a [long running operation](/document-ai/docs/long-running-operations) . To poll the long-running operation, call [operations.get](/document-ai/docs/reference/rest/v1/projects.locations.operations/get) \nThe [SetDefaultProcessorVersionMetadata](/document-ai/docs/reference/rest/Shared.Types/SetDefaultProcessorVersionMetadata) in the response indicates the state of the operation.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION/operations/OPERATION\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.documentai.v1.SetDefaultProcessorVersionMetadata\",\n \"commonMetadata\": {\n  \"state\": \"SUCCEEDED\",\n  \"createTime\": \"2022-03-02T22:52:49.957096Z\",\n  \"updateTime\": \"2022-03-02T22:52:50.175976Z\",\n  \"resource\": \"projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION\"\n }\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.cloud.documentai.v1.SetDefaultProcessorVersionResponse\"\n }\n}\n```\nFor more information, see the [Document AI C# API reference documentation](/dotnet/docs/reference/Google.Cloud.DocumentAI.V1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-dotnet/blob/HEAD/apis/Google.Cloud.DocumentAI.V1/Google.Cloud.DocumentAI.V1.GeneratedSnippets/DocumentProcessorServiceClient.SetDefaultProcessorVersionRequestObjectSnippet.g.cs) \n```\nusing Google.Cloud.DocumentAI.V1;using Google.LongRunning;public sealed partial class GeneratedDocumentProcessorServiceClientSnippets{\u00a0 \u00a0 /// <summary>Snippet for SetDefaultProcessorVersion</summary>\u00a0 \u00a0 /// <remarks>\u00a0 \u00a0 /// This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 /// It will require modifications to work:\u00a0 \u00a0 /// - It may require correct/in-range values for request initialization.\u00a0 \u00a0 /// - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 /// \u00a0 https://cloud.google.com/dotnet/docs/reference/help/client-configuration#endpoint.\u00a0 \u00a0 /// </remarks>\u00a0 \u00a0 public void SetDefaultProcessorVersionRequestObject()\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create client\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient documentProcessorServiceClient = DocumentProcessorServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s)\u00a0 \u00a0 \u00a0 \u00a0 SetDefaultProcessorVersionRequest request = new SetDefaultProcessorVersionRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProcessorAsProcessorName = ProcessorName.FromProjectLocationProcessor(\"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\"),\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DefaultProcessorVersionAsProcessorVersionName = ProcessorVersionName.FromProjectLocationProcessorProcessorVersion(\"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\", \"[PROCESSOR_VERSION]\"),\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request\u00a0 \u00a0 \u00a0 \u00a0 Operation<SetDefaultProcessorVersionResponse, SetDefaultProcessorVersionMetadata> response = documentProcessorServiceClient.SetDefaultProcessorVersion(request);\u00a0 \u00a0 \u00a0 \u00a0 // Poll until the returned long-running operation is complete\u00a0 \u00a0 \u00a0 \u00a0 Operation<SetDefaultProcessorVersionResponse, SetDefaultProcessorVersionMetadata> completedResponse = response.PollUntilCompleted();\u00a0 \u00a0 \u00a0 \u00a0 // Retrieve the operation result\u00a0 \u00a0 \u00a0 \u00a0 SetDefaultProcessorVersionResponse result = completedResponse.Result;\u00a0 \u00a0 \u00a0 \u00a0 // Or get the name of the operation\u00a0 \u00a0 \u00a0 \u00a0 string operationName = response.Name;\u00a0 \u00a0 \u00a0 \u00a0 // This name can be stored, then the long-running operation retrieved later by name\u00a0 \u00a0 \u00a0 \u00a0 Operation<SetDefaultProcessorVersionResponse, SetDefaultProcessorVersionMetadata> retrievedResponse = documentProcessorServiceClient.PollOnceSetDefaultProcessorVersion(operationName);\u00a0 \u00a0 \u00a0 \u00a0 // Check if the retrieved long-running operation has completed\u00a0 \u00a0 \u00a0 \u00a0 if (retrievedResponse.IsCompleted)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // If it has completed, then access the result\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SetDefaultProcessorVersionResponse retrievedResult = retrievedResponse.Result;\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }}\n```For more information, see the [Document AI Go API reference documentation](/go/docs/reference/cloud.google.com/go/documentai/latest/apiv1) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-go/blob/HEAD/internal/generated/snippets/documentai/apiv1/DocumentProcessorClient/SetDefaultProcessorVersion/main.go) \n```\npackage mainimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 documentai \"cloud.google.com/go/documentai/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 documentaipb \"cloud.google.com/go/documentai/apiv1/documentaipb\")func main() {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 \u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 \u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 \u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in:\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options\u00a0 \u00a0 \u00a0 \u00a0 c, err := documentai.NewDocumentProcessorClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer c.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &documentaipb.SetDefaultProcessorVersionRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Fill request struct fields.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // See https://pkg.go.dev/cloud.google.com/go/documentai/apiv1/documentaipb#SetDefaultProcessorVersionRequest.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := c.SetDefaultProcessorVersion(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // TODO: Use resp.\u00a0 \u00a0 \u00a0 \u00a0 _ = resp}\n```For more information, see the [Document AI Java API reference documentation](/java/docs/reference/google-cloud-document-ai/latest/overview) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-java/blob/HEAD/java-document-ai/samples/snippets/generated/com/google/cloud/documentai/v1/documentprocessorservice/setdefaultprocessorversion/SyncSetDefaultProcessorVersion.java) \n```\nimport com.google.cloud.documentai.v1.DocumentProcessorServiceClient;import com.google.cloud.documentai.v1.ProcessorName;import com.google.cloud.documentai.v1.ProcessorVersionName;import com.google.cloud.documentai.v1.SetDefaultProcessorVersionRequest;import com.google.cloud.documentai.v1.SetDefaultProcessorVersionResponse;public class SyncSetDefaultProcessorVersion {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 syncSetDefaultProcessorVersion();\u00a0 }\u00a0 public static void syncSetDefaultProcessorVersion() throws Exception {\u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 // https://cloud.google.com/java/docs/setup#configure_endpoints_for_the_client_library\u00a0 \u00a0 try (DocumentProcessorServiceClient documentProcessorServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient.create()) {\u00a0 \u00a0 \u00a0 SetDefaultProcessorVersionRequest request =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 SetDefaultProcessorVersionRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setProcessor(ProcessorName.of(\"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\").toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setDefaultProcessorVersion(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProcessorVersionName.of(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\", \"[PROCESSOR_VERSION]\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 SetDefaultProcessorVersionResponse response =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 documentProcessorServiceClient.setDefaultProcessorVersionAsync(request).get();\u00a0 \u00a0 }\u00a0 }}\n```For more information, see the [Document AI Python API reference documentation](/python/docs/reference/documentai/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/documentai/snippets/set_default_processor_version_sample.py) \n```\nfrom google.api_core.client_options import ClientOptionsfrom google.api_core.exceptions import NotFoundfrom google.cloud import documentai \u00a0# type: ignore# TODO(developer): Uncomment these variables before running the sample.# project_id = 'YOUR_PROJECT_ID'# location = 'YOUR_PROCESSOR_LOCATION' # Format is 'us' or 'eu'# processor_id = 'YOUR_PROCESSOR_ID' # Create processor before running sample# processor_version_id = 'YOUR_PROCESSOR_VERSION_ID'def set_default_processor_version_sample(\u00a0 \u00a0 project_id: str, location: str, processor_id: str, processor_version_id: str) -> None:\u00a0 \u00a0 # You must set the api_endpoint if you use a location other than 'us'.\u00a0 \u00a0 opts = ClientOptions(api_endpoint=f\"{location}-documentai.googleapis.com\")\u00a0 \u00a0 client = documentai.DocumentProcessorServiceClient(client_options=opts)\u00a0 \u00a0 # The full resource name of the processor\u00a0 \u00a0 # e.g.: projects/project_id/locations/location/processors/processor_id\u00a0 \u00a0 processor = client.processor_path(project_id, location, processor_id)\u00a0 \u00a0 # The full resource name of the processor version\u00a0 \u00a0 # e.g.: projects/project_id/locations/location/processors/processor_id/processorVersions/processor_version_id\u00a0 \u00a0 processor_version = client.processor_version_path(\u00a0 \u00a0 \u00a0 \u00a0 project_id, location, processor_id, processor_version_id\u00a0 \u00a0 )\u00a0 \u00a0 request = documentai.SetDefaultProcessorVersionRequest(\u00a0 \u00a0 \u00a0 \u00a0 processor=processor, default_processor_version=processor_version\u00a0 \u00a0 )\u00a0 \u00a0 # Make SetDefaultProcessorVersion request\u00a0 \u00a0 try:\u00a0 \u00a0 \u00a0 \u00a0 operation = client.set_default_processor_version(request)\u00a0 \u00a0 \u00a0 \u00a0 # Print operation details\u00a0 \u00a0 \u00a0 \u00a0 print(operation.operation.name)\u00a0 \u00a0 \u00a0 \u00a0 # Wait for operation to complete\u00a0 \u00a0 \u00a0 \u00a0 operation.result()\u00a0 \u00a0 except NotFound as e:\u00a0 \u00a0 \u00a0 \u00a0 print(e.message)\n```For more information, see the [Document AI Ruby API reference documentation](/ruby/docs/reference/google-cloud-document_ai-v1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-document_ai-v1/snippets/document_processor_service/set_default_processor_version.rb) \n```\nrequire \"google/cloud/document_ai/v1\"\n### Snippet for the set_default_processor_version call in the DocumentProcessorService service\n## This snippet has been automatically generated and should be regarded as a code# template only. It will require modifications to work:# - It may require correct/in-range values for request initialization.# - It may require specifying regional endpoints when creating the service# client as shown in https://cloud.google.com/ruby/docs/reference.\n## This is an auto-generated example demonstrating basic usage of# Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client#set_default_processor_version.#def set_default_processor_version\u00a0 # Create a client object. The client can be reused for multiple calls.\u00a0 client = Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client.new\u00a0 # Create a request. To set request fields, pass in keyword arguments.\u00a0 request = Google::Cloud::DocumentAI::V1::SetDefaultProcessorVersionRequest.new\u00a0 # Call the set_default_processor_version method.\u00a0 result = client.set_default_processor_version request\u00a0 # The returned object is of type Gapic::Operation. You can use it to\u00a0 # check the status of an operation, cancel it, or wait for results.\u00a0 # Here is how to wait for a response.\u00a0 result.wait_until_done! timeout: 60\u00a0 if result.response?\u00a0 \u00a0 p result.response\u00a0 else\u00a0 \u00a0 puts \"No response received.\"\u00a0 endend\n```\n## Deploy a processor version\nAfter [creating a new processor version](/document-ai/workbench/docs/training-overview) with Document AI Workbench, you will need to deploy it before you can process documents with this version.\n**Note:** You cannot change the deployment status for pretrained processor versions or the current default version.\n- In the Google Cloud console, in the Document AI section, go to the **Processors** page. [Go to the Processors page](https://console.cloud.google.com/ai/document-ai/processors) \n- From the list of processors, click the name of the processor that you want to view details for.\n- In the processor's **Manage Versions** (or **Deploy & use** ) tab, select the checkbox next to the processor version you want to deploy.\n- Click **Deploy** , then again click **Deploy** on the dialog window. This process takes a few minutes.\nThis sample shows how to deploy a processor version for your processor using the [processorVersions.deploy](/document-ai/docs/reference/rest/v1/projects.locations.processors.processorVersions/deploy) method.\nBefore using any of the request data, make the following replacements:- : your processor's [location](/document-ai/docs/regions) , for example:- `us`- United States\n- `eu`- European Union\n- : Your Google Cloud project ID.\n- : the ID of your custom processor.\n- : the processor version identifier.\nHTTP method and URL:\n```\nPOST https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION:deploy\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d \"\" \\ \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION:deploy\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -Uri \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION:deploy\" | Select-Object -Expand Content\n```\nThe response is a [long running operation](/document-ai/docs/long-running-operations) . To poll the long-running operation, call [operations.get](/document-ai/docs/reference/rest/v1/projects.locations.operations/get) \nThe [DeployProcessorVersionMetadata](/document-ai/docs/reference/rest/Shared.Types/DeployProcessorVersionMetadata) in the response indicates the state of the operation.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION/operations/OPERATION\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.documentai.v1.DeployProcessorVersionMetadata\",\n \"commonMetadata\": {\n  \"state\": \"SUCCEEDED\",\n  \"createTime\": \"2022-08-29T16:27:00.195539Z\",\n  \"updateTime\": \"2022-08-29T16:32:01.963962Z\",\n  \"resource\": \"projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION\"\n }\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.cloud.documentai.v1.DeployProcessorVersionResponse\"\n }\n}\n```\nFor more information, see the [Document AI C# API reference documentation](/dotnet/docs/reference/Google.Cloud.DocumentAI.V1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-dotnet/blob/HEAD/apis/Google.Cloud.DocumentAI.V1/Google.Cloud.DocumentAI.V1.GeneratedSnippets/DocumentProcessorServiceClient.DeployProcessorVersionRequestObjectSnippet.g.cs) \n```\nusing Google.Cloud.DocumentAI.V1;using Google.LongRunning;public sealed partial class GeneratedDocumentProcessorServiceClientSnippets{\u00a0 \u00a0 /// <summary>Snippet for DeployProcessorVersion</summary>\u00a0 \u00a0 /// <remarks>\u00a0 \u00a0 /// This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 /// It will require modifications to work:\u00a0 \u00a0 /// - It may require correct/in-range values for request initialization.\u00a0 \u00a0 /// - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 /// \u00a0 https://cloud.google.com/dotnet/docs/reference/help/client-configuration#endpoint.\u00a0 \u00a0 /// </remarks>\u00a0 \u00a0 public void DeployProcessorVersionRequestObject()\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create client\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient documentProcessorServiceClient = DocumentProcessorServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s)\u00a0 \u00a0 \u00a0 \u00a0 DeployProcessorVersionRequest request = new DeployProcessorVersionRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProcessorVersionName = ProcessorVersionName.FromProjectLocationProcessorProcessorVersion(\"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\", \"[PROCESSOR_VERSION]\"),\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request\u00a0 \u00a0 \u00a0 \u00a0 Operation<DeployProcessorVersionResponse, DeployProcessorVersionMetadata> response = documentProcessorServiceClient.DeployProcessorVersion(request);\u00a0 \u00a0 \u00a0 \u00a0 // Poll until the returned long-running operation is complete\u00a0 \u00a0 \u00a0 \u00a0 Operation<DeployProcessorVersionResponse, DeployProcessorVersionMetadata> completedResponse = response.PollUntilCompleted();\u00a0 \u00a0 \u00a0 \u00a0 // Retrieve the operation result\u00a0 \u00a0 \u00a0 \u00a0 DeployProcessorVersionResponse result = completedResponse.Result;\u00a0 \u00a0 \u00a0 \u00a0 // Or get the name of the operation\u00a0 \u00a0 \u00a0 \u00a0 string operationName = response.Name;\u00a0 \u00a0 \u00a0 \u00a0 // This name can be stored, then the long-running operation retrieved later by name\u00a0 \u00a0 \u00a0 \u00a0 Operation<DeployProcessorVersionResponse, DeployProcessorVersionMetadata> retrievedResponse = documentProcessorServiceClient.PollOnceDeployProcessorVersion(operationName);\u00a0 \u00a0 \u00a0 \u00a0 // Check if the retrieved long-running operation has completed\u00a0 \u00a0 \u00a0 \u00a0 if (retrievedResponse.IsCompleted)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // If it has completed, then access the result\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeployProcessorVersionResponse retrievedResult = retrievedResponse.Result;\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }}\n```For more information, see the [Document AI Go API reference documentation](/go/docs/reference/cloud.google.com/go/documentai/latest/apiv1) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-go/blob/HEAD/internal/generated/snippets/documentai/apiv1/DocumentProcessorClient/DeployProcessorVersion/main.go) \n```\npackage mainimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 documentai \"cloud.google.com/go/documentai/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 documentaipb \"cloud.google.com/go/documentai/apiv1/documentaipb\")func main() {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 \u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 \u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 \u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in:\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options\u00a0 \u00a0 \u00a0 \u00a0 c, err := documentai.NewDocumentProcessorClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer c.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &documentaipb.DeployProcessorVersionRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Fill request struct fields.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // See https://pkg.go.dev/cloud.google.com/go/documentai/apiv1/documentaipb#DeployProcessorVersionRequest.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := c.DeployProcessorVersion(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // TODO: Use resp.\u00a0 \u00a0 \u00a0 \u00a0 _ = resp}\n```For more information, see the [Document AI Java API reference documentation](/java/docs/reference/google-cloud-document-ai/latest/overview) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-java/blob/HEAD/java-document-ai/samples/snippets/generated/com/google/cloud/documentai/v1/documentprocessorservice/deployprocessorversion/SyncDeployProcessorVersion.java) \n```\nimport com.google.cloud.documentai.v1.DeployProcessorVersionRequest;import com.google.cloud.documentai.v1.DeployProcessorVersionResponse;import com.google.cloud.documentai.v1.DocumentProcessorServiceClient;import com.google.cloud.documentai.v1.ProcessorVersionName;public class SyncDeployProcessorVersion {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 syncDeployProcessorVersion();\u00a0 }\u00a0 public static void syncDeployProcessorVersion() throws Exception {\u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 // https://cloud.google.com/java/docs/setup#configure_endpoints_for_the_client_library\u00a0 \u00a0 try (DocumentProcessorServiceClient documentProcessorServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient.create()) {\u00a0 \u00a0 \u00a0 DeployProcessorVersionRequest request =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeployProcessorVersionRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setName(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProcessorVersionName.of(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\", \"[PROCESSOR_VERSION]\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 DeployProcessorVersionResponse response =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 documentProcessorServiceClient.deployProcessorVersionAsync(request).get();\u00a0 \u00a0 }\u00a0 }}\n```For more information, see the [Document AI Python API reference documentation](/python/docs/reference/documentai/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/documentai/snippets/deploy_processor_version_sample.py) \n```\nfrom google.api_core.client_options import ClientOptionsfrom google.api_core.exceptions import FailedPreconditionfrom google.cloud import documentai \u00a0# type: ignore# TODO(developer): Uncomment these variables before running the sample.# project_id = 'YOUR_PROJECT_ID'# location = 'YOUR_PROCESSOR_LOCATION' # Format is 'us' or 'eu'# processor_id = 'YOUR_PROCESSOR_ID'# processor_version_id = 'YOUR_PROCESSOR_VERSION_ID'def deploy_processor_version_sample(\u00a0 \u00a0 project_id: str, location: str, processor_id: str, processor_version_id: str) -> None:\u00a0 \u00a0 # You must set the api_endpoint if you use a location other than 'us'.\u00a0 \u00a0 opts = ClientOptions(api_endpoint=f\"{location}-documentai.googleapis.com\")\u00a0 \u00a0 client = documentai.DocumentProcessorServiceClient(client_options=opts)\u00a0 \u00a0 # The full resource name of the processor version\u00a0 \u00a0 # e.g.: projects/project_id/locations/location/processors/processor_id/processorVersions/processor_version_id\u00a0 \u00a0 name = client.processor_version_path(\u00a0 \u00a0 \u00a0 \u00a0 project_id, location, processor_id, processor_version_id\u00a0 \u00a0 )\u00a0 \u00a0 # Make DeployProcessorVersion request\u00a0 \u00a0 try:\u00a0 \u00a0 \u00a0 \u00a0 operation = client.deploy_processor_version(name=name)\u00a0 \u00a0 \u00a0 \u00a0 # Print operation details\u00a0 \u00a0 \u00a0 \u00a0 print(operation.operation.name)\u00a0 \u00a0 \u00a0 \u00a0 # Wait for operation to complete\u00a0 \u00a0 \u00a0 \u00a0 operation.result()\u00a0 \u00a0 # Deploy request will fail if the\u00a0 \u00a0 # processor version is already deployed\u00a0 \u00a0 except FailedPrecondition as e:\u00a0 \u00a0 \u00a0 \u00a0 print(e.message)\n```For more information, see the [Document AI Ruby API reference documentation](/ruby/docs/reference/google-cloud-document_ai-v1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-document_ai-v1/snippets/document_processor_service/deploy_processor_version.rb) \n```\nrequire \"google/cloud/document_ai/v1\"\n### Snippet for the deploy_processor_version call in the DocumentProcessorService service\n## This snippet has been automatically generated and should be regarded as a code# template only. It will require modifications to work:# - It may require correct/in-range values for request initialization.# - It may require specifying regional endpoints when creating the service# client as shown in https://cloud.google.com/ruby/docs/reference.\n## This is an auto-generated example demonstrating basic usage of# Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client#deploy_processor_version.#def deploy_processor_version\u00a0 # Create a client object. The client can be reused for multiple calls.\u00a0 client = Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client.new\u00a0 # Create a request. To set request fields, pass in keyword arguments.\u00a0 request = Google::Cloud::DocumentAI::V1::DeployProcessorVersionRequest.new\u00a0 # Call the deploy_processor_version method.\u00a0 result = client.deploy_processor_version request\u00a0 # The returned object is of type Gapic::Operation. You can use it to\u00a0 # check the status of an operation, cancel it, or wait for results.\u00a0 # Here is how to wait for a response.\u00a0 result.wait_until_done! timeout: 60\u00a0 if result.response?\u00a0 \u00a0 p result.response\u00a0 else\u00a0 \u00a0 puts \"No response received.\"\u00a0 endend\n```\n## Undeploy a processor version\nAfter [creating a new processor version](/document-ai/workbench/docs/training-overview) with Document AI Workbench and deploying it, you can undeploy it if you do not want the processor version to be able to handle processing requests.\n**Note:** You cannot change the deployment status for pretrained processor versions or the current default version.\n- In the Google Cloud console, in the Document AI section, go to the **Processors** page. [Go to the Processors page](https://console.cloud.google.com/ai/document-ai/processors) \n- From the list of processors, click the name of the processor that you want to view details for.\n- In the processor's **Manage Versions** (or **Deploy & use** ) tab, select the checkbox next to the processor version you want to undeploy.\n- Click **Undeploy** , then again click **Undeploy** on the dialog window. This process takes a few minutes.\nThis sample shows how to undeploy a processor version for your processor using the [processorVersions.undeploy](/document-ai/docs/reference/rest/v1/projects.locations.processors.processorVersions/undeploy) method.\nBefore using any of the request data, make the following replacements:- : your processor's [location](/document-ai/docs/regions) , for example:- `us`- United States\n- `eu`- European Union\n- : Your Google Cloud project ID.\n- : the ID of your custom processor.\n- : the processor version identifier.\nHTTP method and URL:\n```\nPOST https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION:undeploy\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d \"\" \\ \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION:undeploy\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -Uri \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION:undeploy\" | Select-Object -Expand Content\n```\nThe response is a [long running operation](/document-ai/docs/long-running-operations) . To poll the long-running operation, call [operations.get](/document-ai/docs/reference/rest/v1/projects.locations.operations/get) \nThe [UndeployProcessorVersionMetadata](/document-ai/docs/reference/rest/Shared.Types/UndeployProcessorVersionMetadata) in the response indicates the state of the operation.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION/operations/OPERATION\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.documentai.v1.UndeployProcessorVersionMetadata\",\n \"commonMetadata\": {\n  \"state\": \"SUCCEEDED\",\n  \"createTime\": \"2022-08-29T16:27:00.195539Z\",\n  \"updateTime\": \"2022-08-29T16:32:01.963962Z\",\n  \"resource\": \"projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION\"\n }\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.cloud.documentai.v1.UndeployProcessorVersionResponse\"\n }\n}\n```\nFor more information, see the [Document AI C# API reference documentation](/dotnet/docs/reference/Google.Cloud.DocumentAI.V1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-dotnet/blob/HEAD/apis/Google.Cloud.DocumentAI.V1/Google.Cloud.DocumentAI.V1.GeneratedSnippets/DocumentProcessorServiceClient.UndeployProcessorVersionRequestObjectSnippet.g.cs) \n```\nusing Google.Cloud.DocumentAI.V1;using Google.LongRunning;public sealed partial class GeneratedDocumentProcessorServiceClientSnippets{\u00a0 \u00a0 /// <summary>Snippet for UndeployProcessorVersion</summary>\u00a0 \u00a0 /// <remarks>\u00a0 \u00a0 /// This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 /// It will require modifications to work:\u00a0 \u00a0 /// - It may require correct/in-range values for request initialization.\u00a0 \u00a0 /// - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 /// \u00a0 https://cloud.google.com/dotnet/docs/reference/help/client-configuration#endpoint.\u00a0 \u00a0 /// </remarks>\u00a0 \u00a0 public void UndeployProcessorVersionRequestObject()\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create client\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient documentProcessorServiceClient = DocumentProcessorServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s)\u00a0 \u00a0 \u00a0 \u00a0 UndeployProcessorVersionRequest request = new UndeployProcessorVersionRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProcessorVersionName = ProcessorVersionName.FromProjectLocationProcessorProcessorVersion(\"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\", \"[PROCESSOR_VERSION]\"),\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request\u00a0 \u00a0 \u00a0 \u00a0 Operation<UndeployProcessorVersionResponse, UndeployProcessorVersionMetadata> response = documentProcessorServiceClient.UndeployProcessorVersion(request);\u00a0 \u00a0 \u00a0 \u00a0 // Poll until the returned long-running operation is complete\u00a0 \u00a0 \u00a0 \u00a0 Operation<UndeployProcessorVersionResponse, UndeployProcessorVersionMetadata> completedResponse = response.PollUntilCompleted();\u00a0 \u00a0 \u00a0 \u00a0 // Retrieve the operation result\u00a0 \u00a0 \u00a0 \u00a0 UndeployProcessorVersionResponse result = completedResponse.Result;\u00a0 \u00a0 \u00a0 \u00a0 // Or get the name of the operation\u00a0 \u00a0 \u00a0 \u00a0 string operationName = response.Name;\u00a0 \u00a0 \u00a0 \u00a0 // This name can be stored, then the long-running operation retrieved later by name\u00a0 \u00a0 \u00a0 \u00a0 Operation<UndeployProcessorVersionResponse, UndeployProcessorVersionMetadata> retrievedResponse = documentProcessorServiceClient.PollOnceUndeployProcessorVersion(operationName);\u00a0 \u00a0 \u00a0 \u00a0 // Check if the retrieved long-running operation has completed\u00a0 \u00a0 \u00a0 \u00a0 if (retrievedResponse.IsCompleted)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // If it has completed, then access the result\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 UndeployProcessorVersionResponse retrievedResult = retrievedResponse.Result;\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }}\n```For more information, see the [Document AI Go API reference documentation](/go/docs/reference/cloud.google.com/go/documentai/latest/apiv1) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-go/blob/HEAD/internal/generated/snippets/documentai/apiv1/DocumentProcessorClient/UndeployProcessorVersion/main.go) \n```\npackage mainimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 documentai \"cloud.google.com/go/documentai/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 documentaipb \"cloud.google.com/go/documentai/apiv1/documentaipb\")func main() {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 \u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 \u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 \u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in:\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options\u00a0 \u00a0 \u00a0 \u00a0 c, err := documentai.NewDocumentProcessorClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer c.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &documentaipb.UndeployProcessorVersionRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Fill request struct fields.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // See https://pkg.go.dev/cloud.google.com/go/documentai/apiv1/documentaipb#UndeployProcessorVersionRequest.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := c.UndeployProcessorVersion(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 resp, err := op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 // TODO: Use resp.\u00a0 \u00a0 \u00a0 \u00a0 _ = resp}\n```For more information, see the [Document AI Java API reference documentation](/java/docs/reference/google-cloud-document-ai/latest/overview) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-java/blob/HEAD/java-document-ai/samples/snippets/generated/com/google/cloud/documentai/v1/documentprocessorservice/undeployprocessorversion/SyncUndeployProcessorVersion.java) \n```\nimport com.google.cloud.documentai.v1.DocumentProcessorServiceClient;import com.google.cloud.documentai.v1.ProcessorVersionName;import com.google.cloud.documentai.v1.UndeployProcessorVersionRequest;import com.google.cloud.documentai.v1.UndeployProcessorVersionResponse;public class SyncUndeployProcessorVersion {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 syncUndeployProcessorVersion();\u00a0 }\u00a0 public static void syncUndeployProcessorVersion() throws Exception {\u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 // https://cloud.google.com/java/docs/setup#configure_endpoints_for_the_client_library\u00a0 \u00a0 try (DocumentProcessorServiceClient documentProcessorServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient.create()) {\u00a0 \u00a0 \u00a0 UndeployProcessorVersionRequest request =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 UndeployProcessorVersionRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setName(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProcessorVersionName.of(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\", \"[PROCESSOR_VERSION]\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 UndeployProcessorVersionResponse response =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 documentProcessorServiceClient.undeployProcessorVersionAsync(request).get();\u00a0 \u00a0 }\u00a0 }}\n```For more information, see the [Document AI Python API reference documentation](/python/docs/reference/documentai/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/documentai/snippets/undeploy_processor_version_sample.py) \n```\nfrom google.api_core.client_options import ClientOptionsfrom google.api_core.exceptions import FailedPreconditionfrom google.api_core.exceptions import InvalidArgumentfrom google.cloud import documentai \u00a0# type: ignore# TODO(developer): Uncomment these variables before running the sample.# project_id = 'YOUR_PROJECT_ID'# location = 'YOUR_PROCESSOR_LOCATION' # Format is 'us' or 'eu'# processor_id = 'YOUR_PROCESSOR_ID' # Create processor before running sample# processor_version_id = 'YOUR_PROCESSOR_VERSION_ID'def undeploy_processor_version_sample(\u00a0 \u00a0 project_id: str, location: str, processor_id: str, processor_version_id: str) -> None:\u00a0 \u00a0 # You must set the api_endpoint if you use a location other than 'us'.\u00a0 \u00a0 opts = ClientOptions(api_endpoint=f\"{location}-documentai.googleapis.com\")\u00a0 \u00a0 client = documentai.DocumentProcessorServiceClient(client_options=opts)\u00a0 \u00a0 # The full resource name of the processor version\u00a0 \u00a0 # e.g.: projects/project_id/locations/location/processors/processor_id/processorVersions/processor_version_id\u00a0 \u00a0 name = client.processor_version_path(\u00a0 \u00a0 \u00a0 \u00a0 project_id, location, processor_id, processor_version_id\u00a0 \u00a0 )\u00a0 \u00a0 # Make UndeployProcessorVersion request\u00a0 \u00a0 try:\u00a0 \u00a0 \u00a0 \u00a0 operation = client.undeploy_processor_version(name=name)\u00a0 \u00a0 \u00a0 \u00a0 # Print operation details\u00a0 \u00a0 \u00a0 \u00a0 print(operation.operation.name)\u00a0 \u00a0 \u00a0 \u00a0 # Wait for operation to complete\u00a0 \u00a0 \u00a0 \u00a0 operation.result()\u00a0 \u00a0 # Undeploy request will fail if the\u00a0 \u00a0 # processor version is already undeployed\u00a0 \u00a0 # or if a request is made on a pretrained processor version\u00a0 \u00a0 except (FailedPrecondition, InvalidArgument) as e:\u00a0 \u00a0 \u00a0 \u00a0 print(e.message)\n```For more information, see the [Document AI Ruby API reference documentation](/ruby/docs/reference/google-cloud-document_ai-v1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-document_ai-v1/snippets/document_processor_service/undeploy_processor_version.rb) \n```\nrequire \"google/cloud/document_ai/v1\"\n### Snippet for the undeploy_processor_version call in the DocumentProcessorService service\n## This snippet has been automatically generated and should be regarded as a code# template only. It will require modifications to work:# - It may require correct/in-range values for request initialization.# - It may require specifying regional endpoints when creating the service# client as shown in https://cloud.google.com/ruby/docs/reference.\n## This is an auto-generated example demonstrating basic usage of# Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client#undeploy_processor_version.#def undeploy_processor_version\u00a0 # Create a client object. The client can be reused for multiple calls.\u00a0 client = Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client.new\u00a0 # Create a request. To set request fields, pass in keyword arguments.\u00a0 request = Google::Cloud::DocumentAI::V1::UndeployProcessorVersionRequest.new\u00a0 # Call the undeploy_processor_version method.\u00a0 result = client.undeploy_processor_version request\u00a0 # The returned object is of type Gapic::Operation. You can use it to\u00a0 # check the status of an operation, cancel it, or wait for results.\u00a0 # Here is how to wait for a response.\u00a0 result.wait_until_done! timeout: 60\u00a0 if result.response?\u00a0 \u00a0 p result.response\u00a0 else\u00a0 \u00a0 puts \"No response received.\"\u00a0 endend\n```\n## Delete a processor version\nAfter [creating a new processor version](/document-ai/workbench/docs/training-overview) with Document AI Workbench, you can delete it if you have no further use for the processor version.\n**Note:** You cannot delete pretrained processor versions or the current default version.\n- In the Google Cloud console, in the Document AI section, go to the **Processors** page. [Go to the Processors page](https://console.cloud.google.com/ai/document-ai/processors) \n- From the list of processors, click the name of the processor that you want to view details for.\n- In the processor's **Manage Versions** (or **Deploy & use** ) tab, click the action menu more_vert next to the processor version you want to delete.\n- Click **Delete** , then again click **Delete** on the dialog window.\nThis sample shows how to delete a processor version for your processor using the [processorVersions.delete](/document-ai/docs/reference/rest/v1/projects.locations.processors.processorVersions/delete) method.\nBefore using any of the request data, make the following replacements:- : your processor's [location](/document-ai/docs/regions) , for example:- `us`- United States\n- `eu`- European Union\n- : Your Google Cloud project ID.\n- : the ID of your custom processor.\n- : the processor version identifier.\nHTTP method and URL:\n```\nDELETE https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\ncurl -X DELETE \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nExecute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method DELETE ` -Headers $headers ` -Uri \"https://LOCATION-documentai.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION\" | Select-Object -Expand Content\n```\nThe response is a [long running operation](/document-ai/docs/long-running-operations) . To poll the long-running operation, call [operations.get](/document-ai/docs/reference/rest/v1/projects.locations.operations/get) \nThe [DeleteProcessorVersionMetadata](/document-ai/docs/reference/rest/Shared.Types/DeleteProcessorVersionMetadata) in the response indicates the state of the operation.\n```\n{\n \"name\": \"projects/PROJECT_ID/locations/LOCATION/operations/OPERATION\",\n \"metadata\": {\n \"@type\": \"type.googleapis.com/google.cloud.documentai.v1.DeleteProcessorVersionMetadata\",\n \"commonMetadata\": {\n  \"state\": \"SUCCEEDED\",\n  \"createTime\": \"2022-08-29T16:27:00.195539Z\",\n  \"updateTime\": \"2022-08-29T16:32:01.963962Z\",\n  \"resource\": \"projects/PROJECT_ID/locations/LOCATION/processors/PROCESSOR_ID/processorVersions/PROCESSOR_VERSION\"\n }\n },\n \"done\": true,\n \"response\": {\n \"@type\": \"type.googleapis.com/google.protobuf.Empty\"\n }\n}\n```\nFor more information, see the [Document AI C# API reference documentation](/dotnet/docs/reference/Google.Cloud.DocumentAI.V1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-dotnet/blob/HEAD/apis/Google.Cloud.DocumentAI.V1/Google.Cloud.DocumentAI.V1.GeneratedSnippets/DocumentProcessorServiceClient.DeleteProcessorVersionRequestObjectSnippet.g.cs) \n```\nusing Google.Cloud.DocumentAI.V1;using Google.LongRunning;using Google.Protobuf.WellKnownTypes;public sealed partial class GeneratedDocumentProcessorServiceClientSnippets{\u00a0 \u00a0 /// <summary>Snippet for DeleteProcessorVersion</summary>\u00a0 \u00a0 /// <remarks>\u00a0 \u00a0 /// This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 /// It will require modifications to work:\u00a0 \u00a0 /// - It may require correct/in-range values for request initialization.\u00a0 \u00a0 /// - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 /// \u00a0 https://cloud.google.com/dotnet/docs/reference/help/client-configuration#endpoint.\u00a0 \u00a0 /// </remarks>\u00a0 \u00a0 public void DeleteProcessorVersionRequestObject()\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 // Create client\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient documentProcessorServiceClient = DocumentProcessorServiceClient.Create();\u00a0 \u00a0 \u00a0 \u00a0 // Initialize request argument(s)\u00a0 \u00a0 \u00a0 \u00a0 DeleteProcessorVersionRequest request = new DeleteProcessorVersionRequest\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProcessorVersionName = ProcessorVersionName.FromProjectLocationProcessorProcessorVersion(\"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\", \"[PROCESSOR_VERSION]\"),\u00a0 \u00a0 \u00a0 \u00a0 };\u00a0 \u00a0 \u00a0 \u00a0 // Make the request\u00a0 \u00a0 \u00a0 \u00a0 Operation<Empty, DeleteProcessorVersionMetadata> response = documentProcessorServiceClient.DeleteProcessorVersion(request);\u00a0 \u00a0 \u00a0 \u00a0 // Poll until the returned long-running operation is complete\u00a0 \u00a0 \u00a0 \u00a0 Operation<Empty, DeleteProcessorVersionMetadata> completedResponse = response.PollUntilCompleted();\u00a0 \u00a0 \u00a0 \u00a0 // Retrieve the operation result\u00a0 \u00a0 \u00a0 \u00a0 Empty result = completedResponse.Result;\u00a0 \u00a0 \u00a0 \u00a0 // Or get the name of the operation\u00a0 \u00a0 \u00a0 \u00a0 string operationName = response.Name;\u00a0 \u00a0 \u00a0 \u00a0 // This name can be stored, then the long-running operation retrieved later by name\u00a0 \u00a0 \u00a0 \u00a0 Operation<Empty, DeleteProcessorVersionMetadata> retrievedResponse = documentProcessorServiceClient.PollOnceDeleteProcessorVersion(operationName);\u00a0 \u00a0 \u00a0 \u00a0 // Check if the retrieved long-running operation has completed\u00a0 \u00a0 \u00a0 \u00a0 if (retrievedResponse.IsCompleted)\u00a0 \u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // If it has completed, then access the result\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Empty retrievedResult = retrievedResponse.Result;\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }}\n```For more information, see the [Document AI Go API reference documentation](/go/docs/reference/cloud.google.com/go/documentai/latest/apiv1) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-go/blob/HEAD/internal/generated/snippets/documentai/apiv1/DocumentProcessorClient/DeleteProcessorVersion/main.go) \n```\npackage mainimport (\u00a0 \u00a0 \u00a0 \u00a0 \"context\"\u00a0 \u00a0 \u00a0 \u00a0 documentai \"cloud.google.com/go/documentai/apiv1\"\u00a0 \u00a0 \u00a0 \u00a0 documentaipb \"cloud.google.com/go/documentai/apiv1/documentaipb\")func main() {\u00a0 \u00a0 \u00a0 \u00a0 ctx := context.Background()\u00a0 \u00a0 \u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 \u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 \u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 \u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in:\u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options\u00a0 \u00a0 \u00a0 \u00a0 c, err := documentai.NewDocumentProcessorClient(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 defer c.Close()\u00a0 \u00a0 \u00a0 \u00a0 req := &documentaipb.DeleteProcessorVersionRequest{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Fill request struct fields.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // See https://pkg.go.dev/cloud.google.com/go/documentai/apiv1/documentaipb#DeleteProcessorVersionRequest.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 op, err := c.DeleteProcessorVersion(ctx, req)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 err = op.Wait(ctx)\u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO: Handle error.\u00a0 \u00a0 \u00a0 \u00a0 }}\n```For more information, see the [Document AI Java API reference documentation](/java/docs/reference/google-cloud-document-ai/latest/overview) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-java/blob/HEAD/java-document-ai/samples/snippets/generated/com/google/cloud/documentai/v1/documentprocessorservice/deleteprocessorversion/SyncDeleteProcessorVersion.java) \n```\nimport com.google.cloud.documentai.v1.DeleteProcessorVersionRequest;import com.google.cloud.documentai.v1.DocumentProcessorServiceClient;import com.google.cloud.documentai.v1.ProcessorVersionName;import com.google.protobuf.Empty;public class SyncDeleteProcessorVersion {\u00a0 public static void main(String[] args) throws Exception {\u00a0 \u00a0 syncDeleteProcessorVersion();\u00a0 }\u00a0 public static void syncDeleteProcessorVersion() throws Exception {\u00a0 \u00a0 // This snippet has been automatically generated and should be regarded as a code template only.\u00a0 \u00a0 // It will require modifications to work:\u00a0 \u00a0 // - It may require correct/in-range values for request initialization.\u00a0 \u00a0 // - It may require specifying regional endpoints when creating the service client as shown in\u00a0 \u00a0 // https://cloud.google.com/java/docs/setup#configure_endpoints_for_the_client_library\u00a0 \u00a0 try (DocumentProcessorServiceClient documentProcessorServiceClient =\u00a0 \u00a0 \u00a0 \u00a0 DocumentProcessorServiceClient.create()) {\u00a0 \u00a0 \u00a0 DeleteProcessorVersionRequest request =\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 DeleteProcessorVersionRequest.newBuilder()\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .setName(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ProcessorVersionName.of(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"[PROJECT]\", \"[LOCATION]\", \"[PROCESSOR]\", \"[PROCESSOR_VERSION]\")\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .toString())\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 .build();\u00a0 \u00a0 \u00a0 documentProcessorServiceClient.deleteProcessorVersionAsync(request).get();\u00a0 \u00a0 }\u00a0 }}\n```For more information, see the [Document AI Python API reference documentation](/python/docs/reference/documentai/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/documentai/snippets/delete_processor_version_sample.py) \n```\nfrom google.api_core.client_options import ClientOptionsfrom google.api_core.exceptions import FailedPreconditionfrom google.api_core.exceptions import InvalidArgumentfrom google.cloud import documentai \u00a0# type: ignore# TODO(developer): Uncomment these variables before running the sample.# project_id = 'YOUR_PROJECT_ID'# location = 'YOUR_PROCESSOR_LOCATION' # Format is 'us' or 'eu'# processor_id = 'YOUR_PROCESSOR_ID' # Create processor before running sample# processor_version_id = 'YOUR_PROCESSOR_VERSION_ID'def delete_processor_version_sample(\u00a0 \u00a0 project_id: str, location: str, processor_id: str, processor_version_id: str) -> None:\u00a0 \u00a0 # You must set the api_endpoint if you use a location other than 'us'.\u00a0 \u00a0 opts = ClientOptions(api_endpoint=f\"{location}-documentai.googleapis.com\")\u00a0 \u00a0 client = documentai.DocumentProcessorServiceClient(client_options=opts)\u00a0 \u00a0 # The full resource name of the processor version\u00a0 \u00a0 # e.g.: projects/project_id/locations/location/processors/processor_id/processorVersions/processor_version_id\u00a0 \u00a0 name = client.processor_version_path(\u00a0 \u00a0 \u00a0 \u00a0 project_id, location, processor_id, processor_version_id\u00a0 \u00a0 )\u00a0 \u00a0 # Make DeleteProcessorVersion request\u00a0 \u00a0 try:\u00a0 \u00a0 \u00a0 \u00a0 operation = client.delete_processor_version(name=name)\u00a0 \u00a0 \u00a0 \u00a0 # Print operation details\u00a0 \u00a0 \u00a0 \u00a0 print(operation.operation.name)\u00a0 \u00a0 \u00a0 \u00a0 # Wait for operation to complete\u00a0 \u00a0 \u00a0 \u00a0 operation.result()\u00a0 \u00a0 # Delete request will fail if the\u00a0 \u00a0 # processor version doesn't exist\u00a0 \u00a0 # or if a request is made on a pretrained processor version\u00a0 \u00a0 # or the default processor version\u00a0 \u00a0 except (FailedPrecondition, InvalidArgument) as e:\u00a0 \u00a0 \u00a0 \u00a0 print(e.message)\n```For more information, see the [Document AI Ruby API reference documentation](/ruby/docs/reference/google-cloud-document_ai-v1/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/googleapis/google-cloud-ruby/blob/HEAD/google-cloud-document_ai-v1/snippets/document_processor_service/delete_processor_version.rb) \n```\nrequire \"google/cloud/document_ai/v1\"\n### Snippet for the delete_processor_version call in the DocumentProcessorService service\n## This snippet has been automatically generated and should be regarded as a code# template only. It will require modifications to work:# - It may require correct/in-range values for request initialization.# - It may require specifying regional endpoints when creating the service# client as shown in https://cloud.google.com/ruby/docs/reference.\n## This is an auto-generated example demonstrating basic usage of# Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client#delete_processor_version.#def delete_processor_version\u00a0 # Create a client object. The client can be reused for multiple calls.\u00a0 client = Google::Cloud::DocumentAI::V1::DocumentProcessorService::Client.new\u00a0 # Create a request. To set request fields, pass in keyword arguments.\u00a0 request = Google::Cloud::DocumentAI::V1::DeleteProcessorVersionRequest.new\u00a0 # Call the delete_processor_version method.\u00a0 result = client.delete_processor_version request\u00a0 # The returned object is of type Gapic::Operation. You can use it to\u00a0 # check the status of an operation, cancel it, or wait for results.\u00a0 # Here is how to wait for a response.\u00a0 result.wait_until_done! timeout: 60\u00a0 if result.response?\u00a0 \u00a0 p result.response\u00a0 else\u00a0 \u00a0 puts \"No response received.\"\u00a0 endend\n```\n## Import a processor version\nAfter [creating a new processor](/document-ai/workbench/docs/training-overview) with Document AI Workbench, you can import a [processor version](/document-ai/docs/reference/rest/v1/projects.locations.processors.processorVersions#resource:-processorversion) from the same or a different project.\nThe `destination project` is where you begin the import and where the processor version becomes available after the import.\nThe `source project` is where the source processor version lives.\nThe source/destination processors must meet the following requirements to import:\n- Processor types must match. Examples:`CUSTOM_EXTRACTION_PROCESSOR`or`INVOICE_PROCESSOR`\n- Processor schemas must not conflict.\n- Destination processor can have existing datasets/versions.\n- Destination processor must be in`ENABLED`state.\n- Source processor version must be in one of the following states:- `DEPLOYED`\n- `DEPLOYING`\n- `UNDEPLOYED`\n- `UNDEPLOYING`\n- Source processor version must not be a fine-tuned processor version.\nYou must grant the [DocumentAI Core Service Agent](/iam/docs/service-agents) of the destination project [Document AI Editor](/document-ai/docs/access-control/iam-roles) permission on the source project to avoid a permission denied error.\n**Note:** This applies if importing processor versions within the same project or between separate projects.\nComplete the following steps to set up permission before importing a processor version:\n- Look up [DocumentAI Core Service Agent](/iam/docs/service-agents) and fill in your destination project number. The DocumentAI Core Service Agent is formatted like an email address. For example: `service-123@gcp-sa-prod-dai-core.iam.gserviceaccount.com`\n- Open the IAM page in the Google Cloud console. [Openthe IAM page](https://console.cloud.google.com/iam-admin/iam) \n- Select your source project.\n- Click grant access.\n- Add the destination project's DocumentAI Core Service Agent as a new principal, and assign [Document AI Editor](https://cloud.google.com/document-ai/docs/access-control/iam-roles) role.Use the following `gcloud` command to grant the necessary permissions:\n```\ngcloud projects add-iam-policy-binding SOURCE_PROJECT \\\u00a0 \u00a0 --member=serviceAccount:service-DESTINATION_PROJECT NUMBER@gcp-sa-prod-dai-core.iam.gserviceaccount.com \\\u00a0 \u00a0 --role=roles/documentai.editor\n```\nProvide the following values:- ``: The source project number or project id.\n- ``: The destination project **number** .After updating the permissions, use the following steps to import a processor version:\n- In the Google Cloud console, in the Document AI section, go to the **Processors** page. [Go to the Processors page](https://console.cloud.google.com/ai/document-ai/processors) \n- From the list of processors, click the name of the processor that you want to import a processor version to as a destination processor.\n- Go to the **Manage Versions** (or **Deploy & use** ) tab, and click **Import** .\n- Choose the project, the processor, and the processor version as the source processor version in the window.\n- Click **IMPORT** button in the window, and the import operation will start.\nThis sample shows you how to use the [processorVersions.importProcessorVersion](/document-ai/docs/reference/rest/v1beta3/projects.locations.processors.processorVersions/importProcessorVersion) method to import a processor version.\nBefore using any of the request data, make the following replacements:- Destination Project- : your destination Google Cloud project ID.\n- : your destination processor's [location](/document-ai/docs/regions) .\n- : the ID of your destination processor.\n- Source Project- : your source Google Cloud project ID.\n- : the source processor's location.\n- : the ID of your source processor.\n- : the source processor version to import.\nHTTP method and URL:\n```\nPOST https://DESTINATION_LOCATION-documentai.googleapis.com/v1beta3/projects/DESTINATION_PROJECT_ID/locations/DESTINATION_LOCATION/processors/DESTINATION_PROCESSOR_ID/processorVersions:importProcessorVersion\n```\nRequest JSON body:\n```\n{\n \"processorVersionSource\": \"projects/SOURCE_PROJECT_ID/locations/SOURCE_LOCATION/processors/SOURCE_PROCESSOR_ID/processorVersions/SOURCE_PROCESSOR_VERSION\"\n}\n```\nTo send your request, choose one of these options:\n **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\ncurl -X POST \\ -H \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ -H \"Content-Type: application/json; charset=utf-8\" \\ -d @request.json \\ \"https://DESTINATION_LOCATION-documentai.googleapis.com/v1beta3/projects/DESTINATION_PROJECT_ID/locations/DESTINATION_LOCATION/processors/DESTINATION_PROCESSOR_ID/processorVersions:importProcessorVersion\"\n``` **Note:** The following command assumes that you have logged in to  the`gcloud`CLI with your user account by running [gcloud init](/sdk/gcloud/reference/init) or [gcloud auth login](/sdk/gcloud/reference/auth/login) ,  or by using [Cloud Shell](/shell/docs) ,  which automatically logs you into the`gcloud`CLI.  You can check the currently active account by running [gcloud auth list](/sdk/gcloud/reference/auth/list) .\nSave the request body in a file named `request.json` ,  and execute the following command:\n```\n$cred = gcloud auth print-access-token$headers = @{ \"Authorization\" = \"Bearer $cred\" }Invoke-WebRequest ` -Method POST ` -Headers $headers ` -ContentType: \"application/json; charset=utf-8\" ` -InFile request.json ` -Uri \"https://DESTINATION_LOCATION-documentai.googleapis.com/v1beta3/projects/DESTINATION_PROJECT_ID/locations/DESTINATION_LOCATION/processors/DESTINATION_PROCESSOR_ID/processorVersions:importProcessorVersion\" | Select-Object -Expand Content\n```\nYou should receive a JSON response similar to the following:\n```\n{\n \"name\": \"projects/DESTINATION_PROJECT_ID/locations/DESTINATION_LOCATION/operations/OPERATION_ID\"\n}\n```", "guide": "Document AI"}