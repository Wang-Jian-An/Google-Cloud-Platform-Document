{"title": "Document AI - Train processor", "url": "https://cloud.google.com/document-ai/docs/workbench/train-processor?hl=zh-cn", "abstract": "# Document AI - Train processor\n# Train processor\nThis page shows you how to train a new processor version from scratch, or uptrain a new processor version based on an existing one.\nIt assumes that you have already [created a processor](https://cloud.google.com/document-ai/docs/create-processor) that supports training or uptraining, and that you have [labeled your dataset](/document-ai/docs/workbench/label-documents) .\n", "content": "## Train processor version\n- In the Google Cloud console, go to your processor's **Train** tab. [Go to the Processors Gallery](https://console.cloud.google.com/ai/document-ai/processors) \n- Click **Edit Schema** to open the **Manage Labels** page. Verify the processor's labels.The labels that are at the time of training determine the entities that your new processor version will extract. If a label is inactive in the schema, the processor version will not extract that label, even if the documents are labeled.\n- On the **Train** tab, click **View Label Stats** and verify your test and training set. Documents that are , , or are excluded from training and evaluation.\n- Click **Train new version** .The **Version Name** defines the `name` field of the [processorVersion](/document-ai/docs/reference/rest/v1/projects.locations.processors.processorVersions) .\n- Click **Start training** and wait for your new processor version to be trained and evaluated.You can monitor training progress on the **ManageVersions** tab (shown below).\n- Click the **Evaluate & Test** tab to see how well your new processor version performed on the test set. For more information, see [Evaluate processor version](/document-ai/docs/workbench/evaluate) .\nFor more information, see the [Document AI Python API reference documentation](/python/docs/reference/documentai/latest) .\nTo authenticate to Document AI, set up Application Default Credentials.  For more information, see [Set up authentication for a local development environment](/docs/authentication/provide-credentials-adc#local-dev) .\n [View on GitHub](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/documentai/snippets/train_processor_version_sample.py) \n```\nfrom typing import Optionalfrom google.api_core.client_options import ClientOptionsfrom google.cloud import documentai \u00a0# type: ignore# TODO(developer): Uncomment these variables before running the sample.# project_id = 'YOUR_PROJECT_ID'# location = 'YOUR_PROCESSOR_LOCATION' # Format is 'us' or 'eu'# processor_id = 'YOUR_PROCESSOR_ID'# processor_version_display_name = 'new-processor-version'# train_data_uri = 'gs://bucket/directory/' # (Optional)# test_data_uri = 'gs://bucket/directory/' # (Optional)def train_processor_version_sample(\u00a0 \u00a0 project_id: str,\u00a0 \u00a0 location: str,\u00a0 \u00a0 processor_id: str,\u00a0 \u00a0 processor_version_display_name: str,\u00a0 \u00a0 train_data_uri: Optional[str] = None,\u00a0 \u00a0 test_data_uri: Optional[str] = None,) -> None:\u00a0 \u00a0 # You must set the api_endpoint if you use a location other than 'us', e.g.:\u00a0 \u00a0 opts = ClientOptions(api_endpoint=f\"{location}-documentai.googleapis.com\")\u00a0 \u00a0 client = documentai.DocumentProcessorServiceClient(client_options=opts)\u00a0 \u00a0 # The full resource name of the processor\u00a0 \u00a0 # e.g. `projects/{project_id}/locations/{location}/processors/{processor_id}\u00a0 \u00a0 parent = client.processor_path(project_id, location, processor_id)\u00a0 \u00a0 processor_version = documentai.ProcessorVersion(\u00a0 \u00a0 \u00a0 \u00a0 display_name=processor_version_display_name\u00a0 \u00a0 )\u00a0 \u00a0 # If train/test data is not supplied, the default sets in the Cloud Console will be used\u00a0 \u00a0 input_data = documentai.TrainProcessorVersionRequest.InputData(\u00a0 \u00a0 \u00a0 \u00a0 training_documents=documentai.BatchDocumentsInputConfig(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gcs_prefix=documentai.GcsPrefix(gcs_uri_prefix=train_data_uri)\u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 \u00a0 \u00a0 test_documents=documentai.BatchDocumentsInputConfig(\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gcs_prefix=documentai.GcsPrefix(gcs_uri_prefix=test_data_uri)\u00a0 \u00a0 \u00a0 \u00a0 ),\u00a0 \u00a0 )\u00a0 \u00a0 request = documentai.TrainProcessorVersionRequest(\u00a0 \u00a0 \u00a0 \u00a0 parent=parent, processor_version=processor_version, input_data=input_data\u00a0 \u00a0 )\u00a0 \u00a0 operation = client.train_processor_version(request=request)\u00a0 \u00a0 # Print operation details\u00a0 \u00a0 print(operation.operation.name)\u00a0 \u00a0 # Wait for operation to complete\u00a0 \u00a0 response = documentai.TrainProcessorVersionResponse(operation.result())\u00a0 \u00a0 metadata = documentai.TrainProcessorVersionMetadata(operation.metadata)\u00a0 \u00a0 print(f\"New Processor Version:{response.processor_version}\")\u00a0 \u00a0 print(f\"Training Set Validation: {metadata.training_dataset_validation}\")\u00a0 \u00a0 print(f\"Test Set Validation: {metadata.test_dataset_validation}\")\n```\n## Deploy and use the processor version\nYou can deploy and manage your processor versions just like any other processor version. For more information, see [Managing processor versions](https://cloud.google.com/document-ai/docs/manage-processor-versions) .\nOnce deployed, you can [Send a processing request](https://cloud.google.com/document-ai/docs/send-request) to your custom processor.\n## Disable or delete a processor\nIf you no longer want to use a processor, you can disable or delete it. If you disable a processor, you can re-enable it. If you delete a processor, you cannot recover it.\n- In the **Document AI** panel on the left, click **My processors** .\n- Click the vertical dots to the right of the processor name. Click **Disable processor** or **Delete processor** .\nFor more information, see [Managing processor versions](https://cloud.google.com/document-ai/docs/manage-processor-versions) .\n## Encryption of training data\nDocument AI training data is saved in Cloud Storage and can be encrypted with [Customer-managed encryption keys](/storage/docs/encryption/customer-managed-keys) if desired.\n## Deletion of training data\nAfter a Document AI training job is completed, all training data saved in Cloud Storage will expire after a two-day retention period. Subsequent data deletion activities respect the process described in [Data deletion on Google Cloud](/docs/security/deletion) .\n## Pricing\nThere is no cost for training or uptraining. You pay for hosting and prediction. For more information, see [Document AI Pricing](/document-ai/docs/workbench/pricing) .\n## What's next\n[CDE template-based training](/document-ai/docs/workbench/cde-template-based-guide)", "guide": "Document AI"}