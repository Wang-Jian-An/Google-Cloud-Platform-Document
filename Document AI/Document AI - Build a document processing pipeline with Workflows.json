{"title": "Document AI - Build a document processing pipeline with Workflows", "url": "https://cloud.google.com/document-ai/docs/workflows?hl=zh-cn", "abstract": "# Document AI - Build a document processing pipeline with Workflows\n# Build a document processing pipeline with Workflows\nIf you are using Document AI to build workflows that involve several steps to process documents, you might want to use serverless orchestration to manage your workflow.\n [Workflows](/workflows) links a series of tasks together in an order you define. It requires no infrastructure management and scales seamlessly on demand, including scaling down to zero. With its pay-per-use pricing model, you only pay for execution time.\nWorkflows provides a built-in [connector for the Document AI API](/workflows/docs/reference/googleapis/documentai/Overview) . Connectors don't require additional code aside from defining the steps using a config file. Connectors handle the formatting of requests, hiding the details of the API. Connectors also provide built-in behavior for authentication, handling retries and [long-running operations](/workflows/docs/connectors#lro) .\nFor more information, see [Understand connectors](/workflows/docs/connectors) .\nThis guide processes a set of sample invoices using the [Invoice Parser](/document-ai/docs/processors-list#processor_invoice-processor) processor with [batch processing](/document-ai/docs/send-request#batch-process) To follow step-by-step guidance for this task directly in the Google Cloud console, click **Guide me** :\n [Guide me](https://console.cloud.google.com/ai/document-ai?tutorial=document-ai--documentai_workflows) ", "content": "## Before you begin\n## Create an Invoice ParserUse the Google Cloud console to create a new Invoice Parser. Refer to the [creating and managing processors](/document-ai/docs/create-processor) page for more information.- In the Google Cloud console navigation menu, click **Document AI** and select **Processor Gallery** . [ProcessorGallery](https://console.cloud.google.com/ai/document-ai/processor-library) \n- In the **Processor Gallery** , **Invoice Parser** and select **Create** . \n- Enter a **Processor name** , such as `workflows-invoice-processor` .\n- Select the region ( `location` in the Document AI API) to host the processor.\n- Click **Create** . The **Processor Details** tab appears.\n- Copy your **Processor ID** . You must use this in your code later. \n## Configure output bucket in Cloud StorageWhen using [batch (asynchronous) processing](/document-ai/docs/send-request#batch-process) , the input and output files must be stored in Cloud Storage. The following bucket contains sample files to use as input for this guide:\n```\ngs://cloud-samples-data/documentai/workflows\n```\nConfigure a bucket to store the output files in your project.- Follow the [Create Buckets](/storage/docs/creating-buckets) guide in the Cloud Storage documentation to create a bucket, or use a bucket that already exists.\n- Create a [folder](/storage/docs/objects#simulated-folders) in the bucket (for example, `docai-workflows-output` ).\n## Create workflow\n- Open the **Workflows dashboard** in the Google Cloud console. [Go to the Workflows dashboard](https://console.cloud.google.com/workflows) \n- Click to create your first workflow. The **Create Workflow** page appears. \n- to `docai-workflows-quickstart` .\n- Add a description, and select a service account if you have one for this project.- If you don't have a service account, select **Create New Service Account** .- Name your service account, and select **Create and Continue** .\n- Give it the following roles:\n- `Document AI API User`\n- `Workflows Invoker`\n- `Logs Writer`\n- `Service Usage Consumer`\n- On the **Create Workflow** page, click .\n## Define workflow\n- In the , clear the default YAML and paste in the code below:```\nmain:\u00a0 params: [input]\u00a0 steps:\u00a0 \u00a0 - start:\u00a0 \u00a0 \u00a0 \u00a0 call: sys.log\u00a0 \u00a0 \u00a0 \u00a0 args:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 text: ${input}\u00a0 \u00a0 - vars:\u00a0 \u00a0 \u00a0 \u00a0 assign:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - input_gcs_bucket: ${input.inputBucket}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - output_gcs_bucket: ${input.outputBucket}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - processor_id: ${input.processorId}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - location: ${input.location}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - project_id: ${sys.get_env(\"GOOGLE_CLOUD_PROJECT_ID\")}\u00a0 \u00a0 - batch_process:\u00a0 \u00a0 \u00a0 \u00a0 call: googleapis.documentai.v1.projects.locations.processors.batchProcess\u00a0 \u00a0 \u00a0 \u00a0 args:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: ${\"projects/\" + project_id + \"/locations/\" + location + \"/processors/\" + processor_id}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 location: ${location}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 body:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 inputDocuments:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gcsPrefix:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gcsUriPrefix: ${input_gcs_bucket}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 documentOutputConfig:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gcsOutputConfig:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gcsUri: ${output_gcs_bucket}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skipHumanReview: true\u00a0 \u00a0 \u00a0 \u00a0 result: batch_process_resp\u00a0 \u00a0 - return:\u00a0 \u00a0 \u00a0 \u00a0 return: ${batch_process_resp}\n```\n- Select.\n## Test workflowNow that the workflow has been deployed, you should be on the **Workflow details** page.- Click at the top of the page to go to the **Execute workflow** page. This page allows you to test your workflow in the console.\n- Replace the placeholder variables in the following input JSON:- : The full path to output bucket and folder created earlier.\n- : The processor ID for the processor created earlier.\n- : The region for the processor created earlier.\n```\n{\u00a0 \"inputBucket\": \"gs://cloud-samples-data/documentai/workflows\",\u00a0 \"outputBucket\": \"OUTPUT_BUCKET_PATH\",\u00a0 \"processorId\": \"PROCESSOR_ID\",\u00a0 \"location\": \"LOCATION\"}\n```\n- Copy/Paste the JSON into the .\n- Click at the bottom of the workflow to test your input and wait for a moment for the process to complete.\n- Once the workflow finishes, the output JSON should look something like this.```\n{\u00a0 \"done\": true,\u00a0 \"metadata\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.documentai.v1.BatchProcessMetadata\",\u00a0 \u00a0 \"createTime\": \"2023-02-24T18:31:18.521764Z\",\u00a0 \u00a0 \"individualProcessStatuses\": [\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"humanReviewStatus\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"state\": \"SKIPPED\"\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"inputGcsSource\": \"gs://cloud-samples-data/documentai/workflows/baking_technologies_invoice.pdf\",\u00a0 \u00a0 \u00a0 \u00a0 \"outputGcsDestination\": \"OUTPUT_BUCKET_PATH/11119195367705871803/0\",\u00a0 \u00a0 \u00a0 \u00a0 \"status\": {}\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"humanReviewStatus\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"state\": \"SKIPPED\"\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"inputGcsSource\": \"gs://cloud-samples-data/documentai/workflows/generic_invoice.pdf\",\u00a0 \u00a0 \u00a0 \u00a0 \"outputGcsDestination\": \"OUTPUT_BUCKET_PATH/11119195367705871803/1\",\u00a0 \u00a0 \u00a0 \u00a0 \"status\": {}\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \u00a0 \"humanReviewStatus\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"state\": \"SKIPPED\"\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"inputGcsSource\": \"gs://cloud-samples-data/documentai/workflows/google_invoice.pdf\",\u00a0 \u00a0 \u00a0 \u00a0 \"outputGcsDestination\": \"OUTPUT_BUCKET_PATH/11119195367705871803/2\",\u00a0 \u00a0 \u00a0 \u00a0 \"status\": {}\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 ],\u00a0 \u00a0 \"state\": \"SUCCEEDED\",\u00a0 \u00a0 \"updateTime\": \"2023-02-24T18:31:52.543163Z\"\u00a0 },\u00a0 \"name\": \"projects/PROJECT_ID/locations/LOCATION/operations/11119195367705871803\",\u00a0 \"response\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.documentai.v1.BatchProcessResponse\"\u00a0 }}\n```\n- Open your output storage bucket, you will see the output for each invoice processed in a folder named after the Operation ID. \n- Within this folder there will be subfolders, one for each document processed from the input batch containing [Document](/document-ai/docs/reference/rest/v1/Document) JSON file(s).\n- You may inspect each JSON file or write code to use the relevant fields for your use case. Refer to the [handle the processing response guide](/document-ai/docs/handle-response) for more information.\n- You can now link additional steps in the workflow to further process the output, such as inserting the extracted entities into a database for analytics.\n- Refer to the [Workflows Documentation](/workflows/docs/overview) for more information on how to trigger workflows.\n## Sample ApplicationFor an example of an end-to-end application using the Document AI Connector:- Refer to this expense report demo on [GitHub](https://github.com/GoogleCloudPlatform/smart-expenses) \n- Read the companion [blog post](/blog/topics/developers-practitioners/smarter-applications-document-ai-workflows-and-cloud-functions) \n- Watch a deep dive [video](https://www.youtube.com/watch?v=Bnac6JnBGQg&t=1s) from Google Cloud Next 2021.\n## Clean upTo avoid incurring charges to your Google Cloud account for   the resources used on this page, follow these steps.\nTo avoid unnecessary Google Cloud charges, use the [Google Cloud console](https://console.cloud.google.com/) to delete your processor, bucket, workflow, and project if you do not need them.## What's next\n- Learn more about [Workflows](/workflows/docs/overview) \n- Learn more about the [Document AI Workflows Connector](/workflows/docs/reference/googleapis/documentai/Overview) \n- See a list and descriptions of currently [available processors](/document-ai/docs/processor-overview) .\n- Learn how to [handle the processing response](/document-ai/docs/handle-response) .", "guide": "Document AI"}