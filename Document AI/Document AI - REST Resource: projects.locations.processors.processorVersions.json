{"title": "Document AI - REST Resource: projects.locations.processors.processorVersions", "url": "https://cloud.google.com/document-ai/docs/reference/rest/v1beta3/projects.locations.processors.processorVersions?hl=zh-cn", "abstract": "# Document AI - REST Resource: projects.locations.processors.processorVersions\n", "content": "## Resource: ProcessorVersion\nA processor version is an implementation of a processor. Each processor can have multiple versions, pretrained by Google internally or uptrained by the customer. A processor can only have one default version at a time. Its document-processing behavior is defined by that version.| JSON representation                                                                                      |\n|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| { \"name\": string, \"displayName\": string, \"documentSchema\": { object (DocumentSchema) }, \"state\": enum (State), \"createTime\": string, \"latestEvaluation\": { object (EvaluationReference) }, \"kmsKeyName\": string, \"kmsKeyVersionName\": string, \"googleManaged\": boolean, \"deprecationInfo\": { object (DeprecationInfo) }, \"modelType\": enum (ModelType) } || Fields   | Fields.1                                                           |\n|:------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| name    | string The resource name of the processor version. Format: projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}                      |\n| displayName  | string The display name of the processor version.                                                 |\n| documentSchema | object (DocumentSchema) The schema of the processor version. Describes the output.                                         |\n| state    | enum (State) The state of the processor version.                                                 |\n| createTime  | string (Timestamp format) The time the processor version was created.A timestamp in RFC3339 UTC \"Zulu\" format, with nanosecond resolution and up to nine fractional digits. Examples: \"2014-10-02T15:01:23Z\" and \"2014-10-02T15:01:23.045123456Z\". |\n| latestEvaluation | object (EvaluationReference) The most recently invoked evaluation for the processor version.                                      |\n| kmsKeyName  | string The KMS key name used for encryption.                                                  |\n| kmsKeyVersionName | string The KMS key version with which data is encrypted.                                               |\n| googleManaged  | boolean Output only. Denotes that this ProcessorVersion is managed by Google.                                          |\n| deprecationInfo | object (DeprecationInfo) If set, information about the eventual deprecation of this version.                                      |\n| modelType   | enum (ModelType) Output only. The model type of this processor version.                                           |\n## DocumentSchema\nThe schema defines the output of the processed document by a processor.| JSON representation                              |\n|:------------------------------------------------------------------------------------------------------------------------------------------|\n| { \"displayName\": string, \"description\": string, \"entityTypes\": [ { object (EntityType) } ], \"metadata\": { object (Metadata) } } || Fields  | Fields.1          |\n|:--------------|:------------------------------------------------|\n| displayName | string Display name to show to users.   |\n| description | string Description of the schema.    |\n| entityTypes[] | object (EntityType) Entity types of the schema. |\n| metadata  | object (Metadata) Metadata of the schema.  |\n## EntityType\nEntityType is the wrapper of a label of the corresponding model with detailed attributes and limitations for entity-based processors. Multiple types can also compose a dependency tree to represent nested types.| JSON representation                                                                                  |\n|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| { \"displayName\": string, \"name\": string, \"baseTypes\": [ string ], \"properties\": [ { object (Property) } ], \"entityTypeMetadata\": { object (EntityTypeMetadata) }, // Union field value_source can be only one of the following: \"enumValues\": { object (EnumValues) } // End of list of possible types for union field value_source. } || Fields                 | Fields.1                                                                                                                                         |\n|:------------------------------------------------------------------------||\n| displayName                | string User defined name for the type.                                                                                                                                 |\n| name                 | string Name of the type. It must be unique within the schema file and cannot be a \"Common Type\". The following naming conventions are used: Use snake_casing. Name matching is case-sensitive. Maximum 64 characters. Must start with a letter. Allowed characters: ASCII letters [a-z0-9_-]. (For backward compatibility internal infrastructure and tooling can handle any ascii character.) The / is sometimes used to denote a property of a type. For example line_item/amount. This convention is deprecated, but will still be honored for backward compatibility. |\n| baseTypes[]                | string The entity type that this type is derived from. For now, one and only one should be set.                                                                                                                   |\n| properties[]               | object (Property) Description the nested structure, or composition of an entity.                                                                                                                       |\n| entityTypeMetadata              | object (EntityTypeMetadata) Metadata for the entity type.                                                                                                                             |\n| Union field value_source.value_source can be only one of the following: | Union field value_source.value_source can be only one of the following:                                                                                                                         |\n| enumValues                | object (EnumValues) If specified, lists all the possible values for this entity. This should not be more than a handful of values. If the number of values is >10 or could change frequently use the EntityType.value_ontology field and specify a list of all possible values in a value ontology file.                                                                 |\n## EnumValues\nDefines the a list of enum values.| JSON representation   |\n|:----------------------------|\n| { \"values\": [ string ] } || Fields | Fields.1                |\n|:---------|:---------------------------------------------------------------------|\n| values[] | string The individual values that this enum values type can include. |\n## Property\nDefines properties that can be part of the entity type.| JSON representation                              |\n|:------------------------------------------------------------------------------------------------------------------------------------------|\n| { \"name\": string, \"valueType\": string, \"occurrenceType\": enum (OccurrenceType), \"propertyMetadata\": { object (PropertyMetadata) } } || Fields   | Fields.1                               |\n|:-----------------|:-----------------------------------------------------------------------------------------------------------------------------------|\n| name    | string The name of the property. Follows the same guidelines as the EntityType name.            |\n| valueType  | string A reference to the value type of the property. This type is subject to the same conventions as the Entity.base_types field. |\n| occurrenceType | enum (OccurrenceType) Occurrence type limits the number of instances an entity type appears in the document.      |\n| propertyMetadata | object (PropertyMetadata) Any additional metadata about the property can be added here.           |\n## OccurrenceType\nTypes of occurrences of the entity type in the document. This represents the number of instances, not mentions, of an entity. For example, a bank statement might only have one `account_number` , but this account number can be mentioned in several places on the document. In this case, the `account_number` is considered a `REQUIRED_ONCE` entity type. If, on the other hand, we expect a bank statement to contain the status of multiple different accounts for the customers, the occurrence type is set to `REQUIRED_MULTIPLE` .| Enums      | Enums.1                           |\n|:----------------------------|:------------------------------------------------------------------------------------------------------------------|\n| OCCURRENCE_TYPE_UNSPECIFIED | Unspecified occurrence type.                      |\n| OPTIONAL_ONCE    | There will be zero or one instance of this entity type. The same entity instance may be mentioned multiple times. |\n| OPTIONAL_MULTIPLE   | The entity type will appear zero or multiple times.                |\n| REQUIRED_ONCE    | The entity type will only appear exactly once. The same entity instance may be mentioned multiple times.   |\n| REQUIRED_MULTIPLE   | The entity type will appear once or more times.                 |\n## PropertyMetadata\nMetadata about a property.| JSON representation                   |\n|:---------------------------------------------------------------------------------------------|\n| { \"inactive\": boolean, \"fieldExtractionMetadata\": { object (FieldExtractionMetadata) } } || Fields     | Fields.1                 |\n|:------------------------|:----------------------------------------------------------------------------|\n| inactive    | boolean Whether the property should be considered as \"inactive\".   |\n| fieldExtractionMetadata | object (FieldExtractionMetadata) Field extraction metadata on the property. |\n## FieldExtractionMetadata\nMetadata for how this field value is extracted.| JSON representation         |\n|:-----------------------------------------------------|\n| { \"summaryOptions\": { object (SummaryOptions) } } || Fields   | Fields.1          |\n|:---------------|:------------------------------------------------|\n| summaryOptions | object (SummaryOptions) Summary options config. |\n## SummaryOptions\nMetadata for document summarization.| JSON representation         |\n|:-------------------------------------------------------|\n| { \"length\": enum (Length), \"format\": enum (Format) } || Fields | Fields.1           |\n|:---------|:---------------------------------------------------|\n| length | enum (Length) How long the summary should be.  |\n| format | enum (Format) The format the summary should be in. |\n## Length\nThe Length enum.| Enums    | Enums.1         |\n|:-------------------|:-----------------------------------------|\n| LENGTH_UNSPECIFIED | Default.         |\n| BRIEF    | A brief summary of one or two sentences. |\n| MODERATE   | A paragraph-length summary.    |\n| COMPREHENSIVE  | The longest option available.   |\n## Format\nThe Format enum.| Enums    | Enums.1       |\n|:-------------------|:---------------------------------|\n| FORMAT_UNSPECIFIED | Default.       |\n| PARAGRAPH   | Format the output in paragraphs. |\n| BULLETS   | Format the output in bullets. |\n## EntityTypeMetadata\nMetadata about an entity type.| JSON representation  |\n|:-------------------------|\n| { \"inactive\": boolean } || Fields | Fields.1              |\n|:---------|:---------------------------------------------------------------|\n| inactive | boolean Whether the entity type should be considered inactive. |\n## Metadata\nMetadata for global schema behavior.| JSON representation                                 |\n|:----------------------------------------------------------------------------------------------------------------------------------------------------|\n| { \"documentSplitter\": boolean, \"documentAllowMultipleLabels\": boolean, \"prefixedNamingOnProperties\": boolean, \"skipNamingValidation\": boolean } || Fields      | Fields.1                                               |\n|:----------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| documentSplitter   | boolean If true, a document entity type can be applied to subdocument (splitting). Otherwise, it can only be applied to the entire document (classification).         |\n| documentAllowMultipleLabels | boolean If true, on a given page, there can be multiple document annotations covering it.                          |\n| prefixedNamingOnProperties | boolean If set, all the nested entities must be prefixed with the parents.                              |\n| skipNamingValidation  | boolean If set, we will skip the naming format validation in the schema. So the string values in DocumentSchema.EntityType.name and DocumentSchema.EntityType.Property.name will not be checked. |\n## State\nThe possible states of the processor version.| Enums    | Enums.1                 |\n|:------------------|:-------------------------------------------------------------------------|\n| STATE_UNSPECIFIED | The processor version is in an unspecified state.      |\n| DEPLOYED   | The processor version is deployed and can be used for processing.  |\n| DEPLOYING   | The processor version is being deployed.         |\n| UNDEPLOYED  | The processor version is not deployed and cannot be used for processing. |\n| UNDEPLOYING  | The processor version is being undeployed.        |\n| CREATING   | The processor version is being created.         |\n| DELETING   | The processor version is being deleted.         |\n| FAILED   | The processor version failed and is in an indeterminate state.   |\n| IMPORTING   | The processor version is being imported.         |\n## EvaluationReference\nGives a short summary of an evaluation, and links to the evaluation itself.| JSON representation                               |\n|:-----------------------------------------------------------------------------------------------------------------------------------------------|\n| { \"operation\": string, \"evaluation\": string, \"aggregateMetrics\": { object (Metrics) }, \"aggregateMetricsExact\": { object (Metrics) } } || Fields    | Fields.1                     |\n|:----------------------|:--------------------------------------------------------------------------------------------|\n| operation    | string The resource name of the Long Running Operation for the evaluation.     |\n| evaluation   | string The resource name of the evaluation.             |\n| aggregateMetrics  | object (Metrics) An aggregate of the statistics for the evaluation with fuzzy matching on. |\n| aggregateMetricsExact | object (Metrics) An aggregate of the statistics for the evaluation with fuzzy matching off. |\n## DeprecationInfo\nInformation about the upcoming deprecation of this processor version.| JSON representation             |\n|:-----------------------------------------------------------------------|\n| { \"deprecationTime\": string, \"replacementProcessorVersion\": string } || Fields      | Fields.1                                                               |\n|:----------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| deprecationTime    | string (Timestamp format) The time at which this processor version will be deprecated.A timestamp in RFC3339 UTC \"Zulu\" format, with nanosecond resolution and up to nine fractional digits. Examples: \"2014-10-02T15:01:23Z\" and \"2014-10-02T15:01:23.045123456Z\". |\n| replacementProcessorVersion | string If set, the processor version that will be used as a replacement.                                               |\n## ModelType\nThe possible model types of the processor version.| Enums     | Enums.1           |\n|:-----------------------|:--------------------------------------------------|\n| MODEL_TYPE_UNSPECIFIED | The processor version has unspecified model type. |\n| MODEL_TYPE_GENERATIVE | The processor version has generative model type. |\n| MODEL_TYPE_CUSTOM  | The processor version has custom model type.  |\n| Methods     | Methods.1                     |\n|:-------------------------|:------------------------------------------------------------------------------------------|\n| batchProcess    | LRO endpoint to batch process many documents.            |\n| delete     | Deletes the processor version, all artifacts under the processor version will be deleted. |\n| deploy     | Deploys the processor version.               |\n| evaluateProcessorVersion | Evaluates a ProcessorVersion against annotated documents, producing an Evaluation.  |\n| get      | Gets a processor version detail.               |\n| importProcessorVersion | Imports a processor version from source processor version.        |\n| list      | Lists all versions of a processor.              |\n| process     | Processes a single document.                |\n| train     | Trains a new processor version.               |\n| undeploy     | Undeploys the processor version.               |", "guide": "Document AI"}