{"title": "Document AI - Label documents", "url": "https://cloud.google.com/document-ai/docs/workbench/label-documents?hl=zh-cn", "abstract": "# Document AI - Label documents\n# Label documents\nA labeled dataset of documents is required to train, uptrain, or evaluate a processor version.\nThis page describes how to apply labels from your processor schema to imported documents in your dataset.\nThis page assumes you have already [created a processor](https://cloud.google.com/document-ai/docs/create-processor) that supports training, uptraining, or evaluation. If your processor is supported, you will see the **Train** tab in the Google Cloud console. It also assumes you have [created a dataset](/document-ai/docs/workbench/create-dataset) , imported documents, and defined a processor schema.\n", "content": "## Name fields for generative AI extraction\nThe way fields are named influences how accurately fields are extracted using generative AI. We recommend the following best practices when naming fields:\n- **Name the field with the same language used to describe it in the document** : For example, if a document has a field described as `Employer Address` , then name the field `employer_address` . Do not use abbreviations such as `emplr_addr` .\n- **Spaces are currently not supported in field names** : Instead of using spaces, use `_` . For example: `First Name` would be named `first_name` .\n- **Iterate on names to improve accuracy** : Currently, Document AI has a limitation that does not allow field names to change. To test different names, disable or delete the existing field and re-create it.## Labeling options\nHere are your options for labeling documents:\n- [Manual](#manual-label) : manually label your documents in the Google Cloud console\n- [Auto-labeling](#auto-label) : use an existing processor version to generate labels\n- [Import pre-labeled documents](#import-labels) : save time if you already have labeled documents\n### Manually label in the Google Cloud console\nIn the **Train** tab, click a document to open the labeling tool.\nFrom the list of schema labels on the left side of the labeling tool, click the 'Add' symbol to select the tool to highlight entities in the document and assign them to a label.\nIn the following screenshot, the `EMPL_SSN` `EMPLR_ID_NUMBER` , `EMPLR_NAME_ADDRESS` , `FEDERAL_INCOME_TAX_WH` , `SS_TAX_WH` , `SS_WAGES` , and `WAGES_TIPS_OTHER_COMP` fields in the document have been assigned labels.\nWhen you select a checkbox entity with the tool, only select the checkbox itself, and not any associated text. Ensure that the checkbox entity shown on the left is either selected or de-selected to match what is in the document.\nWhen you label parent/child entities, don't label the parent entities. The parent entities are just containers of the child entities. Only label the child entities. The parent entities are updated automatically.\nWhen you label child entities, label the first child entity and then associate the related child entities with that line. You will notice this at the second child entity the first time you label such entities. For example, with an invoice, if you label **description** , it will seem like any other entity. However, if you label **quantity** next, you are prompted to pick the parent.\nRepeat this step for each line item by clicking **NEW PARENT ENTITY** for each new line item.\nParent / child entities are a Preview feature and only supported for tables with one layer of nesting.\nWhen labeling a table, it could be tedious to label each row over and over again. There is a very convenient tool that can replicate a row's entity structure. Note that, this feature only works on horizontally aligned rows.\n- First, label the first row as usual.\n- Then, hover over the parent entity representing the row. Click on **Add more rows** . The row becomes a template to create more rows. \n- Select the rest of the area of the table. \nThe tool guesses the annotations, and it usually works. For any tables it can't handle, annotate those manually.\nTo see the keyboard shortcuts that are available, click the three vertical dots at the upper right of the labeling console. It displays a list of keyboard shortcuts, as shown in the following table.\n| Action   | Shortcut           |\n|:-----------------|:-------------------------------------------------|\n| Zoom in   | Alt + = (Option + = on macOS)     |\n| Zoom out   | Alt + - (Option + - on macOS)     |\n| Zoom to fit  | Alt + 0 (Option + 0 on macOS)     |\n| Scroll to zoom | Alt + Scroll (Option + Scroll on macOS)   |\n| Panning   | Scroll           |\n| Reversed panning | Shift + Scroll         |\n| Drag to pan  | Space + Mouse drag        |\n| Undo    | Ctrl + Z (Control + Z on macOS)     |\n| Redo    | Ctrl + Shift + Z (Control + +Shift + Z on macOS) |\n### Auto-labeling\nIf available, you can use an existing version of your processor to start labeling.\n**Note:** Auto-labeling can populate labels only if the processor version supports that label. The following introduces two methods to initiate the auto-labeling process.\n**Caution:** Schema compliance isn't enforced during auto-labeling. You must label all instances of each entity for training purposes.\n- Auto-label can be initiated during **import** . All documents are annotated using the specified processor version.\n- Auto-label can be initiated after **import** for documents in the unlabeled or auto-labeled category. All selected documents are annotated using the specified processor version.\nYou can't train or uptrain on auto-labeled documents, or use them in the test set, without marking them as labeled. Manually review and correct the auto-labeled annotations, then click **Mark as Labeled** to save the corrections. You can then assign the documents as appropriate.\n### Import pre-labeled documents\nYou can import JSON [Document](https://cloud.google.com/document-ai/docs/reference/rest/v1/Document) files. If the `entity` in the document matches the label in the processor schema, the `entity` is converted to a label instance by the importer. There are several ways you can get JSON Document files:\n- Exporting a dataset from another processor. See [Export dataset](#export-dataset) .\n- [Sending a processing request](https://cloud.google.com/document-ai/docs/send-request) to an existing processor.\n- Write a script to convert existing labels from another system (for example, CSV labels) to JSON documents.\n### Best practices for labeling documents\nConsistent labeling is required to train a high quality processor. We recommend that you:\n- **Create labeling instructions** : Your instructions should include examples for both the common and corner cases. Some tips:- Explain which fields should be annotated and how exactly to make labeling consistent. For example, when labeling \"amount\", specify whether the currency symbol should be labeled. If the labels are not consistent, then processor quality will be reduced.\n- Label all occurrences of an entity, even if the label type is`REQUIRED_ONCE`or`OPTIONAL_ONCE`. For example, if`invoice_id`appears two times in the doc, label all occurrences of them.\n- Prefer labeling with thetool first. If that fails, use thetool. If the value of the label is not correctly detected by OCR, manually correct the value.Here are some sample labeling instructions:\n- [1040 Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-1040-v2.0-2022-08-24.pdf) \n- [1040 Schedule C Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-1040sch-c-v1.1-2021-12-10.pdf) \n- [1099-R Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-1099r-v2.0-2022-07-25.pdf) \n- [1120 Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-1120-v2.0-2022-02-03.pdf) \n- [1120S Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-1120s-v2.1-2022-07-22.pdf) \n- [Bank Statement Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-bankstatement-v3.0-2022-05-16.pdf) \n- [Mortgage Statement Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-mortgage-statement-v1.0-2021-10-17.pdf) \n- [Pay Slip Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-paystub-v2.0-2022-07-22.pdf) \n- [Retirement/Investment Statement Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-retirement-investment-statement-v1.0-2021-12-03.pdf) \n- [W9 Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-w9-v2.0-2022-06-23.pdf) \n- [Expense Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-expense-v1.3-2022-07-15.pdf) \n- [Invoice Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-invoice-v1.4-2022-10-21.pdf) \n- [Purchase Order Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-purchase-order-v1.1-2022-06-17.pdf) \n- [Utility Parser](https://storage.googleapis.com/cloud-samples-data/documentai/labeling-instructions/pretrained-utility-v1.1-2021-04-09.pdf) \n- **Train annotators** : make sure that annotators understand and can follow the guidelines without any systematic errors. One way to achieve this is to have different trainees annotate the same set of documents. The trainer can then check the quality of each trainee's annotation work. You might need to repeat this process until the trainees achieve a benchmark level of accuracy.\n- **Annotation reviews** : Given the laborious nature of annotation, even trained annotators may make mistakes. We recommend that annotations are checked by at least one more trained annotator.## Resync dataset\nResync keeps your Dataset's Cloud Storage folder consistent with Document AI's internal index of metadata. This is useful if you've accidentally made changes to the Cloud Storage folder and would like to synchronize the data.\nTo resync:\nIn the **Processor Details** tab, next to the **Storage location** row, click help and then click **Re-syncDataset** .\nUsage notes:\n- If you delete a document from the Cloud Storage folder, resync will remove it from the dataset.\n- If you add a document to the Cloud Storage folder, resync will not add it to the dataset. To add documents, import them.\n- If you modify document labels in the Cloud Storage folder, resync will update the document labels in the dataset.## Migrate dataset\nImport and export lets you move all the documents in a dataset from one processor to another. This can be useful if you have processors in different [regions](https://cloud.google.com/document-ai/docs/regions) or Google Cloud projects, if you have different processors for staging and production, or for general offline consumption.\nNote that only the documents and their labels are exported. Dataset metadata, such as processor schema, document assignments (training/test/unassigned), and document labeling status (labeled/unlabeled/auto-labeled) are **not** exported.\n### Export dataset\nTo export all documents as JSON [Document](https://cloud.google.com/document-ai/docs/reference/rest/v1/Document) files to a Cloud Storage folder, click **Export Dataset** .\nA few important things to note:\n- During export, three sub-folders will be created: **Test** , **Train** , and **Unassigned** . Your documents are placed into those sub-folders accordingly.\n- A document's labeling status is not exported. If you later import the documents, they will not be marked .\n- If your Cloud Storage is in a different Google Cloud project, make sure to grant access so that Document AI is allowed to write files to that location. Specifically, you must grant the [Storage Object Creator](/storage/docs/access-control/iam-roles) role to Document AI's Core Service Agent `service-{project-id}@gcp-sa-prod-dai-core.iam.gserviceaccount.com` . For more information, see [Google-managed service accounts](/iam/docs/service-account-types#google-managed) .\n### Import dataset\nThe procedure is the same as [Import documents](/document-ai/docs/workbench/create-dataset#import) .\n## What's next\n[Train a processor](/document-ai/docs/workbench/train-processor)\n[Evaluate processor performance](/document-ai/docs/workbench/evaluate)", "guide": "Document AI"}