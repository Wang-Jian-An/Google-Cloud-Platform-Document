{"title": "Document AI - Document AI overview", "url": "https://cloud.google.com/document-ai/docs/overview?hl=zh-cn", "abstract": "# Document AI - Document AI overview\n# Document AI overview\nThis document is a guide to the fundamental concepts of using Document AI. You should read this page before proceeding to any other documentation or quickstarts.\n", "content": "## Automate document processing workflows\nBusinesses all over the world rely heavily on documents to store and convey information. This information often needs to be digitized for it to become useful. However, this is usually accomplished through time-intensive, manual processes.\nFor example:\n- Digitizing books for e-readers.\n- Processing medical intake forms at doctor's offices.\n- Parsing receipts and invoices for expense report validation.\n- Authenticating identity based on ID cards.\n- Extracting income information from tax forms for approving loans.\n- Understanding contracts for key business agreement terms.\nEach of these workflows involve getting the raw text from documents, then extracting specific text from that which corresponds to the data needed (the fields or entities). However, each document type has a different structure and layout, and the pattern of fields vary depending on the specific use case.\n## Document AI components\nDocument AI is a [document processing and understanding](https://en.wikipedia.org/wiki/Document_processing) platform that takes unstructured data from documents and transforms it into structured data (specific fields, suitable for a database), making it easier to understand, analyze, and consume.\nDocument AI is built on top of products within Vertex AI with generative AI to help you create scalable, end-to-end, cloud-based document processing applications without specialized machine learning expertise.\nUsing Document AI, you can:\n- **Digitize documents** using OCR to get text, layout, and various add ons such as image quality detection (for readability) and deskewing (fully automatic).\n- **Extract** text and layout information, from document files and normalize entities.\n- **Identify key-value pairs (kvp)** in structured forms and simple tables. For example:`Name: Jill Smith`is a kvp.\n- **Classify** document types to drive downstream processes such as extraction and storage.\n- **Split** and classify documents by type. For example, a PDF file with multiple real documents).\n- **Prepare datasets** to be used in fine-tuning and model evaluations using auto-labeling, schema management, and dataset management features such as document and prediction review.\n- **Integrate it with products** like Cloud Storage, BigQuery, and Vertex AI Search to help you store, search, organize, govern, and analyze documents and metadata.\nThis diagram illustrates all of the key document processing steps that are supported by Document AI and how they can connect to each other.\n## Processor\nA Document AI processor lies between the document file and a machine learning model that performs document processing and understanding actions. They can be used to classify, split, parse, or analyze a document.\nEach Google Cloud project needs to create its own processor instances.\nProcessors fit into one of the following categories:\n- **Digitize** : OCR.\n- **Extract** : Custom extractor, Form Parser, and legacy pretrained parsers.\n- **Classify** : Custom classifier and custom splitter.\nRefer to the [Full processor and detail list](/document-ai/docs/processors-list) for information about all available processor types for Document AI.\n### Which processor should I use?\nTo decide what processor type to use for a specific application, here are some general guidelines:\n**Note:** All processors can extract text and layout information.\n| Category | Use case                     | Processor type            |\n|:-----------|:------------------------------------------------------------------------------------------|:-------------------------------------------------------------|\n| Digitize | Extract text and layout information from documents.          | Enterprise Document OCR          |\n| Digitize | Analyze the scanned image quality (readability) of a document.       | Enterprise Document OCR with image-quality analysis enabled |\n| Digitize | Extract entities from a custom document that does not meet the custom processor criteria. | nan               |\n| Extract | Extract tables or kvp from a structured form in a document.        | Form Parser             |\n| Extract | Extract entities from a custom document that meets the custom processor criteria.   | Create a custom extractor         |\n| Extract | Extract entities from a specialized document type.          | A legacy pretrained processor (Up-train to improve quality.) |\n| Classify | Classify documents.                  | Create a Custom Classifier         |\n| Classify | Split documents.                   | Create a Custom Splitter          |\nThis diagram helps determine which processor works best for each use case.### Use Document AI processors\nHere are the major steps to use Document AI to start processing documents:\n- **Choose a processor** that is suitable for your use case.- For complete information on each processor, see the [Full processor and detail list](/document-ai/docs/processors-list) .\n- **Create a processor** using the Google Cloud console or the Document AI API.- Document AI creates a **prediction endpoint** where you can send your documents.\n- For detailed instructions, see [Creating a processor](/document-ai/docs/create-processor) .\n- **Train a processor** with train and test data from scratch, or up-train a new (pretrained) processor version on top of an existing one.- For detailed instructions, see [Train processor](/document-ai/docs/workbench/train-processor) .\n- **Send your documents** for processing.- Document AI processes the documents and returns one or more [Document](/document-ai/docs/reference/rest/v1/Document) objects, which contain the extracted, structured information.\n- For detailed instructions, see [Sending a processing request](/document-ai/docs/send-request) and [Handle the processing response](/document-ai/docs/handle-response) .", "guide": "Document AI"}