{"title": "Documentation - Network policy", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Network policy\nTo set a network policy for virtual machine (VM) workloads at the project namespace level, use the `ProjectNetworkPolicy` resource, a multi-cluster network policy for Google Distributed Cloud Hosted (GDCH). It lets you to define policies, which allows communication within projects, between projects, and to external IP addresses.\nFor traffic within a project, GDCH applies a predefined project network policy, the [intra-project policy](/distributed-cloud/hosted/docs/latest/gdch/platform/pa-user/configure-pnp#intra-project-traffic) , to each project by default. To enable and control traffic across projects within the same organization, define [cross-project policies](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/configure-traffic-between-projects#cross-project-traffic) . When multiple policies are present, it additively combines the rules for each. It also allows traffic if it matches at least one of the rules.\n", "content": "## Intra-project traffic\nBy default, VM workloads in a project namespace have the ability to communicate with each other without exposing services to the external world, even if the VMs are part of different clusters within the same project.\n### Ingress intra-project traffic network policy\nWhen you create a project, you create a default base `ProjectNetworkPolicy` on the org system cluster to allow intra-project communication. This policy allows ingress traffic from other workloads in the same project. You can remove it, but be careful if doing so, as this results in denying both intraproject and container workload communication.\n### Egress intra-project traffic network policy\nBy default, you do not need to take action regarding egress. This is because in the absence of an egress policy, all traffic is allowed. However, when you set a single policy, only the traffic the policy specifies is allowed.\nWhen you disable [Data Exfiltration Prevention](/distributed-cloud/hosted/docs/latest/gdch/application/ao-user/configure-traffic-between-projects#disable-data-exfiltration-protection) and apply an egress `ProjectNetworkPolicy` to the project, such as preventing access to an external resource, use a required policy to allow intra-project egress:\n```\nkubectl --kubeconfig org_admin_kubeconfig apply -f - <<EOFapiVersion: networking.gdc.goog/v1kind: ProjectNetworkPolicymetadata:\u00a0 namespace: PROJECT_1\u00a0 name: allow-intra-project-egress-trafficspec:\u00a0 policyType: Egress\u00a0 ingress:\u00a0 - from:\u00a0 \u00a0 - projects:\u00a0 \u00a0 \u00a0 \u00a0 matchNames:\u00a0 \u00a0 \u00a0 \u00a0 - PROJECT_1EOF\n```\n## Cross-project (within org) traffic\nVM workloads from different project namespaces can communicate with each other by applying a cross-project network policy.\n**Important:** This policy only applies to projects that are from different project namespaces. To read about traffic, which requires specific instructions since Data Exfiltration Prevention protects against all such egress by default, see the [Cross-org traffic](#cross-org-traffic) section.\n### Ingress cross-project traffic network policy\nFor project workloads to allow connections from other workloads in another project, you must configure an Ingress policy to allow the other project workloads to data transfer out.\nThe following policy enables workloads in the `` project to permit connections from workloads in the `` project, as well as the return traffic for the same flows. If you want to access your VM in the `` from a source inside the `` , you can also use this policy. Run the following command to apply the policy:\n```\nkubectl --kubeconfig org_admin_kubeconfig apply -f - <<EOFapiVersion: networking.gdc.goog/v1kind: ProjectNetworkPolicymetadata:\u00a0 namespace: PROJECT_1\u00a0 name: allow-ingress-traffic-from-PROJECT_2spec:\u00a0 policyType: Ingress\u00a0 subject:\u00a0 \u00a0 subjectType: UserWorkload\u00a0 ingress:\u00a0 - from:\u00a0 \u00a0 - projects:\u00a0 \u00a0 \u00a0 \u00a0 matchNames:\u00a0 \u00a0 \u00a0 \u00a0 - PROJECT_2EOF\n```\nThe preceding command allows `` to go to `` , but doesn't allow connections initiated from `` to `` . For the latter, you require a reciprocal policy in the `` project. Run the following command to apply the reciprocal policy:\n```\nkubectl --kubeconfig org_admin_kubeconfig apply -f - <<EOFapiVersion: networking.gdc.goog/v1kind: ProjectNetworkPolicymetadata:\u00a0 namespace: PROJECT_2\u00a0 name: allow-ingress-traffic-from-PROJECT_1spec:\u00a0 policyType: Ingress\u00a0 subject:\u00a0 \u00a0 subjectType: UserWorkload\u00a0 ingress:\u00a0 - from:\u00a0 \u00a0 - projects:\u00a0 \u00a0 \u00a0 \u00a0 matchNames:\u00a0 \u00a0 \u00a0 \u00a0 - PROJECT_1EOF\n```\nYou've now permitted connections initiated to and from `` and `` .\nUse the following definitions for your variables.\n| Variable   | Definition                |\n|:-----------------|:-----------------------------------------------------------------------|\n| ADMIN_KUBECONFIG | The admin cluster kubeconfig file path.        |\n| PROJECT_1  | The name of a GDCH project corresponding to PROJECT_1 in the example. |\n| PROJECT_2  | The name of a GDCH project corresponding to PROJECT_2 in the example. |\n### Egress cross-project traffic network policy\nWhen you grant an ingress cross-project traffic policy to enable workloads in one project, `` , to allow connections from workloads in another project, `` , this also grants the return traffic for the same flows. Therefore, you don't need an egress cross-project traffic network policy.\n## Cross-organization traffic\nTo connect a VM workload to a destination outside of your project that resides in a different organization requires explicit approval. That approval is due to Data Exfiltration Prevention, which GDCH enables by default and prevents a project from having egress to workloads outside the organization where the project resides. The instructions to add a specific egress policy and enable data exfiltration are as follows in this section.\n### Ingress cross-organization traffic network policy\nTo allow ingress traffic across different organizations, a `ProjectNetworkPolicy` must be applied which allows traffic from organization external clients to your project, for example connect to the VM using SSH.\nA corresponding Egress policy is not required for the reply traffic. Return traffic is implicitly allowed.\nIf you want to access your VM in the `` from a source outside the organization that the VM resides in, you must apply the following policy to achieve this. You have to get and use the `` which contains your source IP address. The `` should be in `network/len` notation. For example, `192.0.2.0/21` is a valid one.\n- Configure and apply your Ingress `ProjectNetworkPolicy` , following the `kubectl` example. Apply the policy on all user workloads in `` . It allows ingress traffic to all hosts in `` , which reside outside the organization.\n- Apply your `ProjectNetworkPolicy` configuration:```\nkubectl --kubeconfig org_admin_kubeconfig apply -f - <<EOFapiVersion: VERSIONkind: ProjectNetworkPolicymetadata:\u00a0 namespace: PROJECT_1\u00a0 name: allow-external-trafficspec:\u00a0 policyType: Ingress\u00a0 subject:\u00a0 \u00a0 subjectType: UserWorkload\u00a0ingress:\u00a0 - from:\u00a0 \u00a0 - ipBlock:\u00a0 \u00a0 \u00a0 \u00a0 cidr: CIDREOF\n```\n### Egress cross-organization traffic network policy\nTo enable egress to services outside of the organization, customize your project network policy, `ProjectNetworkPolicy` . However, because Data Exfiltration Prevention is default-enabled, your customized Egress `ProjectNetworkPolicy` shows a validation error in the status field, and the dataplane ignores it. This happens by design.\nAs is stated on the [Configure and view project network policies](/distributed-cloud/hosted/docs/latest/gdch/platform/pa-user/configure-pnp) page in the [Security and connectivity](/distributed-cloud/hosted/docs/latest/gdch/platform/pa-user/configure-pnp#security-and-connectivity) section, workloads can egress when you allow data exfiltration for a given project. The traffic that you permit to egress is a source network address translation (NAT) using a well-known IP address allocated for the project. The [Security and connectivity](/distributed-cloud/hosted/docs/latest/gdch/platform/pa-user/configure-pnp#security-and-connectivity) section also provides details about project network policy ( `ProjectNetworkPolicy` ) enforcement.\nA corresponding Ingress policy is not required for the reply traffic. Return traffic is implicitly allowed.\nThese directions show you how to enable your customized egress policy:\n- [Configure and apply your own customized Egress](None) `ProjectNetworkPolicy` , following the `kubectl` example. Apply the policy on all user workloads in `` . It allows egress traffic to all hosts in `` , which reside outside the organization. Your first attempt causes a necessary status error, which is intended.\n- Apply your `ProjectNetworkPolicy` configuration:```\nkubectl --kubeconfig $org_admin_kubeconfig apply -f - <<EOFapiVersion: networking.gdc.goog/v1kind: ProjectNetworkPolicymetadata:\u00a0 namespace: PROJECT_1\u00a0 name: allow-egress-traffic-to-NAMEspec:\u00a0 policyType: Egress\u00a0 subject:\u00a0 \u00a0 subjectType: UserWorkload\u00a0egress:\u00a0 - to:\u00a0 \u00a0 - ipBlock:\u00a0 \u00a0 \u00a0 \u00a0 cidr: CIDREOF\n```\n- When you finish, confirm that you see a in your status. **Important:** Only the Egress traffic to destinations outside your project's organization that you explicitly allow in your Egress `ProjectNetworkPolicy` configuration is granted egress. Any other egress traffic is denied. Therefore, only apply a customized Egress `ProjectNetworkPolicy` when requirements mandate such a policy.\n- Ask the administrator user to disable Data Exfiltration Prevention. This enables your configuration, while preventing all other egress. **Important:** Disabling Data Exfiltration Prevention, without defining one or more valid `ProjectNetworkPolicy` s, permits all egress traffic to destinations outside your project's organization. Never disable this without first completing [step 1](#configure-egress-policy) to configure your customized Egress `ProjectNetworkPolicy` .\n- Check the `ProjectNetworkPolicy` that you just created and verify that the error in the validation status field is gone, and the status `Ready` is `True` , indicating that your policy is in effect:```\nkubectl --kubeconfig org_admin_kubeconfig get projectnetworkpolicyallow-egress-traffic-to-NAME -n PROJECT_1 -o yaml\n```Replace the variables, using the following definitions.| Variable   | Definition                  |\n|:-----------------|:-------------------------------------------------------------------------------|\n| ADMIN_KUBECONFIG | The admin cluster kubeconfig path.            |\n| PROJECT_1  | The name of the GDCH project.             |\n| CIDR    | The Classless Inter-Domain Routing (CIDR) block of the permitted destination. |\n| NAME    | A name associated with the destination.          |After you have applied this policy, and provided that you have not defined other egress policies, all other egress traffic is denied for `` .", "guide": "Documentation"}