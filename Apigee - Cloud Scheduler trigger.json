{"title": "Apigee - Cloud Scheduler trigger", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Cloud Scheduler trigger\n**Announcement:** Application Integration is now available for your Google Cloud project. You can now use both Apigee Integration and Application Integration within the same Google Cloud project. [Learn more](/apigee/docs/api-platform/integration/using-application-integration)\nThe **Cloud Scheduler trigger** lets you schedule your integration executions for defined time periods or regular intervals across multiple regions.\n**Cloud Scheduler triggers ** leverage the [Cloud Scheduler](/scheduler/docs/overview) services to provide a fully managed enterprise-grade cron job scheduler within Apigee Integration. Using this trigger, you can now manage all your cron jobs created within your integration, both from the Apigee Integration UI, and the [Cloud Scheduler](/scheduler/docs/overview) dashboard. Additionally, the **Cloud Scheduler trigger** also lets you deploy cross-region cron jobs to schedule your integration executions.\nFor example, if you have provisioned your integration in `us-central1` , you can use the **Cloud Scheduler trigger** to deploy a cron job in `asia-east1` (or any of the supported Google Cloud [regions](/about/locations) for [Cloud Scheduler](/scheduler/docs/overview) ) to call your integration's endpoint at `us-central1` .\n**Important:** Separate charges will be applicable for use of the [Cloud Scheduler](/scheduler/docs/overview) services in your integration. You will incur charges based on the number of cron jobs created using the **Cloud Scheduler trigger** in Apigee Integration. For more information about the Cloud Scheduler charges, see [Cloud Scheduler pricing](/scheduler/pricing) .\n", "content": "## Before you begin\nEnsure that you perform the following tasks in your Google Cloud project before configuring the **Cloud Scheduler trigger** :\n- Enable the **Cloud Scheduler API** (`cloudscheduler.googleapis.com`). [Enable Cloud Scheduler API](https://console.cloud.google.com/flows/enableapi?apiid=cloudscheduler.googleapis.com) \n- Confirm that you have a Google [service account](/iam/docs/service-accounts) with the **Apigee Integration Invoker** role assigned. If you don't have a service account, you must create a new one, and assign the **Apigee Integration Invoker** role to it.For information about creating and managing service accounts, see [Creating and managing service accounts](/iam/docs/creating-managing-service-accounts) For information about the predefined Apigee Integration roles, see [Predefined IAM roles](/apigee/docs/api-platform/integration/integrations-access-permissions) .## Add the Cloud Scheduler trigger\nTo add a **Cloud Scheduler trigger** to your integration, perform the following steps:\n- In the [Apigee UI](https://apigee.google.com) , select your.\n- Click **Develop > Integrations** .\n- Select an existing integration or create a new integration by clicking **Create Integration** .If you are creating a new integration:- Enter a name and description in the **Create Integration** dialog.\n- Select a **Region** for the integration from the list of supported regions.\n- Click **Create** .\nThis opens the integration in the .\n- In thenavigation bar, click **+Add a task/trigger > Triggers** to view the list of available triggers.\n- Click and place the **Cloud Scheduler trigger** element in the integration editor.## Configure the Cloud Scheduler trigger\nTo configure a **Cloud Scheduler trigger** , perform the following steps:\n- Click the **Cloud Scheduler trigger** element in the integration editor to open the trigger configuration pane.Specify the schedule of the **Cloud Scheduler trigger** using either of the following options:- **Basic** : Use the user interface to configure the cron job schedule.\n- **Advanced** : Use a [unix-cron](https://en.wikipedia.org/wiki/Cron) expression to configure the cron job schedule.\n- (For Basic option) Select the **Basic** tab and do the following in the indicated fields:- **Times:** Select the time intervals at which the integration must run.- **Run at a specific time: ** Select this option to run the integration at a specific time.\n- **Repeat by the hour: ** Select this option to repeatedly run the integration on an hourly basis.\n- **Repeat by the minute: ** Select this option to repeatedly run the integration as per the specified number of minutes- **Days** : Select the days on which the integration must run. You can choose to run the integration every day, or on specific days of the week, or on a specific day of the month.\n- **Months** : Select the month(s) in which the integration must run. You can choose to run the integration every month, or during specific months.\n- (For Advanced option) Select the **Advanced** tab and specify the schedule of the cron job using a cron expression.The cron expression has five values that must be specified in the following order:- Minute (0-59)\n- Hour (0-23)\n- Day of the month (1-31)\n- Month, either of the following values:- A number 1-12\n- A three-letter month abbreviation (For example, Jan, Feb, Mar)\n- Day of week, either of the following values:- A number from 0 - 6 starting with Sunday as 0\n- A three-letter day abbreviation (For example, Mon, Tue, Wed)For example, to run the integration on the first day of every month, use the `* * 1 * *` cron expression.For more information, see [Configure cron job schedules](/scheduler/docs/configuring/cron-job-schedules) .\n- **Region: ** Select the region where your Cloud Scheduler job will be deployed.\n- **Service account email:** Enter the created Google service account email address.\n### Trigger output\nFor each **Cloud Scheduler trigger** that is configured and published in your integration version, Apigee Integration creates a new Cloud Scheduler job in your Google Cloud project.\nA Cloud Scheduler job is created using the following naming convention to avoid any job duplication errors:\n```\n INTEGRATION_NAME__VINTEGRATION_VERSION__CLOUD_SCHEDULER_TRIGGER_NUMBER\n \n```\n**Example** : `DemoIntegration__V1__1`\n### Trigger logs\nA **Cloud Scheduler trigger** generates logs at the start and end of each integration execution. You can view the **Cloud Scheduler trigger** logs in the **Cloud Logging Logs Explorer** page:\n- In the Google Cloud console, go to the **Cloud Scheduler** page. [Go to Cloud Scheduler](https://console.cloud.google.com/cloudscheduler) \n- Locate your Cloud Scheduler job and click **View** in the **Logs** column.The **Cloud Logging Logs Explorer** page appears displaying the logs generated by the **Cloud Scheduler trigger** .**Note:** Apigee Integration doesn't store or collect any logs generated by the **Cloud Scheduler trigger** . These logs   are stored in your Google Cloud project and can only be viewed from the **Cloud Logging Logs Explorer** page.\n## Edit a Cloud Scheduler trigger\n**Warning:** Editing a Cloud Scheduler trigger from Apigee Integration will overwrite your existing cron job with a new cron job in a new integration version.\nTo edit your Cloud Scheduler trigger from Apigee Integration, do the following steps:- In the [Apigee UI](https://apigee.google.com) , select your.\n- Click **Develop > Integrations** .\n- Select the integration that you want to edit.\n- In the, click the **Version dropdown** , and select the integration version containing the **Cloud Scheduler trigger** that you want to edit.\n- [Unpublish](/apigee/docs/api-platform/integration/test-publish-integrations#unpublish-an-integration) and enable editing If the selected integration version is published (in active state).\n- Click the **Cloud Scheduler trigger** element in the integration editor to open the trigger configuration pane.\n- Modify the Cloud Scheduler job configurations as desired.\nYou can edit your Cloud Scheduler trigger by modifying the configuration of your Cloud Scheduler job from Cloud Scheduler:- In the Google Cloud console, go to **Cloud Scheduler** . [Go to Cloud Scheduler](https://console.cloud.google.com/cloudscheduler) \n- Select the **Cloud Scheduler ** job to edit.\n- Click **Edit** .\n- Modify the Cloud Scheduler job configurations as desired.\n **Note:** Editing a Cloud Scheduler job from [Cloud Scheduler](https://console.cloud.google.com/cloudscheduler) doesn\u2019t change the state of the target integration version.\n## Pause, Resume, Copy a Cloud Scheduler job\nApigee Integration doesn\u2019t support pause, resume, and copy operations for a Cloud Scheduler job created using the **Cloud Scheduler trigger** .\nThe **Cloud Scheduler trigger** throws an error in the trigger configuration pane if you manually pause the execution of a Cloud Scheduler job from [Cloud Scheduler](https://console.cloud.google.com/cloudscheduler) .\nFor more information about the **Cloud Scheduler trigger** error messages, see [Troubleshoot Cloud Scheduler trigger](#troubleshoot) . For information about pausing and resuming a cron job using Cloud Scheduler, see [Pause or resume a job](/scheduler/docs/creating#pause)\n## Delete a Cloud Scheduler job\nYou can delete a Cloud Scheduler job either from within your integration in Apigee Integration or from [Cloud Scheduler](/scheduler/docs/overview) .\nTo delete a Cloud Scheduler job from Apigee Integration, do the following steps:- In the [Apigee UI](https://apigee.google.com) , select your.\n- Click **Develop > Integrations** .\n- Select the integration that you want to edit.\n- In the, click the **Version dropdown** , and select the integration version containing the **Cloud Scheduler trigger** that you want to delete.\n- [Unpublish](/apigee/docs/api-platform/integration/test-publish-integrations#unpublish-an-integration) the selected integration version.The Cloud Scheduler job for the corresponding integration version is deleted.\nTo delete a Cloud Scheduler job from Cloud Scheduler, do the following steps:- In the Google Cloud console, go to **Cloud Scheduler** . [Go to Cloud Scheduler](https://console.cloud.google.com/cloudscheduler) \n- Select the **Cloud Scheduler ** job to delete.\n- Click **Delete** .The Cloud Scheduler job for the corresponding integration version is deleted.\n **Note:** - Deleting a Cloud Scheduler job from [Cloud Scheduler](https://console.cloud.google.com/cloudscheduler) doesn\u2019t delete the **Cloud Scheduler trigger** within your integration in Apigee Integration.\n- The **Cloud Scheduler trigger** in your integration throws an error in the trigger configuration pane if a Cloud Scheduler job is deleted using [Cloud Scheduler](https://console.cloud.google.com/cloudscheduler) . For more information about the **Cloud Scheduler trigger** error messages, see [Troubleshoot Cloud Scheduler trigger](#troubleshoot) .## Best practices\nAs a best practice, unpublish any **Cloud Scheduler triggers** when they are no longer needed. If you leave a redundant **Cloud Scheduler trigger** published, the trigger will continue to invoke the integration automatically, which might cause additional billing charges.\n## Troubleshoot Cloud Scheduler trigger\nThe following table describes the errors that you might encounter in Cloud Scheduler trigger, and the corresponding causes for the errors.\n| Error location        | Occurrence of error             | Error message                               | Possible causes               | Resolution                           |\n|:-------------------------------------------|:---------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------|:--------------------------------------------------------------------------------------------------------------------|\n| Trigger configuration pane > Error Message | When the Cloud Scheduler job stops the execution of your integration | The configured Cloud Scheduler job CLOUD_SCHEDULER_JOB doesn\u2019t exist. It might be deleted from your Google Cloud project.    | The Cloud Scheduler job is deleted using Cloud Scheduler.    | Create a new integration version to overwrite your existing Cloud Scheduler job.         |\n| Trigger configuration pane > Error Message | When the Cloud Scheduler job stops the execution of your integration | The configured Cloud Scheduler job CLOUD_SCHEDULER_JOB is PAUSED. You must RESUME the job from your Google Cloud project.    | The Cloud Scheduler job is paused using Cloud Scheduler.    | Resume the Cloud Scheduler job from Cloud Scheduler.                |\n| Trigger configuration pane > Error Message | When the Cloud Scheduler job stops the execution of your integration | The configured Cloud Scheduler job CLOUD_SCHEDULER_JOB is DISABLED due to an internal system error.          | Check the Trigger logs to identity the issue.       | Create a new integration version to overwrite your existing Cloud Scheduler job.         |\n| Trigger configuration pane > Error Message | When the Cloud Scheduler job stops the execution of your integration | The configured Cloud Scheduler job CLOUD_SCHEDULER_JOB is in an UPDATE_FAILED state due to a failed CloudScheduler.UpdateJob\u00a0operation. | The provided service account doesn\u2019t have the required IAM permissions. | To recover a job from this state, retry CloudScheduler.UpdateJob\u00a0operation until a successful response is received. |\n| Trigger configuration pane > Error Message | When the Cloud Scheduler job stops the execution of your integration | The last execution of the Cloud Scheduler job CLOUD_SCHEDULER_JOB failed due to CLOUD_SCHEDULER_JOB_ISSUE. Learn more.     | CLOUD_SCHEDULER_JOB_ISSUE            | nan                             |", "guide": "Apigee"}