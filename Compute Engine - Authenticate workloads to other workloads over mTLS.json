{"title": "Compute Engine - Authenticate workloads to other workloads over mTLS", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Authenticate workloads to other workloads over mTLS\n**Preview** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section of the [Service Specific Terms](/terms/service-terms#1) . Pre-GA features are available \"as is\" and might have limited support. For more information, see the [launch stage descriptions](/products#product-launch-stages) .For information about access to this release, see the [access request page](https://forms.gle/KC1Lq77gMn3kTtWDA) .\nThis document describes how to set up automatic provisioning and lifecycle management of managed workload identities for Compute Engine. You configure CA pools to issue certificates using [Certificate Authority Service (CA)](/certificate-authority-service) , which is a highly-available, scalable Google Cloud service that simplifies and automates the deployment, management, and security of CA services. Each VM is provisioned with X.509 credentials from the configured CA pool. These credentials can then be used to establish mTLS connections.\nWith managed workload identities for Compute Engine, you can implement mutually authenticated and encrypted communications between any two Compute Engine VMs. Workload applications running on the configured VMs can use the X.509 credentials for per-VM [mTLS](/beyondcorp-enterprise/docs/understand-mtls) . These mTLS certificates are automatically rotated and managed for you by Certificate Authority Service.\n", "content": "## Before you begin\n- [Request access to the managed workload identity preview](https://forms.gle/KC1Lq77gMn3kTtWDA) . **Warning:** Do not proceed until you have received confirmation that   your project has been added to the allowlist.\n- Configure the Google Cloud CLI. [Install](/sdk/docs/install) the Google Cloud CLI, then [initialize](/sdk/docs/initializing) it by running the following command:```\ngcloud init\n``` **Note:** You can run the gcloud CLI in  the Google Cloud console without installing the Google Cloud CLI. To run the  gcloud CLI in the Google Cloud console, [use  Cloud Shell](https://console.cloud.google.com/?cloudshell=true) . **Note:** If you installed the gcloud CLI  previously, make sure you have the latest version by running`gcloud components  update`.\n- Configure Google Cloud CLI to use the allowlisted project for billing and  quota.```\n gcloud config set billing/quota_project PROJECT_ID\n```Replace `` with the ID of the project that was added to the allowlist for the managed workload identity preview.\n- Review the [Managed workload identities overview](/iam/docs/managed-workload-identity) documentation.\n- Enable the Compute Engine API:```\ngcloud services enable compute.googleapis.com\n```\n### Required roles\nTo get the permissions that you need to create VMs that use managed workload identity certificates for authentication to other workloads,   ask your administrator to grant you the  following IAM roles on the project:\n- [Compute Instance Admin (v1) ](https://cloud.google.com/iam/docs/understanding-roles#compute.instanceAdmin.v1) (`roles/compute.instanceAdmin.v1`)\n- [Service Account User ](https://cloud.google.com/iam/docs/understanding-roles#iam.serviceAccountUser) (`roles/iam.serviceAccountUser`)\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYou might also be able to get  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .\n## Overview\nTo use managed workload identities for your applications, you must perform the following tasks:\n- **Security Administrator** :- [Create managed workload identities](/iam/docs/create-managed-workload-identities#configure_identities) in a workload identity pool.\n- [Define the workload attestation policy](/iam/docs/create-managed-workload-identities#define_the_workload_attestation_policy) .\n- [Configure Certificate Authority Service to issue certificates for managed workload identities](/iam/docs/create-managed-workload-identities#configure_ca) .\n- [Authorize managed workload identities to request certificates from the CA pool](/iam/docs/create-managed-workload-identities#grant-role-ca-pool) .\n- [Define the trust and certificate issuance config](/iam/docs/create-managed-workload-identities#define_partner_metadata) .\n- **Compute Administrator** :- [Get the configuration file to upload the partner metadata](#get_json_file) .\n- Enable managed workload identities for workloads running in Compute Engine:- For [individuals VMs](#enable-workload-id-vms) \n- For [managed-instance groups (MIGs)](#create-workload-id-migs) .\n- [Access workload credentials on a Linux VM](#access_credentials) .\n## Configure managed workload identities in Identity and Access Management\n- Follow the instructions in [Configure managed workload identities authentication ](/iam/docs/create-managed-workload-identities) .These instructions detail how to complete the following:- Create a workload identity pool.\n- Create namespaces in the workload identity pool. You use the namespaces to create administrative boundaries for your managed workload identities, for example, a namespace for each of the applications owned by your organization.\n- Create a managed workload identity in a namespace in the workload identity pool. For example, you might create a namespace for an application and create managed identities within that namespace for the microservices that support that application.\n- Create a service account. Compute Engine VMs can be authorized to receive a managed workload identity based on the Google Cloud service account attached to the VM.\n- Create a workload attestation policy that allows your workload to be issued credentials for the managed workload identity. To be issues credentials for the managed workload identity, the workload must be within a specified project and have the service account attached.\n- Configure Certificate Authority Service to issue certificates for managed workload identities:- Configure the root CA pool\n- Configure the subordinate CAs\n- Authorize managed workload identities to request certificates from the CA pool## Get the configuration file to upload the partner metadata\nYour security administrator creates a JSON file that contains the following:\n- The configuration for the workload identity\n- The [certificate issuance config](/iam/docs/create-managed-workload-identities#define_cert_issuance_config) \n- The [trust config](/iam/docs/create-managed-workload-identities#define_trust_config) \nThis file should be named `CONFIGS.json` . You use this file when creating an instance template for MIGs or when creating an individual VM.\n**Note:** The format of the JSON and the values provided must be valid. The VM creation will fail if the file provides invalid input.\nThe `CONFIGS.json` file should be similar to the following:\n```\n\u00a0 {\u00a0 \"wc.compute.googleapis.com\": {\u00a0 \u00a0 \u00a0\"entries\": {\u00a0 \u00a0 \u00a0 \u00a0 \"certificate-issuance-config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"primary_certificate_authority_config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"certificate_authority_config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"ca_pool\": \"projects/PROJECT_ID/locations/SUBORDINATE_CA_POOL_REGION/caPools/SUBORDINATE_CA_POOL_ID\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"key_algorithm\": \"rsa-2048\"\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 \u00a0 \"trust-config\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"POOL_ID.global.PROJECT_NUMBER.workload.id.goog\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"trust_anchors\": [{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"ca_pool\": \"projects/PROJECT_ID/locations/SUBORDINATE_CA_POOL_REGION/caPools/SUBORDINATE_CA_POOL_ID\"\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\u00a0 \u00a0 \u00a0}\u00a0 }\u00a0 },\u00a0 \"iam.googleapis.com\": {\u00a0 \u00a0 \u00a0\"entries\": {\u00a0 \u00a0 \u00a0 \u00a0 \"workload-identity\": \"spiffe://POOL_ID.global.PROJECT_NUMBER.workload.id.goog/ns/NAMESPACE_ID/sa/MANAGED_IDENTITY_ID\"\u00a0 \u00a0 \u00a0}\u00a0 }\u00a0 }\u00a0 \n```\n## Enable managed workload identities for a Managed Instance Group (MIG)\nA [managed instance group (MIG)](/compute/docs/instance-groups#managed_instance_groups) is a group of virtual machine (VM) instances that you treat as a single entity. Each VM in a MIG is created using an instance template. To enable the VMs in the MIG to use managed workload identities, you specify the configuration in the instance template.\n### Create an instance template\nCreate an [instance template](/compute/docs/instance-templates) with the managed workload identities feature enabled. Then use this template to create a managed instance group (MIG).\nUse the [gcloud beta compute instance-templates create command](/sdk/gcloud/reference/beta/compute/instance-templates/create) to create a new instance template that enables managed workload identities.\n```\ngcloud beta compute instance-templates create INSTANCE_TEMPLATE_NAME \\\n --service-account SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com \\\n --metadata enable-workload-certificate=true \\\n --partner-metadata-from-file CONFIGS.json\n```\nYou can add additional flags when creating the instance template to customize the VMs it creates, such as specifying the machine type and image, instead of using the default values.\nReplace the following:- : the name for the new template.\n- : the name of the service account that is allowed to receive the managed identity.\n- : the ID of the project where the service account was created.\n- : The configuration file containing the certificate issuance config, the trust config, and the managed workload identity.\nFor more information, see [Create instance templates](/compute/docs/instance-templates/create-instance-templates) .\n### Create a managed instance group from the template\nCreate a [managed instance group](/compute/docs/instance-groups#managed_instance_groups) that uses an instance template that enables the managed workload identities. For details on how to create the instance template, see [Create an instance template](#create-instance-template-for-workload-ids) .\nCreate a MIG using the instance template and the [gcloud compute instance-groups managed create command](/sdk/gcloud/reference/compute/instance-groups/managed/create) .\n```\ngcloud compute instance-groups managed create INSTANCE_GROUP_NAME \\\n --size=SIZE \\\n --template=INSTANCE_TEMPLATE_NAME \\\n --zone=ZONE\n```\nReplace the following:- : a unique ID for the managed instance group. For details on valid names, see [Name resources](/compute/docs/naming-resources) .\n- : the size of the managed instance group\n- : the name of the instance template to use when creating VMs in the MIG.\n- : the zone to create the VMs in\nFor detailed information about creating MIGs, see [Basic scenarios for creating managed instance groups (MIGs)](/compute/docs/instance-groups/creating-groups-of-managed-instances)\n## Enable managed workload identities for individual VMs\nYou can enable managed workload identities for a VM either when creating the VM or by updating the partner metadata for an existing VM.\n### Create VMs with managed workload identities enabled\nWhen creating a VM, to enable the managed workload identities feature for the VM, you must do the following:\n- Specify a service account for the VM to use\n- Set the`enable-workload-certificate`metadata attribute to`true`\n- Specify the certificate issuance config and trust config information as [partner metadata](/iam/docs/create-managed-workload-identities#define_partner_metadata) .\nUse the [gcloud beta compute instances create command](/sdk/gcloud/reference/beta/compute/instances/create) to create a new VM. Use the `CONFIGS.json` file supplied by your security administrator, or created by following the instructions in [Create a configuration file to upload the partner metadata](/iam/docs/create-managed-workload-identities#create_json_file) .- Create a VM with the managed workload identities feature enabled.```\ngcloud beta compute instances create INSTANCE_NAME \\\n --zone=INSTANCE_ZONE \\\n --service-account SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com \\\n --metadata enable-workload-certificate=true \\\n --partner-metadata-from-file CONFIGS.json\n```You can add additional lines to the command to configure the VM, such as the machine type and image, instead of using the default values. For more information, see [Create and start a VM instance](/compute/docs/instances/create-start-instance) .Replace the following:- : a unique name for the VM. For details on valid instance names, see [Name resources](/compute/docs/naming-resources) .\n- : the zone to create the VM in.\n- : the name of the service account that is allowed to receive the managed identity.\n- : the ID of the project where the service account was created.\n- : The name of the configuration file that contains the certificate issuance config, the trust config, and the managed workload identity configuration.\n### Enable managed workload identities on existing VMs\nTo enable managed workload identities for an existing VM, update the VM to configure the following:\n- Set the`enable-workload-certificate`metadata attribute to`true`\n- Specify the certificate issuance config and trust config information as [partner metadata](/iam/docs/create-managed-workload-identities#define_partner_metadata) .\nThis task uses the `CONFIGS.json` file supplied by your security administrator, or created by following the instructions in [Create a configuration file to upload the partner metadata](/iam/docs/create-managed-workload-identities#create_json_file) .\n- Update the configuration for an existing VM to enable managed workload identities.```\ngcloud beta compute instances update VM_NAME \\\n --zone=ZONE \\\n --metadata enable-workload-certificate=true \\\n --partner-metadata-from-file CONFIGS.json\n```Replace the following:- : the name of the VM\n- : the zone where the VM is located\n- : The configuration file containing the certificate issuance config, the trust config, and the managed workload identity.\n## Access workload credentials on a Linux VM\nAfter successfully configuring workload to workload authentication using mTLS, you can access the issued credentials on your VM.\nThere are two ways to access the Compute Engine managed workload identity credentials and the associated trust bundle:\n- The file system on the VM\n- The Compute Engine metadata server\n### Access the workload credentials and trust bundle using the file system on the VM\nThis method puts the X.509 credentials and the trust bundle at a specific path inside the VM's file system. Applications can directly read the credentials and the trust bundle from the file system. For examples of how to retrieve the credentials, see the following examples on GitHub:\n- [Go](https://github.com/grpc/grpc-go/tree/master/security/advancedtls/examples) \n- [Java](https://github.com/grpc/grpc-java/blob/master/netty/src/test/java/io/grpc/netty/AdvancedTlsTest.java) \n- [C++](https://github.com/grpc/grpc/tree/master/test/cpp) \nThe VM must run the Compute Engine guest agent version 20231103.01 or later. Use the following command to check the version of the Compute Engine guest agent on your VM:\n```\ngcloud compute instances get-serial-port-output INSTANCE_NAME | grep \"GCE Agent Started\"\n```\nIf the version of the guest agent is less than 20231103.01, you can update it by following the instructions in [Updating the guest environment](/compute/docs/images/install-guest-environment#update-guest) .\nTo make the workload credentials and trust bundle available in the file system of a VM, complete the following steps:\n- Install or update the [Compute Engine guest agent](/compute/docs/images/install-guest-environment) to version 20231103.01 or later. The guest agent does the following:- Automatically retrieves the credentials and the trust bundle from the Compute Engine metadata server.\n- Ensures atomic writes to the file system while updating the X.509 certificate and the corresponding private key.\n- Automatically refreshes the credentials and the trust bundle, for example, when the mTLS certificates are rotated.\n- After you install or update the Compute Engine guest agent on the guest OS, the workload refresh job creates the directory `/var/run/secrets/workload-spiffe-credentials` and sets the directory permissions to `0755 (rwxr-xr-x)` .The directory contains the following files created with `0644 (rw-r--r--)` permissions:- `private_key.pem`: a PEM-formatted private key\n- `certificates.pem`: a bundle of PEM-formatted X.509 certificates that can be presented to other VMs as the client certificate chain, or used as a server certificate chain.\n- `ca_certificates.pem` : a bundle of PEM-formatted X.509 certificates to use as trust anchors when validating the certificates of peers. **Note:** `ca_certificates.pem` contains certificates for the local SPIFFE trust domain for the VM, which is:```\nspiffe://POOL_ID.global.PROJECT_NUMBER.workload.id.goog\n```\n- `config_status` : a log file containing error messages.\n- Applications can read the certificates, private key and the trust bundle from the file system directly to establish mTLS connections. **Note:** Your application code must verify that the private key and certificate file are consistent before using them to establish mTLS connection. A mismatch between the private key and certificate may happen if the Compute Engine guest agent refreshes the credentials from MDS in the time between the application reading the `private_key.pem` file and the `certificates.pem` file or the other way around. For example, applications written in Golang can use the [tls.LoadX509KeyPair method](https://pkg.go.dev/crypto/tls#LoadX509KeyPair) to check for consistency between the public and private key pair.\n### Access the workload credentials and trust bundle using the metadata server\nAn application running on a Compute Engine VM can directly [query the metadata server endpoints](/compute/docs/metadata/querying-metadata) and retrieve the credentials and the trust bundle. The application is responsible for periodically checking the metadata server endpoints for new credentials and updates to the trust bundle.\nThe Compute Engine metadata server exposes three HTTP endpoints to enable the use of the managed workload identities feature by applications running inside the VM.\n- `gce-workload-certificates/config-status`: An endpoint containing any errors in the configuration values provided through the VM metadata.\n- `gce-workload-certificates/workload-identities`: An endpoint of identities managed by the Compute Engine control plane. This endpoint contains the X.509 certificate and the private key for the VM's trust domain.\n- `gce-workload-certificates/trust-anchors`: An endpoint containing a set of trusted certificates for peer X.509 certificate chain validation.\nTo learn more about querying the metadata for a VM instance, see [About VM metadata](/compute/docs/metadata/overview) .\nTo access the workload credentials and trust bundle using the metadata server, your application should do the following:\n- Query the `gce-workload-certificates/config-status` endpoint. Ensure that the HTTP response code is `200` and that the response doesn't contain any `partnerMetadataConfigsErrors` errors. If such errors exist, update the appropriate configuration with valid values by following the steps discussed in [Update certificate issuance and trust config](#update_trust_config) .To check the value, you can run the following command on the VM:```\ncurl \"http://metadata.google.internal/computeMetadata/v1/instance/gce-workload-certificates/config-status\" -H \"Metadata-Flavor: Google\"\n```The `config-status` endpoint returns a JSON response with following structure:```\n{\n \"partnerMetadataConfigsErrors\": {\n  \"errors\": { // A map of errors keyed by attribute name.\n   \"ATTRIBUTE_NAME\" : \"ERROR_DETAILS\",\n   ...\n  }\n }\n}\n```\n- Query the `gce-workload-certificates/workload-identities` endpoint. Ensure that the HTTP response code is `200` . The endpoint returns a JSON response with following structure:```\n{\n \"workloadCredentials\": { // Credentials for the VM's trust domains\n \"spiffe://POOL_ID.global.PROJECT_NUMBER.workload.id.goog/ns/NAMESPACE_ID/sa/MANAGED_IDENTITY_ID\": {\n  \"certificatePem\" : \"X.509 certificate or certificate chain\",\n  \"privateKeyPem\" : \"Private for X.509 leaf certificate\"\n }\n }\n}\n```Extract the `certificatePem` and the `privateKeyPem` . It is critical that both values are read from the same response to avoid mismatch between the private and public key in case the managed workload identities were refreshed by the Compute Engine infrastructure.\n- Query the `gce-workload-certificates/trust-anchors` endpoint. Ensure that the HTTP response code is `200` . The response will only contain the trust anchors for the SPIFFE trust domain, if specified. Otherwise, the query returns an error. The `trust-anchors` endpoint returns a JSON response with following structure:```\n{\n \"trustAnchors\": { // Trust bundle for the VM's trust domains\n  \"POOL_ID.global.PROJECT_NUMBER.workload.id.goog\": {\n   \"trustAnchorsPem\" : \"Trust bundle containing the X.509 roots certificates\"\n  }\n }\n}\n```The contents of `trustAnchorsPem` contains the trust bundle that can then be used to authenticate peer X.509 credentials when establishing a mTLS connection.## Refreshing the credentials and trust bundle\nThe Compute Engine control plane automatically rotates the managed workload identity credentials and the trust anchors periodically.\nIf your applications use the file system to access the workload credentials and trust bundle, the Compute Engine guest agent automatically refreshes the credentials and the trust bundle, for example, when the mTLS certificates are rotated.\nIf your applications query the metadata server, then the applications running on a VM must periodically query the metadata server endpoints to get the latest set of managed workload identity credentials and the trust bundle. Failure to do so can break applications due to certificate expiration or changes to the trust bundle, which can cause mTLS connection establishment to fail. Google recommends that applications query the metadata server for the managed workload identity credentials and the trust bundle every 5 minutes.\n## Update certificate issuance and trust config\nYou can modify the certificate issuance config and trust config for a VM that uses managed workload identities.\n### Update the instance template for a managed instance group\nTo update the certificate issuance config and trust config values in an instance template, you have to create a new template with the new values. Therefore, updating the certificate issuance config and trust config for existing managed instance groups (MIGs) is not supported.\n### Update individual Compute Engine VMs\n**Note:** Only the certificate issuance config and trust config values can be updated. The managed workload identity cannot be changed after you create a VM.\nTo update the certificate issuance config and trust config, update the contents of the `CONFIGS.json` file and use the [gcloud beta compute instances update command](/sdk/gcloud/reference/beta/compute/instances/update) to apply the updates:\n```\ngcloud beta compute instances update INSTANCE_NAME \\\u00a0 \u00a0 --partner-metadata-from-file FILENAME.json\n```\nReplace the following:\n- : The name of the VM that you are updating the config values for\n- : The name of the modified config file, for example`CONFIGS.json`## Troubleshoot\nTo find methods for diagnosing and resolving common errors related to retrieving workload credentials, refer to the [Troubleshoot workload to workload authentication](/compute/docs/troubleshooting/troubleshooting-workload-to-workload-auth) documentation.\n## What's next\n- Learn more about the following concepts:- [Authenticate to Compute Engine](/compute/docs/authentication) \n- [Configure managed workload identity authentication](/iam/docs/create-managed-workload-identities) \n- [Basic scenarios for creating managed instance groups (MIGs)](/compute/docs/instance-groups/creating-groups-of-managed-instances) \n- [Compute Engine guest agent](/compute/docs/images/guest-environment)", "guide": "Compute Engine"}