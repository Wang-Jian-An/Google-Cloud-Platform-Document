{"title": "Documentation - Plan a set of restores", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Plan a set of restores\nRestore plans are pre-configured restore scenarios for a corresponding line of backups. Restore plans can assign permissions for users with the Backup Creator role to use these configurations.\nBackup Creators can quickly and independently restore a backup when an incident occurs. For example, persistent data might be corrupted by a software update in a deployed application, putting the application namespace in an invalid state, which requires a restore.\nDuring restoration, you can optionally apply a set of rules which are used to match a set of resources and substitute the current value of an attribute on those resources for a new value. For example, a substitution rule can change the namespace of the backed up resources during the restore to migrate a workload from one namespace to another.\n", "content": "## Create a restore plan\nAdministrators create and manage restore plans. To get the permissions that you need to create a restore plan, ask your Organization IAM Admin to grant you the User Cluster Backup Admin ( `user-cluster-backup-admin` ) role. If you are an Application Operator, ask an administrator that has User Cluster Backup Admin privileges to create a restore plan for you.\nCreate a restore plan using the GDCH console or the API.\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click **Create restore plan** .\n- In the **Restore plan basics** section, complete the following steps and click **Next** :- Enter the restore plan name and an optional description.\n- In the **Source cluster** field, choose the source cluster for the restore.\n- In the **Backup plan** field, choose a backup plan for an existing cluster that corresponds to the backups that you want to restore.\n- In the **Target cluster** field, choose the target cluster where you want to restore the backup.\n- In the **Grant access to this restore plan** section, click **Add\nproject** to give other projects access to this plan. Anyone with access to those projects can view the restore plan.\n- In the **Choose namespaced resources** section, complete the following steps and click **Next** :- Choose what namespaces to restore:- Click **All namespaced resources** to restore all namespaced resources in the backup.\n- Click **Selected namespaced resources** to specify the namespaces in the backup to restore.- Click **Edit cluster namespaces** and then **Add cluster\nnamespace** to enter a namespace.\n- Click **Selected protected applications** to add resources by specifying the namespace and application name.\n- Choose how to handle conflicts:- Click **Fail on conflict (non-destructive)** to fail the restore if any namespaces targeted for restore from a backup already exist in the target cluster.\n- Click **Rollback (destructive)** to delete the existing namespaces before restoring the new namespaces if any namespaces targeted for restore from a backup already exist in the target cluster.\n- Choose how to restore volume data:- Click **Provision new volumes and restore volume data from\nbackup** to restore volume data from the backup on a new persistent disk.\n- Click **Don't restore volume data** to provision a new persistent volume. If the target cluster contains an unbound persistent volume that satisfies the`PersistentVolumeClaim`requirements, the cluster is bound to the volume.\n- Click **Reuse existing volumes containing your data** to not restore volume backup data. Any`PersistentVolumeClaims`are bound to volumes that reference existing persistent disks.\n- Optional: In the **Choose cluster-scoped resources** section, complete the following steps and click **Next** :- Click **Don't restore cluster-scoped resources** to leave the existing version of the resource untouched.\n- Click **Restore cluster-scoped resources** by GroupKind to restore these resources.- Click **Edit GroupKinds** to add more cluster-scoped resources. Enter the **API group** and **Object kind** to match resources within those types.\n- Click **Preserve existing resources** to create resources if they don't exist on the target cluster.\n- Click **Overwrite resources in target cluster** to delete a resource if it already exists in the target cluster, and restore the copy from the backup.\n- Optional: In the **Add substitution rules** section, complete the following steps and click **Next** :- Click **Add new rule** .\n- In the **Cluster namespaces** box, type a list of namespaces to match resources within those namespaces.\n- To add GroupKinds, click **Add GroupKind** and enter the **API\ngroup** and **Object kind** to match resources within those types.\n- In the **JSON path** field, type the JSON path that identifies the fields within the matched resources for which the substitution applies.\n- In the **Original value pattern** field, type the original pattern to compare against the new value.\n- In the **New value** field, type the new value that replaces the current value of the matched attributes.\n- Click **Save** .\n- Click **Create** .\nCreate a `RestorePlan` custom resource to plan restores from an existing `BackupPlan` . The `RestorePlan` assigns the exact set of resources and namespaces that a Backup Creator is permitted to restore. Here's an example of a `RestorePlan` :\n```\napiVersion: backup.gdc.goog/v1kind: RestorePlanmetadata:\u00a0 name: restoreplan-sample\u00a0 namespace: defaultspec:\u00a0 backupPlanName: \"backupplan-sample\"\u00a0 clusterName: cluster-sample\u00a0 description: \"restores test clusters\"\u00a0 restoreConfig:\u00a0 \u00a0 backupRepository: backup-repository\u00a0 \u00a0 clusterName: \"cluster-sample\"\u00a0 \u00a0 clusterResourceConflictPolicy: UseBackupVersion\u00a0 \u00a0 namespacedResourceRestoreMode: DeleteAndRestore\u00a0 restoreScope:\u00a0 \u00a0 \u00a0 selectedNamespaces:\u00a0 \u00a0 \u00a0 \u00a0 namespaces: [\"nginx-2\"]\u00a0 \u00a0 volumeDataRestorePolicy: RestoreVolumeDataFromBackup\u00a0 \u00a0 substitutionRules:\u00a0 \u00a0 \u00a0 - newValue: \"newhippo\"\u00a0 \u00a0 \u00a0 \u00a0 originValuePattern: game-config-2\u00a0 \u00a0 \u00a0 \u00a0 target:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 groupKinds:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 jsonPath: '{.metadata.name}'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 namespaces:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - nginx-2\u00a0 \u00a0 \u00a0 - newValue: \"hippo\"\u00a0 \u00a0 \u00a0 \u00a0 originValuePattern: game-config\u00a0 \u00a0 \u00a0 \u00a0 target:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 groupKinds:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 jsonPath: '{.metadata.name}'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 namespaces:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - nginx-2\n```\nThis example uses the following values:\n| Value   | Attribute      | Description                                                                                                                                                                               |\n|:---------------|:-------------------------------||\n| backupPlanName | nan       | The name of the BackupPlan to restore. The BackupPlan must exist in the same namespace as the RestorePlan.                                                                                                                                                       |\n| clusterName | nan       | Name of the source cluster in a project which this plan is associated with.                                                                                                                                                               |\n| description | nan       | A user-provided description of the purpose of the RestorePlan.                                                                                                                                                                   |\n| restoreConfig | nan       | Configuration for the restore process.                                                                                                                                                                         |\n| nan   | backupRepository    | Specifies the repository to store the Restore resources. This repository can be different from the repository that the Backup is from. The repository must be a ReadWrite repository in the cluster.                                                                                                                                |\n| nan   | clusterResources    | A list of GroupKinds. A non-namespaced resource must be of one of the GroupKinds specified in the list to be restored. PersistentVolume resources, while non-namespaced, are handled separately. For more information, see volumeDataRestorePolicy. Specifying PersistentVolume GroupKind in this list does not affect whether a PersistentVolume is restored.                                                                                         |\n| nan   | clusterResourceConflictPolicy | Specifies behavior for handling cluster resource conflicts, such as if the resource already exists in the cluster. Specify one of: UseExistingVersion: Will not overwrite existing resources during conflict UseBackupVersion: Deletes and recreates existing cluster resources during conflict. This is a dangerous option which can cause unintended data loss if used inappropriately. For example, deleting a custom resource definition causes Kubernetes to delete all custom resources of that type.                                                     |\n| nan   | volumeDataRestorePolicy  | Specify one of: NoVolumeDataRestoration: PV/PVCs are not restored. RestoreVolumeDataFromBackup: New PVs and PVCs are created from the backup. ReuseVolumeHandleFromBackup: Does create new PVs, but attempts to restore PVCs using their original PVs. Intended for restoring to the same cluster that the backup was taken from.                                                                                                 |\n| nan   | namespacedResourceRestoreMode | Handles the situation where the sets of namespaced resources being restored already exist in the target cluster. Specify one of: DeleteAndRestore: When conflicting top-level resources such as the Namespaces or ProtectedApplications are encountered, this first triggers a deletion of the conflicting resource and all of its referenced resources before restoring the resources from the Backup. Use this mode only when you intend to revert some portion of a cluster to an earlier state. FailOnConflict: If conflicting top-level resources such as the Namespace or ProtectedApplication resource are encountered at the beginning of the restore process or during the restore process, the Restore will fail. |\n| nan   | namespacedResourceRestoreScope | Specifies which Namespaces or ProtectedApplications are permitted for restoration.                                                                                                                                                             |\n| nan   | restoreScope     | Specifies what resources to restore.                                                                                                                                                                         |\n| nan   | substitutionRules    | Rules to substitute values in the backed-up Kubernetes resources during restore. An empty list means no substitution will occur. Substitution rules are applied sequentially in the order defined. This order is important, as changes made by a rule might impact the matching logic of the subsequent rule.                                                                                                      |\nAfter a `RestorePlan` is created, users with the Backup Creator role can manually restore `Backups` .\n## View a restore plan\nYou must have the Backup Admin or Backup Creator role to view restore plans.\nView a restore plan using the GDCH console:\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click **Select project** to select an organization or project depending on your role:- Backup Admin: Select an organization to see all restore plans in an organization or select a project to see all restore plans in a project.\n- Backup Creator: Select a project to see all restore plans in a project.\n- Click the **Restore Plans** tab.\n- Click a restore plan in the list to view its details.## Edit a restore plan\nYou must have the Backup Admin or Backup Creator role to view restore plans.\n**Note:** If the backup repository associated with the restore plan you want to edit has a value in the **Linked Cluster(read-only)** field when the restore plan is created, it is created twice. The restore plan is propagated to both the read-write and read-only clusters. When you edit the restore plan owned by a backup repository that has both read-write and read-only clusters set, you must edit the restore plan that has the `TARGET CLUSTER` set to the read-write cluster. If you edit a restore plan with the `TARGET CLUSTER` set to read-only cluster, it will result in an error.\nEdit a restore plan using the GDCH console:\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click **Select project** to select an organization or project depending on your role:- Backup Admin: Select an organization to see all restore plans in an organization or select a project to see all restore plans in a project.\n- Backup Creator: Select a project to see all restore plans in a project.\n- Click the **Restore Plans** tab.\n- Click on the name of the restore plan you want to edit.\n- Click the **Plan Configuration** tab to view the fields that can be modified.\n- Click the Edit icon next to **Namespaced resources** to edit that resource:- In the **Choose namespaced resources** section, select which namespaced resources in the backup that you want to restore:- Select **All namespaced resources** to restore all namespaced resources in the backup.\n- Select **Selected namespaced resources** to restore resources from the selected namespaces in the backup:- Select **Edit Cluster Namespaces** to select the cluster namespace.\n- In the **Cluster namespace 1** field, enter the name for the namespace.\n- Click the **Save** button.\n- Select **Selected protected applications** to restore resources from the selected protected applications in the backup:- Select **Edit Protected Applications** to select the namespace and protected application.\n- In the **Namespace 1** field, enter the name for the namespace.\n- In the **Protected application 1** field, enter the name of the protected application.\n- Click the **Save** button.\n- Click the Edit icon next to **Cluster-scoped resources** to edit that resource:- Optional: In the **Choose cluster-scoped resources** section, select the cluster-scoped resources to restore by specifying the API groups and `GroupKinds` , and decide how the conflicts must be resolved:- Select **Don't restore cluster-scoped resources** to remove cluster-scoped resources from the restore process.\n- Select **Restore cluster-scoped resources by GroupKind** to restore the resources by the specified `GroupKind` :\n- To specify a `GroupKind` , click the **Edit GroupKind** button.\n- Click the **Add GroupKind** button.\n- Enter the name of the `GroupKind` .\n- Click the **Save** button.\n- In the **Conflict handling** section, determine what action to take if the resource already exists in the target cluster:- Select **Preserve existing resources** to create resources if they don't already exist on the cluster.\n- Select **Overwrite existing resources** to delete any existing resources found, and replace this resource with the restored resource.\n- Click the **Save** button to confirm your changes.\n- In the **Substitution rules** section, click the **Add New Rule** button to add a new substitution rule:- In the **Cluster namespaces** field, enter the name of the cluster namespace for which to apply this substitution rule.\n- Click the **Add GroupKind** button to apply this rule to a certain`GroupKind`object.\n- In the **JSON path** field, enter the path to the resource attribute that you want to substitute, in JSON format.\n- In the **Original value pattern** field, enter a regular expression that matches the original value of the attribute.\n- In the **New value** field, enter the value that is substituted for the target field. If this field is blank, the target field is removed from the resource.\n- Click the **Save button** to complete the creation of the new substitution rule.\n- In the **Substitution rules** section, click the Edit icon to edit an existing substitution rule.\n- In the **Substitution rules** section, click the Delete icon to delete an existing substitution rule.## Delete a restore plan\nTo get the permissions required to delete a `RestorePlan` , ask your Organization IAM Admin to grant you the Backup Admin ( `backup-admin` ) role.\n`RestorePlans` can be deleted through GDCH console or by deleting the resource directly from the Kubernetes API server. This cleans up any associated `RestorePlan` artifacts from the object storage.\n- Sign in to the GDCH console.\n- In the navigation menu, click **Backup for Clusters** .\n- Click **Select project** to select an organization or project depending on your role:- Backup Admin: Select an organization to see all of the restore plans in an organization, or select a project to see all of the restore plans in a project.\n- Backup Creator: Select a project to see all of the restore plans in a project.\n- Click the **Restore Plans** tab.\n- Click the name of the restore plan that you want to delete.\n- Click the **Delete** button.\n- Enter the name of the restore plan into the field.\n- Click the **Delete** button to confirm the deletion of this restore plan.\nDelete the restore plan resource:\n```\nkubectl delete restoreplan RESTORE_PLAN_NAME -n NAMESPACE\n```\nReplace the following:- ``: the name of the restore plan.\n- ``: the namespace that contains the restore plan.", "guide": "Documentation"}