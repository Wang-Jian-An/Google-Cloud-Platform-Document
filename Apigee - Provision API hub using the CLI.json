{"title": "Apigee - Provision API hub using the CLI", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Provision API hub using the CLI\n**    Preview    \u2014 Apigee API hub ** This feature is subject to the \"Pre-GA Offerings Terms\" in the General Service Terms section   of the [Service Specific Terms](/terms/service-terms#1) .     Pre-GA features are available \"as is\" and might have limited support.    For more information, see the [launch stage descriptions](/products#product-launch-stages) .\nThis section describes how to provision the API hub using the  the command line.\n**Required permissions:** You must have administrator permissions  to provision API hub.  See [  Set up IAM permissions](/apigee/docs/api-hub/permissions#set-up-iam-permissions) for instructions.\n**Tip:** Allow for about an hour to provision API hub.\n", "content": "## Summary of steps\nThe provisioning steps are as follows:\n- Verify that you have met the [API hub prerequisites](/apigee/docs/api-hub/prerequisites) .\n- [Step 1: Enable APIs](#enable-apis) . Apigee requires you to  enable several Google Cloud APIs.\n- [Step 2: Define environment variables](#define-evs) .  Environment variables help ensure consistency when running commands.\n- [Step 3: Create service account and CMEK](#create-cmek) . This [service account](/run/docs/securing/service-identity) is used  by the [  Google Cloud client libraries](/apis/docs/cloud-client-libraries) to authenticate with Google Cloud APIs.  Because information about internal APIs may be considered sensitive,  Apigee requires a CMEK to encrypt and decrypt (protect) data at rest.  The CMEK must be in the same region as the instance location.\n- [Step 4: Create instance](#create-instance) . An instance is  where your project and related services are stored.\n- [Check instance status](#get-instance) (optional). Because  it can take some time to create an instance, use this command to check the  status.\n- [Delete instance](#delete-instance) (optional). Use this  command if you need to remove an instance.\n- [Check operation status](#get-operation) (optional). Use this  command to check long running operation status.## Step 1: Enable APIs\nTo use API hub, you must enable the following APIs for the project:\n- **Apigee Registry API:** API hub interacts with API Registry  to view and manage your organization's APIs.\n- **Cloud Key Management Service (KMS) API:** Allows customers to manage encryption keys  and perform cryptographic operations with those keys.\n- **Service Usage API:** Enables services that service consumers want to use on  Google Cloud Platform, lists the available or enabled services, or disables services that  service consumers no longer use.\nYou can use the Google Cloud console UI or the CLI to enable the APIs.\nTo enable the APIs using the UI, perform the following steps  in the Google Cloud console:- Enable the **Apigee Registry API** : [Go to Enable Apigee Registry API](https://console.cloud.google.com/apis/library/apigeeregistry.googleapis.com) Click **Enable** .Google Cloud enables the API for your Google Cloud project.\n- Enable the **Cloud Key Management Service (KMS) API** : [Go to Enable Cloud KMS API](https://console.cloud.google.com/apis/library/cloudkms.googleapis.com) Click **Enable** .Google Cloud enables the API for your Google Cloud project.\n- Enable the **Service Usage API** : [Go to Enable Service Usage API](https://console.cloud.google.com/apis/library/serviceusage.googleapis.com) Click **Enable** .Google Cloud enables the API for your Google Cloud project.\n- To confirm that you have enabled the APIs: [Go to Enabled APIs & Services](https://console.cloud.google.com/apis/dashboard) The APIs you just added are displayed in the list of enabled APIs:- Apigee Registry API\n- Cloud Key Management Service (KMS) API\n- Service Usage API\n- Execute the following command:```\ngcloud services enable \\\n apigeeregistry.googleapis.com \\\n cloudkms.googleapis.com \\\n serviceusage.googleapis.com --project=PROJECT_ID\n```Where is the name of your Google Cloud console project.\n- (Optional) To check your work, use the `services list` command to show all   the enabled APIs:```\ngcloud services list\n```The response shows all enabled services, including the APIs that you just enabled.## Step 2: Define environment variables\nUsing environment variables ensures consistency and makes it easier for you to follow along in  the documentation in later steps.\n- Define the following environment variables, replacing the dynamic variables with your  actual values:```\nexport TOKEN=$(gcloud auth print-access-token)\n# ----- Set key_ring_name and key_name to values that will help you identify the API hub encryption key in future. ----export KEY_RING_NAME=YOUR_KEY_RING_NAME\nexport KEY_NAME=YOUR_KEY_NAME\nexport PROJECT_ID=YOUR_PROJECT_ID\nexport RUNTIME_LOCATION=YOUR_RUNTIME_LOCATION\n# -----If you already have a CMEK, define this environment variable----export CMEK_KEY_ID=YOUR_CMEK_KEY_ID\n```Where:- **TOKEN** is the token that authenticates and authorizes your calls to the Apigee Registry APIs. It should be passed in Authentication headers as a bearer token. Note that the token expires after a period of time and when it does, you can simply regenerate it using the same command. For more information, see the reference page for the [ print-access-token command](https://cloud.google.com/sdk/gcloud/reference/auth/application-default/print-access-token) .\n- **KEY_RING_NAME** is the name of the key ring you will use to identify your encryption [key ring](https://cloud.google.com/kms/docs/resource-hierarchy#key_rings) .\n- **KEY_NAME** is the name of the key you will use to identify your API hub [encryption key](https://cloud.google.com/kms/docs/cmek#cmek) .\n- **PROJECT_ID** is the Cloud project ID that you created as part of [Prerequisites](/apigee/docs/api-hub/prerequisites#prerequisites) .\n- **RUNTIME_LOCATION** is the physical location where the Apigee Registry  instance you will create later is located. The CMEK key needs to be in same  region as the runtime location. **Note:** For ` **RUNTIME_LOCATION** ` , be sure to use a name and not a zone name. For example, `us-west1` is a   region name, while `us-west1-a` is a zone in the region. See also [  Identifying a region or zone](https://cloud.google.com/compute/docs/regions-zones#identifying_a_region_or_zone) .For a list of available runtime locations, see [  Apigee locations](/apigee/docs/locations) .\n- **CMEK_KEY_ID** is the key ID of your customer-managed  encryption key. Key rotation is not currently supported.The key ID has the following syntax (similar to a file path):```\nprojects/PROJECT_ID/locations/RUNTIME_LOCATION/keyRings/KEY_RING_NAME/cryptoKeys/KEY_NAME\n```\n- (Optional) Check your work by echoing the values you just set. Note that when you want  to use a variable in your commands, precede the variable's name with a dollar sign ($).```\necho $TOKEN\necho $KEY_RING_NAME\necho $KEY_NAME\necho $PROJECT_ID\necho $RUNTIME_LOCATION\n# -----If you already have a CMEK----echo $CMEK_KEY_ID\n```## Step 3: Create service account and CMEK\nThis section describes how to create a service account and an encryption key ring and key.\n- Create an Apigee Registry per-product per-project service account for your project: **Note:** You can run this command multiple times even if the service account is already created.```\ngcloud beta services identity create --service=apigeeregistry.googleapis.com --project=$PROJECT_ID\n```The service account returned is similar to the following:```\nservice-755582297973@gcp-sa-apigeeregistry.iam.gserviceaccount.com\n```\n- Put the created service account in a variable:```\nexport SERVICE_ACCOUNT=YOUR_SERVICE_ACCOUNT\n```\n- Create a CMEK using KMS by following the steps below or use an  existing KMS key. The CMEK key needs to be in same region as the runtime  location.- Create a keyring:```\ngcloud kms keyrings create $KEY_RING_NAME \\\n --location $RUNTIME_LOCATION \\\n --project $PROJECT_ID\n```\n- Create a key:```\ngcloud kms keys create $KEY_NAME \\\n --keyring $KEY_RING_NAME \\\n --location $RUNTIME_LOCATION \\\n --purpose \"encryption\" \\\n --project $PROJECT_ID\n```\n- Verify that the key was created. Key creation may take a few minutes to complete.   If this command returns an empty list, wait and try again. When the key appears,   you can proceed to the next step:```\ngcloud kms keys list \\\n --keyring $KEY_RING_NAME \\\n --location $RUNTIME_LOCATION \\\n --project $PROJECT_ID\n```The key returned is similar to the following:```\nprojects/my-project/locations/us-west1/keyRings/my-key-ring-name/cryptoKeys/my-key-name\n```\n- Put the created key in a variable:```\nexport CMEK_KEY_ID=projects/PROJECT_ID/locations/RUNTIME_LOCATION/keyRings/KEY_RING_NAME/cryptoKeys/KEY_NAME\n```\n- Grant permission for service account on the CMEK:```\ngcloud kms keys add-iam-policy-binding $KEY_NAME \\\n --location $RUNTIME_LOCATION \\\n --keyring $KEY_RING_NAME \\\n --member serviceAccount:$SERVICE_ACCOUNT \\\n --role roles/cloudkms.cryptoKeyEncrypterDecrypter \\\n --project $PROJECT_ID\n```\n- Verify your service account has `roles/cloudkms.cryptoKeyEncrypterDecrypter` permission  on the CMEK.```\ngcloud kms keys get-iam-policy $CMEK_KEY_ID\n```## Step 4: Create instance\nIn this section, you will create a single instance of API hub.  There can be only one instance per project.\n**Note:** `CreateInstance` is a long-running operation (LRO); it takes 30-45 minutes to complete. API hub has a multi-single-tenant architecture. During this time, API hub is bringing up the infrastructure so you can start using API hub.When `CreateInstance` is called, it returns an operation ID. To check the status of the LRO, call [GetOperation](#get-operation) using the operation ID.\n### Sample request\n```\ncurl https://apigeeregistry.googleapis.com/v1/projects/$PROJECT_ID/locations/$RUNTIME_LOCATION/instances?instance_id=default \\\n -X POST \\\n -H \"Authorization: Bearer $TOKEN\" \\\n -H \"Content-Type: application/json\" \\\n --data-raw '{\n \"config\": {\n  \"cmek_key_name\": \"'\"$CMEK_KEY_ID\"'\"\n }\n}'\n```\n### Sample response\n```\n{\u00a0 \"name\": \"projects/my-project/locations/us-central1/operations/operation-1646987534895-5d9ed2af7889a-b4d376e8-14964abc\",\u00a0 \"metadata\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.apigeeregistry.v1.OperationMetadata\",\u00a0 \u00a0 \"createTime\": \"2022-03-11T08:32:14.950522187Z\",\u00a0 \u00a0 \"target\": \"projects/my-project/locations/us-central1/instances/default\",\u00a0 \u00a0 \"verb\": \"create\",\u00a0 \u00a0 \"requestedCancellation\": false,\u00a0 \u00a0 \"apiVersion\": \"v1\"\u00a0 },\u00a0 \"done\": false}\n```\n### Common errors - bad input data\n| 0     | 1                                                     |\n|:------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| HTTP status code: | 400 Bad Request                                                 |\n| Error message: | Instance is a singleton, and instance_id must be set to \"default\".                                    |\n| Possible cause: | Setting instance_id to anything other than default.                                        |\n| Solution:   | Use default as your instance_id.                                             |\n| nan    | nan                                                    |\n| HTTP status code: | 400 Bad Request                                                 |\n| Error message: | global is not a supported location to create Instance.                                       |\n| Possible cause: | Setting global as location.                                              |\n| Solution:   | Use one of the supported runtime locations listed above.                                       |\n| nan    | nan                                                    |\n| HTTP status code: | 401 Unauthorized                                                 |\n| Error message: | Request had invalid authentication credentials. Expected OAuth 2 access token, login cookie or other valid authentication credential.                   |\n| Possible cause: | Inavlid Auth Token.                                                |\n| Solution:   | The request token may be ill-formatted or expired. Regenerate auth token by running token=\"$(gcloud auth print-access-token)\" and pass Authorization: Bearer ${token} as header.        |\n| nan    | nan                                                    |\n| HTTP status code: | 403 PERMISSION_DENIED                                                |\n| Error message: | Location RUNTIME_LOCATION is not found or access is unauthorized.                                     |\n| Possible cause: | Setting location to an unsupported location.                                          |\n| Solution:   | Use one of the supported runtime locations listed above.                                       |\n| nan    | nan                                                    |\n| HTTP status code: | 400 Bad Request                                                 |\n| Error message: | Instance.config.cmek_key_name must be provided to create Instance.                                    |\n| Possible cause: | cmek_key_name is not provided in data.                                           |\n| Solution:   | Provide CMEK name. See Create service account and CMEK for detailed instructions.                                |\n| nan    | nan                                                    |\n| HTTP status code: | 400 Bad Request                                                 |\n| Error message: | Invalid key format: a valid key should be in the form of projects/PROJECT/locations/us-central1/keyRings/KEYRING/cryptoKeys/CRYPTOKEY.                   |\n| Possible cause: | cmek_key_name is ill-formatted.                                             |\n| Solution:   | Correct the key format.                                               |\n| nan    | nan                                                    |\n| HTTP status code: | 400 Bad Request                                                 |\n| Error message: | CMEK key location needs to match the location of instance creation.                                    |\n| Possible cause: | CMEK is in a different location.                                             |\n| Solution:   | Correct the location of the CMEK.                                             |\n| nan    | nan                                                    |\n| HTTP status code: | 400 Bad Request                                                 |\n| Error message: | Apigee Registry service account must have roles/cloudkms.cryptoKeyEncrypterDecrypter permission on the CMEK key.                         |\n| Possible cause: | Apigee service account lacks permission on the CMEK. Note that we know only that the service account doesn't have the necessary permission. It's probable that the key doesn't exist at all, but we can't tell. |\n| Solution:   | Verify that the key exists and that Apigee Registry service account has the required permission on the key.                          |\n### Common errors - bad state\n| 0     | 1                                                   |\n|:------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| HTTP status code: | 400 Bad Request                                                |\n| Error message: | If instance is active: Instance is ACTIVE at SOME_LOCATION. It cannot be created again. If instance is other than active state: Instance has state STATE at SOME_LOCATION. It cannot be created.   |\n| Possible cause: | Calling this API when an instance is already present or being created at some location.                              |\n| Solution:   | Ignore the error if this API is triggered by mistake. If it is a legitimate call and you indeed want to create an instance at this location, call DeleteInstance first, at the current instance location. |\n## Get instance\nThis section describes how to get details (region, state, etc.) about the  API hub Runtime Instance associated with your project.\n### Sample request\n```\ncurl https://apigeeregistry.googleapis.com/v1/projects/$PROJECT_ID/locations/$RUNTIME_LOCATION/instances/default \\\n -X GET \\\n -H \"Authorization: Bearer $TOKEN\"\n```\n### Sample response - instance creation in progress\n```\n{\u00a0 \"name\": \"projects/my-project/locations/us-central1/instances/default\",\u00a0 \"createTime\": \"2022-03-11T08:32:14.944703257Z\",\u00a0 \"updateTime\": \"2022-03-11T08:32:14.944703257Z\",\u00a0 \"state\": \"CREATING\",\u00a0 \"stateMessage\": \"Creating instance...\\nDetails: projects/PROJECT_ID/locations/RUNTIME_LOCATION/operations/operation-1646987534895-5d9ed2af7889a-b4d376e8-14964abc\",\u00a0 \"config\": {\u00a0 \u00a0 \"location\": \"us-central1\",\u00a0 \u00a0 \"cmekKeyName\": \"projects/PROJECT/locations/RUNTIME_LOCATION/keyRings/KEYRING/cryptoKeys/KEY\"\"\u00a0 }}\n```\n### Sample response - instance creation complete\n```\n{\u00a0 \"name\": \"projects/myproject/locations/us-central1/instances/default\",\u00a0 \"createTime\": \"2022-03-11T08:32:14.944703257Z\",\u00a0 \"updateTime\": \"2022-03-11T08:56:31.087709218Z\",\u00a0 \"config\": {\u00a0 \u00a0 \"location\": \"us-central1\",\u00a0 \u00a0 \"cmekKeyName\": \"projects/my-project/locations/us-central1/keyRings/apihub-key-ring/cryptoKeys/apihub-key\"\u00a0 },\u00a0 \"state\": \"ACTIVE\",\u00a0 \"stateMessage\": \"Instance is active and ready to use.\"}\n```\n### Common errors\n| 0     | 1                                                                            |\n|:------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| HTTP status code: | 404 Not Found                                                                         |\n| Error message: | Resource was not found.                                                                      |\n| Possible cause: | Calling this API at a location where an instance does not exist.                                                            |\n| Solution:   | Call the CreateInstance API before calling the GetInstance API at the location where you want to create the Instance. If the Instance has been created but you don't know the location, call CreateInstance API at any location, which fails with a message that provides a hint on the Instance location. |\n## Delete instance\nThis section describes how to delete an instance.\n**Note:** `DeleteInstance`is a Long Running Operation (LRO); it takes 10-15 seconds to complete. When`DeleteInstance`is called, it returns an operation ID. To check the status of the LRO, call [GetOperation](#get-operation) using the operation ID.\n### Sample request\n```\ncurl https://apigeeregistry.googleapis.com/v1/projects/$PROJECT_ID/locations/$RUNTIME_LOCATION/instances/default \\\n -X DELETE \\\n -H \"Authorization: Bearer $TOKEN\"\n```\n### Sample response\n```\n{\u00a0 \"name\": \"projects/my-project/locations/us-central1/operations/operation-1646987534895-5d9ed2af7889a-b4d376e8-14964abc\",\u00a0 \"metadata\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.apigeeregistry.v1.OperationMetadata\",\u00a0 \u00a0 \"createTime\": \"2022-03-11T08:32:14.950522187Z\",\u00a0 \u00a0 \"target\": \"projects/my-project/locations/us-central1/instances/default\",\u00a0 \u00a0 \"verb\": \"delete\",\u00a0 \u00a0 \"apiVersion\": \"v1\"\u00a0 },\u00a0 \"done\": false}\n```\n### Common errors\n| 0     | 1                     |\n|:------------------|:----------------------------------------------------------------------------------|\n| HTTP status code: | 404 Not Found                  |\n| Error message: | Resource was not found.               |\n| Possible cause: | Calling this API at a location where an instance does not exist.     |\n| Solution:   | Call DeleteInstance only at the location where instance is ACTIVE or FAILED.  |\n| nan    | nan                    |\n| HTTP status code: | 400 Bad Request                 |\n| Error message: | Instance must be ACTIVE or FAILED to be deleted. Current state: STATE.   |\n| Possible cause: | Calling this API at a location where the instance state is not ACTIVE or FAILED. |\n| Solution:   | Call DeleteInstance only at the location where instance is ACTIVE or FAILED.  |\n## Get operation\nThis section describes how to check the operation status. When operations take a long time to complete (LROs), the API returns an operation ID. Calling `GetOperation` using the operation ID returns the operation status.\n### Sample request\n```\ncurl https://apigeeregistry.googleapis.com/v1/projects/$PROJECT_ID/locations/$RUNTIME_LOCATION/operations/OPERATION_ID \\\n -X GET \\\n -H \"Authorization: Bearer $TOKEN\"\n```\nWhere is a value returned for LROs as explained in [Create instance](#create-instance) , and is in the form `operation-1650479361714-5dd1a2c1068bf-464fac6b-18eeb734` .\n### Sample response - instance creation in progress\n```\n{\u00a0 \"name\": \"projects/my-project/locations/us-central1/operations/operation-1646987534895-5d9ed2af7889a-b4d376e8-14964abc\",\u00a0 \"metadata\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.apigeeregistry.v1.OperationMetadata\",\u00a0 \u00a0 \"createTime\": \"2022-03-11T08:32:14.950522187Z\",\u00a0 \u00a0 \"target\": \"projects/my-project/locations/us-central1/instances/default\",\u00a0 \u00a0 \"verb\": \"create\",\u00a0 \u00a0 \"requestedCancellation\": false,\u00a0 \u00a0 \"apiVersion\": \"v1\"\u00a0 },\u00a0 \"done\": false}\n```\n### Sample response - instance creation complete\n```\n{\u00a0 \"name\": \"projects/my-project/locations/us-central1/operations/operation-1646987534895-5d9ed2af7889a-b4d376e8-14964abc\",\u00a0 \"metadata\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.apigeeregistry.v1.OperationMetadata\",\u00a0 \u00a0 \"createTime\": \"2022-03-11T08:32:14.950522187Z\",\u00a0 \u00a0 \"endTime\": \"2022-03-11T08:56:31.069701960Z\",\u00a0 \u00a0 \"target\": \"projects/my-project/locations/us-central1/instances/default\",\u00a0 \u00a0 \"verb\": \"create\",\u00a0 \u00a0 \"requestedCancellation\": false,\u00a0 \u00a0 \"apiVersion\": \"v1\"\u00a0 },\u00a0 \"done\": true,\u00a0 \"response\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.apigeeregistry.v1.Instance\",\u00a0 \u00a0 \"name\": \"projects/my-project/locations/us-central1/instances/default\",\u00a0 \u00a0 \"createTime\": \"2022-03-11T08:32:14.944703257Z\",\u00a0 \u00a0 \"updateTime\": \"2022-03-11T08:56:31.069701960Z\",\u00a0 \u00a0 \"config\": {\u00a0 \u00a0 \u00a0 \"location\": \"us-central1\",\u00a0 \u00a0 \u00a0 \"cmekKeyName\": \"\"projects/PROJECT/locations/RUNTIME_LOCATION/keyRings/KEYRING/cryptoKeys/KEY\"\"\u00a0 \u00a0 },\u00a0 \u00a0 \"state\": \"ACTIVE\",\u00a0 \u00a0 \"stateMessage\": \"Instance is active and ready to use.\"\u00a0 }}\n```\n### Sample response - instance deletion complete\n```\n{\u00a0 \"name\": \"projects/my-project/locations/us-east1/operations/operation-1647669637561-5da8bfb743b86-4af586a4-83c04472\",\u00a0 \"metadata\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.cloud.apigeeregistry.v1.OperationMetadata\",\u00a0 \u00a0 \"createTime\": \"2022-03-19T06:00:38.046462309Z\",\u00a0 \u00a0 \"endTime\": \"2022-03-19T06:01:01.382751041Z\",\u00a0 \u00a0 \"target\": \"projects/my-project/locations/us-east1/instances/default\",\u00a0 \u00a0 \"verb\": \"delete\",\u00a0 \u00a0 \"apiVersion\": \"v1\"\u00a0 },\u00a0 \"done\": true,\u00a0 \"response\": {\u00a0 \u00a0 \"@type\": \"type.googleapis.com/google.protobuf.Empty\"\u00a0 }}\n```\n## Next steps\nSee [Next steps](/apigee/docs/api-hub/next-steps) for some tips on how to get started using API hub.", "guide": "Apigee"}