{"title": "Documentation - KRM API kms.gdc.goog/v1", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - KRM API kms.gdc.goog/v1\n", "content": "## kms.gdc.goog/v1\n### AEADKey\nRepresents a cryptographic key to use for Authenticated Encryption with Associated Data (AEAD) operations.\n- [AEADKeyList](#aeadkeylist)\n| Field    | Description             |\n|:---------------------|:--------------------------------------------------------------|\n| apiVersion string | kms.gdc.goog/v1            |\n| kind string   | AEADKey              |\n| metadata ObjectMeta | Refer to Kubernetes API documentation for fields of metadata. |\n| spec AEADKeySpec  | nan               |\n| status AEADKeyStatus | nan               |\n### AEADKeyList\nRepresents a collection of AEADKeys.\n| Field    | Description             |\n|:--------------------|:--------------------------------------------------------------|\n| apiVersion string | kms.gdc.goog/v1            |\n| kind string   | AEADKeyList             |\n| metadata ListMeta | Refer to Kubernetes API documentation for fields of metadata. |\n| items AEADKey array | nan               |\n### AEADKeySpec\nProvides the specification for an AEADKey.\n- [AEADKey](#aeadkey)\n| Field     | Description |\n|:------------------------|--------------:|\n| algorithm AEADAlgorithm |   nan |\n### AEADKeyStatus\nProvides the status for an AEADKey.\n- [AEADKey](#aeadkey)\n| Field        | Description                                                  |\n|:-----------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| conditions Condition array   | A report that indicates when an AEADKey creation is complete and ready for use.                                 |\n| encryptedKeyMaterial integer array | Key material encrypted by the KMS root key.                                          |\n| rootKeyID string     | Identifier to the root key that wrapped the key material. Follows the format root-key-namespace/root-key-type/root-key-name/version Example - kms-system/ctm/org1-root-key/1 or kms-system/local/org-1-root-key/1 |\n### KeyExport\nRepresents a request to export a key.\n- [KeyExportList](#keyexportlist)\n| Field     | Description             |\n|:-----------------------|:--------------------------------------------------------------|\n| apiVersion string  | kms.gdc.goog/v1            |\n| kind string   | KeyExport              |\n| metadata ObjectMeta | Refer to Kubernetes API documentation for fields of metadata. |\n| spec KeyExportSpec  | nan               |\n| status KeyExportStatus | nan               |\n### KeyExportList\nRepresents a collection of KeyExport resources.\n| Field     | Description             |\n|:----------------------|:--------------------------------------------------------------|\n| apiVersion string  | kms.gdc.goog/v1            |\n| kind string   | KeyExportList             |\n| metadata ListMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| items KeyExport array | nan               |\n### KeyExportSpec\nProvides the specification for a KeyExport resource.\n- [KeyExport](#keyexport)\n| Field         | Description           |\n|:--------------------------------------|:-----------------------------------------------------|\n| context KeySharingContext    | The information necessary to wrap the key to export. |\n| keyToExport TypedLocalObjectReference | A reference to the key for export.     |\n### KeyExportStatus\nProvides the status for a KeyExport resource.\n- [KeyExport](#keyexport)\n| Field      | Description                       |\n|:---------------------------|:-----------------------------------------------------------------------------------------------------|\n| conditions Condition array | The status on the KeyExport resource as successful or failed, and provides a reason for the failure. |\n| exportedKey WrappedKey  | The exported key material.                   |\n### KeyImport\nRepresents a request to import a key.\n- [KeyImportList](#keyimportlist)\n| Field     | Description             |\n|:-----------------------|:--------------------------------------------------------------|\n| apiVersion string  | kms.gdc.goog/v1            |\n| kind string   | KeyImport              |\n| metadata ObjectMeta | Refer to Kubernetes API documentation for fields of metadata. |\n| spec KeyImportSpec  | nan               |\n| status KeyImportStatus | nan               |\n### KeyImportList\nRepresents a collection of key imports.\n| Field     | Description             |\n|:----------------------|:--------------------------------------------------------------|\n| apiVersion string  | kms.gdc.goog/v1            |\n| kind string   | KeyImportList             |\n| metadata ListMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| items KeyImport array | nan               |\n### KeyImportSpec\nProvides the specification for a KeyImport resource.\n- [KeyImport](#keyimport)\n| Field      | Description               |\n|:--------------------------|:----------------------------------------------------------------------|\n| context KeySharingContext | The information from the sender to unwrap the key material to import. |\n| keyToImport WrappedKey | The wrapped key material to import.         |\n### KeyImportStatus\nProvides the status for a KeyImport resource.\n- [KeyImport](#keyimport)\n| Field         | Description                       |\n|:-----------------------------------------|:------------------------------------------------------------------------------------------------------|\n| conditions Condition array    | The status of the KeyImport resource as awaiting, successful, or failed and a reason for the failure. |\n| peerContext PeerSharingContext   | The information required to wrap the key to import.             |\n| importedKeyRef TypedLocalObjectReference | A reference to the imported key.                  |\n### KeyMetadata\nRepresents the attributes required to create or re-create the customer key.\n- [WrappedKey](#wrappedkey)\n| Field   | Description      |\n|:-----------------|:-----------------------------------|\n| algorithm string | The algorithm to use with the key. |\n### KeySharingContext\nContains information by the party that initiates intent for key import and export operations.\n- [KeyExportSpec](#keyexportspec) - [KeyImportSpec](#keyimportspec)\n| Field       | Description       |\n|:------------------------------|:------------------------------------|\n| mechanism KeySharingMechanism | The algorithms to use to wrap keys. |\n| publicKey integer array  | nan         |\n### PeerSharingContext\nContains information by the party that responds to the intent for key import operations.\n- [KeyImportStatus](#keyimportstatus)\n| Field     | Description                                                  |\n|:-------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| publicKey integer array | nan                                                    |\n| privateKey integer array | nan                                                    |\n| rootKeyID string   | Identifier to the root key that wrapped the key material. Follows the format root-key-namespace/root-key-type/root-key-name/version Example - kms-system/ctm/org1-root-key/1 or kms-system/local/org-1-root-key/1 |\n### RotationJob\nRepresents a cluster level resource that runs root key rotation, and re-encryption of all KMS keys in the cluster.\n- [RotationJobList](#rotationjoblist)\n| Field     | Description             |\n|:-------------------------|:--------------------------------------------------------------|\n| apiVersion string  | kms.gdc.goog/v1            |\n| kind string    | RotationJob             |\n| metadata ObjectMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| spec RotationJobSpec  | nan               |\n| status RotationJobStatus | nan               |\n### RotationJobList\nRepresents a collection of RotationJob resources.\n| Field     | Description             |\n|:------------------------|:--------------------------------------------------------------|\n| apiVersion string  | kms.gdc.goog/v1            |\n| kind string    | RotationJobList            |\n| metadata ListMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| items RotationJob array | nan               |\n### RotationJobSpec\nProvides the specification for a RotationJob resource.\n- [RotationJob](#rotationjob)\n| Field      | Description             |\n|:---------------------------|:-------------------------------------------------------------|\n| rootKeyResourceName string | The root key name specified in the form namespaces//secrets/ |\n### RotationJobStatus\nProvides the status for a RotationJob resource.\n- [RotationJob](#rotationjob)\n| Field      | Description                       |\n|:---------------------------|:-------------------------------------------------------------------------------------------------------|\n| conditions Condition array | The status of the RotationJob resource as successful or failed, and provides a reason for the failure. |\n### SigningKey\nRepresents a cryptographic key to use for creating digital signatures.\n- [SigningKeyList](#signingkeylist)\n| Field     | Description             |\n|:------------------------|:--------------------------------------------------------------|\n| apiVersion string  | kms.gdc.goog/v1            |\n| kind string    | SigningKey             |\n| metadata ObjectMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| spec SigningKeySpec  | nan               |\n| status SigningKeyStatus | nan               |\n### SigningKeyList\nRepresents a collection of SigningKey resources.\n| Field     | Description             |\n|:-----------------------|:--------------------------------------------------------------|\n| apiVersion string  | kms.gdc.goog/v1            |\n| kind string   | SigningKeyList            |\n| metadata ListMeta  | Refer to Kubernetes API documentation for fields of metadata. |\n| items SigningKey array | nan               |\n### SigningKeySpec\nProvides the specification for a SigningKey resource.\n- [SigningKey](#signingkey)\n| Field      | Description |\n|:---------------------------|--------------:|\n| algorithm SigningAlgorithm |   nan |\n### SigningKeyStatus\nProvides the status for a SigningKey resource.\n- [SigningKey](#signingkey)\n| Field        | Description                                                    |\n|:-----------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| conditions Condition array   | A report that indicates when a SigningKey creation is complete and ready for use.                                   |\n| encryptedKeyMaterial integer array | Key material encrypted by the KMS root key.                                            |\n| publicKey integer array   | The public key of the asymmetric signing key pair.                                          |\n| rootKeyID string     | Identifier to the root key that wrapped the private key material. Follows the format root-key-namespace/root-key-type/root-key-name/version Example - kms-system/ctm/org1-root-key/1 or kms-system/local/org-1-root-key/1 |\n### WrappedKey\nContains the customer key wrapped for import or export operations.\n- [KeyExportStatus](#keyexportstatus) - [KeyImportSpec](#keyimportspec)\n| Field      | Description             |\n|:--------------------------|:--------------------------------------------------------------|\n| metadata KeyMetadata  | Refer to Kubernetes API documentation for fields of metadata. |\n| keyMaterial integer array | The wrapped key material.          |", "guide": "Documentation"}