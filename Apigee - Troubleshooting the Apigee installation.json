{"title": "Apigee - Troubleshooting the Apigee installation", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Troubleshooting the Apigee installation\nThis document lists common errors and describes possible resolutions for  when you install and configure Apigee.\n", "content": "## Creating a new instance\nThis section describes common errors and possible resolutions after sending a request to Apigee to create a new instance:\n- 503 (Server Error): Try refreshing the browser; likely an artifact of the staging server/env and not prod\n- `401 (UNAUTHENTICATED)`indicates that your credentials may have timed   out. Try renewing your authorization token, as the following example shows:```\nAUTH=\"Authorization: Bearer $(gcloud auth print-access-token)\"\n```\n- `RANGES_EXHAUSTED`indicates that the range of IP addresses that you initially   requested could not be accommodated and that you must request a new range. You initially   created a range request in [Step 4: Configure service networking](/apigee/docs/api-platform/get-started/configure-service-networking) .To request a new range from which Apigee chooses an IP address for the private service   connections:- Execute the following`gcloud`command:```\ngcloud compute addresses create google-svcs-2\n --project=$PROJECT_ID --global --prefix-length=16\n --description=\"additional peering range for Google services\" --network=default\n --purpose=VPC_PEERING\n```This command creates a new range named `google-svcs-2` .\n- Execute the following command to update your connection request:```\ngcloud services vpc-peerings update\n --service=servicenetworking.googleapis.com --network=default\n --ranges=google-svcs,google-svcs-2 --project=$PROJECT_ID\n``` **Note:** You must specify the name of your first range (in this case, `google-svcs` )    and a name for your newly requested range (in this case, `google-svcs-2` ).    For more information, see [gcloud services    vpc-peerings update](/sdk/gcloud/reference/services/vpc-peerings/update) .\n## Creating an Apigee organization\nThe following example shows a common error that Apigee might display when you first try to create an organization:\nThis means that one or more of the required APIs is not enabled. Review the APIs listed in [Step 2: Enable Apigee APIs](/apigee/docs/api-platform/get-started/enable-apis) and be sure that all APIs are enabled before you continue.\nIn addition, you might get one of the following HTTP errors:\n- `401 (UNAUTHENTICATED)`indicates that your credentials may have timed   out. Try renewing your authorization token, as the following example shows:```\nAUTH=\"Authorization: Bearer $(gcloud auth print-access-token)\"\n```\n- `404 (Not Found)`can be the result of the following:- You entered the wrong endpoint/request URL. Check that you specified`apigee.googleapis.com`for the API call's domain.\n- Your project might not yet be provisioned. Contact [Apigee Sales](https://pages.apigee.com/contact-sales-reg.html) .\n- `409 (Conflict)`usually indicates that the given organization name  already exists. Organization names must be globally unique. Choose another name for the  organization and re-issue the command. (You specify the name in the payload of the  request if you are creating an organization on the command line. Keep in mind that you must  create an organization that has the same name as your project, so this really shouldn't  happen unless there's a typo.)\nThe following is a possible error that Apigee might return when you check the status of a new organization request:\n- `403 (Permission Denied)`could indicate that the organization has not yet been  created. Wait another minute and try again. If Apigee returns a`403`when you first  try to create the new organization, it could mean that one or more of your APIs have not been  enabled. Be sure that you enabled all the APIs as described in [Step 2: Enable Apigee APIs](/apigee/docs/api-platform/get-started/enable-apis) .## Deploying samples\n### \n Load balancer not healthy\nWhen deploying a sample proxy, Apigee might return a `502 (Bad Gateway)` HTTP error. In this case, try the following:\n- Open [Cloud console](https://console.cloud.google.com/) .\n- Check the health of the Load Balancer. In Cloud console, select **Network services > Load balancing** . The **Load balancer** tab shows all load balancers for the project and their statuses. A yellow triangle indicates   that the load balancer backend service is not healthy.\n- After confirming an issue with the load balancer, check the VMs in your runtime instance   to ensure that they are up and healthy.\n- Look at the log files to see if you can find an error or other type of issue that might have   lead to a problem. For more information on enabling and viewing logs, see [Viewing logs](/load-balancing/docs/https/https-logging-monitoring#viewing_logs) .\n- Try doing a rolling restart on the instance group in Cloud console:- Select **Compute Engine > Instance Groups** .\n- From the list of instance groups, click the one that is not responding in the **Name** column.\n- Click **Rolling Restart/Replace** , as the following example shows:\n- On the next screen, click **Restart** .This restarts the Envoy instance.\n### \n Incorrect instance IP\nIf at any time you delete and recreate your Apigee instance, the Apigee instance IP changes and can become out of sync with the managed instance group (MIG) template's endpoint IP. For example, the MIG template will still have the old IP from the deleted instance. The MIG template was created during the Apigee [provisioning process](/apigee/docs/api-platform/get-started/install-cli#external) . In this situation, try the following steps to update the MIG template with the correct Apigee IP:\n- Open the Apigee UI. [Go to Apigee UI](https://apigee.google.com/edge) \n- Go to **Admin > Instances** .\n- Note the IP Address of the instance. You will need to know this IP in a later step.  For example:`10.117.200.2`.\n- In the Google Cloud console, go to the **Instance templates** page. [Go to Instance templates](https://console.cloud.google.com/compute/instances) \n- Open the instance template. You need to open the instance template that is used by the backend that is mapped to your load balancer.\n- Scroll down to find the`ENDPOINT`IP under the **Custom metadata** section.\n- If the endpoint IP differs from the one you noted in the Apigee UI, you must change the  Instance template IP to match the Apigee instance IP. See [Changing instance IPs.](/apigee/docs/api-platform/system-administration/change-instance-ips)", "guide": "Apigee"}