{"title": "Apigee - Managing Apigee ingress gateway", "url": "https://cloud.google.com/apigee/docs/api-platform/get-started/what-apigee", "abstract": "# Apigee - Managing Apigee ingress gateway\nYou are currently viewing version 1.8 of the Apigee hybrid documentation. **This version is end of life.** You should upgrade to a newer version. For more information, see [Supported versions](/apigee/docs/hybrid/supported-platforms#supported-versions) .\nStarting with Apigee hybrid version 1.8, Apigee hybrid uses the Apigee ingress gateway to provide the ingress gateway for hybrid.\n", "content": "## \nConfiguring Apigee ingress gateway\nYou can configure your ingress gateways in your `overrides.yaml` . For example:\n```\ningressGateways:\n- name: INGRESS_NAME\n replicaCountMin: REPLICAS_MIN\n replicaCountMax: REPLICAS_MAX\n resources:\n requests:\n  cpu: CPU_COUNT_REQ\n  memory: MEMORY_REQ\n limits:\n  cpu: CPU_COUNT_LIMIT\n  memory: MEMORY_LIMIT\n svcAnnotations: # optional. See Known issue 243599452.\n SVC_ANNOTATIONS_KEY: SVC_ANNOTATIONS_VALUE\n svcLoadBalancerIP: SVC_LOAD_BALANCER_IP # optional\n``````\ningressGateways:\n- name: prod1\n replicaCountMin: 2\n replicaCountMax: 100\n resources:\n requests:\n  cpu: 1\n  memory: 1Gi\n limits:\n  cpu: 2\n  memory: 2Gi\n svcAnnotations: # optional. See Known issue 243599452.\n networking.gke.io/load-balancer-type: \"Internal\"\n svcLoadBalancerIP: 198.252.0.123 \n```\n- is the name of the ingress gateway deployment. This can be any name that meets  the following requirements:- Have a maximum length of 17 characters\n- Contain only lowercase alphanumeric characters, '-' or '.'\n- Start with an alphanumeric character\n- End with an alphanumeric character\nSee [ingressGateways[].name](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-name) in the Configuration property reference\n- andThe minimum and maximum replica counts for  Apigee ingress gateway in your installation. See [ingressGateways[].replicaCountMin](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-replicacountmin) and [ingressGateways[].replicaCountMax](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-replicacountmax) in the Configuration property reference.\n- andThe CPU and memory request for each  replica of Apigee ingress gateway in your installation.Set these properties if you have previously set them for your  Anthos Service Mesh ingress gateway, for example in your`overlay.yaml`file.See [ingressGateways[].resources.requests.cpu](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-resources-requests-cpu) and [ingressGateways[].resources.requests.memory](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-resources-requests-memory) in the Configuration property reference.\n- andThe maximum CPU and memory limits for  each replica of Apigee ingress gateway in your installation.Set these properties if you have previously set them for your  Anthos Service Mesh ingress gateway, for example in your`overlay.yaml`file.See [ingressGateways[].resources.limits.cpu](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-resources-limits-cpu) and [ingressGateways[].resources.limits.memory](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-resources-limits-memory) in the Configuration property reference.\n- (optional): **Note:** The`ingressGateways[].svcAnnotations`field in`overrides.yaml`is not working as expected. See [Known issue 243599452](/apigee/docs/release/known-issues#243599452) This is a key-value pair that provides  annotations for your default ingress service. Annotations are used by your cloud platform to  help configure your hybrid installation, for example setting the loadbalancer type to  either internal or external. For example:```\ningressGateways:\n svcAnnotations:\n networking.gke.io/load-balancer-type: \"Internal\"\n```Annotations vary from platform to platform. Refer to your platform  documentation for required and suggested annotations. **Note:** You do not need to set`Annotations`here if you are creating your own   Kubernetes service for ingress gateway deployment as documented in [Expose Apigee ingress gateway](/apigee/docs/hybrid/v1.8/install-expose-apigee-ingress) .See [ingressGateways[].svcAnnotations](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-svcannotations) in the Configuration property reference.\n- (optional). On platforms that support specifying the load balancer  IP address, the load balancer will be created with this IP address. On platforms that do not  allow you to specify the load balancer IP address, this property is ignored. **Caution:** Make sure not to specify the same IP address as the current  istio-ingressgateway. This could cause problems while that service is still on the cluster. **Note:** You do not need to set`LoadBalancerIP`if you are creating your own  Kubernetes service for ingress gateway deployment as documented in [Expose Apigee ingress gateway](/apigee/docs/hybrid/v1.8/install-expose-apigee-ingress) .See [ingressGateways[].svcLoadBalancerIP](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-svcloadbalancerip) in the Configuration property reference.\n### Apply the Apigee ingress gateway configuration\nApply changes to the organization scope with `apigeectl` .\n```\n$APIGEECTL_HOME/apigeectl apply -f overrides/overrides.yaml --org\n```\n## \n Management tasks\nSome common management tasks for the Apigee ingress gateway:\n### \n Stop supplying configuration to ASM\nAfter upgrading to Apigee hybrid v1.8 and migrating traffic to Apigee ingress gateway, you can stop supplying routing configuration to Anthos Service Mesh.\n- Update the Apigee controller to stop updating Anthos Service Mesh CR objects in the API server. In your overrides file, set:```\nao:\n args:\n disableIstioConfigInAPIServer: true\n```\n- Apply the configuration changes:\n- ```\n$APIGEECTL_HOME/apigeectl init -f OVERRIDES_FILE\n```\n- See [ao](/apigee/docs/hybrid/v1.8/config-prop-ref#ao) in the Configuration properties reference for details.\n- Check the status of the deployment with the following command, because the previous command restarted the controller:```\n$APIGEECTL_HOME/apigeectl check-ready -f OVERRIDES_FILE\n```\n- Update the `virtualhosts` . Every virtual host needs to include the `app` selector label with the value `app: apigee-ingressgateway` . With this  change, Anthos Service Mesh gateway won't be able to read Apigee routing configuration.Add or replace the `selector` property in each virtual host as follows:```\nvirtualhosts:\n- name: ENV_GROUP\n selector:\n app: apigee-ingressgateway # required\n ...\n```Apply the configuration changes:```\n$APIGEECTL_HOME/apigeectl apply -f OVERRIDES_FILE --settings virtualhosts\n```For more information see [virtualhosts.selector](/apigee/docs/hybrid/v1.8/config-prop-ref#virtualhosts-selector) in the Configuration property reference.\n### \n Scaling Apigee ingress gateway:\nUpdate the following properties in your overrides file.\n- `ingressGateways[].replicaCountMax`\n- `ingressGateways[].replicaCountMin`\nSee [ingressGateways](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways) in the Configuration properties reference for details.\nApply the changes with `apigeectl apply --org` .\n### \n Updating resource allocation\nUpdate the following properties in your overrides file.\n- `ingressGateways[].resources.limits.cpu`\n- `ingressGateways[].resources.limits.memory`\n- `ingressGateways[].resources.requests.cpu`\n- `ingressGateways[].resources.requests.memory`\nSee [ingressGateways](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways) in the Configuration properties reference for details.\nApply the changes with `apigeectl apply --org` .\n### \n Updating the Apigee ingress gateway service\nUpdate the following properties in your overrides file.\n- `ingressGateways[].svcAnnotations`\n- `ingressGateways[].svcLoadBalancerIP`\nSee [ingressGateways](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways) in the Configuration properties reference for details.\nApply the changes with `apigeectl apply --org` .\n### \n Disable the load balancer for the default Apigee ingress gateway service:\nIf you create a [custom Kubernetes service](/apigee/docs/hybrid/v1.8/install-expose-apigee-ingress#customservice) for your ingress gateway deployment, you can disable creation of a load balanceer on the default Kubernetes service. Update the [ingressGateways[].svcType](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways-svctype) property to `ClusterIP` in your overrides file. For example:\n```\ningressGateways:\n - name: my-ingress-gateway\n replicaCountMin: 2\n replicaCountMax: 10\n svcType: ClusterIP\n```\nApply the changes with `apigeectl apply --org` .\n### \n Configure TLS and mTLS\nSee [Configuring TLS and mTLS on the ingress gateway](/apigee/docs/hybrid/v1.8/ingress-tls) .\n### \n Enabling non-SNI clients\nSee [Enable non-SNI and HTTP clients](/apigee/docs/hybrid/v1.8/enable-non-sni) .\n### Installing additional Apigee ingress gateways\nIn the `overrides.yaml` file you can add multiple ingress gateways. The `ingressGateways` configuration property is an array. For more information, see [ingressGateways](/apigee/docs/hybrid/v1.8/config-prop-ref#ingressgateways) in the Configuration properties reference.\nFor example:\n```\ningressGateways:- name: fruit\u00a0 replicaCountMin: 2\u00a0 replicaCountMax: 10- name: meat\u00a0 replicaCountMin: 2\u00a0 replicaCountMax: 10\n```\nApply the changes with `apigeectl apply --org` .\n### Targeting an Apigee ingress to a virtual host\nYou can target a labeled Apigee ingress gateway to a specific virtual host in your overrides file. This configuration specifies the ingress gateway where Apigee will apply the virtual host's configuration. In the following example, the virtual host `spam-vh` is configured to use the ingress gateway labeled `meat` and the other two virtual hosts use the `fruit` ingress gateway. The ingress gateways must be properly labeled, as explained in [Installing additional Anthos Service Mesh gateways](#installing) .\n**Note: ** You must specify both the`selector:app`and`selector:ingress_name`properties  to properly apply an ingress gateway to a virtual host.\n```\nvirtualhosts:\n- name: spam-vh\n sslCertPath: cert-spam.crt\n sslKeyPath: cert-spam.key\n selector:\n app: apigee-ingressgateway\n ingress_name: meat\n- name: banana-vh\n sslCertPath: cert-banana.crt\n sslKeyPath: cert-banana.key\n selector:\n app: apigee-ingressgateway\n ingress_name: fruit\n- name: plum-vh\n sslCertPath: cert-plum.crt\n sslKeyPath: cert-plum.key\n selector:\n app: apigee-ingressgateway\n ingress_name: fruit\n \n \n```\n## FAQ", "guide": "Apigee"}