{"title": "Google Cloud Observability - Oracle Database", "url": "https://cloud.google.com/stackdriver/docs/solutions/agents/ops-agent/third-party/oracledb", "abstract": "# Google Cloud Observability - Oracle Database\nThe Oracle DB integration collects Oracle DB metrics and logs. The metrics are collected by querying relevant monitoring views. This integration writes structured trace logs.\nFor more information about Oracle DB, see the [Oracle Database documentation](https://www.oracle.com/database/) .\n", "content": "## Prerequisites\nTo collect Oracle DB telemetry, you must [install the Ops Agent](/stackdriver/docs/solutions/agents/ops-agent/install-index) version 2.22.0 or higher.\nThis integration supports Oracle DB versions 12.2, 18c, 19c, and 21c.\n## Configure your Oracle DB instance\nTo collect metrics, a monitoring user requires `SELECT` access to the relevant views. The following sql script should create a monitoring user and give it the appropriate permissions if executed by a user with sufficient permissions connected to the Oracle DB instance as SYSDBA or SYSOPER.\n```\n-- Create the monitoring user \"otel\"\nCREATE USER otel IDENTIFIED BY ;\n-- Grant the \"otel\" user the required permissions\nGRANT CONNECT TO otel;\nGRANT SELECT ON SYS.GV_$DATABASE to otel;\nGRANT SELECT ON SYS.GV_$INSTANCE to otel;\nGRANT SELECT ON SYS.GV_$PROCESS to otel;\nGRANT SELECT ON SYS.GV_$RESOURCE_LIMIT to otel;\nGRANT SELECT ON SYS.GV_$SYSMETRIC to otel;\nGRANT SELECT ON SYS.GV_$SYSSTAT to otel;\nGRANT SELECT ON SYS.GV_$SYSTEM_EVENT to otel;\nGRANT SELECT ON SYS.V_$RMAN_BACKUP_JOB_DETAILS to otel;\nGRANT SELECT ON SYS.V_$SORT_SEGMENT to otel;\nGRANT SELECT ON SYS.V_$TABLESPACE to otel;\nGRANT SELECT ON SYS.V_$TEMPFILE to otel;\nGRANT SELECT ON SYS.DBA_DATA_FILES to otel;\nGRANT SELECT ON SYS.DBA_FREE_SPACE to otel;\nGRANT SELECT ON SYS.DBA_TABLESPACE_USAGE_METRICS to otel;\nGRANT SELECT ON SYS.DBA_TABLESPACES to otel;\nGRANT SELECT ON SYS.GLOBAL_NAME to otel;\n```\n## Configure the Ops Agent for Oracle DB\nFollowing the guide for [Configuring the OpsAgent](/stackdriver/docs/solutions/agents/ops-agent/configuration#file-location) , add the required elements to collect telemetry from Oracle DB instances, and [restart the agent](/stackdriver/docs/solutions/agents/ops-agent/installation#restart) .\n### Example configuration\nThe following commands create the configuration to collect and ingest telemetry for Oracle DB and restarts the Ops Agent.\n```\n# Configures Ops Agent to collect telemetry from the app and restart Ops Agent.set -e# Create a back up of the existing file so existing configurations are not lost.sudo cp /etc/google-cloud-ops-agent/config.yaml /etc/google-cloud-ops-agent/config.yaml.bak# Configure the Ops Agent.sudo tee /etc/google-cloud-ops-agent/config.yaml > /dev/null << EOFlogging:\u00a0 receivers:\u00a0 \u00a0 oracledb_audit:\u00a0 \u00a0 \u00a0 type: oracledb_audit\u00a0 \u00a0 \u00a0 oracle_home: /opt/oracle\u00a0 \u00a0 oracledb_alert:\u00a0 \u00a0 \u00a0 type: oracledb_alert\u00a0 \u00a0 \u00a0 oracle_home: /opt/oracle\u00a0 service:\u00a0 \u00a0 pipelines:\u00a0 \u00a0 \u00a0 oracledb:\u00a0 \u00a0 \u00a0 \u00a0 receivers:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - oracledb_audit\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - oracledb_alertmetrics:\u00a0 receivers:\u00a0 \u00a0 oracledb:\u00a0 \u00a0 \u00a0 type: oracledb\u00a0 \u00a0 \u00a0 username: otel\u00a0 \u00a0 \u00a0 password: ora19c\u00a0 \u00a0 \u00a0 sid: ORCLCDB\u00a0 \u00a0 \u00a0 service_name: ORCLCDB\u00a0 service:\u00a0 \u00a0 log_level: debug\u00a0 \u00a0 pipelines:\u00a0 \u00a0 \u00a0 oracledb:\u00a0 \u00a0 \u00a0 \u00a0 receivers:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - oracledbEOFsudo service google-cloud-ops-agent restart\n```\n### Configure logs collection\nTo ingest logs from Oracle DB, you must create receivers for the logs that Oracle DB produces and then create a pipeline for the new receivers.\nTo configure a receiver for your `oracledb_audit` logs, specify the following fields:\n| Field      | Default | Description                                                                    |\n|:--------------------------|:----------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| exclude_paths    | []  | A list of filesystem path patterns to exclude from the set matched by include_paths.                                                  |\n| include_paths    | nan  | A list of filesystem paths to read by tailing each file. A wild card (*) can be used in the paths. Cannot be provided with the oracle_home field.                                  |\n| oracle_home    | nan  | Location of the ORACLE_HOME for the environment; when provided it sets the include_paths to $ORACLE_HOME/admin/*/adump/*.aud. Cannot be provided with the include_paths field.                           |\n| record_log_file_path  | false  | If set to true, then the path to the specific file from which the log record was obtained appears in the output log entry as the value of the agent.googleapis.com/log_file_path label. When using a wildcard, only the path of the file from which the record was obtained is recorded. |\n| type      | nan  | The value must be oracledb_audit.                                                              |\n| wildcard_refresh_interval | 60s  | The interval at which wildcard file paths in include_paths are refreshed. Given as a time duration parsable by time.ParseDuration, for example 30s or 2m. This property might be useful under high logging throughputs where log files are rotated faster than the default interval.  |\nTo configure a receiver for your `oracledb_alert` logs, specify the following fields:\n| Field      | Default | Description                                                                    |\n|:--------------------------|:----------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| exclude_paths    | []  | A list of filesystem path patterns to exclude from the set matched by include_paths.                                                  |\n| include_paths    | nan  | A list of filesystem paths to read by tailing each file. A wild card (*) can be used in the paths. Cannot be provided with the oracle_home field.                                  |\n| oracle_home    | nan  | Location of the ORACLE_HOME for the environment, when provided it sets the include_paths to $ORACLE_HOME/diag/rdbms/*/*/trace/alert_*.log. Cannot be provided with the include_paths field.                        |\n| record_log_file_path  | false  | If set to true, then the path to the specific file from which the log record was obtained appears in the output log entry as the value of the agent.googleapis.com/log_file_path label. When using a wildcard, only the path of the file from which the record was obtained is recorded. |\n| type      | nan  | The value must be oracledb_alert.                                                              |\n| wildcard_refresh_interval | 60s  | The interval at which wildcard file paths in include_paths are refreshed. Given as a time duration parsable by time.ParseDuration, for example 30s or 2m. This property might be useful under high logging throughputs where log files are rotated faster than the default interval.  |\nThe `logName` is derived from the receiver IDs specified in the configuration. Detailed fields inside the [LogEntry](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) are as follows.\nThe `oracledb_alert` logs contain the following fields in the `LogEntry` :\n| Field    | Type     | Description     |\n|:--------------------|:---------------------|:-----------------------------|\n| jsonPayload.message | string    | Log message     |\n| severity   | string (LogSeverity) | Log entry level (translated) |\nThe `oracledb_audit` logs contain the following fields in the `LogEntry` :\n| Field      | Type     | Description             |\n|:----------------------------|:---------------------|:--------------------------------------------------------------|\n| jsonPayload.action   | string    | Action being logged in the audit log       |\n| jsonPayload.action_number | number    | Number identifying the type of action being logged   |\n| jsonPayload.client_terminal | string    | Identifier of the client terminal where the action originated |\n| jsonPayload.client_user  | string    | Client user for the audited action       |\n| jsonPayload.database_user | string    | Database user for the audited action       |\n| jsonPayload.dbid   | number    | Database identifier           |\n| jsonPayload.length   | number    | Length of the string representing the action being logged  |\n| jsonPayload.privilege  | string    | Database privilege the action was executed under    |\n| jsonPayload.sessionid  | number    | Session identifier           |\n| jsonPayload.status   | string    | Status of the action           |\n| jsonPayload.user_host  | string    | Host where the audited action originated      |\n| severity     | string (LogSeverity) | Log entry level (translated)         |\n### Configure metrics collection\nTo ingest metrics from Oracle DB, you must create a receiver for the metrics that Oracle DB produces and then create a pipeline for the new receiver.\nThis receiver does not support the use of multiple instances in the configuration, for example, to monitor multiple endpoints. All such instances write to the same time series, and Cloud Monitoring has no way to distinguish among them.\nTo configure a receiver for your `oracledb` metrics, specify the following fields:\n| Field    | Default  | Description                               |\n|:---------------------|:---------------|:------------------------------------------------------------------------------------------------------------------------------------|\n| collection_interval | 60s   | A time duration value, such as 30s or 5m.                       |\n| endpoint    | localhost:1521 | The endpoint used to connect to the oracle DB instance. This field supports either host:port or a unix socket path.     |\n| insecure    | true   | Sets whether or not to use a secure TLS connection. If set to false, then TLS is enabled.           |\n| insecure_skip_verify | false   | Sets whether or not to skip verifying the certificate. If insecure is set to true, then the insecure_skip_verify value is not used. |\n| password    | nan   | The password used to connect to the instance.                      |\n| service_name   | nan   | The Service Name of the Oracle database being monitored. Use this field or the sid field as appropriate.       |\n| sid     | nan   | The SID of the Oracle database being monitored. Use this field or the service_name field as appropriate.       |\n| type     | nan   | This value must be oracledb.                          |\n| username    | nan   | The username used to connect to the instance.                      |\n| wallet    | nan   | Path to the directory containing the oracle wallet optionally used for authentication and securing connections.      |\nThe following table provides the list of metrics that the Ops Agent collects from the Oracle DB instance. THIS IS A GENERATED FILE. DO NOT EDIT.\n| ('Metric\\xa0type', 'Kind,\\xa0Type Monitored\\xa0resources') | ('Metric\\xa0type', 'Labels')          |\n|:-------------------------------------------------------------|:-----------------------------------------------------------------|\n| workload.googleapis.com/oracle.backup.latest     | workload.googleapis.com/oracle.backup.latest      |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name        |\n| workload.googleapis.com/oracle.buffer.cache.ratio   | workload.googleapis.com/oracle.buffer.cache.ratio    |\n| GAUGE,\u00a0DOUBLE gce_instance         | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.cursor.count     | workload.googleapis.com/oracle.cursor.count      |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.cursor.current    | workload.googleapis.com/oracle.cursor.current     |\n| GAUGE,\u00a0INT64 gce_instance         | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.disk.operation.count   | workload.googleapis.com/oracle.disk.operation.count    |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system direction global_name instance_id   |\n| workload.googleapis.com/oracle.disk.operation.size   | workload.googleapis.com/oracle.disk.operation.size    |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system direction global_name instance_id   |\n| workload.googleapis.com/oracle.logon.count     | workload.googleapis.com/oracle.logon.count      |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.logon.current     | workload.googleapis.com/oracle.logon.current      |\n| GAUGE,\u00a0INT64 gce_instance         | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.network.data     | workload.googleapis.com/oracle.network.data      |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system direction global_name instance_id target |\n| workload.googleapis.com/oracle.process.count     | workload.googleapis.com/oracle.process.count      |\n| GAUGE,\u00a0INT64 gce_instance         | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.process.limit     | workload.googleapis.com/oracle.process.limit      |\n| GAUGE,\u00a0INT64 gce_instance         | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.process.pga_memory.size  | workload.googleapis.com/oracle.process.pga_memory.size   |\n| GAUGE,\u00a0INT64 gce_instance         | database_id db_system global_name instance_id program state  |\n| workload.googleapis.com/oracle.row.cache.ratio    | workload.googleapis.com/oracle.row.cache.ratio     |\n| GAUGE,\u00a0DOUBLE gce_instance         | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.service.response_time   | workload.googleapis.com/oracle.service.response_time    |\n| GAUGE,\u00a0DOUBLE gce_instance         | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.session.count     | workload.googleapis.com/oracle.session.count      |\n| GAUGE,\u00a0INT64 gce_instance         | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.session.limit     | workload.googleapis.com/oracle.session.limit      |\n| GAUGE,\u00a0INT64 gce_instance         | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.sort.count     | workload.googleapis.com/oracle.sort.count      |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name instance_id type    |\n| workload.googleapis.com/oracle.sort.row.count    | workload.googleapis.com/oracle.sort.row.count     |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.tablespace.count    | workload.googleapis.com/oracle.tablespace.count     |\n| GAUGE,\u00a0INT64 gce_instance         | contents database_id db_system global_name status    |\n| workload.googleapis.com/oracle.tablespace.size    | workload.googleapis.com/oracle.tablespace.size     |\n| GAUGE,\u00a0INT64 gce_instance         | contents database_id db_system global_name state tablespace_name |\n| workload.googleapis.com/oracle.user.calls     | workload.googleapis.com/oracle.user.calls      |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.user.commits     | workload.googleapis.com/oracle.user.commits      |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.user.rollbacks    | workload.googleapis.com/oracle.user.rollbacks     |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name instance_id     |\n| workload.googleapis.com/oracle.wait.count     | workload.googleapis.com/oracle.wait.count      |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name instance_id type wait_class |\n| workload.googleapis.com/oracle.wait.time      | workload.googleapis.com/oracle.wait.time       |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name instance_id type wait_class |\n| workload.googleapis.com/oracle.wait.timeouts     | workload.googleapis.com/oracle.wait.timeouts      |\n| CUMULATIVE,\u00a0INT64 gce_instance        | database_id db_system global_name instance_id type wait_class |\n## Verify the configuration\nThis section describes how to verify that you correctly configured the Oracle DB receiver. It might take one or two minutes for the Ops Agent to begin collecting telemetry.\nTo verify that Oracle DB logs are being sent to Cloud Logging, do the following:\n- In the navigation panel of the Google Cloud console, select **Logging** , and then select **Logs Explorer** : [Go to Logs Explorer](https://console.cloud.google.com/logs/query) \n- Enter the following query in the editor, and then click **Run query** :```\nresource.type=\"gce_instance\"\n(log_id(\"oracledb_alert\") OR log_id(\"oracledb_audit\"))\n```To verify that Oracle DB metrics are being sent to Cloud Monitoring, do the following:\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Metrics explorer** : [Go to Metrics explorer](https://console.cloud.google.com/monitoring/metrics-explorer) \n- In the toolbar of the query-builder pane, select the button whose name is either **MQL** or **PromQL** .\n- Verify that **MQL** is selected in the **Language** toggle. The language toggle is in the same toolbar that lets you format your query.\n- Enter the following query in the editor, and then click **Run query** :```\nfetch gce_instance\n| metric 'workload.googleapis.com/oracle.logon.count'\n| every 1m\n```\n## View dashboard\nTo view your Oracle DB metrics, you must have a chart or dashboard configured. The Oracle DB integration includes one or more dashboards for you. Any dashboards are automatically installed after you configure the integration and the Ops Agent has begun collecting metric data.\nYou can also view static previews of dashboards without installing the integration.\nTo view an installed dashboard, do the following:\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Dashboards** : [Go to Dashboards](https://console.cloud.google.com/monitoring/dashboards) \n- Select the **Dashboard List** tab, and then choose the **Integrations** category.\n- Click the name of the dashboard you want to view.If you have configured an integration but the dashboard has not been installed, then check that the Ops Agent is running. When there is no metric data for a chart in the dashboard, installation of the dashboard fails. After the Ops Agent begins collecting metrics, the dashboard is installed for you.\nTo view a static preview of the dashboard, do the following:\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Integrations** : [Go to Integrations](https://console.cloud.google.com/monitoring/integrations) \n- Click the **Compute Engine** deployment-platform filter.\n- Locate the entry for     Oracle DB   and click **View Details** .\n- Select the **Dashboards** tab to see a static preview. If the   dashboard is installed, then you can navigate to it by clicking **View dashboard** .For more information about dashboards in Cloud Monitoring, see [Dashboards and charts](/monitoring/dashboards) .\nFor more information about using the **Integrations** page, see [Manage integrations](/monitoring/agent/integrations) .\n## Install alerting policies\nAlerting policies instruct Cloud Monitoring to notify you when specified conditions occur. The Oracle DB integration includes one or more alerting policies for you to use. You can view and install these alerting policies from the **Integrations** page in Monitoring.\nTo view the descriptions of available alerting policies and install them, do the following:\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Integrations** : [Go to Integrations](https://console.cloud.google.com/monitoring/integrations) \n- Locate the entry for     Oracle DB   and click **View Details** .\n- Select the **Alerts** tab. This tab provides descriptions of   available alerting policies and provides an interface for installing   them.\n- Install alerting policies. Alerting policies need   to know where to send notifications that the alert has been   triggered, so they require information from you for installation.   To install alerting policies, do the following:- From the list of available alerting policies,    select those that you want to install.\n- In the **Configure notifications** section, select one or    more notification channels. You have the option to disable the    use of notification channels, but if you do, then your alerting    policies fire silently. You can check their status in    Monitoring, but you receive no notifications.For more information about notification channels,    see [Manage    notification channels](/monitoring/support/notification-options) .\n- Click **Create Policies** .\nFor more information about alerting policies in Cloud Monitoring, see [Introduction to alerting](/monitoring/alerts) .\nFor more information about using the **Integrations** page, see [Manage integrations](/monitoring/agent/integrations) .\n## What's next\nFor a walkthrough on how to use Ansible to install the Ops Agent, configure a third-party application, and install a sample dashboard, see the [ Install the Ops Agent to troubleshoot third-party applications](https://www.youtube.com/watch?v=GQgNygd-XJU&t=7s) video.", "guide": "Google Cloud Observability"}