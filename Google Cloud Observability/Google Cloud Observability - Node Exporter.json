{"title": "Google Cloud Observability - Node Exporter", "url": "https://cloud.google.com/stackdriver/docs/managed-prometheus/exporters/node_exporter", "abstract": "# Google Cloud Observability - Node Exporter\nThis document describes how to configure your Google Kubernetes Engine deployment so that you can use Google Cloud Managed Service for Prometheus to collect metrics from Node Exporter. This document shows you how to do the following:\n- Set up Node Exporter to report metrics.\n- Configure a PodMonitoring resource for Managed Service for Prometheus  to collect the exported metrics.\n- Access a dashboard in Cloud Monitoring to view the metrics.\n- Configure alerting rules to monitor the metrics.These instructions apply only if you are using [managed collection](/stackdriver/docs/managed-prometheus/setup-managed) with Managed Service for Prometheus for GKE Standard clusters. You can't use Node Exporter for GKE Autopilot clusters. If you are using self-deployed collection, then see the [source repository](https://github.com/prometheus/node_exporter) for Node Exporter for installation information.\n", "content": "## Prerequisites\nTo collect metrics from Node Exporter by using Managed Service for Prometheus and managed collection, your deployment must meet the following requirements:\n- Your cluster must be running Google Kubernetes Engine version  1.21.4-gke.300 or later.\n- You must be running Managed Service for Prometheus  with managed collection enabled. For more information, see [  Get started with managed collection](/stackdriver/docs/managed-prometheus/setup-managed) .\n- To use dashboards available in Cloud Monitoring for the  integration, you must use`node_exporter`version 1.3.1 or later.For more information about available dashboards, see [Install dashboards](#monitoring-dashboard) .\n## Install Node Exporter\nYou can use the following configuration to install Node Exporter:\n[View on GitHub](https://github.com/GoogleCloudPlatform/prometheus-engine/blob/HEAD/examples/node-exporter/node-exporter.yaml)\n```\n# Copyright 2022 Google LLC\n## Licensed under the Apache License, Version 2.0 (the \"License\");# you may not use this file except in compliance with the License.# You may obtain a copy of the License at\n## \u00a0 \u00a0 https://www.apache.org/licenses/LICENSE-2.0\n## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an \"AS IS\" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.apiVersion: apps/v1kind: DaemonSetmetadata:\u00a0 namespace: gmp-public\u00a0 name: node-exporter\u00a0 labels:\u00a0 \u00a0 app.kubernetes.io/name: node-exporter\u00a0 \u00a0 app.kubernetes.io/version: 1.3.1spec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app.kubernetes.io/name: node-exporter\u00a0 updateStrategy:\u00a0 \u00a0 type: RollingUpdate\u00a0 \u00a0 rollingUpdate:\u00a0 \u00a0 \u00a0 maxUnavailable: 10%\u00a0 template:\u00a0 \u00a0 metadata:\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 app.kubernetes.io/name: node-exporter\u00a0 \u00a0 \u00a0 \u00a0 app.kubernetes.io/version: 1.3.1\u00a0 \u00a0 spec:\u00a0 \u00a0 \u00a0 affinity:\u00a0 \u00a0 \u00a0 \u00a0 nodeAffinity:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requiredDuringSchedulingIgnoredDuringExecution:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 nodeSelectorTerms:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - matchExpressions:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - key: kubernetes.io/arch\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 operator: In\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 values:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - arm64\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - amd64\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - key: kubernetes.io/os\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 operator: In\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 values:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - linux\u00a0 \u00a0 \u00a0 containers:\u00a0 \u00a0 \u00a0 - name: node-exporter\u00a0 \u00a0 \u00a0 \u00a0 image: quay.io/prometheus/node-exporter:v1.3.1\u00a0 \u00a0 \u00a0 \u00a0 args:\u00a0 \u00a0 \u00a0 \u00a0 - --web.listen-address=:8080\u00a0 \u00a0 \u00a0 \u00a0 - --path.sysfs=/host/sys\u00a0 \u00a0 \u00a0 \u00a0 - --path.rootfs=/host/root\u00a0 \u00a0 \u00a0 \u00a0 - --no-collector.wifi\u00a0 \u00a0 \u00a0 \u00a0 - --no-collector.hwmon\u00a0 \u00a0 \u00a0 \u00a0 - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)\u00a0 \u00a0 \u00a0 \u00a0 - --collector.netclass.ignored-devices=^(veth.*)$\u00a0 \u00a0 \u00a0 \u00a0 - --collector.netdev.device-exclude=^(veth.*)$\u00a0 \u00a0 \u00a0 \u00a0 ports:\u00a0 \u00a0 \u00a0 \u00a0 - name: metrics\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 containerPort: 8080\u00a0 \u00a0 \u00a0 \u00a0 resources:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 limits:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: 180Mi\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 requests:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cpu: 102m\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 memory: 180Mi\u00a0 \u00a0 \u00a0 \u00a0 volumeMounts:\u00a0 \u00a0 \u00a0 \u00a0 - mountPath: /host/sys\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mountPropagation: HostToContainer\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: sys\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 readOnly: true\u00a0 \u00a0 \u00a0 \u00a0 - mountPath: /host/root\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mountPropagation: HostToContainer\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name: root\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 readOnly: true\u00a0 \u00a0 \u00a0 hostNetwork: true\u00a0 \u00a0 \u00a0 hostPID: true\u00a0 \u00a0 \u00a0 securityContext:\u00a0 \u00a0 \u00a0 \u00a0 runAsNonRoot: true\u00a0 \u00a0 \u00a0 \u00a0 runAsUser: 65534\u00a0 \u00a0 \u00a0 volumes:\u00a0 \u00a0 \u00a0 - hostPath:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: /sys\u00a0 \u00a0 \u00a0 \u00a0 name: sys\u00a0 \u00a0 \u00a0 - hostPath:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 path: /\u00a0 \u00a0 \u00a0 \u00a0 name: root---apiVersion: monitoring.googleapis.com/v1kind: PodMonitoringmetadata:\u00a0 namespace: gmp-public\u00a0 name: node-exporter\u00a0 labels:\u00a0 \u00a0 app.kubernetes.io/name: node-exporter\u00a0 \u00a0 app.kubernetes.io/part-of: google-cloud-managed-prometheusspec:\u00a0 selector:\u00a0 \u00a0 matchLabels:\u00a0 \u00a0 \u00a0 app.kubernetes.io/name: node-exporter\u00a0 endpoints:\u00a0 - port: metrics\u00a0 \u00a0 interval: 30s\n```\nTo apply configuration changes from a local file, run the following command:\n```\nkubectl apply -f FILE_NAME\n```\nYou can also [use Terraform](/stackdriver/docs/managed-prometheus/setup-managed#terraform-scrape) to manage your configurations.\n## Define rules and alerts\nYou can use the following `Rules` configuration to define alerts on your metrics:\n[View on GitHub](https://github.com/GoogleCloudPlatform/prometheus-engine/blob/HEAD/examples/node-exporter/rules.yaml)\n```\n# Copyright 2022 Google LLC\n## Licensed under the Apache License, Version 2.0 (the \"License\");# you may not use this file except in compliance with the License.# You may obtain a copy of the License at\n## \u00a0 \u00a0 https://www.apache.org/licenses/LICENSE-2.0\n## Unless required by applicable law or agreed to in writing, software# distributed under the License is distributed on an \"AS IS\" BASIS,# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.# See the License for the specific language governing permissions and# limitations under the License.apiVersion: monitoring.googleapis.com/v1kind: Rulesmetadata:\u00a0 namespace: gmp-public\u00a0 name: node-exporter-rules\u00a0 labels:\u00a0 \u00a0 app.kubernetes.io/component: rules\u00a0 \u00a0 app.kubernetes.io/name: node-exporter-rules\u00a0 \u00a0 app.kubernetes.io/part-of: google-cloud-managed-prometheusspec:\u00a0 groups:\u00a0 - name: node-exporter\u00a0 \u00a0 interval: 30s\u00a0 \u00a0 rules:\u00a0 \u00a0 - alert: NodeFilesystemSpaceFillingUp\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Filesystem on {{ $labels.device }} at {{ $labels.instance }}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 has only {{ printf \"%.2f\" $value }}% available space left and is filling\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 up.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemspacefillingup\u00a0 \u00a0 \u00a0 \u00a0 summary: Filesystem is predicted to run out of space within the next 24 hours.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 15\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predict_linear(node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"}[6h], 24 * 60 * 60) < 0\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 1h\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeFilesystemSpaceFillingUp\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Filesystem on {{ $labels.device }} at {{ $labels.instance }}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 has only {{ printf \"%.2f\" $value }}% available space left and is filling\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 up fast.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemspacefillingup\u00a0 \u00a0 \u00a0 \u00a0 summary: Filesystem is predicted to run out of space within the next 4 hours.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 10\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predict_linear(node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"}[6h], 4*60*60) < 0\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 1h\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: critical\u00a0 \u00a0 - alert: NodeFilesystemAlmostOutOfSpace\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Filesystem on {{ $labels.device }} at {{ $labels.instance }}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 has only {{ printf \"%.2f\" $value }}% available space left.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutofspace\u00a0 \u00a0 \u00a0 \u00a0 summary: Filesystem has less than 5% space left.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 5\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 30m\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeFilesystemAlmostOutOfSpace\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Filesystem on {{ $labels.device }} at {{ $labels.instance }}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 has only {{ printf \"%.2f\" $value }}% available space left.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutofspace\u00a0 \u00a0 \u00a0 \u00a0 summary: Filesystem has less than 3% space left.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_avail_bytes{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node-exporter\",fstype!=\"\"} * 100 < 3\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 30m\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: critical\u00a0 \u00a0 - alert: NodeFilesystemFilesFillingUp\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Filesystem on {{ $labels.device }} at {{ $labels.instance }}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 has only {{ printf \"%.2f\" $value }}% available inodes left and is filling\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 up.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemfilesfillingup\u00a0 \u00a0 \u00a0 \u00a0 summary: Filesystem is predicted to run out of inodes within the next 24 hours.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 40\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predict_linear(node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"}[6h], 24*60*60) < 0\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 1h\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeFilesystemFilesFillingUp\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Filesystem on {{ $labels.device }} at {{ $labels.instance }}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 has only {{ printf \"%.2f\" $value }}% available inodes left and is filling\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 up fast.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemfilesfillingup\u00a0 \u00a0 \u00a0 \u00a0 summary: Filesystem is predicted to run out of inodes within the next 4 hours.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 20\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 predict_linear(node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"}[6h], 4*60*60) < 0\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 1h\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: critical\u00a0 \u00a0 - alert: NodeFilesystemAlmostOutOfFiles\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Filesystem on {{ $labels.device }} at {{ $labels.instance }}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 has only {{ printf \"%.2f\" $value }}% available inodes left.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutoffiles\u00a0 \u00a0 \u00a0 \u00a0 summary: Filesystem has less than 5% inodes left.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 5\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 1h\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeFilesystemAlmostOutOfFiles\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Filesystem on {{ $labels.device }} at {{ $labels.instance }}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 has only {{ printf \"%.2f\" $value }}% available inodes left.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefilesystemalmostoutoffiles\u00a0 \u00a0 \u00a0 \u00a0 summary: Filesystem has less than 3% inodes left.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_files_free{job=\"node-exporter\",fstype!=\"\"} / node_filesystem_files{job=\"node-exporter\",fstype!=\"\"} * 100 < 3\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filesystem_readonly{job=\"node-exporter\",fstype!=\"\"} == 0\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 1h\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: critical\u00a0 \u00a0 - alert: NodeNetworkReceiveErrs\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{ printf \"%.0f\" $value }} receive errors in the last two minutes.'\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodenetworkreceiveerrs\u00a0 \u00a0 \u00a0 \u00a0 summary: Network interface is reporting many receive errors.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01\u00a0 \u00a0 \u00a0 for: 1h\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeNetworkTransmitErrs\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: '{{ $labels.instance }} interface {{ $labels.device }} has encountered\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.'\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodenetworktransmiterrs\u00a0 \u00a0 \u00a0 \u00a0 summary: Network interface is reporting many transmit errors.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01\u00a0 \u00a0 \u00a0 for: 1h\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeHighNumberConntrackEntriesUsed\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: '{{ $value | humanizePercentage }} of conntrack entries are used.'\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodehighnumberconntrackentriesused\u00a0 \u00a0 \u00a0 \u00a0 summary: Number of conntrack are getting close to the limit.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeTextFileCollectorScrapeError\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Node Exporter text file collector failed to scrape.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodetextfilecollectorscrapeerror\u00a0 \u00a0 \u00a0 \u00a0 summary: Node Exporter text file collector failed to scrape.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 node_textfile_scrape_error{job=\"node-exporter\"} == 1\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeClockSkewDetected\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Clock on {{ $labels.instance }} is out of sync by more than 300s.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Ensure NTP is configured correctly on this host.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodeclockskewdetected\u00a0 \u00a0 \u00a0 \u00a0 summary: Clock skew detected.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_timex_offset_seconds{job=\"node-exporter\"} > 0.05\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 deriv(node_timex_offset_seconds{job=\"node-exporter\"}[5m]) >= 0\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 or\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_timex_offset_seconds{job=\"node-exporter\"} < -0.05\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 deriv(node_timex_offset_seconds{job=\"node-exporter\"}[5m]) <= 0\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 10m\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeClockNotSynchronising\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: Clock on {{ $labels.instance }} is not synchronising. Ensure\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 NTP is configured on this host.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodeclocknotsynchronising\u00a0 \u00a0 \u00a0 \u00a0 summary: Clock not synchronising.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 min_over_time(node_timex_sync_status{job=\"node-exporter\"}[5m]) == 0\u00a0 \u00a0 \u00a0 \u00a0 and\u00a0 \u00a0 \u00a0 \u00a0 node_timex_maxerror_seconds{job=\"node-exporter\"} >= 16\u00a0 \u00a0 \u00a0 for: 10m\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeRAIDDegraded\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: RAID array '{{ $labels.device }}' on {{ $labels.instance }} is\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 in degraded state due to one or more disks failures. Number of spare drives\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 is insufficient to fix issue automatically.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/noderaiddegraded\u00a0 \u00a0 \u00a0 \u00a0 summary: RAID Array is degraded\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 node_md_disks_required{job=\"node-exporter\",device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)\"} - ignoring (state) (node_md_disks{state=\"active\",job=\"node-exporter\",device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)\"}) > 0\u00a0 \u00a0 \u00a0 for: 15m\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: critical\u00a0 \u00a0 - alert: NodeRAIDDiskFailure\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: At least one device in RAID array on {{ $labels.instance }} failed.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Array '{{ $labels.device }}' needs attention and possibly a disk swap.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/noderaiddiskfailure\u00a0 \u00a0 \u00a0 \u00a0 summary: Failed device in RAID array\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 node_md_disks{state=\"failed\",job=\"node-exporter\",device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)\"} > 0\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeFileDescriptorLimit\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: File descriptors limit at {{ $labels.instance }} is currently\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 at {{ printf \"%.2f\" $value }}%.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefiledescriptorlimit\u00a0 \u00a0 \u00a0 \u00a0 summary: Kernel is predicted to exhaust file descriptors limit soon.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filefd_allocated{job=\"node-exporter\"} * 100 / node_filefd_maximum{job=\"node-exporter\"} > 70\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 15m\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: warning\u00a0 \u00a0 - alert: NodeFileDescriptorLimit\u00a0 \u00a0 \u00a0 annotations:\u00a0 \u00a0 \u00a0 \u00a0 description: File descriptors limit at {{ $labels.instance }} is currently\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 at {{ printf \"%.2f\" $value }}%.\u00a0 \u00a0 \u00a0 \u00a0 runbook_url: https://runbooks.prometheus-operator.dev/runbooks/node/nodefiledescriptorlimit\u00a0 \u00a0 \u00a0 \u00a0 summary: Kernel is predicted to exhaust file descriptors limit soon.\u00a0 \u00a0 \u00a0 expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_filefd_allocated{job=\"node-exporter\"} * 100 / node_filefd_maximum{job=\"node-exporter\"} > 90\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 for: 15m\u00a0 \u00a0 \u00a0 labels:\u00a0 \u00a0 \u00a0 \u00a0 severity: critical\u00a0 - name: node-exporter.rules\u00a0 \u00a0 interval: 30s\u00a0 \u00a0 rules:\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 count without (cpu, mode) (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_cpu_seconds_total{job=\"node-exporter\",mode=\"idle\"}\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 record: instance:node_num_cpu:sum\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 1 - avg without (cpu) (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sum without (mode) (rate(node_cpu_seconds_total{job=\"node-exporter\", mode=~\"idle|iowait|steal\"}[5m]))\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 record: instance:node_cpu_utilisation:rate5m\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_load1{job=\"node-exporter\"}\u00a0 \u00a0 \u00a0 \u00a0 /\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 instance:node_num_cpu:sum{job=\"node-exporter\"}\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 record: instance:node_load1_per_cpu:ratio\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 1 - (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_memory_MemAvailable_bytes{job=\"node-exporter\"}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 or\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_memory_Buffers_bytes{job=\"node-exporter\"}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 +\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_memory_Cached_bytes{job=\"node-exporter\"}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 +\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_memory_MemFree_bytes{job=\"node-exporter\"}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 +\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_memory_Slab_bytes{job=\"node-exporter\"}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 \u00a0 /\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 node_memory_MemTotal_bytes{job=\"node-exporter\"}\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 record: instance:node_memory_utilisation:ratio\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 rate(node_vmstat_pgmajfault{job=\"node-exporter\"}[5m])\u00a0 \u00a0 \u00a0 record: instance:node_vmstat_pgmajfault:rate5m\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 rate(node_disk_io_time_seconds_total{job=\"node-exporter\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)\"}[5m])\u00a0 \u00a0 \u00a0 record: instance_device:node_disk_io_time_seconds:rate5m\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 rate(node_disk_io_time_weighted_seconds_total{job=\"node-exporter\", device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)\"}[5m])\u00a0 \u00a0 \u00a0 record: instance_device:node_disk_io_time_weighted_seconds:rate5m\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 sum without (device) (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 rate(node_network_receive_bytes_total{job=\"node-exporter\", device!=\"lo\"}[5m])\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 record: instance:node_network_receive_bytes_excluding_lo:rate5m\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 sum without (device) (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 rate(node_network_transmit_bytes_total{job=\"node-exporter\", device!=\"lo\"}[5m])\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 record: instance:node_network_transmit_bytes_excluding_lo:rate5m\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 sum without (device) (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 rate(node_network_receive_drop_total{job=\"node-exporter\", device!=\"lo\"}[5m])\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 record: instance:node_network_receive_drop_excluding_lo:rate5m\u00a0 \u00a0 - expr: |\u00a0 \u00a0 \u00a0 \u00a0 sum without (device) (\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 rate(node_network_transmit_drop_total{job=\"node-exporter\", device!=\"lo\"}[5m])\u00a0 \u00a0 \u00a0 \u00a0 )\u00a0 \u00a0 \u00a0 record: instance:node_network_transmit_drop_excluding_lo:rate5m\n```\nTo apply configuration changes from a local file, run the following command:\n```\nkubectl apply -f FILE_NAME\n```\nYou can also [use Terraform](/stackdriver/docs/managed-prometheus/setup-managed#terraform-scrape) to manage your configurations.\nFor more information about applying rules to your cluster, see [Managed rule evaluation and alerting](/stackdriver/docs/managed-prometheus/rules-managed) .\n`Rules`\n[kube-prometheus](https://github.com/prometheus-operator/kube-prometheus)\n## Verify the configuration\nYou can use Metrics Explorer to verify that you correctly configured the exporter. It might take one or two minutes for Cloud Monitoring to ingest your metrics.\nTo verify the metrics are ingested, do the following:\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Metrics explorer** : [Go to Metrics explorer](https://console.cloud.google.com/monitoring/metrics-explorer) \n- In the toolbar of the query-builder pane, select the button whose name is either **MQL** or **PromQL** .\n- Verify that **PromQL** is selected in the **Language** toggle. The language toggle is in the same toolbar that lets you format your query.\n- Enter and run the following query:```\nup{job=\"node-exporter\", cluster=\"CLUSTER_NAME\", namespace=\"gmp-public\"}\n```\n## Install dashboards\nCloud Monitoring provides a library of sample dashboards for integrations. The sample library includes \"Prometheus\" dashboards, which you can install to view your data in the Google Cloud console.\nNote that the **Kubernetes Cluster Prometheus Overview** dashboard requires [Kube State Metrics](/stackdriver/docs/managed-prometheus/exporters/kube_state_metrics) to be installed. The **Kubernetes Pod Prometheus Overview** dashboard requires [Kube State Metrics](/stackdriver/docs/managed-prometheus/exporters/kube_state_metrics) and [Kubelet/cAdvisor](/stackdriver/docs/managed-prometheus/exporters/kubelet-cadvisor) to be installed.\nTo install a dashboard from the sample library, do the following:\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Dashboards** : [Go to Dashboards](https://console.cloud.google.com/monitoring/dashboards) \n- Select the **Sample Library** tab.\n- Choose the **Other** category.\n- (Optional) To view a static preview of a dashboard without   installing it, click **Preview** .\n- Select the dashboards you want to install, then click **Import** .For more information about installing dashboards, see [Installing sample dashboards](/monitoring/dashboards/dashboard-templates#install-templates) .\n## Troubleshooting\nFor information about troubleshooting metric ingestion problems, see [Problems with collection from exporters](/stackdriver/docs/managed-prometheus/troubleshooting#exporter-problems) in [Troubleshooting ingestion-side problems](/stackdriver/docs/managed-prometheus/troubleshooting#ingest-problems) .", "guide": "Google Cloud Observability"}