{"title": "Google Cloud Observability - Configuring your metrics scopes", "url": "https://cloud.google.com/stackdriver/docs/managed-prometheus/best-practices/config", "abstract": "# Google Cloud Observability - Configuring your metrics scopes\nThis document describes how to configure the metrics scopes of your Google Cloud projects for use with Google Cloud Managed Service for Prometheus.\nThe ideal Managed Service for Prometheus deployment is different from the typical Prometheus deployment by necessity. Prometheus is highly scoped to its own instance\u2014which is itself typically cluster-scoped\u2014in that rules and queries run on the Prometheus server that collects the data. Because Managed Service for Prometheus sends data to the global backend, [Monarch](https://research.google/pubs/pub50652/) , queries must be configured to execute against Monarch, not the local cluster. If you are using managed collection, then the same requirement applies to rules.\nThe data you query using Managed Service for Prometheus is determined by the Cloud Monitoring construct , regardless of how you query the data.\n", "content": "## Metrics scopes\nA Monitoring metrics scope is a read-time-only construct that lets you query metric data belonging to multiple Google Cloud projects. Every metrics scope is hosted by a designated Google Cloud project, called the .\nBy default, a project is the scoping project for its own metrics scope, and the metrics scope contains the metrics and configuration for that project. A scoping project can have more than one monitored project in its metrics scope, and the metrics and configurations from all the monitored projects in the metrics scope are visible to the scoping project. A monitored project can also belong to more than one metrics scope.\nWhen you query the metrics in a scoping project, and if that scoping project hosts a multi-project metrics scope, you can retrieve data from multiple projects. If your metrics scope contains all your projects, then your queries and rules evaluate globally.\nFor more information about scoping projects and metrics scope, see [Metrics scopes](/monitoring/settings#concept-scope) . For information about configuring multi-project metrics scope, see [View metrics for multipleprojects](/monitoring/settings/multiple-projects) .\nTo minimize the complexity of your permissions model, use as few metrics scopes as possible. If you do not consider your metric data to be sensitive and it is acceptable for all users to be able to access all metrics, then use a single metrics scope that contains all your projects.\n## Grouping projects together for querying\nThe other best-practice scenarios use the following metrics-scope configurations:\n| Unnamed: 0      | Scope A    | Scope B    | Scope C            |\n|:----------------------------------|:---------------------|:---------------------|:------------------------------------------------------|\n| Scoping project     | scoping-project-A | scoping-project-B | scoping-project-C          |\n| Monitored projects    | Project 1 Project 2 | Project 3 Project 4 | Project 1 Project 2 Project 3 Project 4 Project 5 |\n| IAM-permissioned group (example) | Dev team A   | Dev team B   | SRE team            |", "guide": "Google Cloud Observability"}