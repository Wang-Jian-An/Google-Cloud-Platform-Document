{"title": "Google Cloud Observability - Authorize the Ops Agent", "url": "https://cloud.google.com/stackdriver/docs/solutions/agents/ops-agent/authorization", "abstract": "# Google Cloud Observability - Authorize the Ops Agent\n**Note:** Skip this guide and return to [Install theOps Agent](/stackdriver/docs/solutions/agents/ops-agent/installation) unless you are using very old Compute Engine VMs or have to use a [custom serviceaccount](/compute/docs/access/service-accounts#newserviceaccounts) instead of the [default serviceaccount](/compute/docs/access/service-accounts#default_service_account) . Compute Engine instances are pre-authorized to run the agent.\nThis guide explains how to ensure that the Ops Agent, which you install on your virtual machine (VM) instance, is authorized to send telemetry data to Google Cloud Observability.\n", "content": "## Authorization overview\nrefers to the process of determining what permissions an authenticated client has for a set of resources. Google Cloud authorizes the Ops Agent on a Compute Engine VM instance by using [application default credentials](/docs/authentication/application-default-credentials) (ADC).\nThe Ops Agent supports ADC that authenticate either a VM's attached service account, or a service account key.\n- Anrefers to a service account that's specific to a given resource, such as a VM. The service account has its own unique credentials. ADC uses the VM's [metadata server](/compute/docs/metadata/overview) to obtain credentials for a service.\n- Arefers to a private key used to authorize the key pair on a service account in a project, which lets you create an access token. You use the token to provide an identity so that you can interact with Google Cloud APIs on behalf of the service account.\n- The Ops Agent doesn't support authorization using`gcloud auth`. To prevent unwanted behavior, you must [revoke](/sdk/gcloud/reference/auth/application-default/revoke) any credentials created by using`gcloud auth`.\nWe recommend that you configure the ADC to authenticate an attached service account whenever possible, as the private key requires local storage, [and that storage can be compromised](/docs/authentication/provide-credentials-adc#local-key) . For more information about service account keys, see [Best practices for managing service account keys](/iam/docs/best-practices-for-managing-service-account-keys) .\n## Verify your access scopes\nCompute Engine VM instances are assigned access scopes when you create them. New Compute Engine VMs have adequate access scopes for the Ops Agent, but old VMs or those on which scopes have been modified might not. For more information about access scopes and service accounts, see [Authorization](/compute/docs/access/service-accounts#authorization) in the Compute Engine documentation.\nTo verify your access scopes, do the following:\n- Query the access scopes by running the following command on  your Compute Engine instance:```\ncurl --silent --connect-timeout 1 -f -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/scopes\n```\n- In the command output, if the access scope `https://www.googleapis.com/auth/cloud-platform` is listed, then you have sufficient authorization.If `https://www.googleapis.com/auth/cloud-platform` isn't   listed, then you require two access scopes, one from each of the   following \"logging\" and \"monitoring\" pairs:- `https://www.googleapis.com/auth/logging.write`or`https://www.googleapis.com/auth/logging.admin`\n- `https://www.googleapis.com/auth/monitoring.write`or`https://www.googleapis.com/auth/monitoring.admin`\nTo modify your access scopes, do the following:\n- In the navigation panel of the Google Cloud console, select **Compute Engine** , and then select **VM instances** : [Go to VM instances](https://console.cloud.google.com/compute) \n- If necessary, click the drop-down list of Google Cloud projects  and select the name of your project.\n- Select **VM instances** from the navigation menu, select the **Instances** tab, and the select the name of your VM.\n- Shut down the VM by clicking **Stop** .\n- After the VM stops, click **Edit** .\n- Locate the **Access scopes** in the **Identity and API access** section of the page, and then select **Set access for each API** .\n- For **Stackdriver Logging API** and **Stackdriver Monitoring API** entries,  select the **Write Only** .\n- Click **Save** , and then restart the VM by clicking **Start/Resume** .\n## Use a service account\nrefers to the process of determining a client's identity. For authentication, we recommend using a , a special kind of account that is typically used by an application or a workload, rather than a person. For more information, see [Service accounts overview](/iam/docs/service-account-overview) .\nYou can use service accounts for authentication regardless of where your code runs: on Compute Engine, App Engine, or on-premise. For more information, see [Authentication at Google](/docs/authentication) .\nThis section describes how to create a new service account and grant it the necessary roles, and how to update an existing service account if it doesn't have the necessary roles.\n### Create a service account\nTo create a service account, complete the [Creating a service account](/iam/docs/service-accounts-create) procedures with the following information:\n- Select the Google Cloud project in which to create the service account.- For Compute Engine instances, choose the project in which you created the instance.\n- In the **Role** drop-down menu, select the following roles:- **Monitoring** > **Monitoring Metric Writer** .\n- **Logging** > **Logs Writer** .\n- If you plan to authenticate using a service account key, then select **JSON** as the **Key type** and click **Create** .When you click **Create** , a file that contains a service account key is downloaded to your local system. For more information, see [Create and delete service account keys](/iam/docs/keys-create-delete) . **Note:** After you download a key, you cannot download that key again.\nNext, configure your service account and settings based on whether you authorize by using attached service accounts or by using service account private keys.\n### Verify and modify roles of an existing service account\nYou can use the Google Cloud console to determine which roles an existing service account has, and to add any necessary roles that are missing:\n- In the navigation panel of the Google Cloud console, select **IAM** : [Go to IAM](https://console.cloud.google.com/iam-admin/iam) \n- If necessary, click the drop-down list of Google Cloud projects and select the name of your project.\n- If you don't see a list of IAM principals (users and service accounts), then select the **Permissions** tab.\n- In the **View by Principals** list, locate the entry for the service account. The **Role** column lists the roles granted to the service account.\n- If your service account does not have the necessary roles for the Ops Agent, then use the following steps to add the roles described in [Create a service account](#create-service-account) :- Click **Edit** in the entry for the service account.\n- Click **Add Another Role** to add any missing roles.\n- Click **Save** .\n## Authorize with an attached service account\nTo authorize the Ops Agent installed on a Compute Engine VM instance that has an attached service account, do the following:\n- Ensure that you [verified the access scopes of your VM](#verify-vm-access-scopes) .\n- Grant your service account the [least privileged](/iam/docs/using-iam-securely#least_privilege) IAM roles possible. For the required roles, see the [Create a service account](#monitoring-logging-roles) section of this page.\n- [Attach the service account](/iam/docs/attach-service-accounts#attaching-to-resources) to the VM where the agent is running.\n- If you haven't already installed the agent, then install it. For information about how to install the agent, see [Installing the agent](/stackdriver/docs/solutions/agents/ops-agent/installation) .## Authorize with a service account key\nTo authorize the Ops Agent installed on a VM instance by using service account private keys, do the following:\n- Transfer the service account key file from your local system to your VM instance:- Create an environment variable to point to the service account key file on your local system. The following example creates a variable called `CREDS` :```\nCREDS=~/Downloads/PROJECT-NAME-KEY-ID.json\n```\n- Complete the steps shown in the following table: **Note:** The following file-copy instructions assume that you have a Linux environment on both your local system and your instance. If you are using a different environment, consult the documentation from your cloud provider for how to copy the service account key file. Ensure that the service account key file are in the same location as the `CREDS` variable.- In the navigation panel of the Google Cloud console, select **Compute Engine** , and then select **VM instances** : [Go to VM instances](https://console.cloud.google.com/compute) Identify the and for your VM.\n- On your local system, run a [Google Cloud CLI](/sdk/docs/quickstarts) command to copy the key file from your local system to your VM instance:```\nREMOTE_USER=\"$USER\"INSTANCE=\"INSTANCE_NAME\"ZONE=\"INSTANCE_ZONE\"gcloud compute scp \"$CREDS\" \"$REMOTE_USER@$INSTANCE:~/temp.json\" --zone \"$ZONE\"\n```\n- On your Compute Engine instance, move the service account key file from the temporary location to a permanent location, and for Linux, ensure that the service account key file is readable only by `root` .You must also set the environment variable `GOOGLE_APPLICATION_CREDENTIALS` to point to the location of the service account key file, and the variable must be visible to the agent's process. For configuration information, see [Set GOOGLE_APPLICATION_CREDENTIALS](#set-gac) . **Warning:** If you already have a service account key file, ensure that your new key file doesn't overwrite the key file for your current applications.For example, on Linux you can run the following script which moves the service account key file to the default location, and then sets the appropriate permissions:```\nCREDENTIALS_FILE_LOCATION=\"/etc/google/auth/application_default_credentials.json\"sudo mkdir -p /etc/google/authsudo mv \"$HOME/temp.json\" \"$CREDENTIALS_FILE_LOCATION\"sudo chown root:root \"$CREDENTIALS_FILE_LOCATION\"sudo chmod 0400 \"$CREDENTIALS_FILE_LOCATION\"\n```- Your VM instance now has the service account key file that the agent needs. Next, install or restart the agent:- For information about how to install the agent, see [Installing the agent](/stackdriver/docs/solutions/agents/ops-agent/installation) .\n- For information about how to restart the agent, see [Restarting the agent](/stackdriver/docs/solutions/agents/ops-agent/installation#restart) .\n- If you would like to double-check the service account key file, see [Verifying private-key credentials](/stackdriver/docs/solutions/agents/ops-agent/troubleshooting#verify-key) .\n### Set GOOGLE_APPLICATION_CREDENTIALS\nThis section shows how to set the environment variable `GOOGLE_APPLICATION_CREDENTIALS` so that it is visible to the agent's process.\n**Note:** The Ops Agent isn't the only service that uses the environment variable `GOOGLE_APPLICATION_CREDENTIALS` . If you change the value of this variable as described in this section, then that change affects all system services that rely on that variable.\n- Edit the following configuration file, or create the file if it doesn't exist:```\n/etc/systemd/system.conf\n```\n- Add the following to the configuration file:```\nDefaultEnvironment=\"GOOGLE_APPLICATION_CREDENTIALS=PATH_TO_CREDENTIAL_FILE\"\n```\n- Reload the environment variables:```\nsudo systemctl daemon-reload\n```\n- Restart the agent by running the following command on your VM instance:```\nsudo systemctl restart google-cloud-ops-agent\n```\n- In PowerShell, run the following commands as administrator to set the `GOOGLE_APPLICATION_CREDENTIALS` system environment variable for the Ops Agent to use:```\n[Environment]::SetEnvironmentVariable(\"GOOGLE_APPLICATION_CREDENTIALS\", \"PATH_TO_CREDENTIAL_FILE\", \"Machine\")\n```\n- Restart the agent by running the following command on your VM instance:```\nRestart-Service -Name google-cloud-ops-agent -Force\n```", "guide": "Google Cloud Observability"}