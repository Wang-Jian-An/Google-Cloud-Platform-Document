{"title": "Google Cloud Observability - Retrieving SLO data", "url": "https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/timeseries-selectors", "abstract": "# Google Cloud Observability - Retrieving SLO data\nSLO data is stored in time series. You can retrieve SLO time series by specifying a in the `filter` parameter to the [timeSeries.list](/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) method or by using the [directfilter mode](/monitoring/charts/metrics-selector#metric-filter) in Metrics Explorer.\n**Note:** The use of the `timeSeries.list` method is described in [Retrieve time-series data](/monitoring/custom-metrics/reading-metrics) , and general filtering is described in [Monitoring filters](/monitoring/api/v3/filters) .\n", "content": "## SLO-based alerting policies\nIf you are creating an alerting policy by using the Cloud Monitoring API, you specify the filter using a time-series selector as a field in the policy's threshold condition. For information about how to create SLO-based alerting policies by using the Monitoring API, see [Create an alerting policy](/stackdriver/docs/solutions/slo-monitoring/api/create-policy-api#api-create-slo-policy) .\nOnly a subset of the time-series selectors available for SLOs can be used in alerting policies. Also, SLO-based alerting policies created with the Google Cloud console always use the [select_slo_burn_rate](#tss-burn-rate) selector.\n## Using a time-series selector in a filter\nTo retrieve time-series data for SLOs, your filter must specify a time-series selector. SLO data isn't stored with metric types and can't be retrieved with the filter that specifies a pair of metric and monitored-resource types.\n### Names and arguments\nTime-series selectors have one of the following forms:\n```\nSELECTOR_NAME(SLO_NAME)\nSELECTOR_NAME(SLO_NAME, LOOKBACK_PERIOD)\n```\nThe selectors have names that start with `select_slo_` , and they take one or two arguments:\n- The first argument to the selector is the resource name for an SLO, which looks like this:```\nprojects/PROJECT_ID/services/SERVICE_ID/serviceLevelObjectives/SLO_ID\n```The previous expression contains three variables:- : Name or number of a Google Cloud project.\n- : Name of a service.\n- : Identifier for an SLO that is defined for the service.\nFor information about how to find the values for the and fields for your Google Cloud project, see [Working with the API](/stackdriver/docs/solutions/slo-monitoring/api/using-api) .\n- The second argument, if supported, is a lookback period. See [Types of error-budget alerts](/stackdriver/docs/solutions/slo-monitoring/alerting-on-budget-burn-rate#burn-rates) for information about lookback periods. Valid time units are \"ns\", \"us\" \"ms\", \"s\", \"m\", \"h\".\nFor example, the `select_slo_budget` selector takes an argument, so a filter using this selector looks like the following:\n```\nselect_slo_budget(\"projects/PROJECT_ID/services/SERVICE_ID/serviceLevelObjectives/SLO_ID\")\n```\nIn contrast, the `select_slo_burn_rate` selector requires the and arguments, so a filter using this selector looks like the following:\n```\nselect_slo_burn_rate(\"projects/PROJECT_ID/services/SERVICE_ID/serviceLevelObjectives/SLO_ID\", \"3600s\")\n```\nFor a list and description of all the selectors, see [Time-series selectors](#ts-selector-list) .\n### Retrieving data with a selector\nOne way you can query time-series data is to use the APIs Explorer tool on the [timeSeries.list method's reference page](/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) . For information about this tool, see [APIs Explorer](/monitoring/api/apis-explorer) .\nFor example, to retrieve information about an SLO's budget, complete the following fields in the APIs Explorer tool:\n- **name** :`projects/` ``\n- **filter** :`select_slo_budget(\"projects/` `` `/services/` `` `/serviceLevelObjectives/` `` `\")`\n- **interval.startTime** :`2021-10-07T13:00:20-04:00`\n- **interval.endTime** :`2021-10-08T13:00:20-04:00`\nFor one system, after variables such as are replaced with values and the method is executed, the following time series data is returned:\n## Time-series selectors\nThis section lists the available time-series selectors for SLOs and describes what they represent. All the selectors can be used in filters with the `timeSeries.list` method to retrieve time-series data. Not all of them are supported in alerting policies.\n### select_slo_burn_rate\n**Syntax** : `select_slo_burn_rate(` `` `,` `` `)`\nThe \u201cburn-rate\u201d time-series selector returns the ratio of the current failure rate (the rate of bad requests in the lookback interval) to the sustainable failure rate for the SLO. The sustainable failure rate is the rate at which the SLO is exactly met.\nThe values in this time series can range from 0 to infinity:\n- A value of one indicates that the service exhibits the ideal failure rate: not too risky, not too conservative.\n- A value greater than one means the failure rate exceeds the sustainable rate. The higher the value, the sooner the SLO falls out of compliance.\n- A value less than one means that the current failure rate is less than the sustainable rate.\nWe recommend that you use two alerting policies to monitor burn rate: a fast-burn policy to alert you to spikes in the burn rate, and a slow-burn policy to alert you to gradual increases.\nYou can create and edit alerting policies based on this time-series selector by using the API or the Google Cloud console.\nAll SLO-based alerting policies created by using the Google Cloud console use this selector to retrieve the SLO data.\n### select_slo_health\n**Syntax** : `select_slo_health(` `` `)`\nThe \u201cSLO health\u201d time series answers the question, \u201cDuring a given alignment period, what was the ratio of good requests to total requests?\u201d The SLI for the service defines what counts as a good request. For more information about SLIs, see [Overview](/stackdriver/docs/solutions/slo-monitoring/sli-metrics/overview) .\nThis time series measures service performance: if every request to the service is good, then the data points in this time series have the value 1. As the number of bad requests rise, the values of the data points drop.\n### select_slo_compliance\n**Syntax** : `select_slo_compliance(` `` `)`\nThe \u201cSLO compliance\u201d time series answers the question, \u201cWhat is the ratio of good units to total units since the beginning of the compliance period?\u201d The SLO defines the compliance period as a rolling window or a range of calendar time. The unit can be a request or a window of time. For more information, see [Compliance in request- and windows-based SLOs](/stackdriver/docs/solutions/slo-monitoring#slo-types) .\nThis time series gives you a general picture of how well the service is meeting the SLO. It doesn't produce an operationally urgent signal.\nDon't use this time-series selector in alerting policies.\n### select_slo_budget\n**Syntax** : `select_slo_budget(` `` `)`\nThe \u201cSLO budget\u201d time series answers the question, \u201cHow much of the error budget remained at the time of the measurement?\u201d The error budget might be measured in requests or minutes, and the amount remaining is computed based on whether the compliance period is measured in calendar time or as a rolling window. For more information, see [Error budgets](/stackdriver/docs/solutions/slo-monitoring#defn-error-budget) .\nThis time series measures the risk in a service's reliability. If the error budget becomes less than zero, then it might not be possible to meet the SLO for the current period. A failure to meet the SLO might have real consequences for an organization's production environment, depending on how the organization governs reliability.\nDon't use this time-series selector in alerting policies.\n### select_slo_budget_fraction\n**Syntax** : `select_slo_budget_fraction(` `` `)`\nThe \u201cSLO budget fraction\u201d time series answers the question, \u201cHow much of the error budget, as a fraction from negative infinity to one, remains at this time?\u201d\nDon't use this time-series selector in alerting policies.\n### select_slo_budget_total\n**Syntax** : `select_slo_budget_total(` `` `)`\nThe \u201cSLO total budget\u201d time series answers the question, \u201cWhat is the total error budget (in requests or minutes) that is projected to be available at this time, based on the behavior of the service since the start of the compliance period?\u201d The SLO defines the compliance period as a rolling window or a range of calendar time.\nDon't use this time-series selector in alerting policies.\n### select_slo_counts\n**Syntax** : `select_slo_counts(` `` `)`\nThe \u201cSLO counts\u201d time series answers the question, \u201cDuring a given alignment period, what is the number of good and bad requests?\u201d This selector provides a time series that records general health and is suitable for ingestion into long-term storage systems.\nDon't use this time-series selector in alerting policies.", "guide": "Google Cloud Observability"}