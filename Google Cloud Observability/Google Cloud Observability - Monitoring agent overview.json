{"title": "Google Cloud Observability - Monitoring agent overview", "url": "https://cloud.google.com/stackdriver/docs/solutions/agents/monitoring", "abstract": "# Google Cloud Observability - Monitoring agent overview\n**This is a legacy agent.** While this agent is still supported on Linux, we recommend against using it for new Google Cloud workloads.Instead, we recommend that you use the [Ops Agent](/stackdriver/docs/solutions/agents/monitoring/../ops-agent) for new Google Cloud workloads and eventually transition your existing Compute Engine VMs to use the Ops Agent. The Ops Agent, which combines the collection of metrics and logging into a single agent, is the eventual replacement for the legacy agents.The Ops Agent is under active development, but there might be some use cases that it doesn't support. If the Ops Agent doesn't support your use case, then you can still use the Monitoring agent on Linux.There will be no new feature development or support for new operating systems for the legacy Monitoring agent.We strongly recommend against using the legacy Monitoring agent on Windows. The legacy Monitoring agent on Windows is unsupported, and all of its features are available in the Ops Agent. We strongly recommend using Ops Agent for monitoring Windows instances. However, if you have to run the legacy Logging agent on Windows and also need to collect metrics, you must use the legacy Monitoring agent; you can't run the Ops Agent and a legacy agent on the same machine.\n**Caution:** The 5.x version of the Monitoring agent has been [deprecated and decommissioned](/stackdriver/docs/deprecations/mon-agent) . For information about the latest agent versions, see [Listing all agent versions](/stackdriver/docs/solutions/agents/monitoring/installation#list-versions) .\nThe Monitoring agent is a [collectd](https://collectd.org/) -based daemon that gathers system and application metrics from virtual machine instances and sends them to Monitoring. By default, the Monitoring agent collects disk, CPU, network, and process metrics. You can configure the Monitoring agent to monitor [third-party applications](/monitoring/agent/plugins) to get the [full list of agent metrics](/monitoring/api/metrics_agent) .\nTo install the agent, see [Installing the Monitoring agent](/stackdriver/docs/solutions/agents/monitoring/install-index) .\n**Note:** If your [metrics scope](/monitoring/settings#concept-scope) is configured with a [VPC Service Controls](/vpc-service-controls) Service Perimeter for the Monitoring API, then the Monitoring agent won't work on any virtual machine instance outside the perimeter. To learn more about Service Perimeters, see [Service perimeter details and configuration](/vpc-service-controls/docs/service-perimeters) .\n", "content": "## Purpose\nUsing the Monitoring agent is optional but recommended. Monitoring can access some instance metrics without the Monitoring agent, including CPU utilization, some disk traffic metrics, network traffic, and uptime information. Monitoring uses the Monitoring agent to access additional system resources and application services in virtual machine (VM) instances. If you want these additional capabilities, you should install the Monitoring agent.\n**Note:** The Monitoring agent is designed to ingest system, third-party, custom, and agent telemetry metrics. Some of these metrics are chargeable. For pricing information, see [Cloud Monitoring pricing summary](/stackdriver/pricing#monitoring-pricing-summary) .\nAfter installing the Monitoring agent, you can monitor supported third-party applications by adding application-specific `collectd` configurations. See [Monitoring third-partyapplications](/monitoring/agent/plugins) for details.\nFor a complete list of the built-in metrics you can get with the Monitoring agent, see [Agent metrics](/monitoring/api/metrics_agent#agent-agent) .\nTo send any custom metric to Monitoring using the agent, see [Monitoring custom applications](/monitoring/agent/custom-metrics-agent) . If you have access to the source code of your application, it may be more convenient to instrument it with [OpenCensus](/monitoring/custom-metrics/open-census) .\n## Supported configurations\nThe Monitoring agent is compatible with the following environments.\n### Virtual machine instances\nYou can install the Monitoring agent on the following kinds of VM instances:\n- [Compute Engine](/compute/docs) instances. The Monitoring agent sends monitoring information to each instance's associated project.For instances without external IP addresses, you must [enable Private GoogleAccess](/compute/docs/private-google-access/configure-private-google-access) to allow the Monitoring agent to send metrics.To create a Compute Engine instance, see [Compute Engine getting started guide](/compute/docs/quickstart) .\n- [Amazon Elastic Compute Cloud (Amazon EC2)](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html) instances.The Monitoring agent sends monitoring information to the [AWS Connector project](/monitoring/settings/aws-accounts#connector-project) that links your AWS account to Google Cloud services. **Deprecation notice:** Use of AWS CloudWatch metrics in Connector projects in Cloud Monitoring is [deprecated](/stackdriver/docs/deprecations) . As of **August 21, 2023** , you can no longer create AWS Connector projects. Existing AWS Connector projects will be supported until **August 21, 2024** . For more information about this change, see [Deprecation: AWS CloudWatch metrics in Connector projects](/stackdriver/docs/deprecations/aws-cloudwatch-metrics-ingestion) . **The legacy Monitoring agent and legacy Logging agent onAmazon Elastic Compute Cloud (Amazon EC2) are still supported and aren't beingdeprecated.** If you have charts or alerts that rely on metadata labels collected with the legacy [AWS CloudWatch metrics](/monitoring/api/metrics_aws) , then you might need to take action. Metadata labels like `instance_name` and `tag` are no longer available. These labels can be restored by using the replacement solution; for more information, see [Collect AWS CloudWatch metrics by using the Prometheus CloudWatch exporter](/monitoring/custom-metrics/aws-prometheus-cloudwatch) .For the Monitoring agent to function correctly, the Amazon EC2 instance it runs on must be able to communicate with Google Cloud APIs, particularly the Monitoring API. This requires either an external IP address or a [NAT Gateway](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html) .To create an Amazon EC2 instance, see [Amazon EC2 Getting Started Guide](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html) .\n**Note:** The Monitoring agent is not supported on on-premises machines.\nThe following types of VM instances belong to managed services that implement service-specific Monitoring support. Don't try to manually install or configure the Monitoring agent on them:\n- App Engine standard has built-in    Monitoring support. Agents aren't needed.\n- App Engine flexible environment instances have pre-installed agents  with service-specific configurations.\n- [Dataflow](/dataflow/docs) instances have  pre-installed    Monitoring agents with service-specific configurations.\n- [Dataproc](/dataproc/docs) instances prior to  image version 2.2 have pre-installed    Monitoring agents with service-specific configurations.You can install the [  Ops Agent](/stackdriver/docs/solutions/agents/monitoring/../ops-agent) on Dataproc clusters  that use image version 2.2 and later to collect syslog logs and  host metrics. For more information, see [  Dataproc 2.2.x release versions](/dataproc/docs/concepts/versioning/dataproc-release-2.2) .\n- Google Kubernetes Engine node instances:- [GKE on   Google Cloud](/kubernetes-engine/docs) clusters are configured to [collect logs and metrics](/stackdriver/docs/solutions/gke) with   Logging and Monitoring by default. You   can also configure metric and log collection for existing container   clusters. For information, see [Configuring logging and   monitoring for GKE](/stackdriver/docs/solutions/gke/installing) .\n- [GKE on VMware](/anthos/gke/docs/on-prem) instances have an integrated logging and monitoring solution that   collects status about system components. For information, see [   Logging and monitoring](/anthos/gke/docs/on-prem/concepts/logging-and-monitoring) .\n### Operating systems\nThe Monitoring agent supports the following operating systems on compatible VM instances.\nThe Monitoring agent supports the following Linux operating systems:\n- Amazon Linux AMI\n- CentOS 7\n- CentOS 8\n- Rocky Linux 8\n- RHEL 7: rhel-7, rhel-7-6-sap-ha, rhel-7-7-sap-ha\n- RHEL 8: rhel-8, rhel-8-2-sap-ha, rhel-8-4-sap-ha, rhel-8-6-sap-ha, rhel-8-8-sap-ha\n- Debian 9 (Stretch)\n- Debian 10 (Buster)\n- Debian 11 (Bullseye)\n- SLES 12: sles-12, sles-12-sp5-sap\n- SLES 15: sles-15, sles-15-sp2-sap, sles-15-sp3-sap, sles-15-sp4-sap, sles-15-sp5-sap\n- OpenSUSE Leap 15: opensuse-leap (opensuse-leap-15-3-*, opensuse-leap-15-4-*)\n- Ubuntu 20.04 LTS (Focal Fossa): ubuntu-2004-lts, ubuntu-minimal-2004-lts\nThe Monitoring agent does not presently support the Container-Optimized OS that is the default in Google Kubernetes Engine clusters.\nAll versions of the Monitoring agent support the following Windows operating systems:\n- Windows Server 2019\n- Windows Server Core 2019\n- Windows Server 2016\n- Windows Server Core 2016\nThe Monitoring agent does not presently support Windows Server Core 2019 for containers.\n### Supported applications\nYou can configure Monitoring to monitor a variety of popular open source software applications. Configuration is only possible for agents running on Linux. Agents running on Windows can monitor IIS and MS SQL applications, but they are not configurable for other applications.\nFor more information, see [Monitoring third-party applications](/monitoring/agent/plugins) .\n**Note:** The interoperability of the agent and third-party plugins on SUSE Linux has not been tested. This is a known limitation.\n### Agent access requirements\nRunning the agent requires access to the following DNS names:\n- OAuth2 token server: `oauth2.googleapis.com`Earlier versions of the agent may require access to `www.googleapis.com` (full URL: `https://www.googleapis.com/oauth2/v3/token` ).If you're using an older version of the agent, it's recommended that you [upgrade your agent](/stackdriver/docs/solutions/agents/monitoring/installation#upgrade) to the latest version.\n- Monitoring APIs: `monitoring.googleapis.com`\nInstalling the agent requires access to the following DNS names:\n- (Linux) Google Cloud package repository: `packages.cloud.google.com`\n- (Linux) Google downloads subdomain: `dl.google.com`\n- (Windows) Legacy Stackdriver download server: `repo.stackdriver.com`## Getting the Monitoring agent source code\nThe source code for the Monitoring agent is available for only the Linux-hosted Monitoring agent. The Windows-hosted Monitoring agent is not open source.\nThe Monitoring agent is installed by a script described in the [installation instructions](/stackdriver/docs/solutions/agents/monitoring/installation) . You can skip this section if you only want to install and use the agent. If you want to understand the source code, then read this section.\nThe Monitoring agent, `stackdriver-agent` , is based on the original [collectd](http://www.collectd.org/) system statistics collection daemon. `stackdriver-agent` source code is available at [Stackdriver/collectd](https://github.com/Stackdriver/collectd) . The build and packaging scripts for the Monitoring agent are available at [Stackdriver/agent-packaging](https://github.com/Stackdriver/agent-packaging) . The configuration files for third-party applications are in the agent's [GitHub configuration repository](https://github.com/Stackdriver/stackdriver-agent-service-configs) .\nThe software package for `stackdriver-agent` contains:\n- The collectd daemon.\n- The plugin shared libraries, including the Cloud Monitoring API output plugin.\n- The top-level configuration files for the Monitoring agent.## Deprecation policy\nThe Monitoring agent is subject to the [Agents deprecation policy](/stackdriver/docs/agent-deprecation-policy) .\nFor deprecation information for legacy features and versions, refer to [Google Cloud Observability deprecations](/stackdriver/docs/deprecations) .\n## What's next\n- See [Quickstart](/monitoring/monitor-compute-engine-virtual-machine) to monitor a VM instance running an Apache web server. The quickstart includes installing the agent.\n- See [Installing the Monitoring agent](/stackdriver/docs/solutions/agents/monitoring/installation) to install the agent on Compute Engine or Amazon EC2 VM instances.", "guide": "Google Cloud Observability"}