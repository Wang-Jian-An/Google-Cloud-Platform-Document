{"title": "Google Cloud Observability - Choose an instrumentation approach", "url": "https://cloud.google.com/stackdriver/docs/instrumentation/choose-approach", "abstract": "# Google Cloud Observability - Choose an instrumentation approach\nThis page contains recommendations for instrumenting your app on different Google Cloud platforms, such as Google Kubernetes Engine (GKE) and Cloud Run. If your app isn't already instrumented, then use these recommendations for guidance as to how to instrument your app to send telemetry data to Google Cloud. The recommendations on this page aren't the only solutions, and other approaches can work. For additional guidance, contact [Google Cloud Support](/support) .\nThere are recommendations for the following:\n- [GKE](#containers) \n- [Compute Engine](#instances) \n- [Cloud Run](#run) \n- [Cloud Functions](#functions) \n- [App Engine](#app_engine) \n- [Logging frameworks](#logging-frameworks) \nFor information about instrumentation examples, see the documents listed in the [Code samples](#samples) section.\n", "content": "## GKE\nFor general information about GKE, see [GKE overview](/kubernetes-engine/docs/concepts/kubernetes-engine-overview) .\n| Type | Recommendation                                                                                                                                              |\n|:--------||\n| Metrics | We recommend that you use Google Cloud Managed Service for Prometheus. For instrumentation, do one of the following: Use Prometheus client libraries. If you use this approach, then we also recommend that you use managed collection, which includes copy-pastable exporter installation instructions for common applications. Use the OpenTelemetry SDK and the OTLP exporter for your language. Ensure that you configure the OpenTelemetry collector to report OTLP metrics to Managed Service for Prometheus. For more information, see Get started with the OpenTelemetry Collector. |\n| Traces | Do the following: Use the OpenTelemetry SDK and the OTLP exporter for your language. Configure the OpenTelemetry collector to send OTLP traces to Google Cloud.                                                                                                         |\n| Logs | Configure your app to output JSON-structured logs to stdout and stderr. For a list of frameworks, see Recommended logging frameworks. GKE collects logs written to stdout and stderr automatically. For more information, see About GKE logs.                                                                                      |\n## Compute Engine\nFor general information about Compute Engine, see [Virtual machine instances](/compute/docs/instances) .\n| Type    | Recommendation                                                                                                           |\n|:-------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Metrics and Traces | Do the following: Use the OpenTelemetry SDK and the OTLP exporter for your language. Use the Ops Agent to collect metrics and traces. For an example, see Collect OpenTelemetry Protocol (OTLP) metrics and traces. Alternatively, if you only want to configure collection for Prometheus-format metrics, you can use the Ops Agent Prometheus Receiver to collect metrics instrumented using Prometheus client libraries or the OpenTelemetry SDK. |\n| Logs    | Do the following: Configure your app to output JSON-structured logs to a file. For a list of frameworks, see Recommended logging frameworks. Install the Ops Agent and configure a receiver. For an example, see Logging receivers.                                                     |\n## Cloud Run\nFor general information about Cloud Run, see [What is Cloud Run](/run/docs/overview/what-is-cloud-run) .\n| Type    | Recommendation                                                                                                                |\n|:-------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Metrics and Traces | Do the following: Use the OpenTelemetry SDK and the OTLP exporter for your language. Configure the OpenTelemetry sidecar to collect metrics and traces. For an example, see Write OTLP metrics by using an OpenTelemetry sidecar. Alternatively, if you only want to configure collection for Prometheus-format metrics, you can use the Prometheus sidecar for Cloud Run to collect metrics instrumented using Prometheus client libraries or the OpenTelemetry SDK. |\n| Logs    | Configure your app to output JSON-structured logs to stdout and stderr. For a list of frameworks, see Recommended logging frameworks. Cloud Run collects logs written to stdout and stderr automatically. For more information, see Write container logs.                                                     |\n## Cloud Functions\nFor general information about Cloud Functions, see [Cloud Functions overview](/functions/docs/concepts/overview) .\n| Type | Recommendation                                                                 |\n|:--------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Metrics | Direct writing of metrics is not supported in Cloud Functions. To generate metrics, we recommend you use log-based metrics.                                     |\n| Traces | Use the SDK and the Cloud Trace exporter for your language.                                                     |\n| Logs | Configure your app to output JSON-structured logs to stdout and stderr. For a list of frameworks, see Recommended logging frameworks. Cloud Functions collects logs written to stdout and stderr automatically. For more information, see View and write Cloud Function logs. |\n## App Engine\nFor general information about App Engine, see [An overview of App Engine](/appengine/docs/an-overview-of-app-engine) .\n| Type | Recommendation                                                             |\n|:--------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Metrics | Use the SDK and the Cloud Monitoring exporter for your language.                                                |\n| Traces | Use the SDK and the Cloud Trace exporter for your language.                                                  |\n| Logs | Configure your app to output JSON-structured logs to stdout and stderr. For a list of frameworks, see Recommended logging frameworks. App Engine collects logs written to stdout and stderr automatically. For more information, see Writing and viewing logs. |\n## Recommended logging frameworks\nTo collect logs, we recommend that you use a framework which can be configured to output serialized JSON objects to `stdout` , `stderr` , or to a file. The logging agent, whether integrated or installed, scrapes the file and writes [structured logs for Cloud Logging](/logging/docs/structured-logging) . For writing log data, we recommend the following:\n- Go: [slog](https://pkg.go.dev/log/slog) .\n- Python: [logging](https://docs.python.org/3/library/logging.html) .\n- JavaScript: [winston](https://github.com/winstonjs/winston) .\n- Java: [SLF4J](https://www.slf4j.org/) with [Logback](https://logback.qos.ch/) .## Code samples\nFor code samples that illustrate how to instrument your application to send telemetry to Google Cloud, see the following:\n- [Generate traces and metrics with Go](/stackdriver/docs/instrumentation/setup/go) .\n- [Generate traces and metrics with Java](/stackdriver/docs/instrumentation/setup/java) .## References to OpenTelemetry\nThis section provides links to the OpenTelemetry SDK, and the exporters for OTLP, Cloud Trace, and Cloud Monitoring.\nGeneral references:\n- [Language APIs & SDKs](https://opentelemetry.io/docs/languages/) \n- [OTLP exporter](https://opentelemetry.io/docs/specs/otel/protocol/exporter/) \n### Go\n- [Go SDK](https://opentelemetry.io/docs/languages/go/) \n- [Go OTLP exporter ](https://opentelemetry.io/docs/languages/go/exporters/#otlp) \n- [Go Cloud Trace exporter](https://github.com/GoogleCloudPlatform/opentelemetry-operations-go/blob/main/exporter/trace) \n- [Go Cloud Monitoring exporter](https://github.com/GoogleCloudPlatform/opentelemetry-operations-go/tree/main/exporter/metric) \n### Java\n- [Java SDK](https://opentelemetry.io/docs/languages/java/) \n- [Java OTLP exporter](https://opentelemetry.io/docs/languages/java/exporters/#otlp) \n- [Java Cloud Trace exporter](https://github.com/GoogleCloudPlatform/opentelemetry-operations-java/blob/main/exporters/trace) \n- [Java Cloud Monitoring exporter](https://github.com/GoogleCloudPlatform/opentelemetry-operations-java/tree/main/exporters/metrics) \n### JavaScript\n- [JavaScript SDK](https://opentelemetry.io/docs/languages/js/) \n- [JavaScript OTLP exporter](https://opentelemetry.io/docs/languages/js/exporters/#otlp) \n- [JavaScript Cloud Trace exporter](https://github.com/GoogleCloudPlatform/opentelemetry-operations-js/tree/main/packages/opentelemetry-cloud-trace-exporter) \n- [JavaScript Cloud Monitoring exporter](https://github.com/GoogleCloudPlatform/opentelemetry-operations-js/tree/main/packages/opentelemetry-cloud-monitoring-exporter) \n### Python\n- [Python SDK](https://opentelemetry.io/docs/languages/python/) \n- [Python OTLP exporter](https://opentelemetry.io/docs/languages/python/exporters/) \n- [Python Cloud Trace exporter](https://github.com/GoogleCloudPlatform/opentelemetry-operations-python/tree/main/opentelemetry-exporter-gcp-trace) \n- [Python Cloud Monitoring exporter](https://github.com/GoogleCloudPlatform/opentelemetry-operations-python/tree/main/opentelemetry-exporter-gcp-monitoring)", "guide": "Google Cloud Observability"}