{"title": "Google Cloud Observability - Authorize the Monitoring agent", "url": "https://cloud.google.com/stackdriver/docs/solutions/agents/monitoring/authorization", "abstract": "# Google Cloud Observability - Authorize the Monitoring agent\n**Note:** Skip this guide and return to [Install the Monitoring agent](/stackdriver/docs/solutions/agents/monitoring/installation) unless you are using very old Compute Engine VMs or have to use a [custom serviceaccount](/compute/docs/access/service-accounts#newserviceaccounts) instead of the [default serviceaccount](/compute/docs/access/service-accounts#default_service_account) . Compute Engine instances are pre-authorized to run the agent.\nThis guide explains how to ensure that the Monitoring agent, which you install on your virtual machine (VM) instance, is authorized to send telemetry data to Google Cloud Observability.\n", "content": "## Authorization overview\nrefers to the process of determining what permissions an authenticated client has for a set of resources. Google Cloud authorizes the Monitoring agent on a Compute Engine VM instance by using [application default credentials](/docs/authentication/application-default-credentials) (ADC).\nThe Monitoring agent supports ADC that authenticate either a VM's attached service account, or a service account key.\n- Anrefers to a service account that's specific to a given resource, such as a VM. The service account has its own unique credentials. ADC uses the VM's [metadata server](/compute/docs/metadata/overview) to obtain credentials for a service.\n- Arefers to a private key used to authorize the key pair on a service account in a project, which lets you create an access token. You use the token to provide an identity so that you can interact with Google Cloud APIs on behalf of the service account.\nWe recommend that you configure the ADC to authenticate an attached service account whenever possible, as the private key requires local storage, [and that storage can be compromised](/docs/authentication/provide-credentials-adc#local-key) . For more information about service account keys, see [Best practices for managing service account keys](/iam/docs/best-practices-for-managing-service-account-keys) .\nFor AWS EC2 VM instances, the Monitoring agent supports authentication only using the service account key method.\n## Before you begin\nRead this guide if any of the following applies to you:\n- If you're running very old Compute Engine instances or if you have modified the access scopes or service account settings for your Compute Engine instances, then you must complete the steps in this guide before installing the agent. These VMs might not have the required service account key file. For information about how to verify the access scopes and service account settings of your instances, see [Verify Compute Engine credentials](/stackdriver/docs/solutions/agents/monitoring/troubleshooting#verify-creds) .On newly created Compute Engine VM instances, the access scopes and service account settings are sufficient to run the agents.\n- If you're running Amazon EC2 (AWS VC2) VM instances, then do the following before installing the agent:- Identify the for the AWS account with your EC2 instances. The hosting project is a Google Cloud project whose sole purpose is to store the metrics and logs from the EC2 instances in an AWS account.If you have an [AWS connector project](/monitoring/settings/aws-accounts#connector-project) for an AWS account, then the connector project is the AWS hosting project.If you don't have an AWS connector project for the account, then search your existing Google Cloud projects to determine whether you previously created an AWS hosting project for the account. If a hosting project is found, then use it.If you can't find an AWS hosting project for the account, then we recommend that you create a Google Cloud project to serve as the hosting project. If you have EC2 instances in multiple AWS accounts, then create a Google Cloud project for each account. We also recommend that you use a naming convention for these projects or that you use [project labels](/resource-manager/docs/creating-managing-labels) , so that you can identify your hosting projects. We don't recommend that you re-use an existing Google Cloud project, especially if it contains any Google Cloud resources.\n- Complete the steps to authorize the agent by using a service account key file.\nTo verify your access scopes, do the following:\n- Query the access scopes by running the following command on  your Compute Engine instance:```\ncurl --silent --connect-timeout 1 -f -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/scopes\n```\n- In the command output, if the access scope `https://www.googleapis.com/auth/cloud-platform` is listed, then you have sufficient authorization.If `https://www.googleapis.com/auth/cloud-platform` isn't   listed, then you require two access scopes, one from each of the   following \"logging\" and \"monitoring\" pairs:- `https://www.googleapis.com/auth/logging.write`or`https://www.googleapis.com/auth/logging.admin`\n- `https://www.googleapis.com/auth/monitoring.write`or`https://www.googleapis.com/auth/monitoring.admin`\nTo modify your access scopes, do the following:\n- In the navigation panel of the Google Cloud console, select **Compute Engine** , and then select **VM instances** : [Go to VM instances](https://console.cloud.google.com/compute) \n- If necessary, click the drop-down list of Google Cloud projects  and select the name of your project.\n- Select **VM instances** from the navigation menu, select the **Instances** tab, and the select the name of your VM.\n- Shut down the VM by clicking **Stop** .\n- After the VM stops, click **Edit** .\n- Locate the **Access scopes** in the **Identity and API access** section of the page, and then select **Set access for each API** .\n- For **Stackdriver Logging API** and **Stackdriver Monitoring API** entries,  select the **Write Only** .\n- Click **Save** , and then restart the VM by clicking **Start/Resume** .\n## Use a service account\nrefers to the process of determining a client's identity. For authentication, we recommend using a , a special kind of account that is typically used by an application or a workload, rather than a person. For more information, see [Service accounts overview](/iam/docs/service-account-overview) .\nYou can use service accounts for authentication regardless of where your code runs: on Compute Engine, App Engine, or on-premise. For more information, see [Authentication at Google](/docs/authentication) .\nThis section describes how to create a new service account and grant it the necessary roles, and how to update an existing service account if it doesn't have the necessary roles.\n### Create a service account\nTo create a service account, complete the [Creating a service account](/iam/docs/service-accounts-create) procedures with the following information:\n- Select the Google Cloud project in which to create the service account.- For Compute Engine instances, choose the project in which you created the instance.\n- For Amazon EC2 instances, select the [AWS hosting project](#def-aws-hosting-project) .\n- In the **Role** drop-down menu, select the following roles:- **Monitoring** > **Monitoring Metric Writer** . This authorizes the Monitoring agent.\nIf you will also install the Logging agent, then add the following role for that agent:- **Logging** > **Logs Writer** . This authorizes the Logging agent.\n- If you plan to authenticate using a service account key, then select **JSON** as the **Key type** and click **Create** .When you click **Create** , a file that contains a service account key is downloaded to your local system. For more information, see [Create and delete service account keys](/iam/docs/keys-create-delete) . **Note:** After you download a key, you cannot download that key again.\nNext, configure your service account and settings based on whether you authorize by using attached service accounts or by using service account private keys.\n### Verify and modify roles of an existing service account\nYou can use the Google Cloud console to determine which roles an existing service account has, and to add any necessary roles that are missing:\n- In the navigation panel of the Google Cloud console, select **IAM** : [Go to IAM](https://console.cloud.google.com/iam-admin/iam) \n- If necessary, click the drop-down list of Google Cloud projects and select the name of your project.\n- If you don't see a list of IAM principals (users and service accounts), then select the **Permissions** tab.\n- In the **View by Principals** list, locate the entry for the service account. The **Role** column lists the roles granted to the service account.\n- If your service account does not have the necessary roles for the Monitoring agent, then use the following steps to add the roles described in [Create a service account](#create-service-account) :- Click **Edit** in the entry for the service account.\n- Click **Add Another Role** to add any missing roles.\n- Click **Save** .\n## Authorize with an attached service account\nTo authorize the Monitoring agent installed on a Compute Engine VM instance that has an attached service account, do the following:\n- Ensure that you [verified the access scopes of your VM](#verify-vm-access-scopes) .\n- Grant your service account the [least privileged](/iam/docs/using-iam-securely#least_privilege) IAM roles possible. For the required roles, see the [Create a service account](#monitoring-logging-roles) section of this page.\n- [Attach the service account](/iam/docs/attach-service-accounts#attaching-to-resources) to the VM where the agent is running.\n- If you haven't already installed the agent, then install it. For information about how to install the agent, see [Installing the agent](/stackdriver/docs/solutions/agents/monitoring/installation) .## Authorize with a service account key\n**Note:** Service account key files aren't supported by the Monitoring agent for Compute Engine VMs running Windows. On these VMs, the agent uses the credentials provided by the [metadata server](/compute/docs/metadata/overview) .\nTo authorize the Monitoring agent installed on a VM instance by using service account private keys, do the following:\n- Transfer the service account key file from your local system to your VM instance:- Create an environment variable to point to the service account key file on your local system. The following example creates a variable called `CREDS` :```\nCREDS=~/Downloads/PROJECT-NAME-KEY-ID.json\n```\n- Complete the steps shown in the following table: **Note:** The following file-copy instructions assume that you have a Linux environment on both your local system and your instance. If you are using a different environment, consult the documentation from your cloud provider for how to copy the service account key file. Ensure that the service account key file are in the same location as the `CREDS` variable.- In the navigation panel of the Google Cloud console, select **Compute Engine** , and then select **VM instances** : [Go to VM instances](https://console.cloud.google.com/compute) Identify the and for your VM.\n- On your local system, run a [Google Cloud CLI](/sdk/docs/quickstarts) command to copy the key file from your local system to your VM instance:```\nREMOTE_USER=\"$USER\"INSTANCE=\"INSTANCE_NAME\"ZONE=\"INSTANCE_ZONE\"gcloud compute scp \"$CREDS\" \"$REMOTE_USER@$INSTANCE:~/temp.json\" --zone \"$ZONE\"\n```\n- On your Compute Engine instance, move the service account key file from the temporary location to a permanent location, and for Linux, ensure that the service account key file is readable only by `root` . **Warning:** If you already have a service account key file, ensure that your new key file doesn't overwrite the key file for your current applications. **Note:** Service account key files aren't supported by the Monitoring agent for Compute Engine VMs running Windows. On these VMs, the agent uses the credentials provided by the [metadata server](/compute/docs/metadata/overview) .These are the locations where the agent expects your key file:- **Linux VMs** :`/etc/google/auth/application_default_credentials.json`\n- Linux VMs: Any location you store in the environment variable`GOOGLE_APPLICATION_CREDENTIALS`, which must be visible to the agent's process. For configuration information, see [Set GOOGLE_APPLICATION_CREDENTIALS](#set-gac) .\nFor example, on Linux you can run the following script which moves the service account key file to the default location, and then sets the appropriate permissions:```\nCREDENTIALS_FILE_LOCATION=\"/etc/google/auth/application_default_credentials.json\"sudo mkdir -p /etc/google/authsudo mv \"$HOME/temp.json\" \"$CREDENTIALS_FILE_LOCATION\"sudo chown root:root \"$CREDENTIALS_FILE_LOCATION\"sudo chmod 0400 \"$CREDENTIALS_FILE_LOCATION\"\n```\n- For your VM, identify and .\n- On your local system, use [scp](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html#AccessingInstancesLinuxSCP) to copy the service account key file from your local system to your VM instance:```\nKEY=\"YOUR-SSH-KEY-PAIR-FILE\"INSTANCE=\"ec2-YOUR-INSTANCE'S-ID.YOUR-INSTANCE'S-AWS-REGION.compute.amazonaws.com\"# The remote user depends on the installed OS: ec2-user, ubuntu, root, etc.REMOTE_USER=\"EC2-USER\"scp -i \"$KEY\" \"$CREDS\" \"$REMOTE_USER@$INSTANCE:~/temp.json\"\n```The value of the `INSTANCE` environment variable assumes that your EC2 instance isn't in the `us-east-1` region. To learn how to define the `INSTANCE` variable when your instance is in the `us-east-1` region, see [naming convention defined by Amazon](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html) .\n- On your EC2 instance, move the service account key file from the the temporary location to one of the following locations, and for Linux, ensure that the service account key file is readable only by `root` . **Warning:** If you already have a service account key file, ensure that your new key file doesn't overwrite the key file for your current applications.These are the locations where the agent expects your key file:- **Linux VMs** : `/etc/google/auth/application_default_credentials.json`\n- **Windows VMs** : `C:\\ProgramData\\Google\\Auth\\application_default_credentials.json`\n- Linux and Windows VMs: Any location you store in the environment variable `GOOGLE_APPLICATION_CREDENTIALS` , which must be visible to the agent's process. For configuration information, see [Set GOOGLE_APPLICATION_CREDENTIALS](#set-gac) .\nFor example, on Linux you can run the following script which moves the service account key file to the default location, and then sets the appropriate permissions:```\nCREDENTIALS_FILE_LOCATION=\"/etc/google/auth/application_default_credentials.json\"sudo mkdir -p /etc/google/authsudo mv \"$HOME/temp.json\" \"$CREDENTIALS_FILE_LOCATION\"sudo chown root:root \"$CREDENTIALS_FILE_LOCATION\"sudo chmod 0400 \"$CREDENTIALS_FILE_LOCATION\"\n```- Your VM instance now has the service account key file that the agent needs. Next, install or restart the agent:- For information about how to install the agent, see [Installing the agent](/stackdriver/docs/solutions/agents/monitoring/installation) .\n- For information about how to restart the agent, see [Restarting the agent](/stackdriver/docs/solutions/agents/monitoring/installation#restart) .\n- If you would like to double-check the service account key file, see [Verifying private-key credentials](/stackdriver/docs/solutions/agents/monitoring/troubleshooting#verify-key) .\n### Set GOOGLE_APPLICATION_CREDENTIALS\nThis section shows how to set the environment variable `GOOGLE_APPLICATION_CREDENTIALS` so that it is visible to the agent's process.\n**Note:** The Monitoring agent isn't the only service that uses the environment variable `GOOGLE_APPLICATION_CREDENTIALS` . If you change the value of this variable as described in this section, then that change affects all system services that rely on that variable.\n- Edit the following configuration file, or create the file if it doesn't exist:```\n/etc/default/stackdriver-agent\n```\n- Add the following to the configuration file:```\nGOOGLE_APPLICATION_CREDENTIALS=PATH_TO_CREDENTIAL_FILE\n```\n- Restart the agent by running the following command on your VM instance:```\nsudo service stackdriver-agent restart\n```\n **Note:** Service account key files aren't supported by the Monitoring agent for Compute Engine VMs running Windows. On these VMs, the agent uses the credentials provided by the [metadata server](/compute/docs/metadata/overview) .\n- In PowerShell, run the following commands as administrator to set the `GOOGLE_APPLICATION_CREDENTIALS` system environment variable for the Ops Agent to use:```\n[Environment]::SetEnvironmentVariable(\"GOOGLE_APPLICATION_CREDENTIALS\", \"PATH_TO_CREDENTIAL_FILE\", \"Machine\")\n```\n- Restart the agent by running the following command on your VM instance:```\nRestart-Service -Name StackdriverMonitoring\n```", "guide": "Google Cloud Observability"}