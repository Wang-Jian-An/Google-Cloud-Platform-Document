{"title": "Google Cloud Observability - Microservices", "url": "https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/microservices", "abstract": "# Google Cloud Observability - Microservices\nThis document introduces microservices and describes the types of microservices supported by Cloud Monitoring.\nThe term means different things to different people. For some, the microservice corresponds with the \"boxes\" drawn on the whiteboard when talking about system architecture. Others refer to a more formal [definition](https://en.wikipedia.org/wiki/Microservices) that describes a network-addressable endpoint with functionality determined by its external-facing API that can be developed, deployed, and operated independently from other microservices in the system. Still others base their understanding on the microservice concept provided by their development platform, like the [App Engine services](/appengine/docs/standard/python/an-overview-of-app-engine#services) or the [Anthos Service Mesh service](/anthos/service-mesh) .\nOur goal is not to force a definition of upon you. Instead, we want to help you monitor your systems at scale during your digital transformation by providing service-oriented monitoring tools to support you and your architecture. We want to work with you to adopt best practices for monitoring systems without changing a single line of code.\nTo help you monitor your microservices, Cloud Monitoring does the following:\n- Auto-detects microservices when possible\n- Provides a guided experience for defining Google Kubernetes Engine- and Cloud Run-based microservices\n- Offers a fully custom solution for maximum flexibility", "content": "## Auto-discovered microservices\nSome modern development frameworks offer opinionated concepts of a microservice. In architectures that use such frameworks, Cloud Monitoring automatically detects when services are deployed, updated, or deleted. Monitoring accomplishes this detection through constant analysis of the metadata stream produced by a project.\nCloud Monitoring can automatically detect microservices built using the following development frameworks:\n- [App Engine](/appengine) : App Engine has a strong notion of microservice, called an App Engine service (and formerly a ). Each service is distinguished by its own [app.yaml](/appengine/docs/standard/nodejs/config/appref) configuration file.\n- [Anthos Service Mesh](/anthos/service-mesh) : Cloud Monitoring supports service meshes built atop a single GKE cluster. In this configuration, an Anthos Service Mesh service corresponds directly to a [GKE service](/kubernetes-engine/docs/concepts/service) . All Anthos Service Mesh services, both user-managed and system-managed, are automatically detected.\n### Dashboards for auto-discovered microservices\nA service dashboard is automatically created for all auto-discovered microservices. The dashboard contains the metadata details of the service, the alert timeline, the status of your service-level objectives (SLOs), and logs related to the service. Each of these components is described in more detail in [Using microservice dashboards](/stackdriver/docs/solutions/slo-monitoring/ui/svc-dashboard) .\n**Note:** The alert timeline and SLO list will be empty since no SLOs or SLO alerts have been defined. To get the most out of your service dashboard, create SLOs and set alerts on them as described in [Creating an SLO](/stackdriver/docs/solutions/slo-monitoring/ui/create-slo) .\n## GKE, Cloud Run and custom services\n**Note:** In Cloud Monitoring, a is a construct that you can associate with SLOs and alerting policies. Several of the resources for which you might create Monitoring services are also referred to as , but with different meanings, like [GKEservices](/kubernetes-engine/docs/concepts/service) or [Cloud Runservices](/run/docs/resource-model#services) .\nCloud Monitoring can identify or services for the following types:\n- GKE namespaces\n- GKE services\n- GKE workloads\n- Cloud Run services\nHowever, there may be many such candidates, and you don't necessarily want to create SLOs on all of them. Monitoring creates a list of candidate services, and you identify the services you want to treat as Monitoring services by selecting them from the list. Monitoring then creates the service infrastructure for you.\nWhen no existing service type accommodates an application for which you want to create SLOs, you can define a custom service.\nFor more information about identifying candidate services and creating custom services, see [Defining a microservice](/stackdriver/docs/solutions/slo-monitoring/ui/define-svc) .", "guide": "Google Cloud Observability"}