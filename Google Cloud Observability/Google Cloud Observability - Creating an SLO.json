{"title": "Google Cloud Observability - Creating an SLO", "url": "https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/ui/create-slo", "abstract": "# Google Cloud Observability - Creating an SLO\nTo monitor a service, you need at least one service-level objective (SLO). The SLOs encapsulate your performance goals for the service. Every SLO is based on a performance metric, called a service-level indicator (SLI). For background information on SLIs and SLOs, see [Concepts in service monitoring](/stackdriver/docs/solutions/slo-monitoring) .\nYou can create up to 500 SLOs for a service.\n", "content": "## Getting started\nTo define an SLO, navigate to the **Create a Service Level Objective (SLO)** pane.\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **SLOs** : [Go to SLOs](https://console.cloud.google.com/monitoring/services) \n- Open the **Create a Service Level Objective (SLO)** pane:For a new service:- Click **Define service** , and then [define your service](/stackdriver/docs/solutions/slo-monitoring/ui/define-svc) .\n- After you click **Submit** in the **Define service** pane, click **Create SLO** .\nFor an existing service:- In the **Services** list, click the name of the service in the **Services** list.\n- On the **Service details** page, click **Create SLO** .The SLO-creation pane leads you through the steps to create an SLO. The remainder of this document describes each of the following steps in the SLO-creation process:\n- Set the SLI.\n- Define SLI details.\n- Set the SLO.\n- Review and save the SLO.\nTo advance to the next step, click **Continue** . You can click a previous step to make changes before you save the SLO. To exit the SLO-creation process, click **Cancel** .\n## Setting your SLI\nThe **Set your SLI** pane has the following sub-panes:\n- **Service details** , which reports identifying information about your service. This is the same as the **Service details** pane on the dashboard for the service.\n- **Choose a metric** , where you choose a metric for the performance you want to monitor.\n- **Request-based or windows-based?** , where you choose how the metric is to be evaluated.\nThe following screenshot shows the SLI pane:\nFor more information about metrics used in SLIs and the evaluation methods, see the conceptual topic [Service-level indicators](/stackdriver/docs/solutions/slo-monitoring#defn-sli) .\n### Choosing a metric\nThe SLI metric specifies the type of performance you want to measure. In the SLI, you build a ratio from the metric to measure good performance over time. You have the following options for SLIs:\n- Availability, which measures how available your service is to users.\n- Latency, which measures how responsive your service is to users.\n- Other, which lets you indicate that you want to use a specific metric. You specify the metric and describe how to build the SLI on the **Set\nSLI details** pane.\nThe valid choices depend on the type of service you are configuring.\n- For services on Anthos Service Mesh, Istio on Google Kubernetes Engine, and App Engine, you can choose any of the options. The availability and latency metrics are already known for these services, or you choose **Other** to use a custom SLI.\n- For GKE-based services, and for custom services, the only choice is **Other** . Prometheus metrics are not included in default availability and latency SLOs, and other meaningful availability or latency metrics aren't known in advance for these services.If you configured collection of Prometheus metrics using [Google Cloud Managed Service for Prometheus](/stackdriver/docs/managed-prometheus) , you can set a collected Prometheus metric as a custom SLI.\n### Choosing the evaluation method\nAfter you select the metric for your SLI, you specify how the metric should be evaluated.\n- Request-based evaluation measures the number of requests that meet the evaluation criterion against the total number of requests in a given period.\n- Windows-based evaluation measures the number of evaluation periods that meet a goodness criterion against the total number of evaluation periods.\nFor both evaluation methods, you specify the evaluation criteria on the **Set SLI details** page.\nFor more information on these evaluation types, see [Compliance inrequest- and windows-based SLOs](/stackdriver/docs/solutions/slo-monitoring#slo-types) .\n## Setting SLI details\nThe contents of the **Define SLI details** pane depends on the metric and evaluation method you chose in the previous step.\nIf you chose the availability metric and request-based evaluation, there are no other details needed.\n### Windows-based evaluation\nIf you selected window-based evaluation, you set the additional criteria for the window on this pane: a goodness criterion and a duration.\nThe goodness criterion indicates the percentage of windows that must evaluate to \u201cgood\u201d over the compliance period. The duration specifies the length of the window.\n### Latency metric\nIf you chose the latency metric, you specify the threshold value that determines acceptable performance on this pane:\nAnything above the latency threshold is considered \u201cbad\u201d performance in evaluating the SLI.\n### Custom SLI\nIf you selected **Other** as the SLI metric, you specify the metric you want to use on this pane. You can select a metric by typing in the **PerformanceMetric** field or select one from the list.\nThe metrics in the list are divided into two types:\n- Distribution-cut indicators\n- Time-series ratio indicators\nIf you are collecting Prometheus metrics with Google Cloud Managed Service for Prometheus, the metric name starts with `prometheus.googleapis.com/` .\nThe following screenshot shows a partial list:\nIf you select a distribution-cut indicator, you configure the SLI by providing a range\u2014above, below, or between\u2014and a filter to specify the monitored resource and any labels you want to include. The configuration pane looks like the following:\nIf you select a time-series ratio indicator, you configure the ratio by building numerator and denominator filters to classify the metric data, typically by selecting the values of labels in the metric or resource type. The configuration pane looks like the following:\nFor more information about these SLI types, see the Monitoring API reference pages for [DistributionCut](/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives#DistributionCut) and [TimeSeriesRatio](/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives#TimeSeriesRatio) .\nGKE control plane metrics are useful indicators of system health that you can use for custom SLIs. You must [enable collection](/stackdriver/docs/solutions/gke/managing-metrics#control-plane-metrics) of these metrics before you can use them. These metrics are collected by Google Cloud Managed Service for Prometheus.\n- Use [API server metrics][gke-api-metrics] to track API server load, the fraction of API server requests that return errors, and the response latency for requests received by the API server.\n- Use [scheduler metrics](/stackdriver/docs/solutions/gke/control-plane-metrics#scheduler-metrics) to help you to proactively respond to scheduling issues when there aren't enough resources for pending Pods.\nFor more information about control plane metrics and using them to monitor system health, see [Use control plane metrics](/stackdriver/docs/solutions/gke/control-plane-metrics) .\n### Preview chart\nAfter you have configured the SLI, the **Define SLI details** pane includes a preview chart to show you how the historical performance of this service is measured by the SLI. For example:\nIf you have just created or deployed a service, there may not be any data yet. You can still create the SLI, but you won't get the historical perspective.\n## Setting your SLO\nThe **Set your SLO** pane has the following regions:\n- **Compliance period** , where you set the time period over which you want to evaluate the SLI.\n- **Performance goal** , where you specify the threshold for performance over the compliance period.\n- **Preview** , which displays a chart that shows the performance-goal threshold and graph that shows the results of evaluating the SLI over the compliance period.### Compliance period\nThere are two types of compliance period, which you select from the menu:\n- Calendar period\n- Rolling window\nA calendar period measures compliance over a fixed period of time, the period length. When the period ends, the error budget is reset and a new compliance period starts.\nA rolling window is a sliding period. It also has a length, but the compliance is computed over the last days. When a new day starts, the compliance and remaining error budget are recomputed over the previous days.\nFor more on calendar and rolling-window compliance periods, see [Compliance periods](/stackdriver/docs/solutions/slo-monitoring#compliance-period) .\n### Preview chart\nAfter you have configured the SLO, the **Set your SLO** pane includes a preview chart to show you how the historical performance of this service is measured by the SLO. For example:\nIf you have just created or deployed a service, there may not be any data yet. You can still create the SLO, but you won't get the historical perspective.\n## Saving your SLO\nThe **Review and save** pane has a single field, a display name for the SLO. The field has a default value based on the selections you made while defining the SLO, but you can change it to make the display name more descriptive.\nThe pane also provides a preview of your SLO in JSON format. The JSON block summarizes your SLO and can be copied for use with the [serviceLevelObjectives.create](/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives/create) method. If you change any of the SLO values, the JSON preview is updated automatically.\nThe following screenshot shows the field with a default name:\nWhen you are satisfied with the display name, click **Create SLO** .\n## What's next\nAfter you create an SLO, you can do the following:\n- Monitor the performance of your service relative to the SLO by creating an alerting policy. For more information, see [Alerting on your burn rate](/stackdriver/docs/solutions/slo-monitoring/alerting-on-budget-burn-rate) and [Creating an alerting policy](/stackdriver/docs/solutions/slo-monitoring/ui/create-alert) .\n- View the status of all the SLOs for a set of services by creating a custom dashboard in Cloud Monitoring that displays SLO charts. For more information, see [Create a custom dashboard](/monitoring/charts/dashboards#create-custom-dashboard) and [Display SLOs on a dashboard](/monitoring/dashboards/slos) .", "guide": "Google Cloud Observability"}