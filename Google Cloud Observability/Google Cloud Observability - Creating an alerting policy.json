{"title": "Google Cloud Observability - Creating an alerting policy", "url": "https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/create-policy-api", "abstract": "# Google Cloud Observability - Creating an alerting policy\nAlerting policies for the burn rate of your error budget are based on the time-series selector `select_slo_burn_rate` , described in [Retrieving SLOdata](/stackdriver/docs/solutions/slo-monitoring/api/timeseries-selectors) . There are other time-series selectors, and you can use some of them as the basis for alerting policies. For a discussion of SLO-based alerting policies, see [Alerting on your burn rate](/stackdriver/docs/solutions/slo-monitoring/alerting-on-budget-burn-rate) .\nYou create alerting policies by using the [alertPolicies.create](/monitoring/api/ref_v3/rest/v3/projects.alertPolicies/create) method. The general use of this method is documented in [Managing alerting policies](/monitoring/alerts/using-alerting-api) .\nAlerting policies for SLOs are similar to other metric-threshold alerting policies, but they differ in one specific way: the `filter` in the [MetricThreshold](/monitoring/api/ref_v3/rest/v3/projects.alertPolicies#MetricThreshold) specification of the condition uses a time-series selector instead of a pair of metric and monitored-resource types.\n", "content": "## Conditions for SLO-based alerting policies\nAn alerting policy must have at least one condition. For a SLO-based condition, use a [MetricThreshold](/monitoring/api/ref_v3/rest/v3/projects.alertPolicies#MetricThreshold) -type condition.\nA metric-threshold condition can contain two pairs of time-series configurations: `filter` and `aggregations` . Because SLO data is retrieved differently than other time-series data, the only field used in a condition for an SLO is the `filter` field.\nA condition for an SLO does set the `comparison` , `thresholdValue` , `duration` , and `trigger` fields.\nThis example creates a condition that is violated when the burn rate exceeds 2 times the normal rate. The structure looks like this:\n```\n\u00a0\u00a0\"conditions\": [ {\n \u00a0 \u00a0\"displayName\":\"SLO burn rate alert for ${SLO_ID} exceeds 2\",\n\u00a0\u00a0\u00a0\u00a0 \"conditionThreshold\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\"filter\": DATA_RETRIEVAL_FILTER_FOR_SLO,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"comparison\":\"COMPARISON_GT\",\n\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\"thresholdValue\": 2,\n\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\"duration\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\"seconds\":\"0\",\n\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0},\n  },\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0],\n```\nTo set the `filter` field, you need the resource name of a specific SLO. This value is of the form `projects/${PROJECT}/services/${SERVICE_ID}/serviceLevelObjectives/${SLO_ID}` . For information on finding the SLO ID, see [Listing SLOs](/stackdriver/docs/solutions/slo-monitoring/api/using-api#slos-list) .\nTo create an alert on burn rate, use the time-series selector `select_slo_burn_rate` . This selector takes two values, the target SLO and the lookback period. For more information, see [select_slo_burn_rate](/stackdriver/docs/solutions/slo-monitoring/api/timeseries-selectors#tss-burn-rate) .\nFor example, the following filter gets the burn rate of the target SLO with a 1-hour lookback period:\n`\"filter\":\"select_slo_burn_rate(\\\"projects/${PROJECT}/services/${SERVICE_ID}/serviceLevelObjectives/${SLO_ID}\\\", \\\"60m\\\")\"`\n## The rest of the alerting policy\nTo complete the alerting policy, specify values for the remaining fields:\n- `displayName`: A description of the alerting policy.\n- `combiner`: Describes the logic for combining conditions. This policy has only one condition, so either`AND`or`OR`works.\n- `notificationChannels`: An array of existing notification channels to use when the alerting policy is triggered. For information on finding and creating notification channels, see [Notification channels](/monitoring/alerts/using-channels-api#nc) .\n- `documentation`: Information that is sent when the condition is violated to help recipients diagnose the problem. For details, see [Documentation](/monitoring/api/ref_v3/rest/v3/projects.alertPolicies#Documentation) .## Creating the alerting policy\nThe following example uses the API to create a burn-rate alerting policy. For information about listing, modifying, and deleting alerting policies, see [Managing alerting policies by API](/monitoring/alerts/using-alerting-api) .\nTo create the alerting policy by using\n`curl`\n, send a\n`POST`\nmessage to the\n`https://monitoring.googleapis.com/v3/projects/${PROJECT_ID}/alertPolicies`\nendpoint, and provide the alerting policy in the request body. The JSON in the request body describes an alerting policy that uses a threshold condition based on the\n`select_slo_burn_rate`\ntime-series selector with a one-hour lookback period.\n- Create a variable to hold the request body:```\nCREATE_ALERT_POST_BODY=$(cat <<EOF{\u00a0 \"displayName\":\"SLO burn-rate alert for ${SLO_ID} with a threshold of 2\",\u00a0 \"combiner\":\"AND\",\u00a0 \"conditions\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 \"displayName\":\"SLO burn rate alert for ${SLO_ID} exceeds 2\",\u00a0 \u00a0 \u00a0 \"conditionThreshold\": {\u00a0 \u00a0 \u00a0 \u00a0 \"filter\":\"select_slo_burn_rate(\\\"projects/${PROJECT}/services/${SERVICE_ID}/serviceLevelObjectives/${SLO_ID}\\\", \\\"60m\\\")\",\u00a0 \u00a0 \u00a0 \u00a0 \"comparison\":\"COMPARISON_GT\",\u00a0 \u00a0 \u00a0 \u00a0 \"thresholdValue\": 2,\u00a0 \u00a0 \u00a0 \u00a0 \"duration\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"seconds\":\"0\",\u00a0 \u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 \u00a0 },\u00a0 \u00a0 }\u00a0 ],\u00a0 \"notificationChannels\": [\"${NOTIFICATION_CHANNEL}\", ],\u00a0 \"documentation\": {\u00a0 \u00a0 \u00a0\"content\": \"SLO burn for the past 60m exceeded twice the acceptable budget burn rate.\",\u00a0 \u00a0 \u00a0\"mime_type\": \"text/markdown\",\u00a0 },}EOF)\n```\n- Post the request to the endpoint:```\ncurl \u00a0--http1.1 --header \"Authorization: Bearer ${ACCESS_TOKEN}\" --header \"Content-Type: application/json\" -X POST -d \"${CREATE_ALERT_POST_BODY}\" https://monitoring.googleapis.com/v3/projects/${PROJECT_ID}/alertPolicies\n```", "guide": "Google Cloud Observability"}