{"title": "Google Cloud Observability - Active Directory Domain Services (AD DS)", "url": "https://cloud.google.com/stackdriver/docs/solutions/agents/ops-agent/third-party/active_directory_ds", "abstract": "# Google Cloud Observability - Active Directory Domain Services (AD DS)\nActive Directory Domain Services (AD DS) stores information about objects on the network so that administrators and users can easily access this information.\nFor more information about AD DS, see the [Active Directory Domain Services (ADDS) documentation](https://docs.microsoft.com/windows-server/identity/ad-ds/get-started/virtual-dc/active-directory-domain-services-overview) .\n", "content": "## Prerequisites\nTo collect AD DS telemetry, you must [install the Ops Agent](/stackdriver/docs/solutions/agents/ops-agent/install-index) :\n- For metrics, install version 2.15.0 or higher.\n- For logs, install version 2.15.0 or higher.\nThis integration supports AD DS versions windows-server-2016 and windows-server-2019.\n## Configure your AD DS instance\nBy default, Active Directory Windows event logs and performance counters are enabled.\n## Configure the Ops Agent for AD DS\nFollowing the guide to [configure the OpsAgent](/stackdriver/docs/solutions/agents/ops-agent/configuration#file-location) , add the required elements to collect telemetry from AD DS instances, and [restart the agent](/stackdriver/docs/solutions/agents/ops-agent/installation#restart) .\n### Example configuration\nThe following commands create the configuration to collect and ingest telemetry for AD DS and restarts the Ops Agent:\n```\n$ErrorActionPreference = 'Stop'# Create a back up of the existing file so existing configurations are not lost.Copy-Item -Path 'C:\\Program Files\\Google\\Cloud Operations\\Ops Agent\\config\\config.yaml' -Destination 'C:\\Program Files\\Google\\Cloud Operations\\Ops Agent\\config\\config.yaml.bak'# Configure the Ops Agent.Add-Content 'C:\\Program Files\\Google\\Cloud Operations\\Ops Agent\\config\\config.yaml' \"logging:\u00a0 receivers:\u00a0 \u00a0 active_directory_ds:\u00a0 \u00a0 \u00a0 type: active_directory_ds\u00a0 service:\u00a0 \u00a0 pipelines:\u00a0 \u00a0 \u00a0 active_directory_ds:\u00a0 \u00a0 \u00a0 \u00a0 receivers:\u00a0 \u00a0 \u00a0 \u00a0 - active_directory_dsmetrics:\u00a0 receivers:\u00a0 \u00a0 active_directory_ds:\u00a0 \u00a0 \u00a0 type: active_directory_ds\u00a0 service:\u00a0 \u00a0 pipelines:\u00a0 \u00a0 \u00a0 active_directory_ds:\u00a0 \u00a0 \u00a0 \u00a0 receivers:\u00a0 \u00a0 \u00a0 \u00a0 - active_directory_ds\"# Stop-Service may fail if the service isn't in a Running state yet.(Get-Service google-cloud-ops-agent*).WaitForStatus('Running', '00:03:00')Stop-Service google-cloud-ops-agent -ForceStart-Service google-cloud-ops-agent*\n```\n### Configure logs collection\nTo ingest logs from AD DS, you must create receivers for the logs that AD DS produces and then create a pipeline for the new receivers.\nTo configure a receiver for your `active_directory_ds` logs, specify the following fields:\n| Field | Default | Description       |\n|:--------|----------:|:---------------------------------------|\n| type |  nan | The value must be active_directory_ds. |\nThe `logName` is derived from the receiver IDs specified in the configuration. Detailed fields inside the [LogEntry](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) are as follows.\n`active_directory_ds` logs contain the following fields in the `LogEntry` :\n| Field      | Type  | Description                           |\n|:--------------------------|:---------|:--------------------------------------------------------------------------------------------------------------------|\n| jsonPayload.Channel  | string | The event log channel where the log was logged.                  |\n| jsonPayload.ComputerName | string | The name of the computer from which this log originates.               |\n| jsonPayload.Data   | string | Extra event-specific data included with the log.                 |\n| jsonPayload.EventCategory | number | The category of the event.                       |\n| jsonPayload.EventID  | number | An ID identifying the type of the event.                   |\n| jsonPayload.EventType  | string | The type of event.                         |\n| jsonPayload.Message  | string | The log message.                         |\n| jsonPayload.Qualifiers | number | A qualifier number that is used for event identification.               |\n| jsonPayload.RecordNumber | number | The sequence number of the event log.                    |\n| jsonPayload.Sid   | string | The security identifier identifying a security principal or security group of the process that logged this message. |\n| jsonPayload.SourceName | string | The source component that logged this message.                  |\n| jsonPayload.StringInserts | []string | Dynamic string data that was used to construct the log message.              |\n| jsonPayload.TimeGenerated | string | A timestamp representing when the record was generated.                |\n| jsonPayload.TimeWritten | string | A timestamp representing when the record was written to the event log.            |\n### Configure metrics collection\nTo ingest metrics from AD DS, you must create a receiver for the metrics that AD DS produces and then create a pipeline for the new receiver.\nThis receiver does not support the use of multiple instances in the configuration, for example, to monitor multiple endpoints. All such instances write to the same time series, and Cloud Monitoring has no way to distinguish among them.\nTo configure a receiver for your `active_directory_ds` metrics, specify the following fields:\n| Field    | Default | Description        |\n|:--------------------|:----------|:------------------------------------------|\n| collection_interval | 60s  | A time.Duration value, such as 30s or 5m. |\n| type    | nan  | The value must be active_directory_ds. |\nThe following table provides the list of metrics that the Ops Agent collects from the AD DS instance. THIS IS A GENERATED FILE. DO NOT EDIT.\n| ('Metric\\xa0type', 'Kind,\\xa0Type Monitored\\xa0resources')        | ('Metric\\xa0type', 'Labels')                |\n|:------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------|\n| workload.googleapis.com/active_directory.ds.bind.rate          | workload.googleapis.com/active_directory.ds.bind.rate          |\n| GAUGE,\u00a0DOUBLE gce_instance                | type                      |\n| workload.googleapis.com/active_directory.ds.ldap.bind.last_successful.time    | workload.googleapis.com/active_directory.ds.ldap.bind.last_successful.time    |\n| GAUGE,\u00a0INT64 gce_instance                 | nan                      |\n| workload.googleapis.com/active_directory.ds.ldap.bind.rate        | workload.googleapis.com/active_directory.ds.ldap.bind.rate        |\n| GAUGE,\u00a0DOUBLE gce_instance                | nan                      |\n| workload.googleapis.com/active_directory.ds.ldap.client.session.count      | workload.googleapis.com/active_directory.ds.ldap.client.session.count      |\n| GAUGE,\u00a0INT64 gce_instance                 | nan                      |\n| workload.googleapis.com/active_directory.ds.ldap.search.rate        | workload.googleapis.com/active_directory.ds.ldap.search.rate        |\n| GAUGE,\u00a0DOUBLE gce_instance                | nan                      |\n| workload.googleapis.com/active_directory.ds.name_cache.hit_rate       | workload.googleapis.com/active_directory.ds.name_cache.hit_rate       |\n| GAUGE,\u00a0DOUBLE gce_instance                | nan                      |\n| workload.googleapis.com/active_directory.ds.notification.queued       | workload.googleapis.com/active_directory.ds.notification.queued       |\n| GAUGE,\u00a0INT64 gce_instance                 | nan                      |\n| workload.googleapis.com/active_directory.ds.operation.rate        | workload.googleapis.com/active_directory.ds.operation.rate        |\n| GAUGE,\u00a0DOUBLE gce_instance                | type                      |\n| workload.googleapis.com/active_directory.ds.replication.network.io      | workload.googleapis.com/active_directory.ds.replication.network.io      |\n| CUMULATIVE,\u00a0INT64 gce_instance               | direction type                   |\n| workload.googleapis.com/active_directory.ds.replication.object.rate      | workload.googleapis.com/active_directory.ds.replication.object.rate      |\n| GAUGE,\u00a0DOUBLE gce_instance                | direction                     |\n| workload.googleapis.com/active_directory.ds.replication.operation.pending     | workload.googleapis.com/active_directory.ds.replication.operation.pending     |\n| GAUGE,\u00a0INT64 gce_instance                 | nan                      |\n| workload.googleapis.com/active_directory.ds.replication.property.rate      | workload.googleapis.com/active_directory.ds.replication.property.rate      |\n| GAUGE,\u00a0DOUBLE gce_instance                | direction                     |\n| workload.googleapis.com/active_directory.ds.replication.sync.object.pending    | workload.googleapis.com/active_directory.ds.replication.sync.object.pending    |\n| GAUGE,\u00a0INT64 gce_instance                 | nan                      |\n| workload.googleapis.com/active_directory.ds.replication.sync.request.count    | workload.googleapis.com/active_directory.ds.replication.sync.request.count    |\n| CUMULATIVE,\u00a0INT64 gce_instance               | result                     |\n| workload.googleapis.com/active_directory.ds.replication.value.rate      | workload.googleapis.com/active_directory.ds.replication.value.rate      |\n| GAUGE,\u00a0DOUBLE gce_instance                | direction type                   |\n| workload.googleapis.com/active_directory.ds.security_descriptor_propagations_event.queued | workload.googleapis.com/active_directory.ds.security_descriptor_propagations_event.queued |\n| GAUGE,\u00a0INT64 gce_instance                 | nan                      |\n| workload.googleapis.com/active_directory.ds.suboperation.rate        | workload.googleapis.com/active_directory.ds.suboperation.rate        |\n| GAUGE,\u00a0DOUBLE gce_instance                | type                      |\n| workload.googleapis.com/active_directory.ds.thread.count         | workload.googleapis.com/active_directory.ds.thread.count         |\n| GAUGE,\u00a0INT64 gce_instance                 | nan                      |\n## Verify the configuration\nThis section describes how to verify that you correctly configured the AD DS receiver. It might take one or two minutes for the Ops Agent to begin collecting telemetry.\nTo verify that AD DS logs are being sent to Cloud Logging, do the following:\n- In the navigation panel of the Google Cloud console, select **Logging** , and then select **Logs Explorer** : [Go to Logs Explorer](https://console.cloud.google.com/logs/query) \n- Enter the following query in the editor, and then click **Run query** :```\nresource.type=\"gce_instance\"\nlog_id(\"active_directory_ds\")\n```To verify that AD DS metrics are being sent to Cloud Monitoring, do the following:\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Metrics explorer** : [Go to Metrics explorer](https://console.cloud.google.com/monitoring/metrics-explorer) \n- In the toolbar of the query-builder pane, select the button whose name is either **MQL** or **PromQL** .\n- Verify that **MQL** is selected in the **Language** toggle. The language toggle is in the same toolbar that lets you format your query.\n- Enter the following query in the editor, and then click **Run query** :```\nfetch gce_instance\n| metric 'workload.googleapis.com/active_directory.ds.bind.rate'\n| every 1m\n```## View dashboard\nTo view your AD DS metrics, you must have a chart or dashboard configured. The AD DS integration includes one or more dashboards for you. Any dashboards are automatically installed after you configure the integration and the Ops Agent has begun collecting metric data.\nYou can also view static previews of dashboards without installing the integration.\nTo view an installed dashboard, do the following:\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Dashboards** : [Go to Dashboards](https://console.cloud.google.com/monitoring/dashboards) \n- Select the **Dashboard List** tab, and then choose the **Integrations** category.\n- Click the name of the dashboard you want to view.If you have configured an integration but the dashboard has not been installed, then check that the Ops Agent is running. When there is no metric data for a chart in the dashboard, installation of the dashboard fails. After the Ops Agent begins collecting metrics, the dashboard is installed for you.\nTo view a static preview of the dashboard, do the following:\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Integrations** : [Go to Integrations](https://console.cloud.google.com/monitoring/integrations) \n- Click the **Compute Engine** deployment-platform filter.\n- Locate the entry for     AD DS   and click **View Details** .\n- Select the **Dashboards** tab to see a static preview. If the   dashboard is installed, then you can navigate to it by clicking **View dashboard** .For more information about dashboards in Cloud Monitoring, see [Dashboards and charts](/monitoring/dashboards) .\nFor more information about using the **Integrations** page, see [Manage integrations](/monitoring/agent/integrations) .\n## Install alerting policies\nAlerting policies instruct Cloud Monitoring to notify you when specified conditions occur. The AD DS integration includes one or more alerting policies for you to use. You can view and install these alerting policies from the **Integrations** page in Monitoring.\nTo view the descriptions of available alerting policies and install them, do the following:\n- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Integrations** : [Go to Integrations](https://console.cloud.google.com/monitoring/integrations) \n- Locate the entry for     AD DS   and click **View Details** .\n- Select the **Alerts** tab. This tab provides descriptions of   available alerting policies and provides an interface for installing   them.\n- Install alerting policies. Alerting policies need   to know where to send notifications that the alert has been   triggered, so they require information from you for installation.   To install alerting policies, do the following:- From the list of available alerting policies,    select those that you want to install.\n- In the **Configure notifications** section, select one or    more notification channels. You have the option to disable the    use of notification channels, but if you do, then your alerting    policies fire silently. You can check their status in    Monitoring, but you receive no notifications.For more information about notification channels,    see [Manage    notification channels](/monitoring/support/notification-options) .\n- Click **Create Policies** .\nFor more information about alerting policies in Cloud Monitoring, see [Introduction to alerting](/monitoring/alerts) .\nFor more information about using the **Integrations** page, see [Manage integrations](/monitoring/agent/integrations) .\n## What's next\nFor a walkthrough on how to use Ansible to install the Ops Agent, configure a third-party application, and install a sample dashboard, see the [ Install the Ops Agent to troubleshoot third-party applications](https://www.youtube.com/watch?v=GQgNygd-XJU&t=7s) video.", "guide": "Google Cloud Observability"}