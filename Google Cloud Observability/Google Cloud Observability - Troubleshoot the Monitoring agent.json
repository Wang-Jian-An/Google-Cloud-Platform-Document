{"title": "Google Cloud Observability - Troubleshoot the Monitoring agent", "url": "https://cloud.google.com/stackdriver/docs/solutions/agents/monitoring/troubleshooting", "abstract": "# Google Cloud Observability - Troubleshoot the Monitoring agent\nThis page helps you diagnose problems in the installation or running of the Monitoring agent.\n**Note: ** If you see the following message on a Linux virtual machine (VM), then you can safely ignore it:`Need to set STACKDRIVER_API_KEY in /etc/sysconfig/stackdriver Not starting. Configuration error.`This message is emitted by a legacy service that is gradually being replaced. This message is benign and will eventually disappear.\n", "content": "## Checklist\nIf you are having trouble installing or using the Monitoring agent, here are some things to check:\n- If Linux installation commands result in errors, then make sure that you prefix the installation commands with `sudo` .\n- Verify that the agent service is running on your VM instance:- For a Windows VM, use the following PowerShell command:```\nGet-Service -Name StackdriverMonitoring\n```Search for a service called **Stackdriver Monitoring** . If the agent isn't running, you might need to restart it.\n- For a Linux VM, use the following command:```\nsudo service stackdriver-agent status\n```If the agent isn't running, you might need to restart it using the following command:```\nsudo service stackdriver-agent restart\n```If the restart fails, and the log output shows \"Disabled via metadata\", you are likely running an image from [Google Cloud Marketplace](/marketplace) , where the Monitoring agent is disabled by default. This is controlled by the `google-monitoring-enable` instance metadata key (with the value `0` ). To re-enable the agent, either remove that key or set the value to `1` (see [Setting instance metadata](/compute/docs/storing-retrieving-metadata#updatinginstancemetadata) ).If the agent isn't disabled via metadata, reinstall the agent. For information about this process, see [Reinstalling the Monitoring agent](#try-installing) .\n- See if the agent has written error messages to the logs.- On Windows, the Monitoring agent writes messages to the Windows Event log.\n- On Linux, the Monitoring agent is a `collectd` package and logs messages to `/var/log/syslog` or `/var/log/messages` . The log messages are prefixed by `collectd` or `stackdriver-agent` :- If you see HTTP 429 errors, you might have exceeded your [Monitoring API quotas](/monitoring/quotas) . You can see your available quota by selecting **APIs & services > Dashboard** in the Google Cloud console. Choose the Monitoring API.\n- If you see proxy problems, check that you correctly configured you HTTP proxy. The instructions are part of [Installing on Linux and Windows](/stackdriver/docs/solutions/agents/monitoring/installation#joint-install) .\n- If you see API access or authorization problems, or error messages such as \"Unable to determine collectd endpoint\", see the following section, [Verifying project and credentials](#verify-project) .\n- If you see \"Unsupported collectd plugin/type combination\" or \"Unsupported collectd id\" errors in the logs, you might be sending unsupported agent metrics. This can happen in the following scenarios:- You modified one of the agent third-party application configurations. To revert the changes, you can reinstall the configuration for the specific plug-in by following the instructions in the relevant [documentationpage](/monitoring/agent/plugins) . If you want to use the agent to send that metric to Monitoring, consider converting them to [user-defined metrics](/monitoring/agent/custom-metrics-agent) .\n- One of the third-party application plugins is sending new metrics that are unknown to Monitoring. See the [support page](/stackdriver/docs/getting-support) for details on how to submit a request to get these metrics reviewed and [categorized](/monitoring/agent/custom-metrics-agent#how_handles_collectd_metrics) .\n- If the agent seems to be running normally, but you aren't getting data or your alerting policies aren't acting as you think they should, then you should check that the agent is sending data to the correct project. See the following section, [Verifying project and credentials](#verify-project) .## Verifying project and credentials\nIf the Monitoring agent is reporting access or authorization errors, or if the agent seems to be running normally but there is no data or your alerting policies aren't working as you expect, then check that your VM instance's credentials are correct, including that they specify the correct project:\n- If you are using a Compute Engine VM instance with standard (not private-key) credentials, then it is unlikely that data is going to the wrong project, but your credentials might still be deficient. For information about credentials, see [Authorize the Monitoring agent](/stackdriver/docs/solutions/agents/monitoring/authorization#private_key_authorization) . To verify your credentials, see [Verifying Compute Engine credentials](#verify-creds) .\n- If you are using an Amazon EC2 VM instance, or if you are using private-key credentials on your Compute Engine instance, then the credentials could be invalid or they could be from the wrong project. For AWS accounts, the project used by the agent must be the [AWS Connector project](/monitoring/settings/aws-accounts#connector-project) . For information about credentials, see [Authorize the Monitoring agent](/stackdriver/docs/solutions/agents/monitoring/authorization#private_key_authorization) . To verify your credentials, see [Verifying private-key credentials](#verify-key) .\n[Reinstalling the Monitoring agent](#try-installing)\n## Verifying Compute Engine credentials\nUse the Compute Engine **VM instances** page of the Google Cloud console to verify that your Compute Engine VM instance has adequate credential for the Monitoring agent. The credentials are typically added in the default service account of all new Compute Engine VM instances, but it is possible to overwrite those defaults when creating an instance.\nIn the navigation panel of the Google Cloud console, select **Compute Engine** , and then select **VM instances** :\n[Go to VM instances](https://console.cloud.google.com/compute)- If necessary, change the current Google Cloud project to be the one associated with your Compute Engine VM instance. For example, if you are prompted to **Enable billing** , then it means the current project doesn't have any Compute Engine VM instances in it.\n- In the **VM Instances** page, click the name of your VM instance. The detail page for your VM instance appears.\n- In the **VM instance details** page, look under the **Cloud API access\nscopes** heading:- If you see \"Allow full access to all Cloud APIs,\" then you have adequate credentials.\n- If you see, next to **Stackdriver Monitoring API** , an older name for the Cloud Monitoring API, that you have **Write\nOnly** or **Full** permission, then you have adequate credentials.\n- Otherwise, your instance's default service account doesn't have the credentials needed by the agent. To use the agent on your instance, you must add private-key service account credentials. For instructions, see [Adding credentials](/stackdriver/docs/solutions/agents/monitoring/authorization#private_key_authorization) .If you have the correct default credentials, skip ahead to [Installing on Linux and Windows](/stackdriver/docs/solutions/agents/monitoring/installation#joint-install) .\n## Verifying private-key credentials\nTo verify that valid private-key credentials are installed on your VM instance, first verify that the credentials file exists in its expected location, and then verify that the information in the credentials file is valid. Previously-valid credentials can be revoked using the **IAM & Admin > Service accounts** section of the Google Cloud console. If valid credentials aren't present, see [Adding credentials](/stackdriver/docs/solutions/agents/monitoring/authorization#private_key_authorization) to replace the existing credentials or to add new ones.\n**Caution:** Other services besides Cloud Monitoring might use private-key credentials on your instance. Replacing existing credentials might prevent other services from working.\n### Are the credentials present?\nTo see if private-key service account credentials are on your instance, run the following Linux commands on your instance:\n```\nsudo cat $GOOGLE_APPLICATION_CREDENTIALSsudo cat /etc/google/auth/application_default_credentials.json\n```\nIf either command displays a file like the one shown below, then your instance might have valid private-key credentials. If both commands display a file, then the file denoted by `GOOGLE_APPLICATION_CREDENTIALS` is used.\n```\n{\u00a0 \"type\": \"service_account\",\u00a0 \"project_id\": \"{your-project-id}\",\u00a0 \"private_key_id\": \"{your-private-key-id}\",\u00a0 \"private_key\": \"{your-private-key}\",\u00a0 \"client_email\": \"{your-project-number}-{your-key}@developer.gserviceaccount.com\",\u00a0 \"client_id\": \"{your-client-id}\",\u00a0 \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\u00a0 \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\u00a0 \"auth_provider_x509_cert_url\": \"{x509-cert-url}\",\u00a0 \"client_x509_cert_url\": \"{client-x509-cert-url}\"}\n```\nIf there are no credential files present, then see [Adding credentials](/stackdriver/docs/solutions/agents/monitoring/authorization#private_key_authorization) .\n### Are the credentials valid?\nIn the credentials file, the `project_id` field is your Google Cloud project, `client_email` identifies the service account in the project, and `private_key_id` identifies the private key in the service account. Match this information with what is shown in the **IAM & Admin > Service accounts** section of the Google Cloud console.\nThe credentials file isn't valid if any of the following are true:\n- You are checking a Compute Engine VM instance, but the Google Cloud project in the credentials file isn't the project that contains your instance.\n- You are checking an Amazon EC2 instance, but the Google Cloud project in the credentials file isn't the [AWS Connector project](/monitoring/settings/aws-accounts#connector-project) for your AWS account.\n- The listed service account doesn't exist. It might have been deleted.\n- The listed service account doesn't have the right roles enabled. It should have at least`roles/monitoring.metricWriter`(Monitoring Metric Writer) for metric collection and`roles/logging.logWriter`(Logs Writer) for writing logs.\n- The private key doesn't exist. It might have been revoked.\nIf the service account is all right but the private key has been revoked, then you can create a new private key and copy it to your instance. Otherwise, you must create a new service account as described in the following section, [Adding credentials](/stackdriver/docs/solutions/agents/monitoring/authorization#private_key_authorization) .\n### Generating new credentials\nIf the credentials aren't valid, take the following steps:\n- For each connected project containing instances that need to be authorized  with a private key \u2014  AWS Connector projects  and each project containing  Compute Engine instances that were  created without including the access scope`https://www.googleapis.com/auth/monitoring.write`\u2014  create a service account and generate  a private key, if they don't already exist. Follow the steps below:- In the navigation panel of the Google Cloud console, select **Monitoring** , and then select **Monitoring Settings** : [Go to Monitoring Settings](https://console.cloud.google.com/monitoring/settings) \n- Select the **Summary** tab.- For AWS, use the link to navigate directly to the    Google Cloud console for the AWS Connector project.\n- For Google Cloud, identify         the project containing the    Compute Engine resources in question and navigate to    the [Google Cloud console](https://console.cloud.google.com/) .\n- Go to the **IAM Service Accounts** page of the   Google Cloud console, select your Google Cloud project, create a new   service account, and then generate a new private key for that   service account.To perform these steps, do one of the following:- Go to the **IAM Service Accounts** page,     select your Google Cloud project, and then follow the steps in [     Create a service account](/stackdriver/docs/solutions/agents/monitoring/authorization#create-service-account) : [      Go to IAM Service Accounts](https://console.cloud.google.com/iam-admin/serviceaccounts/project?project=_) \n- Click the following button and then select your     Google Cloud project: [      Create service account and download key](https://console.cloud.google.com/iam-admin/serviceaccounts/project?project=_&createStackdriverServiceAccount) The previous button automates the process of creating      and downloading a key to your local system for the       agent-specific service account. If necessary, the       process also creates the required service account       and ensures that the service account has the correct       permissions. Agent-specific service accounts have a       name similar to `stackdriver-1234@` `` `.iam.gserviceaccount.com` .       You are notified of the completion of these       actions with a dialog similar to the following:\n **Note:** Service accounts can have a      maximum of 10 keys. For more information, see [Limits](/iam/quotas#limits) .\n- Replace the private key on the instances that correspond to the   service account in question.- On Linux, replace the private key located in`/etc/google/auth/application_default_credentials.json`.\n- On Windows, replace the private key located in`C:\\ProgramData\\Google\\Auth\\application_default_credentials.json`.   For more information, see [   Copying the private key to your instance](/monitoring/agent/monitoring/authorization#copy-private-key) .\n- Restart the agent- On Linux, run`sudo service stackdriver-agent restart`\n- On Windows, go into the service management console and restart the`Cloud Monitoring`service.If you have multiple projects that need new private keys, repeat this procedure for each of them.\nTo verify that the private key is correct, see [Are the credentials present?](#present-creds) . Specifically:\n- Read the private key JSON file on the instance, for example (on Linux):`sudo cat /etc/google/auth/application_default_credentials.json`\n- Ensure that the value of the`project_id`field matches that of the monitored project for which you just generated credentials.## Verifying the agent data\nTo verify that the agent is sending metrics correctly, use the [timeSeries.list](/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) method of the Monitoring API to look for recent time series data from the VM instance. You can call the method using the [APIs Explorer](/monitoring/api/apis-explorer) on the method's documentation page. If you don't see any data, it may be that the agent is sending data to the wrong project. To check that, see [Verifying project and credentials](#verify-project) .\nHere are detailed instructions for using the [timeSeries.list](/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) method:\n- Determine the instance ID of the VM instance where you installed the agent:- Compute Engine instances: Go to the Compute Engine detail page for your instance. At the bottom of the page, click **Equivalent REST** . The ID is a 19-digit number.\n- Amazon EC2 instances: The ID for each instance is shown in the list of instances. The ID looks like `i-1a2b3c4d` .\n- Go to the documentation page for the [timeSeries.list](/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) method.\n- Fill out the APIs Explorer form:- Set **name** to the project containing your VM instance, prefixed by `projects/` . For example, `projects/[YOUR_PROJECT_ID]` . For Amazon EC2 instances, you must use the [AWS Connector project](/monitoring/settings/aws-accounts#connector-project) for your Amazon account.\n- Set **filter** to the following line to choose an agent metric from your VM instance. Copy and paste it into the APIs Explorer, and then change the VM instance ID:```\nmetric.type = \"agent.googleapis.com/memory/bytes_used\" AND resource.label.instance_id = \"[YOUR-VM-INSTANCE-ID]\"\n```\n- Set the search time interval. You want approximately a five-minute interval:- Set **interval.endTime** to the current GMT time, which you can find at [time.is/GMT](https://time.is/GMT) . The time must be formatted like the following example. Don't enclose the time in quotation marks:```\n2016-10-31T14:10:00Z\n```\n- Set **interval.startTime** to approximately five minutes before the end time, using the same format.\n- Leave all the other fields blank.\n- Click **Execute** .\nYou should see output like the following:\n```\n{\u00a0\"timeSeries\": [\u00a0 {\u00a0 \u00a0\"metric\": {\u00a0 \u00a0 \"labels\": {\u00a0 \u00a0 \u00a0\"state\": \"buffered\"\u00a0 \u00a0 },\u00a0 \u00a0 \"type\": \"agent.googleapis.com/memory/bytes_used\"\u00a0 \u00a0},\u00a0 \u00a0\"resource\": {\u00a0 \u00a0 \"type\": \"[INSTANCE-TYPE]\",\u00a0 \u00a0 \"labels\": {\u00a0 \u00a0 \u00a0\"instance_id\": \"[YOUR-VM-INSTANCE-ID]\",\u00a0 \u00a0 \u00a0\"zone\": \"[YOUR-INSTANCE-ZONE]\",\u00a0 \u00a0 \u00a0\"project_id\": \"[YOUR-PROJECT-ID]\"\u00a0 \u00a0 }\u00a0 \u00a0},\u00a0 \u00a0\"metricKind\": \"GAUGE\",\u00a0 \u00a0\"valueType\": \"DOUBLE\",\u00a0 \u00a0\"points\": [\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0\"interval\": {\u00a0 \u00a0 \u00a0 \"startTime\": \"[START_TIME]\",\u00a0 \u00a0 \u00a0 \"endTime\": \"[END_TIME]\"\u00a0 \u00a0 \u00a0},\u00a0 \u00a0 \u00a0\"value\": {\u00a0 \u00a0 \u00a0 \"doubleValue\": 27451392\u00a0 \u00a0 \u00a0}\u00a0 \u00a0 },\u00a0 \u00a0 ...\n```\nIf the API call returns any time series data from your VM instance, as shown above, then your agent is working properly and you are finished.\nIf you don't see any time series data, check the following:\n- If your API call results in an error message, this doesn't indicate an agent problem. Check that the APIs Explorer fields are filled properly:- \"Invalid argument\" errors probably indicate a problem with the spelling and format of the project ID, filter, or the two timestamps.The requirements for the time-stamp arguments depend on the metric type you specify. A metric type records `GAUGE` , `DELTA` , or `CUMULATIVE` data. See [MetricKind](/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors#MetricKind) for more information.For `DELTA` and `CUMULATIVE` metrics, both the start and end times are required, and the end time must be later than the start time. These kinds of metric types record changes measured over time, so the start and end times must define a non-zero interval.\n- \"Not authorized\" errors can mean you misspelled the project ID.\n- \"Not found\" errors can indicate that you've omitted the required `projects/` prefix in the \"name\" field.\nFix the problems and try the API call again.\n- If the API call succeeds but you see only an empty response, `{ }` , then check that your filter and time interval are correct. Errors in formatting the timestamps can result in no data being returned. If everything seems correct but you are getting no data, then the agent isn't sending metric data, or at least not to the project you are expecting it to. This might indicate a credentials problem; see [Verifying private-key credentials](#verify-key) .## Reinstalling the Monitoring agent\nInstalling the most recent version of the agent can solve many problems:\n- If you are sure that the problem isn't related to credentials, you can skip ahead to [Installing on Linux and Windows](/stackdriver/docs/solutions/agents/monitoring/installation#joint-install) .\n- For a full install of the agent and any needed credentials, see [Install the Monitoring agent](/stackdriver/docs/solutions/agents/monitoring/installation) .## Determining which Linux VMs have the agent installed\n- Run either of the following queries to see which Linux VMs are running the agent:- [APIs Explorer](/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list?apix_params=%7B%22name%22%3A%22projects%2F%22%2C%22aggregation.alignmentPeriod%22%3A%22120s%22%2C%22aggregation.crossSeriesReducer%22%3A%22REDUCE_NONE%22%2C%22aggregation.groupByFields%22%3A%5B%22metadata.system_labels.name%22%2C%22resource.labels.instance_id%22%5D%2C%22aggregation.perSeriesAligner%22%3A%22ALIGN_RATE%22%2C%22filter%22%3A%22resource.type%3D%5C%22gce_instance%5C%22%20metric.type%3D%5C%22agent.googleapis.com%2Fagent%2Fuptime%5C%22%20metric.label.%5C%22version%5C%22%3Dmonitoring.regex.full_match(%5C%22stackdriver_agent%2F.*%5C%22)%22%2C%22interval.endTime%22%3A%222020-04-28T22%3A22%3A15Z%22%2C%22interval.startTime%22%3A%222020-04-28T22%3A20%3A15Z%22%7D) \n- [Metrics Explorer](https://console.cloud.google.com/monitoring/metrics-explorer?pageState=%7B%22xyChart%22:%7B%22dataSets%22:%5B%7B%22timeSeriesFilter%22:%7B%22filter%22:%22metric.type%3D%5C%22agent.googleapis.com%2Fagent%2Fuptime%5C%22%20resource.type%3D%5C%22gce_instance%5C%22%20metric.label.%5C%22version%5C%22%3Dmonitoring.regex.full_match(%5C%22stackdriver_agent%2F.*%5C%22)%22,%22minAlignmentPeriod%22:%22120s%22,%22aggregations%22:%5B%7B%22perSeriesAligner%22:%22ALIGN_RATE%22,%22crossSeriesReducer%22:%22REDUCE_COUNT%22,%22groupByFields%22:%5B%22resource.label.%5C%22instance_id%5C%22%22,%22metadata.system_labels.%5C%22name%5C%22%22,%22resource.label.%5C%22project_id%5C%22%22%5D%7D,%7B%22crossSeriesReducer%22:%22REDUCE_NONE%22%7D%5D%7D,%22targetAxis%22:%22Y1%22,%22plotType%22:%22LINE%22%7D%5D,%22options%22:%7B%22mode%22:%22COLOR%22%7D,%22constantLines%22:%5B%5D,%22timeshiftDuration%22:%220s%22,%22y1Axis%22:%7B%22label%22:%22y1Axis%22,%22scale%22:%22LINEAR%22%7D%7D,%22isAutoRefresh%22:true,%22timeSelection%22:%7B%22timeRange%22:%22custom%22,%22start%22:%222020-04-28T22:20:08.767Z%22,%22end%22:%222020-04-28T22:22:08.767Z%22%7D%7D) \nNote that for each query, you must enter your project name and adjust the time bounds.## Automatically restarting the agent\nYou can set up a script to check if the agent is running and then restart the agent in the event that it crashed.\nFor example, on Linux, you can create the following crontab entry to check the agent status every 5 minutes:\n```\n\u00a0 */5 * * * * /bin/pidof stackdriver-collectd >/dev/null 2>&1 || /usr/sbin/service stackdriver-agent restart >/dev/null 2>&1\n```\n## Known issues\nThe following sections describe issues known to the Monitoring agent.\n### Process data access issue (Windows)\nYou might see an agent error message in the Windows Event Log similar to the following:\n```\nRead access denied for processes: Registry (84), smss.exe (264), csrss.exe (376), wininit.exe (448), csrss.exe (456), services.exe (580), NisSrv.exe (3008), MsMpEng.exe (3624), csrss.exe (7044)\n```\nThis message indicates that the agent doesn't have access to this data on your system. To stop seeing this message, you can provide sufficient permissions to the `SYSTEM` user to read process data for the processes and services listed in the error messages. If you don't need this data, then you can safely ignore these informational messages.\n### Metadata cache issues (Linux)\nYou might see an error message in the Linux system log file ( `/var/log/syslog` on Debian / Ubuntu or `/var/log/messages` on Red Hat / CentOS / SLES) similar to the following:\n```\ncollectd[25571]: uc_update: Value too old: name = myhost/processes-all/ps_vm;value time = 1511345468.180; last cache update = 1511345468.180;write_gcm: wg_update_stats failed.write_gcm: uc_update returned an error.\n```\nThese messages are harmless warnings and aren't an indication of data loss. These messages are generated by the current processes plugin implementation when there is a timestamp mismatch.\n### Infinite value data point dropped issue (Linux)\nYou might see an error message in the Linux system log file ( `/var/log/syslog` on Debian / Ubuntu or `/var/log/messages` on Red Hat / CentOS / SLES) similar to the following:\n```\nwrite_gcm: can not take infinite value\n```\nThis message indicates that a single malformed data point is dropped. This is normally harmless and can be ignored.\n### Metadata key throttle issue (Linux)\nYou might see an error message in the Linux system log file ( `/var/log/syslog` on Debian / Ubuntu or `/var/log/messages` on Red Hat / CentOS / SLES) similar to the following:\n```\ncollectd[7440]:match_throttle_metadata_keys: uc_meta_data_add returned an errorcollectd[7440]:match_throttle_metadata_keys: mtg_update_stats failed\n```\nThis message indicates that the status update of memory throttling fails once. It is normally harmless, but could be a sign that the agent is running out of memory, especially if it occurs frequently.\n### Out of Cloud Monitoring API quota issue (Linux)\nYou might see an error message in the Linux system log file ( `/var/log/syslog` on Debian / Ubuntu or `/var/log/messages` on Red Hat / CentOS / SLES) similar to the following:\n```\ncollectd[25198]: write_gcm: Unsuccessful HTTP request 429\n```\nThis message indicates the Cloud Monitoring API quota limit was reached. Follow the [Quota](/monitoring/quotas#more-quota) guide for information on managing your quota limit.\n### High memory usage due to low COLLECTD_INTERVAL (Linux)\nYou might see high memory usage of the agent when the `COLLECTD_INTERVAL` is configured to be shorter than the default `60 seconds` , for example, `10 seconds` instead. This is a known limitation of the agent because it sends requests serially from a single thread. To mitigate this, consider reducing the `COLLECTD_INTERVAL` only for a subset of required metrics, and leave the rest of the metrics at the default interval.\n### Token buffer overflow issue (Linux)\nYou might see an error message in the Linux system log file (/var/log/syslog on Debian / Ubuntu or /var/log/messages on Red Hat / CentOS / SLES) similar to the following:\n```\nwrite_gcm: Error or buffer overflow when building auth_headerwrite_gcm: wg_oauth2_get_auth_header failed.write_gcm: wg_transmit_unique_segment failed.write_gcm: wg_transmit_unique_segments failed. Flushing.\n```\nThese messages indicate that [the monitoring agent needs to be upgraded](/monitoring/agent/monitoring/installation#upgrade) to version `6.1.2` or higher.\n### Repository changed its 'Origin' value (Linux)\nYou might see an error message similar to the following when upgrading the agent, installing the agent, or running `apt-get update` on Debian/Ubuntu Linux:\n```\nE: Repository 'https://packages.cloud.google.com/apt google-cloud-monitoring-buster-all InRelease' changed its 'Origin' value from 'google-cloud-monitoring-buster' to 'namespaces/cloud-ops-agents-artifacts/repositories/google-cloud-monitoring-buster-all'E: Repository 'https://packages.cloud.google.com/apt google-cloud-monitoring-buster-all InRelease' changed its 'Label' value from 'google-cloud-monitoring-buster' to 'namespaces/cloud-ops-agents-artifacts/repositories/google-cloud-monitoring-buster-all'\n```\nThis message indicates that the package repository cache may have diverged from its source. To resolve this, run the following command:\n```\napt-get --allow-releaseinfo-change update\n```\nThen, run the upgrade or install again.\n## Removed agent reported by Google Cloud console as installed\nAfter you uninstall the agent, the Google Cloud console might take up to one hour to report this change.\n## Monitoring agent doesn't appear in Windows Uninstall a program list\nTo uninstall the Monitoring agent when it isn't listed in the Windows Control Panel's **Uninstall a program** list, run `uninstall.exe` from the directory where you installed it.", "guide": "Google Cloud Observability"}