{"title": "Google Cloud Observability - \u4f7f\u7528 OpenCensus \u6307\u6a19", "url": "https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/sli-metrics/open-census?hl=zh-cn", "abstract": "# Google Cloud Observability - \u4f7f\u7528 OpenCensus \u6307\u6a19\n\u672c\u9801\u9762\u4ecb\u7d39\u4e86\u7232\u53ef\u7528\u6027\u548c\u5ef6\u9072\u6642\u9593 SLI \u5275\u5efa [OpenCensus](https://opencensus.io) \u6307\u6a19\u7684\u57fa\u790e\u77e5\u8b58\u3002\u5b83\u9084\u63d0\u4f9b\u4e86\u6709\u95dc\u5982\u4f55\u4f7f\u7528 OpenCensus \u6307\u6a19\u5b9a\u7fa9 SLO \u7684\u5be6\u73fe\u793a\u4f8b\u3002\n", "content": "## OpenCensus \u57fa\u790e\u77e5\u8b58\n[OpenCensus](https://opencensus.io) \u662f\u5eab\u7684\u55ae\u4e00\u958b\u6e90\u5206\u767c\uff0c\u53ef\u5728 [OpenCensus GitHub \u9801\u9762](https://github.com/census-instrumentation) \u4e0a\u627e\u5230\uff0c\u5b83\u53ef\u4ee5\u81ea\u52d5\u6536\u96c6\u8ddf\u8e64\u8a18\u9304\u548c\u6307\u6a19\u4e26\u5c07\u5b83\u5011\u767c\u9001\u5230\u4efb\u4f55\u5f8c\u7aef\u3002OpenCensus \u53ef\u7528\u65bc\u6aa2\u6e2c\u60a8\u7684\u670d\u52d9\uff0c\u4ee5\u767c\u51fa\u53ef\u63d0\u53d6\u5230 Cloud Monitoring \u7684\u81ea\u5b9a\u7fa9\u6307\u6a19\u3002\u7136\u5f8c\uff0c\u60a8\u53ef\u4ee5\u5c07\u9019\u4e9b\u6307\u6a19\u7528\u4f5c SLI\u3002\n\u5982\u9700\u67e5\u770b\u6709\u95dc\u4f7f\u7528 OpenCensus \u5275\u5efa\u975e\u5c08\u9580\u7528\u4f5c SLI \u7684 Monitoring \u6307\u6a19\u7684\u793a\u4f8b\uff0c\u8acb\u53c3\u95b1 [\u5229\u7528 OpenCensus \u7372\u53d6\u81ea\u5b9a\u7fa9\u6307\u6a19](https://cloud.google.com/monitoring/custom-metrics/open-census?hl=zh-cn) \u3002\n### \u6307\u6a19\n\u5982\u9700\u4f7f\u7528 OpenCensus \u5f9e\u670d\u52d9\u6536\u96c6\u6307\u6a19\u6578\u64da\uff0c\u60a8\u5fc5\u9808\u4f7f\u7528\u4ee5\u4e0b OpenCensus \u69cb\u9020\uff1a\n- [Measure](https://opencensus.io/stats/measure/) \uff1a\u8868\u793a\u8981\u8a18\u9304\u7684\u6307\u6a19\u985e\u578b\uff0c\u7528\u6307\u6a19\u540d\u7a31\u6307\u5b9a\u3002`Measure`\u53ef\u4ee5\u8a18\u9304 Int64 \u6216 Float64 \u503c\u3002\n- [Measurement](https://opencensus.io/stats/measurement/) \uff1a\u8a18\u9304`Measure`\u7232\u7279\u5b9a\u4e8b\u4ef6\u6536\u96c6\u548c\u5beb\u5165\u7684\u7279\u5b9a\u6578\u64da\u9ede\u3002\u4f8b\u5982\uff0c`Measurement`\u53ef\u8a18\u9304\u7279\u5b9a\u97ff\u61c9\u7684\u5ef6\u9072\u6642\u9593\u3002\n- [View](https://opencensus.io/stats/view/) \uff1a\u6307\u5b9a\u61c9\u7528\u65bc`Measure`\u7684\u805a\u5408\u3002OpenCensus \u652f\u6301\u4ee5\u4e0b\u805a\u5408\u985e\u578b\uff1a\n- \u8a08\u6578\uff1a\u6e2c\u91cf\u9ede\u8a08\u6578\u3002\n- \u5206\u4f48\uff1a\u6e2c\u91cf\u9ede\u7684\u76f4\u65b9\u5716\u5206\u4f48\u3002\n- \u7e3d\u548c\uff1a\u6e2c\u91cf\u503c\u7684\u7e3d\u548c\u3002\n- LastValue\uff1a\u6e2c\u91cf\u8a18\u9304\u7684\u6700\u5f8c\u4e00\u500b\u503c\u3002\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [OpenCensus \u7d71\u8a08\u4fe1\u606f/\u6307\u6a19](https://opencensus.io/stats/) \u3002\u8acb\u6ce8\u610f\uff0cOpenCensus \u901a\u5e38\u5c07\u6307\u6a19\u7a31\u7232\"\u7d71\u8a08\u4fe1\u606f\" \u3002\n### \u6aa2\u6e2c\nOpenCensus \u5eab\u6709\u591a\u7a2e\u8a9e\u8a00\u7248\u672c\u3002\u5982\u9700\u67e5\u770b\u6709\u95dc\u6aa2\u6e2c\u670d\u52d9\u4ee5\u767c\u51fa\u6307\u6a19\u7684\u7279\u5b9a\u65bc\u8a9e\u8a00\u7684\u4fe1\u606f\uff0c\u8acb\u53c3\u95b1 [OpenCensus \u8a9e\u8a00\u652f\u6301](https://opencensus.io/language-support/) \u3002\u6b64\u5916\uff0c [\u5229\u7528 OpenCensus \u7372\u53d6\u81ea\u5b9a\u7fa9\u6307\u6a19](https://cloud.google.com/monitoring/custom-metrics/open-census?hl=zh-cn) \u63d0\u4f9b\u4e86 Monitoring \u5e38\u7528\u7684\u8a9e\u8a00\u7684\u793a\u4f8b\u3002\n\u5728\u57fa\u672c\u60c5\u6cc1\u4e0b\uff0c\u60a8\u9700\u8981\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u5c0d\u670d\u52d9\u9032\u884c\u63d2\u6a01\uff0c\u4ee5\u8a18\u9304\u548c\u5c0e\u51fa\u6307\u6a19\u3002\n- \u5b9a\u7fa9\u5c0e\u51fa\u5668\u4ee5\u63a5\u6536\u6307\u6a19\u3002\n\u5c0d\u65bc\u6bcf\u500b\u6307\u6a19\uff0c\u60a8\u9700\u8981\u5b9a\u7fa9 `Measure` \u4f86\u6307\u5b9a\u503c\u985e\u578b\uff1aInt64 \u6216 Float64\u3002\u60a8\u9084\u9700\u8981\u5b9a\u7fa9\u4e26\u8a3b\u518a `View` \u4f86\u6307\u5b9a\u805a\u5408\u985e\u578b\uff08\u8a08\u6578\u3001\u5206\u4f48\u3001\u7e3d\u548c\u6216 last-value\uff09\u3002\u5982\u9700\u4f7f\u7528\u5206\u4f48\u805a\u5408\u985e\u578b\uff0c\u60a8\u9084\u9700\u8981\u660e\u78ba\u6307\u5b9a\u76f4\u65b9\u5716\u5206\u6876\u908a\u754c\u3002\u60a8\u9084\u9700\u8981\u5728 `View` \u4e2d\u7232\u6307\u6a19\u6307\u5b9a\u540d\u7a31\u3002\n### \u5c0e\u51fa\u5668\n\u6700\u5f8c\uff0c\u60a8\u9700\u8981\u4f7f\u7528\u5c0e\u51fa\u5668\u4f86\u6536\u96c6\u6307\u6a19\u4e26\u5c07\u5b83\u5011\u5beb\u5165 Cloud Monitoring \u6216\u5176\u4ed6\u5f8c\u7aef\u3002\u5982\u9700\u77ad\u89e3\u53ef\u7528\u65bc Monitoring \u7684\u8a9e\u8a00\u7279\u5b9a\u7684\u5c0e\u51fa\u5668\uff0c\u8acb\u53c3\u95b1 [OpenCensus \u5c0e\u51fa\u5668](https://opencensus.io/exporters/) \u3002\n\u60a8\u9084\u53ef\u4ee5\u7de8\u5beb\u81ea\u5df1\u7684\u5c0e\u51fa\u5668\uff1b\u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7de8\u5beb\u81ea\u5b9a\u7fa9\u5c0e\u51fa\u5668](https://opencensus.io/exporters/custom-exporter/) \u3002\n## \u7232 SLI \u5275\u5efa\u6307\u6a19\n\u60a8\u7684\u61c9\u7528\u5fc5\u9808\u5275\u5efa\u53ef\u7528\u4f5c Cloud Monitoring \u4e2d\u7684 SLI \u7684 OpenCensus \u6307\u6a19\uff1a\n- \u5c0d\u65bc\u91dd\u5c0d\u8acb\u6c42\u548c\u932f\u8aa4\u8a08\u6578\u7684\u53ef\u7528\u6027 SLI\uff0c\u53ef\u4ee5\u5c07`Measure`\u8207\u8a08\u6578\u805a\u5408\u7d50\u5408\u4f7f\u7528\u3002\n- \u5c0d\u65bc\u5ef6\u9072\u6642\u9593 SLI\uff0c\u53ef\u4ee5\u5c07`Measure`\u8207\u5206\u4f48\u805a\u5408\u7d50\u5408\u4f7f\u7528\u3002\n### \u53ef\u7528\u6027 SLI \u7684\u6307\u6a19\n\u60a8\u53ef\u4ee5\u901a\u904e\u4f7f\u7528 [TimeSeriesRatio](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives?hl=zh-cn#TimeSeriesRatio) \u7d50\u69cb\u8a2d\u7f6e\u201c\u6b63\u5e38\u201d\u6216\u201c\u932f\u8aa4\u201d\u8acb\u6c42\u6578\u8207\u8acb\u6c42\u7e3d\u6578\u7684\u6bd4\u7387\uff0c\u5728 Cloud Monitoring API \u4e2d\u8868\u793a\u57fa\u65bc\u8acb\u6c42\u7684\u53ef\u7528\u6027 SLI\u3002\u6b64\u6bd4\u7387\u7528\u65bc [RequestBasedSli](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives?hl=zh-cn#RequestBasedSli) \u7d50\u69cb\u7684 `goodTotalRatio` \u5b57\u6bb5\u3002\n\u60a8\u7684\u61c9\u7528\u5fc5\u9808\u5275\u5efa\u53ef\u7528\u65bc\u69cb\u9020\u6b64\u6bd4\u7387\u7684 OpenCensus \u6307\u6a19\u3002\u5728\u60a8\u7684\u61c9\u7528\u4e2d\uff0c\u60a8\u5fc5\u9808\u81f3\u5c11\u5275\u5efa\u4ee5\u4e0b\u6307\u6a19\u4e2d\u7684\u5169\u500b\uff1a\n- \u7d71\u8a08\u4e8b\u4ef6\u7e3d\u6578\u7684\u6307\u6a19\uff1b\u6b64\u6307\u6a19\u7528\u65bc\u6bd4\u7387\u7684 `totalServiceFilter` \u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8a08\u6578\u805a\u5408\u5275\u5efa\u985e\u578b\u7232 Int64 \u7684 OpenCensus \u6307\u6a19\uff0c\u5f9e\u800c\u7232\u6bcf\u500b\u6536\u5230\u7684\u8acb\u6c42\u8a18\u9304\u503c `1` \u3002\n- \u7d71\u8a08\u201c\u932f\u8aa4\u201d\u4e8b\u4ef6\u6578\u7684\u6307\u6a19\uff0c\u6b64\u6307\u6a19\u7528\u65bc\u6bd4\u7387\u7684 `badServiceFilter` \u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8a08\u6578\u805a\u5408\u5275\u5efa\u985e\u578b\u7232 Int64 \u7684 OpenCensus \u6307\u6a19\uff0c\u5f9e\u800c\u7232\u6bcf\u500b\u932f\u8aa4\u6216\u5931\u6557\u7684\u8acb\u6c42\u8a18\u9304\u503c `1` \u3002\n- \u7d71\u8a08\u201c\u6b63\u5e38\u201d\u4e8b\u4ef6\u6578\u7684\u6307\u6a19\uff0c\u6b64\u6307\u6a19\u7528\u65bc\u6bd4\u7387\u7684 `goodServiceFilter` \u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8a08\u6578\u805a\u5408\u5275\u5efa\u985e\u578b\u7232 Int64 \u7684 OpenCensus \u6307\u6a19\uff0c\u5f9e\u800c\u7232\u6bcf\u500b\u6210\u529f\u97ff\u61c9\u8a18\u9304\u503c `1` \u3002\n### \u5ef6\u9072\u6642\u9593 SLI \u7684\u6307\u6a19\n\u60a8\u53ef\u4ee5\u901a\u904e\u4f7f\u7528 [DistributionCut](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives?hl=zh-cn#DistributionCut) \u7d50\u69cb\uff0c\u5728 Cloud Monitoring API \u4e2d\u8868\u793a\u57fa\u65bc\u8acb\u6c42\u7684\u5ef6\u9072\u6642\u9593 SLI\u3002\u6b64\u7d50\u69cb\u7528\u65bc [RequestBasedSli](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives?hl=zh-cn#RequestBasedSli) \u7d50\u69cb\u7684 `distributionCut` \u5b57\u6bb5\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u5206\u4f48\u805a\u5408\u985e\u578b\u901a\u904e `View` \u5275\u5efa Int64 \u6216 Float64 `Measure` \u3002\u60a8\u9084\u5fc5\u9808\u660e\u78ba\u5b9a\u7fa9\u5206\u6876\u908a\u754c\u3002\u8acb\u6ce8\u610f\uff0c\u63a1\u7528\u8b93\u60a8\u80fd\u5920\u7cbe\u78ba\u8861\u91cf\u6240\u9700\u95be\u503c\u5167\u7684\u8acb\u6c42\u6240\u4f54\u767e\u5206\u6bd4\u7684\u65b9\u5f0f\u5b9a\u7fa9\u5206\u6876\u975e\u5e38\u91cd\u8981\u3002\u5982\u9700\u77ad\u89e3\u672c\u4e3b\u984c\uff0c\u8acb\u53c3\u95b1 [\u7ad9\u9ede\u53ef\u9760\u6027\u5de5\u7a0b\u5de5\u4f5c\u7c3f](https://landing.google.com/sre/workbook/toc?hl=zh-cn) \u4e2d\u7684 [\u5be6\u73fe SLO](https://landing.google.com/sre/workbook/chapters/implementing-slos?hl=zh-cn) \u3002\n## \u5be6\u73fe\u793a\u4f8b\n\u672c\u90e8\u5206\u4ecb\u7d39\u4e86\u4e00\u500b\u5728 Node.js \u4e2d\u4f7f\u7528 OpenCensus \u5be6\u73fe\u57fa\u672c\u53ef\u7528\u6027\u548c\u5ef6\u9072\u6642\u9593 SLI \u7684\u6307\u6a19\u3002\n### \u6aa2\u6e2c\n\u5982\u9700\u4f7f\u7528 OpenCensus \u5c0d\u670d\u52d9\u9032\u884c\u63d2\u6a01\u4ee5\u767c\u51fa\u6307\u6a19\uff0c\u8acb\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n- \u6dfb\u52a0\u5fc5\u8981\u7684\u5eab\uff1a\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/monitoring/opencensus/main.go) \n```\nimport (\u00a0 \u00a0 \u00a0 \u00a0 \"flag\"\u00a0 \u00a0 \u00a0 \u00a0 \"fmt\"\u00a0 \u00a0 \u00a0 \u00a0 \"log\"\u00a0 \u00a0 \u00a0 \u00a0 \"math/rand\"\u00a0 \u00a0 \u00a0 \u00a0 \"net/http\"\u00a0 \u00a0 \u00a0 \u00a0 \"time\"\u00a0 \u00a0 \u00a0 \u00a0 \"contrib.go.opencensus.io/exporter/stackdriver\"\u00a0 \u00a0 \u00a0 \u00a0 \"go.opencensus.io/stats\"\u00a0 \u00a0 \u00a0 \u00a0 \"go.opencensus.io/stats/view\"\u00a0 \u00a0 \u00a0 \u00a0 \"go.opencensus.io/tag\")\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/monitoring/opencensus/app.js) \n```\n// opencensus setupconst {globalStats, MeasureUnit, AggregationType} = require('@opencensus/core');const {StackdriverStatsExporter} = require('@opencensus/exporter-stackdriver');\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/monitoring/opencensus/main.py) \n```\nfrom flask import Flaskfrom opencensus.ext.prometheus import stats_exporter as prometheusfrom opencensus.stats import aggregation as aggregation_modulefrom opencensus.stats import measure as measure_modulefrom opencensus.stats import stats as stats_modulefrom opencensus.stats import view as view_modulefrom opencensus.tags import tag_map as tag_map_modulefrom prometheus_flask_exporter import PrometheusMetrics\n```\n- \u5b9a\u7fa9\u4e26\u8a3b\u518a\u5c0e\u51fa\u5668\uff1a\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/monitoring/opencensus/main.go) \n```\n// Sets up Cloud Monitoring exporter.sd, err := stackdriver.NewExporter(stackdriver.Options{\u00a0 \u00a0 \u00a0 \u00a0 ProjectID: \u00a0 \u00a0 \u00a0 \u00a0 *projectID,\u00a0 \u00a0 \u00a0 \u00a0 MetricPrefix: \u00a0 \u00a0 \u00a0\"opencensus-demo\",\u00a0 \u00a0 \u00a0 \u00a0 ReportingInterval: 60 * time.Second,})if err != nil {\u00a0 \u00a0 \u00a0 \u00a0 log.Fatalf(\"Failed to create the Cloud Monitoring exporter: %v\", err)}defer sd.Flush()sd.StartMetricsExporter()defer sd.StopMetricsExporter()\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/monitoring/opencensus/app.js) \n```\n// Stackdriver export interval is 60 secondsconst EXPORT_INTERVAL = 60;const exporter = new StackdriverStatsExporter({\u00a0 projectId: projectId,\u00a0 period: EXPORT_INTERVAL * 1000,});globalStats.registerExporter(exporter);\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/monitoring/opencensus/main.py) \n```\ndef setup_openCensus_and_prometheus_exporter() -> None:\u00a0 \u00a0 stats = stats_module.stats\u00a0 \u00a0 view_manager = stats.view_manager\u00a0 \u00a0 exporter = prometheus.new_stats_exporter(prometheus.Options(namespace=\"oc_python\"))\u00a0 \u00a0 view_manager.register_exporter(exporter)\u00a0 \u00a0 register_all_views(view_manager)\n```\n- \u7232\u6bcf\u500b\u6307\u6a19\u5b9a\u7fa9\u4e00\u500b`Measure`\uff1a\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/monitoring/opencensus/main.go) \n```\n// Sets up metrics.var (\u00a0 \u00a0 \u00a0 \u00a0 requestCount \u00a0 \u00a0 \u00a0 = stats.Int64(\"oc_request_count\", \"total request count\", \"requests\")\u00a0 \u00a0 \u00a0 \u00a0 failedRequestCount = stats.Int64(\"oc_failed_request_count\", \"count of failed requests\", \"requests\")\u00a0 \u00a0 \u00a0 \u00a0 responseLatency \u00a0 \u00a0= stats.Float64(\"oc_latency_distribution\", \"distribution of response latencies\", \"s\"))\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/monitoring/opencensus/app.js) \n```\nconst REQUEST_COUNT = globalStats.createMeasureInt64(\u00a0 'request_count',\u00a0 MeasureUnit.UNIT,\u00a0 'Number of requests to the server');const ERROR_COUNT = globalStats.createMeasureInt64(\u00a0 'error_count',\u00a0 MeasureUnit.UNIT,\u00a0 'Number of failed requests to the server');const RESPONSE_LATENCY = globalStats.createMeasureInt64(\u00a0 'response_latency',\u00a0 MeasureUnit.MS,\u00a0 'The server response latency in milliseconds');\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/monitoring/opencensus/main.py) \n```\nm_request_count = measure_module.MeasureInt(\u00a0 \u00a0 \"python_request_count\", \"total requests\", \"requests\")m_failed_request_count = measure_module.MeasureInt(\u00a0 \u00a0 \"python_failed_request_count\", \"failed requests\", \"requests\")m_response_latency = measure_module.MeasureFloat(\u00a0 \u00a0 \"python_response_latency\", \"response latency\", \"s\")\n```\n- \u4f7f\u7528\u9069\u7576\u7684\u805a\u5408\u985e\u578b\u7232\u6bcf\u500b`Measure`\u4ee5\u53ca\u97ff\u61c9\u5ef6\u9072\u6642\u9593\u548c\u5206\u6876\u908a\u754c\u5b9a\u7fa9\u4e26\u8a3b\u518a`View`\uff1a\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/monitoring/opencensus/main.go) \n```\n// Sets up views.var (\u00a0 \u00a0 \u00a0 \u00a0 requestCountView = &view.View{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: \u00a0 \u00a0 \u00a0 \u00a0\"oc_request_count\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Measure: \u00a0 \u00a0 requestCount,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Description: \"total request count\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Aggregation: view.Count(),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 failedRequestCountView = &view.View{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: \u00a0 \u00a0 \u00a0 \u00a0\"oc_failed_request_count\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Measure: \u00a0 \u00a0 failedRequestCount,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Description: \"count of failed requests\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Aggregation: view.Count(),\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 \u00a0 responseLatencyView = &view.View{\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Name: \u00a0 \u00a0 \u00a0 \u00a0\"oc_response_latency\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Measure: \u00a0 \u00a0 responseLatency,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Description: \"The distribution of the latencies\",\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Bucket definitions must be explicitly specified.\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Aggregation: view.Distribution(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000),\u00a0 \u00a0 \u00a0 \u00a0 })\u00a0 \u00a0 \u00a0 \u00a0 // Register the views.\u00a0 \u00a0 \u00a0 \u00a0 if err := view.Register(requestCountView, failedRequestCountView, responseLatencyView); err != nil {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log.Fatalf(\"Failed to register the views: %v\", err)\u00a0 \u00a0 \u00a0 \u00a0 }\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/monitoring/opencensus/app.js) \n```\nconst request_count_metric = globalStats.createView(\u00a0 'request_count_metric',\u00a0 REQUEST_COUNT,\u00a0 AggregationType.COUNT);globalStats.registerView(request_count_metric);const error_count_metric = globalStats.createView(\u00a0 'error_count_metric',\u00a0 ERROR_COUNT,\u00a0 AggregationType.COUNT);globalStats.registerView(error_count_metric);const latency_metric = globalStats.createView(\u00a0 'response_latency_metric',\u00a0 RESPONSE_LATENCY,\u00a0 AggregationType.DISTRIBUTION,\u00a0 [],\u00a0 'Server response latency distribution',\u00a0 // Latency in buckets:\u00a0 [0, 1000, 2000, 3000, 4000, 5000, 10000]);globalStats.registerView(latency_metric);\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/monitoring/opencensus/main.py) \n```\n# set up viewslatency_view = view_module.View(\u00a0 \u00a0 \"python_response_latency\",\u00a0 \u00a0 \"The distribution of the latencies\",\u00a0 \u00a0 [],\u00a0 \u00a0 m_response_latency,\u00a0 \u00a0 aggregation_module.DistributionAggregation(\u00a0 \u00a0 \u00a0 \u00a0 [0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000]\u00a0 \u00a0 ),)request_count_view = view_module.View(\u00a0 \u00a0 \"python_request_count\",\u00a0 \u00a0 \"total requests\",\u00a0 \u00a0 [],\u00a0 \u00a0 m_request_count,\u00a0 \u00a0 aggregation_module.CountAggregation(),)failed_request_count_view = view_module.View(\u00a0 \u00a0 \"python_failed_request_count\",\u00a0 \u00a0 \"failed requests\",\u00a0 \u00a0 [],\u00a0 \u00a0 m_failed_request_count,\u00a0 \u00a0 aggregation_module.CountAggregation(),)# register viewsdef register_all_views(view_manager: stats_module.stats.view_manager) -> None:\u00a0 \u00a0 view_manager.register_view(latency_view)\u00a0 \u00a0 view_manager.register_view(request_count_view)\u00a0 \u00a0 view_manager.register_view(failed_request_count_view)\n```\n- \u201c\u8acb\u6c42\u8a08\u6578\u201d\u548c\u201c\u932f\u8aa4\u8a08\u6578\u201d\u6307\u6a19\u7684\u8a18\u9304\u503c\uff1a\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/monitoring/opencensus/main.go) \n```\n// Counts the request.stats.Record(ctx, requestCount.M(1))// Randomly fails 10% of the time.if rand.Intn(100) >= 90 {\u00a0 \u00a0 \u00a0 \u00a0 // Counts the error.\u00a0 \u00a0 \u00a0 \u00a0 stats.Record(ctx, failedRequestCount.M(1))\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/monitoring/opencensus/app.js) \n```\n// record a request count for every requestglobalStats.record([\u00a0 {\u00a0 \u00a0 measure: REQUEST_COUNT,\u00a0 \u00a0 value: 1,\u00a0 },]);// randomly throw an error 10% of the timeconst randomValue = Math.floor(Math.random() * 9 + 1);if (randomValue === 1) {\u00a0 // Record a failed request.\u00a0 globalStats.record([\u00a0 \u00a0 {\u00a0 \u00a0 \u00a0 measure: ERROR_COUNT,\u00a0 \u00a0 \u00a0 value: 1,\u00a0 \u00a0 },\u00a0 ]);\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/monitoring/opencensus/main.py) \n```\nmmap = stats_recorder.new_measurement_map()# count requestmmap.measure_int_put(m_request_count, 1)# fail 10% of the timeif random.randint(0, 100) > 90:\u00a0 \u00a0 mmap.measure_int_put(m_failed_request_count, 1)\u00a0 \u00a0 tmap = tag_map_module.TagMap()\u00a0 \u00a0 mmap.record(tmap)\u00a0 \u00a0 return (\"error!\", 500)\n```\n- \u8a18\u9304\u5ef6\u9072\u6642\u9593\u503c\uff1a\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/golang-samples/blob/HEAD/monitoring/opencensus/main.go) \n```\nrequestReceived := time.Now()// Records latency for failure OR success.defer func() {\u00a0 \u00a0 \u00a0 \u00a0 stats.Record(ctx, responseLatency.M(time.Since(requestReceived).Seconds()))}()\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/monitoring/opencensus/app.js) \n```\nglobalStats.record([\u00a0 {\u00a0 \u00a0 measure: RESPONSE_LATENCY,\u00a0 \u00a0 value: stopwatch.elapsedMilliseconds,\u00a0 },]);\n```\u5982\u9700\u5411 Monitoring \u9032\u884c\u8eab\u4efd\u9a57\u8b49\uff0c\u8acb\u8a2d\u7f6e\u61c9\u7528\u9ed8\u8a8d\u6191\u64da\u3002  \u5982\u9700\u77ad\u89e3\u8a73\u60c5\uff0c\u8acb\u53c3\u95b1 [\u7232\u672c\u5730\u958b\u767c\u74b0\u5883\u8a2d\u7f6e\u8eab\u4efd\u9a57\u8b49](https://cloud.google.com/docs/authentication/provide-credentials-adc?hl=zh-cn#local-dev) \u3002\n [\u5728 GitHub \u4e0a\u67e5\u770b](https://github.com/GoogleCloudPlatform/python-docs-samples/blob/HEAD/monitoring/opencensus/main.py) \n```\nstart_time = time.perf_counter()mmap = stats_recorder.new_measurement_map()if random.randint(0, 100) > 90:\u00a0 \u00a0 response_latency = time.perf_counter() - start_time\u00a0 \u00a0 mmap.measure_float_put(m_response_latency, response_latency)\u00a0 \u00a0 tmap = tag_map_module.TagMap()\u00a0 \u00a0 mmap.record(tmap)\n```\n### \u63d0\u53d6\u7684\u6307\u6a19\n\u5728\u6307\u6a19\u5c0e\u51fa\u5230 Cloud Monitoring \u5f8c\uff0c\u9019\u4e9b\u6307\u6a19\u986f\u793a\u7232\u524d\u7db4\u6307\u793a\u6307\u6a19\u6e90\u65bc OpenCensus \u7684\u6307\u6a19\u985e\u578b\u3002\u4f8b\u5982\uff0cNode.js \u5be6\u73fe\u4e2d\u6bcf\u500b OpenCensus `View` \u7684\u540d\u7a31\u7684\u5c0d\u61c9\u95dc\u4fc2\u5982\u4e0b\u6240\u793a\uff1a\n- `request_count_sli`\u8b8a\u7232`custom.googleapis.com/opencensus/request_count_sli`\u3002\n- `error_count_sli`\u8b8a\u7232`custom.googleapis.com/opencensus/error_count_sli`\u3002\n- `response_latency_sli`\u8b8a\u7232`custom.googleapis.com/opencensus/response_latency_sli`\u3002\n\u670d\u52d9\u904b\u884c\u5f8c\uff0c\u60a8\u53ef\u4ee5\u5728 Metrics Explorer \u4e2d\u641c\u7d22\u6307\u6a19\uff0c\u4ee5\u78ba\u8a8d\u9019\u4e9b\u6307\u6a19\u662f\u5426\u88ab\u63d0\u53d6\u5230 Monitoring \u4e2d\u3002\n## \u53ef\u7528\u6027 SLI\n\u5728 Cloud Monitoring \u4e2d\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u4f7f\u7528 [TimeSeriesRatio](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives?hl=zh-cn#TimeSeriesRatio) \u7d50\u69cb\u4f86\u8868\u793a\u57fa\u65bc\u8acb\u6c42\u7684\u53ef\u7528\u6027 SLI\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u4e00\u500b SLO\uff0c\u8a72 SLO \u4f7f\u7528\u63d0\u53d6\u7684 OpenCensus \u6307\u6a19\u4e26\u9810\u8a08\u670d\u52d9\u7684\u53ef\u7528\u6027\u7232 98%\uff08\u6839\u64da\u5728\u4e00\u500b\u6efe\u52d5\u7684 28 \u5929\u6642\u9593\u6bb5\u5167\uff0c `error_count_sli` \u8207 `request_count_sli` \u7684\u6bd4\u7387\u8a08\u7b97\u5f97\u51fa\uff09\u3002\n```\n{\u00a0 \"serviceLevelIndicator\": {\u00a0 \u00a0 \"requestBased\": {\u00a0 \u00a0 \u00a0 \"goodTotalRatio\": {\u00a0 \u00a0 \u00a0 \u00a0 \"totalServiceFilter\":\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"metric.type=\\\"custom.googleapis.com/opencensus/request_count_sli\\\",\u00a0 \u00a0 \u00a0 \u00a0\"badServiceFilter\":\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"metric.type=\\\"custom.googleapis.com/opencensus/error_count_sli\\\"\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 },\u00a0 \"goal\": 0.98,\u00a0 \"rollingPeriod\": \"2419200s\",\u00a0 \"displayName\": \"98% Availability, rolling 28 days\"}\n```\n**\u6ce8\u610f** \uff1a\u5176\u4e2d\u4e00\u4e9b\u793a\u4f8b\u4e2d\u7684\u904e\u6ffe\u689d\u4ef6\u5b57\u7b26\u4e32\u5df2\u7d93\u904e\u63db\u884c\u8655\u7406\uff0c\u4ee5\u63d0\u9ad8\u53ef\u8b80\u6027\u3002\n## \u5ef6\u9072\u6642\u9593 SLI\n\u5728 Cloud Monitoring \u4e2d\uff0c\u60a8\u53ef\u4ee5\u901a\u904e\u4f7f\u7528 [DistributionCut](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/services.serviceLevelObjectives?hl=zh-cn#DistributionCut) \u7d50\u69cb\u4f86\u8868\u793a\u57fa\u65bc\u8acb\u6c42\u7684\u5ef6\u9072\u6642\u9593 SLI\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u4e00\u500b SLO\uff0c\u8a72 SLO \u4f7f\u7528\u63d0\u53d6\u7684 OpenCensus \u5ef6\u9072\u6642\u9593\u6307\u6a19\uff0c\u4e26\u9810\u8a08\u5728\u4e00\u500b\u6efe\u52d5\u7684\u4e00\u5929\u6642\u9593\u6bb5\u5167\uff0c98% \u7684\u8acb\u6c42\u5728 1000 \u6beb\u79d2\u5167\u5b8c\u6210\uff1a\n```\n{\u00a0 \"serviceLevelIndicator\": {\u00a0 \u00a0 \"requestBased\": {\u00a0 \u00a0 \u00a0 \"distributionCut\": {\u00a0 \u00a0 \u00a0 \u00a0 \"distributionFilter\":\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"metric.type=\\\"custom.googleapis.com/opencensus/response_latency_sli\\\",\u00a0 \u00a0 \u00a0 \u00a0 \"range\": {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"min\": 0,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"max\": 1000\u00a0 \u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 \u00a0 }\u00a0 \u00a0 }\u00a0 },\u00a0 \"goal\": 0.98,\u00a0 \"rollingPeriod\": \"86400s\",\u00a0 \"displayName\": \"98% requests under 1000 ms\"}\n```\n**\u6ce8\u610f** \uff1a\u5176\u4e2d\u4e00\u4e9b\u793a\u4f8b\u4e2d\u7684\u904e\u6ffe\u689d\u4ef6\u5b57\u7b26\u4e32\u5df2\u7d93\u904e\u63db\u884c\u8655\u7406\uff0c\u4ee5\u63d0\u9ad8\u53ef\u8b80\u6027\u3002", "guide": "Google Cloud Observability"}