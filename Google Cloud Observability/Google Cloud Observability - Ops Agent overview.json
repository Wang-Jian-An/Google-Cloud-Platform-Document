{"title": "Google Cloud Observability - Ops Agent overview", "url": "https://cloud.google.com/stackdriver/docs/solutions/agents/ops-agent", "abstract": "# Google Cloud Observability - Ops Agent overview\nThe Ops Agent is the primary agent for collecting telemetry from your Compute Engine instances. Combining the collection of logs, metrics, and traces into a single process, the Ops Agent uses [Fluent Bit](https://fluentbit.io/) for logs, which supports high-throughput logging, and the [OpenTelemetryCollector](https://opentelemetry.io/docs/collector/) for metrics and traces.\nTo install the Ops Agent, see [Installing theOps Agent](/stackdriver/docs/solutions/agents/ops-agent/install-index) .\n#", "content": "## Ops Agent features- Single download and installation/upgrade process.\n- Simple, unified, YAML-based configuration.\n- Support for [standard Linux and Windows distros](#supported_operating_systems) .\n- Proxy support.Logging features include:\n- Improved performance compared to the legacy Logging Agent:- High throughput capability, taking full advantage of multi-core architecture.\n- Efficient resource (e.g. memory, CPU) management.\n- Collecting logs from [various sources](/stackdriver/docs/solutions/agents/ops-agent/configuration#logging-receivers) :- Standard system logs (`/var/log/syslog`and`/var/log/messages`for Linux, Windows Event Log) collected with no configuration.\n- File-based logs with customizable paths and refresh interval.\n- Journald daemon / systemd logs.\n- Logs over TCP protocol.\n- Logs over Forward protocol (used by Fluent Bit and Fluentd).\n- Flexible processing:- Parse text logs into structured logs: [JSON-based](/stackdriver/docs/solutions/agents/ops-agent/configuration#logging-processor-parse-json) and [regular-expression-based](/stackdriver/docs/solutions/agents/ops-agent/configuration#logging-processor-parse-regex) parsing.\n- [Modify](/stackdriver/docs/solutions/agents/ops-agent/configuration#logging-processor-modify-fields) log entries by removing, renaming, or setting fields.\n- [Exclude](/stackdriver/docs/solutions/agents/ops-agent/configuration#logging-processor-exclude-logs) logs based on labels and regular expressions.\n- Detect and concatenate [multiline](/stackdriver/docs/solutions/agents/ops-agent/configuration#logging-processor-parse-multiline) language-exception logs from Java, Python, and Golang.\n- Third-party application support- Curated third-party application log integration that recognizes common app log file paths and formats.\nMonitoring features include:\n- System metrics collected with no configuration. Metrics collected include:- [cpu metrics](/monitoring/api/metrics_opsagent#agent-cpu) \n- [disk metrics](/monitoring/api/metrics_opsagent#agent-disk) \n- [iis metrics](/monitoring/api/metrics_opsagent#agent-iis) (Windows only)\n- [interface metrics](/monitoring/api/metrics_opsagent#agent-interface) \n- [gpu metrics](/monitoring/api/metrics_opsagent#agent-gpu) (Linux only)\n- [memory metrics](/monitoring/api/metrics_opsagent#agent-memory) \n- [mssql metrics](/monitoring/api/metrics_opsagent#agent-mssql) (Windows only)\n- [pagefile metrics](/monitoring/api/metrics_opsagent#agent-pagefile) (Windows only)\n- [swap metrics](/monitoring/api/metrics_opsagent#agent-swap) \n- [network metrics](/monitoring/api/metrics_opsagent#agent-network) \n- [processes metrics](/monitoring/api/metrics_opsagent#agent-processes) \n- [agent self metrics](/monitoring/api/metrics_opsagent#agent-agent) :\n- Third-party application support- Curated [integrations for third-party applicationmetrics](/stackdriver/docs/solutions/agents/ops-agent/third-party) , which collect common app metrics and offer sample dashboards and alert policies.\n- Collection of [  Prometheus metrics](/stackdriver/docs/solutions/agents/ops-agent/prometheus) from applications running on Compute Engine.\n- Collection of [  OpenTelemetry Protocol (OTLP) metrics and traces](/stackdriver/docs/solutions/agents/ops-agent/otlp) from applications  instrumented with [OpenTelemetry SDKs](https://opentelemetry.io/docs/instrumentation/) .\n- Collection of [  NVIDIA Data Center GPU Manager (DCGM) metrics](/stackdriver/docs/solutions/agents/ops-agent/third-party-nvidia) .\n**Note:** Some metrics are only available on VMs running on Linux. See detailed metrics definition and whether they are Linux only in the [agentmetrics](/monitoring/api/metrics_opsagent) page.\nThe Cloud Monitoring **Metrics Management** page provides information that can help you control the amount you spend on chargeable metrics without affecting observability. The **Metrics Management** page reports the following information:\n- Ingestion volumes for both byte- and sample-based billing, across metric  domains and for individual metrics.\n- Data about labels and cardinality of metrics.\n- Use of metrics in alerting policies and custom dashboards.\n- Rate of metric-write errors.\n**Metrics Management**\n[View and manage metric usage](/monitoring/docs/metrics-management)\nTrace features include:\n- Collection of [OpenTelemetry Protocol (OTLP) traces](/trace/docs/otlp) from applications instrumented with [OpenTelemetry SDKs](https://opentelemetry.io/docs/instrumentation/) .\n### Virtual machine instances\nYou can install the Ops Agent on [Compute Engine](/compute/docs) instances. To create a Compute Engine instance, see the [Compute Engine getting started guide](/compute/docs/quickstart) .\n**Note:** The Ops Agent is not supported on on-premises machines.\nThe following types of VM instances belong to managed services that implement service-specific Monitoring support. Don't try to manually install or configure the Ops Agent on them:\n- App Engine standard has built-in    Monitoring support. Agents aren't needed.\n- App Engine flexible environment instances have pre-installed agents  with service-specific configurations.\n- [Dataflow](/dataflow/docs) instances have  pre-installed  legacy  Monitoring agents with service-specific configurations.\n- [Dataproc](/dataproc/docs) instances prior to  image version 2.2 have pre-installed  legacy  Monitoring agents with service-specific configurations.You can install the [  Ops Agent](/stackdriver/docs/solutions/agents/ops-agent/../ops-agent) on Dataproc clusters  that use image version 2.2 and later to collect syslog logs and  host metrics. For more information, see [  Dataproc 2.2.x release versions](/dataproc/docs/concepts/versioning/dataproc-release-2.2) .\n- Google Kubernetes Engine node instances:- [GKE on   Google Cloud](/kubernetes-engine/docs) clusters are configured to [collect logs and metrics](/stackdriver/docs/solutions/gke) with   Logging and Monitoring by default. You   can also configure metric and log collection for existing container   clusters. For information, see [Configuring logging and   monitoring for GKE](/stackdriver/docs/solutions/gke/installing) .\n- [GKE on VMware](/anthos/gke/docs/on-prem) instances have an integrated logging and monitoring solution that   collects status about system components. For information, see [   Logging and monitoring](/anthos/gke/docs/on-prem/concepts/logging-and-monitoring) .\n### Operating systems\nThe Ops Agent supports the following operating systems on compatible VM instances. For information about Arm VM instances, see [Support for Compute Engine Arm VMs](#oagent-arm-support) .\nThe agent supports the following Linux operating systems:\n**Note:** To use Cloud Logging on VMs with Container-Optimized OS, follow [Using Cloud Logging with Container-Optimized OS](/container-optimized-os/docs/how-to/logging) instead.\n- CentOS 7\n- Rocky Linux 8\n- Rocky Linux 9\n- RHEL 7: rhel-7, rhel-7-9-sap-ha\n- RHEL 8: rhel-8, rhel-8-2-sap-ha, rhel-8-4-sap-ha, rhel-8-6-sap-ha\n- RHEL 9: rhel-9\n- Debian 10 (Buster)\n- Debian 11 (Bullseye)\n- Debian 12 (Bookworm)\n- Ubuntu 20.04 LTS (Focal Fossa): ubuntu-2004-lts, ubuntu-minimal-2004-lts\n- Ubuntu 22.04 LTS (Jammy Jellyfish): ubuntu-2204-lts, ubuntu-minimal-2204-lts\n- Ubuntu 23.10 (Mantic Minotaur): ubuntu-2310-amd64, ubuntu-minimal-2310-amd64\n- SLES 12: sles-12, sles-12-sp5-sap\n- SLES 15: sles-15, sles-15-sp2-sap, sles-15-sp3-sap, sles-15-sp4-sap, sles-15-sp5-sap\n- OpenSUSE Leap 15: opensuse-leap (opensuse-leap-15-3-*, opensuse-leap-15-4-*)The Ops Agent supports Compute Engine [Tau T2AArm](/compute/docs/general-purpose-machines) VM instances. The Ops Agent is supported for Arm VMs on the following OS images:\n- Debian 11 (Bullseye): Ops Agent version 2.36.0\n- Debian 12 (Bookworm): Ops Agent version 2.44.0\n- Ubuntu 20.04 LTS (Focal Fossa): Ops Agent version 2.39.0\n- Ubuntu 22.04 LTS (Jammy Jellyfish): Ops Agent version 2.42.0\n- Ubuntu 23.10 (Mantic Minotaur): Ops Agent version 2.44.0\n- RHEL 9: Ops Agent version 2.40.0\n- Rocky Linux 9: Ops Agent version 2.40.0\n- SLES 15: Ops Agent version 2.43.0\n- OpenSUSE Leap 15: Ops Agent version 2.43.0\nThe Ops Agent is supported on a subset of the images supported by Compute Engine. For more information about Compute Engine Arm VMs, see [Creating and starting an Arm VMinstance](/compute/docs/instances/create-arm-vm-instance) .\n**Note:** `n1-standard-1` virtual machines are too small to run Windows and the Ops Agent, so you must use a larger VM.\nThe agent supports the following Windows operating systems:\n- Windows Server: windows-2016, windows-2019, windows-2022\n- Windows Server Core: windows-2016-core, windows-2019-core, windows-20h2-core, windows-2022-core\n### Agent access requirements\nInstalling the agent requires access to the following DNS names:\n- Google Cloud package repository: `packages.cloud.google.com`\n- Google downloads subdomain: `dl.google.com`\nRunning the agent requires access to the following DNS names:\n- OAuth2 token server: `oauth2.googleapis.com`Earlier versions of the agent may require access to `www.googleapis.com` (full URL: `https://www.googleapis.com/oauth2/v3/token` ).If you're using an older version of the agent, it's recommended that you [upgrade your agent](/stackdriver/docs/solutions/agents/ops-agent/installation#upgrade) to the latest version.\n- Monitoring APIs: `monitoring.googleapis.com`\n- Logging APIs: `logging.googleapis.com`\nThe agent uses TCP ports within the VM for inter-process communication. The following ports, which don't need to be open externally, must be available to the agent on your VM:\n- 20201\n- 20202## Deprecation policy\nThe Ops Agent is subject to the [Agents deprecation policy](/stackdriver/docs/agent-deprecation-policy) .\nFor deprecation information for legacy features and versions, refer to [Google Cloud Observability deprecations](/stackdriver/docs/deprecations) .\n## Pricing\n- [Cloud Monitoring pricing](/stackdriver/pricing#monitoring-costs) \n- [Cloud Logging pricing](/stackdriver/pricing#logging-costs) \n- [Cloud Trace pricing](/stackdriver/pricing#trace-costs) \nTo collect OpenTelemetry Protocol (OTLP) traces, you must configure the agent to collect traces from an instrumented application; for more information, see [Collect (OTLP) traces with the Ops Agent](/trace/docs/otlp) .\n## What's next\n- To install the Ops Agent, see [Installing theOps Agent](/stackdriver/docs/solutions/agents/ops-agent/install-index) .", "guide": "Google Cloud Observability"}