{"title": "Cloud Architecture Center - Deploy an Active Directory forest on Compute Engine", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Cloud Architecture Center - Deploy an Active Directory forest on Compute Engine\nLast reviewed 2023-05-10 UTC\nThis document describes how to deploy an Active Directory forest on [Compute Engine](/compute) in a way that follows the best practices described in [Best practices for running Active Directory on Google Cloud](/managed-microsoft-ad/docs/best-practices#shared-vpc) .\nThis guide is intended for administrators and DevOps engineers. It assumes that you have a solid understanding of Active Directory and basic knowledge of Google Cloud networking and security.", "content": "## ArchitectureThe deployment consists of two projects:- A host project that contains a [Shared VPC](/vpc/docs/shared-vpc) network, a [private DNS forwarding zone](/dns/docs/zones/forwarding-zones) , and [firewall rules](/firewall/docs/firewalls) for Active Directory.\n- A service project that contains two domain controllers that are deployed across two zones.\nThis architecture lets you do the following:- Deploy additional Windows workloads in separate projects, and let them use the Shared VPC network and Active Directory forest.\n- Integrate the Active Directory forest with an existing on-premises forest to implement the [resource-forest pattern](/solutions/patterns-for-using-active-directory-in-a-hybrid-environment#resource_forest) .\n **Note:** This guide describes how to deploy an Active Directory forest for which you manage domain controllers yourself. Consider using Managed AD to deploy a fully-managed Active Directory forest unless some of your requirements cannot be accommodated by using Managed AD.## Before you beginTo follow the instructions in this guide, make sure you have the following:- Subnet CIDR ranges for two subnets:- **Domain controllers subnet** . This subnet contains the domain controllers. Using a dedicated subnet for domain controllers helps you distinguish domain controller traffic from other server traffic when you manage firewall rules or analyzing network logs.We recommend a subnet CIDR range that's sized `/28` or `/29` .\n- **Resource subnet** . This subnet contains servers and administrative workstations. Use a subnet CIDR range that's large enough to accommodate all the servers that you plan to deploy.\nMake sure that your subnets do not overlap with any on-premises subnets, and allow sufficient room for growth.\n- A DNS domain name and a NetBIOS domain name for the Active Directory forest root domain. For more information about choosing a name, see [Microsoft naming conventions](https://support.microsoft.com/en-us/help/909264/naming-conventions-in-active-directory-for-computers-domains-sites-and) .\n## Deploy a shared networkIn this section, you create a new project and use it to deploy a Shared VPC network. Later, you'll use this network to deploy the Active Directory domain controllers.\n### Create a projectYou now create a new project and use it to deploy a Shared VPC network.- In the Google Cloud console, on the project selector page,   select or [create a Google Cloud project](/resource-manager/docs/creating-managing-projects) . [Go to project selector](https://console.cloud.google.com/projectselector2/home/dashboard) \n- [Make sure that billing is enabled for your Google Cloud project](/billing/docs/how-to/verify-billing-enabled#console) .\n- Enable the Compute Engine and Cloud DNS APIs. [Enable the APIs](https://console.cloud.google.com/flows/enableapi?apiid=compute.googleapis.com,dns.googleapis.com) To get the permissions that you need to deploy a shared network,   ask your administrator to grant you the  following IAM roles on the project or parent folder:- [Compute Network Admin ](https://cloud.google.com/iam/docs/understanding-roles#compute.networkAdmin) (`roles/compute.networkAdmin`)\n- [Compute Security Admin ](https://cloud.google.com/iam/docs/understanding-roles#compute.securityAdmin) (`roles/compute.securityAdmin`)\n- [Compute Shared VPC Admin ](https://cloud.google.com/iam/docs/understanding-roles#compute.xpnAdmin) (`roles/compute.xpnAdmin`)\n- [DNS Administrator ](https://cloud.google.com/iam/docs/understanding-roles#dns.admin) (`roles/dns.admin`)\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYou might also be able to get  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .\n### Delete the default VPCBy default, Compute Engine creates a default network in each new project that you create. This network is configured in [auto mode](/vpc/docs/vpc#subnet-ranges) , which means a subnet is pre-allocated for each region and is automatically assigned a CIDR range.\nIn this section, you replace this VPC network with a [custom mode](/vpc/docs/vpc#subnet-ranges) network that contains two subnets and that uses custom CIDR ranges.- In the [Google Cloud console](https://console.cloud.google.com) , open [Cloud Shell](/shell/docs/overview) . [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) \n- Launch PowerShell:```\npwsh\n```\n- Configure the gcloud CLI to use the new project:```\ngcloud config set project PROJECT_ID\n```Replace with the ID of your project.\n- Delete all firewall rules that are associated with the default VPC:```\n$ProjectId = gcloud config get-value core/project\n& gcloud compute firewall-rules list `\n --filter \"network=default\" `\n --format \"value(name)\" |\n % { gcloud compute firewall-rules delete --quiet $_ --project $ProjectId }\n```\n- Delete the default VPC:```\n& gcloud compute networks list --format \"value(name)\" |\n % { gcloud compute networks delete $_ --quiet }\n```\n### Create a custom mode VPC networkYou now create a [custom mode](/vpc/docs/vpc#subnet-ranges) VPC network in the your VPC host project.- In PowerShell, initialize the following variables:```\n$VpcName = \"VPC_NAME\"\n$Region = \"REGION\"\n$SubnetRangeDomainControllers = \"DC_CIDR\"\n$SubnetRangeResources = \"RESOURCES_CIDR\"\n```Replace the following:- ``: the name of the VPC.\n- ``: the region to deploy the Active Directory domain controllers in.\n- ``: the subnet range to use for the domain controllers subnet.\n- ``: the subnet range to use for the resource subnet.\nExample:```\n$VpcName = \"ad\"\n$Region = \"us-central1\"\n$SubnetRangeDomainControllers = \"10.0.0.0/28\"\n$SubnetRangeResources = \"10.0.1.0/24\"\n```\n- Create the VPC and configure it to be used as a [Shared VPC](/vpc/docs/shared-vpc) network:```\n$ProjectId = gcloud config get-value core/project\n& gcloud compute networks create $VpcName --subnet-mode custom\n& gcloud compute shared-vpc enable $ProjectId\n```\n- Create the subnets and enable [Private Google Access](/vpc/docs/configure-private-google-access) so that Windows can [activate](/compute/docs/instances/windows/creating-managing-windows-instances#internal_ip_activation) without internet access.```\n& gcloud compute networks subnets create domain-controllers `\n --network $VpcName `\n --range $SubnetRangeDomainControllers `\n --region $Region `\n --enable-private-ip-google-access\n& gcloud compute networks subnets create resources `\n --network $VpcName `\n --range $SubnetRangeResources `\n --region $Region `\n --enable-private-ip-google-access\n```\n### Deploy subnets and firewall rulesYou now create firewall rules to allow Active Directory communication within the VPC.- Allow RDP connections to all VM instances through [Cloud IAP TCP forwarding](/iap/docs/using-tcp-forwarding#create-firewall-rule) :```\n& gcloud compute firewall-rules create allow-rdp-ingress-from-iap `\n --direction INGRESS `\n --action allow `\n --rules tcp:3389 `\n --enable-logging `\n --source-ranges 35.235.240.0/20 `\n --network $VpcName `\n --priority 10000\n```\n- Allow DNS queries from Cloud DNS to domain controllers.```\n& gcloud compute firewall-rules create allow-dns-ingress-from-clouddns `\n --direction INGRESS `\n --action=allow `\n --rules udp:53,tcp:53 `\n --enable-logging `\n --source-ranges 35.199.192.0/19 `\n --target-tags ad-domaincontroller `\n --network $VpcName `\n --priority 10000\n```This firewall rule is required in order for the private DNS forwarding zone to work.\n- Allow Active Directory replication between domain controllers:```\n& gcloud compute firewall-rules create allow-replication-between-addc `\n --direction INGRESS `\n --action allow `\n --rules \"icmp,tcp:53,udp:53,tcp:88,udp:88,udp:123,tcp:135,tcp:389,udp:389,tcp:445,udp:445,tcp:49152-65535\" `\n --enable-logging `\n --source-tags ad-domaincontroller `\n --target-tags ad-domaincontroller `\n --network $VpcName `\n --priority 10000\n```\n- Allow Active Directory logons from VMs that are in the resources subnet to domain controllers:```\n& gcloud compute firewall-rules create allow-logon-ingress-to-addc `\n --direction INGRESS `\n --action allow `\n --rules \"icmp,tcp:53,udp:53,tcp:88,udp:88,udp:123,tcp:135,tcp:389,udp:389,tcp:445,udp:445,tcp:464,udp:464,tcp:3268,udp:3268,tcp:9389,tcp:49152-65535\" `\n --enable-logging `\n --source-ranges $SubnetRangeResources `\n --target-tags ad-domaincontroller `\n --network $VpcName `\n --priority 10000\n```\n- If you plan to configure Secure LDAP, allow Secure LDAP connections from VMs that are in the resources subnet to domain controllers:```\n& gcloud compute firewall-rules create allow-ldaps-ingress-to-addc `\n --direction INGRESS `\n --action allow `\n --rules tcp:636 `\n --enable-logging `\n --source-ranges $SubnetRangeResources `\n --target-tags ad-domaincontroller `\n --network $VpcName `\n --priority 10000\n```You only need this firewall rule if you plan to configure Secure LDAP.\n- (Optional) Create a firewall rule that logs all failed access attempts. The logs can be useful for diagnosing connectivity problems, but they might produce a significant volume of log data.```\n& gcloud compute firewall-rules create deny-ingress-from-all `\n --direction INGRESS `\n --action deny `\n --rules tcp:0-65535,udp:0-65535 `\n --enable-logging `\n --source-ranges 0.0.0.0/0 `\n --network $VpcName `\n --priority 65000\n```\n## Deploy the Active Directory forestIn this section, you create a new service project and attach it to the Shared VPC host project that you created previously. You then use the service project to deploy a new Active Directory forest with two domain controllers.\n### Create a projectYou now create a new project and use it to deploy the Active Directory domain controller VMs.- In the Google Cloud console, on the project selector page,   select or [create a Google Cloud project](/resource-manager/docs/creating-managing-projects) . [Go to project selector](https://console.cloud.google.com/projectselector2/home/dashboard) \n- [Make sure that billing is enabled for your Google Cloud project](/billing/docs/how-to/verify-billing-enabled#console) .\n- Enable the Compute Engine and Secret Manager APIs. [Enable the APIs](https://console.cloud.google.com/flows/enableapi?apiid=compute.googleapis.com,secretmanager.googleapis.com) To get the permissions that you need to deploy the Active Directory forest,   ask your administrator to grant you the  following IAM roles on the project:- [Compute Instance Admin (v1) ](https://cloud.google.com/iam/docs/understanding-roles#compute.instanceAdmin.v1) (`roles/compute.instanceAdmin.v1`)\n- [Service Account Admin ](https://cloud.google.com/iam/docs/understanding-roles#iam.serviceAccountAdmin) (`roles/iam.serviceAccountAdmin`)\n- [Service Account User ](https://cloud.google.com/iam/docs/understanding-roles#iam.serviceAccountUser) (`roles/iam.serviceAccountUser`)\n- [Secret Manager Admin ](https://cloud.google.com/iam/docs/understanding-roles#secretmanager.admin) (`roles/secretmanager.admin`)\n- [IAP-secured Tunnel User ](https://cloud.google.com/iam/docs/understanding-roles#iap.tunnelResourceAccessor) (`roles/iap.tunnelResourceAccessor`)\nFor more information about granting roles, see [Manage access](/iam/docs/granting-changing-revoking-access) .\nYou might also be able to get  the required permissions through [custom  roles](/iam/docs/creating-custom-roles) or other [predefined  roles](/iam/docs/understanding-roles) .\n### Prepare the configurationThe next step is to prepare the configuration for the Active Directory deployment.- If you previously closed the PowerShell session, open [Cloud Shell](/shell/docs/overview) . [Activate Cloud Shell](https://console.cloud.google.com/?cloudshell=true) \n- Launch PowerShell:```\npwsh\n```\n- Configure the gcloud CLI to use the new project:```\ngcloud config set project DC_PROJECT_ID\n```Replace with the ID of your project.\n- Use PowerShell to create the following variables:```\n$AdDnsDomain = \"DNS_DOMAIN\"\n$AdNetbiosDomain = \"NETBIOS_DOMAIN\"\n$VpcProjectId = \"VPCHOST_PROJECT_ID\"\n$VpcName = \"VPC_NAME\"\n$Region = \"REGION\"\n$Zones = \"REGION-a\", \"REGION-b\"\n```Replace the following:- ``: the forest root domain name of the Active Directory forest, for example`cloud.example.com`.\n- ``: the NetBIOS domain name for the forest root domain, for example`CLOUD`.\n- ``: the project ID of the VPC host project that you created previously.\n- ``: Name of the Shared VPC network that you created previously.\n- ``: Region to deploy the Active Directory domain controllers in. Notice that the names of the zones are based on the names of the region that you specify. You can extend the VPC and your domain to cover additional regions at any time.\nExample:```\n$AdDnsDomain = \"cloud.example.com\"\n$AdNetbiosDomain = \"CLOUD\"\n$VpcProjectId = \"vpc-project-123\"\n$VpcName = \"ad\"\n$Region = \"us-west1\"\n$Zones = \"us-west1-a\", \"us-west1-b\"\n```\n### Create a private DNS forwarding zoneYou now reserve two static IP addresses for your domain controllers and create a [private DNS forwarding zone](/dns/docs/overview#dns-forwarding-zones) that forwards all DNS queries for the Active Directory domain to these IP addresses.- Attach the project to the Shared VPC network:```\n$ProjectId = gcloud config get-value core/project\n& gcloud compute shared-vpc associated-projects add $ProjectId --host-project $VpcProjectId\n```\n- Reserve two static internal IP addresses in the domain controllers subnet:```\n$AddressOfDc1 = gcloud compute addresses create dc-1 `\n --region $Region `\n --subnet \"projects/$VpcProjectId/regions/$Region/subnetworks/domain-controllers\" `\n --format value`(address`)\n$AddressOfDc2 = gcloud compute addresses create dc-2 `\n --region $Region `\n --subnet \"projects/$VpcProjectId/regions/$Region/subnetworks/domain-controllers\" `\n --format value`(address`)\n```\n- Create a Cloud DNS [private forwarding zone](/dns/docs/overview#dns-forwarding) in the VPC host project and configure the zone to forward DNS queries to the two reserved IP addresses:```\n& gcloud dns managed-zones create $AdDnsDomain.Replace(\".\", \"-\") `\n --project $VpcProjectId `\n --dns-name $AdDnsDomain `\n --description \"Active Directory forwarding zone\" `\n --networks $VpcName `\n --visibility private `\n --forwarding-targets \"$AddressOfDc1,$AddressOfDc2\"\n```\n### Create a DSRM passwordYou now define the [Directory Service Restore Mode](https://support.microsoft.com/en-us/help/322672/how-to-reset-the-directory-services-restore-mode-administrator-account) (DSRM) password and store it in [Secret Manager](/secret-manager) . You then grant the domain controller VMs temporary access to this secret so that they can use it to deploy the Active Directory forest.- Generate a random password and store it in a Secret Manager secret:```\n# Generate a random password.\n$DsrmPassword = [Guid]::NewGuid().ToString()+\"-\"+[Guid]::NewGuid().ToString()\n$TempFile = New-TemporaryFile\nSet-Content $TempFile \"$DsrmPassword\" -NoNewLine\n& gcloud secrets create ad-password --data-file $TempFile\nRemove-Item $TempFile\n```\n- Create the service account for the domain controller VM instances:```\n$DcServiceAccount = gcloud iam service-accounts create ad-domaincontroller `\n --display-name \"AD Domain Controller\" `\n --format \"value(email)\"\n```\n- Grant the service account permission to read the secret for the next hour:```\n$Expiry = [DateTime]::UtcNow.AddHours(1).ToString(\"o\")\n& gcloud secrets add-iam-policy-binding ad-password `\n --member=serviceAccount:$($DcServiceAccount) `\n --role=roles/secretmanager.secretAccessor `\n --condition=\"title=Expires after 1h,expression=request.time < timestamp('$Expiry')\"\n```\n### Deploy domain controllersYou now deploy two VM instances and create a new Active Directory forest and domain. To minimize the number of manual steps, you use [startup scripts](/compute/docs/startupscript) .- In PowerShell, run the following command to generate a startup script:```\n'\n$ErrorActionPreference = \"Stop\"\n#\n# Only run the script if the VM is not a domain controller already.\n#\nif ((Get-CimInstance -ClassName Win32_OperatingSystem).ProductType -eq 2) {\n exit\n}\n#\n# Read configuration from metadata.\n#\nImport-Module \"${Env:ProgramFiles}\\Google\\Compute Engine\\sysprep\\gce_base.psm1\"\n$ActiveDirectoryDnsDomain  = Get-MetaData -Property \"attributes/ActiveDirectoryDnsDomain\" -instance_only\n$ActiveDirectoryNetbiosDomain = Get-MetaData -Property \"attributes/ActiveDirectoryNetbiosDomain\" -instance_only\n$ActiveDirectoryFirstDc  = Get-MetaData -Property \"attributes/ActiveDirectoryFirstDc\" -instance_only\n$ProjectId     = Get-MetaData -Property \"project-id\" -project_only\n$Hostname      = Get-MetaData -Property \"hostname\" -instance_only\n$AccessToken     = (Get-MetaData -Property \"service-accounts/default/token\" | ConvertFrom-Json).access_token\n#\n# Read the DSRM password from secret manager.\n#\n$Secret = (Invoke-RestMethod `\n -Headers @{\n  \"Metadata-Flavor\" = \"Google\";\n  \"x-goog-user-project\" = $ProjectId;\n  \"Authorization\" = \"Bearer $AccessToken\"} `\n -Uri \"https://secretmanager.googleapis.com/v1/projects/$ProjectId/secrets/ad-password/versions/latest:access\")\n$DsrmPassword = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($Secret.payload.data))\n$DsrmPassword = ConvertTo-SecureString -AsPlainText $DsrmPassword -force\n#\n# Promote.\n#\nWrite-Host \"Setting administrator password...\"\nSet-LocalUser -Name Administrator -Password $DsrmPassword\nif ($ActiveDirectoryFirstDc -eq $env:COMPUTERNAME) {\n Write-Host \"Creating a new forest $ActiveDirectoryDnsDomain ($ActiveDirectoryNetbiosDomain)...\"\n Install-ADDSForest `\n  -DomainName $ActiveDirectoryDnsDomain `\n  -DomainNetbiosName $DomainNetbiosName `\n  -SafeModeAdministratorPassword $DsrmPassword `\n  -DomainMode Win2008R2 `\n  -ForestMode Win2008R2 `\n  -InstallDns `\n  -CreateDnsDelegation:$False `\n  -NoRebootOnCompletion:$True `\n  -Confirm:$false\n}\nelse {\n do {\n  Write-Host \"Waiting for domain to become available...\"\n  Start-Sleep -s 60\n  & ipconfig /flushdns | Out-Null\n  & nltest /dsgetdc:$ActiveDirectoryDnsDomain | Out-Null\n } while ($LASTEXITCODE -ne 0)\n Write-Host \"Adding DC to $ActiveDirectoryDnsDomain ($ActiveDirectoryNetbiosDomain)...\"\n Install-ADDSDomainController `\n  -DomainName $ActiveDirectoryDnsDomain `\n  -SafeModeAdministratorPassword $DsrmPassword `\n  -InstallDns `\n  -Credential (New-Object System.Management.Automation.PSCredential (\"Administrator@$ActiveDirectoryDnsDomain\", $DsrmPassword)) `\n  -NoRebootOnCompletion:$true `\n  -Confirm:$false\n}\n#\n# Configure DNS.\n#\nWrite-Host \"Configuring DNS settings...\"\nGet-Netadapter| Disable-NetAdapterBinding -ComponentID ms_tcpip6\nSet-DnsClientServerAddress `\n -InterfaceIndex (Get-NetAdapter -Name Ethernet).InterfaceIndex `\n -ServerAddresses 127.0.0.1\n#\n# Enable LSA protection.\n#\nNew-ItemProperty `\n -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\" `\n -Name \"RunAsPPL\" `\n -Value 1 `\n -PropertyType DWord\nWrite-Host \"Restarting to apply all settings...\"\nRestart-Computer\n' | Out-File dc-startup.ps1 -Encoding ASCII\n```The script does the following:- Read the DSRM password from Secret Manager.\n- Promote the VM to a domain controller.\n- Configure DNS settings so that each domain controller [uses the loopback address](/managed-microsoft-ad/docs/best-practices#use_cloud_dns_private_forwarding_zones) as a DNS server.\n- Disable IPv6.\n- Enable [LSA protection](https://learn.microsoft.com/en-us/windows-server/security/credentials-protection-and-management/configuring-additional-lsa-protection) .\n- Create a VM instance for the first domain controller:```\n$Subnet = \"projects/$VpcProjectId/regions/$Region/subnetworks/domain-controllers\"\n$Metadata = `\n \"ActiveDirectoryDnsDomain=$AdDnsDomain\",\n \"ActiveDirectoryNetbiosDomain=$AdNetbiosDomain\",\n \"ActiveDirectoryFirstDc=dc-1\",\n \"sysprep-specialize-script-ps1=Install-WindowsFeature AD-Domain-Services; Install-WindowsFeature DNS\",\n \"disable-account-manager=true\" -join \",\"\n& gcloud compute instances create dc-1 `\n --image-family windows-2022 `\n --image-project windows-cloud `\n --machine-type n2-standard-8 `\n --tags ad-domaincontroller `\n --metadata \"$Metadata\" `\n --metadata-from-file windows-startup-script-ps1=dc-startup.ps1 `\n --no-address `\n --network-interface \"no-address,private-network-ip=$AddressOfDc1,subnet=$Subnet\" `\n --service-account $DcServiceAccount `\n --scopes cloud-platform `\n --zone $Zones[0] `\n --shielded-integrity-monitoring `\n --shielded-secure-boot `\n --shielded-vtpm `\n --deletion-protection\n```This command does the following:- Create a [shielded](/shielded-vm) Windows Server 2022 VM.\n- Assign the`ad-domaincontroller`service account to the VM so that it can access the DSRM password.\n- Configure the guest agent to disable the account manager. For more information about configuring the guest agent, see [Enabling and disabling Windows instance features](/compute/docs/instances/windows/creating-managing-windows-instances#configure-windows-features) .\n- Let the VM install the Windows features`AD-Domain-Services`and`DNS`during the sysprep specialize phase.\n- Let the VM run the startup script that you created previously.\n- Create another VM instance for the second domain controller and place it in a different zone:```\n& gcloud compute instances create dc-2 `\n --image-family windows-2022 `\n --image-project windows-cloud `\n --machine-type n2-standard-8 `\n --tags ad-domaincontroller `\n --metadata \"$Metadata\" `\n --metadata-from-file windows-startup-script-ps1=dc-startup.ps1 `\n --no-address `\n --network-interface \"no-address,private-network-ip=$AddressOfDc2,subnet=$Subnet\" `\n --service-account $DcServiceAccount `\n --scopes cloud-platform `\n --zone $Zones[1] `\n --shielded-integrity-monitoring `\n --shielded-secure-boot `\n --shielded-vtpm `\n --deletion-protection\n```\n- Monitor the initialization process of the first domain controller by viewing its serial port output:```\n& gcloud compute instances tail-serial-port-output dc-1 --zone $Zones[0]\n```Wait about 10 minutes until you see the message `Restarting to apply all settings...` , then press `Ctrl+C` .\n- Monitor the initialization process of the second domain controller by viewing its serial port output:```\n& gcloud compute instances tail-serial-port-output dc-2 --zone $Zones[1]\n```Wait about 10 minutes until you see the message `Restarting to apply all settings...` , then press `Ctrl+C` .\nThe Active Directory forest and domain are now ready to use.\n### Connect to a domain controllerYou can now customize the Active Directory forest by connecting to one of the domain controllers.- In PowerShell, access the password for the `Administrator` user:```\ngcloud secrets versions access latest --secret ad-password\n```\n- [Connect to dc-1 by using RDP](/compute/docs/instances/connecting-to-windows) and log on as the `Administrator` user.Because the VM instance doesn't have a public IP addresses, you must connect through [Identity-Aware Proxy TCP forwarding](/iap/docs/tcp-forwarding-overview) .\n## What's next\n- Learn more about [patterns for using Active Directory in a hybrid environment](/architecture/patterns-for-using-active-directory-in-a-hybrid-environment) .\n- Configure [Active Directory for VMs to automatically join a domain](/solutions/configuring-active-directory-for-vms-to-automatically-join-the-domain) .\n- Learn more about [using Active Directory across firewalls](/managed-microsoft-ad/docs/firewalls) .", "guide": "Cloud Architecture Center"}