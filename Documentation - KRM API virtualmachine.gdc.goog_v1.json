{"title": "Documentation - KRM API virtualmachine.gdc.goog/v1", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - KRM API virtualmachine.gdc.goog/v1\n", "content": "## virtualmachine.gdc.goog/v1\nContains API Schema definitions for the virtualmachine.gdc.goog v1 API group.\n### AccessManagementConfig\nSpecifies the `AccessManagement` feature configuration in the guest environment.\n- [GuestEnvironment](#guestenvironment)\n| Field   | Description                                            |\n|:---------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| enable boolean | Specifies whether to enable the AccessManagement feature in the VM's guest environment. See the GuestEnvironment field description for information about the default value of the field. |\n### Compute\nSpecifies the CPU and memory attributes of a VM. You must specify `vcpus` and `memory` exclusively, specify only `VirtualMachineType` . Specifying `vcpus` without `memory` , or vice versa, creates an invalid combination. Specifying `virtualMachineType` while specifying either `vcpus` or `memory` , or both also creates an invalid combination.\n- [VirtualMachineSpec](#virtualmachinespec)\n| Field      | Description                                            |\n|:--------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| virtualMachineType string | Specifies the name of the referenced VirtualMachineType. The reference requires a predefined, or golden VirtualMachineType name.               |\n| vcpus integer    | Specifies the number of VCPUs that are available to the instance. Specify vcpus as an integer. This value must be a multiple of 2, with 2 as the minimum and 128 as the maximum allowed. |\n| memory Quantity   | Specifies the amount of physical memory available to the instance. memory must have a minimum value of 1Gi, and can be up to (including) 400Gi.           |\n### DiskAttachment\nRepresents the attachment relationship between the `VirtualMachine` and the `VirtualMachineDisk` .\n- [VirtualMachineSpec](#virtualmachinespec)\n| Field          | Description                                                                |\n|:-------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| boot boolean        | Specifies whether this disk is the boot device for the VirtualMachine. There must be exactly one disk marked as boot.                                      |\n| autoDelete boolean       | Specifies whether the disk should be deleted when the VirtualMachine is deleted. AutoDelete only applies while a disk is attached to a VirtualMachine. A VirtualMachineDisk lifecycle is decoupled from the VirtualMachine once it is no longer referenced in .spec.disks. |\n| virtualMachineDiskRef LocalObjectReference | Refers to a VirtualMachineDisk in the same namespace.                                                      |\n### DiskSource\nDefines the source for the disk. Specify exactly one of the supported sources to use to populate a disk.\n- [VirtualMachineDiskSpec](#virtualmachinediskspec)\n| Field     | Description           |\n|:----------------------|:----------------------------------------------------|\n| image ImageDiskSource | Denotes that the disk is created from a disk Image. |\n### Firmware\nSpecifies the VM initialization options at boot time.\n- [VirtualMachineSpec](#virtualmachinespec)\n| Field     | Description                                                                             |\n|:-------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| type string    | Specifies whether to boot via UEFI or BIOS. Defaults to bios.                                                                |\n| enableSecureBoot boolean | Enables or disables boot loader certificate verification. This is to assist in blocking modified or malicious code from loading. The default value is true if type is uefi. If type is set to bios, the default value is false and cannot be modified since boot loader certificate verification is not available for BIOS. |\n### GuestEnvironment\nSpecifies the guest environment configuration.\n- [VirtualMachineSpec](#virtualmachinespec)\n| Field         | Description         |\n|:----------------------------------------|:-----------------------------------------------|\n| accessManagement AccessManagementConfig | Specifies the access management configuration. |\n### ImageDiskSource\nReference to the Image Source.\n- [DiskSource](#disksource)\n| Field   | Description                                         |\n|:-----------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| name string  | The name of the VirtualMachineImage API object.                                |\n| namespace string | The namespace of the VirtualMachineImage API object. For golden images use vm-system. For images in the current project, set this as empty or use the current namespace value. |\n### ImageMetadataInput\nThe specification for the `VirtualMachineImage` .\n- [VirtualMachineImageImportSpec](#virtualmachineimageimportspec)\n| Field     | Description                                                                    |\n|:-------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| name string    | The image name, such as ubuntu-20.04-server-cloudimg.                                                          |\n| operatingSystem OSName | The name of the OS to which this image belongs, such as ubuntu-2004.                                                      |\n| minimumDiskSize Quantity | The minimum size of the disk to which the image can be applied. This specifies only the recommended size for future disks that are created from this image. It does not represent the size of the image itself. This field is required if the image is being imported from object storage. |\n### ImageObjectStorageSourceReference\nRepresents the object storage source from which to import an image.\n- [ImageSourceReference](#imagesourcereference)\n| Field       | Description                               |\n|:-------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------|\n| bucketRef LocalObjectReference | The name of the Bucket custom resource that holds this image. The Bucket custom resource must be in the same namespace as this object. |\n| objectName string    | The name of the image within the bucket.                        |\n### ImagePrepareOptions\nRepresents the options for image preparation.\n- [VirtualMachineImageImportSpec](#virtualmachineimageimportspec)\n| Field       | Description                |\n|:--------------------------------|:---------------------------------------------------------------------------|\n| installGuestEnvironment boolean | Specifies whether to install the GDCH guest environment. Defaults to true. |\n### ImageSourceReference\nPoints to the resource from which the image contents are populated. Only one source can be specified.\n- [VirtualMachineImageImportSpec](#virtualmachineimageimportspec)\n| Field           | Description                |\n|:------------------------------------------------|:---------------------------------------------------------------------------|\n| diskRef LocalObjectReference     | Specified when the image is populated from an existing VirtualMachineDisk. |\n| objectStorage ImageObjectStorageSourceReference | The bucket details for an image that is populated from object storage.  |\n### NetworkInterfaceStatus\nNetworkInterfaceStatus is the status for the NetworkInterface resource.\n- [NetworkStatus](#networkstatus)\n| Field     | Description                    |\n|:-------------------------|:-------------------------------------------------------------------------------------------|\n| name string    | Name denotes the name of the network interface exposed inside the VM, e.g. \"eth0\", \"eth1\". |\n| ipAddresses string array | IpAddresses are the IP addresses assigned to the NetworkInterface.       |\n| macAddress string  | MacAddress is the MAC address assigned to the NetworkInterface.       |\n### NetworkStatus\nNetworkStatus is the status for the network of the Virtual Machine.\n- [VirtualMachineStatus](#virtualmachinestatus)\n| Field         | Description |\n|:----------------------------------------|--------------:|\n| interfaces NetworkInterfaceStatus array |   nan |\n### OSName\n`string` The list of valid OSes for use.\n- [ImageMetadataInput](#imagemetadatainput) - [OperatingSystemSpec](#operatingsystemspec)\n### OperatingSystemSpec\nContains the operating system information of an image.\n- [VirtualMachineImageSpec](#virtualmachineimagespec)\n| Field  | Description               |\n|:------------|:---------------------------------------------------------------------|\n| name OSName | The name of the OS to which this image belongs, e.g. \"windows-2016\". |\n### SSHSpec\nStores the ssh credentials used to establish the connection.\n- [VirtualMachineAccessRequestSpec](#virtualmachineaccessrequestspec)\n| Field  | Description                              |\n|:-------------|:---------------------------------------------------------------------------------------------------------------------------------|\n| key string | Specifies the public key to program for SSH access.                    |\n| ttl Duration | Specifies the length of time for which this key is valid, expressed in hours, minutes and seconds. The default value is 24h0m0s. |\n### ServicePort\nServicePort contains information on service's port.\n- [VirtualMachineExternalAccessSpec](#virtualmachineexternalaccessspec)\n| Field    | Description              |\n|:------------------|:------------------------------------------------------------------|\n| name string  | The name of this port within the service.       |\n| protocol Protocol | The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". |\n| port integer  | The port that will be exposed by this service.     |\n### StartupScript\nDefines a startup script for a VM.\n- [VirtualMachineSpec](#virtualmachinespec)\n| Field        | Description                              |\n|:-------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------|\n| name string       | Specifies the name of a script. Must match the regex [\\w][\\w\\-.]* and be at most 255 characters.        |\n| scriptSecretRef LocalObjectReference | References a Kubernetes secret that contains the script. The ScriptSecretRef name must match the name of the Kubernetes secret. |\n### VirtualMachine\nRepresents the Virtual Machine's configuration and state.\n- [VirtualMachineList](#virtualmachinelist)\n| Field      | Description             |\n|:----------------------------|:--------------------------------------------------------------|\n| apiVersion string   | virtualmachine.gdc.goog/v1         |\n| kind string     | VirtualMachine            |\n| metadata ObjectMeta   | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineSpec  | nan               |\n| status VirtualMachineStatus | nan               |\n### VirtualMachineAccessRequest\nRepresents an access request to a VM.\n- [VirtualMachineAccessRequestList](#virtualmachineaccessrequestlist)\n| Field         | Description             |\n|:-----------------------------------------|:--------------------------------------------------------------|\n| apiVersion string      | virtualmachine.gdc.goog/v1         |\n| kind string        | VirtualMachineAccessRequest         |\n| metadata ObjectMeta      | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineAccessRequestSpec  | nan               |\n| status VirtualMachineAccessRequestStatus | nan               |\n### VirtualMachineAccessRequestList\nContains a list of VirtualMachineAccessRequest objects.\n| Field         | Description             |\n|:----------------------------------------|:--------------------------------------------------------------|\n| apiVersion string      | virtualmachine.gdc.goog/v1         |\n| kind string        | VirtualMachineAccessRequestList        |\n| metadata ListMeta      | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineAccessRequest array | nan               |\n### VirtualMachineAccessRequestSpec\nDefines the `VirtualMachineAccessRequest` specification.\n- [VirtualMachineAccessRequest](#virtualmachineaccessrequest)\n| Field  | Description          |\n|:------------|:-------------------------------------------------|\n| vm string | Specifies the name of the VM to access.   |\n| user string | Specifies the username for accessing the VM.  |\n| ssh SSHSpec | Holds the ssh credentials used to access the VM. |\n### VirtualMachineAccessRequestState\n`string` State of `VirtualMachineAccessRequest` .\n- [VirtualMachineAccessRequestStatus](#virtualmachineaccessrequeststatus)\n### VirtualMachineAccessRequestStatus\nDescribes the status of the VirtualMachineAccessRequest.\n- [VirtualMachineAccessRequest](#virtualmachineaccessrequest)\n| Field         | Description           |\n|:---------------------------------------|:----------------------------------------------------|\n| state VirtualMachineAccessRequestState | Specifies the state of VirtualMachineAccessRequest. |\n| reason string       | Indicates the reason for the current status.  |\n| message string       | Provides additional context for the current status. |\n| processedAt Time      | Specifies the time when the request was processed. |\n### VirtualMachineAttachment\nContains information about which `VirtualMachine` this `VirtualMachineDisk` is attached to, and how it is attached.\n- [VirtualMachineDiskStatus](#virtualmachinediskstatus)\n| Field      | Description                                                        |\n|:-----------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| nameRef LocalObjectReference | The name of an attached VirtualMachine.                                                 |\n| uid UID      | The UID of the attached VirtualMachine.                                                 |\n| autoDelete boolean   | Reflective of how the VirtualMachine attaches this disk. The disk is deleted when all VMs attached have autoDelete set to true and all VMs are deleted. If a minimum of one VM has autoDelete set to false, the disk will not be deleted. |\n### VirtualMachineBackup\nThe Schema for the VirtualMachineBackups API.\n- [VirtualMachineBackupList](#virtualmachinebackuplist)\n| Field        | Description             |\n|:----------------------------------|:--------------------------------------------------------------|\n| apiVersion string     | virtualmachine.gdc.goog/v1         |\n| kind string      | VirtualMachineBackup           |\n| metadata ObjectMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineBackupSpec  | nan               |\n| status VirtualMachineBackupStatus | nan               |\n### VirtualMachineBackupConfig\nContains configuration details for executing the backup, including scope, location, and volume backup strategy.\n- [VirtualMachineBackupPlanSpec](#virtualmachinebackupplanspec) - [VirtualMachineBackupSpec](#virtualmachinebackupspec)\n| Field         | Description                                |\n|:--------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------|\n| backupRepository string    | Identifies the secondary storage location for this VirtualMachineBackupPlan.               |\n| backupScope VirtualMachineBackupScope | Specifies the resource(s) covered by this VirtualMachineBackupPlan.                  |\n| volumeStrategy VolumeStrategy   | Declares the strategy to use for backing-up volumes; for example, use a local snapshot vs. using remote or provisioner-specific backup. |\n### VirtualMachineBackupList\nContains a list of VirtualMachineBackup.\n| Field       | Description             |\n|:---------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | virtualmachine.gdc.goog/v1         |\n| kind string      | VirtualMachineBackupList          |\n| metadata ListMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineBackup array | nan               |\n### VirtualMachineBackupPlan\nThe Schema for the VirtualMachineBackupPlans API.\n- [VirtualMachineBackupPlanList](#virtualmachinebackupplanlist)\n| Field         | Description             |\n|:--------------------------------------|:--------------------------------------------------------------|\n| apiVersion string      | virtualmachine.gdc.goog/v1         |\n| kind string       | VirtualMachineBackupPlan          |\n| metadata ObjectMeta     | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineBackupPlanSpec  | nan               |\n| status VirtualMachineBackupPlanStatus | nan               |\n### VirtualMachineBackupPlanList\nContains a list of VirtualMachineBackupPlan.\n| Field        | Description             |\n|:-------------------------------------|:--------------------------------------------------------------|\n| apiVersion string     | virtualmachine.gdc.goog/v1         |\n| kind string       | VirtualMachineBackupPlanList         |\n| metadata ListMeta     | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineBackupPlan array | nan               |\n### VirtualMachineBackupPlanSpec\nDefines a `VirtualMachineBackupPlan` which provides instructions for creating an underlying `BackupPlan` resource and `ProtectedApplication` to perform backups.\n- [VirtualMachineBackupPlan](#virtualmachinebackupplan)\n| Field         | Description          |\n|:----------------------------------------|:---------------------------------------------------|\n| backupConfig VirtualMachineBackupConfig | Defines the configuration and scope of the backup. |\n### VirtualMachineBackupPlanStatus\nDefines the observed state of `VirtualMachineBackupPlan` .\n- [VirtualMachineBackupPlan](#virtualmachinebackupplan)\n| Field        | Description                  |\n|:----------------------------------|:---------------------------------------------------------------------------------|\n| backupPlan string     | The name of the underlying backup plan managed by this VirtualMachineBackupPlan. |\n| backupPlanStatus BackupPlanStatus | The embedded status of the underlying backup plan.        |\n### VirtualMachineBackupPlanTemplate\nThe `VirtualMachineBackupPlanTemplates` API schema.\n- [VirtualMachineBackupPlanTemplateList](#virtualmachinebackupplantemplatelist)\n| Field           | Description             |\n|:----------------------------------------------|:--------------------------------------------------------------|\n| apiVersion string        | virtualmachine.gdc.goog/v1         |\n| kind string         | VirtualMachineBackupPlanTemplate        |\n| metadata ObjectMeta       | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineBackupPlanTemplateSpec  | nan               |\n| status VirtualMachineBackupPlanTemplateStatus | nan               |\n### VirtualMachineBackupPlanTemplateList\nContains a list of VirtualMachineBackupPlanTemplate.\n| Field          | Description             |\n|:---------------------------------------------|:--------------------------------------------------------------|\n| apiVersion string       | virtualmachine.gdc.goog/v1         |\n| kind string         | VirtualMachineBackupPlanTemplateList       |\n| metadata ListMeta       | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineBackupPlanTemplate array | nan               |\n### VirtualMachineBackupPlanTemplateSpec\nDefines the template that the `VirtualMachineBackupPlans` use for deriving common parameters.\n- [VirtualMachineBackupPlanTemplate](#virtualmachinebackupplantemplate)\n| Field     | Description        |\n|:------------------------|:-----------------------------------------|\n| backupRepository string | The name of a BackupRepository resource. |\n### VirtualMachineBackupRequest\nThe Schema for the VirtualMachineBackupRequests API.\n- [VirtualMachineBackupRequestList](#virtualmachinebackuprequestlist)\n| Field         | Description             |\n|:-----------------------------------------|:--------------------------------------------------------------|\n| apiVersion string      | virtualmachine.gdc.goog/v1         |\n| kind string        | VirtualMachineBackupRequest         |\n| metadata ObjectMeta      | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineBackupRequestSpec  | nan               |\n| status VirtualMachineBackupRequestStatus | nan               |\n### VirtualMachineBackupRequestList\nContains a list of VirtualMachineBackupRequest.\n| Field         | Description             |\n|:----------------------------------------|:--------------------------------------------------------------|\n| apiVersion string      | virtualmachine.gdc.goog/v1         |\n| kind string        | VirtualMachineBackupRequestList        |\n| metadata ListMeta      | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineBackupRequest array | nan               |\n### VirtualMachineBackupRequestSpec\nDefines the desired state of `VirtualMachineBackupRequest` .\n- [VirtualMachineBackupRequest](#virtualmachinebackuprequest)\n| Field         | Description                                                                               |\n|:----------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| virtualMachineBackupPlanTemplate string | The name of the VirtualMachineBackupPlanTemplate resource used to generate a VirtualMachineBackupPlan. Re-uses the pre-existing VirtualMachineBackupPlan made from this template, if there is one. The VirtualMachineBackupPlanTemplate must live in the same namespace as this request.            |\n| virtualMachine string     | The VirtualMachine that is being backed up. This is used with the VirtualMachineBackupPlanTemplate to automatically generate a VirtualMachineBackupPlan if one does not exist. Specify only one of either VirtualMachine OR VirtualMachineDisk. When virtualMachine is specified, the backup strategy is always ProvisionerSpecific. |\n| virtualMachineDisk string    | The VirtualMachineDisk being backed-up. This is used with VirtualMachineBackupPlanTemplate to automatically generate a VirtualMachineBackupPlan if one does not exist. When virtualMachineDisk is specified to be backed-up, the backup strategy is SnapshotOnly. Specify only one of either VirtualMachine OR VirtualMachineDisk. |\n| virtualMachineBackupName string   | The name of the VirtualMachineBackup to be created. The backup is always created in the same namespace as the request.                                                    |\n### VirtualMachineBackupRequestStatus\nDefines the observed state of VirtualMachineBackupRequest.\n- [VirtualMachineBackupRequest](#virtualmachinebackuprequest)\n| Field     | Description              |\n|:-------------------------|:----------------------------------------------------------------|\n| timeToExpire Time  | When this ephemeral resource will be deleted.     |\n| statusField StatusFields | Describes the observed state of the VirtualMachineBackupRequest |\n### VirtualMachineBackupScope\nDefines the scope of resources for the `VirtualMachineBackupPlan` to capture.\n- [VirtualMachineBackupConfig](#virtualmachinebackupconfig)\n| Field               | Description              |\n|:---------------------------------------------------------------|:------------------------------------------------------------------|\n| selectedVirtualMachines VirtualMachineResourceConfig array  | Specifies the VMs for the VirtualMachineBackupPlan to capture. |\n| selectedVirtualMachineDisks VirtualMachineResourceConfig array | Specifies the disks for this VirtualMachineBackupPlan to capture. |\n### VirtualMachineBackupSpec\nDefines the desired state of `VirtualMachineBackup` .\n- [VirtualMachineBackup](#virtualmachinebackup)\n| Field         | Description                                           |\n|:----------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| virtualMachineBackupPlan string   | The name of the VirtualMachineBackupPlan from which this VirtualMachineBackup was created. This VirtualMachineBackupPlan exists in the same namespace as the VirtualMachineBackupPlan. |\n| backupConfig VirtualMachineBackupConfig | Defines the configuration and scope of the backup.                                  |\n### VirtualMachineBackupStatus\nDefines the observed state of a `VirtualMachineBackup` .\n- [VirtualMachineBackup](#virtualmachinebackup)\n| Field         | Description                                                     |\n|:-----------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| backup string       | The name of the underlying backup which this VirtualMachineBackup references. The backup must be in the same namespace as this VM backup.                      |\n| backupStatus BackupStatus    | The status of the underlying backup which this VirtualMachineBackup references.                                    |\n| backedUpVirtualMachines string array  | Lists the names of all VMs that are included in this backup.                                         |\n| backedUpVirtualMachineDisks string array | Lists the names of all the VM disks that are included in this backup. If this backup is a disk snapshot, this is a list of VM disks that you provide. If this is a VM backup, it is the list of the disks which back that VM. |\n### VirtualMachineDeleteBackupRequest\nThe Schema for the `VirtualMachineDeleteBackupRequests` API.\n- [VirtualMachineDeleteBackupRequestList](#virtualmachinedeletebackuprequestlist)\n| Field           | Description             |\n|:-----------------------------------------------|:--------------------------------------------------------------|\n| apiVersion string        | virtualmachine.gdc.goog/v1         |\n| kind string         | VirtualMachineDeleteBackupRequest        |\n| metadata ObjectMeta       | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineDeleteBackupRequestSpec  | nan               |\n| status VirtualMachineDeleteBackupRequestStatus | nan               |\n### VirtualMachineDeleteBackupRequestList\nContains a list of `VirtualMachineDeleteBackupRequest` .\n| Field           | Description             |\n|:----------------------------------------------|:--------------------------------------------------------------|\n| apiVersion string        | virtualmachine.gdc.goog/v1         |\n| kind string         | VirtualMachineDeleteBackupRequestList       |\n| metadata ListMeta        | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineDeleteBackupRequest array | nan               |\n### VirtualMachineDeleteBackupRequestSpec\nDefines the desired state of `VirtualMachineDeleteBackupRequest` .\n- [VirtualMachineDeleteBackupRequest](#virtualmachinedeletebackuprequest)\n| Field          | Description                           |\n|:---------------------------------------------|:--------------------------------------------------------------------------------------------------------------------|\n| virtualMachineBackupRef LocalObjectReference | The name of the VirtualMachineBackup to delete. This request is always created in the same namespace as the backup. |\n### VirtualMachineDeleteBackupRequestStatus\nDefines the observed state of `VirtualMachineDeleteBackupRequest` .\n- [VirtualMachineDeleteBackupRequest](#virtualmachinedeletebackuprequest)\n| Field     | Description               |\n|:-------------------------|:-----------------------------------------------------------------------|\n| timeToExpire Time  | Defines the time to delete this ephemeral resource.     |\n| statusField StatusFields | Describes the observed state of the VirtualMachineDeleteBackupRequest. |\n### VirtualMachineDisk\nSchema for the virtualmachinedisks API.\n- [VirtualMachineDiskList](#virtualmachinedisklist)\n| Field       | Description             |\n|:--------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | virtualmachine.gdc.goog/v1         |\n| kind string      | VirtualMachineDisk           |\n| metadata ObjectMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineDiskSpec  | nan               |\n| status VirtualMachineDiskStatus | nan               |\n### VirtualMachineDiskList\nContains a list of VirtualMachineDisk.\n| Field       | Description             |\n|:-------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | virtualmachine.gdc.goog/v1         |\n| kind string     | VirtualMachineDiskList          |\n| metadata ListMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineDisk array | nan               |\n### VirtualMachineDiskSpec\nDefines the desired state of `VirtualMachineDisk` .\n- [VirtualMachineDisk](#virtualmachinedisk)\n| Field    | Description                                                                                     |\n|:------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| source DiskSource | Specifies the source from which the disk contents are populated. If this field is omitted a blank disk gets provisioned.                                                          |\n| size Quantity  | Specifies the size of the disk: 5GiB, 600MiB, and so on. Size must be specified for a blank disk. For disks from other sources, the size depends on the source. For image source, the size is optional and is inferred as being equivalent to Image.spec.minimumDiskSize. If the size is specified it has to be greater than the Image.spec.minimumDiskSize. |\n### VirtualMachineDiskStatus\nDefines the observed state of VirtualMachineDisk.\n- [VirtualMachineDisk](#virtualmachinedisk)\n| Field             | Description                                   |\n|:---------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------|\n| phase VirtualMachineDiskPhase       | The current phase of the Disk.                              |\n| progress VirtualMachineDiskProgress      | Progress is the current progress of the Disk provision. Value is between 0 and 100 inclusive, N/A if not available.         |\n| size Quantity           | The current size of the disk.                              |\n| conditions Condition array        | The latest observations of the VirtualMachineDisk state.                       |\n| virtualMachineAttachments VirtualMachineAttachment array | The list of VirtualMachine instances to which the VirtualMachineDisk is attached.                 |\n| provisionTime Duration         | The time taken to provision the VirtualMachineDisk and to reach a Ready state. For example, this is the time spent downloading an image, and so on. |\n### VirtualMachineExternalAccess\nRepresents the request of accessing the external VRF for a VirtualMachine.\n- [VirtualMachineExternalAccessList](#virtualmachineexternalaccesslist)\n| Field          | Description             |\n|:------------------------------------------|:--------------------------------------------------------------|\n| apiVersion string       | virtualmachine.gdc.goog/v1         |\n| kind string        | VirtualMachineExternalAccess         |\n| metadata ObjectMeta      | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineExternalAccessSpec  | nan               |\n| status VirtualMachineExternalAccessStatus | nan               |\n### VirtualMachineExternalAccessList\n| Field         | Description             |\n|:-----------------------------------------|:--------------------------------------------------------------|\n| apiVersion string      | virtualmachine.gdc.goog/v1         |\n| kind string        | VirtualMachineExternalAccessList        |\n| metadata ListMeta      | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineExternalAccess array | nan               |\n### VirtualMachineExternalAccessSpec\nDefines the specification of the `VirtualMachineExternalAccess` object.\n- [VirtualMachineExternalAccess](#virtualmachineexternalaccess)\n| Field     | Description                |\n|:------------------------|:--------------------------------------------------------------------------|\n| enabled boolean   | Specifies whether the external vrf is accessible for the VirtualMachine. |\n| ports ServicePort array | The list of ports that are exposed by the VirtualMachine ingress service. |\n### VirtualMachineExternalAccessStatus\nDefines the observed state of the `VirtualMachineExternalAccess` object.\n- [VirtualMachineExternalAccess](#virtualmachineexternalaccess)\n| Field      | Description                    |\n|:---------------------------|:-----------------------------------------------------------------------------------------|\n| ingressIP string   | IngressIP specifies the IP address on the VirtualMachine ingress service.    |\n| egressIP string   | EgressIP specifies the IP address on the egress NAT which is used by the VirtualMachine. |\n| conditions Condition array | Details of observed state.                |\n### VirtualMachineImage\nRepresents the disk image that can be used on virtual machine.\n- [VirtualMachineImageList](#virtualmachineimagelist)\n| Field       | Description             |\n|:---------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | virtualmachine.gdc.goog/v1         |\n| kind string      | VirtualMachineImage           |\n| metadata ObjectMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineImageSpec  | nan               |\n| status VirtualMachineImageStatus | nan               |\n### VirtualMachineImageImport\nRepresents the operation to import and convert VM resources that contain data; for example, to import and convert 'VirtualMachineDisk `into a` VirtualMachineImage`.\n- [VirtualMachineImageImportList](#virtualmachineimageimportlist)\n| Field         | Description             |\n|:---------------------------------------|:--------------------------------------------------------------|\n| apiVersion string      | virtualmachine.gdc.goog/v1         |\n| kind string       | VirtualMachineImageImport          |\n| metadata ObjectMeta     | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineImageImportSpec  | nan               |\n| status VirtualMachineImageImportStatus | nan               |\n### VirtualMachineImageImportList\nA list of `VirtualMachineImageImport` objects.\n| Field         | Description             |\n|:--------------------------------------|:--------------------------------------------------------------|\n| apiVersion string      | virtualmachine.gdc.goog/v1         |\n| kind string       | VirtualMachineImageImportList         |\n| metadata ListMeta      | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineImageImport array | nan               |\n### VirtualMachineImageImportSpec\nSpecifies the source and metadata for the image that you want to create.\n- [VirtualMachineImageImport](#virtualmachineimageimport)\n| Field        | Description                                               |\n|:-----------------------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| source ImageSourceReference  | Refers to the resource from which contents are imported. The source must be from the same namespace.                         |\n| imageMetadata ImageMetadataInput | Specifies the properties of the VirtualMachineImage you want to create.                                |\n| prepareImage boolean    | Specifies whether to prepare this image for GDCH with a value to, for example, install the required packages. If this is not specified, preparation occurs only if the image is from object storage. |\n| prepareOptions ImagePrepareOptions | These are the options for image preparation. This is only valid when prepareImage is true.                           |\n### VirtualMachineImageImportStatus\nProvides the image import status.\n- [VirtualMachineImageImport](#virtualmachineimageimport)\n| Field      | Description                           |\n|:---------------------------|:---------------------------------------------------------------------------------------------------------------------|\n| conditions Condition array | Provide the Ready status of the import progress.                  |\n| imageName string   | Refers to the VirtualMachineImage once successfully created. The image is in the same namespace as the image import. |\n### VirtualMachineImageList\nContains a list of `VirtualMachineImage` objects.\n| Field       | Description             |\n|:--------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | virtualmachine.gdc.goog/v1         |\n| kind string      | VirtualMachineImageList          |\n| metadata ListMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineImage array | nan               |\n### VirtualMachineImageSpec\nDefines the specification of the virtual machine image.\n- [VirtualMachineImage](#virtualmachineimage)\n| Field        | Description                                                 |\n|:------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| operatingSystem OperatingSystemSpec | The details of the OS.                                              |\n| minimumDiskSize Quantity   | The minimum size of the disk the image can be applied to. This specifies only the recommended size for the future disks that are created from this image. It does not represent the size of the Image itself. |\n### VirtualMachineImageStatus\nContains the observed state of the `VirtualMachineImage` object.\n- [VirtualMachineImage](#virtualmachineimage)\n| Field      | Description         |\n|:---------------------------|:--------------------------------------------|\n| conditions Condition array | The condition of the virtual machine image. |\n### VirtualMachineList\nContains a list of `VirtualMachine` objects.\n| Field      | Description             |\n|:---------------------------|:--------------------------------------------------------------|\n| apiVersion string   | virtualmachine.gdc.goog/v1         |\n| kind string    | VirtualMachineList           |\n| metadata ListMeta   | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachine array | nan               |\n### VirtualMachinePasswordResetRequest\nRepresents a password reset request for a given VM.\n- [VirtualMachinePasswordResetRequestList](#virtualmachinepasswordresetrequestlist)\n| Field           | Description             |\n|:------------------------------------------------|:--------------------------------------------------------------|\n| apiVersion string        | virtualmachine.gdc.goog/v1         |\n| kind string          | VirtualMachinePasswordResetRequest       |\n| metadata ObjectMeta        | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachinePasswordResetRequestSpec  | nan               |\n| status VirtualMachinePasswordResetRequestStatus | nan               |\n### VirtualMachinePasswordResetRequestList\nContains a list of `VirtualMachinePasswordResetRequest` resources.\n| Field           | Description             |\n|:-----------------------------------------------|:--------------------------------------------------------------|\n| apiVersion string        | virtualmachine.gdc.goog/v1         |\n| kind string         | VirtualMachinePasswordResetRequestList      |\n| metadata ListMeta        | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachinePasswordResetRequest array | nan               |\n### VirtualMachinePasswordResetRequestSpec\nDefines the `VirtualMachinePasswordResetRequest` specification.\n- [VirtualMachinePasswordResetRequest](#virtualmachinepasswordresetrequest)\n| Field   | Description                                     |\n|:-----------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| vmName string | The name of the VM to request a password reset. This field is immutable and cannot be updated after creating a password reset request.      |\n| user string  | The name of the user to perform the password reset for a specified VM. This field is immutable and cannot be updated after creating a password reset request. |\n| publicKey string | The public key to encrypt the new password for a VM. This field is immutable and cannot be updated after creating a password reset request.     |\n### VirtualMachinePasswordResetRequestState\n`string` Defines the state of a `VirtualMachinePasswordResetRequest` resource.\n- [VirtualMachinePasswordResetRequestStatus](#virtualmachinepasswordresetrequeststatus)\n### VirtualMachinePasswordResetRequestStatus\nDescribes the status of the `VirtualMachinePasswordResetRequest` resource.\n- [VirtualMachinePasswordResetRequest](#virtualmachinepasswordresetrequest)\n| Field           | Description                                                |\n|:----------------------------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| state VirtualMachinePasswordResetRequestState | The state of the VirtualMachinePasswordResetRequest resource.                                   |\n| reason string         | The reason for the current status of the resource.                                      |\n| message string        | A field that provides additional information for the current status.                                 |\n| processedAt Time        | A field that specifies the time when the request processed.                                    |\n| encryptedPassword string      | The new password encrypted using the public key provided in the request and encoded using base64. To decrypt the password, use base64 to decode the string and decrypt the result using RSA decryption. |\n### VirtualMachineProvisionTime\nTracks the VirtualMachine provision time.\n- [VirtualMachineStatus](#virtualmachinestatus)\n| Field      | Description                             |\n|:---------------------------|:----------------------------------------------------------------------------------------------------------------------------|\n| initProvisionTime Duration | Time taken for the first VM provision. i.e. Time taken from the object being created till the VM is in running status.  |\n| lastProvisionTime Duration | Time taken for the most recent VM provision. It can be equal to InitProvisionTime if the VM is only being provisioned once. |\n### VirtualMachineResourceConfig\nSpecifies a VM resource and additional parameters for backing up that resource.\n- [VirtualMachineBackupScope](#virtualmachinebackupscope)\n| Field    | Description                    |\n|:--------------------|:-------------------------------------------------------------------------------------------|\n| resourceName string | The name of the resource being backed up. It must exist in the same namespace as the plan. |\n### VirtualMachineRestore\nThe Schema for the VirtualMachineRestores API.\n- [VirtualMachineRestoreList](#virtualmachinerestorelist)\n| Field        | Description             |\n|:-----------------------------------|:--------------------------------------------------------------|\n| apiVersion string     | virtualmachine.gdc.goog/v1         |\n| kind string      | VirtualMachineRestore           |\n| metadata ObjectMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineRestoreSpec  | nan               |\n| status VirtualMachineRestoreStatus | nan               |\n### VirtualMachineRestoreList\nContains a list of VirtualMachineRestore.\n| Field        | Description             |\n|:----------------------------------|:--------------------------------------------------------------|\n| apiVersion string     | virtualmachine.gdc.goog/v1         |\n| kind string      | VirtualMachineRestoreList          |\n| metadata ListMeta     | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineRestore array | nan               |\n### VirtualMachineRestoreRequest\nThe Schema for the VirtualMachineRestoreRequests API.\n- [VirtualMachineRestoreRequestList](#virtualmachinerestorerequestlist)\n| Field          | Description             |\n|:------------------------------------------|:--------------------------------------------------------------|\n| apiVersion string       | virtualmachine.gdc.goog/v1         |\n| kind string        | VirtualMachineRestoreRequest         |\n| metadata ObjectMeta      | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineRestoreRequestSpec  | nan               |\n| status VirtualMachineRestoreRequestStatus | nan               |\n### VirtualMachineRestoreRequestList\nContains a list of VirtualMachineRestoreRequest.\n| Field         | Description             |\n|:-----------------------------------------|:--------------------------------------------------------------|\n| apiVersion string      | virtualmachine.gdc.goog/v1         |\n| kind string        | VirtualMachineRestoreRequestList        |\n| metadata ListMeta      | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineRestoreRequest array | nan               |\n### VirtualMachineRestoreRequestSpec\nDefines the desired state of `VirtualMachineRestoreRequest` .\n- [VirtualMachineRestoreRequest](#virtualmachinerestorerequest)\n| Field        | Description                                                     |\n|:-----------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| virtualMachineBackup string  | The name of the VM backup that to restore. The VirtualMachineBackup resides in the same namespace as does this VirtualMachineRestoreRequest.                     |\n| restoreName string     | The name given to the VirtualMachineRestore resource created.                                         |\n| restoredResourceName string  | The name given to the resource which is restored by VirtualMachineBackup. If the resource is a VM, then the name is that of the restored VM. If the resource is a VM disk, then the name is the that of the restored VM disk. |\n| restoredResourceDescription string | The description given to the newly created resource.                                           |\n### VirtualMachineRestoreRequestStatus\nDefines the observed state of `VirtualMachineRestoreRequest` .\n- [VirtualMachineRestoreRequest](#virtualmachinerestorerequest)\n| Field     | Description              |\n|:-------------------------|:------------------------------------------------------------------|\n| timeToExpire Time  | When this ephemeral resource will be deleted.      |\n| statusField StatusFields | Describes the observed state of the VirtualMachineRestoreRequest. |\n### VirtualMachineRestoreSpec\nDefines the desired state of `VirtualMachineRestore` .\n- [VirtualMachineRestore](#virtualmachinerestore)\n| Field         | Description                                    |\n|:---------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------|\n| virtualMachineBackup string   | The name of the VM backup that this VirtualMachineRestore is restoring. The VirtualMachineBackup is in the same namespace as this VirtualMachineRestore. |\n| targetVirtualMachines string array  | The list of all VMs. created when the underlying restore is successful.                     |\n| targetVirtualMachineDisks string array | The list of all VM disks. created when the underlying restore is successful.                    |\n### VirtualMachineRestoreStatus\nDefines the observed state of `VirtualMachineRestore` .\n- [VirtualMachineRestore](#virtualmachinerestore)\n| Field      | Description                                   |\n|:----------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------|\n| restore string    | The name of the underlying restore which this VirtualMachineRestore references. The restore is in the same namespace as this VirtualMachineRestore. |\n| restoreStatus RestoreStatus | The status of the underlying restore which this VirtualMachineRestore references.                 |\n### VirtualMachineSpec\nDefines the specification of the Virtual Machine.\n- [VirtualMachine](#virtualmachine)\n| Field         | Description                                                                |\n|:----------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| runningState VirtualMachineRunningState | Indicates the requested running state of the VirtualMachine. Defaults to Running.                                              |\n| disks DiskAttachment array    | Specifies the list of disks attached to this vm. There must be exactly one boot disk. Changes to disk attachments require a reboot to take effect.                              |\n| compute Compute       | Specifies the CPU and Memory of the VM. CPU and Memory can be defined directly or through the VirtualMachineType. Changes to Compute require a reboot to take effect. Compute is immutable when the VM is in Unknown state.            |\n| startupScripts StartupScript array  | Specifies the list of startup scripts for the VM. StartupScripts only take effect on VMs that have cloud-init installed. They are executed in alphabetical order, based on the name of each startup script.                |\n| guestEnvironment GuestEnvironment  | Specifies the VM's guest environment configuration. If the field is nil the enable field in\u00a0AccessManagement is true by default. Otherwise, the non-nil configuration for each sub-feature inside the structure overrides the default configuration of the sub-feature. |\n| firmware Firmware      | Specifies the VM initialization options at boot time.                                                     |\n### VirtualMachineStatus\nContains the observed state of the Virtual Machine.\n- [VirtualMachine](#virtualmachine)\n| Field                | Description                     |\n|:-------------------------------------------------------------------|:--------------------------------------------------------------------------------------------|\n| state VirtualMachineState           | Observed state of the VM.                 |\n| reason VirtualMachineStateReason         | Reason why the VM is in the observed state. Populated if applicable for the observed state. |\n| message string              | Additional details about the state of the VM.            |\n| network NetworkStatus            | Status of the VM networks.                 |\n| conditions Condition array           | Details of observed state.                 |\n| stateTransitionTime object (keys:VirtualMachineState, values:Time) | Last transition time of each state.               |\n| provisionTime VirtualMachineProvisionTime       | Time taken to provision the VM.                |\n### VirtualMachineType\nDefines the CPU and Memory resource of a VM.\n- [VirtualMachineTypeList](#virtualmachinetypelist)\n| Field      | Description             |\n|:----------------------------|:--------------------------------------------------------------|\n| apiVersion string   | virtualmachine.gdc.goog/v1         |\n| kind string     | VirtualMachineType           |\n| metadata ObjectMeta   | Refer to Kubernetes API documentation for fields of metadata. |\n| spec VirtualMachineTypeSpec | nan               |\n### VirtualMachineTypeList\nVirtualMachineTypeList contains a list of VirtualMachineType.\n| Field       | Description             |\n|:-------------------------------|:--------------------------------------------------------------|\n| apiVersion string    | virtualmachine.gdc.goog/v1         |\n| kind string     | VirtualMachineTypeList          |\n| metadata ListMeta    | Refer to Kubernetes API documentation for fields of metadata. |\n| items VirtualMachineType array | nan               |\n### VirtualMachineTypeSpec\nDefines the configurations of a `VirtualMachineType` .\n- [VirtualMachineType](#virtualmachinetype)\n| Field   | Description                                   |\n|:----------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| vcpus integer | Specifies the number of VCPUs that are available to the instance. Specify vcpus as an integer that is a multiple of 2, between 2 and 128, inclusive. |\n| memory Quantity | Specifies the amount of physical memory available to the instance. memory must have a value that is between 1G and 400G, inclusive.     |", "guide": "Documentation"}