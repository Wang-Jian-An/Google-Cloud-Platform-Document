{"title": "Compute Engine - Troubleshooting sole-tenancy", "url": "https://cloud.google.com/compute/docs/instances", "abstract": "# Compute Engine - Troubleshooting sole-tenancy\nThis page describes how to troubleshoot some potential issues that might occur while using [sole-tenant nodes](/compute/docs/nodes/sole-tenant-nodes) .\n", "content": "## Node group size limitation\n- **Problem** : Size of a node group is limited to 100.- **Solution** : Create multiple node groups and use the same affinity label for each node group. Then, when scheduling VMs on these node groups, use the affinity label you assigned to the node groups.\n## VM scheduling failures\n- **Problem** : Can't schedule a VM on a sole-tenant node.- **Solution** :- You can't schedule a sole-tenant VM if there's no node in the zone that matches the VM's [affinity or anti-affinity](/compute/docs/nodes#node_affinity_and_anti-affinity) specification. Check that you have specified the correct affinity labels. Also, check that you have not specified any conflicting affinity labels.\n- If you are using the restart in place maintenance policy, check that the VM's `OnHostMaintenance` setting is set to `terminate` .\n- If you are using the migrate within node group maintenance policy, check that you are scheduling VMs on a node group, not a specific node or by using an affinity label.\n- Check that the specified node name matches the name of a node in the zone.\n- Check that the specified node group name matches the name of a node group in the zone.\n- You can't schedule a sole-tenant VM if the VM's minimum CPU platform ( `--min-cpu-platform` ) is set to any value other than `AUTOMATIC` .## VM tenancy\n- **Problem** : Can't move a VM to a sole-tenant node.- **Solution** :- A VM instance with a specified [minimum CPUplatform](/compute/docs/instances/specify-min-cpu-platform) can't be moved to a sole-tenant node by updating VM tenancy. To move a VM to a sole-tenant node, [remove the minimum CPU platform specification bysetting it to automatic](/compute/docs/instances/specify-min-cpu-platform) .\n- Because each sole-tenant node uses a [specific CPUplatform](/compute/docs/nodes#node_types) , all VMs running on the node cannot specify a minimum CPU platform. Before you can move a VM to a sole-tenant node by [updating its tenancy](/compute/docs/nodes/updating-vm-tenancy) , you must set the VM's [--min-cpu-platformflag](/sdk/gcloud/reference/compute/instances/update#--min-cpu-platform) to `AUTOMATIC` .## Autoscaling node groups\n- **Problem** : Can't enable the node group autoscaler.- **Solution** : You can only enable the node group autoscaler when you set the node group maintenance policy to the **Default** maintenance policy.\n- **Problem** : Want to retain already reserved nodes with the migrate within node group maintenance policy.- **Solution** : When using the **Migrate within node group** maintenance policy, set the node group autoscaler to only scale out, which adds nodes to the node group when it needs extra capacity.\n- **Problem** : No remaining CPU quota in the region.- **Solution** : Autoscaling might fail if you have no remaining CPU quota in the region, the number of nodes in a group is at the maximum number allowed, or there was a billing issue. Depending on the error, you might need to request an increase in CPU quota or create a new sole-tenant node group.\n## Bringing your own licenses (BYOL)\n- **Problem** : Configuring the restart in-place maintenance policy.- **Solution** : If using the restart in-place maintenance policy, set the VM's`OnHostMaintenanceSetting`to`terminate`.\n- **Problem** : Scheduling VMs on node groups with the migrate within node group maintenance policy.- **Solution** :- Schedule VMs onto a node group, not on a specific node or by using a customized affinity label.\n- Create 2 nodes and enable the autoscaler; otherwise, if you create a node group of size 1, the node is reserved for holdback.## Capacity issues\n- **Problem** : Not enough capacity on a node or in a node group.- **Solution** :- If you reschedule a VM onto a node that is scheduling VMs in parallel, in rare situations there might not be capacity.\n- If you reschedule a VM onto a node in a node group on which you haven't enabled [autoscaling](/compute/docs/nodes/autoscaling-node-groups) , there might not be capacity.\n- If you reschedule a VM onto a node in a node group on which you have enabled autoscaling but have exceeded your CPU quota, there might not be capacity.## CPU overcommit\n- **Problem** : An error indicating that no sole-tenant node group was specified when you set the value for the minimum number of CPUs:```\nInvalid value for field 'resource.scheduling.minNodeCpus': '2'. Node virtual\nCPU count may only be specified for sole-tenant instances.\n```- **Solution** : Specify a sole-tenant node group when setting the value for the minimum number of CPUs\n- **Problem** : An error indicating that the total of the minimum number of CPUs for all sole-tenant VMs on a node is greater than the CPU capacity of the node type.```\nNode virtual CPU count must not be greater than the guest virtual CPU count.\n``````\nNo feasible nodes found for the instance given its node affinities and other\nconstraints.\n```- **Solution** : Specify values for the minimum number of CPUs for each VM so that the total for all VMs does not exceed the number of CPUs specified by the sole-tenant node type.\n- **Problem** : An error indicating that the total number of CPUs specified by the machine types for all VMs on a node is more than twice the minimum number of CPUs specified for all VMs on a node.```\nGuest virtual CPU count must not be greater than [~2.0] times the node\nvirtual CPU count.\n```- **Solution** : Increase the value for the minimum number of CPUs for VMs on this node until the total minimum number of CPUs is greater than or equal to half the value for the total number of CPUs determined by the machine types.\n- **Problem** : An error indicating that the value for the minimum number of CPUs is not an even number greater than or equal to 2.```\nInvalid value for field 'resource.scheduling.minNodeCpus': '3'. Node virtual\nCPU count must be even.\n```- **Solution** : Specify a value for the minimum number of CPUs that is an even number greater than or equal to 2.\n## GPUs\n- **Problem** : An error indicating that instance creation failed because of node property incompatibility.```\nInstance could not be scheduled due to no matching node with property compatibility.\n```- **Solution** : GPU-enabled sole-tenant nodes only support VMs that have GPUs attached. To resolve this issue, [Provision a sole-tenant VM](/compute/docs/nodes/provisioning-sole-tenant-vms#provision_a_sole-tenant_vm) with GPUs.\n## What's next\n- [Provisioning VMs on sole-tenant nodes](/compute/docs/nodes/provisioning-sole-tenant-vms) \n- [Bringing your own licenses](/compute/docs/nodes/bringing-your-own-licenses) \n- [Analyzing sole-tenant node usage](/compute/docs/nodes/determining-server-usage) \n- [Autoscaling node groups](/compute/docs/nodes/autoscaling-node-groups) \n- [Overcommitting CPUs on sole-tenant VMs](/compute/docs/nodes/overcommitting-cpus-sole-tenant-vms) \n- [Updating VM tenancy](/compute/docs/nodes/updating-vm-tenancy)", "guide": "Compute Engine"}