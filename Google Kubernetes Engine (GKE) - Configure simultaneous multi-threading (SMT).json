{"title": "Google Kubernetes Engine (GKE) - Configure simultaneous multi-threading (SMT)", "url": "https://cloud.google.com/kubernetes-engine/docs/concepts/kubernetes-engine-overview", "abstract": "# Google Kubernetes Engine (GKE) - Configure simultaneous multi-threading (SMT)\nThis page shows you how to configure in your Google Kubernetes Engine (GKE) clusters.\n", "content": "## Overview\nGKE [nodes](/kubernetes-engine/docs/concepts/cluster-architecture#nodes) are Compute Engine virtual machine (VM) instances that GKE creates on your behalf. On these VMs, it's common to have [simultaneous multi-threading (SMT)](https://www.wikipedia.org/wiki/Simultaneous_multithreading) enabled by default. SMT is the ability to execute multiple independent threads on a single physical CPU core. With SMT enabled, a single physical core can run two virtual CPUs (vCPUs) as independent, separate threads. For example, an `n2-standard-32` GKE node is, in fact, running 32 vCPUs on 16 physical CPU cores.\nWith the introduction of SMT configurability on GKE nodes, you can now configure SMT so that the number of effective vCPUs is equal to the number of physical cores, which means that your GKE nodes can use the full physical core per vCPU.\n## Benefits\nConfiguring SMT on GKE provides the following benefits.\n### Improved performance\nSome [High Performance Compute (HPC)](/architecture/best-practices-for-using-mpi-on-compute-engine) workloads might see a performance improvement by disabling SMT. Typically, for many general computing tasks or tasks that require lots of I/O, SMT can increase application throughput significantly. In contrast, for compute-bound jobs in which both virtual cores are compute bound, SMT can hinder overall application performance and add nondeterministic variance to jobs. Therefore, with SMT disabled, some HPC applications might get better and more predictable performance.\n**Note:** To definitively understand any performance benefits, we recommend that you run a direct comparison of your workload performance between GKE nodes that have SMT enabled and nodes with SMT disabled.\n### Reduced licensing costs\nSome software licensing agreements have billing models that are tied to the number of vCPUs that are consumed. Disabling SMT reduces the number of vCPUs for each core by half, which might reduce your licensing costs. For more information, consult your licensing agreement.\nSee the [pricing](#pricing) section to understand how Google Cloud bills when SMT is configured.\n## Limitations\n- **Machine types** : SMT is not configurable on [machine types](/compute/docs/machine-types) that have fewer than 2 vCPUs (for example`n1-standard-1`) or on the [Tau T2D machine type](/compute/docs/general-purpose-machines#t2d_machines) .\n- **Node auto-provisioning** : SMT configurability is not supported for clusters that have [node auto-provisioning](/kubernetes-engine/docs/how-to/node-auto-provisioning) enabled.\n- **Cluster autoscaler** : Scaling from zero nodes with SMT configurability is only supported on the [cluster autoscaler](/kubernetes-engine/docs/concepts/cluster-autoscaler) for clusters running GKE version 1.21 or later.\n- **GKE Sandbox** : You can configure SMT settings in GKE Sandbox nodes in GKE Standard clusters running version 1.24.2-gke.300 and later using the`--threads-per-core`flag, and in prior versions using a standalone DaemonSet. For instructions, refer to [GKE Sandbox](/kubernetes-engine/docs/how-to/configure-smt#configure-smt) . Since multithreading is disabled by default in GKE Sandbox before version 1.24.2-gke.300, configuring SMT using`threads-per-core`is not supported. If you use GKE Sandbox and would like to enable SMT, see [SMT may be disabled](/kubernetes-engine/docs/concepts/sandbox-pods#hyper-threading_is_disabled) .\n- **Cluster mode** : SMT configurability is not supported on GKE [Autopilot](/kubernetes-engine/docs/concepts/autopilot-overview) clusters.## Pricing\nSMT for GKE is billed based on the underlying [Compute Engine pricing for SMT](/compute/docs/instances/configuring-simultaneous-multithreading#pricing) . You are billed for the number of vCPUs defined by a VM's [machine type](/compute/docs/machine-types) , not the number of threads that run on each core. Even if you configure SMT, you will continue to be billed for the default number of vCPUs defined by the VM machine type. For more information about how you are billed for VMs, see [VM instance pricing](/compute/vm-instance-pricing) .\nFor example, a GKE node created using the `n2-standard-8` machine type runs with SMT enabled by default, and can run up to 8 vCPUs, which is 2 vCPUs for each of the four physical CPU cores. If you configure SMT to use only one thread per core (effectively 4 vCPUs), you are still billed for 8 vCPUs.\n## Configure SMT\nYou can configure SMT on new clusters or node pools by specifying the number of threads per core.\n**Note:** You cannot update the number of threads per core on existing node pools.\nThe following table shows the possible values for threads per core and the corresponding SMT behavior for the node:\n| Threads per core  | SMT behavior    |\n|:---------------------|:--------------------------|\n| null (not specified) | Compute Engine VM default |\n| 0     | Invalid     |\n| 1     | SMT off     |\n| 2     | SMT on     |\n| > 2     | Invalid     |\n### Configure SMT on a new cluster\nYou can configure SMT on new clusters using the gcloud CLI or the Google Cloud console.\nTo configure SMT, run the following command:\n```\ngcloud container clusters create CLUSTER_NAME \\\u00a0 \u00a0 --machine-type=MACHINE_TYPE \\\u00a0 \u00a0 --threads-per-core=THREADS_PER_CORE\n```\nReplace the following:- ``: the name for the new cluster.\n- ``: the [machine type](/compute/docs/machine-types) to use for your GKE nodes. This must be a machine type with 2 or more vCPUs.\n- ``: the number of threads per physical core. The previous table shows the values you can specify.\nFor a full list of options, refer to the [gcloud container clusters create](/sdk/gcloud/reference/container/clusters/create#--threads-per-core) documentation.- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click **Create** .\n- In the **Create cluster** dialog, next to GKE Standard, click **Configure** .\n- In the navigation menu, in the **Node pools** section, click the name of a node pool, and then click **Nodes** .\n- In the **Machine Configuration** section, select a supported **Machine type** , such as **e2-standard-2** .\n- Click expand_more **CPU Platform and GPU** .\n- From the **vCPUs to core ratio** drop-down menu, select one of the following:- **1 vCPU per core** : turn SMT off.\n- **2 vCPUs per core** : keep SMT on.\n- Configure the cluster and node pools as required, and then click **Create** .\n### Configure SMT on a new node pool\nYou can configure SMT on new node pools using the gcloud CLI or the Google Cloud console.\nTo configure SMT, run the following command:\n```\ngcloud container node-pools create POOL_NAME \\\u00a0 \u00a0 --cluster=CLUSTER_NAME \\\u00a0 \u00a0 --machine-type=MACHINE_TYPE \\\u00a0 \u00a0 --threads-per-core=THREADS_PER_CORE\n```\nReplace the following:- ``: the name for the new node pool.\n- ``: the name of the existing cluster.\n- ``: the [machine type](/compute/docs/machine-types) to use for your GKE nodes. This must be a machine type with 2 or more vCPUs.\n- ``: the number of threads per physical core. The previous table shows the values you can specify.\nFor a full list of options, refer to the [gcloud container clusters create](/sdk/gcloud/reference/container/clusters/create#--threads-per-core) documentation.- Go to the **Google Kubernetes Engine** page in the Google Cloud console. [Go to Google Kubernetes Engine](https://console.cloud.google.com/kubernetes/list) \n- Click the name of the cluster that you want to modify.\n- Click add_box **Add node pool** .\n- In the navigation menu, click **Nodes** .\n- In the **Machine Configuration** section, select a **Machine family** and a **Machine type** that support SMT, such as **n2-standard-2** .\n- Click expand_more **CPU Platform and GPU** .\n- From the **vCPUs to core ratio** drop-down menu, select one of the following options:- **1 vCPU per core** : turn SMT off.\n- **2 vCPUs per core** : keep SMT on.\n- Configure the node pool as needed, and then click **Create** .## Verify the SMT configuration\nTo verify the SMT configuration on Linux nodes, perform the following steps:- SSH into the node:```\ngcloud compute ssh NODE_NAME\n```Replace `` with the name of your node.\n- Check the number of vCPUs:```\ncat /proc/cpuinfo | grep processor | wc -l\n```The output is similar to the following:```\n16\n```If you set the number of threads per core to `1` , the output should show half the Compute Engine VM default number of vCPUs. For example, the output for the `n2-standard-32` with SMT off should be `16` instead of the default value of `32` .\nTo verify the SMT configuration on Windows nodes, perform the following steps:- Set a username and password to RDP to the node:```\ngcloud compute reset-windows-password NODE_NAME\n```Replace `` with the name of your node.\n- Establish a connection to the `` `:3389` for the VM.\n- Run the following powershell command:```\nGet-WmiObject -Class Win32_Processor -ComputerName. | Select-Object -Property [a-z]* | Select NumberOfCores,NumberOfLogicalProcessors\n```If you set the number of threads per core to `1` , the `NumberOfCores` value should be equal to the `NumberOfLogicalProcessors` value, such as in the following example output:```\nOutput (example n1-standard-2 with SMT off)\nNumberOfCores NumberOfLogicalProcessors\n------------- ------------------------   1       1\n```## What's next\n- [Learn about the available machine types.](/compute/docs/machine-types) \n- [Learn how to specify a minimum CPU platform for your GKE nodes.](/kubernetes-engine/docs/how-to/min-cpu-platform) \n- [Learn about using Compute Engine sole-tenant nodes in GKE.](/kubernetes-engine/docs/how-to/sole-tenancy)", "guide": "Google Kubernetes Engine (GKE)"}