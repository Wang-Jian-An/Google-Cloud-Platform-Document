{"title": "Documentation - Storage S3 REST API", "url": "https://cloud.google.com/distributed-cloud/hosted/docs/latest/gdch/overview", "abstract": "# Documentation - Storage S3 REST API\n#", "content": "## GET Bucket (List Objects in Bucket)\nThis operation returns some or all of the objects in a bucket, up to 1,000.\n**Request example:**\n```\nGET /{fully_qualified_bucket_name} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization string\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OK\u00a0 \u00a0 x-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIX\u00a0 \u00a0 x-amz-request-id: B34E94CACB2CEF6D\u00a0 \u00a0 Date: Mon, 17 Oct 2022 22:47:09 GMT\u00a0 \u00a0 <ListBucketResult>\u00a0 \u00a0 \u00a0 \u00a0 <Name>{fully_qualified_bucket_name}</Name>\u00a0 \u00a0 \u00a0 \u00a0 <Prefix></Prefix>\u00a0 \u00a0 \u00a0 \u00a0 <Marker></Marker>\u00a0 \u00a0 \u00a0 \u00a0 <Contents>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Key>example-object.jpg</Key>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <LastModified>2022-10-17T01:56:20.000Z</LastModified>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <ETag>\"bf1d937a4d46a19f3basdfeg5cc8b902\"</ETag>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Size>32347</Size>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Owner>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <ID>canonical-user-id</ID>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <DisplayName>example-display-name</DisplayName>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </Owner>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <StorageClass>STANDARD</StorageClass>\u00a0 \u00a0 \u00a0 \u00a0 </Contents>\u00a0 </ListBucketResult>\n```\n### GET Bucket Versioning\nThis operation uses the versioning subresource to return the versioning state of a bucket:\n- Blank: Versioning has never been enabled and the bucket is Unversioned.\n- Enabled: Versioning is enabled.\n- Suspended: Versioning was previously enabled and is suspended.\n**Request example:**\n```\nGET /{fully_qualified_bucket_name}?versioning HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringX-amz-expected-bucket-owner: ExpectedBucketOwner (optional)\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OK\u00a0 \u00a0 x-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIX\u00a0 \u00a0 x-amz-request-id: B34E94CACB2CEF6D\u00a0 \u00a0 Date: Mon, 17 Oct 2022 22:47:09 GMT\u00a0 <VersioningConfiguration>\u00a0 \u00a0 <Status>Enabled</Status>\u00a0 </VersioningConfiguration>\n```\n### GET Object\nThis operation retrieves an object from a bucket.\n**Request example:**\n```\nGET /{fully_qualified_bucket_name}/{object_name} HTTP/1.1Host: hostContent-MD5: request headerX-Amz-Date: dateX-Amz-Content-SHA256: authorization string\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6DDate: Mon, 17 Oct 2022 22:47:09 GMTETag: \"33a64df551425fcc55e4d42a148795d9f25f89d4\"Content-Length: 13432[13432 bytes of object data]\n```\n### GET Object ACL (versionId optional)\nThis operation returns a positive response and the ID, DisplayName, and Permission of the object owner, indicating that the owner has full access to the object. Access credentials for the account need to be provided for this operation.\n**Request example:**\n```\nGET /{fully_qualified_bucket_name}/{object_name}?acl&versionId={VersionId} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization string\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6DDate: Mon, 17 Oct 2022 22:47:09 GMTContent-Length: 157<AccessControlPolicy>\u00a0 \u00a0 <Owner>\u00a0 \u00a0 \u00a0 \u00a0 <ID>canonical-user-id</ID>\u00a0 \u00a0 \u00a0 \u00a0 <DisplayName>example-display-name</DisplayName>\u00a0 \u00a0 </Owner>\u00a0 \u00a0 <AccessControlList>\u00a0 \u00a0 \u00a0 \u00a0 <Grant>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Grantee>\u00a0 \u00a0 \u00a0 \u00a0 <ID>canonical-user-id</ID>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <DisplayName>example-display-name</DisplayName>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Type>CanonicalUser</Type>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </Grantee>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Permission>FULL_CONTROL</Permission>\u00a0 \u00a0 \u00a0 \u00a0 </Grant></AccessControlList></AccessControlPolicy>\n```\n### GET Object Retention (versionId optional)\nThis operation retrieves the retention mode for the specified object and the date on which the Object Lock Retention expires.\n**Request example:**\n```\nGET /{fully_qualified_bucket_name}/{object_name}?retention&versionId={VersionId} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringX-amz-expected-bucket-owner: ExpectedBucketOwner (optional)\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6DDate: Mon, 17 Oct 2022 22:47:09 GMT<Retention>\u00a0 \u00a0 <Mode>COMPLIANCE</Mode>\u00a0 \u00a0 <Timestamp>2022-10-17T01:56:20.000Z</Timestamp></Retention>\n```\n### GET Object Legal Hold (versionId optional)\nThis operation gets an object's latest legal hold status.\n**Request example:**\n```\nGET /{fully_qualified_bucket_name}/{object_name}?legal-hold&versionId={VersionId} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringX-amz-expected-bucket-owner: ExpectedBucketOwner (optional)\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6DDate: Mon, 17 Oct 2022 22:47:09 GMT<LegalHold>\u00a0 \u00a0 <Status>ON</Status></LegalHold>\n```\n### GET Object Tagging (versionId optional)\nThis operation uses the tagging subresource to return all tags for an object. If the `versionId` parameter is not specified, the operation returns all tags from the most recent version of the object in a versioned bucket. If the current version of the object is a delete marker, a `MethodNotAllowed` status is returned with the `x-amz-deletemarker` response header set to `true` .\n**Request example:**\n```\nGET /{fully_qualified_bucket_name}/{object_name}?tagging&versionId={VersionId} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringX-amz-expected-bucket-owner: ExpectedBucketOwner (optional)\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKDate: Mon, 17 Oct 2022 22:47:09 GMT<Tagging>\u00a0 <TagSet>\u00a0 \u00a0 \u00a0 \u00a0 <Tag>\u00a0 \u00a0 \u00a0 \u00a0 <Key>tag1</Key>\u00a0 \u00a0 \u00a0 \u00a0 <Value>val1</Value>\u00a0 \u00a0 \u00a0 </Tag>\u00a0 \u00a0 \u00a0 <Tag>\u00a0 \u00a0 \u00a0 \u00a0 <Key>tag2</Key>\u00a0 \u00a0 \u00a0 \u00a0 <Value>val2</Value>\u00a0 \u00a0 \u00a0 </Tag>\u00a0 </TagSet></Tagging>\n```\n### PUT Object\nThis operation adds an object to a bucket. You must have the correct WRITE permissions on a bucket to add an object to it.\n**Request example:**\n```\nPUT /{fully_qualified_bucket_name}/{object_name} HTTP/1.1Host: hostContent-MD5: request headerX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-Length: 5233Content-type: text/plain[5233 bytes of object data]\n```\n**Response example (success):**\n```\nHTTP/1.1 100 ContinueHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6CDate: Mon, 17 Oct 2022 22:47:09 GMTETag: \"33a64df551425fcc55e4d42a148795d9f25f89d4\"\n```\n### PUT Object Tagging\nThis operation uses the tagging subresource to add a set of tags to an existing object.\n**Request example:**\n```\nPUT /{fully_qualified_bucket_name}/{object_name}?tagging HTTP/1.1Host: hostContent-MD5: +b9TrAB9F8ne7rJpPkqavQ==X-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-Length: {length}Content-type: text/plain<Tagging>\u00a0 \u00a0 <TagSet>\u00a0 \u00a0 \u00a0 \u00a0 <Tag>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <key>my-tag-key</key>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <value>my-tag-value</value>\u00a0 \u00a0 \u00a0 \u00a0 </Tag>\u00a0 \u00a0 </TagSet></Tagging>\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6CDate: Mon, 17 Oct 2022 22:47:09 GMT\n```\n### DELETE Object (versionId optional)\nThis operation removes all copies of the object from all stored locations.\n**Request example:**\n```\nDELETE /{fully_qualified_bucket_name}/{object_name}?versionId={VersionId} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-type: text/plain\n```\n**Response example (success):**\n```\nHTTP/1.1 204 NoContentx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6CDate: Mon, 17 Oct 2022 22:47:09 GMT\n```\n### DELETE Object Tagging (versionId optional)\nThis operation uses the tagging subresource to remove all tags from an object.\n**Request example:**\n```\nDELETE /{fully_qualified_bucket_name}/{object_name}?tagging&versionId={VersionId} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-type: text/plain\n```\n**Response example (success):**\n```\nHTTP/1.1 204 NoContentx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6CDate: Mon, 17 Oct 2022 22:47:09 GMT\n```\n### Create Multipart Upload\nThis action initiates a multipart upload and returns an upload ID.\nA multipart upload allows you to add a single object as a set of parts. Each part is a contiguous portion of the object's data. Upload these object parts independently and in any order.\nThe returned upload ID is used to associate all of the parts in the specific multipart upload. You specify this upload ID in each of your subsequent upload part requests. You also use this upload ID in the final request to either complete or abort the multipart upload request.\n**Request example:**\n```\nPOST /{fully_qualified_bucket_name}/{object_name}?uploads HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-type: text/plain\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6DDate: Mon, 17 Oct 2022 22:47:09 GMT\u00a0 \u00a0 <InitiateMultipartUploadResult>\u00a0 \u00a0 \u00a0 \u00a0 <Bucket>{fully_qualified_bucket_name}</Bucket>\u00a0 \u00a0 \u00a0 \u00a0 <Key>{object_name}</Key>\u00a0 \u00a0 \u00a0 \u00a0 <UploadId>VXBsb2FkIElEIGZvciA2aWWpbmcncyBteS1tb3ZpZS5tMnRzIHVwbG9hZA</UploadId>\u00a0 </InitiateMultipartUploadResult>\n```\n### List Multipart Uploads (max-uploads optional)\nThis operation lists in-progress multipart uploads for a bucket.\n**Request example:**\n```\nGET /{fully_qualified_bucket_name}?uploads&max-uploads={max-uploads} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-type: text/plain\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6DDate: Mon, 17 Oct 2022 22:47:09 GMT<ListMultipartUploadsResult><Bucket>{fully_qualified_bucket_name}</Bucket><KeyMarker></KeyMarker><UploadIdMarker></UploadIdMarker><NextKeyMarker>my-movie.m2ts</NextKeyMarker>\u00a0 \u00a0 <NextUploadIdMarker>YW55IGlkZWEgd2h5IGVsdmluZydzIHVwbG9hZCBmYWlsZWQ</NextUploadIdMarker>\u00a0 \u00a0 <MaxUploads>3</MaxUploads>\u00a0 \u00a0 <IsTruncated>true</IsTruncated>\u00a0 \u00a0 <Upload>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Key>{object_name}</Key>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <UploadId>VXBsb2FkIElEIGZvciA2aWWpbmcncyBteS1tb3ZpZS5tMnRzIHVwbG9hZA</UploadId>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Initiator>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <ID>{canonical-user-id}</ID>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <DisplayName>InitiatorDisplayName</DisplayName>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </Initiator>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Owner>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <ID>{canonical-owner-user-id}</ID>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <DisplayName>OwnerDisplayName</DisplayName>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </Owner>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <StorageClass>STANDARD</StorageClass>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Initiated>2022-10-17T01:56:20.000Z</Initiated>\u00a0 \u00a0 </Upload></ListMultipartUploadsResult>\n```\n### List Parts of a Multipart Upload (max-parts optional)\nThis operation lists the parts that are uploaded for a specific multipart upload and returns a default maximum of 1,000 uploaded parts. You must include the upload ID, which is obtained with the `CreateMultipartUpload` request.\n**Request example:**\n```\nGET /{fully_qualified_bucket_name}/{object_name}?uploadId={uploadId}&max-parts={max-parts} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-type: text/plain\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6DDate: Mon, 17 Oct 2022 22:47:09 GMT<ListPartsResult>\u00a0 \u00a0 \u00a0 \u00a0 <Bucket>{fully_qualified_bucket_name}</Bucket>\u00a0 \u00a0 \u00a0 \u00a0 <Key>{object_name}</Key>\u00a0 \u00a0 \u00a0 \u00a0 <UploadId>{uploadId}</UploadId>\u00a0 \u00a0 \u00a0 \u00a0 <Initiator>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <ID>{canonical-user-id}</ID>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <DisplayName>InitiatorDisplayName</DisplayName>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </Initiator>\u00a0 \u00a0 \u00a0 \u00a0 <Owner>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <ID>{canonical-owner-id}</ID>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <DisplayName>OwnerDisplayName</DisplayName>\u00a0 \u00a0 \u00a0 \u00a0 </Owner>\u00a0 \u00a0 \u00a0 \u00a0 <StorageClass>STANDARD</StorageClass>\u00a0 \u00a0 \u00a0 \u00a0 <PartNumberMarker></PartNumberMarker>\u00a0 \u00a0 \u00a0 \u00a0 <NextPartNumberMarker></NextPartNumberMarker>\u00a0 \u00a0 \u00a0 \u00a0 <MaxParts>{max-parts}</MaxParts>\u00a0 \u00a0 \u00a0 \u00a0 <IsTruncated>true</IsTruncated>\u00a0 \u00a0 \u00a0 \u00a0 <Part>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <PartNumber>2</PartNumber>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <LastModified>2022-10-17T01:56:20.000Z</LastModified>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <ETag>\"7778aef8t866abc1fa1e8466f296d394\"</ETag>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Size>10485769</Size>\u00a0 \u00a0 \u00a0 \u00a0 </Part>\u00a0 \u00a0 \u00a0 \u00a0 <Part>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <PartNumber>3</PartNumber>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <LastModified>2022-10-17T01:56:20.000Z</LastModified>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <ETag>\"aaab18db4cc2f85cedef854fccci24x8\"</ETag>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <Size>10423760</Size>\u00a0 \u00a0 \u00a0 \u00a0 </Part></ListPartsResult>\n```\n### Upload Part\nThis operation uploads a part in a multipart upload for an object.\n**Request example:**\n```\nPUT /{fully_qualified_bucket_name}/{object_name}?uploadId={uploadId}&partNumber={partNumber} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-Length: 345442Content-MD5: +b9TrAB9F8ne7rJpPkqavQ==[part data omitted, 345442 bytes of part data]\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6DDate: Mon, 17 Oct 2022 22:47:09 GMTETag: \"33a64df551425fcc55e4d42a148795d9f25f89d4\"\n```\n### Abort MultiPart Upload\nThis action aborts a multipart upload and renders the upload ID invalid for uploading any additional parts. The storage consumed by any previously uploaded parts is freed.\n**Request example:**\n```\nDELETE /{fully_qualified_bucket_name}/{object_name}?uploadId={uploadId} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-type: text/plain\n```\n**Response example (success):**\n```\nHTTP/1.1 204 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6CDate: Mon, 17 Oct 2022 22:47:09 GMT\n```\n### Complete MultiPart Upload\nThis operation completes a multipart upload of an object by assembling the previously uploaded parts.\n**Request example:**\n```\nPOST /{fully_qualified_bucket_name}/{object_name}?uploadId={uploadId} HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-Length: 391Content-type: text/plain<CompleteMultipartUpload><Part>\u00a0 \u00a0 <PartNumber>1</PartNumber>\u00a0 \u00a0 <ETag>\"a54357aff0632cce46d942af68356b38\"</ETag></Part><Part>\u00a0 \u00a0 <PartNumber>2</PartNumber>\u00a0 \u00a0 <ETag>\"0c78aef83f66abc1fa1e8477f296d394\"</ETag></Part><Part>\u00a0 \u00a0 \u00a0 <PartNumber>3</PartNumber>\u00a0 \u00a0 \u00a0 <ETag>\"acbd18db4cc2f85cedef654fccc4a4d8\"</ETag></Part></CompleteMultipartUpload>\n```\n**Response example (success):**\n```\nHTTP/1.1 200 OKx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6DDate: Mon, 17 Oct 2022 22:47:09 GMT<CompleteMultipartUploadResult><Location>http://{host}/{fully_qualified_bucket_name}/{object_name}</Location>\u00a0 \u00a0 \u00a0 \u00a0 <Bucket>{fully_qualified_bucket_name}</Bucket>\u00a0 \u00a0 \u00a0 \u00a0 <Key>{object_name}</Key>\u00a0 \u00a0 \u00a0 \u00a0 <ETag>\"acbd18db4cc2f85cedef654fccc4a4d8\"</ETag></CompleteMultipartUploadResult>\n```\n### POST Object Restore\nThis operation restores an archived copy of an object.\n**Request example:**\n```\nPOST /{fully_qualified_bucket_name}/{object_name}?restore HTTP/1.1Host: hostX-Amz-Date: dateX-Amz-Content-SHA256: authorization stringContent-Length: 114<RestoreRequest>\u00a0 \u00a0 <Days>2</Days>\u00a0 \u00a0 <Description>this is an optional description</Description></RestoreRequest>\n```\n**Response example (success):**\n```\nHTTP/1.1 202 Acceptedx-amz-id-2: iVmcB7OXXJRkRH1FiVq1151/T24gRfpwpuZrEG11Bb9ImOMAAe98oxSpXlknabA0LTvBYJpSIXx-amz-request-id: B34E94CACB2CEF6DDate: Mon, 17 Oct 2022 22:47:09 GMT\n```", "guide": "Documentation"}