{"title": "Deep Learning Containers - Get started with a local deep learning container", "url": "https://cloud.google.com/deep-learning-containers/docs/getting-started-local", "abstract": "# Deep Learning Containers - Get started with a local deep learning container\nThis page describes how to create and set up a local deep learning container. This guide expects you to have basic familiarity with [Docker](https://www.docker.com/) .\n", "content": "## Before you begin\nComplete the following steps to set up a Google Cloud account, enable the required APIs, and install and activate the required software.\n- In the Google Cloud Console, go to the **Manage resources** page and select or create a project. **Note:** If you don't plan to keep the resources you create in this tutorial, create a new project instead of selecting an existing project. After you finish, you can delete the project, removing all resources associated with the project and tutorial. [Go to Manageresources](https://console.cloud.google.com/cloud-resource-manager) \n- [Install and initialize the gcloud CLI](/sdk/docs) .\n- [Install Docker](https://docs.docker.com/install/) .If you're using a Linux-based operating system, such as Ubuntu or Debian, add your username to the `docker` group so that you can run Docker without using `sudo` :```\nsudo usermod -a -G docker ${USER}\n``` **Caution:** The `docker` group is equivalent to the `root` user. See [Docker's documentation](https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface) for details on how this affects the security of your system.You may need to restart your system after adding yourself to the `docker` group.\n- Open Docker. To ensure that Docker is running, run the following Docker command, which returns the current time and date:```\ndocker run busybox date\n```\n- Use `gcloud` as the credential helper for Docker:```\ngcloud auth configure-docker\n```\n- **Optional** : If you want to run the container using GPU locally, install [nvidia-docker](https://github.com/NVIDIA/nvidia-docker#quickstart) .## Create your container\nFollow these steps to create your container.\n- To view a list of containers available:```\ngcloud container images list \\\u00a0 --repository=\"gcr.io/deeplearning-platform-release\"\n```You may want to go to [Choosing a container](/deep-learning-containers/docs/choosing-container) to help you select the container that you want.\n- If you don't need to use a GPU-enabled container, enter the following code example. Replace with the name of the container that you want to use.```\ndocker run -d -p 8080:8080 -v /path/to/local/dir:/home/jupyter \\\u00a0 gcr.io/deeplearning-platform-release/tf-cpu.1-13\n```If you want to use a GPU-enabled container, enter the following code example. Replace with the name of the container that you want to use.```\ndocker run --runtime=nvidia -d -p 8080:8080 -v /path/to/local/dir:/home/jupyter \\\u00a0 gcr.io/deeplearning-platform-release/tf-gpu.1-13\n```\nThis command starts up the container in detached mode, mounts the local directory `/path/to/local/dir` to `/home/jupyter` in the container, and maps port 8080 on the container to port 8080 on your local machine. The container is preconfigured to start a JupyterLab server, which you can visit at `http://localhost:8080` .\n## What's next\n- Learn more about how to work with containers in the [Dockerdocumentation](https://docs.docker.com) .", "guide": "Deep Learning Containers"}